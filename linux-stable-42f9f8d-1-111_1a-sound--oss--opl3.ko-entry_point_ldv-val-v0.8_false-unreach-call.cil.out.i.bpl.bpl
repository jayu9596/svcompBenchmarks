var $M.0: [ref]i8;

var $M.1: ref;

var $M.2: [ref]i8;

var $M.3: [ref]i32;

var $M.4: [ref]i32;

var $M.5: [ref]i8;

var $M.6: [ref]i8;

var $M.7: [ref]i32;

var $M.8: [ref]i8;

var $M.9: i32;

var $M.10: i32;

var $M.11: i32;

var $M.12: i32;

var $M.13: i32;

var $M.14: i32;

var $M.15: i32;

var $M.16: i32;

var $CurrAddr: ref;

var assertsPassed: bool;

type i1 = int;

type i5 = int;

type i6 = int;

type i8 = int;

type i16 = int;

type i24 = int;

type i32 = int;

type i40 = int;

type i48 = int;

type i56 = int;

type i64 = int;

type i80 = int;

type i88 = int;

type i96 = int;

type i128 = int;

type i160 = int;

type i256 = int;

type ref = i64;

type float;

const $0: i32;

axiom $0 == 0;

const $1: i32;

axiom $1 == 1;

const $0.ref: ref;

axiom $0.ref == 0;

const $1.ref: ref;

axiom $1.ref == 1;

const $2.ref: ref;

axiom $2.ref == 2;

const $3.ref: ref;

axiom $3.ref == 3;

const $4.ref: ref;

axiom $4.ref == 4;

const $5.ref: ref;

axiom $5.ref == 5;

const $6.ref: ref;

axiom $6.ref == 6;

const $7.ref: ref;

axiom $7.ref == 7;

const $8.ref: ref;

axiom $8.ref == 8;

const $9.ref: ref;

axiom $9.ref == 9;

const $10.ref: ref;

axiom $10.ref == 10;

const $11.ref: ref;

axiom $11.ref == 11;

const $12.ref: ref;

axiom $12.ref == 12;

const $13.ref: ref;

axiom $13.ref == 13;

const $14.ref: ref;

axiom $14.ref == 14;

const $1024.ref: ref;

axiom $1024.ref == 1024;

axiom $GLOBALS_BOTTOM == $sub.ref(0, 157365);

axiom $EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792));

axiom $MALLOC_TOP == 9223372036854775807;

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) : bv64;

function {:builtin "bv2int"} $bv2int.64(i: bv64) : i64;

function {:inline} $p2i.ref.i8(p: ref) : i8
{
  $trunc.i64.i8(p)
}

function {:inline} $i2p.i8.ref(i: i8) : ref
{
  $zext.i8.i64(i)
}

function {:inline} $p2i.ref.i16(p: ref) : i16
{
  $trunc.i64.i16(p)
}

function {:inline} $i2p.i16.ref(i: i16) : ref
{
  $zext.i16.i64(i)
}

function {:inline} $p2i.ref.i32(p: ref) : i32
{
  $trunc.i64.i32(p)
}

function {:inline} $i2p.i32.ref(i: i32) : ref
{
  $zext.i32.i64(i)
}

function {:inline} $p2i.ref.i64(p: ref) : i64
{
  p
}

function {:inline} $i2p.i64.ref(i: i64) : ref
{
  i
}

function {:inline} $eq.ref(p1: ref, p2: ref) : i1
{
  (if $eq.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $eq.ref.bool(p1: ref, p2: ref) : bool
{
  $eq.i64.bool(p1, p2)
}

function {:inline} $ne.ref(p1: ref, p2: ref) : i1
{
  (if $ne.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ne.ref.bool(p1: ref, p2: ref) : bool
{
  $ne.i64.bool(p1, p2)
}

function {:inline} $ugt.ref(p1: ref, p2: ref) : i1
{
  (if $ugt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ugt.ref.bool(p1: ref, p2: ref) : bool
{
  $ugt.i64.bool(p1, p2)
}

function {:inline} $uge.ref(p1: ref, p2: ref) : i1
{
  (if $uge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $uge.ref.bool(p1: ref, p2: ref) : bool
{
  $uge.i64.bool(p1, p2)
}

function {:inline} $ult.ref(p1: ref, p2: ref) : i1
{
  (if $ult.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ult.ref.bool(p1: ref, p2: ref) : bool
{
  $ult.i64.bool(p1, p2)
}

function {:inline} $ule.ref(p1: ref, p2: ref) : i1
{
  (if $ule.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ule.ref.bool(p1: ref, p2: ref) : bool
{
  $ule.i64.bool(p1, p2)
}

function {:inline} $sgt.ref(p1: ref, p2: ref) : i1
{
  (if $sgt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sgt.ref.bool(p1: ref, p2: ref) : bool
{
  $sgt.i64.bool(p1, p2)
}

function {:inline} $sge.ref(p1: ref, p2: ref) : i1
{
  (if $sge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sge.ref.bool(p1: ref, p2: ref) : bool
{
  $sge.i64.bool(p1, p2)
}

function {:inline} $slt.ref(p1: ref, p2: ref) : i1
{
  (if $slt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $slt.ref.bool(p1: ref, p2: ref) : bool
{
  $slt.i64.bool(p1, p2)
}

function {:inline} $sle.ref(p1: ref, p2: ref) : i1
{
  (if $sle.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sle.ref.bool(p1: ref, p2: ref) : bool
{
  $sle.i64.bool(p1, p2)
}

function {:inline} $add.ref(p1: ref, p2: ref) : ref
{
  $add.i64(p1, p2)
}

function {:inline} $sub.ref(p1: ref, p2: ref) : ref
{
  $sub.i64(p1, p2)
}

function {:inline} $mul.ref(p1: ref, p2: ref) : ref
{
  $mul.i64(p1, p2)
}

const LDV_IN_INTERRUPT: ref;

axiom LDV_IN_INTERRUPT == $sub.ref(0, 1028);

const ldv_state_variable_1: ref;

axiom ldv_state_variable_1 == $sub.ref(0, 2056);

const ref_cnt: ref;

axiom ref_cnt == $sub.ref(0, 3084);

const ldv_state_variable_0: ref;

axiom ldv_state_variable_0 == $sub.ref(0, 4112);

const ldv_retval_0: ref;

axiom ldv_retval_0 == $sub.ref(0, 5140);

const ldv_retval_1: ref;

axiom ldv_retval_1 == $sub.ref(0, 6168);

const opl3_operations: ref;

axiom opl3_operations == $sub.ref(0, 9888);

const detected_model: ref;

axiom detected_model == $sub.ref(0, 10916);

const me: ref;

axiom me == $sub.ref(0, 11944);

const io: ref;

axiom io == $sub.ref(0, 12972);

const {:count 128} fm_volume_table: ref;

axiom fm_volume_table == $sub.ref(0, 14124);

const {:count 18} pv_map: ref;

axiom pv_map == $sub.ref(0, 15292);

const devc: ref;

axiom devc == $sub.ref(0, 16324);

const __this_module: ref;

axiom __this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776));

const {:count 4} .str.19: ref;

axiom .str.19 == $sub.ref(0, 17352);

const synth_devs: ref;

axiom synth_devs == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784));

const {:count 37} .str.6: ref;

axiom .str.6 == $sub.ref(0, 18413);

const {:count 43} .str.1: ref;

axiom .str.1 == $sub.ref(0, 19480);

const {:count 54} .str.4: ref;

axiom .str.4 == $sub.ref(0, 20558);

const {:count 169} .str.2: ref;

axiom .str.2 == $sub.ref(0, 21751);

const {:count 27} .str.3: ref;

axiom .str.3 == $sub.ref(0, 22802);

const {:count 58} .str.5: ref;

axiom .str.5 == $sub.ref(0, 23884);

const .str: ref;

axiom .str == $sub.ref(0, 24981);

const {:count 83} .str.7: ref;

axiom .str.7 == $sub.ref(0, 26088);

const {:count 52} .str.14: ref;

axiom .str.14 == $sub.ref(0, 27164);

const {:count 32} .str.15: ref;

axiom .str.15 == $sub.ref(0, 28220);

const {:count 20} .str.16: ref;

axiom .str.16 == $sub.ref(0, 29264);

const {:count 12} .str.17: ref;

axiom .str.17 == $sub.ref(0, 30300);

const {:count 12} .str.18: ref;

axiom .str.18 == $sub.ref(0, 31336);

const {:count 35} .str.8: ref;

axiom .str.8 == $sub.ref(0, 32395);

const {:count 67} .str.9: ref;

axiom .str.9 == $sub.ref(0, 33486);

const {:count 5} .str.10: ref;

axiom .str.10 == $sub.ref(0, 34515);

const ioport_resource: ref;

axiom ioport_resource == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792));

const {:count 39} .str.11: ref;

axiom .str.11 == $sub.ref(0, 35578);

const {:count 25} .str.12: ref;

axiom .str.12 == $sub.ref(0, 36627);

const {:count 5} .str.13: ref;

axiom .str.13 == $sub.ref(0, 37656);

const env_value_str: ref;

axiom env_value_str == $sub.ref(0, 38688);

const {:count 3} .str.1.50: ref;

axiom .str.1.50 == $sub.ref(0, 39715);

const {:count 14} .str.388: ref;

axiom .str.388 == $sub.ref(0, 40753);

const errno_global: ref;

axiom errno_global == $sub.ref(0, 41781);

const __kmalloc: ref;

axiom __kmalloc == $sub.ref(0, 42813);

procedure __kmalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation __kmalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 0} {:cexpr "__kmalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 1} {:cexpr "__kmalloc:arg:t"} boogie_si_record_i32($i1);
    goto corral_source_split_1;

  corral_source_split_1:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2} $p2 := ldv_malloc($i0);
    goto corral_source_split_2;

  corral_source_split_2:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const llvm.dbg.declare: ref;

axiom llvm.dbg.declare == $sub.ref(0, 43845);

procedure llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);



const ldv_malloc: ref;

axiom ldv_malloc == $sub.ref(0, 44877);

procedure ldv_malloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation ldv_malloc($i0: i64) returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 3} {:cexpr "ldv_malloc:arg:size"} boogie_si_record_i64($i0);
    goto corral_source_split_4;

  corral_source_split_4:
    assume {:verifier.code 1} true;
    call {:si_unique_call 4} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 5} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    call {:si_unique_call 6} {:cexpr "tmp___0"} boogie_si_record_i32($i1);
    goto corral_source_split_5;

  corral_source_split_5:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, 0);
    goto corral_source_split_6;

  corral_source_split_6:
    assume {:verifier.code 0} true;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    goto corral_source_split_10;

  corral_source_split_10:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7} $p4 := malloc($i0);
    goto corral_source_split_11;

  corral_source_split_11:
    assume {:verifier.code 1} true;
    $i5 := $p2i.ref.i64($p4);
    goto corral_source_split_12;

  corral_source_split_12:
    assume {:verifier.code 1} true;
    $i6 := $ne.i64($i5, 0);
    goto corral_source_split_13;

  corral_source_split_13:
    assume {:verifier.code 1} true;
    $i7 := $zext.i1.i32($i6);
    goto corral_source_split_14;

  corral_source_split_14:
    assume {:verifier.code 1} true;
    call {:si_unique_call 8} __VERIFIER_assume($i7);
    goto corral_source_split_15;

  corral_source_split_15:
    assume {:verifier.code 0} true;
    $p3 := $p4;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_17;

  corral_source_split_17:
    assume {:verifier.code 0} true;
    $r := $p3;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_8;

  corral_source_split_8:
    assume {:verifier.code 0} true;
    $p3 := $0.ref;
    goto $bb3;
}



const malloc: ref;

axiom malloc == $sub.ref(0, 45909);

procedure malloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation malloc($i0: i64) returns ($r: ref)
{

  anon0:
    call {:si_unique_call 9} $r := $malloc($i0);
    return;
}



const opl3_open: ref;

axiom opl3_open == $sub.ref(0, 46941);

procedure opl3_open($i0: i32, $i1: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation opl3_open($i0: i32, $i1: i32) returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $p44: ref;
  var $i45: i8;
  var $i46: i32;
  var $i6: i32;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $p174: ref;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p216: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10} {:cexpr "opl3_open:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 11} {:cexpr "opl3_open:arg:mode"} boogie_si_record_i32($i1);
    goto corral_source_split_19;

  corral_source_split_19:
    assume {:verifier.code 0} true;
    $p2 := $M.1;
    goto corral_source_split_20;

  corral_source_split_20:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p2, $mul.ref(0, 11656)), $mul.ref(11636, 1));
    goto corral_source_split_21;

  corral_source_split_21:
    assume {:verifier.code 0} true;
    $i4 := $load.i32($M.0, $p3);
    goto corral_source_split_22;

  corral_source_split_22:
    assume {:verifier.code 0} true;
    $i5 := $ne.i32($i4, 0);
    goto corral_source_split_23;

  corral_source_split_23:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $p7 := $M.1;
    goto corral_source_split_29;

  corral_source_split_29:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p7, $mul.ref(0, 11656)), $mul.ref(11636, 1));
    goto corral_source_split_30;

  corral_source_split_30:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p8, 1);
    goto corral_source_split_31;

  corral_source_split_31:
    assume {:verifier.code 0} true;
    $p9 := $M.1;
    goto corral_source_split_32;

  corral_source_split_32:
    assume {:verifier.code 0} true;
    $p10 := $add.ref($add.ref($p9, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_33;

  corral_source_split_33:
    assume {:verifier.code 0} true;
    $i11 := $load.i32($M.0, $p10);
    goto corral_source_split_34;

  corral_source_split_34:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i11, 2);
    goto corral_source_split_35;

  corral_source_split_35:
    assume {:verifier.code 0} true;
    $i13 := (if $i12 == 1 then 18 else 9);
    call {:si_unique_call 12} {:cexpr "tmp"} boogie_si_record_i32($i13);
    goto corral_source_split_36;

  corral_source_split_36:
    assume {:verifier.code 0} true;
    $p14 := $M.1;
    goto corral_source_split_37;

  corral_source_split_37:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($p14, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_38;

  corral_source_split_38:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p15, $i13);
    goto corral_source_split_39;

  corral_source_split_39:
    assume {:verifier.code 0} true;
    $p16 := $M.1;
    goto corral_source_split_40;

  corral_source_split_40:
    assume {:verifier.code 0} true;
    $p17 := $add.ref($add.ref($p16, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_41;

  corral_source_split_41:
    assume {:verifier.code 0} true;
    $p18 := $load.ref($M.0, $p17);
    goto corral_source_split_42;

  corral_source_split_42:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p18, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_43;

  corral_source_split_43:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p19, $i13);
    goto corral_source_split_44;

  corral_source_split_44:
    assume {:verifier.code 0} true;
    $p20 := $M.1;
    goto corral_source_split_45;

  corral_source_split_45:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($add.ref($p20, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_46;

  corral_source_split_46:
    assume {:verifier.code 0} true;
    $p22 := $load.ref($M.0, $p21);
    goto corral_source_split_47;

  corral_source_split_47:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($p22, $mul.ref(0, 208)), $mul.ref(76, 1));
    goto corral_source_split_48;

  corral_source_split_48:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p23, 0);
    goto corral_source_split_49;

  corral_source_split_49:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $p24 := $M.1;
    goto corral_source_split_51;

  corral_source_split_51:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p24, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_52;

  corral_source_split_52:
    assume {:verifier.code 0} true;
    $p26 := $load.ref($M.0, $p25);
    goto corral_source_split_53;

  corral_source_split_53:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($add.ref($p26, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(0, 2));
    goto corral_source_split_54;

  corral_source_split_54:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p28, 0);
    goto corral_source_split_55;

  corral_source_split_55:
    assume {:verifier.code 0} true;
    $p29 := $M.1;
    goto corral_source_split_56;

  corral_source_split_56:
    assume {:verifier.code 0} true;
    $p30 := $add.ref($add.ref($p29, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_57;

  corral_source_split_57:
    assume {:verifier.code 0} true;
    $p31 := $load.ref($M.0, $p30);
    goto corral_source_split_58;

  corral_source_split_58:
    assume {:verifier.code 0} true;
    $p33 := $add.ref($add.ref($add.ref($p31, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(0, 4));
    goto corral_source_split_59;

  corral_source_split_59:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p33, 0);
    goto corral_source_split_60;

  corral_source_split_60:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $p47 := $M.1;
    goto corral_source_split_62;

  corral_source_split_62:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($add.ref($p47, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_63;

  corral_source_split_63:
    assume {:verifier.code 0} true;
    $p49 := $load.ref($M.0, $p48);
    goto corral_source_split_64;

  corral_source_split_64:
    assume {:verifier.code 0} true;
    $p51 := $add.ref($add.ref($add.ref($p49, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(1, 2));
    goto corral_source_split_65;

  corral_source_split_65:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p51, 0);
    goto corral_source_split_66;

  corral_source_split_66:
    assume {:verifier.code 0} true;
    $p52 := $M.1;
    goto corral_source_split_67;

  corral_source_split_67:
    assume {:verifier.code 0} true;
    $p53 := $add.ref($add.ref($p52, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_68;

  corral_source_split_68:
    assume {:verifier.code 0} true;
    $p54 := $load.ref($M.0, $p53);
    goto corral_source_split_69;

  corral_source_split_69:
    assume {:verifier.code 0} true;
    $p56 := $add.ref($add.ref($add.ref($p54, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(1, 4));
    goto corral_source_split_70;

  corral_source_split_70:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p56, 0);
    goto corral_source_split_71;

  corral_source_split_71:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $p57 := $M.1;
    goto corral_source_split_91;

  corral_source_split_91:
    assume {:verifier.code 0} true;
    $p58 := $add.ref($add.ref($p57, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_92;

  corral_source_split_92:
    assume {:verifier.code 0} true;
    $p59 := $load.ref($M.0, $p58);
    goto corral_source_split_93;

  corral_source_split_93:
    assume {:verifier.code 0} true;
    $p61 := $add.ref($add.ref($add.ref($p59, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(2, 2));
    goto corral_source_split_94;

  corral_source_split_94:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p61, 0);
    goto corral_source_split_95;

  corral_source_split_95:
    assume {:verifier.code 0} true;
    $p62 := $M.1;
    goto corral_source_split_96;

  corral_source_split_96:
    assume {:verifier.code 0} true;
    $p63 := $add.ref($add.ref($p62, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_97;

  corral_source_split_97:
    assume {:verifier.code 0} true;
    $p64 := $load.ref($M.0, $p63);
    goto corral_source_split_98;

  corral_source_split_98:
    assume {:verifier.code 0} true;
    $p66 := $add.ref($add.ref($add.ref($p64, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(2, 4));
    goto corral_source_split_99;

  corral_source_split_99:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p66, 0);
    goto corral_source_split_100;

  corral_source_split_100:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $p67 := $M.1;
    goto corral_source_split_102;

  corral_source_split_102:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p67, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_103;

  corral_source_split_103:
    assume {:verifier.code 0} true;
    $p69 := $load.ref($M.0, $p68);
    goto corral_source_split_104;

  corral_source_split_104:
    assume {:verifier.code 0} true;
    $p71 := $add.ref($add.ref($add.ref($p69, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(3, 2));
    goto corral_source_split_105;

  corral_source_split_105:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p71, 0);
    goto corral_source_split_106;

  corral_source_split_106:
    assume {:verifier.code 0} true;
    $p72 := $M.1;
    goto corral_source_split_107;

  corral_source_split_107:
    assume {:verifier.code 0} true;
    $p73 := $add.ref($add.ref($p72, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_108;

  corral_source_split_108:
    assume {:verifier.code 0} true;
    $p74 := $load.ref($M.0, $p73);
    goto corral_source_split_109;

  corral_source_split_109:
    assume {:verifier.code 0} true;
    $p76 := $add.ref($add.ref($add.ref($p74, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(3, 4));
    goto corral_source_split_110;

  corral_source_split_110:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p76, 0);
    goto corral_source_split_111;

  corral_source_split_111:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $p77 := $M.1;
    goto corral_source_split_113;

  corral_source_split_113:
    assume {:verifier.code 0} true;
    $p78 := $add.ref($add.ref($p77, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_114;

  corral_source_split_114:
    assume {:verifier.code 0} true;
    $p79 := $load.ref($M.0, $p78);
    goto corral_source_split_115;

  corral_source_split_115:
    assume {:verifier.code 0} true;
    $p81 := $add.ref($add.ref($add.ref($p79, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(4, 2));
    goto corral_source_split_116;

  corral_source_split_116:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p81, 0);
    goto corral_source_split_117;

  corral_source_split_117:
    assume {:verifier.code 0} true;
    $p82 := $M.1;
    goto corral_source_split_118;

  corral_source_split_118:
    assume {:verifier.code 0} true;
    $p83 := $add.ref($add.ref($p82, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_119;

  corral_source_split_119:
    assume {:verifier.code 0} true;
    $p84 := $load.ref($M.0, $p83);
    goto corral_source_split_120;

  corral_source_split_120:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($add.ref($p84, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(4, 4));
    goto corral_source_split_121;

  corral_source_split_121:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p86, 0);
    goto corral_source_split_122;

  corral_source_split_122:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $p87 := $M.1;
    goto corral_source_split_124;

  corral_source_split_124:
    assume {:verifier.code 0} true;
    $p88 := $add.ref($add.ref($p87, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_125;

  corral_source_split_125:
    assume {:verifier.code 0} true;
    $p89 := $load.ref($M.0, $p88);
    goto corral_source_split_126;

  corral_source_split_126:
    assume {:verifier.code 0} true;
    $p91 := $add.ref($add.ref($add.ref($p89, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(5, 2));
    goto corral_source_split_127;

  corral_source_split_127:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p91, 0);
    goto corral_source_split_128;

  corral_source_split_128:
    assume {:verifier.code 0} true;
    $p92 := $M.1;
    goto corral_source_split_129;

  corral_source_split_129:
    assume {:verifier.code 0} true;
    $p93 := $add.ref($add.ref($p92, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_130;

  corral_source_split_130:
    assume {:verifier.code 0} true;
    $p94 := $load.ref($M.0, $p93);
    goto corral_source_split_131;

  corral_source_split_131:
    assume {:verifier.code 0} true;
    $p96 := $add.ref($add.ref($add.ref($p94, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(5, 4));
    goto corral_source_split_132;

  corral_source_split_132:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p96, 0);
    goto corral_source_split_133;

  corral_source_split_133:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    $p97 := $M.1;
    goto corral_source_split_135;

  corral_source_split_135:
    assume {:verifier.code 0} true;
    $p98 := $add.ref($add.ref($p97, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_136;

  corral_source_split_136:
    assume {:verifier.code 0} true;
    $p99 := $load.ref($M.0, $p98);
    goto corral_source_split_137;

  corral_source_split_137:
    assume {:verifier.code 0} true;
    $p101 := $add.ref($add.ref($add.ref($p99, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(6, 2));
    goto corral_source_split_138;

  corral_source_split_138:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p101, 0);
    goto corral_source_split_139;

  corral_source_split_139:
    assume {:verifier.code 0} true;
    $p102 := $M.1;
    goto corral_source_split_140;

  corral_source_split_140:
    assume {:verifier.code 0} true;
    $p103 := $add.ref($add.ref($p102, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_141;

  corral_source_split_141:
    assume {:verifier.code 0} true;
    $p104 := $load.ref($M.0, $p103);
    goto corral_source_split_142;

  corral_source_split_142:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($add.ref($p104, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(6, 4));
    goto corral_source_split_143;

  corral_source_split_143:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p106, 0);
    goto corral_source_split_144;

  corral_source_split_144:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $p107 := $M.1;
    goto corral_source_split_146;

  corral_source_split_146:
    assume {:verifier.code 0} true;
    $p108 := $add.ref($add.ref($p107, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_147;

  corral_source_split_147:
    assume {:verifier.code 0} true;
    $p109 := $load.ref($M.0, $p108);
    goto corral_source_split_148;

  corral_source_split_148:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($add.ref($p109, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(7, 2));
    goto corral_source_split_149;

  corral_source_split_149:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p111, 0);
    goto corral_source_split_150;

  corral_source_split_150:
    assume {:verifier.code 0} true;
    $p112 := $M.1;
    goto corral_source_split_151;

  corral_source_split_151:
    assume {:verifier.code 0} true;
    $p113 := $add.ref($add.ref($p112, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_152;

  corral_source_split_152:
    assume {:verifier.code 0} true;
    $p114 := $load.ref($M.0, $p113);
    goto corral_source_split_153;

  corral_source_split_153:
    assume {:verifier.code 0} true;
    $p116 := $add.ref($add.ref($add.ref($p114, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(7, 4));
    goto corral_source_split_154;

  corral_source_split_154:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p116, 0);
    goto corral_source_split_155;

  corral_source_split_155:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $p117 := $M.1;
    goto corral_source_split_157;

  corral_source_split_157:
    assume {:verifier.code 0} true;
    $p118 := $add.ref($add.ref($p117, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_158;

  corral_source_split_158:
    assume {:verifier.code 0} true;
    $p119 := $load.ref($M.0, $p118);
    goto corral_source_split_159;

  corral_source_split_159:
    assume {:verifier.code 0} true;
    $p121 := $add.ref($add.ref($add.ref($p119, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(8, 2));
    goto corral_source_split_160;

  corral_source_split_160:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p121, 0);
    goto corral_source_split_161;

  corral_source_split_161:
    assume {:verifier.code 0} true;
    $p122 := $M.1;
    goto corral_source_split_162;

  corral_source_split_162:
    assume {:verifier.code 0} true;
    $p123 := $add.ref($add.ref($p122, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_163;

  corral_source_split_163:
    assume {:verifier.code 0} true;
    $p124 := $load.ref($M.0, $p123);
    goto corral_source_split_164;

  corral_source_split_164:
    assume {:verifier.code 0} true;
    $p126 := $add.ref($add.ref($add.ref($p124, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(8, 4));
    goto corral_source_split_165;

  corral_source_split_165:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p126, 0);
    goto corral_source_split_166;

  corral_source_split_166:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $p127 := $M.1;
    goto corral_source_split_168;

  corral_source_split_168:
    assume {:verifier.code 0} true;
    $p128 := $add.ref($add.ref($p127, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_169;

  corral_source_split_169:
    assume {:verifier.code 0} true;
    $p129 := $load.ref($M.0, $p128);
    goto corral_source_split_170;

  corral_source_split_170:
    assume {:verifier.code 0} true;
    $p131 := $add.ref($add.ref($add.ref($p129, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(9, 2));
    goto corral_source_split_171;

  corral_source_split_171:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p131, 0);
    goto corral_source_split_172;

  corral_source_split_172:
    assume {:verifier.code 0} true;
    $p132 := $M.1;
    goto corral_source_split_173;

  corral_source_split_173:
    assume {:verifier.code 0} true;
    $p133 := $add.ref($add.ref($p132, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_174;

  corral_source_split_174:
    assume {:verifier.code 0} true;
    $p134 := $load.ref($M.0, $p133);
    goto corral_source_split_175;

  corral_source_split_175:
    assume {:verifier.code 0} true;
    $p136 := $add.ref($add.ref($add.ref($p134, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(9, 4));
    goto corral_source_split_176;

  corral_source_split_176:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p136, 0);
    goto corral_source_split_177;

  corral_source_split_177:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $p137 := $M.1;
    goto corral_source_split_179;

  corral_source_split_179:
    assume {:verifier.code 0} true;
    $p138 := $add.ref($add.ref($p137, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_180;

  corral_source_split_180:
    assume {:verifier.code 0} true;
    $p139 := $load.ref($M.0, $p138);
    goto corral_source_split_181;

  corral_source_split_181:
    assume {:verifier.code 0} true;
    $p141 := $add.ref($add.ref($add.ref($p139, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(10, 2));
    goto corral_source_split_182;

  corral_source_split_182:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p141, 0);
    goto corral_source_split_183;

  corral_source_split_183:
    assume {:verifier.code 0} true;
    $p142 := $M.1;
    goto corral_source_split_184;

  corral_source_split_184:
    assume {:verifier.code 0} true;
    $p143 := $add.ref($add.ref($p142, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_185;

  corral_source_split_185:
    assume {:verifier.code 0} true;
    $p144 := $load.ref($M.0, $p143);
    goto corral_source_split_186;

  corral_source_split_186:
    assume {:verifier.code 0} true;
    $p146 := $add.ref($add.ref($add.ref($p144, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(10, 4));
    goto corral_source_split_187;

  corral_source_split_187:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p146, 0);
    goto corral_source_split_188;

  corral_source_split_188:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $p147 := $M.1;
    goto corral_source_split_190;

  corral_source_split_190:
    assume {:verifier.code 0} true;
    $p148 := $add.ref($add.ref($p147, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_191;

  corral_source_split_191:
    assume {:verifier.code 0} true;
    $p149 := $load.ref($M.0, $p148);
    goto corral_source_split_192;

  corral_source_split_192:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($add.ref($add.ref($p149, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(11, 2));
    goto corral_source_split_193;

  corral_source_split_193:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p151, 0);
    goto corral_source_split_194;

  corral_source_split_194:
    assume {:verifier.code 0} true;
    $p152 := $M.1;
    goto corral_source_split_195;

  corral_source_split_195:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($add.ref($p152, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_196;

  corral_source_split_196:
    assume {:verifier.code 0} true;
    $p154 := $load.ref($M.0, $p153);
    goto corral_source_split_197;

  corral_source_split_197:
    assume {:verifier.code 0} true;
    $p156 := $add.ref($add.ref($add.ref($p154, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(11, 4));
    goto corral_source_split_198;

  corral_source_split_198:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p156, 0);
    goto corral_source_split_199;

  corral_source_split_199:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $p157 := $M.1;
    goto corral_source_split_201;

  corral_source_split_201:
    assume {:verifier.code 0} true;
    $p158 := $add.ref($add.ref($p157, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_202;

  corral_source_split_202:
    assume {:verifier.code 0} true;
    $p159 := $load.ref($M.0, $p158);
    goto corral_source_split_203;

  corral_source_split_203:
    assume {:verifier.code 0} true;
    $p161 := $add.ref($add.ref($add.ref($p159, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(12, 2));
    goto corral_source_split_204;

  corral_source_split_204:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p161, 0);
    goto corral_source_split_205;

  corral_source_split_205:
    assume {:verifier.code 0} true;
    $p162 := $M.1;
    goto corral_source_split_206;

  corral_source_split_206:
    assume {:verifier.code 0} true;
    $p163 := $add.ref($add.ref($p162, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_207;

  corral_source_split_207:
    assume {:verifier.code 0} true;
    $p164 := $load.ref($M.0, $p163);
    goto corral_source_split_208;

  corral_source_split_208:
    assume {:verifier.code 0} true;
    $p166 := $add.ref($add.ref($add.ref($p164, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(12, 4));
    goto corral_source_split_209;

  corral_source_split_209:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p166, 0);
    goto corral_source_split_210;

  corral_source_split_210:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $p167 := $M.1;
    goto corral_source_split_212;

  corral_source_split_212:
    assume {:verifier.code 0} true;
    $p168 := $add.ref($add.ref($p167, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_213;

  corral_source_split_213:
    assume {:verifier.code 0} true;
    $p169 := $load.ref($M.0, $p168);
    goto corral_source_split_214;

  corral_source_split_214:
    assume {:verifier.code 0} true;
    $p171 := $add.ref($add.ref($add.ref($p169, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(13, 2));
    goto corral_source_split_215;

  corral_source_split_215:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p171, 0);
    goto corral_source_split_216;

  corral_source_split_216:
    assume {:verifier.code 0} true;
    $p172 := $M.1;
    goto corral_source_split_217;

  corral_source_split_217:
    assume {:verifier.code 0} true;
    $p173 := $add.ref($add.ref($p172, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_218;

  corral_source_split_218:
    assume {:verifier.code 0} true;
    $p174 := $load.ref($M.0, $p173);
    goto corral_source_split_219;

  corral_source_split_219:
    assume {:verifier.code 0} true;
    $p176 := $add.ref($add.ref($add.ref($p174, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(13, 4));
    goto corral_source_split_220;

  corral_source_split_220:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p176, 0);
    goto corral_source_split_221;

  corral_source_split_221:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $p177 := $M.1;
    goto corral_source_split_223;

  corral_source_split_223:
    assume {:verifier.code 0} true;
    $p178 := $add.ref($add.ref($p177, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_224;

  corral_source_split_224:
    assume {:verifier.code 0} true;
    $p179 := $load.ref($M.0, $p178);
    goto corral_source_split_225;

  corral_source_split_225:
    assume {:verifier.code 0} true;
    $p181 := $add.ref($add.ref($add.ref($p179, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(14, 2));
    goto corral_source_split_226;

  corral_source_split_226:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p181, 0);
    goto corral_source_split_227;

  corral_source_split_227:
    assume {:verifier.code 0} true;
    $p182 := $M.1;
    goto corral_source_split_228;

  corral_source_split_228:
    assume {:verifier.code 0} true;
    $p183 := $add.ref($add.ref($p182, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_229;

  corral_source_split_229:
    assume {:verifier.code 0} true;
    $p184 := $load.ref($M.0, $p183);
    goto corral_source_split_230;

  corral_source_split_230:
    assume {:verifier.code 0} true;
    $p186 := $add.ref($add.ref($add.ref($p184, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(14, 4));
    goto corral_source_split_231;

  corral_source_split_231:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p186, 0);
    goto corral_source_split_232;

  corral_source_split_232:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $p187 := $M.1;
    goto corral_source_split_234;

  corral_source_split_234:
    assume {:verifier.code 0} true;
    $p188 := $add.ref($add.ref($p187, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_235;

  corral_source_split_235:
    assume {:verifier.code 0} true;
    $p189 := $load.ref($M.0, $p188);
    goto corral_source_split_236;

  corral_source_split_236:
    assume {:verifier.code 0} true;
    $p191 := $add.ref($add.ref($add.ref($p189, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(15, 2));
    goto corral_source_split_237;

  corral_source_split_237:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p191, 0);
    goto corral_source_split_238;

  corral_source_split_238:
    assume {:verifier.code 0} true;
    $p192 := $M.1;
    goto corral_source_split_239;

  corral_source_split_239:
    assume {:verifier.code 0} true;
    $p193 := $add.ref($add.ref($p192, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_240;

  corral_source_split_240:
    assume {:verifier.code 0} true;
    $p194 := $load.ref($M.0, $p193);
    goto corral_source_split_241;

  corral_source_split_241:
    assume {:verifier.code 0} true;
    $p196 := $add.ref($add.ref($add.ref($p194, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(15, 4));
    goto corral_source_split_242;

  corral_source_split_242:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p196, 0);
    goto corral_source_split_243;

  corral_source_split_243:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $p197 := $M.1;
    goto corral_source_split_245;

  corral_source_split_245:
    assume {:verifier.code 0} true;
    $p198 := $add.ref($add.ref($p197, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_246;

  corral_source_split_246:
    assume {:verifier.code 0} true;
    $p199 := $load.ref($M.0, $p198);
    goto corral_source_split_247;

  corral_source_split_247:
    assume {:verifier.code 0} true;
    $p201 := $add.ref($add.ref($add.ref($p199, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(16, 2));
    goto corral_source_split_248;

  corral_source_split_248:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p201, 0);
    goto corral_source_split_249;

  corral_source_split_249:
    assume {:verifier.code 0} true;
    $p202 := $M.1;
    goto corral_source_split_250;

  corral_source_split_250:
    assume {:verifier.code 0} true;
    $p203 := $add.ref($add.ref($p202, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_251;

  corral_source_split_251:
    assume {:verifier.code 0} true;
    $p204 := $load.ref($M.0, $p203);
    goto corral_source_split_252;

  corral_source_split_252:
    assume {:verifier.code 0} true;
    $p206 := $add.ref($add.ref($add.ref($p204, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(16, 4));
    goto corral_source_split_253;

  corral_source_split_253:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p206, 0);
    goto corral_source_split_254;

  corral_source_split_254:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $p207 := $M.1;
    goto corral_source_split_256;

  corral_source_split_256:
    assume {:verifier.code 0} true;
    $p208 := $add.ref($add.ref($p207, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_257;

  corral_source_split_257:
    assume {:verifier.code 0} true;
    $p209 := $load.ref($M.0, $p208);
    goto corral_source_split_258;

  corral_source_split_258:
    assume {:verifier.code 0} true;
    $p211 := $add.ref($add.ref($add.ref($p209, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(17, 2));
    goto corral_source_split_259;

  corral_source_split_259:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p211, 0);
    goto corral_source_split_260;

  corral_source_split_260:
    assume {:verifier.code 0} true;
    $p212 := $M.1;
    goto corral_source_split_261;

  corral_source_split_261:
    assume {:verifier.code 0} true;
    $p213 := $add.ref($add.ref($p212, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_262;

  corral_source_split_262:
    assume {:verifier.code 0} true;
    $p214 := $load.ref($M.0, $p213);
    goto corral_source_split_263;

  corral_source_split_263:
    assume {:verifier.code 0} true;
    $p216 := $add.ref($add.ref($add.ref($p214, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(17, 4));
    goto corral_source_split_264;

  corral_source_split_264:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p216, 0);
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $p34 := $M.1;
    goto corral_source_split_73;

  corral_source_split_73:
    assume {:verifier.code 0} true;
    $p35 := $add.ref($add.ref($p34, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_74;

  corral_source_split_74:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p35, 0);
    goto corral_source_split_75;

  corral_source_split_75:
    assume {:verifier.code 0} true;
    $p36 := $M.1;
    goto corral_source_split_76;

  corral_source_split_76:
    assume {:verifier.code 0} true;
    $p37 := $add.ref($add.ref($p36, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_77;

  corral_source_split_77:
    assume {:verifier.code 0} true;
    $i38 := $load.i32($M.0, $p37);
    goto corral_source_split_78;

  corral_source_split_78:
    assume {:verifier.code 0} true;
    $i39 := $eq.i32($i38, 2);
    goto corral_source_split_79;

  corral_source_split_79:
    assume {:verifier.code 0} true;
    assume {:branchcond $i39} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i6 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_27;

  corral_source_split_27:
    assume {:verifier.code 0} true;
    $r := $i6;
    return;

  $bb9:
    assume $i39 == 1;
    goto corral_source_split_81;

  corral_source_split_81:
    assume {:verifier.code 0} true;
    $p40 := $M.1;
    goto corral_source_split_82;

  corral_source_split_82:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($add.ref($p40, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_83;

  corral_source_split_83:
    assume {:verifier.code 0} true;
    $i42 := $load.i32($M.0, $p41);
    goto corral_source_split_84;

  corral_source_split_84:
    assume {:verifier.code 0} true;
    $p43 := $M.1;
    goto corral_source_split_85;

  corral_source_split_85:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($p43, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_86;

  corral_source_split_86:
    assume {:verifier.code 0} true;
    $i45 := $load.i8($M.0, $p44);
    goto corral_source_split_87;

  corral_source_split_87:
    assume {:verifier.code 0} true;
    $i46 := $zext.i8.i32($i45);
    goto corral_source_split_88;

  corral_source_split_88:
    assume {:verifier.code 0} true;
    call {:si_unique_call 13} opl3_command($i42, 4, $i46);
    goto corral_source_split_89;

  corral_source_split_89:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_25;

  corral_source_split_25:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 16);
    goto $bb3;
}



const opl3_close: ref;

axiom opl3_close == $sub.ref(0, 47973);

procedure opl3_close($i0: i32);
  free requires assertsPassed;
  modifies $M.0, $M.2;



implementation opl3_close($i0: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p16: ref;
  var $p17: ref;
  var $p19: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 14} {:cexpr "opl3_close:arg:dev"} boogie_si_record_i32($i0);
    goto corral_source_split_266;

  corral_source_split_266:
    assume {:verifier.code 0} true;
    $p1 := $M.1;
    goto corral_source_split_267;

  corral_source_split_267:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p1, $mul.ref(0, 11656)), $mul.ref(11636, 1));
    goto corral_source_split_268;

  corral_source_split_268:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p2, 0);
    goto corral_source_split_269;

  corral_source_split_269:
    assume {:verifier.code 0} true;
    $p3 := $M.1;
    goto corral_source_split_270;

  corral_source_split_270:
    assume {:verifier.code 0} true;
    $p4 := $add.ref($add.ref($p3, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_271;

  corral_source_split_271:
    assume {:verifier.code 0} true;
    $i5 := $load.i32($M.0, $p4);
    goto corral_source_split_272;

  corral_source_split_272:
    assume {:verifier.code 0} true;
    $i6 := $eq.i32($i5, 2);
    goto corral_source_split_273;

  corral_source_split_273:
    assume {:verifier.code 0} true;
    $i7 := (if $i6 == 1 then 18 else 9);
    call {:si_unique_call 15} {:cexpr "tmp"} boogie_si_record_i32($i7);
    goto corral_source_split_274;

  corral_source_split_274:
    assume {:verifier.code 0} true;
    $p8 := $M.1;
    goto corral_source_split_275;

  corral_source_split_275:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($add.ref($p8, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_276;

  corral_source_split_276:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p9, $i7);
    goto corral_source_split_277;

  corral_source_split_277:
    assume {:verifier.code 0} true;
    $p10 := $M.1;
    goto corral_source_split_278;

  corral_source_split_278:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p10, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_279;

  corral_source_split_279:
    assume {:verifier.code 0} true;
    $p12 := $load.ref($M.0, $p11);
    goto corral_source_split_280;

  corral_source_split_280:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref($p12, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_281;

  corral_source_split_281:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p13, $i7);
    goto corral_source_split_282;

  corral_source_split_282:
    assume {:verifier.code 0} true;
    $p14 := $M.1;
    goto corral_source_split_283;

  corral_source_split_283:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($add.ref($p14, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(52, 1));
    goto corral_source_split_284;

  corral_source_split_284:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p16, 0);
    goto corral_source_split_285;

  corral_source_split_285:
    assume {:verifier.code 0} true;
    $p17 := $M.1;
    goto corral_source_split_286;

  corral_source_split_286:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($add.ref($p17, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(44, 1));
    goto corral_source_split_287;

  corral_source_split_287:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p19, 0);
    goto corral_source_split_288;

  corral_source_split_288:
    assume {:verifier.code 0} true;
    call {:si_unique_call 16} opl3_reset($i0);
    goto corral_source_split_289;

  corral_source_split_289:
    assume {:verifier.code 0} true;
    return;
}



const opl3_ioctl: ref;

axiom opl3_ioctl == $sub.ref(0, 49005);

procedure opl3_ioctl($i0: i32, $i1: i32, $p2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.7, $M.2, $CurrAddr, assertsPassed;



implementation opl3_ioctl($i0: i32, $i1: i32, $p2: ref) returns ($r: i32)
{
  var $p3: ref;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $p25: ref;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $p36: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $i47: i1;
  var $i15: i32;
  var vslice_dummy_var_10: i32;
  var vslice_dummy_var_11: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 17} $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 18} {:cexpr "opl3_ioctl:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 19} {:cexpr "opl3_ioctl:arg:cmd"} boogie_si_record_i32($i1);
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 0} true;
    $i4 := $slt.i32($i1, 1074024719);
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb2, $bb3;

  $bb3:
    assume !($i4 == 1);
    assume {:verifier.code 0} true;
    $i5 := $slt.i32($i1, 1076384007);
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    $i6 := $eq.i32($i1, 1076384007);
    assume {:verifier.code 0} true;
    assume {:branchcond $i6} true;
    goto $bb6, $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    assume !($i6 == 1);
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 22);
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    goto corral_source_split_313;

  corral_source_split_313:
    assume {:verifier.code 0} true;
    $r := $i15;
    return;

  $bb6:
    assume $i6 == 1;
    goto corral_source_split_291;

  corral_source_split_291:
    assume {:verifier.code 0} true;
    call {:si_unique_call 20} vslice_dummy_var_10 := printk.ref(.str);
    goto corral_source_split_292;

  corral_source_split_292:
    assume {:verifier.code 0} true;
    $p12 := $bitcast.ref.ref($p3);
    goto corral_source_split_293;

  corral_source_split_293:
    assume {:verifier.code 0} true;
    call {:si_unique_call 21} $i13 := ldv_copy_from_user_7($p12, $p2, 40);
    goto SeqInstr_1, SeqInstr_2;

  SeqInstr_2:
    assume assertsPassed;
    goto SeqInstr_3;

  SeqInstr_3:
    call {:si_unique_call 22} {:cexpr "tmp"} boogie_si_record_i64($i13);
    goto corral_source_split_294;

  corral_source_split_294:
    assume {:verifier.code 0} true;
    $i14 := $ne.i64($i13, 0);
    goto corral_source_split_295;

  corral_source_split_295:
    assume {:verifier.code 0} true;
    assume {:branchcond $i14} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i14 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_315;

  corral_source_split_315:
    assume {:verifier.code 0} true;
    $i17 := $load.i32($M.0, $p16);
    goto corral_source_split_316;

  corral_source_split_316:
    assume {:verifier.code 0} true;
    $i18 := $slt.i32($i17, 0);
    goto corral_source_split_317;

  corral_source_split_317:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb21, $bb23;

  $bb23:
    assume !($i18 == 1);
    goto corral_source_split_323;

  corral_source_split_323:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_324;

  corral_source_split_324:
    assume {:verifier.code 0} true;
    $i20 := $load.i32($M.0, $p19);
    goto corral_source_split_325;

  corral_source_split_325:
    assume {:verifier.code 0} true;
    $i21 := $sgt.i32($i20, 255);
    goto corral_source_split_326;

  corral_source_split_326:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i21 == 1);
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_328;

  corral_source_split_328:
    assume {:verifier.code 0} true;
    $i26 := $load.i32($M.0, $p25);
    goto corral_source_split_329;

  corral_source_split_329:
    assume {:verifier.code 0} true;
    call {:si_unique_call 24} $i27 := store_instr($i26, $p3);
    call {:si_unique_call 25} {:cexpr "tmp___0"} boogie_si_record_i32($i27);
    goto corral_source_split_330;

  corral_source_split_330:
    assume {:verifier.code 0} true;
    $i15 := $i27;
    goto $bb19;

  $bb24:
    assume {:verifier.code 0} true;
    assume $i21 == 1;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_319;

  corral_source_split_319:
    assume {:verifier.code 0} true;
    $i23 := $load.i32($M.0, $p22);
    goto corral_source_split_320;

  corral_source_split_320:
    assume {:verifier.code 0} true;
    call {:si_unique_call 23} vslice_dummy_var_11 := printk.ref.i32(.str.1, $i23);
    goto corral_source_split_321;

  corral_source_split_321:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 22);
    goto $bb19;

  $bb21:
    assume {:verifier.code 0} true;
    assume $i18 == 1;
    goto $bb22;

  $bb17:
    assume $i14 == 1;
    goto corral_source_split_311;

  corral_source_split_311:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 14);
    goto $bb19;

  SeqInstr_1:
    assume !assertsPassed;
    return;

  $bb4:
    assume $i5 == 1;
    assume {:verifier.code 0} true;
    $i7 := $eq.i32($i1, 1074024719);
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb9, $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    assume !($i7 == 1);
    goto $bb8;

  $bb9:
    assume $i7 == 1;
    goto corral_source_split_297;

  corral_source_split_297:
    assume {:verifier.code 0} true;
    $p44 := $M.1;
    goto corral_source_split_298;

  corral_source_split_298:
    assume {:verifier.code 0} true;
    $p45 := $add.ref($add.ref($p44, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_299;

  corral_source_split_299:
    assume {:verifier.code 0} true;
    $i46 := $load.i32($M.0, $p45);
    goto corral_source_split_300;

  corral_source_split_300:
    assume {:verifier.code 0} true;
    $i47 := $eq.i32($i46, 2);
    goto corral_source_split_301;

  corral_source_split_301:
    assume {:verifier.code 0} true;
    assume {:branchcond $i47} true;
    goto $bb33, $bb34;

  $bb34:
    assume !($i47 == 1);
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $i15 := 0;
    goto $bb19;

  $bb33:
    assume $i47 == 1;
    goto corral_source_split_351;

  corral_source_split_351:
    assume {:verifier.code 0} true;
    call {:si_unique_call 28} enter_4op_mode();
    goto corral_source_split_352;

  corral_source_split_352:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb2:
    assume $i4 == 1;
    assume {:verifier.code 0} true;
    $i8 := $slt.i32($i1, $sub.i32(0, 1064546046));
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $eq.i32($i1, $sub.i32(0, 1064546046));
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb13, $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    assume !($i9 == 1);
    goto $bb8;

  $bb13:
    assume $i9 == 1;
    goto corral_source_split_303;

  corral_source_split_303:
    assume {:verifier.code 0} true;
    $p28 := $M.1;
    goto corral_source_split_304;

  corral_source_split_304:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($add.ref($p28, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_305;

  corral_source_split_305:
    assume {:verifier.code 0} true;
    $i30 := $load.i32($M.0, $p29);
    goto corral_source_split_306;

  corral_source_split_306:
    assume {:verifier.code 0} true;
    $i31 := $ne.i32($i30, 12);
    goto corral_source_split_307;

  corral_source_split_307:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i31 == 1);
    goto corral_source_split_337;

  corral_source_split_337:
    assume {:verifier.code 0} true;
    $i35 := 6;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_339;

  corral_source_split_339:
    assume {:verifier.code 0} true;
    $p36 := $M.1;
    goto corral_source_split_340;

  corral_source_split_340:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($add.ref($p36, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(48, 1));
    goto corral_source_split_341;

  corral_source_split_341:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p38, $i35);
    goto corral_source_split_342;

  corral_source_split_342:
    assume {:verifier.code 0} true;
    $p39 := $M.1;
    goto corral_source_split_343;

  corral_source_split_343:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p39, $mul.ref(0, 11656)), $mul.ref(11496, 1));
    goto corral_source_split_344;

  corral_source_split_344:
    assume {:verifier.code 0} true;
    $p41 := $bitcast.ref.ref($p40);
    goto corral_source_split_345;

  corral_source_split_345:
    assume {:verifier.code 0} true;
    call {:si_unique_call 26} $i42 := copy_to_user($p2, $p41, 140);
    goto SeqInstr_4, SeqInstr_5;

  SeqInstr_5:
    assume assertsPassed;
    goto SeqInstr_6;

  SeqInstr_6:
    call {:si_unique_call 27} {:cexpr "tmp___1"} boogie_si_record_i32($i42);
    goto corral_source_split_346;

  corral_source_split_346:
    assume {:verifier.code 0} true;
    $i43 := $ne.i32($i42, 0);
    goto corral_source_split_347;

  corral_source_split_347:
    assume {:verifier.code 0} true;
    assume {:branchcond $i43} true;
    goto $bb30, $bb31;

  $bb31:
    assume !($i43 == 1);
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $i15 := 0;
    goto $bb19;

  $bb30:
    assume $i43 == 1;
    goto corral_source_split_349;

  corral_source_split_349:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 14);
    goto $bb19;

  SeqInstr_4:
    assume !assertsPassed;
    return;

  $bb27:
    assume $i31 == 1;
    goto corral_source_split_332;

  corral_source_split_332:
    assume {:verifier.code 0} true;
    $p32 := $M.1;
    goto corral_source_split_333;

  corral_source_split_333:
    assume {:verifier.code 0} true;
    $p33 := $add.ref($add.ref($p32, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_334;

  corral_source_split_334:
    assume {:verifier.code 0} true;
    $i34 := $load.i32($M.0, $p33);
    goto corral_source_split_335;

  corral_source_split_335:
    assume {:verifier.code 0} true;
    $i35 := $i34;
    goto $bb29;

  $bb11:
    assume $i8 == 1;
    assume {:verifier.code 0} true;
    $i10 := $eq.i32($i1, $sub.i32(0, 1073458930));
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb15, $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    assume !($i10 == 1);
    goto $bb8;

  $bb15:
    assume $i10 == 1;
    goto corral_source_split_309;

  corral_source_split_309:
    assume {:verifier.code 0} true;
    $i15 := 2147483647;
    goto $bb19;
}



const opl3_kill_note: ref;

axiom opl3_kill_note == $sub.ref(0, 50037);

procedure opl3_kill_note($i0: i32, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation opl3_kill_note($i0: i32, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32)
{
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i64;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i16;
  var $i28: i32;
  var $p29: ref;
  var $i30: i8;
  var $i31: i32;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $p37: ref;
  var $i38: i8;
  var $i39: i32;
  var $i40: i32;
  var $i41: i64;
  var $p42: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p50: ref;
  var $i51: i64;
  var $p52: ref;
  var $p55: ref;
  var $i56: i64;
  var $p57: ref;
  var $p60: ref;
  var $i61: i64;
  var $p62: ref;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $p70: ref;
  var $i71: i64;
  var $p72: ref;
  var $p75: ref;
  var $i76: i64;
  var $p77: ref;
  var $p80: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 29} {:cexpr "opl3_kill_note:arg:devno"} boogie_si_record_i32($i0);
    call {:si_unique_call 30} {:cexpr "opl3_kill_note:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 31} {:cexpr "opl3_kill_note:arg:note"} boogie_si_record_i32($i2);
    call {:si_unique_call 32} {:cexpr "opl3_kill_note:arg:velocity"} boogie_si_record_i32($i3);
    goto corral_source_split_354;

  corral_source_split_354:
    assume {:verifier.code 0} true;
    $i4 := $slt.i32($i1, 0);
    goto corral_source_split_355;

  corral_source_split_355:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i4 == 1);
    goto corral_source_split_357;

  corral_source_split_357:
    assume {:verifier.code 0} true;
    $p5 := $M.1;
    goto corral_source_split_358;

  corral_source_split_358:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p5, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_359;

  corral_source_split_359:
    assume {:verifier.code 0} true;
    $i7 := $load.i32($M.0, $p6);
    goto corral_source_split_360;

  corral_source_split_360:
    assume {:verifier.code 0} true;
    $i8 := $sle.i32($i7, $i1);
    goto corral_source_split_361;

  corral_source_split_361:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i9 := $sext.i32.i64($i1);
    goto corral_source_split_363;

  corral_source_split_363:
    assume {:verifier.code 0} true;
    $p10 := $M.1;
    goto corral_source_split_364;

  corral_source_split_364:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p10, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_365;

  corral_source_split_365:
    assume {:verifier.code 0} true;
    $p12 := $load.ref($M.0, $p11);
    goto corral_source_split_366;

  corral_source_split_366:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($add.ref($p12, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref($i9, 2));
    goto corral_source_split_367;

  corral_source_split_367:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p14, 0);
    goto corral_source_split_368;

  corral_source_split_368:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i1);
    goto corral_source_split_369;

  corral_source_split_369:
    assume {:verifier.code 0} true;
    $p16 := $M.1;
    goto corral_source_split_370;

  corral_source_split_370:
    assume {:verifier.code 0} true;
    $p18 := $add.ref($add.ref($add.ref($p16, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i15, 4));
    goto corral_source_split_371;

  corral_source_split_371:
    assume {:verifier.code 0} true;
    $i19 := $load.i32($M.0, $p18);
    goto corral_source_split_372;

  corral_source_split_372:
    assume {:verifier.code 0} true;
    $i20 := $sext.i32.i64($i19);
    $p22 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i20, 8)), $mul.ref(1, 1));
    goto corral_source_split_373;

  corral_source_split_373:
    assume {:verifier.code 0} true;
    $i23 := $load.i8($M.2, $p22);
    goto corral_source_split_374;

  corral_source_split_374:
    assume {:verifier.code 0} true;
    $i24 := $zext.i8.i32($i23);
    goto corral_source_split_375;

  corral_source_split_375:
    assume {:verifier.code 0} true;
    $i25 := $eq.i32($i24, 0);
    goto corral_source_split_376;

  corral_source_split_376:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i25 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    $p26 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i20, 8)), $mul.ref(2, 1));
    goto corral_source_split_380;

  corral_source_split_380:
    assume {:verifier.code 0} true;
    $i27 := $load.i16($M.2, $p26);
    goto corral_source_split_381;

  corral_source_split_381:
    assume {:verifier.code 0} true;
    $i28 := $zext.i16.i32($i27);
    $p29 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i20, 8)), $mul.ref(0, 1));
    goto corral_source_split_382;

  corral_source_split_382:
    assume {:verifier.code 0} true;
    $i30 := $load.i8($M.2, $p29);
    goto corral_source_split_383;

  corral_source_split_383:
    assume {:verifier.code 0} true;
    $i31 := $zext.i8.i32($i30);
    goto corral_source_split_384;

  corral_source_split_384:
    assume {:verifier.code 0} true;
    $i32 := $add.i32($i31, 176);
    goto corral_source_split_385;

  corral_source_split_385:
    assume {:verifier.code 0} true;
    $i33 := $sext.i32.i64($i1);
    goto corral_source_split_386;

  corral_source_split_386:
    assume {:verifier.code 0} true;
    $p34 := $M.1;
    goto corral_source_split_387;

  corral_source_split_387:
    assume {:verifier.code 0} true;
    $p37 := $add.ref($add.ref($add.ref($add.ref($p34, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i33, 56)), $mul.ref(0, 1));
    goto corral_source_split_388;

  corral_source_split_388:
    assume {:verifier.code 0} true;
    $i38 := $load.i8($M.0, $p37);
    goto corral_source_split_389;

  corral_source_split_389:
    assume {:verifier.code 0} true;
    $i39 := $zext.i8.i32($i38);
    goto corral_source_split_390;

  corral_source_split_390:
    assume {:verifier.code 0} true;
    $i40 := $and.i32($i39, $sub.i32(0, 33));
    goto corral_source_split_391;

  corral_source_split_391:
    assume {:verifier.code 0} true;
    call {:si_unique_call 33} opl3_command($i28, $i32, $i40);
    goto corral_source_split_392;

  corral_source_split_392:
    assume {:verifier.code 0} true;
    $i41 := $sext.i32.i64($i1);
    goto corral_source_split_393;

  corral_source_split_393:
    assume {:verifier.code 0} true;
    $p42 := $M.1;
    goto corral_source_split_394;

  corral_source_split_394:
    assume {:verifier.code 0} true;
    $p45 := $add.ref($add.ref($add.ref($add.ref($p42, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i41, 56)), $mul.ref(0, 1));
    goto corral_source_split_395;

  corral_source_split_395:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p45, 0);
    goto corral_source_split_396;

  corral_source_split_396:
    assume {:verifier.code 0} true;
    $i46 := $sext.i32.i64($i1);
    goto corral_source_split_397;

  corral_source_split_397:
    assume {:verifier.code 0} true;
    $p47 := $M.1;
    goto corral_source_split_398;

  corral_source_split_398:
    assume {:verifier.code 0} true;
    $p50 := $add.ref($add.ref($add.ref($add.ref($p47, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i46, 56)), $mul.ref(8, 1));
    goto corral_source_split_399;

  corral_source_split_399:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p50, 0);
    goto corral_source_split_400;

  corral_source_split_400:
    assume {:verifier.code 0} true;
    $i51 := $sext.i32.i64($i1);
    goto corral_source_split_401;

  corral_source_split_401:
    assume {:verifier.code 0} true;
    $p52 := $M.1;
    goto corral_source_split_402;

  corral_source_split_402:
    assume {:verifier.code 0} true;
    $p55 := $add.ref($add.ref($add.ref($add.ref($p52, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i51, 56)), $mul.ref(40, 1));
    goto corral_source_split_403;

  corral_source_split_403:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p55, 64);
    goto corral_source_split_404;

  corral_source_split_404:
    assume {:verifier.code 0} true;
    $i56 := $sext.i32.i64($i1);
    goto corral_source_split_405;

  corral_source_split_405:
    assume {:verifier.code 0} true;
    $p57 := $M.1;
    goto corral_source_split_406;

  corral_source_split_406:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($add.ref($add.ref($p57, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i56, 56)), $mul.ref(48, 1));
    goto corral_source_split_407;

  corral_source_split_407:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p60, 65535);
    goto corral_source_split_408;

  corral_source_split_408:
    assume {:verifier.code 0} true;
    $i61 := $sext.i32.i64($i1);
    goto corral_source_split_409;

  corral_source_split_409:
    assume {:verifier.code 0} true;
    $p62 := $M.1;
    goto corral_source_split_410;

  corral_source_split_410:
    assume {:verifier.code 0} true;
    $p65 := $add.ref($add.ref($add.ref($add.ref($p62, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i61, 56)), $mul.ref(16, 1));
    goto corral_source_split_411;

  corral_source_split_411:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p65, 200);
    goto corral_source_split_412;

  corral_source_split_412:
    assume {:verifier.code 0} true;
    $i66 := $sext.i32.i64($i1);
    goto corral_source_split_413;

  corral_source_split_413:
    assume {:verifier.code 0} true;
    $p67 := $M.1;
    goto corral_source_split_414;

  corral_source_split_414:
    assume {:verifier.code 0} true;
    $p70 := $add.ref($add.ref($add.ref($add.ref($p67, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i66, 56)), $mul.ref(24, 1));
    goto corral_source_split_415;

  corral_source_split_415:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p70, 0);
    goto corral_source_split_416;

  corral_source_split_416:
    assume {:verifier.code 0} true;
    $i71 := $sext.i32.i64($i1);
    goto corral_source_split_417;

  corral_source_split_417:
    assume {:verifier.code 0} true;
    $p72 := $M.1;
    goto corral_source_split_418;

  corral_source_split_418:
    assume {:verifier.code 0} true;
    $p75 := $add.ref($add.ref($add.ref($add.ref($p72, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i71, 56)), $mul.ref(32, 1));
    goto corral_source_split_419;

  corral_source_split_419:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p75, 0);
    goto corral_source_split_420;

  corral_source_split_420:
    assume {:verifier.code 0} true;
    $i76 := $sext.i32.i64($i1);
    goto corral_source_split_421;

  corral_source_split_421:
    assume {:verifier.code 0} true;
    $p77 := $M.1;
    goto corral_source_split_422;

  corral_source_split_422:
    assume {:verifier.code 0} true;
    $p80 := $add.ref($add.ref($add.ref($add.ref($p77, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i76, 56)), $mul.ref(44, 1));
    goto corral_source_split_423;

  corral_source_split_423:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p80, 0);
    goto corral_source_split_424;

  corral_source_split_424:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb8:
    assume $i25 == 1;
    goto corral_source_split_378;

  corral_source_split_378:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i8 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i4 == 1;
    goto $bb2;
}



const opl3_start_note: ref;

axiom opl3_start_note == $sub.ref(0, 51069);

procedure opl3_start_note($i0: i32, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.5, $M.3, $M.4, $CurrAddr;



implementation opl3_start_note($i0: i32, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i64;
  var $p12: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $i18: i64;
  var $p19: ref;
  var $p22: ref;
  var $i23: i32;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $i28: i1;
  var $i29: i64;
  var $p30: ref;
  var $p33: ref;
  var $i34: i32;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i32;
  var $p43: ref;
  var $i44: i16;
  var $i45: i32;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $p51: ref;
  var $i52: i8;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i16;
  var $i57: i32;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $i64: i16;
  var $i65: i32;
  var $p67: ref;
  var $i68: i8;
  var $i69: i32;
  var $i70: i32;
  var $p71: ref;
  var $i72: i16;
  var $i73: i32;
  var $p74: ref;
  var $i75: i8;
  var $i76: i32;
  var $i77: i32;
  var $i78: i64;
  var $p79: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i64;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i1;
  var $p93: ref;
  var $i94: i8;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $i98: i16;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i1;
  var $p105: ref;
  var $i106: i16;
  var $i107: i32;
  var $p108: ref;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $i112: i32;
  var $p113: ref;
  var $i114: i8;
  var $i115: i32;
  var $i116: i32;
  var $p117: ref;
  var $i118: i16;
  var $i119: i32;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $i123: i8;
  var $i124: i32;
  var $i125: i32;
  var $i126: i8;
  var $i127: i32;
  var $i128: i32;
  var $i129: i32;
  var $i130: i8;
  var $p131: ref;
  var $p132: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $i137: i32;
  var $i138: i32;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i8;
  var $p143: ref;
  var $p144: ref;
  var $i133: i32;
  var $p145: ref;
  var $p146: ref;
  var $i147: i32;
  var $p148: ref;
  var $p149: ref;
  var $i150: i8;
  var $i151: i32;
  var $i152: i32;
  var $p153: ref;
  var $i154: i16;
  var $i155: i32;
  var $p157: ref;
  var $i158: i8;
  var $i159: i32;
  var $i160: i32;
  var $p162: ref;
  var $i163: i8;
  var $i164: i32;
  var $p165: ref;
  var $i166: i16;
  var $i167: i32;
  var $p169: ref;
  var $i170: i8;
  var $i171: i32;
  var $i172: i32;
  var $p174: ref;
  var $i175: i8;
  var $i176: i32;
  var $p177: ref;
  var $i178: i16;
  var $i179: i32;
  var $p181: ref;
  var $i182: i8;
  var $i183: i32;
  var $i184: i32;
  var $p186: ref;
  var $i187: i8;
  var $i188: i32;
  var $p189: ref;
  var $i190: i16;
  var $i191: i32;
  var $p193: ref;
  var $i194: i8;
  var $i195: i32;
  var $i196: i32;
  var $p198: ref;
  var $i199: i8;
  var $i200: i32;
  var $p201: ref;
  var $i202: i16;
  var $i203: i32;
  var $p205: ref;
  var $i206: i8;
  var $i207: i32;
  var $i208: i32;
  var $p210: ref;
  var $i211: i8;
  var $i212: i32;
  var $p213: ref;
  var $i214: i16;
  var $i215: i32;
  var $p217: ref;
  var $i218: i8;
  var $i219: i32;
  var $i220: i32;
  var $p222: ref;
  var $i223: i8;
  var $i224: i32;
  var $p225: ref;
  var $i226: i16;
  var $i227: i32;
  var $p229: ref;
  var $i230: i8;
  var $i231: i32;
  var $i232: i32;
  var $p234: ref;
  var $i235: i8;
  var $i236: i32;
  var $p237: ref;
  var $i238: i16;
  var $i239: i32;
  var $p241: ref;
  var $i242: i8;
  var $i243: i32;
  var $i244: i32;
  var $p246: ref;
  var $i247: i8;
  var $i248: i32;
  var $p250: ref;
  var $i251: i8;
  var $i252: i1;
  var $i253: i32;
  var $i254: i32;
  var $i255: i8;
  var $i256: i1;
  var $i257: i32;
  var $i258: i32;
  var $i259: i8;
  var $i261: i1;
  var $i262: i32;
  var $i263: i32;
  var $i264: i8;
  var $i266: i32;
  var $i267: i32;
  var $i268: i8;
  var $i265: i8;
  var $i260: i8;
  var $i269: i8;
  var $i270: i32;
  var $i271: i32;
  var $i272: i1;
  var $i273: i32;
  var $i274: i32;
  var $i275: i8;
  var $i276: i8;
  var $p277: ref;
  var $i278: i16;
  var $i279: i32;
  var $p280: ref;
  var $i281: i8;
  var $i282: i32;
  var $i283: i32;
  var $i284: i32;
  var $i285: i1;
  var $p286: ref;
  var $i287: i16;
  var $i288: i32;
  var $p290: ref;
  var $i291: i8;
  var $i292: i32;
  var $i293: i32;
  var $p295: ref;
  var $i296: i8;
  var $i297: i32;
  var $p298: ref;
  var $i299: i16;
  var $i300: i32;
  var $p302: ref;
  var $i303: i8;
  var $i304: i32;
  var $i305: i32;
  var $p307: ref;
  var $i308: i8;
  var $i309: i32;
  var $p310: ref;
  var $i311: i16;
  var $i312: i32;
  var $p314: ref;
  var $i315: i8;
  var $i316: i32;
  var $i317: i32;
  var $p319: ref;
  var $i320: i8;
  var $i321: i32;
  var $p322: ref;
  var $i323: i16;
  var $i324: i32;
  var $p326: ref;
  var $i327: i8;
  var $i328: i32;
  var $i329: i32;
  var $p331: ref;
  var $i332: i8;
  var $i333: i32;
  var $p334: ref;
  var $i335: i16;
  var $i336: i32;
  var $p338: ref;
  var $i339: i8;
  var $i340: i32;
  var $i341: i32;
  var $p343: ref;
  var $i344: i8;
  var $i345: i32;
  var $p346: ref;
  var $i347: i16;
  var $i348: i32;
  var $p350: ref;
  var $i351: i8;
  var $i352: i32;
  var $i353: i32;
  var $p355: ref;
  var $i356: i8;
  var $i357: i32;
  var $p358: ref;
  var $i359: i16;
  var $i360: i32;
  var $p362: ref;
  var $i363: i8;
  var $i364: i32;
  var $i365: i32;
  var $p367: ref;
  var $i368: i8;
  var $i369: i32;
  var $p370: ref;
  var $i371: i16;
  var $i372: i32;
  var $p374: ref;
  var $i375: i8;
  var $i376: i32;
  var $i377: i32;
  var $p379: ref;
  var $i380: i8;
  var $i381: i32;
  var $p383: ref;
  var $i384: i8;
  var $i385: i32;
  var $i386: i32;
  var $i387: i1;
  var $i388: i32;
  var $i389: i32;
  var $i390: i8;
  var $i391: i8;
  var $p392: ref;
  var $i393: i16;
  var $i394: i32;
  var $p395: ref;
  var $i396: i8;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i64;
  var $p401: ref;
  var $p404: ref;
  var $i405: i64;
  var $p406: ref;
  var $p409: ref;
  var $i410: i32;
  var $i411: i32;
  var $i412: i32;
  var $i413: i64;
  var $i414: i64;
  var $p415: ref;
  var $p418: ref;
  var $i419: i64;
  var $p420: ref;
  var $p423: ref;
  var $i424: i64;
  var $i425: i64;
  var $p426: ref;
  var $p429: ref;
  var $i430: i64;
  var $i431: i32;
  var $i432: i64;
  var $p433: ref;
  var $p436: ref;
  var $i437: i64;
  var $i438: i32;
  var $i439: i64;
  var $i440: i32;
  var $i441: i64;
  var $i442: i64;
  var $p443: ref;
  var $p446: ref;
  var $i447: i32;
  var $i448: i8;
  var $p449: ref;
  var $i450: i16;
  var $i451: i32;
  var $p452: ref;
  var $i453: i8;
  var $i454: i32;
  var $i455: i32;
  var $i456: i32;
  var $i457: i32;
  var $i458: i32;
  var $i459: i32;
  var $i460: i8;
  var $i461: i32;
  var $i462: i32;
  var $i463: i32;
  var $i464: i32;
  var $i465: i8;
  var $i466: i32;
  var $i467: i32;
  var $i468: i32;
  var $i469: i8;
  var $i470: i64;
  var $p471: ref;
  var $p474: ref;
  var $p475: ref;
  var $i476: i16;
  var $i477: i32;
  var $p478: ref;
  var $i479: i8;
  var $i480: i32;
  var $i481: i32;
  var $i482: i32;
  var $i483: i1;
  var $p484: ref;
  var $i485: i16;
  var $i486: i32;
  var $p487: ref;
  var $i488: i8;
  var $i489: i32;
  var $i490: i32;
  var $i491: i32;
  var vslice_dummy_var_12: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 34} $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 35} $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    call {:si_unique_call 36} {:cexpr "opl3_start_note:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 37} {:cexpr "opl3_start_note:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 38} {:cexpr "opl3_start_note:arg:note"} boogie_si_record_i32($i2);
    call {:si_unique_call 39} {:cexpr "opl3_start_note:arg:volume"} boogie_si_record_i32($i3);
    goto corral_source_split_426;

  corral_source_split_426:
    assume {:verifier.code 0} true;
    $i6 := $slt.i32($i1, 0);
    goto corral_source_split_427;

  corral_source_split_427:
    assume {:verifier.code 0} true;
    assume {:branchcond $i6} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i6 == 1);
    goto corral_source_split_429;

  corral_source_split_429:
    assume {:verifier.code 0} true;
    $p7 := $M.1;
    goto corral_source_split_430;

  corral_source_split_430:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p7, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_431;

  corral_source_split_431:
    assume {:verifier.code 0} true;
    $i9 := $load.i32($M.0, $p8);
    goto corral_source_split_432;

  corral_source_split_432:
    assume {:verifier.code 0} true;
    $i10 := $sle.i32($i9, $i1);
    goto corral_source_split_433;

  corral_source_split_433:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i11 := $sext.i32.i64($i1);
    goto corral_source_split_435;

  corral_source_split_435:
    assume {:verifier.code 0} true;
    $p12 := $M.1;
    goto corral_source_split_436;

  corral_source_split_436:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($add.ref($p12, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i11, 4));
    goto corral_source_split_437;

  corral_source_split_437:
    assume {:verifier.code 0} true;
    $i15 := $load.i32($M.0, $p14);
    goto corral_source_split_438;

  corral_source_split_438:
    assume {:verifier.code 0} true;
    $i16 := $sext.i32.i64($i15);
    goto corral_source_split_439;

  corral_source_split_439:
    assume {:verifier.code 0} true;
    $i18 := $sext.i32.i64($i1);
    goto corral_source_split_440;

  corral_source_split_440:
    assume {:verifier.code 0} true;
    $p19 := $M.1;
    goto corral_source_split_441;

  corral_source_split_441:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($add.ref($add.ref($p19, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i18, 56)), $mul.ref(48, 1));
    goto corral_source_split_442;

  corral_source_split_442:
    assume {:verifier.code 0} true;
    $i23 := $load.i32($M.0, $p22);
    call {:si_unique_call 40} {:cexpr "pan"} boogie_si_record_i32($i23);
    $p24 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(1, 1));
    goto corral_source_split_443;

  corral_source_split_443:
    assume {:verifier.code 0} true;
    $i25 := $load.i8($M.2, $p24);
    goto corral_source_split_444;

  corral_source_split_444:
    assume {:verifier.code 0} true;
    $i26 := $zext.i8.i32($i25);
    goto corral_source_split_445;

  corral_source_split_445:
    assume {:verifier.code 0} true;
    $i27 := $eq.i32($i26, 0);
    goto corral_source_split_446;

  corral_source_split_446:
    assume {:verifier.code 0} true;
    assume {:branchcond $i27} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i27 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i28 := $eq.i32($i2, 255);
    goto corral_source_split_450;

  corral_source_split_450:
    assume {:verifier.code 0} true;
    assume {:branchcond $i28} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i28 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    $p35 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $i36 := $load.i16($M.2, $p35);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i36);
    $p39 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    $i40 := $load.i8($M.2, $p39);
    goto corral_source_split_462;

  corral_source_split_462:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i40);
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $i42 := $add.i32($i41, 64);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    call {:si_unique_call 42} opl3_command($i37, $i42, 255);
    $p43 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $i44 := $load.i16($M.2, $p43);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    $i45 := $zext.i16.i32($i44);
    $p47 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $i48 := $load.i8($M.2, $p47);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i49 := $zext.i8.i32($i48);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, 64);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 43} opl3_command($i45, $i50, 255);
    $p51 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(1, 1));
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $i52 := $load.i8($M.2, $p51);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i53 := $zext.i8.i32($i52);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $i54 := $eq.i32($i53, 4);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    assume {:branchcond $i54} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i54 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    $p71 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i72 := $load.i16($M.2, $p71);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $i73 := $zext.i16.i32($i72);
    $p74 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    $i75 := $load.i8($M.2, $p74);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i76 := $zext.i8.i32($i75);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i77 := $add.i32($i76, 176);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    call {:si_unique_call 46} opl3_command($i73, $i77, 0);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    $i78 := $sext.i32.i64($i1);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $p79 := $M.1;
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $p81 := $add.ref($add.ref($add.ref($p79, $mul.ref(0, 11656)), $mul.ref(11352, 1)), $mul.ref($i78, 8));
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    $p82 := $load.ref($M.0, $p81);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    $i83 := $p2i.ref.i64($p82);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i84 := $eq.i64($i83, 0);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    assume {:branchcond $i84} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i84 == 1);
    assume {:verifier.code 0} true;
    $p88 := $p82;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    $p89 := $add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    $i90 := $load.i32($M.0, $p89);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    $i91 := $slt.i32($i90, 0);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    assume {:branchcond $i91} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i91 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    $p93 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(1, 1));
    goto corral_source_split_517;

  corral_source_split_517:
    assume {:verifier.code 0} true;
    $i94 := $load.i8($M.2, $p93);
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    $i95 := $zext.i8.i32($i94);
    goto corral_source_split_519;

  corral_source_split_519:
    assume {:verifier.code 0} true;
    $i96 := $eq.i32($i95, 2);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    assume {:branchcond $i96} true;
    goto $bb23, $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    assume !($i96 == 1);
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    $p101 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(1, 1));
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    $i102 := $load.i8($M.2, $p101);
    goto corral_source_split_531;

  corral_source_split_531:
    assume {:verifier.code 0} true;
    $i103 := $zext.i8.i32($i102);
    call {:si_unique_call 48} {:cexpr "voice_mode"} boogie_si_record_i32($i103);
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    $i104 := $eq.i32($i103, 4);
    goto corral_source_split_533;

  corral_source_split_533:
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i104 == 1);
    assume {:verifier.code 0} true;
    $i152 := $i103;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_589;

  corral_source_split_589:
    assume {:verifier.code 0} true;
    $i154 := $load.i16($M.2, $p153);
    goto corral_source_split_590;

  corral_source_split_590:
    assume {:verifier.code 0} true;
    $i155 := $zext.i16.i32($i154);
    $p157 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_591;

  corral_source_split_591:
    assume {:verifier.code 0} true;
    $i158 := $load.i8($M.2, $p157);
    goto corral_source_split_592;

  corral_source_split_592:
    assume {:verifier.code 0} true;
    $i159 := $zext.i8.i32($i158);
    goto corral_source_split_593;

  corral_source_split_593:
    assume {:verifier.code 0} true;
    $i160 := $add.i32($i159, 32);
    goto corral_source_split_594;

  corral_source_split_594:
    assume {:verifier.code 0} true;
    $p162 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
    goto corral_source_split_595;

  corral_source_split_595:
    assume {:verifier.code 0} true;
    $i163 := $load.i8($M.0, $p162);
    goto corral_source_split_596;

  corral_source_split_596:
    assume {:verifier.code 0} true;
    $i164 := $zext.i8.i32($i163);
    goto corral_source_split_597;

  corral_source_split_597:
    assume {:verifier.code 0} true;
    call {:si_unique_call 52} opl3_command($i155, $i160, $i164);
    $p165 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_598;

  corral_source_split_598:
    assume {:verifier.code 0} true;
    $i166 := $load.i16($M.2, $p165);
    goto corral_source_split_599;

  corral_source_split_599:
    assume {:verifier.code 0} true;
    $i167 := $zext.i16.i32($i166);
    $p169 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_600;

  corral_source_split_600:
    assume {:verifier.code 0} true;
    $i170 := $load.i8($M.2, $p169);
    goto corral_source_split_601;

  corral_source_split_601:
    assume {:verifier.code 0} true;
    $i171 := $zext.i8.i32($i170);
    goto corral_source_split_602;

  corral_source_split_602:
    assume {:verifier.code 0} true;
    $i172 := $add.i32($i171, 32);
    goto corral_source_split_603;

  corral_source_split_603:
    assume {:verifier.code 0} true;
    $p174 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(1, 1));
    goto corral_source_split_604;

  corral_source_split_604:
    assume {:verifier.code 0} true;
    $i175 := $load.i8($M.0, $p174);
    goto corral_source_split_605;

  corral_source_split_605:
    assume {:verifier.code 0} true;
    $i176 := $zext.i8.i32($i175);
    goto corral_source_split_606;

  corral_source_split_606:
    assume {:verifier.code 0} true;
    call {:si_unique_call 53} opl3_command($i167, $i172, $i176);
    $p177 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_607;

  corral_source_split_607:
    assume {:verifier.code 0} true;
    $i178 := $load.i16($M.2, $p177);
    goto corral_source_split_608;

  corral_source_split_608:
    assume {:verifier.code 0} true;
    $i179 := $zext.i16.i32($i178);
    $p181 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_609;

  corral_source_split_609:
    assume {:verifier.code 0} true;
    $i182 := $load.i8($M.2, $p181);
    goto corral_source_split_610;

  corral_source_split_610:
    assume {:verifier.code 0} true;
    $i183 := $zext.i8.i32($i182);
    goto corral_source_split_611;

  corral_source_split_611:
    assume {:verifier.code 0} true;
    $i184 := $add.i32($i183, 96);
    goto corral_source_split_612;

  corral_source_split_612:
    assume {:verifier.code 0} true;
    $p186 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(4, 1));
    goto corral_source_split_613;

  corral_source_split_613:
    assume {:verifier.code 0} true;
    $i187 := $load.i8($M.0, $p186);
    goto corral_source_split_614;

  corral_source_split_614:
    assume {:verifier.code 0} true;
    $i188 := $zext.i8.i32($i187);
    goto corral_source_split_615;

  corral_source_split_615:
    assume {:verifier.code 0} true;
    call {:si_unique_call 54} opl3_command($i179, $i184, $i188);
    $p189 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_616;

  corral_source_split_616:
    assume {:verifier.code 0} true;
    $i190 := $load.i16($M.2, $p189);
    goto corral_source_split_617;

  corral_source_split_617:
    assume {:verifier.code 0} true;
    $i191 := $zext.i16.i32($i190);
    $p193 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_618;

  corral_source_split_618:
    assume {:verifier.code 0} true;
    $i194 := $load.i8($M.2, $p193);
    goto corral_source_split_619;

  corral_source_split_619:
    assume {:verifier.code 0} true;
    $i195 := $zext.i8.i32($i194);
    goto corral_source_split_620;

  corral_source_split_620:
    assume {:verifier.code 0} true;
    $i196 := $add.i32($i195, 96);
    goto corral_source_split_621;

  corral_source_split_621:
    assume {:verifier.code 0} true;
    $p198 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(5, 1));
    goto corral_source_split_622;

  corral_source_split_622:
    assume {:verifier.code 0} true;
    $i199 := $load.i8($M.0, $p198);
    goto corral_source_split_623;

  corral_source_split_623:
    assume {:verifier.code 0} true;
    $i200 := $zext.i8.i32($i199);
    goto corral_source_split_624;

  corral_source_split_624:
    assume {:verifier.code 0} true;
    call {:si_unique_call 55} opl3_command($i191, $i196, $i200);
    $p201 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_625;

  corral_source_split_625:
    assume {:verifier.code 0} true;
    $i202 := $load.i16($M.2, $p201);
    goto corral_source_split_626;

  corral_source_split_626:
    assume {:verifier.code 0} true;
    $i203 := $zext.i16.i32($i202);
    $p205 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_627;

  corral_source_split_627:
    assume {:verifier.code 0} true;
    $i206 := $load.i8($M.2, $p205);
    goto corral_source_split_628;

  corral_source_split_628:
    assume {:verifier.code 0} true;
    $i207 := $zext.i8.i32($i206);
    goto corral_source_split_629;

  corral_source_split_629:
    assume {:verifier.code 0} true;
    $i208 := $add.i32($i207, 128);
    goto corral_source_split_630;

  corral_source_split_630:
    assume {:verifier.code 0} true;
    $p210 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(6, 1));
    goto corral_source_split_631;

  corral_source_split_631:
    assume {:verifier.code 0} true;
    $i211 := $load.i8($M.0, $p210);
    goto corral_source_split_632;

  corral_source_split_632:
    assume {:verifier.code 0} true;
    $i212 := $zext.i8.i32($i211);
    goto corral_source_split_633;

  corral_source_split_633:
    assume {:verifier.code 0} true;
    call {:si_unique_call 56} opl3_command($i203, $i208, $i212);
    $p213 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_634;

  corral_source_split_634:
    assume {:verifier.code 0} true;
    $i214 := $load.i16($M.2, $p213);
    goto corral_source_split_635;

  corral_source_split_635:
    assume {:verifier.code 0} true;
    $i215 := $zext.i16.i32($i214);
    $p217 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_636;

  corral_source_split_636:
    assume {:verifier.code 0} true;
    $i218 := $load.i8($M.2, $p217);
    goto corral_source_split_637;

  corral_source_split_637:
    assume {:verifier.code 0} true;
    $i219 := $zext.i8.i32($i218);
    goto corral_source_split_638;

  corral_source_split_638:
    assume {:verifier.code 0} true;
    $i220 := $add.i32($i219, 128);
    goto corral_source_split_639;

  corral_source_split_639:
    assume {:verifier.code 0} true;
    $p222 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(7, 1));
    goto corral_source_split_640;

  corral_source_split_640:
    assume {:verifier.code 0} true;
    $i223 := $load.i8($M.0, $p222);
    goto corral_source_split_641;

  corral_source_split_641:
    assume {:verifier.code 0} true;
    $i224 := $zext.i8.i32($i223);
    goto corral_source_split_642;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    call {:si_unique_call 57} opl3_command($i215, $i220, $i224);
    $p225 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_643;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    $i226 := $load.i16($M.2, $p225);
    goto corral_source_split_644;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    $i227 := $zext.i16.i32($i226);
    $p229 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_645;

  corral_source_split_645:
    assume {:verifier.code 0} true;
    $i230 := $load.i8($M.2, $p229);
    goto corral_source_split_646;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    $i231 := $zext.i8.i32($i230);
    goto corral_source_split_647;

  corral_source_split_647:
    assume {:verifier.code 0} true;
    $i232 := $add.i32($i231, 224);
    goto corral_source_split_648;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    $p234 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(8, 1));
    goto corral_source_split_649;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    $i235 := $load.i8($M.0, $p234);
    goto corral_source_split_650;

  corral_source_split_650:
    assume {:verifier.code 0} true;
    $i236 := $zext.i8.i32($i235);
    goto corral_source_split_651;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    call {:si_unique_call 58} opl3_command($i227, $i232, $i236);
    $p237 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_652;

  corral_source_split_652:
    assume {:verifier.code 0} true;
    $i238 := $load.i16($M.2, $p237);
    goto corral_source_split_653;

  corral_source_split_653:
    assume {:verifier.code 0} true;
    $i239 := $zext.i16.i32($i238);
    $p241 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_654;

  corral_source_split_654:
    assume {:verifier.code 0} true;
    $i242 := $load.i8($M.2, $p241);
    goto corral_source_split_655;

  corral_source_split_655:
    assume {:verifier.code 0} true;
    $i243 := $zext.i8.i32($i242);
    goto corral_source_split_656;

  corral_source_split_656:
    assume {:verifier.code 0} true;
    $i244 := $add.i32($i243, 224);
    goto corral_source_split_657;

  corral_source_split_657:
    assume {:verifier.code 0} true;
    $p246 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(9, 1));
    goto corral_source_split_658;

  corral_source_split_658:
    assume {:verifier.code 0} true;
    $i247 := $load.i8($M.0, $p246);
    goto corral_source_split_659;

  corral_source_split_659:
    assume {:verifier.code 0} true;
    $i248 := $zext.i8.i32($i247);
    goto corral_source_split_660;

  corral_source_split_660:
    assume {:verifier.code 0} true;
    call {:si_unique_call 59} opl3_command($i239, $i244, $i248);
    goto corral_source_split_661;

  corral_source_split_661:
    assume {:verifier.code 0} true;
    $p250 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(10, 1));
    goto corral_source_split_662;

  corral_source_split_662:
    assume {:verifier.code 0} true;
    $i251 := $load.i8($M.0, $p250);
    call {:si_unique_call 60} {:cexpr "fpc"} boogie_si_record_i8($i251);
    goto corral_source_split_663;

  corral_source_split_663:
    assume {:verifier.code 0} true;
    $i252 := $ne.i32($i23, 65535);
    goto corral_source_split_664;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    assume {:branchcond $i252} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i252 == 1);
    assume {:verifier.code 0} true;
    $i269 := $i251;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    goto corral_source_split_691;

  corral_source_split_691:
    assume {:verifier.code 0} true;
    $i270 := $zext.i8.i32($i269);
    goto corral_source_split_692;

  corral_source_split_692:
    assume {:verifier.code 0} true;
    $i271 := $and.i32($i270, 48);
    goto corral_source_split_693;

  corral_source_split_693:
    assume {:verifier.code 0} true;
    $i272 := $eq.i32($i271, 0);
    goto corral_source_split_694;

  corral_source_split_694:
    assume {:verifier.code 0} true;
    assume {:branchcond $i272} true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i272 == 1);
    assume {:verifier.code 0} true;
    $i276 := $i269;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p277 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    $i278 := $load.i16($M.2, $p277);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    $i279 := $zext.i16.i32($i278);
    $p280 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    $i281 := $load.i8($M.2, $p280);
    goto corral_source_split_704;

  corral_source_split_704:
    assume {:verifier.code 0} true;
    $i282 := $zext.i8.i32($i281);
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    $i283 := $add.i32($i282, 192);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    $i284 := $zext.i8.i32($i276);
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    call {:si_unique_call 66} opl3_command($i279, $i283, $i284);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    $i285 := $eq.i32($i152, 4);
    goto corral_source_split_709;

  corral_source_split_709:
    assume {:verifier.code 0} true;
    assume {:branchcond $i285} true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i285 == 1);
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    $i400 := $sext.i32.i64($i1);
    goto corral_source_split_804;

  corral_source_split_804:
    assume {:verifier.code 0} true;
    $p401 := $M.1;
    goto corral_source_split_805;

  corral_source_split_805:
    assume {:verifier.code 0} true;
    $p404 := $add.ref($add.ref($add.ref($add.ref($p401, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i400, 56)), $mul.ref(44, 1));
    goto corral_source_split_806;

  corral_source_split_806:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p404, $i152);
    goto corral_source_split_807;

  corral_source_split_807:
    assume {:verifier.code 0} true;
    $i405 := $sext.i32.i64($i1);
    goto corral_source_split_808;

  corral_source_split_808:
    assume {:verifier.code 0} true;
    $p406 := $M.1;
    goto corral_source_split_809;

  corral_source_split_809:
    assume {:verifier.code 0} true;
    $p409 := $add.ref($add.ref($add.ref($add.ref($p406, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i405, 56)), $mul.ref(40, 1));
    goto corral_source_split_810;

  corral_source_split_810:
    assume {:verifier.code 0} true;
    $i410 := $load.i32($M.0, $p409);
    goto corral_source_split_811;

  corral_source_split_811:
    assume {:verifier.code 0} true;
    call {:si_unique_call 78} set_voice_volume($i1, $i3, $i410);
    goto corral_source_split_812;

  corral_source_split_812:
    assume {:verifier.code 0} true;
    call {:si_unique_call 79} $i411 := note_to_freq($i2);
    call {:si_unique_call 80} {:cexpr "tmp___0"} boogie_si_record_i32($i411);
    goto corral_source_split_813;

  corral_source_split_813:
    assume {:verifier.code 0} true;
    $i412 := $sdiv.i32($i411, 1000);
    goto corral_source_split_814;

  corral_source_split_814:
    assume {:verifier.code 0} true;
    $i413 := $sext.i32.i64($i412);
    call {:si_unique_call 81} {:cexpr "tmp"} boogie_si_record_i64($i413);
    goto corral_source_split_815;

  corral_source_split_815:
    assume {:verifier.code 0} true;
    $i414 := $sext.i32.i64($i1);
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    $p415 := $M.1;
    goto corral_source_split_817;

  corral_source_split_817:
    assume {:verifier.code 0} true;
    $p418 := $add.ref($add.ref($add.ref($add.ref($p415, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i414, 56)), $mul.ref(24, 1));
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p418, $i413);
    goto corral_source_split_819;

  corral_source_split_819:
    assume {:verifier.code 0} true;
    $i419 := $sext.i32.i64($i1);
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    $p420 := $M.1;
    goto corral_source_split_821;

  corral_source_split_821:
    assume {:verifier.code 0} true;
    $p423 := $add.ref($add.ref($add.ref($add.ref($p420, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i419, 56)), $mul.ref(24, 1));
    goto corral_source_split_822;

  corral_source_split_822:
    assume {:verifier.code 0} true;
    $i424 := $load.i64($M.0, $p423);
    goto corral_source_split_823;

  corral_source_split_823:
    assume {:verifier.code 0} true;
    $i425 := $sext.i32.i64($i1);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    $p426 := $M.1;
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    $p429 := $add.ref($add.ref($add.ref($add.ref($p426, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i425, 56)), $mul.ref(8, 1));
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    $i430 := $load.i64($M.0, $p429);
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    $i431 := $trunc.i64.i32($i430);
    goto corral_source_split_828;

  corral_source_split_828:
    assume {:verifier.code 0} true;
    $i432 := $sext.i32.i64($i1);
    goto corral_source_split_829;

  corral_source_split_829:
    assume {:verifier.code 0} true;
    $p433 := $M.1;
    goto corral_source_split_830;

  corral_source_split_830:
    assume {:verifier.code 0} true;
    $p436 := $add.ref($add.ref($add.ref($add.ref($p433, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i432, 56)), $mul.ref(16, 1));
    goto corral_source_split_831;

  corral_source_split_831:
    assume {:verifier.code 0} true;
    $i437 := $load.i64($M.0, $p436);
    goto corral_source_split_832;

  corral_source_split_832:
    assume {:verifier.code 0} true;
    $i438 := $trunc.i64.i32($i437);
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    call {:si_unique_call 82} $i439 := compute_finetune($i424, $i431, $i438, 0);
    call {:si_unique_call 83} {:cexpr "tmp___1"} boogie_si_record_i64($i439);
    goto corral_source_split_834;

  corral_source_split_834:
    assume {:verifier.code 0} true;
    $i440 := $trunc.i64.i32($i439);
    call {:si_unique_call 84} {:cexpr "freq"} boogie_si_record_i32($i440);
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    $i441 := $sext.i32.i64($i440);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    $i442 := $sext.i32.i64($i1);
    goto corral_source_split_837;

  corral_source_split_837:
    assume {:verifier.code 0} true;
    $p443 := $M.1;
    goto corral_source_split_838;

  corral_source_split_838:
    assume {:verifier.code 0} true;
    $p446 := $add.ref($add.ref($add.ref($add.ref($p443, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i442, 56)), $mul.ref(32, 1));
    goto corral_source_split_839;

  corral_source_split_839:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p446, $i441);
    goto corral_source_split_840;

  corral_source_split_840:
    assume {:verifier.code 0} true;
    call {:si_unique_call 85} freq_to_fnum($i440, $p4, $p5);
    goto corral_source_split_841;

  corral_source_split_841:
    assume {:verifier.code 0} true;
    $i447 := $load.i32($M.3, $p5);
    goto corral_source_split_842;

  corral_source_split_842:
    assume {:verifier.code 0} true;
    $i448 := $trunc.i32.i8($i447);
    call {:si_unique_call 86} {:cexpr "data"} boogie_si_record_i8($i448);
    $p449 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_843;

  corral_source_split_843:
    assume {:verifier.code 0} true;
    $i450 := $load.i16($M.2, $p449);
    goto corral_source_split_844;

  corral_source_split_844:
    assume {:verifier.code 0} true;
    $i451 := $zext.i16.i32($i450);
    $p452 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_845;

  corral_source_split_845:
    assume {:verifier.code 0} true;
    $i453 := $load.i8($M.2, $p452);
    goto corral_source_split_846;

  corral_source_split_846:
    assume {:verifier.code 0} true;
    $i454 := $zext.i8.i32($i453);
    goto corral_source_split_847;

  corral_source_split_847:
    assume {:verifier.code 0} true;
    $i455 := $add.i32($i454, 160);
    goto corral_source_split_848;

  corral_source_split_848:
    assume {:verifier.code 0} true;
    $i456 := $zext.i8.i32($i448);
    goto corral_source_split_849;

  corral_source_split_849:
    assume {:verifier.code 0} true;
    call {:si_unique_call 87} opl3_command($i451, $i455, $i456);
    goto corral_source_split_850;

  corral_source_split_850:
    assume {:verifier.code 0} true;
    $i457 := $load.i32($M.4, $p4);
    goto corral_source_split_851;

  corral_source_split_851:
    assume {:verifier.code 0} true;
    $i458 := $and.i32($i457, 7);
    goto corral_source_split_852;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    $i459 := $shl.i32($i458, 2);
    goto corral_source_split_853;

  corral_source_split_853:
    assume {:verifier.code 0} true;
    $i460 := $trunc.i32.i8($i459);
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    $i461 := $sext.i8.i32($i460);
    goto corral_source_split_855;

  corral_source_split_855:
    assume {:verifier.code 0} true;
    $i462 := $or.i32($i461, 32);
    goto corral_source_split_856;

  corral_source_split_856:
    assume {:verifier.code 0} true;
    $i463 := $load.i32($M.3, $p5);
    goto corral_source_split_857;

  corral_source_split_857:
    assume {:verifier.code 0} true;
    $i464 := $ashr.i32($i463, 8);
    goto corral_source_split_858;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    $i465 := $trunc.i32.i8($i464);
    goto corral_source_split_859;

  corral_source_split_859:
    assume {:verifier.code 0} true;
    $i466 := $sext.i8.i32($i465);
    goto corral_source_split_860;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    $i467 := $and.i32($i466, 3);
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    $i468 := $or.i32($i462, $i467);
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    $i469 := $trunc.i32.i8($i468);
    call {:si_unique_call 88} {:cexpr "data"} boogie_si_record_i8($i469);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    $i470 := $sext.i32.i64($i1);
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    $p471 := $M.1;
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $p474 := $add.ref($add.ref($add.ref($add.ref($p471, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i470, 56)), $mul.ref(0, 1));
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p474, $i469);
    $p475 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    $i476 := $load.i16($M.2, $p475);
    goto corral_source_split_868;

  corral_source_split_868:
    assume {:verifier.code 0} true;
    $i477 := $zext.i16.i32($i476);
    $p478 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    $i479 := $load.i8($M.2, $p478);
    goto corral_source_split_870;

  corral_source_split_870:
    assume {:verifier.code 0} true;
    $i480 := $zext.i8.i32($i479);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    $i481 := $add.i32($i480, 176);
    goto corral_source_split_872;

  corral_source_split_872:
    assume {:verifier.code 0} true;
    $i482 := $zext.i8.i32($i469);
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    call {:si_unique_call 89} opl3_command($i477, $i481, $i482);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    $i483 := $eq.i32($i152, 4);
    goto corral_source_split_875;

  corral_source_split_875:
    assume {:verifier.code 0} true;
    assume {:branchcond $i483} true;
    goto $bb53, $bb54;

  $bb54:
    assume !($i483 == 1);
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb53:
    assume $i483 == 1;
    $p484 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_877;

  corral_source_split_877:
    assume {:verifier.code 0} true;
    $i485 := $load.i16($M.2, $p484);
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    $i486 := $zext.i16.i32($i485);
    $p487 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    $i488 := $load.i8($M.2, $p487);
    goto corral_source_split_880;

  corral_source_split_880:
    assume {:verifier.code 0} true;
    $i489 := $zext.i8.i32($i488);
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    $i490 := $add.i32($i489, 179);
    goto corral_source_split_882;

  corral_source_split_882:
    assume {:verifier.code 0} true;
    $i491 := $zext.i8.i32($i469);
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    call {:si_unique_call 90} opl3_command($i486, $i490, $i491);
    goto corral_source_split_884;

  corral_source_split_884:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb47:
    assume $i285 == 1;
    $p286 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    $i287 := $load.i16($M.2, $p286);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    $i288 := $zext.i16.i32($i287);
    $p290 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_713;

  corral_source_split_713:
    assume {:verifier.code 0} true;
    $i291 := $load.i8($M.2, $p290);
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    $i292 := $zext.i8.i32($i291);
    goto corral_source_split_715;

  corral_source_split_715:
    assume {:verifier.code 0} true;
    $i293 := $add.i32($i292, 32);
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    $p295 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(11, 1));
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    $i296 := $load.i8($M.0, $p295);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    $i297 := $zext.i8.i32($i296);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    call {:si_unique_call 67} opl3_command($i288, $i293, $i297);
    $p298 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_720;

  corral_source_split_720:
    assume {:verifier.code 0} true;
    $i299 := $load.i16($M.2, $p298);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    $i300 := $zext.i16.i32($i299);
    $p302 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    $i303 := $load.i8($M.2, $p302);
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    $i304 := $zext.i8.i32($i303);
    goto corral_source_split_724;

  corral_source_split_724:
    assume {:verifier.code 0} true;
    $i305 := $add.i32($i304, 32);
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    $p307 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(12, 1));
    goto corral_source_split_726;

  corral_source_split_726:
    assume {:verifier.code 0} true;
    $i308 := $load.i8($M.0, $p307);
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    $i309 := $zext.i8.i32($i308);
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    call {:si_unique_call 68} opl3_command($i300, $i305, $i309);
    $p310 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_729;

  corral_source_split_729:
    assume {:verifier.code 0} true;
    $i311 := $load.i16($M.2, $p310);
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    $i312 := $zext.i16.i32($i311);
    $p314 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    $i315 := $load.i8($M.2, $p314);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    $i316 := $zext.i8.i32($i315);
    goto corral_source_split_733;

  corral_source_split_733:
    assume {:verifier.code 0} true;
    $i317 := $add.i32($i316, 96);
    goto corral_source_split_734;

  corral_source_split_734:
    assume {:verifier.code 0} true;
    $p319 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(15, 1));
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 0} true;
    $i320 := $load.i8($M.0, $p319);
    goto corral_source_split_736;

  corral_source_split_736:
    assume {:verifier.code 0} true;
    $i321 := $zext.i8.i32($i320);
    goto corral_source_split_737;

  corral_source_split_737:
    assume {:verifier.code 0} true;
    call {:si_unique_call 69} opl3_command($i312, $i317, $i321);
    $p322 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_738;

  corral_source_split_738:
    assume {:verifier.code 0} true;
    $i323 := $load.i16($M.2, $p322);
    goto corral_source_split_739;

  corral_source_split_739:
    assume {:verifier.code 0} true;
    $i324 := $zext.i16.i32($i323);
    $p326 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_740;

  corral_source_split_740:
    assume {:verifier.code 0} true;
    $i327 := $load.i8($M.2, $p326);
    goto corral_source_split_741;

  corral_source_split_741:
    assume {:verifier.code 0} true;
    $i328 := $zext.i8.i32($i327);
    goto corral_source_split_742;

  corral_source_split_742:
    assume {:verifier.code 0} true;
    $i329 := $add.i32($i328, 96);
    goto corral_source_split_743;

  corral_source_split_743:
    assume {:verifier.code 0} true;
    $p331 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(16, 1));
    goto corral_source_split_744;

  corral_source_split_744:
    assume {:verifier.code 0} true;
    $i332 := $load.i8($M.0, $p331);
    goto corral_source_split_745;

  corral_source_split_745:
    assume {:verifier.code 0} true;
    $i333 := $zext.i8.i32($i332);
    goto corral_source_split_746;

  corral_source_split_746:
    assume {:verifier.code 0} true;
    call {:si_unique_call 70} opl3_command($i324, $i329, $i333);
    $p334 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_747;

  corral_source_split_747:
    assume {:verifier.code 0} true;
    $i335 := $load.i16($M.2, $p334);
    goto corral_source_split_748;

  corral_source_split_748:
    assume {:verifier.code 0} true;
    $i336 := $zext.i16.i32($i335);
    $p338 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_749;

  corral_source_split_749:
    assume {:verifier.code 0} true;
    $i339 := $load.i8($M.2, $p338);
    goto corral_source_split_750;

  corral_source_split_750:
    assume {:verifier.code 0} true;
    $i340 := $zext.i8.i32($i339);
    goto corral_source_split_751;

  corral_source_split_751:
    assume {:verifier.code 0} true;
    $i341 := $add.i32($i340, 128);
    goto corral_source_split_752;

  corral_source_split_752:
    assume {:verifier.code 0} true;
    $p343 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(17, 1));
    goto corral_source_split_753;

  corral_source_split_753:
    assume {:verifier.code 0} true;
    $i344 := $load.i8($M.0, $p343);
    goto corral_source_split_754;

  corral_source_split_754:
    assume {:verifier.code 0} true;
    $i345 := $zext.i8.i32($i344);
    goto corral_source_split_755;

  corral_source_split_755:
    assume {:verifier.code 0} true;
    call {:si_unique_call 71} opl3_command($i336, $i341, $i345);
    $p346 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_756;

  corral_source_split_756:
    assume {:verifier.code 0} true;
    $i347 := $load.i16($M.2, $p346);
    goto corral_source_split_757;

  corral_source_split_757:
    assume {:verifier.code 0} true;
    $i348 := $zext.i16.i32($i347);
    $p350 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_758;

  corral_source_split_758:
    assume {:verifier.code 0} true;
    $i351 := $load.i8($M.2, $p350);
    goto corral_source_split_759;

  corral_source_split_759:
    assume {:verifier.code 0} true;
    $i352 := $zext.i8.i32($i351);
    goto corral_source_split_760;

  corral_source_split_760:
    assume {:verifier.code 0} true;
    $i353 := $add.i32($i352, 128);
    goto corral_source_split_761;

  corral_source_split_761:
    assume {:verifier.code 0} true;
    $p355 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(18, 1));
    goto corral_source_split_762;

  corral_source_split_762:
    assume {:verifier.code 0} true;
    $i356 := $load.i8($M.0, $p355);
    goto corral_source_split_763;

  corral_source_split_763:
    assume {:verifier.code 0} true;
    $i357 := $zext.i8.i32($i356);
    goto corral_source_split_764;

  corral_source_split_764:
    assume {:verifier.code 0} true;
    call {:si_unique_call 72} opl3_command($i348, $i353, $i357);
    $p358 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_765;

  corral_source_split_765:
    assume {:verifier.code 0} true;
    $i359 := $load.i16($M.2, $p358);
    goto corral_source_split_766;

  corral_source_split_766:
    assume {:verifier.code 0} true;
    $i360 := $zext.i16.i32($i359);
    $p362 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_767;

  corral_source_split_767:
    assume {:verifier.code 0} true;
    $i363 := $load.i8($M.2, $p362);
    goto corral_source_split_768;

  corral_source_split_768:
    assume {:verifier.code 0} true;
    $i364 := $zext.i8.i32($i363);
    goto corral_source_split_769;

  corral_source_split_769:
    assume {:verifier.code 0} true;
    $i365 := $add.i32($i364, 224);
    goto corral_source_split_770;

  corral_source_split_770:
    assume {:verifier.code 0} true;
    $p367 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(19, 1));
    goto corral_source_split_771;

  corral_source_split_771:
    assume {:verifier.code 0} true;
    $i368 := $load.i8($M.0, $p367);
    goto corral_source_split_772;

  corral_source_split_772:
    assume {:verifier.code 0} true;
    $i369 := $zext.i8.i32($i368);
    goto corral_source_split_773;

  corral_source_split_773:
    assume {:verifier.code 0} true;
    call {:si_unique_call 73} opl3_command($i360, $i365, $i369);
    $p370 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_774;

  corral_source_split_774:
    assume {:verifier.code 0} true;
    $i371 := $load.i16($M.2, $p370);
    goto corral_source_split_775;

  corral_source_split_775:
    assume {:verifier.code 0} true;
    $i372 := $zext.i16.i32($i371);
    $p374 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_776;

  corral_source_split_776:
    assume {:verifier.code 0} true;
    $i375 := $load.i8($M.2, $p374);
    goto corral_source_split_777;

  corral_source_split_777:
    assume {:verifier.code 0} true;
    $i376 := $zext.i8.i32($i375);
    goto corral_source_split_778;

  corral_source_split_778:
    assume {:verifier.code 0} true;
    $i377 := $add.i32($i376, 224);
    goto corral_source_split_779;

  corral_source_split_779:
    assume {:verifier.code 0} true;
    $p379 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(20, 1));
    goto corral_source_split_780;

  corral_source_split_780:
    assume {:verifier.code 0} true;
    $i380 := $load.i8($M.0, $p379);
    goto corral_source_split_781;

  corral_source_split_781:
    assume {:verifier.code 0} true;
    $i381 := $zext.i8.i32($i380);
    goto corral_source_split_782;

  corral_source_split_782:
    assume {:verifier.code 0} true;
    call {:si_unique_call 74} opl3_command($i372, $i377, $i381);
    goto corral_source_split_783;

  corral_source_split_783:
    assume {:verifier.code 0} true;
    $p383 := $add.ref($add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(21, 1));
    goto corral_source_split_784;

  corral_source_split_784:
    assume {:verifier.code 0} true;
    $i384 := $load.i8($M.0, $p383);
    call {:si_unique_call 75} {:cexpr "fpc"} boogie_si_record_i8($i384);
    goto corral_source_split_785;

  corral_source_split_785:
    assume {:verifier.code 0} true;
    $i385 := $zext.i8.i32($i384);
    goto corral_source_split_786;

  corral_source_split_786:
    assume {:verifier.code 0} true;
    $i386 := $and.i32($i385, 48);
    goto corral_source_split_787;

  corral_source_split_787:
    assume {:verifier.code 0} true;
    $i387 := $eq.i32($i386, 0);
    goto corral_source_split_788;

  corral_source_split_788:
    assume {:verifier.code 0} true;
    assume {:branchcond $i387} true;
    goto $bb49, $bb50;

  $bb50:
    assume !($i387 == 1);
    assume {:verifier.code 0} true;
    $i391 := $i384;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $p392 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_795;

  corral_source_split_795:
    assume {:verifier.code 0} true;
    $i393 := $load.i16($M.2, $p392);
    goto corral_source_split_796;

  corral_source_split_796:
    assume {:verifier.code 0} true;
    $i394 := $zext.i16.i32($i393);
    $p395 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_797;

  corral_source_split_797:
    assume {:verifier.code 0} true;
    $i396 := $load.i8($M.2, $p395);
    goto corral_source_split_798;

  corral_source_split_798:
    assume {:verifier.code 0} true;
    $i397 := $zext.i8.i32($i396);
    goto corral_source_split_799;

  corral_source_split_799:
    assume {:verifier.code 0} true;
    $i398 := $add.i32($i397, 195);
    goto corral_source_split_800;

  corral_source_split_800:
    assume {:verifier.code 0} true;
    $i399 := $zext.i8.i32($i391);
    goto corral_source_split_801;

  corral_source_split_801:
    assume {:verifier.code 0} true;
    call {:si_unique_call 77} opl3_command($i394, $i398, $i399);
    goto corral_source_split_802;

  corral_source_split_802:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb49:
    assume $i387 == 1;
    goto corral_source_split_790;

  corral_source_split_790:
    assume {:verifier.code 0} true;
    $i388 := $zext.i8.i32($i384);
    goto corral_source_split_791;

  corral_source_split_791:
    assume {:verifier.code 0} true;
    $i389 := $or.i32($i388, 48);
    goto corral_source_split_792;

  corral_source_split_792:
    assume {:verifier.code 0} true;
    $i390 := $trunc.i32.i8($i389);
    call {:si_unique_call 76} {:cexpr "fpc"} boogie_si_record_i8($i390);
    goto corral_source_split_793;

  corral_source_split_793:
    assume {:verifier.code 0} true;
    $i391 := $i390;
    goto $bb51;

  $bb44:
    assume $i272 == 1;
    goto corral_source_split_696;

  corral_source_split_696:
    assume {:verifier.code 0} true;
    $i273 := $zext.i8.i32($i269);
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    $i274 := $or.i32($i273, 48);
    goto corral_source_split_698;

  corral_source_split_698:
    assume {:verifier.code 0} true;
    $i275 := $trunc.i32.i8($i274);
    call {:si_unique_call 65} {:cexpr "fpc"} boogie_si_record_i8($i275);
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    $i276 := $i275;
    goto $bb46;

  $bb35:
    assume $i252 == 1;
    goto corral_source_split_666;

  corral_source_split_666:
    assume {:verifier.code 0} true;
    $i253 := $zext.i8.i32($i251);
    goto corral_source_split_667;

  corral_source_split_667:
    assume {:verifier.code 0} true;
    $i254 := $and.i32($i253, 207);
    goto corral_source_split_668;

  corral_source_split_668:
    assume {:verifier.code 0} true;
    $i255 := $trunc.i32.i8($i254);
    call {:si_unique_call 61} {:cexpr "fpc"} boogie_si_record_i8($i255);
    goto corral_source_split_669;

  corral_source_split_669:
    assume {:verifier.code 0} true;
    $i256 := $slt.i32($i23, $sub.i32(0, 64));
    goto corral_source_split_670;

  corral_source_split_670:
    assume {:verifier.code 0} true;
    assume {:branchcond $i256} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i256 == 1);
    goto corral_source_split_677;

  corral_source_split_677:
    assume {:verifier.code 0} true;
    $i261 := $sgt.i32($i23, 64);
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    assume {:branchcond $i261} true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i261 == 1);
    goto corral_source_split_687;

  corral_source_split_687:
    assume {:verifier.code 0} true;
    $i266 := $zext.i8.i32($i255);
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    $i267 := $or.i32($i266, 48);
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    $i268 := $trunc.i32.i8($i267);
    call {:si_unique_call 64} {:cexpr "fpc"} boogie_si_record_i8($i268);
    assume {:verifier.code 0} true;
    $i265 := $i268;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i260 := $i265;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    $i269 := $i260;
    goto $bb43;

  $bb40:
    assume $i261 == 1;
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    $i262 := $zext.i8.i32($i255);
    goto corral_source_split_683;

  corral_source_split_683:
    assume {:verifier.code 0} true;
    $i263 := $or.i32($i262, 32);
    goto corral_source_split_684;

  corral_source_split_684:
    assume {:verifier.code 0} true;
    $i264 := $trunc.i32.i8($i263);
    call {:si_unique_call 63} {:cexpr "fpc"} boogie_si_record_i8($i264);
    goto corral_source_split_685;

  corral_source_split_685:
    assume {:verifier.code 0} true;
    $i265 := $i264;
    goto $bb42;

  $bb37:
    assume $i256 == 1;
    goto corral_source_split_672;

  corral_source_split_672:
    assume {:verifier.code 0} true;
    $i257 := $zext.i8.i32($i255);
    goto corral_source_split_673;

  corral_source_split_673:
    assume {:verifier.code 0} true;
    $i258 := $or.i32($i257, 16);
    goto corral_source_split_674;

  corral_source_split_674:
    assume {:verifier.code 0} true;
    $i259 := $trunc.i32.i8($i258);
    call {:si_unique_call 62} {:cexpr "fpc"} boogie_si_record_i8($i259);
    goto corral_source_split_675;

  corral_source_split_675:
    assume {:verifier.code 0} true;
    $i260 := $i259;
    goto $bb39;

  $bb29:
    assume $i104 == 1;
    $p105 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_535;

  corral_source_split_535:
    assume {:verifier.code 0} true;
    $i106 := $load.i16($M.2, $p105);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i107 := $zext.i16.i32($i106);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    $p108 := $M.1;
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $p109 := $add.ref($add.ref($p108, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i110 := $load.i32($M.0, $p109);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i111 := $eq.i32($i107, $i110);
    goto corral_source_split_541;

  corral_source_split_541:
    assume {:verifier.code 0} true;
    $i112 := (if $i111 == 1 then 0 else 3);
    call {:si_unique_call 49} {:cexpr "voice_shift"} boogie_si_record_i32($i112);
    $p113 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(0, 1));
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    $i114 := $load.i8($M.2, $p113);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    $i115 := $zext.i8.i32($i114);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i116 := $add.i32($i115, $i112);
    call {:si_unique_call 50} {:cexpr "voice_shift"} boogie_si_record_i32($i116);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $p117 := $add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $i118 := $load.i16($M.0, $p117);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    $i119 := $zext.i16.i32($i118);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i120 := $ne.i32($i119, 1021);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    assume {:branchcond $i120} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i120 == 1);
    goto corral_source_split_566;

  corral_source_split_566:
    assume {:verifier.code 0} true;
    $p134 := $M.1;
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $p135 := $add.ref($add.ref($p134, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $i136 := $load.i8($M.0, $p135);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    $i137 := $sext.i8.i32($i136);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $i138 := $shl.i32(1, $i116);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $i139 := $trunc.i32.i8($i138);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i140 := $sext.i8.i32($i139);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i141 := $or.i32($i137, $i140);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $i142 := $trunc.i32.i8($i141);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    $p143 := $M.1;
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $p144 := $add.ref($add.ref($p143, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p144, $i142);
    assume {:verifier.code 0} true;
    $i133 := $i103;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    $p145 := $M.1;
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    $p146 := $add.ref($add.ref($p145, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_581;

  corral_source_split_581:
    assume {:verifier.code 0} true;
    $i147 := $load.i32($M.0, $p146);
    goto corral_source_split_582;

  corral_source_split_582:
    assume {:verifier.code 0} true;
    $p148 := $M.1;
    goto corral_source_split_583;

  corral_source_split_583:
    assume {:verifier.code 0} true;
    $p149 := $add.ref($add.ref($p148, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_584;

  corral_source_split_584:
    assume {:verifier.code 0} true;
    $i150 := $load.i8($M.0, $p149);
    goto corral_source_split_585;

  corral_source_split_585:
    assume {:verifier.code 0} true;
    $i151 := $zext.i8.i32($i150);
    goto corral_source_split_586;

  corral_source_split_586:
    assume {:verifier.code 0} true;
    call {:si_unique_call 51} opl3_command($i147, 4, $i151);
    goto corral_source_split_587;

  corral_source_split_587:
    assume {:verifier.code 0} true;
    $i152 := $i133;
    goto $bb34;

  $bb31:
    assume $i120 == 1;
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $p121 := $M.1;
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $p122 := $add.ref($add.ref($p121, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    $i123 := $load.i8($M.0, $p122);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i124 := $sext.i8.i32($i123);
    goto corral_source_split_555;

  corral_source_split_555:
    assume {:verifier.code 0} true;
    $i125 := $shl.i32(1, $i116);
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    $i126 := $trunc.i32.i8($i125);
    goto corral_source_split_557;

  corral_source_split_557:
    assume {:verifier.code 0} true;
    $i127 := $sext.i8.i32($i126);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i128 := $xor.i32($i127, $sub.i32(0, 1));
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    $i129 := $and.i32($i124, $i128);
    goto corral_source_split_560;

  corral_source_split_560:
    assume {:verifier.code 0} true;
    $i130 := $trunc.i32.i8($i129);
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    $p131 := $M.1;
    goto corral_source_split_562;

  corral_source_split_562:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($add.ref($p131, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p132, $i130);
    goto corral_source_split_564;

  corral_source_split_564:
    assume {:verifier.code 0} true;
    $i133 := 2;
    goto $bb33;

  $bb23:
    assume $i96 == 1;
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $p97 := $add.ref($add.ref($p88, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    $i98 := $load.i16($M.0, $p97);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $i99 := $zext.i16.i32($i98);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i100 := $eq.i32($i99, 1021);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    assume {:branchcond $i100} true;
    goto $bb26, $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    assume !($i100 == 1);
    goto $bb25;

  $bb26:
    assume $i100 == 1;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb20:
    assume $i91 == 1;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    call {:si_unique_call 47} vslice_dummy_var_12 := printk.ref.i32(.str.5, $i1);
    goto corral_source_split_515;

  corral_source_split_515:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb17:
    assume $i84 == 1;
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    $p85 := $M.1;
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p85, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    $p88 := $p86;
    goto $bb19;

  $bb14:
    assume $i54 == 1;
    $p55 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_476;

  corral_source_split_476:
    assume {:verifier.code 0} true;
    $i56 := $load.i16($M.2, $p55);
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    $i57 := $zext.i16.i32($i56);
    $p59 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_478;

  corral_source_split_478:
    assume {:verifier.code 0} true;
    $i60 := $load.i8($M.2, $p59);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $i61 := $zext.i8.i32($i60);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    $i62 := $add.i32($i61, 64);
    goto corral_source_split_481;

  corral_source_split_481:
    assume {:verifier.code 0} true;
    call {:si_unique_call 44} opl3_command($i57, $i62, 255);
    $p63 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(2, 1));
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    $i64 := $load.i16($M.2, $p63);
    goto corral_source_split_483;

  corral_source_split_483:
    assume {:verifier.code 0} true;
    $i65 := $zext.i16.i32($i64);
    $p67 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    $i68 := $load.i8($M.2, $p67);
    goto corral_source_split_485;

  corral_source_split_485:
    assume {:verifier.code 0} true;
    $i69 := $zext.i8.i32($i68);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i70 := $add.i32($i69, 64);
    goto corral_source_split_487;

  corral_source_split_487:
    assume {:verifier.code 0} true;
    call {:si_unique_call 45} opl3_command($i65, $i70, 255);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb11:
    assume $i28 == 1;
    goto corral_source_split_452;

  corral_source_split_452:
    assume {:verifier.code 0} true;
    $i29 := $sext.i32.i64($i1);
    goto corral_source_split_453;

  corral_source_split_453:
    assume {:verifier.code 0} true;
    $p30 := $M.1;
    goto corral_source_split_454;

  corral_source_split_454:
    assume {:verifier.code 0} true;
    $p33 := $add.ref($add.ref($add.ref($add.ref($p30, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i29, 56)), $mul.ref(40, 1));
    goto corral_source_split_455;

  corral_source_split_455:
    assume {:verifier.code 0} true;
    $i34 := $load.i32($M.0, $p33);
    goto corral_source_split_456;

  corral_source_split_456:
    assume {:verifier.code 0} true;
    call {:si_unique_call 41} set_voice_volume($i1, $i3, $i34);
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb8:
    assume $i27 == 1;
    goto corral_source_split_448;

  corral_source_split_448:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i10 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i6 == 1;
    goto $bb2;
}



const opl3_set_instr: ref;

axiom opl3_set_instr == $sub.ref(0, 52101);

procedure opl3_set_instr($i0: i32, $i1: i32, $i2: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation opl3_set_instr($i0: i32, $i1: i32, $i2: i32) returns ($r: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p19: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 91} {:cexpr "opl3_set_instr:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 92} {:cexpr "opl3_set_instr:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 93} {:cexpr "opl3_set_instr:arg:instr_no"} boogie_si_record_i32($i2);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32($i1, 0);
    goto corral_source_split_887;

  corral_source_split_887:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i3 == 1);
    goto corral_source_split_889;

  corral_source_split_889:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_890;

  corral_source_split_890:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_891;

  corral_source_split_891:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_892;

  corral_source_split_892:
    assume {:verifier.code 0} true;
    $i7 := $sle.i32($i6, $i1);
    goto corral_source_split_893;

  corral_source_split_893:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i8 := $slt.i32($i2, 0);
    goto corral_source_split_895;

  corral_source_split_895:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb8, $bb10;

  $bb10:
    assume !($i8 == 1);
    goto corral_source_split_897;

  corral_source_split_897:
    assume {:verifier.code 0} true;
    $i9 := $sgt.i32($i2, 255);
    goto corral_source_split_898;

  corral_source_split_898:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    $i10 := $i2;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto corral_source_split_900;

  corral_source_split_900:
    assume {:verifier.code 0} true;
    $p11 := $M.1;
    goto corral_source_split_901;

  corral_source_split_901:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($p11, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_902;

  corral_source_split_902:
    assume {:verifier.code 0} true;
    $p13 := $bitcast.ref.ref($p12);
    goto corral_source_split_903;

  corral_source_split_903:
    assume {:verifier.code 0} true;
    $i14 := $sext.i32.i64($i10);
    goto corral_source_split_904;

  corral_source_split_904:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($p13, $mul.ref($i14, 40));
    goto corral_source_split_905;

  corral_source_split_905:
    assume {:verifier.code 0} true;
    $i16 := $sext.i32.i64($i1);
    goto corral_source_split_906;

  corral_source_split_906:
    assume {:verifier.code 0} true;
    $p17 := $M.1;
    goto corral_source_split_907;

  corral_source_split_907:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($add.ref($p17, $mul.ref(0, 11656)), $mul.ref(11352, 1)), $mul.ref($i16, 8));
    goto corral_source_split_908;

  corral_source_split_908:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p19, $p15);
    goto corral_source_split_909;

  corral_source_split_909:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb11:
    assume {:verifier.code 0} true;
    assume $i9 == 1;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i10 := 0;
    goto $bb13;

  $bb8:
    assume {:verifier.code 0} true;
    assume $i8 == 1;
    goto $bb9;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i3 == 1;
    goto $bb2;
}



const opl3_reset: ref;

axiom opl3_reset == $sub.ref(0, 53133);

procedure opl3_reset($i0: i32);
  free requires assertsPassed;
  modifies $M.0, $M.2;



implementation opl3_reset($i0: i32)
{
  var $p1: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i9: i64;
  var $p10: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i64;
  var $p20: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i64;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i64;
  var $p32: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i64;
  var $p38: ref;
  var $i39: i16;
  var $i40: i32;
  var $i41: i64;
  var $p42: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i64;
  var $p49: ref;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i64;
  var $p54: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i64;
  var $p60: ref;
  var $i61: i8;
  var $i62: i32;
  var $i63: i1;
  var $i64: i64;
  var $p65: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i64;
  var $p71: ref;
  var $i72: i16;
  var $i73: i32;
  var $i74: i64;
  var $p75: ref;
  var $p77: ref;
  var $i78: i32;
  var $i79: i64;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i32;
  var $i86: i64;
  var $p87: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i64;
  var $p93: ref;
  var $i94: i16;
  var $i95: i32;
  var $i96: i64;
  var $p97: ref;
  var $p99: ref;
  var $i100: i32;
  var $i101: i64;
  var $p104: ref;
  var $i105: i8;
  var $i106: i32;
  var $i107: i32;
  var $i109: i32;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $i113: i1;
  var $i8: i32;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p126: ref;
  var $p127: ref;
  var $p129: ref;
  var $p130: ref;
  var $p132: ref;
  var $p133: ref;
  var $p135: ref;
  var $p136: ref;
  var $p138: ref;
  var $p139: ref;
  var $p141: ref;
  var $p142: ref;
  var $p144: ref;
  var $p145: ref;
  var $p147: ref;
  var $p148: ref;
  var $p150: ref;
  var $p151: ref;
  var $p153: ref;
  var $p154: ref;
  var $p156: ref;
  var $p157: ref;
  var $p159: ref;
  var $p160: ref;
  var $p162: ref;
  var $p163: ref;
  var $p165: ref;
  var $p166: ref;
  var $p168: ref;
  var $p169: ref;
  var $p171: ref;
  var $p172: ref;
  var $p174: ref;
  var vslice_dummy_var_13: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 94} {:cexpr "opl3_reset:arg:devno"} boogie_si_record_i32($i0);
    goto corral_source_split_911;

  corral_source_split_911:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $p1 := $M.1;
    goto corral_source_split_913;

  corral_source_split_913:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($add.ref($p1, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(0, 4));
    goto corral_source_split_914;

  corral_source_split_914:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p3, 0);
    goto corral_source_split_915;

  corral_source_split_915:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p124 := $M.1;
    goto corral_source_split_917;

  corral_source_split_917:
    assume {:verifier.code 0} true;
    $p126 := $add.ref($add.ref($add.ref($p124, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(1, 4));
    goto corral_source_split_918;

  corral_source_split_918:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p126, 1);
    goto corral_source_split_919;

  corral_source_split_919:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $p127 := $M.1;
    goto corral_source_split_1072;

  corral_source_split_1072:
    assume {:verifier.code 0} true;
    $p129 := $add.ref($add.ref($add.ref($p127, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(2, 4));
    goto corral_source_split_1073;

  corral_source_split_1073:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p129, 2);
    goto corral_source_split_1074;

  corral_source_split_1074:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $p130 := $M.1;
    goto corral_source_split_1076;

  corral_source_split_1076:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($add.ref($add.ref($p130, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(3, 4));
    goto corral_source_split_1077;

  corral_source_split_1077:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p132, 3);
    goto corral_source_split_1078;

  corral_source_split_1078:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    $p133 := $M.1;
    goto corral_source_split_1080;

  corral_source_split_1080:
    assume {:verifier.code 0} true;
    $p135 := $add.ref($add.ref($add.ref($p133, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(4, 4));
    goto corral_source_split_1081;

  corral_source_split_1081:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p135, 4);
    goto corral_source_split_1082;

  corral_source_split_1082:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $p136 := $M.1;
    goto corral_source_split_1084;

  corral_source_split_1084:
    assume {:verifier.code 0} true;
    $p138 := $add.ref($add.ref($add.ref($p136, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(5, 4));
    goto corral_source_split_1085;

  corral_source_split_1085:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p138, 5);
    goto corral_source_split_1086;

  corral_source_split_1086:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $p139 := $M.1;
    goto corral_source_split_1088;

  corral_source_split_1088:
    assume {:verifier.code 0} true;
    $p141 := $add.ref($add.ref($add.ref($p139, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(6, 4));
    goto corral_source_split_1089;

  corral_source_split_1089:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p141, 6);
    goto corral_source_split_1090;

  corral_source_split_1090:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $p142 := $M.1;
    goto corral_source_split_1092;

  corral_source_split_1092:
    assume {:verifier.code 0} true;
    $p144 := $add.ref($add.ref($add.ref($p142, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(7, 4));
    goto corral_source_split_1093;

  corral_source_split_1093:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p144, 7);
    goto corral_source_split_1094;

  corral_source_split_1094:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $p145 := $M.1;
    goto corral_source_split_1096;

  corral_source_split_1096:
    assume {:verifier.code 0} true;
    $p147 := $add.ref($add.ref($add.ref($p145, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(8, 4));
    goto corral_source_split_1097;

  corral_source_split_1097:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p147, 8);
    goto corral_source_split_1098;

  corral_source_split_1098:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p148 := $M.1;
    goto corral_source_split_1100;

  corral_source_split_1100:
    assume {:verifier.code 0} true;
    $p150 := $add.ref($add.ref($add.ref($p148, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(9, 4));
    goto corral_source_split_1101;

  corral_source_split_1101:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p150, 9);
    goto corral_source_split_1102;

  corral_source_split_1102:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $p151 := $M.1;
    goto corral_source_split_1104;

  corral_source_split_1104:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($add.ref($add.ref($p151, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(10, 4));
    goto corral_source_split_1105;

  corral_source_split_1105:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p153, 10);
    goto corral_source_split_1106;

  corral_source_split_1106:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    $p154 := $M.1;
    goto corral_source_split_1108;

  corral_source_split_1108:
    assume {:verifier.code 0} true;
    $p156 := $add.ref($add.ref($add.ref($p154, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(11, 4));
    goto corral_source_split_1109;

  corral_source_split_1109:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p156, 11);
    goto corral_source_split_1110;

  corral_source_split_1110:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    $p157 := $M.1;
    goto corral_source_split_1112;

  corral_source_split_1112:
    assume {:verifier.code 0} true;
    $p159 := $add.ref($add.ref($add.ref($p157, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(12, 4));
    goto corral_source_split_1113;

  corral_source_split_1113:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p159, 12);
    goto corral_source_split_1114;

  corral_source_split_1114:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    $p160 := $M.1;
    goto corral_source_split_1116;

  corral_source_split_1116:
    assume {:verifier.code 0} true;
    $p162 := $add.ref($add.ref($add.ref($p160, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(13, 4));
    goto corral_source_split_1117;

  corral_source_split_1117:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p162, 13);
    goto corral_source_split_1118;

  corral_source_split_1118:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $p163 := $M.1;
    goto corral_source_split_1120;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    $p165 := $add.ref($add.ref($add.ref($p163, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(14, 4));
    goto corral_source_split_1121;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p165, 14);
    goto corral_source_split_1122;

  corral_source_split_1122:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    $p166 := $M.1;
    goto corral_source_split_1124;

  corral_source_split_1124:
    assume {:verifier.code 0} true;
    $p168 := $add.ref($add.ref($add.ref($p166, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(15, 4));
    goto corral_source_split_1125;

  corral_source_split_1125:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p168, 15);
    goto corral_source_split_1126;

  corral_source_split_1126:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $p169 := $M.1;
    goto corral_source_split_1128;

  corral_source_split_1128:
    assume {:verifier.code 0} true;
    $p171 := $add.ref($add.ref($add.ref($p169, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(16, 4));
    goto corral_source_split_1129;

  corral_source_split_1129:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p171, 16);
    goto corral_source_split_1130;

  corral_source_split_1130:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    $p172 := $M.1;
    goto corral_source_split_1132;

  corral_source_split_1132:
    assume {:verifier.code 0} true;
    $p174 := $add.ref($add.ref($add.ref($p172, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(17, 4));
    goto corral_source_split_1133;

  corral_source_split_1133:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p174, 17);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_921;

  corral_source_split_921:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_922;

  corral_source_split_922:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_923;

  corral_source_split_923:
    assume {:verifier.code 0} true;
    $i7 := $sgt.i32($i6, 0);
    goto corral_source_split_924;

  corral_source_split_924:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb5, $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume !($i7 == 1);
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $p114 := $M.1;
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    $p115 := $add.ref($add.ref($p114, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    $i116 := $load.i32($M.0, $p115);
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    $i117 := $eq.i32($i116, 2);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    assume {:branchcond $i117} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i117 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    return;

  $bb16:
    assume $i117 == 1;
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    $p118 := $M.1;
    goto corral_source_split_1029;

  corral_source_split_1029:
    assume {:verifier.code 0} true;
    $p119 := $add.ref($add.ref($p118, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1030;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p119, 18);
    goto corral_source_split_1031;

  corral_source_split_1031:
    assume {:verifier.code 0} true;
    $p120 := $M.1;
    goto corral_source_split_1032;

  corral_source_split_1032:
    assume {:verifier.code 0} true;
    $p121 := $add.ref($add.ref($p120, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_1033;

  corral_source_split_1033:
    assume {:verifier.code 0} true;
    $p122 := $load.ref($M.0, $p121);
    goto corral_source_split_1034;

  corral_source_split_1034:
    assume {:verifier.code 0} true;
    $p123 := $add.ref($add.ref($p122, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_1035;

  corral_source_split_1035:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p123, 18);
    goto corral_source_split_1036;

  corral_source_split_1036:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1038;

  corral_source_split_1038:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1040;

  corral_source_split_1040:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1042;

  corral_source_split_1042:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1044;

  corral_source_split_1044:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1046;

  corral_source_split_1046:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1048;

  corral_source_split_1048:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1050;

  corral_source_split_1050:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1052;

  corral_source_split_1052:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1054;

  corral_source_split_1054:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1056;

  corral_source_split_1056:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1058;

  corral_source_split_1058:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1060;

  corral_source_split_1060:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1062;

  corral_source_split_1062:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1064;

  corral_source_split_1064:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1066;

  corral_source_split_1066:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1068;

  corral_source_split_1068:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(1, 1)), 2);
    goto corral_source_split_1070;

  corral_source_split_1070:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(1, 1)), 2);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb5:
    assume $i7 == 1;
    goto corral_source_split_926;

  corral_source_split_926:
    assume {:verifier.code 0} true;
    $i8 := 0;
    goto $bb8;

  $bb8:
    call $i9, $p10, $p12, $i13, $i14, $p16, $i17, $i18, $i19, $p20, $p22, $i23, $i24, $p27, $i28, $i29, $i30, $i31, $p32, $p34, $i35, $i36, $p38, $i39, $i40, $i41, $p42, $p44, $i45, $i46, $p49, $i50, $i51, $i52, $i53, $p54, $p56, $i57, $i58, $p60, $i61, $i62, $i63, $i64, $p65, $p67, $i68, $i69, $p71, $i72, $i73, $i74, $p75, $p77, $i78, $i79, $p82, $i83, $i84, $i85, $i86, $p87, $p89, $i90, $i91, $p93, $i94, $i95, $i96, $p97, $p99, $i100, $i101, $p104, $i105, $i106, $i107, $i109, $p110, $p111, $i112, $i113, $i8, vslice_dummy_var_13 := opl3_reset_loop_$bb8($i0, $i9, $p10, $p12, $i13, $i14, $p16, $i17, $i18, $i19, $p20, $p22, $i23, $i24, $p27, $i28, $i29, $i30, $i31, $p32, $p34, $i35, $i36, $p38, $i39, $i40, $i41, $p42, $p44, $i45, $i46, $p49, $i50, $i51, $i52, $i53, $p54, $p56, $i57, $i58, $p60, $i61, $i62, $i63, $i64, $p65, $p67, $i68, $i69, $p71, $i72, $i73, $i74, $p75, $p77, $i78, $i79, $p82, $i83, $i84, $i85, $i86, $p87, $p89, $i90, $i91, $p93, $i94, $i95, $i96, $p97, $p99, $i100, $i101, $p104, $i105, $i106, $i107, $i109, $p110, $p111, $i112, $i113, $i8, vslice_dummy_var_13);
    goto $bb8_last;

  corral_source_split_928:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i9 := $sext.i32.i64($i8);
    goto corral_source_split_930;

  corral_source_split_930:
    assume {:verifier.code 0} true;
    $p10 := $M.1;
    goto corral_source_split_931;

  corral_source_split_931:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($add.ref($p10, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i9, 4));
    goto corral_source_split_932;

  corral_source_split_932:
    assume {:verifier.code 0} true;
    $i13 := $load.i32($M.0, $p12);
    goto corral_source_split_933;

  corral_source_split_933:
    assume {:verifier.code 0} true;
    $i14 := $sext.i32.i64($i13);
    goto corral_source_split_934;

  corral_source_split_934:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i14, 8)), $mul.ref(2, 1));
    goto corral_source_split_935;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    $i17 := $load.i16($M.2, $p16);
    goto corral_source_split_936;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    $i18 := $zext.i16.i32($i17);
    goto corral_source_split_937;

  corral_source_split_937:
    assume {:verifier.code 0} true;
    $i19 := $sext.i32.i64($i8);
    goto corral_source_split_938;

  corral_source_split_938:
    assume {:verifier.code 0} true;
    $p20 := $M.1;
    goto corral_source_split_939;

  corral_source_split_939:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($add.ref($p20, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i19, 4));
    goto corral_source_split_940;

  corral_source_split_940:
    assume {:verifier.code 0} true;
    $i23 := $load.i32($M.0, $p22);
    goto corral_source_split_941;

  corral_source_split_941:
    assume {:verifier.code 0} true;
    $i24 := $sext.i32.i64($i23);
    goto corral_source_split_942;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i24, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_943;

  corral_source_split_943:
    assume {:verifier.code 0} true;
    $i28 := $load.i8($M.2, $p27);
    goto corral_source_split_944;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    $i29 := $zext.i8.i32($i28);
    goto corral_source_split_945;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    $i30 := $add.i32($i29, 64);
    goto corral_source_split_946;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    call {:si_unique_call 95} opl3_command($i18, $i30, 255);
    goto corral_source_split_947;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    $i31 := $sext.i32.i64($i8);
    goto corral_source_split_948;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    $p32 := $M.1;
    goto corral_source_split_949;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    $p34 := $add.ref($add.ref($add.ref($p32, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i31, 4));
    goto corral_source_split_950;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    $i35 := $load.i32($M.0, $p34);
    goto corral_source_split_951;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    $i36 := $sext.i32.i64($i35);
    goto corral_source_split_952;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i36, 8)), $mul.ref(2, 1));
    goto corral_source_split_953;

  corral_source_split_953:
    assume {:verifier.code 0} true;
    $i39 := $load.i16($M.2, $p38);
    goto corral_source_split_954;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    $i40 := $zext.i16.i32($i39);
    goto corral_source_split_955;

  corral_source_split_955:
    assume {:verifier.code 0} true;
    $i41 := $sext.i32.i64($i8);
    goto corral_source_split_956;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    $p42 := $M.1;
    goto corral_source_split_957;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($add.ref($p42, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i41, 4));
    goto corral_source_split_958;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    $i45 := $load.i32($M.0, $p44);
    goto corral_source_split_959;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    $i46 := $sext.i32.i64($i45);
    goto corral_source_split_960;

  corral_source_split_960:
    assume {:verifier.code 0} true;
    $p49 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i46, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_961;

  corral_source_split_961:
    assume {:verifier.code 0} true;
    $i50 := $load.i8($M.2, $p49);
    goto corral_source_split_962;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    $i51 := $zext.i8.i32($i50);
    goto corral_source_split_963;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i51, 64);
    goto corral_source_split_964;

  corral_source_split_964:
    assume {:verifier.code 0} true;
    call {:si_unique_call 96} opl3_command($i40, $i52, 255);
    goto corral_source_split_965;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    $i53 := $sext.i32.i64($i8);
    goto corral_source_split_966;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    $p54 := $M.1;
    goto corral_source_split_967;

  corral_source_split_967:
    assume {:verifier.code 0} true;
    $p56 := $add.ref($add.ref($add.ref($p54, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i53, 4));
    goto corral_source_split_968;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    $i57 := $load.i32($M.0, $p56);
    goto corral_source_split_969;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    $i58 := $sext.i32.i64($i57);
    goto corral_source_split_970;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i58, 8)), $mul.ref(1, 1));
    goto corral_source_split_971;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    $i61 := $load.i8($M.2, $p60);
    goto corral_source_split_972;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    $i62 := $zext.i8.i32($i61);
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    $i63 := $eq.i32($i62, 4);
    goto corral_source_split_974;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i63 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    call {:si_unique_call 99} vslice_dummy_var_13 := opl3_kill_note($i0, $i8, 0, 64);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    $i109 := $add.i32($i8, 1);
    call {:si_unique_call 100} {:cexpr "i"} boogie_si_record_i32($i109);
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    $p110 := $M.1;
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($p110, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1017;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    $i112 := $load.i32($M.0, $p111);
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    $i113 := $sgt.i32($i112, $i109);
    goto corral_source_split_1019;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i113 == 1);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb13:
    assume $i113 == 1;
    assume {:verifier.code 0} true;
    $i8 := $i109;
    goto $bb13_dummy;

  $bb10:
    assume $i63 == 1;
    goto corral_source_split_976;

  corral_source_split_976:
    assume {:verifier.code 0} true;
    $i64 := $sext.i32.i64($i8);
    goto corral_source_split_977;

  corral_source_split_977:
    assume {:verifier.code 0} true;
    $p65 := $M.1;
    goto corral_source_split_978;

  corral_source_split_978:
    assume {:verifier.code 0} true;
    $p67 := $add.ref($add.ref($add.ref($p65, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i64, 4));
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    $i68 := $load.i32($M.0, $p67);
    goto corral_source_split_980;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    $i69 := $sext.i32.i64($i68);
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    $p71 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i69, 8)), $mul.ref(2, 1));
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    $i72 := $load.i16($M.2, $p71);
    goto corral_source_split_983;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    $i73 := $zext.i16.i32($i72);
    goto corral_source_split_984;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    $i74 := $sext.i32.i64($i8);
    goto corral_source_split_985;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    $p75 := $M.1;
    goto corral_source_split_986;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    $p77 := $add.ref($add.ref($add.ref($p75, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i74, 4));
    goto corral_source_split_987;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    $i78 := $load.i32($M.0, $p77);
    goto corral_source_split_988;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    $i79 := $sext.i32.i64($i78);
    goto corral_source_split_989;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    $p82 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i79, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    $i83 := $load.i8($M.2, $p82);
    goto corral_source_split_991;

  corral_source_split_991:
    assume {:verifier.code 0} true;
    $i84 := $zext.i8.i32($i83);
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    $i85 := $add.i32($i84, 64);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    call {:si_unique_call 97} opl3_command($i73, $i85, 255);
    goto corral_source_split_994;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    $i86 := $sext.i32.i64($i8);
    goto corral_source_split_995;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    $p87 := $M.1;
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    $p89 := $add.ref($add.ref($add.ref($p87, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i86, 4));
    goto corral_source_split_997;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    $i90 := $load.i32($M.0, $p89);
    goto corral_source_split_998;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    $i91 := $sext.i32.i64($i90);
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    $p93 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i91, 8)), $mul.ref(2, 1));
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    $i94 := $load.i16($M.2, $p93);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    $i95 := $zext.i16.i32($i94);
    goto corral_source_split_1002;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    $i96 := $sext.i32.i64($i8);
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    $p97 := $M.1;
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    $p99 := $add.ref($add.ref($add.ref($p97, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i96, 4));
    goto corral_source_split_1005;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    $i100 := $load.i32($M.0, $p99);
    goto corral_source_split_1006;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    $i101 := $sext.i32.i64($i100);
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    $p104 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i101, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    $i105 := $load.i8($M.2, $p104);
    goto corral_source_split_1009;

  corral_source_split_1009:
    assume {:verifier.code 0} true;
    $i106 := $zext.i8.i32($i105);
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    $i107 := $add.i32($i106, 64);
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    call {:si_unique_call 98} opl3_command($i95, $i107, 255);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb13_dummy:
    assume false;
    return;

  $bb8_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_928;
}



const opl3_hw_control: ref;

axiom opl3_hw_control == $sub.ref(0, 54165);

procedure opl3_hw_control($i0: i32, $p1: ref);
  free requires assertsPassed;



implementation opl3_hw_control($i0: i32, $p1: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 101} {:cexpr "opl3_hw_control:arg:dev"} boogie_si_record_i32($i0);
    goto corral_source_split_1135;

  corral_source_split_1135:
    assume {:verifier.code 0} true;
    return;
}



const opl3_load_patch: ref;

axiom opl3_load_patch == $sub.ref(0, 55197);

procedure opl3_load_patch($i0: i32, $i1: i32, $p2: ref, $i3: i32, $i4: i32, $i5: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $CurrAddr, assertsPassed;



implementation opl3_load_patch($i0: i32, $i1: i32, $p2: ref, $i3: i32, $i4: i32, $i5: i32) returns ($r: i32)
{
  var $p6: ref;
  var $i7: i1;
  var $p10: ref;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i1;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $i26: i32;
  var $i28: i16;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i9: i32;
  var vslice_dummy_var_14: i32;
  var vslice_dummy_var_15: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 102} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 103} {:cexpr "opl3_load_patch:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 104} {:cexpr "opl3_load_patch:arg:format"} boogie_si_record_i32($i1);
    call {:si_unique_call 105} {:cexpr "opl3_load_patch:arg:offs"} boogie_si_record_i32($i3);
    call {:si_unique_call 106} {:cexpr "opl3_load_patch:arg:count"} boogie_si_record_i32($i4);
    call {:si_unique_call 107} {:cexpr "opl3_load_patch:arg:pmgr_flag"} boogie_si_record_i32($i5);
    goto corral_source_split_1137;

  corral_source_split_1137:
    assume {:verifier.code 0} true;
    $i7 := $ule.i32($i4, 39);
    goto corral_source_split_1138;

  corral_source_split_1138:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $p10 := $bitcast.ref.ref($p6);
    goto corral_source_split_1145;

  corral_source_split_1145:
    assume {:verifier.code 0} true;
    $i11 := $sext.i32.i64($i3);
    goto corral_source_split_1146;

  corral_source_split_1146:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($p10, $mul.ref($i11, 1));
    goto corral_source_split_1147;

  corral_source_split_1147:
    assume {:verifier.code 0} true;
    $i13 := $sext.i32.i64($i3);
    goto corral_source_split_1148;

  corral_source_split_1148:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($p2, $mul.ref($i13, 1));
    goto corral_source_split_1149;

  corral_source_split_1149:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i3);
    goto corral_source_split_1150;

  corral_source_split_1150:
    assume {:verifier.code 0} true;
    $i16 := $sub.i64(40, $i15);
    goto corral_source_split_1151;

  corral_source_split_1151:
    assume {:verifier.code 0} true;
    call {:si_unique_call 109} $i17 := ldv_copy_from_user_7($p12, $p14, $i16);
    goto SeqInstr_7, SeqInstr_8;

  SeqInstr_8:
    assume assertsPassed;
    goto SeqInstr_9;

  SeqInstr_9:
    call {:si_unique_call 110} {:cexpr "tmp"} boogie_si_record_i64($i17);
    goto corral_source_split_1152;

  corral_source_split_1152:
    assume {:verifier.code 0} true;
    $i18 := $ne.i64($i17, 0);
    goto corral_source_split_1153;

  corral_source_split_1153:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i18 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_1157;

  corral_source_split_1157:
    assume {:verifier.code 0} true;
    $i20 := $load.i32($M.0, $p19);
    goto corral_source_split_1158;

  corral_source_split_1158:
    assume {:verifier.code 0} true;
    $i21 := $slt.i32($i20, 0);
    goto corral_source_split_1159;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb8, $bb10;

  $bb10:
    assume !($i21 == 1);
    goto corral_source_split_1165;

  corral_source_split_1165:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_1166;

  corral_source_split_1166:
    assume {:verifier.code 0} true;
    $i23 := $load.i32($M.0, $p22);
    goto corral_source_split_1167;

  corral_source_split_1167:
    assume {:verifier.code 0} true;
    $i24 := $sgt.i32($i23, 255);
    goto corral_source_split_1168;

  corral_source_split_1168:
    assume {:verifier.code 0} true;
    assume {:branchcond $i24} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i24 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i28 := $trunc.i32.i16($i1);
    goto corral_source_split_1170;

  corral_source_split_1170:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1171;

  corral_source_split_1171:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p29, $i28);
    goto corral_source_split_1172;

  corral_source_split_1172:
    assume {:verifier.code 0} true;
    $p30 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_1173;

  corral_source_split_1173:
    assume {:verifier.code 0} true;
    $i31 := $load.i32($M.0, $p30);
    goto corral_source_split_1174;

  corral_source_split_1174:
    assume {:verifier.code 0} true;
    call {:si_unique_call 112} $i32 := store_instr($i31, $p6);
    call {:si_unique_call 113} {:cexpr "tmp___0"} boogie_si_record_i32($i32);
    goto corral_source_split_1175;

  corral_source_split_1175:
    assume {:verifier.code 0} true;
    $i9 := $i32;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1143;

  corral_source_split_1143:
    assume {:verifier.code 0} true;
    $r := $i9;
    return;

  $bb11:
    assume {:verifier.code 0} true;
    assume $i24 == 1;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_1161;

  corral_source_split_1161:
    assume {:verifier.code 0} true;
    $i26 := $load.i32($M.0, $p25);
    goto corral_source_split_1162;

  corral_source_split_1162:
    assume {:verifier.code 0} true;
    call {:si_unique_call 111} vslice_dummy_var_15 := printk.ref.i32(.str.1, $i26);
    goto corral_source_split_1163;

  corral_source_split_1163:
    assume {:verifier.code 0} true;
    $i9 := $sub.i32(0, 22);
    goto $bb3;

  $bb8:
    assume {:verifier.code 0} true;
    assume $i21 == 1;
    goto $bb9;

  $bb5:
    assume $i18 == 1;
    goto corral_source_split_1155;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    $i9 := $sub.i32(0, 14);
    goto $bb3;

  SeqInstr_7:
    assume !assertsPassed;
    return;

  $bb1:
    assume $i7 == 1;
    goto corral_source_split_1140;

  corral_source_split_1140:
    assume {:verifier.code 0} true;
    call {:si_unique_call 108} vslice_dummy_var_14 := printk.ref(.str.6);
    goto corral_source_split_1141;

  corral_source_split_1141:
    assume {:verifier.code 0} true;
    $i9 := $sub.i32(0, 22);
    goto $bb3;
}



const opl3_aftertouch: ref;

axiom opl3_aftertouch == $sub.ref(0, 56229);

procedure opl3_aftertouch($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;



implementation opl3_aftertouch($i0: i32, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i64;
  var $p9: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i64;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i1;
  var $i19: i64;
  var $p20: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $p44: ref;
  var $i45: i8;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i50: i1;
  var $i51: i1;
  var $i52: i1;
  var $i53: i1;
  var $p55: ref;
  var $i56: i8;
  var $i57: i32;
  var $i58: i1;
  var $i59: i32;
  var $i60: i32;
  var $p61: ref;
  var $i62: i16;
  var $i63: i32;
  var $p65: ref;
  var $i66: i8;
  var $i67: i32;
  var $i68: i32;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i32;
  var $p76: ref;
  var $i77: i16;
  var $i78: i32;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $p85: ref;
  var $i86: i8;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i90: i32;
  var $p91: ref;
  var $i92: i16;
  var $i93: i32;
  var $p95: ref;
  var $i96: i8;
  var $i97: i32;
  var $i98: i32;
  var $p100: ref;
  var $i101: i8;
  var $i102: i32;
  var $i103: i1;
  var $i104: i32;
  var $i105: i32;
  var $p106: ref;
  var $i107: i16;
  var $i108: i32;
  var $p110: ref;
  var $i111: i8;
  var $i112: i32;
  var $i113: i32;
  var $p115: ref;
  var $i116: i8;
  var $i117: i32;
  var $i118: i1;
  var $i119: i32;
  var $i120: i32;
  var $p121: ref;
  var $i122: i16;
  var $i123: i32;
  var $p125: ref;
  var $i126: i8;
  var $i127: i32;
  var $i128: i32;
  var $p130: ref;
  var $i131: i8;
  var $i132: i32;
  var $i133: i1;
  var $i134: i32;
  var $i135: i32;
  var $p136: ref;
  var $i137: i16;
  var $i138: i32;
  var $p140: ref;
  var $i141: i8;
  var $i142: i32;
  var $i143: i32;
  var $p145: ref;
  var $i146: i8;
  var $i147: i32;
  var $i148: i1;
  var $i149: i32;
  var $i150: i32;
  var $p151: ref;
  var $i152: i16;
  var $i153: i32;
  var $p155: ref;
  var $i156: i8;
  var $i157: i32;
  var $i158: i32;
  var $p160: ref;
  var $i161: i8;
  var $i162: i32;
  var $i163: i1;
  var $i164: i32;
  var $i165: i32;
  var $p166: ref;
  var $i167: i16;
  var $i168: i32;
  var $p170: ref;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $p175: ref;
  var $i176: i8;
  var $i177: i32;
  var $i178: i1;
  var $i179: i32;
  var $i180: i32;
  var $p181: ref;
  var $i182: i16;
  var $i183: i32;
  var $p185: ref;
  var $i186: i8;
  var $i187: i32;
  var $i188: i32;
  var $p190: ref;
  var $i191: i8;
  var $i192: i32;
  var $i193: i32;
  var $i194: i1;
  var $p196: ref;
  var $i197: i8;
  var $i198: i32;
  var $i199: i1;
  var $i200: i32;
  var $i201: i32;
  var $p202: ref;
  var $i203: i16;
  var $i204: i32;
  var $p206: ref;
  var $i207: i8;
  var $i208: i32;
  var $i209: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 114} {:cexpr "opl3_aftertouch:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 115} {:cexpr "opl3_aftertouch:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 116} {:cexpr "opl3_aftertouch:arg:pressure"} boogie_si_record_i32($i2);
    goto corral_source_split_1177;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32($i1, 0);
    goto corral_source_split_1178;

  corral_source_split_1178:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i3 == 1);
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_1181;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_1183;

  corral_source_split_1183:
    assume {:verifier.code 0} true;
    $i7 := $sle.i32($i6, $i1);
    goto corral_source_split_1184;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i8 := $sext.i32.i64($i1);
    goto corral_source_split_1186;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    $p9 := $M.1;
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($add.ref($p9, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i8, 4));
    goto corral_source_split_1188;

  corral_source_split_1188:
    assume {:verifier.code 0} true;
    $i12 := $load.i32($M.0, $p11);
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    $i13 := $sext.i32.i64($i12);
    $p15 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(1, 1));
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    $i16 := $load.i8($M.2, $p15);
    goto corral_source_split_1191;

  corral_source_split_1191:
    assume {:verifier.code 0} true;
    $i17 := $zext.i8.i32($i16);
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    $i18 := $eq.i32($i17, 0);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i18 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i19 := $sext.i32.i64($i1);
    goto corral_source_split_1197;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    $p20 := $M.1;
    goto corral_source_split_1198;

  corral_source_split_1198:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($add.ref($p20, $mul.ref(0, 11656)), $mul.ref(11352, 1)), $mul.ref($i19, 8));
    goto corral_source_split_1199;

  corral_source_split_1199:
    assume {:verifier.code 0} true;
    $p23 := $load.ref($M.0, $p22);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p23);
    goto corral_source_split_1201;

  corral_source_split_1201:
    assume {:verifier.code 0} true;
    $i25 := $eq.i64($i24, 0);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i25 == 1);
    assume {:verifier.code 0} true;
    $p29 := $p23;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto corral_source_split_1209;

  corral_source_split_1209:
    assume {:verifier.code 0} true;
    $i30 := $sext.i32.i64($i1);
    goto corral_source_split_1210;

  corral_source_split_1210:
    assume {:verifier.code 0} true;
    $p31 := $M.1;
    goto corral_source_split_1211;

  corral_source_split_1211:
    assume {:verifier.code 0} true;
    $p34 := $add.ref($add.ref($add.ref($add.ref($p31, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i30, 56)), $mul.ref(44, 1));
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    $i35 := $load.i32($M.0, $p34);
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    $i36 := $eq.i32($i35, 4);
    goto corral_source_split_1214;

  corral_source_split_1214:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i36 == 1);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $p175 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
    goto corral_source_split_1228;

  corral_source_split_1228:
    assume {:verifier.code 0} true;
    $i176 := $load.i8($M.0, $p175);
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i177 := $zext.i8.i32($i176);
    call {:si_unique_call 118} {:cexpr "tmp"} boogie_si_record_i32($i177);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i178 := $sgt.i32($i2, 110);
    goto corral_source_split_1231;

  corral_source_split_1231:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55, $bb56;

  $bb56:
    assume !($i178 == 1);
    assume {:verifier.code 0} true;
    $i180 := $i177;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    $p181 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    $i182 := $load.i16($M.2, $p181);
    goto corral_source_split_1365;

  corral_source_split_1365:
    assume {:verifier.code 0} true;
    $i183 := $zext.i16.i32($i182);
    $p185 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    $i186 := $load.i8($M.2, $p185);
    goto corral_source_split_1367;

  corral_source_split_1367:
    assume {:verifier.code 0} true;
    $i187 := $zext.i8.i32($i186);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i188 := $add.i32($i187, 32);
    goto corral_source_split_1369;

  corral_source_split_1369:
    assume {:verifier.code 0} true;
    call {:si_unique_call 144} opl3_command($i183, $i188, $i180);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $p190 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(10, 1));
    goto corral_source_split_1371;

  corral_source_split_1371:
    assume {:verifier.code 0} true;
    $i191 := $load.i8($M.0, $p190);
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    $i192 := $zext.i8.i32($i191);
    goto corral_source_split_1373;

  corral_source_split_1373:
    assume {:verifier.code 0} true;
    $i193 := $and.i32($i192, 1);
    goto corral_source_split_1374;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    $i194 := $ne.i32($i193, 0);
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    assume {:branchcond $i194} true;
    goto $bb58, $bb59;

  $bb59:
    assume !($i194 == 1);
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb58:
    assume $i194 == 1;
    goto corral_source_split_1377;

  corral_source_split_1377:
    assume {:verifier.code 0} true;
    $p196 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(1, 1));
    goto corral_source_split_1378;

  corral_source_split_1378:
    assume {:verifier.code 0} true;
    $i197 := $load.i8($M.0, $p196);
    goto corral_source_split_1379;

  corral_source_split_1379:
    assume {:verifier.code 0} true;
    $i198 := $zext.i8.i32($i197);
    call {:si_unique_call 145} {:cexpr "tmp"} boogie_si_record_i32($i198);
    goto corral_source_split_1380;

  corral_source_split_1380:
    assume {:verifier.code 0} true;
    $i199 := $sgt.i32($i2, 110);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    assume {:branchcond $i199} true;
    goto $bb60, $bb61;

  $bb61:
    assume !($i199 == 1);
    assume {:verifier.code 0} true;
    $i201 := $i198;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $p202 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $i203 := $load.i16($M.2, $p202);
    goto corral_source_split_1387;

  corral_source_split_1387:
    assume {:verifier.code 0} true;
    $i204 := $zext.i16.i32($i203);
    $p206 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    $i207 := $load.i8($M.2, $p206);
    goto corral_source_split_1389;

  corral_source_split_1389:
    assume {:verifier.code 0} true;
    $i208 := $zext.i8.i32($i207);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $i209 := $add.i32($i208, 32);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    call {:si_unique_call 147} opl3_command($i204, $i209, $i201);
    goto corral_source_split_1392;

  corral_source_split_1392:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb60:
    assume $i199 == 1;
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $i200 := $or.i32($i198, 64);
    call {:si_unique_call 146} {:cexpr "tmp"} boogie_si_record_i32($i200);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $i201 := $i200;
    goto $bb62;

  $bb55:
    assume $i178 == 1;
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    $i179 := $or.i32($i177, 64);
    call {:si_unique_call 143} {:cexpr "tmp"} boogie_si_record_i32($i179);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    $i180 := $i179;
    goto $bb57;

  $bb14:
    assume $i36 == 1;
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(10, 1));
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    $i39 := $load.i8($M.0, $p38);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    $i40 := $zext.i8.i32($i39);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i41 := $and.i32($i40, 1);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    $i42 := $shl.i32($i41, 1);
    goto corral_source_split_1221;

  corral_source_split_1221:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(21, 1));
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    $i45 := $load.i8($M.0, $p44);
    goto corral_source_split_1223;

  corral_source_split_1223:
    assume {:verifier.code 0} true;
    $i46 := $zext.i8.i32($i45);
    goto corral_source_split_1224;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    $i47 := $and.i32($i46, 1);
    goto corral_source_split_1225;

  corral_source_split_1225:
    assume {:verifier.code 0} true;
    $i48 := $or.i32($i42, $i47);
    call {:si_unique_call 117} {:cexpr "connection"} boogie_si_record_i32($i48);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    $i49 := $slt.i32($i48, 2);
    assume {:verifier.code 0} true;
    assume {:branchcond $i49} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i49 == 1);
    assume {:verifier.code 0} true;
    $i50 := $slt.i32($i48, 3);
    assume {:verifier.code 0} true;
    assume {:branchcond $i50} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    $i51 := $eq.i32($i48, 3);
    assume {:verifier.code 0} true;
    assume {:branchcond $i51} true;
    goto $bb21, $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume !($i51 == 1);
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb21:
    assume $i51 == 1;
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $p130 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i131 := $load.i8($M.0, $p130);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    $i132 := $zext.i8.i32($i131);
    call {:si_unique_call 120} {:cexpr "tmp"} boogie_si_record_i32($i132);
    goto corral_source_split_1242;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    $i133 := $sgt.i32($i2, 110);
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    assume {:branchcond $i133} true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i133 == 1);
    assume {:verifier.code 0} true;
    $i135 := $i132;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p136 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    $i137 := $load.i16($M.2, $p136);
    goto corral_source_split_1324;

  corral_source_split_1324:
    assume {:verifier.code 0} true;
    $i138 := $zext.i16.i32($i137);
    $p140 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i141 := $load.i8($M.2, $p140);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i142 := $zext.i8.i32($i141);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $i143 := $add.i32($i142, 32);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    call {:si_unique_call 136} opl3_command($i138, $i143, $i135);
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $p145 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(13, 1));
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $i146 := $load.i8($M.0, $p145);
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    $i147 := $zext.i8.i32($i146);
    call {:si_unique_call 137} {:cexpr "tmp"} boogie_si_record_i32($i147);
    goto corral_source_split_1332;

  corral_source_split_1332:
    assume {:verifier.code 0} true;
    $i148 := $sgt.i32($i2, 110);
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i148 == 1);
    assume {:verifier.code 0} true;
    $i150 := $i147;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1338;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    $i152 := $load.i16($M.2, $p151);
    goto corral_source_split_1339;

  corral_source_split_1339:
    assume {:verifier.code 0} true;
    $i153 := $zext.i16.i32($i152);
    $p155 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_1340;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    $i156 := $load.i8($M.2, $p155);
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    $i157 := $zext.i8.i32($i156);
    goto corral_source_split_1342;

  corral_source_split_1342:
    assume {:verifier.code 0} true;
    $i158 := $add.i32($i157, 32);
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    call {:si_unique_call 139} opl3_command($i153, $i158, $i150);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    $p160 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(14, 1));
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $i161 := $load.i8($M.0, $p160);
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    $i162 := $zext.i8.i32($i161);
    call {:si_unique_call 140} {:cexpr "tmp"} boogie_si_record_i32($i162);
    goto corral_source_split_1347;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $i163 := $sgt.i32($i2, 110);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb50, $bb51;

  $bb51:
    assume !($i163 == 1);
    assume {:verifier.code 0} true;
    $i165 := $i162;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    $p166 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    $i167 := $load.i16($M.2, $p166);
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    $i168 := $zext.i16.i32($i167);
    $p170 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1355;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    $i171 := $load.i8($M.2, $p170);
    goto corral_source_split_1356;

  corral_source_split_1356:
    assume {:verifier.code 0} true;
    $i172 := $zext.i8.i32($i171);
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    $i173 := $add.i32($i172, 32);
    goto corral_source_split_1358;

  corral_source_split_1358:
    assume {:verifier.code 0} true;
    call {:si_unique_call 142} opl3_command($i168, $i173, $i165);
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb50:
    assume $i163 == 1;
    goto corral_source_split_1350;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    $i164 := $or.i32($i162, 64);
    call {:si_unique_call 141} {:cexpr "tmp"} boogie_si_record_i32($i164);
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $i165 := $i164;
    goto $bb52;

  $bb47:
    assume $i148 == 1;
    goto corral_source_split_1335;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    $i149 := $or.i32($i147, 64);
    call {:si_unique_call 138} {:cexpr "tmp"} boogie_si_record_i32($i149);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i150 := $i149;
    goto $bb49;

  $bb44:
    assume $i133 == 1;
    goto corral_source_split_1320;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    $i134 := $or.i32($i132, 64);
    call {:si_unique_call 135} {:cexpr "tmp"} boogie_si_record_i32($i134);
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i135 := $i134;
    goto $bb46;

  $bb19:
    assume $i50 == 1;
    goto corral_source_split_1233;

  corral_source_split_1233:
    assume {:verifier.code 0} true;
    $p100 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(0, 1));
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    $i101 := $load.i8($M.0, $p100);
    goto corral_source_split_1235;

  corral_source_split_1235:
    assume {:verifier.code 0} true;
    $i102 := $zext.i8.i32($i101);
    call {:si_unique_call 119} {:cexpr "tmp"} boogie_si_record_i32($i102);
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    $i103 := $sgt.i32($i2, 110);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    assume {:branchcond $i103} true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i103 == 1);
    assume {:verifier.code 0} true;
    $i105 := $i102;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $i107 := $load.i16($M.2, $p106);
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    $i108 := $zext.i16.i32($i107);
    $p110 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_1299;

  corral_source_split_1299:
    assume {:verifier.code 0} true;
    $i111 := $load.i8($M.2, $p110);
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    $i112 := $zext.i8.i32($i111);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $i113 := $add.i32($i112, 32);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    call {:si_unique_call 131} opl3_command($i108, $i113, $i105);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    $p115 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(14, 1));
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    $i116 := $load.i8($M.0, $p115);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i117 := $zext.i8.i32($i116);
    call {:si_unique_call 132} {:cexpr "tmp"} boogie_si_record_i32($i117);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    $i118 := $sgt.i32($i2, 110);
    goto corral_source_split_1307;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    assume {:branchcond $i118} true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i118 == 1);
    assume {:verifier.code 0} true;
    $i120 := $i117;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $p121 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i122 := $load.i16($M.2, $p121);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    $i123 := $zext.i16.i32($i122);
    $p125 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1314;

  corral_source_split_1314:
    assume {:verifier.code 0} true;
    $i126 := $load.i8($M.2, $p125);
    goto corral_source_split_1315;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    $i127 := $zext.i8.i32($i126);
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    $i128 := $add.i32($i127, 32);
    goto corral_source_split_1317;

  corral_source_split_1317:
    assume {:verifier.code 0} true;
    call {:si_unique_call 134} opl3_command($i123, $i128, $i120);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb41:
    assume $i118 == 1;
    goto corral_source_split_1309;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    $i119 := $or.i32($i117, 64);
    call {:si_unique_call 133} {:cexpr "tmp"} boogie_si_record_i32($i119);
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    $i120 := $i119;
    goto $bb43;

  $bb38:
    assume $i103 == 1;
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    $i104 := $or.i32($i102, 64);
    call {:si_unique_call 130} {:cexpr "tmp"} boogie_si_record_i32($i104);
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $i105 := $i104;
    goto $bb40;

  $bb17:
    assume $i49 == 1;
    assume {:verifier.code 0} true;
    $i52 := $slt.i32($i48, 1);
    assume {:verifier.code 0} true;
    assume {:branchcond $i52} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i52 == 1);
    goto corral_source_split_1245;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    $p70 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(1, 1));
    goto corral_source_split_1246;

  corral_source_split_1246:
    assume {:verifier.code 0} true;
    $i71 := $load.i8($M.0, $p70);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    $i72 := $zext.i8.i32($i71);
    call {:si_unique_call 121} {:cexpr "tmp"} boogie_si_record_i32($i72);
    goto corral_source_split_1248;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    $i73 := $sgt.i32($i2, 110);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    assume {:branchcond $i73} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i73 == 1);
    assume {:verifier.code 0} true;
    $i75 := $i72;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $p76 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $i77 := $load.i16($M.2, $p76);
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $i78 := $zext.i16.i32($i77);
    $p80 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $i81 := $load.i8($M.2, $p80);
    goto corral_source_split_1274;

  corral_source_split_1274:
    assume {:verifier.code 0} true;
    $i82 := $zext.i8.i32($i81);
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $i83 := $add.i32($i82, 32);
    goto corral_source_split_1276;

  corral_source_split_1276:
    assume {:verifier.code 0} true;
    call {:si_unique_call 126} opl3_command($i78, $i83, $i75);
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    $p85 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(14, 1));
    goto corral_source_split_1278;

  corral_source_split_1278:
    assume {:verifier.code 0} true;
    $i86 := $load.i8($M.0, $p85);
    goto corral_source_split_1279;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    $i87 := $zext.i8.i32($i86);
    call {:si_unique_call 127} {:cexpr "tmp"} boogie_si_record_i32($i87);
    goto corral_source_split_1280;

  corral_source_split_1280:
    assume {:verifier.code 0} true;
    $i88 := $sgt.i32($i2, 110);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    assume {:branchcond $i88} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i88 == 1);
    assume {:verifier.code 0} true;
    $i90 := $i87;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $p91 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i92 := $load.i16($M.2, $p91);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i93 := $zext.i16.i32($i92);
    $p95 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    $i96 := $load.i8($M.2, $p95);
    goto corral_source_split_1289;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    $i97 := $zext.i8.i32($i96);
    goto corral_source_split_1290;

  corral_source_split_1290:
    assume {:verifier.code 0} true;
    $i98 := $add.i32($i97, 32);
    goto corral_source_split_1291;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    call {:si_unique_call 129} opl3_command($i93, $i98, $i90);
    goto corral_source_split_1292;

  corral_source_split_1292:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb35:
    assume $i88 == 1;
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $i89 := $or.i32($i87, 64);
    call {:si_unique_call 128} {:cexpr "tmp"} boogie_si_record_i32($i89);
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    $i90 := $i89;
    goto $bb37;

  $bb32:
    assume $i73 == 1;
    goto corral_source_split_1268;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    $i74 := $or.i32($i72, 64);
    call {:si_unique_call 125} {:cexpr "tmp"} boogie_si_record_i32($i74);
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    $i75 := $i74;
    goto $bb34;

  $bb24:
    assume $i52 == 1;
    assume {:verifier.code 0} true;
    $i53 := $eq.i32($i48, 0);
    assume {:verifier.code 0} true;
    assume {:branchcond $i53} true;
    goto $bb26, $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    assume !($i53 == 1);
    goto $bb23;

  $bb26:
    assume $i53 == 1;
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    $p55 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(14, 1));
    goto corral_source_split_1252;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    $i56 := $load.i8($M.0, $p55);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    $i57 := $zext.i8.i32($i56);
    call {:si_unique_call 122} {:cexpr "tmp"} boogie_si_record_i32($i57);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    $i58 := $sgt.i32($i2, 110);
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    assume {:branchcond $i58} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i58 == 1);
    assume {:verifier.code 0} true;
    $i60 := $i57;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $p61 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(2, 1));
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $i62 := $load.i16($M.2, $p61);
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    $i63 := $zext.i16.i32($i62);
    $p65 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i13, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    $i66 := $load.i8($M.2, $p65);
    goto corral_source_split_1263;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    $i67 := $zext.i8.i32($i66);
    goto corral_source_split_1264;

  corral_source_split_1264:
    assume {:verifier.code 0} true;
    $i68 := $add.i32($i67, 32);
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    call {:si_unique_call 124} opl3_command($i63, $i68, $i60);
    goto corral_source_split_1266;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb28:
    assume $i58 == 1;
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $i59 := $or.i32($i57, 64);
    call {:si_unique_call 123} {:cexpr "tmp"} boogie_si_record_i32($i59);
    goto corral_source_split_1258;

  corral_source_split_1258:
    assume {:verifier.code 0} true;
    $i60 := $i59;
    goto $bb30;

  $bb11:
    assume $i25 == 1;
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    $p26 := $M.1;
    goto corral_source_split_1205;

  corral_source_split_1205:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($p26, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    goto corral_source_split_1207;

  corral_source_split_1207:
    assume {:verifier.code 0} true;
    $p29 := $p27;
    goto $bb13;

  $bb8:
    assume $i18 == 1;
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i3 == 1;
    goto $bb2;
}



const opl3_controller: ref;

axiom opl3_controller == $sub.ref(0, 57261);

procedure opl3_controller($i0: i32, $i1: i32, $i2: i32, $i3: i32);
  free requires assertsPassed;
  modifies $M.0, $M.3, $M.4, $CurrAddr;



implementation opl3_controller($i0: i32, $i1: i32, $i2: i32, $i3: i32)
{
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i64;
  var $p23: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $p30: ref;
  var $p33: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 148} {:cexpr "opl3_controller:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 149} {:cexpr "opl3_controller:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 150} {:cexpr "opl3_controller:arg:ctrl_num"} boogie_si_record_i32($i2);
    call {:si_unique_call 151} {:cexpr "opl3_controller:arg:value"} boogie_si_record_i32($i3);
    goto corral_source_split_1394;

  corral_source_split_1394:
    assume {:verifier.code 0} true;
    $i4 := $slt.i32($i1, 0);
    goto corral_source_split_1395;

  corral_source_split_1395:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i4 == 1);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    $p5 := $M.1;
    goto corral_source_split_1398;

  corral_source_split_1398:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p5, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i7 := $load.i32($M.0, $p6);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $i8 := $sle.i32($i7, $i1);
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i9 := $slt.i32($i2, 254);
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    $i10 := $slt.i32($i2, 255);
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    $i11 := $eq.i32($i2, 255);
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb13, $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    assume !($i11 == 1);
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb13:
    assume $i11 == 1;
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    call {:si_unique_call 152} bend_pitch($i0, $i1, $i3);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb11:
    assume $i10 == 1;
    goto corral_source_split_1403;

  corral_source_split_1403:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i3);
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i16 := $sext.i32.i64($i1);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    $p17 := $M.1;
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($add.ref($add.ref($p17, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i16, 56)), $mul.ref(16, 1));
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p20, $i15);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb9:
    assume $i9 == 1;
    assume {:verifier.code 0} true;
    $i12 := $slt.i32($i2, 10);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    $i13 := $eq.i32($i2, 10);
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb18, $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    assume !($i13 == 1);
    goto $bb15;

  $bb18:
    assume $i13 == 1;
    goto corral_source_split_1413;

  corral_source_split_1413:
    assume {:verifier.code 0} true;
    $i27 := $add.i32($i3, $sub.i32(0, 64));
    goto corral_source_split_1414;

  corral_source_split_1414:
    assume {:verifier.code 0} true;
    $i28 := $mul.i32($i27, 2);
    goto corral_source_split_1415;

  corral_source_split_1415:
    assume {:verifier.code 0} true;
    $i29 := $sext.i32.i64($i1);
    goto corral_source_split_1416;

  corral_source_split_1416:
    assume {:verifier.code 0} true;
    $p30 := $M.1;
    goto corral_source_split_1417;

  corral_source_split_1417:
    assume {:verifier.code 0} true;
    $p33 := $add.ref($add.ref($add.ref($add.ref($p30, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i29, 56)), $mul.ref(48, 1));
    goto corral_source_split_1418;

  corral_source_split_1418:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p33, $i28);
    goto corral_source_split_1419;

  corral_source_split_1419:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb16:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    $i14 := $eq.i32($i2, 7);
    assume {:verifier.code 0} true;
    assume {:branchcond $i14} true;
    goto $bb20, $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    assume !($i14 == 1);
    goto $bb15;

  $bb20:
    assume $i14 == 1;
    goto corral_source_split_1421;

  corral_source_split_1421:
    assume {:verifier.code 0} true;
    $i21 := $sdiv.i32($i3, 128);
    goto corral_source_split_1422;

  corral_source_split_1422:
    assume {:verifier.code 0} true;
    $i22 := $sext.i32.i64($i1);
    goto corral_source_split_1423;

  corral_source_split_1423:
    assume {:verifier.code 0} true;
    $p23 := $M.1;
    goto corral_source_split_1424;

  corral_source_split_1424:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($add.ref($add.ref($add.ref($p23, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i22, 56)), $mul.ref(40, 1));
    goto corral_source_split_1425;

  corral_source_split_1425:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p26, $i21);
    goto corral_source_split_1426;

  corral_source_split_1426:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i8 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i4 == 1;
    goto $bb2;
}



const opl3_panning: ref;

axiom opl3_panning == $sub.ref(0, 58293);

procedure opl3_panning($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation opl3_panning($i0: i32, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i64;
  var $p9: ref;
  var $p12: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 153} {:cexpr "opl3_panning:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 154} {:cexpr "opl3_panning:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 155} {:cexpr "opl3_panning:arg:value"} boogie_si_record_i32($i2);
    goto corral_source_split_1428;

  corral_source_split_1428:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32($i1, 0);
    goto corral_source_split_1429;

  corral_source_split_1429:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i3 == 1);
    goto corral_source_split_1431;

  corral_source_split_1431:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_1432;

  corral_source_split_1432:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1433;

  corral_source_split_1433:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_1434;

  corral_source_split_1434:
    assume {:verifier.code 0} true;
    $i7 := $sle.i32($i6, $i1);
    goto corral_source_split_1435;

  corral_source_split_1435:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i8 := $sext.i32.i64($i1);
    goto corral_source_split_1437;

  corral_source_split_1437:
    assume {:verifier.code 0} true;
    $p9 := $M.1;
    goto corral_source_split_1438;

  corral_source_split_1438:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($add.ref($add.ref($p9, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i8, 56)), $mul.ref(48, 1));
    goto corral_source_split_1439;

  corral_source_split_1439:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p12, $i2);
    goto corral_source_split_1440;

  corral_source_split_1440:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i3 == 1;
    goto $bb2;
}



const opl3_volume_method: ref;

axiom opl3_volume_method == $sub.ref(0, 59325);

procedure opl3_volume_method($i0: i32, $i1: i32);
  free requires assertsPassed;



implementation opl3_volume_method($i0: i32, $i1: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 156} {:cexpr "opl3_volume_method:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 157} {:cexpr "opl3_volume_method:arg:mode"} boogie_si_record_i32($i1);
    goto corral_source_split_1442;

  corral_source_split_1442:
    assume {:verifier.code 0} true;
    return;
}



const opl3_bender: ref;

axiom opl3_bender == $sub.ref(0, 60357);

procedure opl3_bender($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.0, $M.3, $M.4, $CurrAddr;



implementation opl3_bender($i0: i32, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 158} {:cexpr "opl3_bender:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 159} {:cexpr "opl3_bender:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 160} {:cexpr "opl3_bender:arg:value"} boogie_si_record_i32($i2);
    goto corral_source_split_1444;

  corral_source_split_1444:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32($i1, 0);
    goto corral_source_split_1445;

  corral_source_split_1445:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i3 == 1);
    goto corral_source_split_1447;

  corral_source_split_1447:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_1448;

  corral_source_split_1448:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1449;

  corral_source_split_1449:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_1450;

  corral_source_split_1450:
    assume {:verifier.code 0} true;
    $i7 := $sle.i32($i6, $i1);
    goto corral_source_split_1451;

  corral_source_split_1451:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i8 := $add.i32($i2, $sub.i32(0, 8192));
    goto corral_source_split_1453;

  corral_source_split_1453:
    assume {:verifier.code 0} true;
    call {:si_unique_call 161} bend_pitch($i0, $i1, $i8);
    goto corral_source_split_1454;

  corral_source_split_1454:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i3 == 1;
    goto $bb2;
}



const opl3_alloc_voice: ref;

axiom opl3_alloc_voice == $sub.ref(0, 61389);

procedure opl3_alloc_voice($i0: i32, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);
  free requires assertsPassed;



implementation opl3_alloc_voice($i0: i32, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i1;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p12: ref;
  var $i13: i32;
  var $i6: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p31: ref;
  var $i32: i16;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i32;
  var $i26: i32;
  var $i37: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i50: i1;
  var $i56: i64;
  var $p58: ref;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $i64: i64;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $i69: i64;
  var $p71: ref;
  var $i72: i32;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i1;
  var $i52: i32;
  var $i53: i32;
  var $i54: i32;
  var $i55: i32;
  var $i79: i32;
  var $i51: i32;
  var $i80: i1;
  var $i81: i32;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i63: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 162} {:cexpr "opl3_alloc_voice:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 163} {:cexpr "opl3_alloc_voice:arg:chn"} boogie_si_record_i32($i1);
    call {:si_unique_call 164} {:cexpr "opl3_alloc_voice:arg:note"} boogie_si_record_i32($i2);
    goto corral_source_split_1456;

  corral_source_split_1456:
    assume {:verifier.code 0} true;
    $i4 := $slt.i32($i1, 0);
    goto corral_source_split_1457;

  corral_source_split_1457:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i4 == 1);
    goto corral_source_split_1459;

  corral_source_split_1459:
    assume {:verifier.code 0} true;
    $i5 := $sgt.i32($i1, 15);
    goto corral_source_split_1460;

  corral_source_split_1460:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i5 == 1);
    goto corral_source_split_1462;

  corral_source_split_1462:
    assume {:verifier.code 0} true;
    $p7 := $M.1;
    goto corral_source_split_1463;

  corral_source_split_1463:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p7, $mul.ref(0, 11656)), $mul.ref(1104, 1));
    goto corral_source_split_1464;

  corral_source_split_1464:
    assume {:verifier.code 0} true;
    $p9 := $load.ref($M.0, $p8);
    goto corral_source_split_1465;

  corral_source_split_1465:
    assume {:verifier.code 0} true;
    $i10 := $sext.i32.i64($i1);
    goto corral_source_split_1466;

  corral_source_split_1466:
    assume {:verifier.code 0} true;
    goto corral_source_split_1467;

  corral_source_split_1467:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($p9, $mul.ref($i10, 140)), $mul.ref(0, 1));
    goto corral_source_split_1468;

  corral_source_split_1468:
    assume {:verifier.code 0} true;
    $i13 := $load.i32($M.0, $p12);
    call {:si_unique_call 165} {:cexpr "instr_no"} boogie_si_record_i32($i13);
    assume {:verifier.code 0} true;
    $i6 := $i13;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_1470;

  corral_source_split_1470:
    assume {:verifier.code 0} true;
    $p14 := $M.1;
    goto corral_source_split_1471;

  corral_source_split_1471:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($p14, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_1472;

  corral_source_split_1472:
    assume {:verifier.code 0} true;
    $p16 := $bitcast.ref.ref($p15);
    goto corral_source_split_1473;

  corral_source_split_1473:
    assume {:verifier.code 0} true;
    $i17 := $sext.i32.i64($i6);
    goto corral_source_split_1474;

  corral_source_split_1474:
    assume {:verifier.code 0} true;
    goto corral_source_split_1475;

  corral_source_split_1475:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p16, $mul.ref($i17, 40)), $mul.ref(4, 1));
    goto corral_source_split_1476;

  corral_source_split_1476:
    assume {:verifier.code 0} true;
    $i20 := $load.i32($M.0, $p19);
    goto corral_source_split_1477;

  corral_source_split_1477:
    assume {:verifier.code 0} true;
    $i21 := $slt.i32($i20, 0);
    goto corral_source_split_1478;

  corral_source_split_1478:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb7, $bb9;

  $bb9:
    assume !($i21 == 1);
    goto corral_source_split_1480;

  corral_source_split_1480:
    assume {:verifier.code 0} true;
    $p22 := $M.1;
    goto corral_source_split_1481;

  corral_source_split_1481:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($p22, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1482;

  corral_source_split_1482:
    assume {:verifier.code 0} true;
    $i24 := $load.i32($M.0, $p23);
    goto corral_source_split_1483;

  corral_source_split_1483:
    assume {:verifier.code 0} true;
    $i25 := $ne.i32($i24, 12);
    goto corral_source_split_1484;

  corral_source_split_1484:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i25 == 1);
    goto corral_source_split_1486;

  corral_source_split_1486:
    assume {:verifier.code 0} true;
    $p27 := $M.1;
    goto corral_source_split_1487;

  corral_source_split_1487:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($p27, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1488;

  corral_source_split_1488:
    assume {:verifier.code 0} true;
    $i29 := $load.i32($M.0, $p28);
    goto corral_source_split_1489;

  corral_source_split_1489:
    assume {:verifier.code 0} true;
    $i30 := $eq.i32($i29, 12);
    goto corral_source_split_1490;

  corral_source_split_1490:
    assume {:verifier.code 0} true;
    assume {:branchcond $i30} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i30 == 1);
    assume {:verifier.code 0} true;
    $i36 := 0;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i26 := $i36;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto corral_source_split_1492;

  corral_source_split_1492:
    assume {:verifier.code 0} true;
    $i37 := $ne.i32($i26, 0);
    goto corral_source_split_1493;

  corral_source_split_1493:
    assume {:verifier.code 0} true;
    assume {:branchcond $i37} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i37 == 1);
    goto corral_source_split_1504;

  corral_source_split_1504:
    assume {:verifier.code 0} true;
    $p41 := $M.1;
    goto corral_source_split_1505;

  corral_source_split_1505:
    assume {:verifier.code 0} true;
    $p42 := $add.ref($add.ref($p41, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1506;

  corral_source_split_1506:
    assume {:verifier.code 0} true;
    $i43 := $load.i32($M.0, $p42);
    goto corral_source_split_1507;

  corral_source_split_1507:
    assume {:verifier.code 0} true;
    $i44 := $eq.i32($i43, 12);
    goto corral_source_split_1508;

  corral_source_split_1508:
    assume {:verifier.code 0} true;
    assume {:branchcond $i44} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i44 == 1);
    assume {:verifier.code 0} true;
    $i45, $i46 := 0, 0;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1515;

  corral_source_split_1515:
    assume {:verifier.code 0} true;
    $p47 := $M.1;
    goto corral_source_split_1516;

  corral_source_split_1516:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($add.ref($p47, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1517;

  corral_source_split_1517:
    assume {:verifier.code 0} true;
    $i49 := $load.i32($M.0, $p48);
    call {:si_unique_call 167} {:cexpr "avail"} boogie_si_record_i32($i49);
    assume {:verifier.code 0} true;
    $i38, $i39, $i40 := $i45, $i46, $i49;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1510;

  corral_source_split_1510:
    assume {:verifier.code 0} true;
    $i50 := $slt.i32(0, $i40);
    goto corral_source_split_1511;

  corral_source_split_1511:
    assume {:verifier.code 0} true;
    $i51 := $i38;
    assume {:branchcond $i50} true;
    goto $bb22, $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume !($i50 == 1);
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i80 := $slt.i32($i51, 0);
    goto corral_source_split_1551;

  corral_source_split_1551:
    assume {:verifier.code 0} true;
    assume {:branchcond $i80} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i80 == 1);
    assume {:verifier.code 0} true;
    $i81 := $i51;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    goto corral_source_split_1555;

  corral_source_split_1555:
    assume {:verifier.code 0} true;
    $p82 := $M.1;
    goto corral_source_split_1556;

  corral_source_split_1556:
    assume {:verifier.code 0} true;
    $p83 := $add.ref($add.ref($p82, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1557;

  corral_source_split_1557:
    assume {:verifier.code 0} true;
    $i84 := $load.i32($M.0, $p83);
    goto corral_source_split_1558;

  corral_source_split_1558:
    assume {:verifier.code 0} true;
    $i85 := $slt.i32($i84, $i81);
    goto corral_source_split_1559;

  corral_source_split_1559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i85} true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i85 == 1);
    assume {:verifier.code 0} true;
    $i90 := $i81;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    goto corral_source_split_1567;

  corral_source_split_1567:
    assume {:verifier.code 0} true;
    $i63 := $i90;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_1531;

  corral_source_split_1531:
    assume {:verifier.code 0} true;
    $r := $i63;
    return;

  $bb40:
    assume $i85 == 1;
    goto corral_source_split_1561;

  corral_source_split_1561:
    assume {:verifier.code 0} true;
    $p86 := $M.1;
    goto corral_source_split_1562;

  corral_source_split_1562:
    assume {:verifier.code 0} true;
    $p87 := $add.ref($add.ref($p86, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1563;

  corral_source_split_1563:
    assume {:verifier.code 0} true;
    $i88 := $load.i32($M.0, $p87);
    goto corral_source_split_1564;

  corral_source_split_1564:
    assume {:verifier.code 0} true;
    $i89 := $sub.i32($i81, $i88);
    call {:si_unique_call 171} {:cexpr "best"} boogie_si_record_i32($i89);
    goto corral_source_split_1565;

  corral_source_split_1565:
    assume {:verifier.code 0} true;
    $i90 := $i89;
    goto $bb42;

  $bb37:
    assume $i80 == 1;
    goto corral_source_split_1553;

  corral_source_split_1553:
    assume {:verifier.code 0} true;
    $i81 := 0;
    goto $bb39;

  $bb22:
    assume $i50 == 1;
    goto corral_source_split_1519;

  corral_source_split_1519:
    assume {:verifier.code 0} true;
    $i52, $i53, $i54, $i55 := 2147483647, 0, $i39, $i38;
    goto $bb25;

  $bb25:
    call $i56, $p58, $i59, $i60, $i61, $i62, $i64, $p66, $i67, $i68, $i69, $p71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i52, $i53, $i54, $i55, $i79 := opl3_alloc_voice_loop_$bb25($p3, $i40, $i56, $p58, $i59, $i60, $i61, $i62, $i64, $p66, $i67, $i68, $i69, $p71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i52, $i53, $i54, $i55, $i79);
    goto $bb25_last;

  corral_source_split_1521:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i56 := $sext.i32.i64($i54);
    goto corral_source_split_1523;

  corral_source_split_1523:
    assume {:verifier.code 0} true;
    $p58 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref($i56, 2));
    goto corral_source_split_1524;

  corral_source_split_1524:
    assume {:verifier.code 0} true;
    $i59 := $load.i16($M.0, $p58);
    goto corral_source_split_1525;

  corral_source_split_1525:
    assume {:verifier.code 0} true;
    $i60 := $zext.i16.i32($i59);
    goto corral_source_split_1526;

  corral_source_split_1526:
    assume {:verifier.code 0} true;
    $i61 := $eq.i32($i60, 0);
    goto corral_source_split_1527;

  corral_source_split_1527:
    assume {:verifier.code 0} true;
    $i62 := $i54;
    assume true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i64 := $sext.i32.i64($i54);
    goto corral_source_split_1533;

  corral_source_split_1533:
    assume {:verifier.code 0} true;
    $p66 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref($i64, 4));
    goto corral_source_split_1534;

  corral_source_split_1534:
    assume {:verifier.code 0} true;
    $i67 := $load.i32($M.0, $p66);
    goto corral_source_split_1535;

  corral_source_split_1535:
    assume {:verifier.code 0} true;
    $i68 := $slt.i32($i67, $i52);
    goto corral_source_split_1536;

  corral_source_split_1536:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i68 == 1);
    assume {:verifier.code 0} true;
    $i73, $i74 := $i55, $i52;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1543;

  corral_source_split_1543:
    assume {:verifier.code 0} true;
    $i75 := $add.i32($i54, 1);
    goto corral_source_split_1544;

  corral_source_split_1544:
    assume {:verifier.code 0} true;
    $i76 := $srem.i32($i75, $i40);
    call {:si_unique_call 169} {:cexpr "p"} boogie_si_record_i32($i76);
    goto corral_source_split_1545;

  corral_source_split_1545:
    assume {:verifier.code 0} true;
    $i77 := $add.i32($i53, 1);
    call {:si_unique_call 170} {:cexpr "i"} boogie_si_record_i32($i77);
    goto corral_source_split_1546;

  corral_source_split_1546:
    assume {:verifier.code 0} true;
    $i78 := $slt.i32($i77, $i40);
    goto corral_source_split_1547;

  corral_source_split_1547:
    assume {:verifier.code 0} true;
    $i79 := $i73;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i78 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1549;

  corral_source_split_1549:
    assume {:verifier.code 0} true;
    $i51 := $i79;
    goto $bb24;

  $bb34:
    assume $i78 == 1;
    assume {:verifier.code 0} true;
    $i52, $i53, $i54, $i55 := $i74, $i77, $i76, $i73;
    goto $bb34_dummy;

  $bb31:
    assume $i68 == 1;
    goto corral_source_split_1538;

  corral_source_split_1538:
    assume {:verifier.code 0} true;
    $i69 := $sext.i32.i64($i54);
    goto corral_source_split_1539;

  corral_source_split_1539:
    assume {:verifier.code 0} true;
    $p71 := $add.ref($add.ref($add.ref($p3, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref($i69, 4));
    goto corral_source_split_1540;

  corral_source_split_1540:
    assume {:verifier.code 0} true;
    $i72 := $load.i32($M.0, $p71);
    call {:si_unique_call 168} {:cexpr "best_time"} boogie_si_record_i32($i72);
    goto corral_source_split_1541;

  corral_source_split_1541:
    assume {:verifier.code 0} true;
    $i73, $i74 := $i54, $i72;
    goto $bb33;

  $bb27:
    assume $i61 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1529;

  corral_source_split_1529:
    assume {:verifier.code 0} true;
    $i63 := $i62;
    goto $bb29;

  $bb19:
    assume $i44 == 1;
    goto corral_source_split_1513;

  corral_source_split_1513:
    assume {:verifier.code 0} true;
    $i45, $i46 := 6, 6;
    goto $bb21;

  $bb16:
    assume $i37 == 1;
    goto corral_source_split_1502;

  corral_source_split_1502:
    assume {:verifier.code 0} true;
    $i38, $i39, $i40 := 0, 0, 6;
    goto $bb18;

  $bb13:
    assume $i30 == 1;
    goto corral_source_split_1495;

  corral_source_split_1495:
    assume {:verifier.code 0} true;
    $p31 := $add.ref($add.ref($p16, $mul.ref($i17, 40)), $mul.ref(0, 1));
    goto corral_source_split_1496;

  corral_source_split_1496:
    assume {:verifier.code 0} true;
    $i32 := $load.i16($M.0, $p31);
    goto corral_source_split_1497;

  corral_source_split_1497:
    assume {:verifier.code 0} true;
    $i33 := $zext.i16.i32($i32);
    goto corral_source_split_1498;

  corral_source_split_1498:
    assume {:verifier.code 0} true;
    $i34 := $eq.i32($i33, 1021);
    goto corral_source_split_1499;

  corral_source_split_1499:
    assume {:verifier.code 0} true;
    $i35 := $zext.i1.i32($i34);
    call {:si_unique_call 166} {:cexpr "is4op"} boogie_si_record_i32($i35);
    goto corral_source_split_1500;

  corral_source_split_1500:
    assume {:verifier.code 0} true;
    $i36 := $i35;
    goto $bb15;

  $bb10:
    assume {:verifier.code 0} true;
    assume $i25 == 1;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i26 := 0;
    goto $bb12;

  $bb7:
    assume {:verifier.code 0} true;
    assume $i21 == 1;
    goto $bb8;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i5 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i6 := 0;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i4 == 1;
    goto $bb2;

  $bb34_dummy:
    assume false;
    return;

  $bb25_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1521;
}



const opl3_setup_voice: ref;

axiom opl3_setup_voice == $sub.ref(0, 62421);

procedure opl3_setup_voice($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation opl3_setup_voice($i0: i32, $i1: i32, $i2: i32)
{
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p17: ref;
  var $i18: i32;
  var $i20: i64;
  var $p21: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p32: ref;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i64;
  var $p38: ref;
  var $p41: ref;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i64;
  var $p49: ref;
  var $p52: ref;
  var vslice_dummy_var_16: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 172} {:cexpr "opl3_setup_voice:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 173} {:cexpr "opl3_setup_voice:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 174} {:cexpr "opl3_setup_voice:arg:chn"} boogie_si_record_i32($i2);
    goto corral_source_split_1569;

  corral_source_split_1569:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32($i1, 0);
    goto corral_source_split_1570;

  corral_source_split_1570:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i3 == 1);
    goto corral_source_split_1572;

  corral_source_split_1572:
    assume {:verifier.code 0} true;
    $p4 := $M.1;
    goto corral_source_split_1573;

  corral_source_split_1573:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p4, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1574;

  corral_source_split_1574:
    assume {:verifier.code 0} true;
    $i6 := $load.i32($M.0, $p5);
    goto corral_source_split_1575;

  corral_source_split_1575:
    assume {:verifier.code 0} true;
    $i7 := $sle.i32($i6, $i1);
    goto corral_source_split_1576;

  corral_source_split_1576:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i8 := $slt.i32($i2, 0);
    goto corral_source_split_1578;

  corral_source_split_1578:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb8, $bb10;

  $bb10:
    assume !($i8 == 1);
    goto corral_source_split_1580;

  corral_source_split_1580:
    assume {:verifier.code 0} true;
    $i9 := $sgt.i32($i2, 15);
    goto corral_source_split_1581;

  corral_source_split_1581:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i10 := $sext.i32.i64($i0);
    goto corral_source_split_1583;

  corral_source_split_1583:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref(synth_devs, $mul.ref(0, 88)), $mul.ref($i10, 8));
    goto corral_source_split_1584;

  corral_source_split_1584:
    assume {:verifier.code 0} true;
    $p12 := $load.ref($M.0, $p11);
    goto corral_source_split_1585;

  corral_source_split_1585:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref($p12, $mul.ref(0, 2696)), $mul.ref(384, 1));
    goto corral_source_split_1586;

  corral_source_split_1586:
    assume {:verifier.code 0} true;
    $p14 := $bitcast.ref.ref($p13);
    goto corral_source_split_1587;

  corral_source_split_1587:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i2);
    goto corral_source_split_1588;

  corral_source_split_1588:
    assume {:verifier.code 0} true;
    goto corral_source_split_1589;

  corral_source_split_1589:
    assume {:verifier.code 0} true;
    $p17 := $add.ref($add.ref($p14, $mul.ref($i15, 140)), $mul.ref(0, 1));
    goto corral_source_split_1590;

  corral_source_split_1590:
    assume {:verifier.code 0} true;
    $i18 := $load.i32($M.0, $p17);
    goto corral_source_split_1591;

  corral_source_split_1591:
    assume {:verifier.code 0} true;
    call {:si_unique_call 175} vslice_dummy_var_16 := opl3_set_instr($i0, $i1, $i18);
    goto corral_source_split_1592;

  corral_source_split_1592:
    assume {:verifier.code 0} true;
    $i20 := $sext.i32.i64($i1);
    goto corral_source_split_1593;

  corral_source_split_1593:
    assume {:verifier.code 0} true;
    $p21 := $M.1;
    goto corral_source_split_1594;

  corral_source_split_1594:
    assume {:verifier.code 0} true;
    $p24 := $add.ref($add.ref($add.ref($add.ref($p21, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i20, 56)), $mul.ref(8, 1));
    goto corral_source_split_1595;

  corral_source_split_1595:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p24, 0);
    goto corral_source_split_1596;

  corral_source_split_1596:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p14, $mul.ref($i15, 140)), $mul.ref(8, 1));
    goto corral_source_split_1597;

  corral_source_split_1597:
    assume {:verifier.code 0} true;
    $i26 := $load.i32($M.0, $p25);
    goto corral_source_split_1598;

  corral_source_split_1598:
    assume {:verifier.code 0} true;
    $i27 := $sext.i32.i64($i26);
    goto corral_source_split_1599;

  corral_source_split_1599:
    assume {:verifier.code 0} true;
    $i28 := $sext.i32.i64($i1);
    goto corral_source_split_1600;

  corral_source_split_1600:
    assume {:verifier.code 0} true;
    $p29 := $M.1;
    goto corral_source_split_1601;

  corral_source_split_1601:
    assume {:verifier.code 0} true;
    $p32 := $add.ref($add.ref($add.ref($add.ref($p29, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i28, 56)), $mul.ref(16, 1));
    goto corral_source_split_1602;

  corral_source_split_1602:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p32, $i27);
    goto corral_source_split_1603;

  corral_source_split_1603:
    assume {:verifier.code 0} true;
    $p34 := $add.ref($add.ref($add.ref($p14, $mul.ref($i15, 140)), $mul.ref(12, 1)), $mul.ref(7, 1));
    goto corral_source_split_1604;

  corral_source_split_1604:
    assume {:verifier.code 0} true;
    $i35 := $load.i8($M.0, $p34);
    goto corral_source_split_1605;

  corral_source_split_1605:
    assume {:verifier.code 0} true;
    $i36 := $zext.i8.i32($i35);
    goto corral_source_split_1606;

  corral_source_split_1606:
    assume {:verifier.code 0} true;
    $i37 := $sext.i32.i64($i1);
    goto corral_source_split_1607;

  corral_source_split_1607:
    assume {:verifier.code 0} true;
    $p38 := $M.1;
    goto corral_source_split_1608;

  corral_source_split_1608:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($add.ref($add.ref($add.ref($p38, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i37, 56)), $mul.ref(40, 1));
    goto corral_source_split_1609;

  corral_source_split_1609:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p41, $i36);
    goto corral_source_split_1610;

  corral_source_split_1610:
    assume {:verifier.code 0} true;
    $p43 := $add.ref($add.ref($add.ref($p14, $mul.ref($i15, 140)), $mul.ref(12, 1)), $mul.ref(10, 1));
    goto corral_source_split_1611;

  corral_source_split_1611:
    assume {:verifier.code 0} true;
    $i44 := $load.i8($M.0, $p43);
    goto corral_source_split_1612;

  corral_source_split_1612:
    assume {:verifier.code 0} true;
    $i45 := $zext.i8.i32($i44);
    goto corral_source_split_1613;

  corral_source_split_1613:
    assume {:verifier.code 0} true;
    $i46 := $add.i32($i45, $sub.i32(0, 64));
    goto corral_source_split_1614;

  corral_source_split_1614:
    assume {:verifier.code 0} true;
    $i47 := $mul.i32($i46, 2);
    goto corral_source_split_1615;

  corral_source_split_1615:
    assume {:verifier.code 0} true;
    $i48 := $sext.i32.i64($i1);
    goto corral_source_split_1616;

  corral_source_split_1616:
    assume {:verifier.code 0} true;
    $p49 := $M.1;
    goto corral_source_split_1617;

  corral_source_split_1617:
    assume {:verifier.code 0} true;
    $p52 := $add.ref($add.ref($add.ref($add.ref($p49, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i48, 56)), $mul.ref(48, 1));
    goto corral_source_split_1618;

  corral_source_split_1618:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p52, $i47);
    goto corral_source_split_1619;

  corral_source_split_1619:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb11:
    assume {:verifier.code 0} true;
    assume $i9 == 1;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb8:
    assume {:verifier.code 0} true;
    assume $i8 == 1;
    goto $bb9;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i3 == 1;
    goto $bb2;
}



const bend_pitch: ref;

axiom bend_pitch == $sub.ref(0, 63453);

procedure bend_pitch($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.0, $M.3, $M.4, $CurrAddr;



implementation bend_pitch($i0: i32, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $p6: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p21: ref;
  var $i22: i1;
  var $i23: i64;
  var $p24: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i32;
  var $i31: i1;
  var $i32: i64;
  var $p33: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i32;
  var $i45: i64;
  var $p46: ref;
  var $p49: ref;
  var $i50: i64;
  var $i51: i32;
  var $i52: i64;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $p59: ref;
  var $i60: i32;
  var $i61: i8;
  var $p62: ref;
  var $i63: i16;
  var $i64: i32;
  var $p65: ref;
  var $i66: i8;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i32;
  var $i72: i32;
  var $i73: i8;
  var $i74: i32;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i8;
  var $i83: i64;
  var $p84: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i16;
  var $i90: i32;
  var $p91: ref;
  var $i92: i8;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 176} $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 177} $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    call {:si_unique_call 178} {:cexpr "bend_pitch:arg:dev"} boogie_si_record_i32($i0);
    call {:si_unique_call 179} {:cexpr "bend_pitch:arg:voice"} boogie_si_record_i32($i1);
    call {:si_unique_call 180} {:cexpr "bend_pitch:arg:value"} boogie_si_record_i32($i2);
    goto corral_source_split_1621;

  corral_source_split_1621:
    assume {:verifier.code 0} true;
    $i5 := $sext.i32.i64($i1);
    goto corral_source_split_1622;

  corral_source_split_1622:
    assume {:verifier.code 0} true;
    $p6 := $M.1;
    goto corral_source_split_1623;

  corral_source_split_1623:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($add.ref($p6, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i5, 4));
    goto corral_source_split_1624;

  corral_source_split_1624:
    assume {:verifier.code 0} true;
    $i9 := $load.i32($M.0, $p8);
    goto corral_source_split_1625;

  corral_source_split_1625:
    assume {:verifier.code 0} true;
    $i10 := $sext.i32.i64($i9);
    $p12 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i10, 8)), $mul.ref(1, 1));
    goto corral_source_split_1626;

  corral_source_split_1626:
    assume {:verifier.code 0} true;
    $i13 := $load.i8($M.2, $p12);
    goto corral_source_split_1627;

  corral_source_split_1627:
    assume {:verifier.code 0} true;
    $i14 := $zext.i8.i32($i13);
    goto corral_source_split_1628;

  corral_source_split_1628:
    assume {:verifier.code 0} true;
    $i15 := $eq.i32($i14, 0);
    goto corral_source_split_1629;

  corral_source_split_1629:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i16 := $sext.i32.i64($i2);
    goto corral_source_split_1633;

  corral_source_split_1633:
    assume {:verifier.code 0} true;
    $i17 := $sext.i32.i64($i1);
    goto corral_source_split_1634;

  corral_source_split_1634:
    assume {:verifier.code 0} true;
    $p18 := $M.1;
    goto corral_source_split_1635;

  corral_source_split_1635:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($add.ref($add.ref($add.ref($p18, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i17, 56)), $mul.ref(8, 1));
    goto corral_source_split_1636;

  corral_source_split_1636:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p21, $i16);
    goto corral_source_split_1637;

  corral_source_split_1637:
    assume {:verifier.code 0} true;
    $i22 := $eq.i32($i2, 0);
    goto corral_source_split_1638;

  corral_source_split_1638:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i23 := $sext.i32.i64($i1);
    goto corral_source_split_1642;

  corral_source_split_1642:
    assume {:verifier.code 0} true;
    $p24 := $M.1;
    goto corral_source_split_1643;

  corral_source_split_1643:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($add.ref($add.ref($p24, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i23, 56)), $mul.ref(0, 1));
    goto corral_source_split_1644;

  corral_source_split_1644:
    assume {:verifier.code 0} true;
    $i28 := $load.i8($M.0, $p27);
    goto corral_source_split_1645;

  corral_source_split_1645:
    assume {:verifier.code 0} true;
    $i29 := $zext.i8.i32($i28);
    goto corral_source_split_1646;

  corral_source_split_1646:
    assume {:verifier.code 0} true;
    $i30 := $and.i32($i29, 32);
    goto corral_source_split_1647;

  corral_source_split_1647:
    assume {:verifier.code 0} true;
    $i31 := $eq.i32($i30, 0);
    goto corral_source_split_1648;

  corral_source_split_1648:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i31 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i32 := $sext.i32.i64($i1);
    goto corral_source_split_1652;

  corral_source_split_1652:
    assume {:verifier.code 0} true;
    $p33 := $M.1;
    goto corral_source_split_1653;

  corral_source_split_1653:
    assume {:verifier.code 0} true;
    $p36 := $add.ref($add.ref($add.ref($add.ref($p33, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i32, 56)), $mul.ref(24, 1));
    goto corral_source_split_1654;

  corral_source_split_1654:
    assume {:verifier.code 0} true;
    $i37 := $load.i64($M.0, $p36);
    goto corral_source_split_1655;

  corral_source_split_1655:
    assume {:verifier.code 0} true;
    $i38 := $sext.i32.i64($i1);
    goto corral_source_split_1656;

  corral_source_split_1656:
    assume {:verifier.code 0} true;
    $p39 := $M.1;
    goto corral_source_split_1657;

  corral_source_split_1657:
    assume {:verifier.code 0} true;
    $p42 := $add.ref($add.ref($add.ref($add.ref($p39, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i38, 56)), $mul.ref(8, 1));
    goto corral_source_split_1658;

  corral_source_split_1658:
    assume {:verifier.code 0} true;
    $i43 := $load.i64($M.0, $p42);
    goto corral_source_split_1659;

  corral_source_split_1659:
    assume {:verifier.code 0} true;
    $i44 := $trunc.i64.i32($i43);
    goto corral_source_split_1660;

  corral_source_split_1660:
    assume {:verifier.code 0} true;
    $i45 := $sext.i32.i64($i1);
    goto corral_source_split_1661;

  corral_source_split_1661:
    assume {:verifier.code 0} true;
    $p46 := $M.1;
    goto corral_source_split_1662;

  corral_source_split_1662:
    assume {:verifier.code 0} true;
    $p49 := $add.ref($add.ref($add.ref($add.ref($p46, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i45, 56)), $mul.ref(16, 1));
    goto corral_source_split_1663;

  corral_source_split_1663:
    assume {:verifier.code 0} true;
    $i50 := $load.i64($M.0, $p49);
    goto corral_source_split_1664;

  corral_source_split_1664:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i64.i32($i50);
    goto corral_source_split_1665;

  corral_source_split_1665:
    assume {:verifier.code 0} true;
    call {:si_unique_call 181} $i52 := compute_finetune($i37, $i44, $i51, 0);
    call {:si_unique_call 182} {:cexpr "tmp"} boogie_si_record_i64($i52);
    goto corral_source_split_1666;

  corral_source_split_1666:
    assume {:verifier.code 0} true;
    $i53 := $trunc.i64.i32($i52);
    call {:si_unique_call 183} {:cexpr "freq"} boogie_si_record_i32($i53);
    goto corral_source_split_1667;

  corral_source_split_1667:
    assume {:verifier.code 0} true;
    $i54 := $sext.i32.i64($i53);
    goto corral_source_split_1668;

  corral_source_split_1668:
    assume {:verifier.code 0} true;
    $i55 := $sext.i32.i64($i1);
    goto corral_source_split_1669;

  corral_source_split_1669:
    assume {:verifier.code 0} true;
    $p56 := $M.1;
    goto corral_source_split_1670;

  corral_source_split_1670:
    assume {:verifier.code 0} true;
    $p59 := $add.ref($add.ref($add.ref($add.ref($p56, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i55, 56)), $mul.ref(32, 1));
    goto corral_source_split_1671;

  corral_source_split_1671:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p59, $i54);
    goto corral_source_split_1672;

  corral_source_split_1672:
    assume {:verifier.code 0} true;
    call {:si_unique_call 184} freq_to_fnum($i53, $p3, $p4);
    goto corral_source_split_1673;

  corral_source_split_1673:
    assume {:verifier.code 0} true;
    $i60 := $load.i32($M.3, $p4);
    goto corral_source_split_1674;

  corral_source_split_1674:
    assume {:verifier.code 0} true;
    $i61 := $trunc.i32.i8($i60);
    call {:si_unique_call 185} {:cexpr "data"} boogie_si_record_i8($i61);
    $p62 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i10, 8)), $mul.ref(2, 1));
    goto corral_source_split_1675;

  corral_source_split_1675:
    assume {:verifier.code 0} true;
    $i63 := $load.i16($M.2, $p62);
    goto corral_source_split_1676;

  corral_source_split_1676:
    assume {:verifier.code 0} true;
    $i64 := $zext.i16.i32($i63);
    $p65 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i10, 8)), $mul.ref(0, 1));
    goto corral_source_split_1677;

  corral_source_split_1677:
    assume {:verifier.code 0} true;
    $i66 := $load.i8($M.2, $p65);
    goto corral_source_split_1678;

  corral_source_split_1678:
    assume {:verifier.code 0} true;
    $i67 := $zext.i8.i32($i66);
    goto corral_source_split_1679;

  corral_source_split_1679:
    assume {:verifier.code 0} true;
    $i68 := $add.i32($i67, 160);
    goto corral_source_split_1680;

  corral_source_split_1680:
    assume {:verifier.code 0} true;
    $i69 := $zext.i8.i32($i61);
    goto corral_source_split_1681;

  corral_source_split_1681:
    assume {:verifier.code 0} true;
    call {:si_unique_call 186} opl3_command($i64, $i68, $i69);
    goto corral_source_split_1682;

  corral_source_split_1682:
    assume {:verifier.code 0} true;
    $i70 := $load.i32($M.4, $p3);
    goto corral_source_split_1683;

  corral_source_split_1683:
    assume {:verifier.code 0} true;
    $i71 := $and.i32($i70, 7);
    goto corral_source_split_1684;

  corral_source_split_1684:
    assume {:verifier.code 0} true;
    $i72 := $shl.i32($i71, 2);
    goto corral_source_split_1685;

  corral_source_split_1685:
    assume {:verifier.code 0} true;
    $i73 := $trunc.i32.i8($i72);
    goto corral_source_split_1686;

  corral_source_split_1686:
    assume {:verifier.code 0} true;
    $i74 := $sext.i8.i32($i73);
    goto corral_source_split_1687;

  corral_source_split_1687:
    assume {:verifier.code 0} true;
    $i75 := $or.i32($i74, 32);
    goto corral_source_split_1688;

  corral_source_split_1688:
    assume {:verifier.code 0} true;
    $i76 := $load.i32($M.3, $p4);
    goto corral_source_split_1689;

  corral_source_split_1689:
    assume {:verifier.code 0} true;
    $i77 := $ashr.i32($i76, 8);
    goto corral_source_split_1690;

  corral_source_split_1690:
    assume {:verifier.code 0} true;
    $i78 := $trunc.i32.i8($i77);
    goto corral_source_split_1691;

  corral_source_split_1691:
    assume {:verifier.code 0} true;
    $i79 := $sext.i8.i32($i78);
    goto corral_source_split_1692;

  corral_source_split_1692:
    assume {:verifier.code 0} true;
    $i80 := $and.i32($i79, 3);
    goto corral_source_split_1693;

  corral_source_split_1693:
    assume {:verifier.code 0} true;
    $i81 := $or.i32($i75, $i80);
    goto corral_source_split_1694;

  corral_source_split_1694:
    assume {:verifier.code 0} true;
    $i82 := $trunc.i32.i8($i81);
    call {:si_unique_call 187} {:cexpr "data"} boogie_si_record_i8($i82);
    goto corral_source_split_1695;

  corral_source_split_1695:
    assume {:verifier.code 0} true;
    $i83 := $sext.i32.i64($i1);
    goto corral_source_split_1696;

  corral_source_split_1696:
    assume {:verifier.code 0} true;
    $p84 := $M.1;
    goto corral_source_split_1697;

  corral_source_split_1697:
    assume {:verifier.code 0} true;
    $p87 := $add.ref($add.ref($add.ref($add.ref($p84, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i83, 56)), $mul.ref(0, 1));
    goto corral_source_split_1698;

  corral_source_split_1698:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p87, $i82);
    $p88 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i10, 8)), $mul.ref(2, 1));
    goto corral_source_split_1699;

  corral_source_split_1699:
    assume {:verifier.code 0} true;
    $i89 := $load.i16($M.2, $p88);
    goto corral_source_split_1700;

  corral_source_split_1700:
    assume {:verifier.code 0} true;
    $i90 := $zext.i16.i32($i89);
    $p91 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i10, 8)), $mul.ref(0, 1));
    goto corral_source_split_1701;

  corral_source_split_1701:
    assume {:verifier.code 0} true;
    $i92 := $load.i8($M.2, $p91);
    goto corral_source_split_1702;

  corral_source_split_1702:
    assume {:verifier.code 0} true;
    $i93 := $zext.i8.i32($i92);
    goto corral_source_split_1703;

  corral_source_split_1703:
    assume {:verifier.code 0} true;
    $i94 := $add.i32($i93, 176);
    goto corral_source_split_1704;

  corral_source_split_1704:
    assume {:verifier.code 0} true;
    $i95 := $zext.i8.i32($i82);
    goto corral_source_split_1705;

  corral_source_split_1705:
    assume {:verifier.code 0} true;
    call {:si_unique_call 188} opl3_command($i90, $i94, $i95);
    goto corral_source_split_1706;

  corral_source_split_1706:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    return;

  $bb8:
    assume $i31 == 1;
    goto corral_source_split_1650;

  corral_source_split_1650:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb5:
    assume $i22 == 1;
    goto corral_source_split_1640;

  corral_source_split_1640:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb1:
    assume $i15 == 1;
    goto corral_source_split_1631;

  corral_source_split_1631:
    assume {:verifier.code 0} true;
    goto $bb3;
}



const compute_finetune: ref;

axiom compute_finetune == $sub.ref(0, 64485);

procedure compute_finetune($i0: i64, $i1: i32, $i2: i32, $i3: i32) returns ($r: i64);
  free requires assertsPassed;



implementation compute_finetune($i0: i64, $i1: i32, $i2: i32, $i3: i32) returns ($r: i64)
{
  var $i4: i64;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 189} {:cexpr "compute_finetune:arg:arg0"} boogie_si_record_i64($i0);
    call {:si_unique_call 190} {:cexpr "compute_finetune:arg:arg1"} boogie_si_record_i32($i1);
    call {:si_unique_call 191} {:cexpr "compute_finetune:arg:arg2"} boogie_si_record_i32($i2);
    call {:si_unique_call 192} {:cexpr "compute_finetune:arg:arg3"} boogie_si_record_i32($i3);
    goto corral_source_split_1708;

  corral_source_split_1708:
    assume {:verifier.code 1} true;
    call {:si_unique_call 193} $i4 := __VERIFIER_nondet_ulong();
    call {:si_unique_call 194} {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i4);
    goto corral_source_split_1709;

  corral_source_split_1709:
    assume {:verifier.code 0} true;
    $r := $i4;
    return;
}



const freq_to_fnum: ref;

axiom freq_to_fnum == $sub.ref(0, 65517);

procedure freq_to_fnum($i0: i32, $p1: ref, $p2: ref);
  free requires assertsPassed;
  modifies $M.3, $M.4;



implementation freq_to_fnum($i0: i32, $p1: ref, $p2: ref)
{
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i8: i32;
  var $i9: i32;
  var $i13: i32;
  var $i7: i32;
  var $i15: i1;
  var $i16: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i18: i32;
  var $i19: i32;
  var $i23: i32;
  var $i17: i32;
  var $i24: i32;
  var $i14: i32;
  var $i4: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 195} {:cexpr "freq_to_fnum:arg:freq"} boogie_si_record_i32($i0);
    call {:si_unique_call 196} {:cexpr "freq_to_fnum:arg:f"} boogie_si_record_i32($i0);
    goto corral_source_split_1711;

  corral_source_split_1711:
    assume {:verifier.code 0} true;
    $i3 := $eq.i32($i0, 0);
    goto corral_source_split_1712;

  corral_source_split_1712:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    goto corral_source_split_1716;

  corral_source_split_1716:
    assume {:verifier.code 0} true;
    $i5 := $sle.i32($i0, 260);
    goto corral_source_split_1717;

  corral_source_split_1717:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i5 == 1);
    goto corral_source_split_1725;

  corral_source_split_1725:
    assume {:verifier.code 0} true;
    $i15 := $sgt.i32($i0, 493);
    goto corral_source_split_1726;

  corral_source_split_1726:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    $i24 := 5;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i14 := $i24;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i4 := $i14;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1719;

  corral_source_split_1719:
    assume {:verifier.code 0} true;
    $i25 := $sgt.i32($i4, 7);
    goto corral_source_split_1720;

  corral_source_split_1720:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i25 == 1);
    assume {:verifier.code 0} true;
    $i26 := $i4;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    goto corral_source_split_1753;

  corral_source_split_1753:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(20, $i26);
    goto corral_source_split_1754;

  corral_source_split_1754:
    assume {:verifier.code 0} true;
    $i28 := $shl.i32($i0, $i27);
    goto corral_source_split_1755;

  corral_source_split_1755:
    assume {:verifier.code 0} true;
    $i29 := $sdiv.i32($i28, 49716);
    goto corral_source_split_1756;

  corral_source_split_1756:
    assume {:verifier.code 0} true;
    $M.3 := $store.i32($M.3, $p2, $i29);
    goto corral_source_split_1757;

  corral_source_split_1757:
    assume {:verifier.code 0} true;
    $M.4 := $store.i32($M.4, $p1, $i26);
    goto corral_source_split_1758;

  corral_source_split_1758:
    assume {:verifier.code 0} true;
    return;

  $bb26:
    assume $i25 == 1;
    goto corral_source_split_1751;

  corral_source_split_1751:
    assume {:verifier.code 0} true;
    $i26 := 7;
    goto $bb28;

  $bb15:
    assume $i15 == 1;
    goto corral_source_split_1738;

  corral_source_split_1738:
    assume {:verifier.code 0} true;
    $i16 := $sgt.i32($i0, 493);
    goto corral_source_split_1739;

  corral_source_split_1739:
    assume {:verifier.code 0} true;
    $i17 := 5;
    assume {:branchcond $i16} true;
    goto $bb17, $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume !($i16 == 1);
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i24 := $i17;
    goto $bb25;

  $bb17:
    assume $i16 == 1;
    goto corral_source_split_1741;

  corral_source_split_1741:
    assume {:verifier.code 0} true;
    $i18, $i19 := 5, $i0;
    goto $bb20;

  $bb20:
    call $i20, $i21, $i22, $i18, $i19, $i23 := freq_to_fnum_loop_$bb20($i20, $i21, $i22, $i18, $i19, $i23);
    goto $bb20_last;

  corral_source_split_1743:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i18, 1);
    call {:si_unique_call 199} {:cexpr "octave"} boogie_si_record_i32($i20);
    goto corral_source_split_1745;

  corral_source_split_1745:
    assume {:verifier.code 0} true;
    $i21 := $ashr.i32($i19, 1);
    call {:si_unique_call 200} {:cexpr "f"} boogie_si_record_i32($i21);
    goto corral_source_split_1746;

  corral_source_split_1746:
    assume {:verifier.code 0} true;
    $i22 := $sgt.i32($i21, 493);
    goto corral_source_split_1747;

  corral_source_split_1747:
    assume {:verifier.code 0} true;
    $i23 := $i20;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1749;

  corral_source_split_1749:
    assume {:verifier.code 0} true;
    $i17 := $i23;
    goto $bb19;

  $bb22:
    assume $i22 == 1;
    assume {:verifier.code 0} true;
    $i18, $i19 := $i20, $i21;
    goto $bb22_dummy;

  $bb4:
    assume $i5 == 1;
    goto corral_source_split_1722;

  corral_source_split_1722:
    assume {:verifier.code 0} true;
    $i6 := $sle.i32($i0, 260);
    goto corral_source_split_1723;

  corral_source_split_1723:
    assume {:verifier.code 0} true;
    $i7 := 5;
    assume {:branchcond $i6} true;
    goto $bb6, $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    assume !($i6 == 1);
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i14 := $i7;
    goto $bb14;

  $bb6:
    assume $i6 == 1;
    goto corral_source_split_1728;

  corral_source_split_1728:
    assume {:verifier.code 0} true;
    $i8, $i9 := 5, $i0;
    goto $bb9;

  $bb9:
    call $i10, $i11, $i12, $i8, $i9, $i13 := freq_to_fnum_loop_$bb9($i10, $i11, $i12, $i8, $i9, $i13);
    goto $bb9_last;

  corral_source_split_1730:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i10 := $sub.i32($i8, 1);
    call {:si_unique_call 197} {:cexpr "octave"} boogie_si_record_i32($i10);
    goto corral_source_split_1732;

  corral_source_split_1732:
    assume {:verifier.code 0} true;
    $i11 := $shl.i32($i9, 1);
    call {:si_unique_call 198} {:cexpr "f"} boogie_si_record_i32($i11);
    goto corral_source_split_1733;

  corral_source_split_1733:
    assume {:verifier.code 0} true;
    $i12 := $sle.i32($i11, 260);
    goto corral_source_split_1734;

  corral_source_split_1734:
    assume {:verifier.code 0} true;
    $i13 := $i10;
    assume true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1736;

  corral_source_split_1736:
    assume {:verifier.code 0} true;
    $i7 := $i13;
    goto $bb8;

  $bb11:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    $i8, $i9 := $i10, $i11;
    goto $bb11_dummy;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_1714;

  corral_source_split_1714:
    assume {:verifier.code 0} true;
    $i4 := 0;
    goto $bb3;

  $bb22_dummy:
    assume false;
    return;

  $bb20_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1743;

  $bb11_dummy:
    assume false;
    return;

  $bb9_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1730;
}



const opl3_command: ref;

axiom opl3_command == $sub.ref(0, 66549);

procedure opl3_command($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;



implementation opl3_command($i0: i32, $i1: i32, $i2: i32)
{
  var $i3: i8;
  var $i4: i32;
  var $i5: i8;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i11: i8;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var vslice_dummy_var_17: i8;
  var vslice_dummy_var_18: i8;
  var vslice_dummy_var_19: i8;
  var vslice_dummy_var_20: i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 201} {:cexpr "opl3_command:arg:io_addr"} boogie_si_record_i32($i0);
    call {:si_unique_call 202} {:cexpr "opl3_command:arg:addr"} boogie_si_record_i32($i1);
    call {:si_unique_call 203} {:cexpr "opl3_command:arg:val"} boogie_si_record_i32($i2);
    goto corral_source_split_1760;

  corral_source_split_1760:
    assume {:verifier.code 0} true;
    $i3 := $trunc.i32.i8($i1);
    goto corral_source_split_1761;

  corral_source_split_1761:
    assume {:verifier.code 0} true;
    $i4 := $zext.i8.i32($i3);
    goto corral_source_split_1762;

  corral_source_split_1762:
    assume {:verifier.code 0} true;
    $i5 := $trunc.i32.i8($i4);
    goto corral_source_split_1763;

  corral_source_split_1763:
    assume {:verifier.code 0} true;
    call {:si_unique_call 204} outb($i5, $i0);
    goto corral_source_split_1764;

  corral_source_split_1764:
    assume {:verifier.code 0} true;
    $p6 := $M.1;
    goto corral_source_split_1765;

  corral_source_split_1765:
    assume {:verifier.code 0} true;
    $p7 := $add.ref($add.ref($p6, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_1766;

  corral_source_split_1766:
    assume {:verifier.code 0} true;
    $i8 := $load.i32($M.0, $p7);
    goto corral_source_split_1767;

  corral_source_split_1767:
    assume {:verifier.code 0} true;
    $i9 := $ne.i32($i8, 2);
    goto corral_source_split_1768;

  corral_source_split_1768:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i9 == 1);
    goto corral_source_split_1773;

  corral_source_split_1773:
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 207} vslice_dummy_var_17 := inb($i0);
    goto corral_source_split_1785;

  corral_source_split_1785:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    call {:si_unique_call 208} vslice_dummy_var_18 := inb($i0);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i11 := $trunc.i32.i8($i2);
    goto corral_source_split_1775;

  corral_source_split_1775:
    assume {:verifier.code 0} true;
    $i12 := $zext.i8.i32($i11);
    goto corral_source_split_1776;

  corral_source_split_1776:
    assume {:verifier.code 0} true;
    $i13 := $trunc.i32.i8($i12);
    goto corral_source_split_1777;

  corral_source_split_1777:
    assume {:verifier.code 0} true;
    $i14 := $add.i32($i0, 1);
    goto corral_source_split_1778;

  corral_source_split_1778:
    assume {:verifier.code 0} true;
    call {:si_unique_call 206} outb($i13, $i14);
    goto corral_source_split_1779;

  corral_source_split_1779:
    assume {:verifier.code 0} true;
    $p15 := $M.1;
    goto corral_source_split_1780;

  corral_source_split_1780:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($p15, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_1781;

  corral_source_split_1781:
    assume {:verifier.code 0} true;
    $i17 := $load.i32($M.0, $p16);
    goto corral_source_split_1782;

  corral_source_split_1782:
    assume {:verifier.code 0} true;
    $i18 := $ne.i32($i17, 2);
    goto corral_source_split_1783;

  corral_source_split_1783:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i18 == 1);
    goto corral_source_split_1790;

  corral_source_split_1790:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    call {:si_unique_call 210} vslice_dummy_var_19 := inb($i0);
    goto corral_source_split_1792;

  corral_source_split_1792:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    call {:si_unique_call 211} vslice_dummy_var_20 := inb($i0);
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    return;

  $bb8:
    assume $i18 == 1;
    goto corral_source_split_1787;

  corral_source_split_1787:
    assume {:verifier.code 0} true;
    call {:si_unique_call 209} __const_udelay(128850);
    goto corral_source_split_1788;

  corral_source_split_1788:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb1:
    assume $i9 == 1;
    goto corral_source_split_1770;

  corral_source_split_1770:
    assume {:verifier.code 0} true;
    call {:si_unique_call 205} __const_udelay(42950);
    goto corral_source_split_1771;

  corral_source_split_1771:
    assume {:verifier.code 0} true;
    goto $bb3;
}



const outb: ref;

axiom outb == $sub.ref(0, 67581);

procedure outb($i0: i8, $i1: i32);
  free requires assertsPassed;



implementation outb($i0: i8, $i1: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 212} {:cexpr "outb:arg:value"} boogie_si_record_i8($i0);
    call {:si_unique_call 213} {:cexpr "outb:arg:port"} boogie_si_record_i32($i1);
    call {:si_unique_call 214} devirtbounce(0, $i0, $i1);
    goto corral_source_split_1794;

  corral_source_split_1794:
    assume {:verifier.code 0} true;
    return;
}



const __const_udelay: ref;

axiom __const_udelay == $sub.ref(0, 68613);

procedure __const_udelay($i0: i64);
  free requires assertsPassed;



implementation __const_udelay($i0: i64)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 215} {:cexpr "__const_udelay:arg:arg0"} boogie_si_record_i64($i0);
    goto corral_source_split_1796;

  corral_source_split_1796:
    assume {:verifier.code 0} true;
    return;
}



const inb: ref;

axiom inb == $sub.ref(0, 69645);

procedure inb($i0: i32) returns ($r: i8);
  free requires assertsPassed;



implementation inb($i0: i32) returns ($r: i8)
{
  var $i1: i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 216} {:cexpr "inb:arg:port"} boogie_si_record_i32($i0);
    call {:si_unique_call 217} $i1 := devirtbounce.1(0, $i0);
    call {:si_unique_call 218} {:cexpr "value"} boogie_si_record_i8($i1);
    goto corral_source_split_1798;

  corral_source_split_1798:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const printk: ref;

axiom printk == $sub.ref(0, 70677);

procedure printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_1800;

  corral_source_split_1800:
    assume {:verifier.code 1} true;
    call {:si_unique_call 219} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 220} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1801;

  corral_source_split_1801:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb1:
    assume {:verifier.code 1} true;
    goto corral_source_split_1803;

  corral_source_split_1803:
    assume {:verifier.code 1} true;
    call {:si_unique_call 221} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 222} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1804;

  corral_source_split_1804:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const ldv_copy_from_user_7: ref;

axiom ldv_copy_from_user_7 == $sub.ref(0, 71709);

procedure ldv_copy_from_user_7($p0: ref, $p1: ref, $i2: i64) returns ($r: i64);
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_copy_from_user_7($p0: ref, $p1: ref, $i2: i64) returns ($r: i64)
{
  var $i3: i64;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 223} {:cexpr "ldv_copy_from_user_7:arg:n"} boogie_si_record_i64($i2);
    goto corral_source_split_1806;

  corral_source_split_1806:
    assume {:verifier.code 0} true;
    call {:si_unique_call 224} ldv_check_len($i2);
    goto SeqInstr_10, SeqInstr_11;

  SeqInstr_11:
    assume assertsPassed;
    goto SeqInstr_12;

  SeqInstr_12:
    goto corral_source_split_1807;

  corral_source_split_1807:
    assume {:verifier.code 0} true;
    call {:si_unique_call 225} $i3 := copy_from_user($p0, $p1, $i2);
    goto SeqInstr_13, SeqInstr_14;

  SeqInstr_14:
    assume assertsPassed;
    goto SeqInstr_15;

  SeqInstr_15:
    call {:si_unique_call 226} {:cexpr "tmp"} boogie_si_record_i64($i3);
    goto corral_source_split_1808;

  corral_source_split_1808:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;

  SeqInstr_13:
    assume !assertsPassed;
    return;

  SeqInstr_10:
    assume !assertsPassed;
    return;
}



const store_instr: ref;

axiom store_instr == $sub.ref(0, 72741);

procedure store_instr($i0: i32, $p1: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0;



implementation store_instr($i0: i32, $p1: ref) returns ($r: i32)
{
  var $p2: ref;
  var $i3: i16;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i16;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $i15: i16;
  var $i16: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var cmdloc_dummy_var_0: [ref]i8;
  var cmdloc_dummy_var_1: [ref]i8;
  var cmdloc_dummy_var_2: [ref]i8;
  var cmdloc_dummy_var_3: [ref]i8;
  var cmdloc_dummy_var_4: [ref]i8;
  var cmdloc_dummy_var_5: [ref]i8;
  var vslice_dummy_var_21: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 227} {:cexpr "store_instr:arg:instr_no"} boogie_si_record_i32($i0);
    goto corral_source_split_1810;

  corral_source_split_1810:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1811;

  corral_source_split_1811:
    assume {:verifier.code 0} true;
    $i3 := $load.i16($M.0, $p2);
    goto corral_source_split_1812;

  corral_source_split_1812:
    assume {:verifier.code 0} true;
    $i4 := $zext.i16.i32($i3);
    goto corral_source_split_1813;

  corral_source_split_1813:
    assume {:verifier.code 0} true;
    $i5 := $ne.i32($i4, 509);
    goto corral_source_split_1814;

  corral_source_split_1814:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i5 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i18 := $ugt.i64(40, 63);
    goto corral_source_split_1833;

  corral_source_split_1833:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i18 == 1);
    goto corral_source_split_1844;

  corral_source_split_1844:
    assume {:verifier.code 0} true;
    $p25 := $M.1;
    goto corral_source_split_1845;

  corral_source_split_1845:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($add.ref($p25, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_1846;

  corral_source_split_1846:
    assume {:verifier.code 0} true;
    $p27 := $bitcast.ref.ref($p26);
    goto corral_source_split_1847;

  corral_source_split_1847:
    assume {:verifier.code 0} true;
    $i28 := $sext.i32.i64($i0);
    goto corral_source_split_1848;

  corral_source_split_1848:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($p27, $mul.ref($i28, 1));
    goto corral_source_split_1849;

  corral_source_split_1849:
    assume {:verifier.code 0} true;
    $p30 := $bitcast.ref.ref($p1);
    goto corral_source_split_1850;

  corral_source_split_1850:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_3 := $M.0;
    cmdloc_dummy_var_4 := $M.0;
    call {:si_unique_call 230} cmdloc_dummy_var_5 := $memcpy.i8(cmdloc_dummy_var_3, cmdloc_dummy_var_4, $p29, $p30, 40, $zext.i32.i64(1), 0 == 1);
    $M.0 := cmdloc_dummy_var_5;
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb10:
    assume $i18 == 1;
    goto corral_source_split_1835;

  corral_source_split_1835:
    assume {:verifier.code 0} true;
    $p19 := $M.1;
    goto corral_source_split_1836;

  corral_source_split_1836:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($p19, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_1837;

  corral_source_split_1837:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p20);
    goto corral_source_split_1838;

  corral_source_split_1838:
    assume {:verifier.code 0} true;
    $i22 := $sext.i32.i64($i0);
    goto corral_source_split_1839;

  corral_source_split_1839:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($p21, $mul.ref($i22, 1));
    goto corral_source_split_1840;

  corral_source_split_1840:
    assume {:verifier.code 0} true;
    $p24 := $bitcast.ref.ref($p1);
    goto corral_source_split_1841;

  corral_source_split_1841:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_0 := $M.0;
    cmdloc_dummy_var_1 := $M.0;
    call {:si_unique_call 229} cmdloc_dummy_var_2 := $memcpy.i8(cmdloc_dummy_var_0, cmdloc_dummy_var_1, $p23, $p24, 40, $zext.i32.i64(1), 0 == 1);
    $M.0 := cmdloc_dummy_var_2;
    goto corral_source_split_1842;

  corral_source_split_1842:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_1816;

  corral_source_split_1816:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1817;

  corral_source_split_1817:
    assume {:verifier.code 0} true;
    $i7 := $load.i16($M.0, $p6);
    goto corral_source_split_1818;

  corral_source_split_1818:
    assume {:verifier.code 0} true;
    $i8 := $zext.i16.i32($i7);
    goto corral_source_split_1819;

  corral_source_split_1819:
    assume {:verifier.code 0} true;
    $i9 := $ne.i32($i8, 1021);
    goto corral_source_split_1820;

  corral_source_split_1820:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb4, $bb6;

  $bb6:
    assume !($i9 == 1);
    goto corral_source_split_1827;

  corral_source_split_1827:
    assume {:verifier.code 0} true;
    $p10 := $M.1;
    goto corral_source_split_1828;

  corral_source_split_1828:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p10, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_1829;

  corral_source_split_1829:
    assume {:verifier.code 0} true;
    $i12 := $load.i32($M.0, $p11);
    goto corral_source_split_1830;

  corral_source_split_1830:
    assume {:verifier.code 0} true;
    $i13 := $ne.i32($i12, 2);
    goto corral_source_split_1831;

  corral_source_split_1831:
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb7, $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    assume !($i13 == 1);
    goto $bb3;

  $bb7:
    assume {:verifier.code 0} true;
    assume $i13 == 1;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1822;

  corral_source_split_1822:
    assume {:verifier.code 0} true;
    $i15 := $load.i16($M.0, $p14);
    goto corral_source_split_1823;

  corral_source_split_1823:
    assume {:verifier.code 0} true;
    $i16 := $zext.i16.i32($i15);
    goto corral_source_split_1824;

  corral_source_split_1824:
    assume {:verifier.code 0} true;
    call {:si_unique_call 228} vslice_dummy_var_21 := printk.ref.i32(.str.4, $i16);
    goto corral_source_split_1825;

  corral_source_split_1825:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i9 == 1;
    goto $bb5;
}



const llvm.memcpy.p0i8.p0i8.i64: ref;

axiom llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 73773);

procedure llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);



const ldv_check_len: ref;

axiom ldv_check_len == $sub.ref(0, 74805);

procedure ldv_check_len($i0: i64);
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_check_len($i0: i64)
{
  var $i1: i1;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 231} {:cexpr "ldv_check_len:arg:n"} boogie_si_record_i64($i0);
    goto corral_source_split_1852;

  corral_source_split_1852:
    assume {:verifier.code 0} true;
    $i1 := $slt.i64($i0, 0);
    goto corral_source_split_1853;

  corral_source_split_1853:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i1 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_1855;

  corral_source_split_1855:
    assume {:verifier.code 0} true;
    call {:si_unique_call 232} ldv_error();
    goto SeqInstr_16, SeqInstr_17;

  SeqInstr_17:
    assume assertsPassed;
    goto SeqInstr_18;

  SeqInstr_18:
    goto corral_source_split_1856;

  corral_source_split_1856:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_16:
    assume !assertsPassed;
    return;
}



const copy_from_user: ref;

axiom copy_from_user == $sub.ref(0, 75837);

procedure copy_from_user($p0: ref, $p1: ref, $i2: i64) returns ($r: i64);
  free requires assertsPassed;
  modifies assertsPassed;



implementation copy_from_user($p0: ref, $p1: ref, $i2: i64) returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i7: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i17: i1;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i1;
  var $i23: i32;
  var $i24: i64;
  var $i16: i64;
  var vslice_dummy_var_22: i64;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 233} {:cexpr "copy_from_user:arg:n"} boogie_si_record_i64($i2);
    goto corral_source_split_1858;

  corral_source_split_1858:
    assume {:verifier.code 0} true;
    call {:si_unique_call 234} $i3 := __builtinx_object_size.ref.i32($p0, 0);
    goto corral_source_split_1859;

  corral_source_split_1859:
    assume {:verifier.code 0} true;
    $i4 := $sext.i32.i64($i3);
    call {:si_unique_call 235} {:cexpr "tmp"} boogie_si_record_i64($i4);
    goto corral_source_split_1860;

  corral_source_split_1860:
    assume {:verifier.code 0} true;
    $i5 := $trunc.i64.i32($i4);
    call {:si_unique_call 236} {:cexpr "sz"} boogie_si_record_i32($i5);
    goto corral_source_split_1861;

  corral_source_split_1861:
    assume {:verifier.code 0} true;
    call {:si_unique_call 237} might_fault();
    goto corral_source_split_1862;

  corral_source_split_1862:
    assume {:verifier.code 0} true;
    $i6 := $eq.i32($i5, $sub.i32(0, 1));
    goto corral_source_split_1863;

  corral_source_split_1863:
    assume {:verifier.code 0} true;
    $i7 := 1;
    assume {:branchcond $i6} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i6 == 1);
    goto corral_source_split_1871;

  corral_source_split_1871:
    assume {:verifier.code 0} true;
    $i8 := $sext.i32.i64($i5);
    goto corral_source_split_1872;

  corral_source_split_1872:
    assume {:verifier.code 0} true;
    $i9 := $uge.i64($i8, $i2);
    goto corral_source_split_1873;

  corral_source_split_1873:
    assume {:verifier.code 0} true;
    $i7 := $i9;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto corral_source_split_1865;

  corral_source_split_1865:
    assume {:verifier.code 0} true;
    $i10 := $zext.i1.i32($i7);
    goto corral_source_split_1866;

  corral_source_split_1866:
    assume {:verifier.code 0} true;
    $i11 := $sext.i32.i64($i10);
    goto corral_source_split_1867;

  corral_source_split_1867:
    assume {:verifier.code 0} true;
    call {:si_unique_call 238} $i12 := ldv__builtin_expect($i11, 1);
    call {:si_unique_call 239} {:cexpr "tmp___1"} boogie_si_record_i64($i12);
    goto corral_source_split_1868;

  corral_source_split_1868:
    assume {:verifier.code 0} true;
    $i13 := $ne.i64($i12, 0);
    goto corral_source_split_1869;

  corral_source_split_1869:
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i13 == 1);
    goto corral_source_split_1879;

  corral_source_split_1879:
    assume {:verifier.code 0} true;
    $i17 := $ne.i32(1, 0);
    goto corral_source_split_1880;

  corral_source_split_1880:
    assume {:verifier.code 0} true;
    $i18 := $zext.i1.i32($i17);
    goto corral_source_split_1881;

  corral_source_split_1881:
    assume {:verifier.code 0} true;
    $i19 := $sext.i32.i64($i18);
    goto corral_source_split_1882;

  corral_source_split_1882:
    assume {:verifier.code 0} true;
    call {:si_unique_call 242} $i20 := ldv__builtin_expect($i19, 0);
    call {:si_unique_call 243} {:cexpr "tmp___0"} boogie_si_record_i64($i20);
    goto corral_source_split_1883;

  corral_source_split_1883:
    assume {:verifier.code 0} true;
    $i21 := $ne.i64($i20, 0);
    goto corral_source_split_1884;

  corral_source_split_1884:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i21 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i22 := $ne.i32(1, 0);
    goto corral_source_split_1891;

  corral_source_split_1891:
    assume {:verifier.code 0} true;
    $i23 := $zext.i1.i32($i22);
    goto corral_source_split_1892;

  corral_source_split_1892:
    assume {:verifier.code 0} true;
    $i24 := $sext.i32.i64($i23);
    goto corral_source_split_1893;

  corral_source_split_1893:
    assume {:verifier.code 0} true;
    call {:si_unique_call 245} vslice_dummy_var_22 := ldv__builtin_expect($i24, 0);
    assume {:verifier.code 0} true;
    $i16 := $i2;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_1886;

  corral_source_split_1886:
    assume {:verifier.code 0} true;
    $r := $i16;
    return;

  $bb7:
    assume $i21 == 1;
    goto corral_source_split_1888;

  corral_source_split_1888:
    assume {:verifier.code 0} true;
    call {:si_unique_call 244} warn_slowpath_fmt.ref.i32.ref(.str.2, 58, .str.3);
    goto corral_source_split_1889;

  corral_source_split_1889:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb4:
    assume $i13 == 1;
    goto corral_source_split_1875;

  corral_source_split_1875:
    assume {:verifier.code 0} true;
    $i14 := $trunc.i64.i32($i2);
    goto corral_source_split_1876;

  corral_source_split_1876:
    assume {:verifier.code 0} true;
    call {:si_unique_call 240} $i15 := ldv__copy_from_user_1($p0, $p1, $i14);
    goto SeqInstr_19, SeqInstr_20;

  SeqInstr_20:
    assume assertsPassed;
    goto SeqInstr_21;

  SeqInstr_21:
    call {:si_unique_call 241} {:cexpr "n"} boogie_si_record_i64($i15);
    goto corral_source_split_1877;

  corral_source_split_1877:
    assume {:verifier.code 0} true;
    $i16 := $i15;
    goto $bb6;

  SeqInstr_19:
    assume !assertsPassed;
    return;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i6 == 1;
    goto $bb2;
}



const __builtinx_object_size: ref;

axiom __builtinx_object_size == $sub.ref(0, 76869);

procedure __builtinx_object_size.ref.i32(p.0: ref, p.1: i32) returns ($r: i32);



const might_fault: ref;

axiom might_fault == $sub.ref(0, 77901);

procedure might_fault();
  free requires assertsPassed;



implementation might_fault()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1895;

  corral_source_split_1895:
    assume {:verifier.code 0} true;
    return;
}



const ldv__builtin_expect: ref;

axiom ldv__builtin_expect == $sub.ref(0, 78933);

procedure ldv__builtin_expect($i0: i64, $i1: i64) returns ($r: i64);
  free requires assertsPassed;



implementation ldv__builtin_expect($i0: i64, $i1: i64) returns ($r: i64)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 246} {:cexpr "ldv__builtin_expect:arg:exp"} boogie_si_record_i64($i0);
    call {:si_unique_call 247} {:cexpr "ldv__builtin_expect:arg:c"} boogie_si_record_i64($i1);
    goto corral_source_split_1897;

  corral_source_split_1897:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv__copy_from_user_1: ref;

axiom ldv__copy_from_user_1 == $sub.ref(0, 79965);

procedure ldv__copy_from_user_1($p0: ref, $p1: ref, $i2: i32) returns ($r: i64);
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv__copy_from_user_1($p0: ref, $p1: ref, $i2: i32) returns ($r: i64)
{
  var $i3: i64;
  var $i4: i64;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 248} {:cexpr "ldv__copy_from_user_1:arg:ldv_func_arg3"} boogie_si_record_i32($i2);
    goto corral_source_split_1899;

  corral_source_split_1899:
    assume {:verifier.code 0} true;
    $i3 := $zext.i32.i64($i2);
    goto corral_source_split_1900;

  corral_source_split_1900:
    assume {:verifier.code 0} true;
    call {:si_unique_call 249} ldv_check_len($i3);
    goto SeqInstr_22, SeqInstr_23;

  SeqInstr_23:
    assume assertsPassed;
    goto SeqInstr_24;

  SeqInstr_24:
    goto corral_source_split_1901;

  corral_source_split_1901:
    assume {:verifier.code 0} true;
    call {:si_unique_call 250} $i4 := _copy_from_user($p0, $p1, $i2);
    call {:si_unique_call 251} {:cexpr "tmp"} boogie_si_record_i64($i4);
    goto corral_source_split_1902;

  corral_source_split_1902:
    assume {:verifier.code 0} true;
    $r := $i4;
    return;

  SeqInstr_22:
    assume !assertsPassed;
    return;
}



const warn_slowpath_fmt: ref;

axiom warn_slowpath_fmt == $sub.ref(0, 80997);

procedure warn_slowpath_fmt.ref.i32.ref($p0: ref, $i1: i32, $p2: ref);
  free requires assertsPassed;



implementation warn_slowpath_fmt.ref.i32.ref($p0: ref, $i1: i32, $p2: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 252} {:cexpr "warn_slowpath_fmt:arg:arg1"} boogie_si_record_i32($i1);
    goto corral_source_split_1904;

  corral_source_split_1904:
    assume {:verifier.code 0} true;
    return;
}



const _copy_from_user: ref;

axiom _copy_from_user == $sub.ref(0, 82029);

procedure _copy_from_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i64);
  free requires assertsPassed;



implementation _copy_from_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i64)
{
  var $i3: i64;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 253} {:cexpr "_copy_from_user:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_1906;

  corral_source_split_1906:
    assume {:verifier.code 1} true;
    call {:si_unique_call 254} $i3 := __VERIFIER_nondet_ulong();
    call {:si_unique_call 255} {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
    goto corral_source_split_1907;

  corral_source_split_1907:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;
}



const ldv_error: ref;

axiom ldv_error == $sub.ref(0, 83061);

procedure ldv_error();
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_error()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1909;

  corral_source_split_1909:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 1} true;
    call {:si_unique_call 256} __VERIFIER_error();
    goto SeqInstr_25, SeqInstr_26;

  SeqInstr_26:
    assume assertsPassed;
    goto SeqInstr_27;

  SeqInstr_27:
    goto corral_source_split_1911;

  corral_source_split_1911:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_25:
    assume !assertsPassed;
    return;
}



const set_voice_volume: ref;

axiom set_voice_volume == $sub.ref(0, 84093);

procedure set_voice_volume($i0: i32, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.5, $CurrAddr;



implementation set_voice_volume($i0: i32, $i1: i32, $i2: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i12: i64;
  var $p13: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i64;
  var $i19: i64;
  var $p20: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i64;
  var $p34: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $i40: i64;
  var $p41: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p48: ref;
  var $i49: i8;
  var $p51: ref;
  var $i52: i8;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $i60: i16;
  var $i61: i32;
  var $p63: ref;
  var $i64: i8;
  var $i65: i32;
  var $i66: i32;
  var $i67: i8;
  var $i68: i32;
  var $p69: ref;
  var $i70: i16;
  var $i71: i32;
  var $p73: ref;
  var $i74: i8;
  var $i75: i32;
  var $i76: i32;
  var $i77: i8;
  var $i78: i32;
  var $p80: ref;
  var $i81: i8;
  var $p83: ref;
  var $i84: i8;
  var $p86: ref;
  var $i87: i8;
  var $p89: ref;
  var $i90: i8;
  var $p92: ref;
  var $i93: i8;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $p98: ref;
  var $i99: i8;
  var $i100: i32;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $i104: i1;
  var $i105: i1;
  var $i106: i1;
  var $i107: i1;
  var $p108: ref;
  var $i109: i16;
  var $i110: i32;
  var $p112: ref;
  var $i113: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i8;
  var $i117: i32;
  var $p118: ref;
  var $i119: i16;
  var $i120: i32;
  var $p122: ref;
  var $i123: i8;
  var $i124: i32;
  var $i125: i32;
  var $i126: i8;
  var $i127: i32;
  var $p128: ref;
  var $i129: i16;
  var $i130: i32;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $i135: i32;
  var $i136: i8;
  var $i137: i32;
  var $p138: ref;
  var $i139: i16;
  var $i140: i32;
  var $p142: ref;
  var $i143: i8;
  var $i144: i32;
  var $i145: i32;
  var $i146: i8;
  var $i147: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 257} $p3 := $alloc($mul.ref(1, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 258} $p4 := $alloc($mul.ref(1, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 259} $p5 := $alloc($mul.ref(1, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 260} $p6 := $alloc($mul.ref(1, $zext.i32.i64(1)));
    call {:si_unique_call 261} {:cexpr "set_voice_volume:arg:voice"} boogie_si_record_i32($i0);
    call {:si_unique_call 262} {:cexpr "set_voice_volume:arg:volume"} boogie_si_record_i32($i1);
    call {:si_unique_call 263} {:cexpr "set_voice_volume:arg:main_vol"} boogie_si_record_i32($i2);
    goto corral_source_split_1913;

  corral_source_split_1913:
    assume {:verifier.code 0} true;
    $i7 := $slt.i32($i0, 0);
    goto corral_source_split_1914;

  corral_source_split_1914:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i7 == 1);
    goto corral_source_split_1916;

  corral_source_split_1916:
    assume {:verifier.code 0} true;
    $p8 := $M.1;
    goto corral_source_split_1917;

  corral_source_split_1917:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($add.ref($p8, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1918;

  corral_source_split_1918:
    assume {:verifier.code 0} true;
    $i10 := $load.i32($M.0, $p9);
    goto corral_source_split_1919;

  corral_source_split_1919:
    assume {:verifier.code 0} true;
    $i11 := $sle.i32($i10, $i0);
    goto corral_source_split_1920;

  corral_source_split_1920:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i12 := $sext.i32.i64($i0);
    goto corral_source_split_1922;

  corral_source_split_1922:
    assume {:verifier.code 0} true;
    $p13 := $M.1;
    goto corral_source_split_1923;

  corral_source_split_1923:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($add.ref($p13, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref($i12, 4));
    goto corral_source_split_1924;

  corral_source_split_1924:
    assume {:verifier.code 0} true;
    $i16 := $load.i32($M.0, $p15);
    goto corral_source_split_1925;

  corral_source_split_1925:
    assume {:verifier.code 0} true;
    $i17 := $sext.i32.i64($i16);
    goto corral_source_split_1926;

  corral_source_split_1926:
    assume {:verifier.code 0} true;
    $i19 := $sext.i32.i64($i0);
    goto corral_source_split_1927;

  corral_source_split_1927:
    assume {:verifier.code 0} true;
    $p20 := $M.1;
    goto corral_source_split_1928;

  corral_source_split_1928:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($add.ref($p20, $mul.ref(0, 11656)), $mul.ref(11352, 1)), $mul.ref($i19, 8));
    goto corral_source_split_1929;

  corral_source_split_1929:
    assume {:verifier.code 0} true;
    $p23 := $load.ref($M.0, $p22);
    goto corral_source_split_1930;

  corral_source_split_1930:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p23);
    goto corral_source_split_1931;

  corral_source_split_1931:
    assume {:verifier.code 0} true;
    $i25 := $eq.i64($i24, 0);
    goto corral_source_split_1932;

  corral_source_split_1932:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i25 == 1);
    assume {:verifier.code 0} true;
    $p29 := $p23;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto corral_source_split_1939;

  corral_source_split_1939:
    assume {:verifier.code 0} true;
    $p30 := $add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_1940;

  corral_source_split_1940:
    assume {:verifier.code 0} true;
    $i31 := $load.i32($M.0, $p30);
    goto corral_source_split_1941;

  corral_source_split_1941:
    assume {:verifier.code 0} true;
    $i32 := $slt.i32($i31, 0);
    goto corral_source_split_1942;

  corral_source_split_1942:
    assume {:verifier.code 0} true;
    assume {:branchcond $i32} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i32 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i33 := $sext.i32.i64($i0);
    goto corral_source_split_1946;

  corral_source_split_1946:
    assume {:verifier.code 0} true;
    $p34 := $M.1;
    goto corral_source_split_1947;

  corral_source_split_1947:
    assume {:verifier.code 0} true;
    $p37 := $add.ref($add.ref($add.ref($add.ref($p34, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i33, 56)), $mul.ref(44, 1));
    goto corral_source_split_1948;

  corral_source_split_1948:
    assume {:verifier.code 0} true;
    $i38 := $load.i32($M.0, $p37);
    goto corral_source_split_1949;

  corral_source_split_1949:
    assume {:verifier.code 0} true;
    $i39 := $eq.i32($i38, 0);
    goto corral_source_split_1950;

  corral_source_split_1950:
    assume {:verifier.code 0} true;
    assume {:branchcond $i39} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    $i40 := $sext.i32.i64($i0);
    goto corral_source_split_1954;

  corral_source_split_1954:
    assume {:verifier.code 0} true;
    $p41 := $M.1;
    goto corral_source_split_1955;

  corral_source_split_1955:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($add.ref($add.ref($p41, $mul.ref(0, 11656)), $mul.ref(88, 1)), $mul.ref($i40, 56)), $mul.ref(44, 1));
    goto corral_source_split_1956;

  corral_source_split_1956:
    assume {:verifier.code 0} true;
    $i45 := $load.i32($M.0, $p44);
    goto corral_source_split_1957;

  corral_source_split_1957:
    assume {:verifier.code 0} true;
    $i46 := $eq.i32($i45, 2);
    goto corral_source_split_1958;

  corral_source_split_1958:
    assume {:verifier.code 0} true;
    assume {:branchcond $i46} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i46 == 1);
    goto corral_source_split_1973;

  corral_source_split_1973:
    assume {:verifier.code 0} true;
    $p80 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(2, 1));
    goto corral_source_split_1974;

  corral_source_split_1974:
    assume {:verifier.code 0} true;
    $i81 := $load.i8($M.0, $p80);
    goto corral_source_split_1975;

  corral_source_split_1975:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p3, $i81);
    goto corral_source_split_1976;

  corral_source_split_1976:
    assume {:verifier.code 0} true;
    $p83 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(3, 1));
    goto corral_source_split_1977;

  corral_source_split_1977:
    assume {:verifier.code 0} true;
    $i84 := $load.i8($M.0, $p83);
    goto corral_source_split_1978;

  corral_source_split_1978:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p4, $i84);
    goto corral_source_split_1979;

  corral_source_split_1979:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(13, 1));
    goto corral_source_split_1980;

  corral_source_split_1980:
    assume {:verifier.code 0} true;
    $i87 := $load.i8($M.0, $p86);
    goto corral_source_split_1981;

  corral_source_split_1981:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p5, $i87);
    goto corral_source_split_1982;

  corral_source_split_1982:
    assume {:verifier.code 0} true;
    $p89 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(14, 1));
    goto corral_source_split_1983;

  corral_source_split_1983:
    assume {:verifier.code 0} true;
    $i90 := $load.i8($M.0, $p89);
    goto corral_source_split_1984;

  corral_source_split_1984:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p6, $i90);
    goto corral_source_split_1985;

  corral_source_split_1985:
    assume {:verifier.code 0} true;
    $p92 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(10, 1));
    goto corral_source_split_1986;

  corral_source_split_1986:
    assume {:verifier.code 0} true;
    $i93 := $load.i8($M.0, $p92);
    goto corral_source_split_1987;

  corral_source_split_1987:
    assume {:verifier.code 0} true;
    $i94 := $zext.i8.i32($i93);
    goto corral_source_split_1988;

  corral_source_split_1988:
    assume {:verifier.code 0} true;
    $i95 := $and.i32($i94, 1);
    goto corral_source_split_1989;

  corral_source_split_1989:
    assume {:verifier.code 0} true;
    $i96 := $shl.i32($i95, 1);
    goto corral_source_split_1990;

  corral_source_split_1990:
    assume {:verifier.code 0} true;
    $p98 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(21, 1));
    goto corral_source_split_1991;

  corral_source_split_1991:
    assume {:verifier.code 0} true;
    $i99 := $load.i8($M.0, $p98);
    goto corral_source_split_1992;

  corral_source_split_1992:
    assume {:verifier.code 0} true;
    $i100 := $zext.i8.i32($i99);
    goto corral_source_split_1993;

  corral_source_split_1993:
    assume {:verifier.code 0} true;
    $i101 := $and.i32($i100, 1);
    goto corral_source_split_1994;

  corral_source_split_1994:
    assume {:verifier.code 0} true;
    $i102 := $or.i32($i96, $i101);
    call {:si_unique_call 264} {:cexpr "connection"} boogie_si_record_i32($i102);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i103 := $slt.i32($i102, 2);
    assume {:verifier.code 0} true;
    assume {:branchcond $i103} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i103 == 1);
    assume {:verifier.code 0} true;
    $i104 := $slt.i32($i102, 3);
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i104 == 1);
    assume {:verifier.code 0} true;
    $i105 := $eq.i32($i102, 3);
    assume {:verifier.code 0} true;
    assume {:branchcond $i105} true;
    goto $bb28, $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    assume !($i105 == 1);
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    $p108 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2036;

  corral_source_split_2036:
    assume {:verifier.code 0} true;
    $i109 := $load.i16($M.2, $p108);
    goto corral_source_split_2037;

  corral_source_split_2037:
    assume {:verifier.code 0} true;
    $i110 := $zext.i16.i32($i109);
    $p112 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_2038;

  corral_source_split_2038:
    assume {:verifier.code 0} true;
    $i113 := $load.i8($M.2, $p112);
    goto corral_source_split_2039;

  corral_source_split_2039:
    assume {:verifier.code 0} true;
    $i114 := $zext.i8.i32($i113);
    goto corral_source_split_2040;

  corral_source_split_2040:
    assume {:verifier.code 0} true;
    $i115 := $add.i32($i114, 64);
    goto corral_source_split_2041;

  corral_source_split_2041:
    assume {:verifier.code 0} true;
    $i116 := $load.i8($M.5, $p3);
    goto corral_source_split_2042;

  corral_source_split_2042:
    assume {:verifier.code 0} true;
    $i117 := $zext.i8.i32($i116);
    goto corral_source_split_2043;

  corral_source_split_2043:
    assume {:verifier.code 0} true;
    call {:si_unique_call 278} opl3_command($i110, $i115, $i117);
    $p118 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2044;

  corral_source_split_2044:
    assume {:verifier.code 0} true;
    $i119 := $load.i16($M.2, $p118);
    goto corral_source_split_2045;

  corral_source_split_2045:
    assume {:verifier.code 0} true;
    $i120 := $zext.i16.i32($i119);
    $p122 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_2046;

  corral_source_split_2046:
    assume {:verifier.code 0} true;
    $i123 := $load.i8($M.2, $p122);
    goto corral_source_split_2047;

  corral_source_split_2047:
    assume {:verifier.code 0} true;
    $i124 := $zext.i8.i32($i123);
    goto corral_source_split_2048;

  corral_source_split_2048:
    assume {:verifier.code 0} true;
    $i125 := $add.i32($i124, 64);
    goto corral_source_split_2049;

  corral_source_split_2049:
    assume {:verifier.code 0} true;
    $i126 := $load.i8($M.5, $p4);
    goto corral_source_split_2050;

  corral_source_split_2050:
    assume {:verifier.code 0} true;
    $i127 := $zext.i8.i32($i126);
    goto corral_source_split_2051;

  corral_source_split_2051:
    assume {:verifier.code 0} true;
    call {:si_unique_call 279} opl3_command($i120, $i125, $i127);
    $p128 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2052;

  corral_source_split_2052:
    assume {:verifier.code 0} true;
    $i129 := $load.i16($M.2, $p128);
    goto corral_source_split_2053;

  corral_source_split_2053:
    assume {:verifier.code 0} true;
    $i130 := $zext.i16.i32($i129);
    $p132 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_2054;

  corral_source_split_2054:
    assume {:verifier.code 0} true;
    $i133 := $load.i8($M.2, $p132);
    goto corral_source_split_2055;

  corral_source_split_2055:
    assume {:verifier.code 0} true;
    $i134 := $zext.i8.i32($i133);
    goto corral_source_split_2056;

  corral_source_split_2056:
    assume {:verifier.code 0} true;
    $i135 := $add.i32($i134, 64);
    goto corral_source_split_2057;

  corral_source_split_2057:
    assume {:verifier.code 0} true;
    $i136 := $load.i8($M.5, $p5);
    goto corral_source_split_2058;

  corral_source_split_2058:
    assume {:verifier.code 0} true;
    $i137 := $zext.i8.i32($i136);
    goto corral_source_split_2059;

  corral_source_split_2059:
    assume {:verifier.code 0} true;
    call {:si_unique_call 280} opl3_command($i130, $i135, $i137);
    $p138 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2060;

  corral_source_split_2060:
    assume {:verifier.code 0} true;
    $i139 := $load.i16($M.2, $p138);
    goto corral_source_split_2061;

  corral_source_split_2061:
    assume {:verifier.code 0} true;
    $i140 := $zext.i16.i32($i139);
    $p142 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_2062;

  corral_source_split_2062:
    assume {:verifier.code 0} true;
    $i143 := $load.i8($M.2, $p142);
    goto corral_source_split_2063;

  corral_source_split_2063:
    assume {:verifier.code 0} true;
    $i144 := $zext.i8.i32($i143);
    goto corral_source_split_2064;

  corral_source_split_2064:
    assume {:verifier.code 0} true;
    $i145 := $add.i32($i144, 64);
    goto corral_source_split_2065;

  corral_source_split_2065:
    assume {:verifier.code 0} true;
    $i146 := $load.i8($M.5, $p6);
    goto corral_source_split_2066;

  corral_source_split_2066:
    assume {:verifier.code 0} true;
    $i147 := $zext.i8.i32($i146);
    goto corral_source_split_2067;

  corral_source_split_2067:
    assume {:verifier.code 0} true;
    call {:si_unique_call 281} opl3_command($i140, $i145, $i147);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb28:
    assume $i105 == 1;
    goto corral_source_split_2024;

  corral_source_split_2024:
    assume {:verifier.code 0} true;
    call {:si_unique_call 272} calc_vol($p3, $i1, $i2);
    goto corral_source_split_2025;

  corral_source_split_2025:
    assume {:verifier.code 0} true;
    call {:si_unique_call 273} calc_vol($p5, $i1, $i2);
    goto corral_source_split_2026;

  corral_source_split_2026:
    assume {:verifier.code 0} true;
    call {:si_unique_call 274} calc_vol($p6, $i1, $i2);
    goto corral_source_split_2027;

  corral_source_split_2027:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb26:
    assume $i104 == 1;
    goto corral_source_split_2020;

  corral_source_split_2020:
    assume {:verifier.code 0} true;
    call {:si_unique_call 270} calc_vol($p3, $i1, $i2);
    goto corral_source_split_2021;

  corral_source_split_2021:
    assume {:verifier.code 0} true;
    call {:si_unique_call 271} calc_vol($p6, $i1, $i2);
    goto corral_source_split_2022;

  corral_source_split_2022:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb24:
    assume $i103 == 1;
    assume {:verifier.code 0} true;
    $i106 := $slt.i32($i102, 1);
    assume {:verifier.code 0} true;
    assume {:branchcond $i106} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i106 == 1);
    goto corral_source_split_2029;

  corral_source_split_2029:
    assume {:verifier.code 0} true;
    call {:si_unique_call 275} calc_vol($p4, $i1, $i2);
    goto corral_source_split_2030;

  corral_source_split_2030:
    assume {:verifier.code 0} true;
    call {:si_unique_call 276} calc_vol($p6, $i1, $i2);
    goto corral_source_split_2031;

  corral_source_split_2031:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb31:
    assume $i106 == 1;
    assume {:verifier.code 0} true;
    $i107 := $eq.i32($i102, 0);
    assume {:verifier.code 0} true;
    assume {:branchcond $i107} true;
    goto $bb33, $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    assume !($i107 == 1);
    goto $bb30;

  $bb33:
    assume $i107 == 1;
    goto corral_source_split_2033;

  corral_source_split_2033:
    assume {:verifier.code 0} true;
    call {:si_unique_call 277} calc_vol($p6, $i1, $i2);
    goto corral_source_split_2034;

  corral_source_split_2034:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb17:
    assume $i46 == 1;
    goto corral_source_split_1960;

  corral_source_split_1960:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(2, 1));
    goto corral_source_split_1961;

  corral_source_split_1961:
    assume {:verifier.code 0} true;
    $i49 := $load.i8($M.0, $p48);
    goto corral_source_split_1962;

  corral_source_split_1962:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p3, $i49);
    goto corral_source_split_1963;

  corral_source_split_1963:
    assume {:verifier.code 0} true;
    $p51 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(3, 1));
    goto corral_source_split_1964;

  corral_source_split_1964:
    assume {:verifier.code 0} true;
    $i52 := $load.i8($M.0, $p51);
    goto corral_source_split_1965;

  corral_source_split_1965:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p4, $i52);
    goto corral_source_split_1966;

  corral_source_split_1966:
    assume {:verifier.code 0} true;
    $p54 := $add.ref($add.ref($add.ref($p29, $mul.ref(0, 40)), $mul.ref(8, 1)), $mul.ref(10, 1));
    goto corral_source_split_1967;

  corral_source_split_1967:
    assume {:verifier.code 0} true;
    $i55 := $load.i8($M.0, $p54);
    goto corral_source_split_1968;

  corral_source_split_1968:
    assume {:verifier.code 0} true;
    $i56 := $zext.i8.i32($i55);
    goto corral_source_split_1969;

  corral_source_split_1969:
    assume {:verifier.code 0} true;
    $i57 := $and.i32($i56, 1);
    goto corral_source_split_1970;

  corral_source_split_1970:
    assume {:verifier.code 0} true;
    $i58 := $ne.i32($i57, 0);
    goto corral_source_split_1971;

  corral_source_split_1971:
    assume {:verifier.code 0} true;
    assume {:branchcond $i58} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i58 == 1);
    goto corral_source_split_2000;

  corral_source_split_2000:
    assume {:verifier.code 0} true;
    call {:si_unique_call 267} calc_vol($p4, $i1, $i2);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    $p59 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2002;

  corral_source_split_2002:
    assume {:verifier.code 0} true;
    $i60 := $load.i16($M.2, $p59);
    goto corral_source_split_2003;

  corral_source_split_2003:
    assume {:verifier.code 0} true;
    $i61 := $zext.i16.i32($i60);
    $p63 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_2004;

  corral_source_split_2004:
    assume {:verifier.code 0} true;
    $i64 := $load.i8($M.2, $p63);
    goto corral_source_split_2005;

  corral_source_split_2005:
    assume {:verifier.code 0} true;
    $i65 := $zext.i8.i32($i64);
    goto corral_source_split_2006;

  corral_source_split_2006:
    assume {:verifier.code 0} true;
    $i66 := $add.i32($i65, 64);
    goto corral_source_split_2007;

  corral_source_split_2007:
    assume {:verifier.code 0} true;
    $i67 := $load.i8($M.5, $p3);
    goto corral_source_split_2008;

  corral_source_split_2008:
    assume {:verifier.code 0} true;
    $i68 := $zext.i8.i32($i67);
    goto corral_source_split_2009;

  corral_source_split_2009:
    assume {:verifier.code 0} true;
    call {:si_unique_call 268} opl3_command($i61, $i66, $i68);
    $p69 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(2, 1));
    goto corral_source_split_2010;

  corral_source_split_2010:
    assume {:verifier.code 0} true;
    $i70 := $load.i16($M.2, $p69);
    goto corral_source_split_2011;

  corral_source_split_2011:
    assume {:verifier.code 0} true;
    $i71 := $zext.i16.i32($i70);
    $p73 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref($i17, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_2012;

  corral_source_split_2012:
    assume {:verifier.code 0} true;
    $i74 := $load.i8($M.2, $p73);
    goto corral_source_split_2013;

  corral_source_split_2013:
    assume {:verifier.code 0} true;
    $i75 := $zext.i8.i32($i74);
    goto corral_source_split_2014;

  corral_source_split_2014:
    assume {:verifier.code 0} true;
    $i76 := $add.i32($i75, 64);
    goto corral_source_split_2015;

  corral_source_split_2015:
    assume {:verifier.code 0} true;
    $i77 := $load.i8($M.5, $p4);
    goto corral_source_split_2016;

  corral_source_split_2016:
    assume {:verifier.code 0} true;
    $i78 := $zext.i8.i32($i77);
    goto corral_source_split_2017;

  corral_source_split_2017:
    assume {:verifier.code 0} true;
    call {:si_unique_call 269} opl3_command($i71, $i76, $i78);
    goto corral_source_split_2018;

  corral_source_split_2018:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb19:
    assume $i58 == 1;
    goto corral_source_split_1996;

  corral_source_split_1996:
    assume {:verifier.code 0} true;
    call {:si_unique_call 265} calc_vol($p3, $i1, $i2);
    goto corral_source_split_1997;

  corral_source_split_1997:
    assume {:verifier.code 0} true;
    call {:si_unique_call 266} calc_vol($p4, $i1, $i2);
    goto corral_source_split_1998;

  corral_source_split_1998:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb14:
    assume $i39 == 1;
    goto corral_source_split_1952;

  corral_source_split_1952:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb11:
    assume $i32 == 1;
    goto corral_source_split_1944;

  corral_source_split_1944:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb8:
    assume $i25 == 1;
    goto corral_source_split_1934;

  corral_source_split_1934:
    assume {:verifier.code 0} true;
    $p26 := $M.1;
    goto corral_source_split_1935;

  corral_source_split_1935:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($p26, $mul.ref(0, 11656)), $mul.ref(1112, 1));
    goto corral_source_split_1936;

  corral_source_split_1936:
    assume {:verifier.code 0} true;
    goto corral_source_split_1937;

  corral_source_split_1937:
    assume {:verifier.code 0} true;
    $p29 := $p27;
    goto $bb10;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i11 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;
}



const note_to_freq: ref;

axiom note_to_freq == $sub.ref(0, 85125);

procedure note_to_freq($i0: i32) returns ($r: i32);
  free requires assertsPassed;



implementation note_to_freq($i0: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 282} {:cexpr "note_to_freq:arg:arg0"} boogie_si_record_i32($i0);
    goto corral_source_split_2069;

  corral_source_split_2069:
    assume {:verifier.code 1} true;
    call {:si_unique_call 283} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 284} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_2070;

  corral_source_split_2070:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const calc_vol: ref;

axiom calc_vol == $sub.ref(0, 86157);

procedure calc_vol($p0: ref, $i1: i32, $i2: i32);
  free requires assertsPassed;
  modifies $M.5;



implementation calc_vol($p0: ref, $i1: i32, $i2: i32)
{
  var $i3: i8;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i1;
  var $i12: i64;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $i26: i32;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 285} {:cexpr "calc_vol:arg:volume"} boogie_si_record_i32($i1);
    call {:si_unique_call 286} {:cexpr "calc_vol:arg:main_vol"} boogie_si_record_i32($i2);
    goto corral_source_split_2072;

  corral_source_split_2072:
    assume {:verifier.code 0} true;
    $i3 := $load.i8($M.5, $p0);
    goto corral_source_split_2073;

  corral_source_split_2073:
    assume {:verifier.code 0} true;
    $i4 := $zext.i8.i32($i3);
    goto corral_source_split_2074;

  corral_source_split_2074:
    assume {:verifier.code 0} true;
    $i5 := $xor.i32($i4, $sub.i32(0, 1));
    goto corral_source_split_2075;

  corral_source_split_2075:
    assume {:verifier.code 0} true;
    $i6 := $and.i32($i5, 63);
    call {:si_unique_call 287} {:cexpr "level"} boogie_si_record_i32($i6);
    goto corral_source_split_2076;

  corral_source_split_2076:
    assume {:verifier.code 0} true;
    $i7 := $sgt.i32($i2, 127);
    goto corral_source_split_2077;

  corral_source_split_2077:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    $i8 := $i2;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2081;

  corral_source_split_2081:
    assume {:verifier.code 0} true;
    $i9 := $mul.i32($i1, $i8);
    goto corral_source_split_2082;

  corral_source_split_2082:
    assume {:verifier.code 0} true;
    $i10 := $sdiv.i32($i9, 127);
    call {:si_unique_call 288} {:cexpr "volume"} boogie_si_record_i32($i10);
    goto corral_source_split_2083;

  corral_source_split_2083:
    assume {:verifier.code 0} true;
    $i11 := $ne.i32($i6, 0);
    goto corral_source_split_2084;

  corral_source_split_2084:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    $i17 := $i6;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_2093;

  corral_source_split_2093:
    assume {:verifier.code 0} true;
    $i18 := $sgt.i32($i17, 63);
    goto corral_source_split_2094;

  corral_source_split_2094:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i18 == 1);
    assume {:verifier.code 0} true;
    $i19 := $i17;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_2098;

  corral_source_split_2098:
    assume {:verifier.code 0} true;
    $i20 := $slt.i32($i19, 0);
    goto corral_source_split_2099;

  corral_source_split_2099:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i20 == 1);
    assume {:verifier.code 0} true;
    $i21 := $i19;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto corral_source_split_2103;

  corral_source_split_2103:
    assume {:verifier.code 0} true;
    $i22 := $load.i8($M.5, $p0);
    goto corral_source_split_2104;

  corral_source_split_2104:
    assume {:verifier.code 0} true;
    $i23 := $sext.i8.i32($i22);
    goto corral_source_split_2105;

  corral_source_split_2105:
    assume {:verifier.code 0} true;
    $i24 := $and.i32($i23, $sub.i32(0, 64));
    goto corral_source_split_2106;

  corral_source_split_2106:
    assume {:verifier.code 0} true;
    $i25 := $trunc.i32.i8($i21);
    goto corral_source_split_2107;

  corral_source_split_2107:
    assume {:verifier.code 0} true;
    $i26 := $sext.i8.i32($i25);
    goto corral_source_split_2108;

  corral_source_split_2108:
    assume {:verifier.code 0} true;
    $i27 := $xor.i32($i26, $sub.i32(0, 1));
    goto corral_source_split_2109;

  corral_source_split_2109:
    assume {:verifier.code 0} true;
    $i28 := $and.i32($i27, 63);
    goto corral_source_split_2110;

  corral_source_split_2110:
    assume {:verifier.code 0} true;
    $i29 := $or.i32($i24, $i28);
    goto corral_source_split_2111;

  corral_source_split_2111:
    assume {:verifier.code 0} true;
    $i30 := $trunc.i32.i8($i29);
    goto corral_source_split_2112;

  corral_source_split_2112:
    assume {:verifier.code 0} true;
    $M.5 := $store.i8($M.5, $p0, $i30);
    goto corral_source_split_2113;

  corral_source_split_2113:
    assume {:verifier.code 0} true;
    return;

  $bb10:
    assume $i20 == 1;
    goto corral_source_split_2101;

  corral_source_split_2101:
    assume {:verifier.code 0} true;
    $i21 := 0;
    goto $bb12;

  $bb7:
    assume $i18 == 1;
    goto corral_source_split_2096;

  corral_source_split_2096:
    assume {:verifier.code 0} true;
    $i19 := 63;
    goto $bb9;

  $bb4:
    assume $i11 == 1;
    goto corral_source_split_2086;

  corral_source_split_2086:
    assume {:verifier.code 0} true;
    $i12 := $sext.i32.i64($i10);
    goto corral_source_split_2087;

  corral_source_split_2087:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref($i12, 1));
    goto corral_source_split_2088;

  corral_source_split_2088:
    assume {:verifier.code 0} true;
    $i14 := $load.i8($M.6, $p13);
    goto corral_source_split_2089;

  corral_source_split_2089:
    assume {:verifier.code 0} true;
    $i15 := $sext.i8.i32($i14);
    goto corral_source_split_2090;

  corral_source_split_2090:
    assume {:verifier.code 0} true;
    $i16 := $add.i32($i15, $i6);
    call {:si_unique_call 289} {:cexpr "level"} boogie_si_record_i32($i16);
    goto corral_source_split_2091;

  corral_source_split_2091:
    assume {:verifier.code 0} true;
    $i17 := $i16;
    goto $bb6;

  $bb1:
    assume $i7 == 1;
    goto corral_source_split_2079;

  corral_source_split_2079:
    assume {:verifier.code 0} true;
    $i8 := 127;
    goto $bb3;
}



const copy_to_user: ref;

axiom copy_to_user == $sub.ref(0, 87189);

procedure copy_to_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies assertsPassed;



implementation copy_to_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 290} {:cexpr "copy_to_user:arg:size"} boogie_si_record_i32($i2);
    goto corral_source_split_2115;

  corral_source_split_2115:
    assume {:verifier.code 0} true;
    call {:si_unique_call 291} might_fault();
    goto corral_source_split_2116;

  corral_source_split_2116:
    assume {:verifier.code 0} true;
    call {:si_unique_call 292} $i3 := ldv__copy_to_user_2($p0, $p1, $i2);
    goto SeqInstr_28, SeqInstr_29;

  SeqInstr_29:
    assume assertsPassed;
    goto SeqInstr_30;

  SeqInstr_30:
    call {:si_unique_call 293} {:cexpr "tmp"} boogie_si_record_i64($i3);
    goto corral_source_split_2117;

  corral_source_split_2117:
    assume {:verifier.code 0} true;
    $i4 := $trunc.i64.i32($i3);
    goto corral_source_split_2118;

  corral_source_split_2118:
    assume {:verifier.code 0} true;
    $r := $i4;
    return;

  SeqInstr_28:
    assume !assertsPassed;
    return;
}



const enter_4op_mode: ref;

axiom enter_4op_mode == $sub.ref(0, 88221);

procedure enter_4op_mode();
  free requires assertsPassed;
  modifies $M.7, $M.0, $M.2, $CurrAddr;



implementation enter_4op_mode()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $p42: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $p57: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $p67: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i32;
  var $p77: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i32;
  var $p82: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 294} $p0 := $alloc($mul.ref(72, $zext.i32.i64(1)));
    goto corral_source_split_2120;

  corral_source_split_2120:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 4));
    goto corral_source_split_2121;

  corral_source_split_2121:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p1, 0);
    goto corral_source_split_2122;

  corral_source_split_2122:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(1, 4));
    goto corral_source_split_2123;

  corral_source_split_2123:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p2, 1);
    goto corral_source_split_2124;

  corral_source_split_2124:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(2, 4));
    goto corral_source_split_2125;

  corral_source_split_2125:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p3, 2);
    goto corral_source_split_2126;

  corral_source_split_2126:
    assume {:verifier.code 0} true;
    $p4 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(3, 4));
    goto corral_source_split_2127;

  corral_source_split_2127:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p4, 9);
    goto corral_source_split_2128;

  corral_source_split_2128:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(4, 4));
    goto corral_source_split_2129;

  corral_source_split_2129:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p5, 10);
    goto corral_source_split_2130;

  corral_source_split_2130:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(5, 4));
    goto corral_source_split_2131;

  corral_source_split_2131:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p6, 11);
    goto corral_source_split_2132;

  corral_source_split_2132:
    assume {:verifier.code 0} true;
    $p7 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(6, 4));
    goto corral_source_split_2133;

  corral_source_split_2133:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p7, 6);
    goto corral_source_split_2134;

  corral_source_split_2134:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(7, 4));
    goto corral_source_split_2135;

  corral_source_split_2135:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p8, 7);
    goto corral_source_split_2136;

  corral_source_split_2136:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(8, 4));
    goto corral_source_split_2137;

  corral_source_split_2137:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p9, 8);
    goto corral_source_split_2138;

  corral_source_split_2138:
    assume {:verifier.code 0} true;
    $p10 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(9, 4));
    goto corral_source_split_2139;

  corral_source_split_2139:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p10, 15);
    goto corral_source_split_2140;

  corral_source_split_2140:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(10, 4));
    goto corral_source_split_2141;

  corral_source_split_2141:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p11, 16);
    goto corral_source_split_2142;

  corral_source_split_2142:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(11, 4));
    goto corral_source_split_2143;

  corral_source_split_2143:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p12, 17);
    goto corral_source_split_2144;

  corral_source_split_2144:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(12, 4));
    goto corral_source_split_2146;

  corral_source_split_2146:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p13, 0);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p85 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(13, 4));
    goto corral_source_split_2148;

  corral_source_split_2148:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p85, 0);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(14, 4));
    goto corral_source_split_2254;

  corral_source_split_2254:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p86, 0);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $p87 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(15, 4));
    goto corral_source_split_2256;

  corral_source_split_2256:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p87, 0);
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    $p88 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(16, 4));
    goto corral_source_split_2258;

  corral_source_split_2258:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p88, 0);
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $p89 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(17, 4));
    goto corral_source_split_2260;

  corral_source_split_2260:
    assume {:verifier.code 0} true;
    $M.7 := $store.i32($M.7, $p89, 0);
    goto corral_source_split_2261;

  corral_source_split_2261:
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $p14 := $M.1;
    goto corral_source_split_2150;

  corral_source_split_2150:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($p14, $mul.ref(0, 11656)), $mul.ref(11644, 1));
    goto corral_source_split_2151;

  corral_source_split_2151:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p15, 63);
    goto corral_source_split_2152;

  corral_source_split_2152:
    assume {:verifier.code 0} true;
    $p16 := $M.1;
    goto corral_source_split_2153;

  corral_source_split_2153:
    assume {:verifier.code 0} true;
    $p17 := $add.ref($add.ref($p16, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_2154;

  corral_source_split_2154:
    assume {:verifier.code 0} true;
    $i18 := $load.i32($M.0, $p17);
    goto corral_source_split_2155;

  corral_source_split_2155:
    assume {:verifier.code 0} true;
    call {:si_unique_call 295} opl3_command($i18, 4, 63);
    goto corral_source_split_2156;

  corral_source_split_2156:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(1, 1)), 4);
    goto corral_source_split_2158;

  corral_source_split_2158:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(1, 1)), 4);
    goto corral_source_split_2160;

  corral_source_split_2160:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(1, 1)), 4);
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(1, 1)), 0);
    goto corral_source_split_2162;

  corral_source_split_2162:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(1, 1)), 0);
    goto corral_source_split_2164;

  corral_source_split_2164:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(1, 1)), 0);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(1, 1)), 4);
    goto corral_source_split_2166;

  corral_source_split_2166:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(1, 1)), 4);
    goto corral_source_split_2168;

  corral_source_split_2168:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(1, 1)), 4);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(1, 1)), 0);
    goto corral_source_split_2170;

  corral_source_split_2170:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(1, 1)), 0);
    goto corral_source_split_2172;

  corral_source_split_2172:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(1, 1)), 0);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(0, 4));
    goto corral_source_split_2174;

  corral_source_split_2174:
    assume {:verifier.code 0} true;
    $i20 := $load.i32($M.7, $p19);
    goto corral_source_split_2175;

  corral_source_split_2175:
    assume {:verifier.code 0} true;
    $p21 := $M.1;
    goto corral_source_split_2176;

  corral_source_split_2176:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($add.ref($p21, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(0, 4));
    goto corral_source_split_2177;

  corral_source_split_2177:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p23, $i20);
    goto corral_source_split_2178;

  corral_source_split_2178:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $p30 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(1, 4));
    goto corral_source_split_2180;

  corral_source_split_2180:
    assume {:verifier.code 0} true;
    $i31 := $load.i32($M.7, $p30);
    goto corral_source_split_2181;

  corral_source_split_2181:
    assume {:verifier.code 0} true;
    $p32 := $M.1;
    goto corral_source_split_2182;

  corral_source_split_2182:
    assume {:verifier.code 0} true;
    $p34 := $add.ref($add.ref($add.ref($p32, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(1, 4));
    goto corral_source_split_2183;

  corral_source_split_2183:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p34, $i31);
    goto corral_source_split_2184;

  corral_source_split_2184:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $p35 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(2, 4));
    goto corral_source_split_2195;

  corral_source_split_2195:
    assume {:verifier.code 0} true;
    $i36 := $load.i32($M.7, $p35);
    goto corral_source_split_2196;

  corral_source_split_2196:
    assume {:verifier.code 0} true;
    $p37 := $M.1;
    goto corral_source_split_2197;

  corral_source_split_2197:
    assume {:verifier.code 0} true;
    $p39 := $add.ref($add.ref($add.ref($p37, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(2, 4));
    goto corral_source_split_2198;

  corral_source_split_2198:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p39, $i36);
    goto corral_source_split_2199;

  corral_source_split_2199:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(3, 4));
    goto corral_source_split_2201;

  corral_source_split_2201:
    assume {:verifier.code 0} true;
    $i41 := $load.i32($M.7, $p40);
    goto corral_source_split_2202;

  corral_source_split_2202:
    assume {:verifier.code 0} true;
    $p42 := $M.1;
    goto corral_source_split_2203;

  corral_source_split_2203:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($add.ref($p42, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(3, 4));
    goto corral_source_split_2204;

  corral_source_split_2204:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p44, $i41);
    goto corral_source_split_2205;

  corral_source_split_2205:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $p45 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(4, 4));
    goto corral_source_split_2207;

  corral_source_split_2207:
    assume {:verifier.code 0} true;
    $i46 := $load.i32($M.7, $p45);
    goto corral_source_split_2208;

  corral_source_split_2208:
    assume {:verifier.code 0} true;
    $p47 := $M.1;
    goto corral_source_split_2209;

  corral_source_split_2209:
    assume {:verifier.code 0} true;
    $p49 := $add.ref($add.ref($add.ref($p47, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(4, 4));
    goto corral_source_split_2210;

  corral_source_split_2210:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p49, $i46);
    goto corral_source_split_2211;

  corral_source_split_2211:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $p50 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(5, 4));
    goto corral_source_split_2213;

  corral_source_split_2213:
    assume {:verifier.code 0} true;
    $i51 := $load.i32($M.7, $p50);
    goto corral_source_split_2214;

  corral_source_split_2214:
    assume {:verifier.code 0} true;
    $p52 := $M.1;
    goto corral_source_split_2215;

  corral_source_split_2215:
    assume {:verifier.code 0} true;
    $p54 := $add.ref($add.ref($add.ref($p52, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(5, 4));
    goto corral_source_split_2216;

  corral_source_split_2216:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p54, $i51);
    goto corral_source_split_2217;

  corral_source_split_2217:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $p55 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(6, 4));
    goto corral_source_split_2219;

  corral_source_split_2219:
    assume {:verifier.code 0} true;
    $i56 := $load.i32($M.7, $p55);
    goto corral_source_split_2220;

  corral_source_split_2220:
    assume {:verifier.code 0} true;
    $p57 := $M.1;
    goto corral_source_split_2221;

  corral_source_split_2221:
    assume {:verifier.code 0} true;
    $p59 := $add.ref($add.ref($add.ref($p57, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(6, 4));
    goto corral_source_split_2222;

  corral_source_split_2222:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p59, $i56);
    goto corral_source_split_2223;

  corral_source_split_2223:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(7, 4));
    goto corral_source_split_2225;

  corral_source_split_2225:
    assume {:verifier.code 0} true;
    $i61 := $load.i32($M.7, $p60);
    goto corral_source_split_2226;

  corral_source_split_2226:
    assume {:verifier.code 0} true;
    $p62 := $M.1;
    goto corral_source_split_2227;

  corral_source_split_2227:
    assume {:verifier.code 0} true;
    $p64 := $add.ref($add.ref($add.ref($p62, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(7, 4));
    goto corral_source_split_2228;

  corral_source_split_2228:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p64, $i61);
    goto corral_source_split_2229;

  corral_source_split_2229:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $p65 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(8, 4));
    goto corral_source_split_2231;

  corral_source_split_2231:
    assume {:verifier.code 0} true;
    $i66 := $load.i32($M.7, $p65);
    goto corral_source_split_2232;

  corral_source_split_2232:
    assume {:verifier.code 0} true;
    $p67 := $M.1;
    goto corral_source_split_2233;

  corral_source_split_2233:
    assume {:verifier.code 0} true;
    $p69 := $add.ref($add.ref($add.ref($p67, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(8, 4));
    goto corral_source_split_2234;

  corral_source_split_2234:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p69, $i66);
    goto corral_source_split_2235;

  corral_source_split_2235:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $p70 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(9, 4));
    goto corral_source_split_2237;

  corral_source_split_2237:
    assume {:verifier.code 0} true;
    $i71 := $load.i32($M.7, $p70);
    goto corral_source_split_2238;

  corral_source_split_2238:
    assume {:verifier.code 0} true;
    $p72 := $M.1;
    goto corral_source_split_2239;

  corral_source_split_2239:
    assume {:verifier.code 0} true;
    $p74 := $add.ref($add.ref($add.ref($p72, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(9, 4));
    goto corral_source_split_2240;

  corral_source_split_2240:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p74, $i71);
    goto corral_source_split_2241;

  corral_source_split_2241:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $p75 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(10, 4));
    goto corral_source_split_2243;

  corral_source_split_2243:
    assume {:verifier.code 0} true;
    $i76 := $load.i32($M.7, $p75);
    goto corral_source_split_2244;

  corral_source_split_2244:
    assume {:verifier.code 0} true;
    $p77 := $M.1;
    goto corral_source_split_2245;

  corral_source_split_2245:
    assume {:verifier.code 0} true;
    $p79 := $add.ref($add.ref($add.ref($p77, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(10, 4));
    goto corral_source_split_2246;

  corral_source_split_2246:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p79, $i76);
    goto corral_source_split_2247;

  corral_source_split_2247:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $p80 := $add.ref($add.ref($p0, $mul.ref(0, 72)), $mul.ref(11, 4));
    goto corral_source_split_2249;

  corral_source_split_2249:
    assume {:verifier.code 0} true;
    $i81 := $load.i32($M.7, $p80);
    goto corral_source_split_2250;

  corral_source_split_2250:
    assume {:verifier.code 0} true;
    $p82 := $M.1;
    goto corral_source_split_2251;

  corral_source_split_2251:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($add.ref($add.ref($p82, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(11, 4));
    goto corral_source_split_2252;

  corral_source_split_2252:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p84, $i81);
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $p24 := $M.1;
    goto corral_source_split_2186;

  corral_source_split_2186:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p24, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_2187;

  corral_source_split_2187:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p25, 12);
    goto corral_source_split_2188;

  corral_source_split_2188:
    assume {:verifier.code 0} true;
    $p26 := $M.1;
    goto corral_source_split_2189;

  corral_source_split_2189:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($p26, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_2190;

  corral_source_split_2190:
    assume {:verifier.code 0} true;
    $p28 := $load.ref($M.0, $p27);
    goto corral_source_split_2191;

  corral_source_split_2191:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($add.ref($p28, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_2192;

  corral_source_split_2192:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p29, 12);
    goto corral_source_split_2193;

  corral_source_split_2193:
    assume {:verifier.code 0} true;
    return;
}



const ldv__copy_to_user_2: ref;

axiom ldv__copy_to_user_2 == $sub.ref(0, 89253);

procedure ldv__copy_to_user_2($p0: ref, $p1: ref, $i2: i32) returns ($r: i64);
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv__copy_to_user_2($p0: ref, $p1: ref, $i2: i32) returns ($r: i64)
{
  var $i3: i64;
  var $i4: i64;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 296} {:cexpr "ldv__copy_to_user_2:arg:ldv_func_arg3"} boogie_si_record_i32($i2);
    goto corral_source_split_2263;

  corral_source_split_2263:
    assume {:verifier.code 0} true;
    $i3 := $zext.i32.i64($i2);
    goto corral_source_split_2264;

  corral_source_split_2264:
    assume {:verifier.code 0} true;
    call {:si_unique_call 297} ldv_check_len($i3);
    goto SeqInstr_31, SeqInstr_32;

  SeqInstr_32:
    assume assertsPassed;
    goto SeqInstr_33;

  SeqInstr_33:
    goto corral_source_split_2265;

  corral_source_split_2265:
    assume {:verifier.code 0} true;
    call {:si_unique_call 298} $i4 := _copy_to_user($p0, $p1, $i2);
    call {:si_unique_call 299} {:cexpr "tmp"} boogie_si_record_i64($i4);
    goto corral_source_split_2266;

  corral_source_split_2266:
    assume {:verifier.code 0} true;
    $r := $i4;
    return;

  SeqInstr_31:
    assume !assertsPassed;
    return;
}



const _copy_to_user: ref;

axiom _copy_to_user == $sub.ref(0, 90285);

procedure _copy_to_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i64);
  free requires assertsPassed;



implementation _copy_to_user($p0: ref, $p1: ref, $i2: i32) returns ($r: i64)
{
  var $i3: i64;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 300} {:cexpr "_copy_to_user:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_2268;

  corral_source_split_2268:
    assume {:verifier.code 1} true;
    call {:si_unique_call 301} $i3 := __VERIFIER_nondet_ulong();
    call {:si_unique_call 302} {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i3);
    goto corral_source_split_2269;

  corral_source_split_2269:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;
}



const ldv_init_zalloc: ref;

axiom ldv_init_zalloc == $sub.ref(0, 91317);

procedure ldv_init_zalloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.0, $CurrAddr;



implementation ldv_init_zalloc($i0: i64) returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 303} {:cexpr "ldv_init_zalloc:arg:size"} boogie_si_record_i64($i0);
    goto corral_source_split_2271;

  corral_source_split_2271:
    assume {:verifier.code 0} true;
    call {:si_unique_call 304} $p1 := calloc(1, $i0);
    goto corral_source_split_2272;

  corral_source_split_2272:
    assume {:verifier.code 1} true;
    $i2 := $p2i.ref.i64($p1);
    goto corral_source_split_2273;

  corral_source_split_2273:
    assume {:verifier.code 1} true;
    $i3 := $ne.i64($i2, 0);
    goto corral_source_split_2274;

  corral_source_split_2274:
    assume {:verifier.code 1} true;
    $i4 := $zext.i1.i32($i3);
    goto corral_source_split_2275;

  corral_source_split_2275:
    assume {:verifier.code 1} true;
    call {:si_unique_call 305} __VERIFIER_assume($i4);
    goto corral_source_split_2276;

  corral_source_split_2276:
    assume {:verifier.code 0} true;
    $r := $p1;
    return;
}



const ldv_memset: ref;

axiom ldv_memset == $sub.ref(0, 92349);

procedure ldv_memset($p0: ref, $i1: i32, $i2: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.8;



implementation ldv_memset($p0: ref, $i1: i32, $i2: i64) returns ($r: ref)
{
  var $i3: i8;
  var cmdloc_dummy_var_6: [ref]i8;
  var cmdloc_dummy_var_7: [ref]i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 306} {:cexpr "ldv_memset:arg:c"} boogie_si_record_i32($i1);
    call {:si_unique_call 307} {:cexpr "ldv_memset:arg:n"} boogie_si_record_i64($i2);
    goto corral_source_split_2278;

  corral_source_split_2278:
    assume {:verifier.code 0} true;
    $i3 := $trunc.i32.i8($i1);
    goto corral_source_split_2279;

  corral_source_split_2279:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_6 := $M.8;
    call {:si_unique_call 308} cmdloc_dummy_var_7 := $memset.i8(cmdloc_dummy_var_6, $p0, $i3, $i2, $zext.i32.i64(1), 0 == 1);
    $M.8 := cmdloc_dummy_var_7;
    goto corral_source_split_2280;

  corral_source_split_2280:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const llvm.memset.p0i8.i64: ref;

axiom llvm.memset.p0i8.i64 == $sub.ref(0, 93381);

procedure llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);



const main: ref;

axiom main == $sub.ref(0, 94413);

procedure main() returns ($r: i32);
  free requires assertsPassed;
  modifies $M.8, $M.9, $M.10, $M.11, $M.0, $M.12, $M.2, $M.13, $M.16, $M.15, $M.14, $M.6, $M.1, $CurrAddr, $M.7, $M.5, $M.3, $M.4, assertsPassed;



implementation main() returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p46: ref;
  var $p48: ref;
  var $i50: i32;
  var $p51: ref;
  var $p53: ref;
  var $p55: ref;
  var $p57: ref;
  var $p59: ref;
  var $p61: ref;
  var $p63: ref;
  var $p65: ref;
  var $p67: ref;
  var $p69: ref;
  var $p71: ref;
  var $i73: i32;
  var $p74: ref;
  var $i76: i32;
  var $p77: ref;
  var $p79: ref;
  var $p81: ref;
  var $p83: ref;
  var $p85: ref;
  var $p87: ref;
  var $p89: ref;
  var $p91: ref;
  var $p93: ref;
  var $p95: ref;
  var $p97: ref;
  var $p99: ref;
  var $p101: ref;
  var $i103: i32;
  var $p104: ref;
  var $i106: i32;
  var $p107: ref;
  var $p109: ref;
  var $p111: ref;
  var $p113: ref;
  var $p115: ref;
  var $p117: ref;
  var $p119: ref;
  var $p121: ref;
  var $p123: ref;
  var $p125: ref;
  var $i127: i32;
  var $i128: i1;
  var $i129: i1;
  var $i130: i1;
  var $i131: i32;
  var $i132: i1;
  var $i133: i32;
  var $i134: i1;
  var $i135: i1;
  var $i136: i1;
  var $i137: i1;
  var $i138: i1;
  var $i139: i1;
  var $i140: i1;
  var $i141: i1;
  var $i142: i1;
  var $i143: i1;
  var $i144: i1;
  var $i145: i1;
  var $i146: i1;
  var $i147: i1;
  var $i148: i1;
  var $i149: i1;
  var $i150: i1;
  var $i151: i32;
  var $i152: i1;
  var $i153: i32;
  var $i154: i32;
  var $i155: i32;
  var $i157: i32;
  var $i158: i1;
  var $i159: i32;
  var $i160: i32;
  var $i161: i32;
  var $i163: i32;
  var $i164: i1;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i32;
  var $i170: i32;
  var $i171: i1;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i32;
  var $i177: i32;
  var $i178: i1;
  var $i179: i32;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i1;
  var $i184: i32;
  var $i185: i32;
  var $i186: i32;
  var $i187: i1;
  var $i188: i32;
  var $i189: i32;
  var $i190: i32;
  var $i191: i32;
  var $i192: i1;
  var $i193: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i1;
  var $i198: i32;
  var $i199: i32;
  var $i201: i32;
  var $i202: i1;
  var $i203: i32;
  var $i204: i32;
  var $i206: i32;
  var $i207: i1;
  var $i208: i32;
  var $i209: i32;
  var $i210: i32;
  var $i211: i32;
  var $i212: i1;
  var $i213: i32;
  var $i214: i32;
  var $i215: i32;
  var $i216: i32;
  var $i217: i1;
  var $i218: i32;
  var $i219: i32;
  var $i220: i32;
  var $i221: i32;
  var $i223: i32;
  var $i224: i1;
  var $i225: i32;
  var $i226: i32;
  var $i227: i32;
  var $i228: i32;
  var $i230: i32;
  var $i231: i1;
  var $i232: i32;
  var $i233: i32;
  var $i234: i1;
  var $i235: i32;
  var $i236: i32;
  var $i237: i1;
  var $i238: i32;
  var $i239: i32;
  var $i240: i1;
  var $i241: i32;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i245: i32;
  var $i246: i32;
  var $i248: i32;
  var $i249: i1;
  var $i250: i32;
  var $i251: i32;
  var $i252: i32;
  var $i254: i32;
  var $i255: i1;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i260: i32;
  var $i261: i32;
  var $i262: i32;
  var $i263: i32;
  var $i264: i1;
  var $i265: i32;
  var $i266: i32;
  var $i267: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i1;
  var $i271: i32;
  var $i272: i32;
  var $i273: i32;
  var $i274: i32;
  var $i275: i1;
  var $i276: i32;
  var $i277: i32;
  var $i278: i32;
  var $i279: i32;
  var $i280: i1;
  var $i282: i32;
  var $i283: i1;
  var $i285: i32;
  var $i286: i1;
  var $i287: i32;
  var $i288: i32;
  var $i289: i32;
  var $i290: i1;
  var $i291: i32;
  var $i292: i32;
  var $i293: i32;
  var $i294: i1;
  var $i295: i32;
  var $i296: i32;
  var $i297: i32;
  var $i298: i32;
  var $i299: i1;
  var $i300: i32;
  var $i301: i32;
  var $i302: i32;
  var $i303: i32;
  var $i304: i1;
  var $i305: i32;
  var $i306: i1;
  var $i307: i1;
  var $i308: i1;
  var $i309: i32;
  var $i310: i1;
  var $i311: i32;
  var $i312: i1;
  var $i313: i32;
  var $i314: i1;
  var $i315: i32;
  var $i316: i32;
  var $i317: i1;
  var $i318: i32;
  var $i319: i1;
  var vslice_dummy_var_23: ref;
  var vslice_dummy_var_24: ref;
  var vslice_dummy_var_25: ref;
  var vslice_dummy_var_26: ref;
  var vslice_dummy_var_27: ref;
  var vslice_dummy_var_28: ref;
  var vslice_dummy_var_29: ref;
  var vslice_dummy_var_30: ref;
  var vslice_dummy_var_31: ref;
  var vslice_dummy_var_32: ref;
  var vslice_dummy_var_33: ref;
  var vslice_dummy_var_34: ref;
  var vslice_dummy_var_35: ref;
  var vslice_dummy_var_36: ref;
  var vslice_dummy_var_37: ref;
  var vslice_dummy_var_38: ref;
  var vslice_dummy_var_39: ref;
  var vslice_dummy_var_40: ref;
  var vslice_dummy_var_41: ref;
  var vslice_dummy_var_42: ref;
  var vslice_dummy_var_43: ref;
  var vslice_dummy_var_44: ref;
  var vslice_dummy_var_45: ref;
  var vslice_dummy_var_46: ref;
  var vslice_dummy_var_47: ref;
  var vslice_dummy_var_48: ref;
  var vslice_dummy_var_49: ref;
  var vslice_dummy_var_50: ref;
  var vslice_dummy_var_51: ref;
  var vslice_dummy_var_52: ref;
  var vslice_dummy_var_53: ref;
  var vslice_dummy_var_54: ref;
  var vslice_dummy_var_55: ref;
  var vslice_dummy_var_56: ref;
  var vslice_dummy_var_57: ref;
  var vslice_dummy_var_58: ref;
  var vslice_dummy_var_59: ref;
  var vslice_dummy_var_60: ref;
  var vslice_dummy_var_61: ref;
  var vslice_dummy_var_62: i32;
  var vslice_dummy_var_63: i32;
  var vslice_dummy_var_64: i32;
  var vslice_dummy_var_65: i32;
  var vslice_dummy_var_66: i32;
  var vslice_dummy_var_67: i32;
  var vslice_dummy_var_68: i32;
  var vslice_dummy_var_69: i32;
  var vslice_dummy_var_70: i32;
  var vslice_dummy_var_71: i32;
  var vslice_dummy_var_72: i32;
  var vslice_dummy_var_73: i32;

  $bb0:
    call {:si_unique_call 309} $initialize();
    goto corral_source_split_2282;

  corral_source_split_2282:
    assume {:verifier.code 0} true;
    call {:si_unique_call 310} {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
    assume {:verifier.code 0} true;
    call {:si_unique_call 311} $p0 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 312} $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 313} $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 314} $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 315} $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 316} $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 317} $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 318} $p7 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 319} $p8 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 320} $p9 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 321} $p10 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 322} $p11 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 323} $p12 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 324} $p13 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 325} $p14 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 326} $p15 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 327} $p16 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 328} $p17 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 329} $p18 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 330} $p19 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 331} $p20 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 332} $p21 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 333} $p22 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 334} $p23 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 335} $p24 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 336} $p25 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 337} $p26 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 338} $p27 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 339} $p28 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 340} $p29 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 341} $p30 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 342} $p31 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 343} $p32 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 344} $p33 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 345} $p34 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 346} $p35 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 347} $p36 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 348} $p37 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 349} $p38 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    goto corral_source_split_2283;

  corral_source_split_2283:
    assume {:verifier.code 0} true;
    call {:si_unique_call 350} $p39 := ldv_init_zalloc(1);
    goto corral_source_split_2284;

  corral_source_split_2284:
    assume {:verifier.code 0} true;
    call {:si_unique_call 351} $p40 := ldv_init_zalloc(208);
    goto corral_source_split_2285;

  corral_source_split_2285:
    assume {:verifier.code 0} true;
    $p41 := $bitcast.ref.ref($p40);
    goto corral_source_split_2286;

  corral_source_split_2286:
    assume {:verifier.code 0} true;
    call {:si_unique_call 352} $p42 := ldv_init_zalloc(1);
    goto corral_source_split_2287;

  corral_source_split_2287:
    assume {:verifier.code 0} true;
    call {:si_unique_call 353} $p43 := ldv_init_zalloc(1);
    goto corral_source_split_2288;

  corral_source_split_2288:
    assume {:verifier.code 0} true;
    call {:si_unique_call 354} ldv_initialize();
    goto corral_source_split_2289;

  corral_source_split_2289:
    assume {:verifier.code 0} true;
    $p44 := $bitcast.ref.ref($p0);
    goto corral_source_split_2290;

  corral_source_split_2290:
    assume {:verifier.code 0} true;
    call {:si_unique_call 355} vslice_dummy_var_23 := ldv_memset($p44, 0, 4);
    goto corral_source_split_2291;

  corral_source_split_2291:
    assume {:verifier.code 0} true;
    $p46 := $bitcast.ref.ref($p1);
    goto corral_source_split_2292;

  corral_source_split_2292:
    assume {:verifier.code 0} true;
    call {:si_unique_call 356} vslice_dummy_var_24 := ldv_memset($p46, 0, 4);
    goto corral_source_split_2293;

  corral_source_split_2293:
    assume {:verifier.code 0} true;
    $p48 := $bitcast.ref.ref($p2);
    goto corral_source_split_2294;

  corral_source_split_2294:
    assume {:verifier.code 0} true;
    call {:si_unique_call 357} vslice_dummy_var_25 := ldv_memset($p48, 0, 4);
    goto corral_source_split_2295;

  corral_source_split_2295:
    assume {:verifier.code 1} true;
    call {:si_unique_call 358} $i50 := __VERIFIER_nondet_int();
    call {:si_unique_call 359} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i50);
    call {:si_unique_call 360} {:cexpr "ldvarg7"} boogie_si_record_i32($i50);
    goto corral_source_split_2296;

  corral_source_split_2296:
    assume {:verifier.code 0} true;
    $p51 := $bitcast.ref.ref($p3);
    goto corral_source_split_2297;

  corral_source_split_2297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 361} vslice_dummy_var_26 := ldv_memset($p51, 0, 4);
    goto corral_source_split_2298;

  corral_source_split_2298:
    assume {:verifier.code 0} true;
    $p53 := $bitcast.ref.ref($p4);
    goto corral_source_split_2299;

  corral_source_split_2299:
    assume {:verifier.code 0} true;
    call {:si_unique_call 362} vslice_dummy_var_27 := ldv_memset($p53, 0, 4);
    goto corral_source_split_2300;

  corral_source_split_2300:
    assume {:verifier.code 0} true;
    $p55 := $bitcast.ref.ref($p5);
    goto corral_source_split_2301;

  corral_source_split_2301:
    assume {:verifier.code 0} true;
    call {:si_unique_call 363} vslice_dummy_var_28 := ldv_memset($p55, 0, 4);
    goto corral_source_split_2302;

  corral_source_split_2302:
    assume {:verifier.code 0} true;
    $p57 := $bitcast.ref.ref($p6);
    goto corral_source_split_2303;

  corral_source_split_2303:
    assume {:verifier.code 0} true;
    call {:si_unique_call 364} vslice_dummy_var_29 := ldv_memset($p57, 0, 4);
    goto corral_source_split_2304;

  corral_source_split_2304:
    assume {:verifier.code 0} true;
    $p59 := $bitcast.ref.ref($p7);
    goto corral_source_split_2305;

  corral_source_split_2305:
    assume {:verifier.code 0} true;
    call {:si_unique_call 365} vslice_dummy_var_30 := ldv_memset($p59, 0, 4);
    goto corral_source_split_2306;

  corral_source_split_2306:
    assume {:verifier.code 0} true;
    $p61 := $bitcast.ref.ref($p8);
    goto corral_source_split_2307;

  corral_source_split_2307:
    assume {:verifier.code 0} true;
    call {:si_unique_call 366} vslice_dummy_var_31 := ldv_memset($p61, 0, 4);
    goto corral_source_split_2308;

  corral_source_split_2308:
    assume {:verifier.code 0} true;
    $p63 := $bitcast.ref.ref($p9);
    goto corral_source_split_2309;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    call {:si_unique_call 367} vslice_dummy_var_32 := ldv_memset($p63, 0, 4);
    goto corral_source_split_2310;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    $p65 := $bitcast.ref.ref($p10);
    goto corral_source_split_2311;

  corral_source_split_2311:
    assume {:verifier.code 0} true;
    call {:si_unique_call 368} vslice_dummy_var_33 := ldv_memset($p65, 0, 4);
    goto corral_source_split_2312;

  corral_source_split_2312:
    assume {:verifier.code 0} true;
    $p67 := $bitcast.ref.ref($p11);
    goto corral_source_split_2313;

  corral_source_split_2313:
    assume {:verifier.code 0} true;
    call {:si_unique_call 369} vslice_dummy_var_34 := ldv_memset($p67, 0, 4);
    goto corral_source_split_2314;

  corral_source_split_2314:
    assume {:verifier.code 0} true;
    $p69 := $bitcast.ref.ref($p12);
    goto corral_source_split_2315;

  corral_source_split_2315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 370} vslice_dummy_var_35 := ldv_memset($p69, 0, 4);
    goto corral_source_split_2316;

  corral_source_split_2316:
    assume {:verifier.code 0} true;
    $p71 := $bitcast.ref.ref($p13);
    goto corral_source_split_2317;

  corral_source_split_2317:
    assume {:verifier.code 0} true;
    call {:si_unique_call 371} vslice_dummy_var_36 := ldv_memset($p71, 0, 4);
    goto corral_source_split_2318;

  corral_source_split_2318:
    assume {:verifier.code 1} true;
    call {:si_unique_call 372} $i73 := __VERIFIER_nondet_int();
    call {:si_unique_call 373} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i73);
    call {:si_unique_call 374} {:cexpr "ldvarg5"} boogie_si_record_i32($i73);
    goto corral_source_split_2319;

  corral_source_split_2319:
    assume {:verifier.code 0} true;
    $p74 := $bitcast.ref.ref($p14);
    goto corral_source_split_2320;

  corral_source_split_2320:
    assume {:verifier.code 0} true;
    call {:si_unique_call 375} vslice_dummy_var_37 := ldv_memset($p74, 0, 4);
    goto corral_source_split_2321;

  corral_source_split_2321:
    assume {:verifier.code 1} true;
    call {:si_unique_call 376} $i76 := __VERIFIER_nondet_int();
    call {:si_unique_call 377} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i76);
    call {:si_unique_call 378} {:cexpr "ldvarg6"} boogie_si_record_i32($i76);
    goto corral_source_split_2322;

  corral_source_split_2322:
    assume {:verifier.code 0} true;
    $p77 := $bitcast.ref.ref($p15);
    goto corral_source_split_2323;

  corral_source_split_2323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 379} vslice_dummy_var_38 := ldv_memset($p77, 0, 4);
    goto corral_source_split_2324;

  corral_source_split_2324:
    assume {:verifier.code 0} true;
    $p79 := $bitcast.ref.ref($p16);
    goto corral_source_split_2325;

  corral_source_split_2325:
    assume {:verifier.code 0} true;
    call {:si_unique_call 380} vslice_dummy_var_39 := ldv_memset($p79, 0, 4);
    goto corral_source_split_2326;

  corral_source_split_2326:
    assume {:verifier.code 0} true;
    $p81 := $bitcast.ref.ref($p17);
    goto corral_source_split_2327;

  corral_source_split_2327:
    assume {:verifier.code 0} true;
    call {:si_unique_call 381} vslice_dummy_var_40 := ldv_memset($p81, 0, 4);
    goto corral_source_split_2328;

  corral_source_split_2328:
    assume {:verifier.code 0} true;
    $p83 := $bitcast.ref.ref($p18);
    goto corral_source_split_2329;

  corral_source_split_2329:
    assume {:verifier.code 0} true;
    call {:si_unique_call 382} vslice_dummy_var_41 := ldv_memset($p83, 0, 4);
    goto corral_source_split_2330;

  corral_source_split_2330:
    assume {:verifier.code 0} true;
    $p85 := $bitcast.ref.ref($p19);
    goto corral_source_split_2331;

  corral_source_split_2331:
    assume {:verifier.code 0} true;
    call {:si_unique_call 383} vslice_dummy_var_42 := ldv_memset($p85, 0, 4);
    goto corral_source_split_2332;

  corral_source_split_2332:
    assume {:verifier.code 0} true;
    $p87 := $bitcast.ref.ref($p20);
    goto corral_source_split_2333;

  corral_source_split_2333:
    assume {:verifier.code 0} true;
    call {:si_unique_call 384} vslice_dummy_var_43 := ldv_memset($p87, 0, 4);
    goto corral_source_split_2334;

  corral_source_split_2334:
    assume {:verifier.code 0} true;
    $p89 := $bitcast.ref.ref($p21);
    goto corral_source_split_2335;

  corral_source_split_2335:
    assume {:verifier.code 0} true;
    call {:si_unique_call 385} vslice_dummy_var_44 := ldv_memset($p89, 0, 4);
    goto corral_source_split_2336;

  corral_source_split_2336:
    assume {:verifier.code 0} true;
    $p91 := $bitcast.ref.ref($p22);
    goto corral_source_split_2337;

  corral_source_split_2337:
    assume {:verifier.code 0} true;
    call {:si_unique_call 386} vslice_dummy_var_45 := ldv_memset($p91, 0, 4);
    goto corral_source_split_2338;

  corral_source_split_2338:
    assume {:verifier.code 0} true;
    $p93 := $bitcast.ref.ref($p23);
    goto corral_source_split_2339;

  corral_source_split_2339:
    assume {:verifier.code 0} true;
    call {:si_unique_call 387} vslice_dummy_var_46 := ldv_memset($p93, 0, 4);
    goto corral_source_split_2340;

  corral_source_split_2340:
    assume {:verifier.code 0} true;
    $p95 := $bitcast.ref.ref($p24);
    goto corral_source_split_2341;

  corral_source_split_2341:
    assume {:verifier.code 0} true;
    call {:si_unique_call 388} vslice_dummy_var_47 := ldv_memset($p95, 0, 4);
    goto corral_source_split_2342;

  corral_source_split_2342:
    assume {:verifier.code 0} true;
    $p97 := $bitcast.ref.ref($p25);
    goto corral_source_split_2343;

  corral_source_split_2343:
    assume {:verifier.code 0} true;
    call {:si_unique_call 389} vslice_dummy_var_48 := ldv_memset($p97, 0, 4);
    goto corral_source_split_2344;

  corral_source_split_2344:
    assume {:verifier.code 0} true;
    $p99 := $bitcast.ref.ref($p26);
    goto corral_source_split_2345;

  corral_source_split_2345:
    assume {:verifier.code 0} true;
    call {:si_unique_call 390} vslice_dummy_var_49 := ldv_memset($p99, 0, 4);
    goto corral_source_split_2346;

  corral_source_split_2346:
    assume {:verifier.code 0} true;
    $p101 := $bitcast.ref.ref($p27);
    goto corral_source_split_2347;

  corral_source_split_2347:
    assume {:verifier.code 0} true;
    call {:si_unique_call 391} vslice_dummy_var_50 := ldv_memset($p101, 0, 4);
    goto corral_source_split_2348;

  corral_source_split_2348:
    assume {:verifier.code 1} true;
    call {:si_unique_call 392} $i103 := __VERIFIER_nondet_int();
    call {:si_unique_call 393} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i103);
    call {:si_unique_call 394} {:cexpr "ldvarg10"} boogie_si_record_i32($i103);
    goto corral_source_split_2349;

  corral_source_split_2349:
    assume {:verifier.code 0} true;
    $p104 := $bitcast.ref.ref($p28);
    goto corral_source_split_2350;

  corral_source_split_2350:
    assume {:verifier.code 0} true;
    call {:si_unique_call 395} vslice_dummy_var_51 := ldv_memset($p104, 0, 4);
    goto corral_source_split_2351;

  corral_source_split_2351:
    assume {:verifier.code 1} true;
    call {:si_unique_call 396} $i106 := __VERIFIER_nondet_int();
    call {:si_unique_call 397} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i106);
    call {:si_unique_call 398} {:cexpr "ldvarg9"} boogie_si_record_i32($i106);
    goto corral_source_split_2352;

  corral_source_split_2352:
    assume {:verifier.code 0} true;
    $p107 := $bitcast.ref.ref($p29);
    goto corral_source_split_2353;

  corral_source_split_2353:
    assume {:verifier.code 0} true;
    call {:si_unique_call 399} vslice_dummy_var_52 := ldv_memset($p107, 0, 4);
    goto corral_source_split_2354;

  corral_source_split_2354:
    assume {:verifier.code 0} true;
    $p109 := $bitcast.ref.ref($p30);
    goto corral_source_split_2355;

  corral_source_split_2355:
    assume {:verifier.code 0} true;
    call {:si_unique_call 400} vslice_dummy_var_53 := ldv_memset($p109, 0, 4);
    goto corral_source_split_2356;

  corral_source_split_2356:
    assume {:verifier.code 0} true;
    $p111 := $bitcast.ref.ref($p31);
    goto corral_source_split_2357;

  corral_source_split_2357:
    assume {:verifier.code 0} true;
    call {:si_unique_call 401} vslice_dummy_var_54 := ldv_memset($p111, 0, 4);
    goto corral_source_split_2358;

  corral_source_split_2358:
    assume {:verifier.code 0} true;
    $p113 := $bitcast.ref.ref($p32);
    goto corral_source_split_2359;

  corral_source_split_2359:
    assume {:verifier.code 0} true;
    call {:si_unique_call 402} vslice_dummy_var_55 := ldv_memset($p113, 0, 4);
    goto corral_source_split_2360;

  corral_source_split_2360:
    assume {:verifier.code 0} true;
    $p115 := $bitcast.ref.ref($p33);
    goto corral_source_split_2361;

  corral_source_split_2361:
    assume {:verifier.code 0} true;
    call {:si_unique_call 403} vslice_dummy_var_56 := ldv_memset($p115, 0, 4);
    goto corral_source_split_2362;

  corral_source_split_2362:
    assume {:verifier.code 0} true;
    $p117 := $bitcast.ref.ref($p34);
    goto corral_source_split_2363;

  corral_source_split_2363:
    assume {:verifier.code 0} true;
    call {:si_unique_call 404} vslice_dummy_var_57 := ldv_memset($p117, 0, 4);
    goto corral_source_split_2364;

  corral_source_split_2364:
    assume {:verifier.code 0} true;
    $p119 := $bitcast.ref.ref($p35);
    goto corral_source_split_2365;

  corral_source_split_2365:
    assume {:verifier.code 0} true;
    call {:si_unique_call 405} vslice_dummy_var_58 := ldv_memset($p119, 0, 4);
    goto corral_source_split_2366;

  corral_source_split_2366:
    assume {:verifier.code 0} true;
    $p121 := $bitcast.ref.ref($p36);
    goto corral_source_split_2367;

  corral_source_split_2367:
    assume {:verifier.code 0} true;
    call {:si_unique_call 406} vslice_dummy_var_59 := ldv_memset($p121, 0, 4);
    goto corral_source_split_2368;

  corral_source_split_2368:
    assume {:verifier.code 0} true;
    $p123 := $bitcast.ref.ref($p37);
    goto corral_source_split_2369;

  corral_source_split_2369:
    assume {:verifier.code 0} true;
    call {:si_unique_call 407} vslice_dummy_var_60 := ldv_memset($p123, 0, 4);
    goto corral_source_split_2370;

  corral_source_split_2370:
    assume {:verifier.code 0} true;
    $p125 := $bitcast.ref.ref($p38);
    goto corral_source_split_2371;

  corral_source_split_2371:
    assume {:verifier.code 0} true;
    call {:si_unique_call 408} vslice_dummy_var_61 := ldv_memset($p125, 0, 4);
    goto corral_source_split_2372;

  corral_source_split_2372:
    assume {:verifier.code 0} true;
    $M.9 := 0;
    call {:si_unique_call 409} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    goto corral_source_split_2373;

  corral_source_split_2373:
    assume {:verifier.code 0} true;
    $M.10 := 0;
    call {:si_unique_call 410} {:cexpr "ref_cnt"} boogie_si_record_i32(0);
    goto corral_source_split_2374;

  corral_source_split_2374:
    assume {:verifier.code 0} true;
    $M.11 := 1;
    call {:si_unique_call 411} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
    goto corral_source_split_2375;

  corral_source_split_2375:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i157, $i158, $i159, $i160, $i161, $i163, $i164, $i165, $i166, $i167, $i168, $i170, $i171, $i172, $i173, $i174, $i175, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i201, $i202, $i203, $i204, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i223, $i224, $i225, $i226, $i227, $i228, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i248, $i249, $i250, $i251, $i252, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i282, $i283, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, vslice_dummy_var_62, vslice_dummy_var_63, vslice_dummy_var_64, vslice_dummy_var_65, vslice_dummy_var_66, vslice_dummy_var_67, vslice_dummy_var_68, vslice_dummy_var_69, vslice_dummy_var_70, vslice_dummy_var_71, vslice_dummy_var_72, vslice_dummy_var_73 := main_loop_$bb1($p0, $p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9, $p10, $p11, $p12, $p13, $p14, $p15, $p16, $p17, $p18, $p19, $p20, $p21, $p22, $p23, $p24, $p25, $p26, $p27, $p28, $p29, $p30, $p31, $p32, $p33, $p34, $p35, $p36, $p37, $p38, $p39, $p41, $p42, $p43, $i50, $i73, $i76, $i103, $i106, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i157, $i158, $i159, $i160, $i161, $i163, $i164, $i165, $i166, $i167, $i168, $i170, $i171, $i172, $i173, $i174, $i175, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i201, $i202, $i203, $i204, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i223, $i224, $i225, $i226, $i227, $i228, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i248, $i249, $i250, $i251, $i252, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i282, $i283, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, vslice_dummy_var_62, vslice_dummy_var_63, vslice_dummy_var_64, vslice_dummy_var_65, vslice_dummy_var_66, vslice_dummy_var_67, vslice_dummy_var_68, vslice_dummy_var_69, vslice_dummy_var_70, vslice_dummy_var_71, vslice_dummy_var_72, vslice_dummy_var_73);
    goto $bb1_last;

  $bb2:
    assume {:verifier.code 0} true;
    $i128 := $slt.i32($i127, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i128 == 1);
    assume {:verifier.code 0} true;
    $i129 := $eq.i32($i127, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume !($i129 == 1);
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb176;

  $bb176:
    assume {:verifier.code 0} true;
    call {:si_unique_call 493} ldv_stop();
    goto corral_source_split_2736;

  corral_source_split_2736:
    assume {:verifier.code 0} true;
    goto $bb177;

  $bb177:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    goto $bb145_dummy;

  $bb5:
    assume $i129 == 1;
    goto corral_source_split_2377;

  corral_source_split_2377:
    assume {:verifier.code 0} true;
    $i303 := $M.11;
    goto corral_source_split_2378;

  corral_source_split_2378:
    assume {:verifier.code 0} true;
    $i304 := $ne.i32($i303, 0);
    goto corral_source_split_2379;

  corral_source_split_2379:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  $bb147:
    assume !($i304 == 1);
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb146:
    assume $i304 == 1;
    goto corral_source_split_2698;

  corral_source_split_2698:
    assume {:verifier.code 1} true;
    call {:si_unique_call 481} $i305 := __VERIFIER_nondet_int();
    call {:si_unique_call 482} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i305);
    call {:si_unique_call 483} {:cexpr "tmp___5"} boogie_si_record_i32($i305);
    assume {:verifier.code 0} true;
    goto $bb148;

  $bb148:
    assume {:verifier.code 0} true;
    $i306 := $slt.i32($i305, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb149, $bb150;

  $bb150:
    assume !($i306 == 1);
    assume {:verifier.code 0} true;
    $i307 := $eq.i32($i305, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb151, $bb152;

  $bb152:
    assume {:verifier.code 0} true;
    assume !($i307 == 1);
    goto $bb153;

  $bb153:
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb173:
    assume {:verifier.code 0} true;
    call {:si_unique_call 492} ldv_stop();
    goto corral_source_split_2734;

  corral_source_split_2734:
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb163:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb151:
    assume $i307 == 1;
    goto corral_source_split_2700;

  corral_source_split_2700:
    assume {:verifier.code 0} true;
    $i313 := $M.11;
    goto corral_source_split_2701;

  corral_source_split_2701:
    assume {:verifier.code 0} true;
    $i314 := $eq.i32($i313, 1);
    goto corral_source_split_2702;

  corral_source_split_2702:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb164, $bb165;

  $bb165:
    assume !($i314 == 1);
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb172:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb164:
    assume $i314 == 1;
    goto corral_source_split_2718;

  corral_source_split_2718:
    assume {:verifier.code 0} true;
    call {:si_unique_call 487} $i315 := init_opl3();
    goto corral_source_split_2719;

  corral_source_split_2719:
    assume {:verifier.code 0} true;
    $M.13 := $i315;
    call {:si_unique_call 488} {:cexpr "ldv_retval_1"} boogie_si_record_i32($i315);
    goto corral_source_split_2720;

  corral_source_split_2720:
    assume {:verifier.code 0} true;
    $i316 := $M.13;
    goto corral_source_split_2721;

  corral_source_split_2721:
    assume {:verifier.code 0} true;
    $i317 := $eq.i32($i316, 0);
    goto corral_source_split_2722;

  corral_source_split_2722:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb166, $bb167;

  $bb167:
    assume !($i317 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    $i318 := $M.13;
    goto corral_source_split_2728;

  corral_source_split_2728:
    assume {:verifier.code 0} true;
    $i319 := $ne.i32($i318, 0);
    goto corral_source_split_2729;

  corral_source_split_2729:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb169, $bb170;

  $bb170:
    assume !($i319 == 1);
    assume {:verifier.code 0} true;
    goto $bb171;

  $bb171:
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb169:
    assume $i319 == 1;
    goto corral_source_split_2731;

  corral_source_split_2731:
    assume {:verifier.code 0} true;
    $M.11 := 2;
    call {:si_unique_call 491} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
    goto corral_source_split_2732;

  corral_source_split_2732:
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb161:
    assume {:verifier.code 0} true;
    call {:si_unique_call 486} ldv_check_final_state();
    goto corral_source_split_2716;

  corral_source_split_2716:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb166:
    assume $i317 == 1;
    goto corral_source_split_2724;

  corral_source_split_2724:
    assume {:verifier.code 0} true;
    $M.11 := 3;
    call {:si_unique_call 489} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
    goto corral_source_split_2725;

  corral_source_split_2725:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 490} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2726;

  corral_source_split_2726:
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb149:
    assume $i306 == 1;
    assume {:verifier.code 0} true;
    $i308 := $eq.i32($i305, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    assume !($i308 == 1);
    goto $bb153;

  $bb154:
    assume $i308 == 1;
    goto corral_source_split_2704;

  corral_source_split_2704:
    assume {:verifier.code 0} true;
    $i309 := $M.11;
    goto corral_source_split_2705;

  corral_source_split_2705:
    assume {:verifier.code 0} true;
    $i310 := $eq.i32($i309, 3);
    goto corral_source_split_2706;

  corral_source_split_2706:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb156, $bb157;

  $bb157:
    assume {:verifier.code 0} true;
    assume !($i310 == 1);
    goto $bb158;

  $bb158:
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb156:
    assume $i310 == 1;
    goto corral_source_split_2708;

  corral_source_split_2708:
    assume {:verifier.code 0} true;
    $i311 := $M.10;
    goto corral_source_split_2709;

  corral_source_split_2709:
    assume {:verifier.code 0} true;
    $i312 := $eq.i32($i311, 0);
    goto corral_source_split_2710;

  corral_source_split_2710:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb159, $bb160;

  $bb160:
    assume {:verifier.code 0} true;
    assume !($i312 == 1);
    goto $bb158;

  $bb159:
    assume $i312 == 1;
    goto corral_source_split_2712;

  corral_source_split_2712:
    assume {:verifier.code 0} true;
    call {:si_unique_call 484} cleanup_opl3();
    goto corral_source_split_2713;

  corral_source_split_2713:
    assume {:verifier.code 0} true;
    $M.11 := 2;
    call {:si_unique_call 485} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
    goto corral_source_split_2714;

  corral_source_split_2714:
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb3:
    assume $i128 == 1;
    assume {:verifier.code 0} true;
    $i130 := $eq.i32($i127, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume !($i130 == 1);
    goto $bb7;

  $bb8:
    assume $i130 == 1;
    goto corral_source_split_2381;

  corral_source_split_2381:
    assume {:verifier.code 0} true;
    $i131 := $M.9;
    goto corral_source_split_2382;

  corral_source_split_2382:
    assume {:verifier.code 0} true;
    $i132 := $ne.i32($i131, 0);
    goto corral_source_split_2383;

  corral_source_split_2383:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i132 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb10:
    assume $i132 == 1;
    goto corral_source_split_2385;

  corral_source_split_2385:
    assume {:verifier.code 1} true;
    call {:si_unique_call 415} $i133 := __VERIFIER_nondet_int();
    call {:si_unique_call 416} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i133);
    call {:si_unique_call 417} {:cexpr "tmp___4"} boogie_si_record_i32($i133);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i134 := $slt.i32($i133, 8);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    $i135 := $slt.i32($i133, 12);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i135 == 1);
    assume {:verifier.code 0} true;
    $i136 := $slt.i32($i133, 14);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i136 == 1);
    assume {:verifier.code 0} true;
    $i137 := $slt.i32($i133, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i137 == 1);
    assume {:verifier.code 0} true;
    $i138 := $eq.i32($i133, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume !($i138 == 1);
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb142;

  $bb142:
    assume {:verifier.code 0} true;
    call {:si_unique_call 480} ldv_stop();
    goto corral_source_split_2696;

  corral_source_split_2696:
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb143:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb21:
    assume $i138 == 1;
    goto corral_source_split_2391;

  corral_source_split_2391:
    assume {:verifier.code 0} true;
    $i293 := $M.9;
    goto corral_source_split_2392;

  corral_source_split_2392:
    assume {:verifier.code 0} true;
    $i294 := $eq.i32($i293, 1);
    goto corral_source_split_2393;

  corral_source_split_2393:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb136, $bb137;

  $bb137:
    assume !($i294 == 1);
    assume {:verifier.code 0} true;
    goto $bb138;

  $bb138:
    assume {:verifier.code 0} true;
    $i298 := $M.9;
    goto corral_source_split_2686;

  corral_source_split_2686:
    assume {:verifier.code 0} true;
    $i299 := $eq.i32($i298, 2);
    goto corral_source_split_2687;

  corral_source_split_2687:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb139, $bb140;

  $bb140:
    assume !($i299 == 1);
    assume {:verifier.code 0} true;
    goto $bb141;

  $bb141:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb139:
    assume $i299 == 1;
    goto corral_source_split_2689;

  corral_source_split_2689:
    assume {:verifier.code 0} true;
    $i300 := $load.i32($M.8, $p12);
    goto corral_source_split_2690;

  corral_source_split_2690:
    assume {:verifier.code 0} true;
    $i301 := $load.i32($M.8, $p19);
    goto corral_source_split_2691;

  corral_source_split_2691:
    assume {:verifier.code 0} true;
    $i302 := $load.i32($M.8, $p7);
    goto corral_source_split_2692;

  corral_source_split_2692:
    assume {:verifier.code 0} true;
    call {:si_unique_call 478} opl3_aftertouch($i300, $i301, $i302);
    goto corral_source_split_2693;

  corral_source_split_2693:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 479} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2694;

  corral_source_split_2694:
    assume {:verifier.code 0} true;
    goto $bb141;

  $bb136:
    assume $i294 == 1;
    goto corral_source_split_2679;

  corral_source_split_2679:
    assume {:verifier.code 0} true;
    $i295 := $load.i32($M.8, $p12);
    goto corral_source_split_2680;

  corral_source_split_2680:
    assume {:verifier.code 0} true;
    $i296 := $load.i32($M.8, $p19);
    goto corral_source_split_2681;

  corral_source_split_2681:
    assume {:verifier.code 0} true;
    $i297 := $load.i32($M.8, $p7);
    goto corral_source_split_2682;

  corral_source_split_2682:
    assume {:verifier.code 0} true;
    call {:si_unique_call 476} opl3_aftertouch($i295, $i296, $i297);
    goto corral_source_split_2683;

  corral_source_split_2683:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 477} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2684;

  corral_source_split_2684:
    assume {:verifier.code 0} true;
    goto $bb138;

  $bb19:
    assume $i137 == 1;
    goto corral_source_split_2387;

  corral_source_split_2387:
    assume {:verifier.code 0} true;
    $i285 := $M.9;
    goto corral_source_split_2388;

  corral_source_split_2388:
    assume {:verifier.code 0} true;
    $i286 := $eq.i32($i285, 1);
    goto corral_source_split_2389;

  corral_source_split_2389:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb130, $bb131;

  $bb131:
    assume !($i286 == 1);
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb132:
    assume {:verifier.code 0} true;
    $i289 := $M.9;
    goto corral_source_split_2670;

  corral_source_split_2670:
    assume {:verifier.code 0} true;
    $i290 := $eq.i32($i289, 2);
    goto corral_source_split_2671;

  corral_source_split_2671:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb133, $bb134;

  $bb134:
    assume !($i290 == 1);
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb133:
    assume $i290 == 1;
    goto corral_source_split_2673;

  corral_source_split_2673:
    assume {:verifier.code 0} true;
    $i291 := $load.i32($M.8, $p25);
    goto corral_source_split_2674;

  corral_source_split_2674:
    assume {:verifier.code 0} true;
    $i292 := $load.i32($M.8, $p15);
    goto corral_source_split_2675;

  corral_source_split_2675:
    assume {:verifier.code 0} true;
    call {:si_unique_call 474} opl3_volume_method($i291, $i292);
    goto corral_source_split_2676;

  corral_source_split_2676:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 475} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2677;

  corral_source_split_2677:
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb130:
    assume $i286 == 1;
    goto corral_source_split_2664;

  corral_source_split_2664:
    assume {:verifier.code 0} true;
    $i287 := $load.i32($M.8, $p25);
    goto corral_source_split_2665;

  corral_source_split_2665:
    assume {:verifier.code 0} true;
    $i288 := $load.i32($M.8, $p15);
    goto corral_source_split_2666;

  corral_source_split_2666:
    assume {:verifier.code 0} true;
    call {:si_unique_call 472} opl3_volume_method($i287, $i288);
    goto corral_source_split_2667;

  corral_source_split_2667:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 473} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2668;

  corral_source_split_2668:
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb17:
    assume $i136 == 1;
    assume {:verifier.code 0} true;
    $i139 := $slt.i32($i133, 13);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i139 == 1);
    goto corral_source_split_2399;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    $i279 := $M.9;
    goto corral_source_split_2400;

  corral_source_split_2400:
    assume {:verifier.code 0} true;
    $i280 := $eq.i32($i279, 1);
    goto corral_source_split_2401;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb124, $bb125;

  $bb125:
    assume !($i280 == 1);
    assume {:verifier.code 0} true;
    goto $bb126;

  $bb126:
    assume {:verifier.code 0} true;
    $i282 := $M.9;
    goto corral_source_split_2657;

  corral_source_split_2657:
    assume {:verifier.code 0} true;
    $i283 := $eq.i32($i282, 2);
    goto corral_source_split_2658;

  corral_source_split_2658:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb127, $bb128;

  $bb128:
    assume !($i283 == 1);
    assume {:verifier.code 0} true;
    goto $bb129;

  $bb129:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb127:
    assume $i283 == 1;
    goto corral_source_split_2660;

  corral_source_split_2660:
    assume {:verifier.code 0} true;
    call {:si_unique_call 470} vslice_dummy_var_73 := opl3_load_patch($i50, $i106, $p43, $i76, $i103, $i73);
    goto SeqInstr_43, SeqInstr_44;

  SeqInstr_44:
    assume assertsPassed;
    goto SeqInstr_45;

  SeqInstr_45:
    goto corral_source_split_2661;

  corral_source_split_2661:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 471} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2662;

  corral_source_split_2662:
    assume {:verifier.code 0} true;
    goto $bb129;

  SeqInstr_43:
    assume !assertsPassed;
    return;

  $bb124:
    assume $i280 == 1;
    goto corral_source_split_2653;

  corral_source_split_2653:
    assume {:verifier.code 0} true;
    call {:si_unique_call 468} vslice_dummy_var_72 := opl3_load_patch($i50, $i106, $p43, $i76, $i103, $i73);
    goto SeqInstr_40, SeqInstr_41;

  SeqInstr_41:
    assume assertsPassed;
    goto SeqInstr_42;

  SeqInstr_42:
    goto corral_source_split_2654;

  corral_source_split_2654:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 469} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2655;

  corral_source_split_2655:
    assume {:verifier.code 0} true;
    goto $bb126;

  SeqInstr_40:
    assume !assertsPassed;
    return;

  $bb24:
    assume $i139 == 1;
    goto corral_source_split_2395;

  corral_source_split_2395:
    assume {:verifier.code 0} true;
    $i269 := $M.9;
    goto corral_source_split_2396;

  corral_source_split_2396:
    assume {:verifier.code 0} true;
    $i270 := $eq.i32($i269, 1);
    goto corral_source_split_2397;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb118, $bb119;

  $bb119:
    assume !($i270 == 1);
    assume {:verifier.code 0} true;
    goto $bb120;

  $bb120:
    assume {:verifier.code 0} true;
    $i274 := $M.9;
    goto corral_source_split_2643;

  corral_source_split_2643:
    assume {:verifier.code 0} true;
    $i275 := $eq.i32($i274, 2);
    goto corral_source_split_2644;

  corral_source_split_2644:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb121, $bb122;

  $bb122:
    assume !($i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb121:
    assume $i275 == 1;
    goto corral_source_split_2646;

  corral_source_split_2646:
    assume {:verifier.code 0} true;
    $i276 := $load.i32($M.8, $p1);
    goto corral_source_split_2647;

  corral_source_split_2647:
    assume {:verifier.code 0} true;
    $i277 := $load.i32($M.8, $p26);
    goto corral_source_split_2648;

  corral_source_split_2648:
    assume {:verifier.code 0} true;
    $i278 := $load.i32($M.8, $p5);
    goto corral_source_split_2649;

  corral_source_split_2649:
    assume {:verifier.code 0} true;
    call {:si_unique_call 466} opl3_panning($i276, $i277, $i278);
    goto corral_source_split_2650;

  corral_source_split_2650:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 467} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2651;

  corral_source_split_2651:
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb118:
    assume $i270 == 1;
    goto corral_source_split_2636;

  corral_source_split_2636:
    assume {:verifier.code 0} true;
    $i271 := $load.i32($M.8, $p1);
    goto corral_source_split_2637;

  corral_source_split_2637:
    assume {:verifier.code 0} true;
    $i272 := $load.i32($M.8, $p26);
    goto corral_source_split_2638;

  corral_source_split_2638:
    assume {:verifier.code 0} true;
    $i273 := $load.i32($M.8, $p5);
    goto corral_source_split_2639;

  corral_source_split_2639:
    assume {:verifier.code 0} true;
    call {:si_unique_call 464} opl3_panning($i271, $i272, $i273);
    goto corral_source_split_2640;

  corral_source_split_2640:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 465} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2641;

  corral_source_split_2641:
    assume {:verifier.code 0} true;
    goto $bb120;

  $bb15:
    assume $i135 == 1;
    assume {:verifier.code 0} true;
    $i140 := $slt.i32($i133, 10);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i140 == 1);
    assume {:verifier.code 0} true;
    $i141 := $slt.i32($i133, 11);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i141 == 1);
    goto corral_source_split_2407;

  corral_source_split_2407:
    assume {:verifier.code 0} true;
    $i257 := $M.9;
    goto corral_source_split_2408;

  corral_source_split_2408:
    assume {:verifier.code 0} true;
    $i258 := $eq.i32($i257, 1);
    goto corral_source_split_2409;

  corral_source_split_2409:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb112, $bb113;

  $bb113:
    assume !($i258 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    $i263 := $M.9;
    goto corral_source_split_2625;

  corral_source_split_2625:
    assume {:verifier.code 0} true;
    $i264 := $eq.i32($i263, 2);
    goto corral_source_split_2626;

  corral_source_split_2626:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb115, $bb116;

  $bb116:
    assume !($i264 == 1);
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb115:
    assume $i264 == 1;
    goto corral_source_split_2628;

  corral_source_split_2628:
    assume {:verifier.code 0} true;
    $i265 := $load.i32($M.8, $p32);
    goto corral_source_split_2629;

  corral_source_split_2629:
    assume {:verifier.code 0} true;
    $i266 := $load.i32($M.8, $p35);
    goto corral_source_split_2630;

  corral_source_split_2630:
    assume {:verifier.code 0} true;
    $i267 := $load.i32($M.8, $p14);
    goto corral_source_split_2631;

  corral_source_split_2631:
    assume {:verifier.code 0} true;
    $i268 := $load.i32($M.8, $p16);
    goto corral_source_split_2632;

  corral_source_split_2632:
    assume {:verifier.code 0} true;
    call {:si_unique_call 462} opl3_controller($i265, $i266, $i267, $i268);
    goto corral_source_split_2633;

  corral_source_split_2633:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 463} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2634;

  corral_source_split_2634:
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb112:
    assume $i258 == 1;
    goto corral_source_split_2617;

  corral_source_split_2617:
    assume {:verifier.code 0} true;
    $i259 := $load.i32($M.8, $p32);
    goto corral_source_split_2618;

  corral_source_split_2618:
    assume {:verifier.code 0} true;
    $i260 := $load.i32($M.8, $p35);
    goto corral_source_split_2619;

  corral_source_split_2619:
    assume {:verifier.code 0} true;
    $i261 := $load.i32($M.8, $p14);
    goto corral_source_split_2620;

  corral_source_split_2620:
    assume {:verifier.code 0} true;
    $i262 := $load.i32($M.8, $p16);
    goto corral_source_split_2621;

  corral_source_split_2621:
    assume {:verifier.code 0} true;
    call {:si_unique_call 460} opl3_controller($i259, $i260, $i261, $i262);
    goto corral_source_split_2622;

  corral_source_split_2622:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 461} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2623;

  corral_source_split_2623:
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb28:
    assume $i141 == 1;
    goto corral_source_split_2403;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    $i254 := $M.9;
    goto corral_source_split_2404;

  corral_source_split_2404:
    assume {:verifier.code 0} true;
    $i255 := $eq.i32($i254, 2);
    goto corral_source_split_2405;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i255 == 1);
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb111:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb109:
    assume $i255 == 1;
    goto corral_source_split_2612;

  corral_source_split_2612:
    assume {:verifier.code 0} true;
    $i256 := $load.i32($M.8, $p0);
    goto corral_source_split_2613;

  corral_source_split_2613:
    assume {:verifier.code 0} true;
    call {:si_unique_call 458} opl3_close($i256);
    goto corral_source_split_2614;

  corral_source_split_2614:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 459} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2615;

  corral_source_split_2615:
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb26:
    assume $i140 == 1;
    assume {:verifier.code 0} true;
    $i142 := $slt.i32($i133, 9);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb30, $bb31;

  $bb31:
    assume !($i142 == 1);
    goto corral_source_split_2415;

  corral_source_split_2415:
    assume {:verifier.code 0} true;
    $i242 := $M.9;
    goto corral_source_split_2416;

  corral_source_split_2416:
    assume {:verifier.code 0} true;
    $i243 := $eq.i32($i242, 1);
    goto corral_source_split_2417;

  corral_source_split_2417:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb103, $bb104;

  $bb104:
    assume !($i243 == 1);
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    $i248 := $M.9;
    goto corral_source_split_2602;

  corral_source_split_2602:
    assume {:verifier.code 0} true;
    $i249 := $eq.i32($i248, 2);
    goto corral_source_split_2603;

  corral_source_split_2603:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb106, $bb107;

  $bb107:
    assume !($i249 == 1);
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb106:
    assume $i249 == 1;
    goto corral_source_split_2605;

  corral_source_split_2605:
    assume {:verifier.code 0} true;
    $i250 := $load.i32($M.8, $p38);
    goto corral_source_split_2606;

  corral_source_split_2606:
    assume {:verifier.code 0} true;
    $i251 := $load.i32($M.8, $p34);
    goto corral_source_split_2607;

  corral_source_split_2607:
    assume {:verifier.code 0} true;
    $i252 := $load.i32($M.8, $p22);
    goto corral_source_split_2608;

  corral_source_split_2608:
    assume {:verifier.code 0} true;
    call {:si_unique_call 456} vslice_dummy_var_71 := opl3_set_instr($i250, $i251, $i252);
    goto corral_source_split_2609;

  corral_source_split_2609:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 457} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2610;

  corral_source_split_2610:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb103:
    assume $i243 == 1;
    goto corral_source_split_2595;

  corral_source_split_2595:
    assume {:verifier.code 0} true;
    $i244 := $load.i32($M.8, $p38);
    goto corral_source_split_2596;

  corral_source_split_2596:
    assume {:verifier.code 0} true;
    $i245 := $load.i32($M.8, $p34);
    goto corral_source_split_2597;

  corral_source_split_2597:
    assume {:verifier.code 0} true;
    $i246 := $load.i32($M.8, $p22);
    goto corral_source_split_2598;

  corral_source_split_2598:
    assume {:verifier.code 0} true;
    call {:si_unique_call 454} vslice_dummy_var_70 := opl3_set_instr($i244, $i245, $i246);
    goto corral_source_split_2599;

  corral_source_split_2599:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 455} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2600;

  corral_source_split_2600:
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb30:
    assume $i142 == 1;
    goto corral_source_split_2411;

  corral_source_split_2411:
    assume {:verifier.code 0} true;
    $i236 := $M.9;
    goto corral_source_split_2412;

  corral_source_split_2412:
    assume {:verifier.code 0} true;
    $i237 := $eq.i32($i236, 1);
    goto corral_source_split_2413;

  corral_source_split_2413:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i237 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    $i239 := $M.9;
    goto corral_source_split_2587;

  corral_source_split_2587:
    assume {:verifier.code 0} true;
    $i240 := $eq.i32($i239, 2);
    goto corral_source_split_2588;

  corral_source_split_2588:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb100, $bb101;

  $bb101:
    assume !($i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb102;

  $bb102:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb100:
    assume $i240 == 1;
    goto corral_source_split_2590;

  corral_source_split_2590:
    assume {:verifier.code 0} true;
    $i241 := $load.i32($M.8, $p37);
    goto corral_source_split_2591;

  corral_source_split_2591:
    assume {:verifier.code 0} true;
    call {:si_unique_call 452} opl3_hw_control($i241, $p39);
    goto corral_source_split_2592;

  corral_source_split_2592:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 453} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2593;

  corral_source_split_2593:
    assume {:verifier.code 0} true;
    goto $bb102;

  $bb97:
    assume $i237 == 1;
    goto corral_source_split_2582;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    $i238 := $load.i32($M.8, $p37);
    goto corral_source_split_2583;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    call {:si_unique_call 450} opl3_hw_control($i238, $p39);
    goto corral_source_split_2584;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 451} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2585;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb13:
    assume $i134 == 1;
    assume {:verifier.code 0} true;
    $i143 := $slt.i32($i133, 4);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i143 == 1);
    assume {:verifier.code 0} true;
    $i144 := $slt.i32($i133, 6);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i144 == 1);
    assume {:verifier.code 0} true;
    $i145 := $slt.i32($i133, 7);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i145 == 1);
    goto corral_source_split_2423;

  corral_source_split_2423:
    assume {:verifier.code 0} true;
    $i230 := $M.9;
    goto corral_source_split_2424;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    $i231 := $eq.i32($i230, 1);
    goto corral_source_split_2425;

  corral_source_split_2425:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb91, $bb92;

  $bb92:
    assume !($i231 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    $i233 := $M.9;
    goto corral_source_split_2574;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    $i234 := $eq.i32($i233, 2);
    goto corral_source_split_2575;

  corral_source_split_2575:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb94, $bb95;

  $bb95:
    assume !($i234 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb94:
    assume $i234 == 1;
    goto corral_source_split_2577;

  corral_source_split_2577:
    assume {:verifier.code 0} true;
    $i235 := $load.i32($M.8, $p10);
    goto corral_source_split_2578;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    call {:si_unique_call 448} opl3_reset($i235);
    goto corral_source_split_2579;

  corral_source_split_2579:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 449} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2580;

  corral_source_split_2580:
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb91:
    assume $i231 == 1;
    goto corral_source_split_2569;

  corral_source_split_2569:
    assume {:verifier.code 0} true;
    $i232 := $load.i32($M.8, $p10);
    goto corral_source_split_2570;

  corral_source_split_2570:
    assume {:verifier.code 0} true;
    call {:si_unique_call 446} opl3_reset($i232);
    goto corral_source_split_2571;

  corral_source_split_2571:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 447} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2572;

  corral_source_split_2572:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb36:
    assume $i145 == 1;
    goto corral_source_split_2419;

  corral_source_split_2419:
    assume {:verifier.code 0} true;
    $i216 := $M.9;
    goto corral_source_split_2420;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    $i217 := $eq.i32($i216, 1);
    goto corral_source_split_2421;

  corral_source_split_2421:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb85, $bb86;

  $bb86:
    assume !($i217 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    $i223 := $M.9;
    goto corral_source_split_2558;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    $i224 := $eq.i32($i223, 2);
    goto corral_source_split_2559;

  corral_source_split_2559:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb88:
    assume $i224 == 1;
    goto corral_source_split_2561;

  corral_source_split_2561:
    assume {:verifier.code 0} true;
    $i225 := $load.i32($M.8, $p30);
    goto corral_source_split_2562;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    $i226 := $load.i32($M.8, $p18);
    goto corral_source_split_2563;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    $i227 := $load.i32($M.8, $p31);
    goto corral_source_split_2564;

  corral_source_split_2564:
    assume {:verifier.code 0} true;
    $i228 := $load.i32($M.8, $p36);
    goto corral_source_split_2565;

  corral_source_split_2565:
    assume {:verifier.code 0} true;
    call {:si_unique_call 444} vslice_dummy_var_69 := opl3_start_note($i225, $i226, $i227, $i228);
    goto corral_source_split_2566;

  corral_source_split_2566:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 445} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2567;

  corral_source_split_2567:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb85:
    assume $i217 == 1;
    goto corral_source_split_2550;

  corral_source_split_2550:
    assume {:verifier.code 0} true;
    $i218 := $load.i32($M.8, $p30);
    goto corral_source_split_2551;

  corral_source_split_2551:
    assume {:verifier.code 0} true;
    $i219 := $load.i32($M.8, $p18);
    goto corral_source_split_2552;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    $i220 := $load.i32($M.8, $p31);
    goto corral_source_split_2553;

  corral_source_split_2553:
    assume {:verifier.code 0} true;
    $i221 := $load.i32($M.8, $p36);
    goto corral_source_split_2554;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    call {:si_unique_call 442} vslice_dummy_var_68 := opl3_start_note($i218, $i219, $i220, $i221);
    goto corral_source_split_2555;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 443} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2556;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb34:
    assume $i144 == 1;
    assume {:verifier.code 0} true;
    $i146 := $slt.i32($i133, 5);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i146 == 1);
    goto corral_source_split_2431;

  corral_source_split_2431:
    assume {:verifier.code 0} true;
    $i206 := $M.9;
    goto corral_source_split_2432;

  corral_source_split_2432:
    assume {:verifier.code 0} true;
    $i207 := $eq.i32($i206, 1);
    goto corral_source_split_2433;

  corral_source_split_2433:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb79, $bb80;

  $bb80:
    assume !($i207 == 1);
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    $i211 := $M.9;
    goto corral_source_split_2540;

  corral_source_split_2540:
    assume {:verifier.code 0} true;
    $i212 := $eq.i32($i211, 2);
    goto corral_source_split_2541;

  corral_source_split_2541:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i212 == 1);
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb82:
    assume $i212 == 1;
    goto corral_source_split_2543;

  corral_source_split_2543:
    assume {:verifier.code 0} true;
    $i213 := $load.i32($M.8, $p9);
    goto corral_source_split_2544;

  corral_source_split_2544:
    assume {:verifier.code 0} true;
    $i214 := $load.i32($M.8, $p23);
    goto corral_source_split_2545;

  corral_source_split_2545:
    assume {:verifier.code 0} true;
    $i215 := $load.i32($M.8, $p33);
    goto corral_source_split_2546;

  corral_source_split_2546:
    assume {:verifier.code 0} true;
    call {:si_unique_call 440} opl3_setup_voice($i213, $i214, $i215);
    goto corral_source_split_2547;

  corral_source_split_2547:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 441} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2548;

  corral_source_split_2548:
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb79:
    assume $i207 == 1;
    goto corral_source_split_2533;

  corral_source_split_2533:
    assume {:verifier.code 0} true;
    $i208 := $load.i32($M.8, $p9);
    goto corral_source_split_2534;

  corral_source_split_2534:
    assume {:verifier.code 0} true;
    $i209 := $load.i32($M.8, $p23);
    goto corral_source_split_2535;

  corral_source_split_2535:
    assume {:verifier.code 0} true;
    $i210 := $load.i32($M.8, $p33);
    goto corral_source_split_2536;

  corral_source_split_2536:
    assume {:verifier.code 0} true;
    call {:si_unique_call 438} opl3_setup_voice($i208, $i209, $i210);
    goto corral_source_split_2537;

  corral_source_split_2537:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 439} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2538;

  corral_source_split_2538:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb38:
    assume $i146 == 1;
    goto corral_source_split_2427;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    $i196 := $M.9;
    goto corral_source_split_2428;

  corral_source_split_2428:
    assume {:verifier.code 0} true;
    $i197 := $eq.i32($i196, 1);
    goto corral_source_split_2429;

  corral_source_split_2429:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb73, $bb74;

  $bb74:
    assume !($i197 == 1);
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $i201 := $M.9;
    goto corral_source_split_2524;

  corral_source_split_2524:
    assume {:verifier.code 0} true;
    $i202 := $eq.i32($i201, 2);
    goto corral_source_split_2525;

  corral_source_split_2525:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76, $bb77;

  $bb77:
    assume !($i202 == 1);
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb76:
    assume $i202 == 1;
    goto corral_source_split_2527;

  corral_source_split_2527:
    assume {:verifier.code 0} true;
    $i203 := $load.i32($M.8, $p2);
    goto corral_source_split_2528;

  corral_source_split_2528:
    assume {:verifier.code 0} true;
    $i204 := $load.i32($M.8, $p17);
    goto corral_source_split_2529;

  corral_source_split_2529:
    assume {:verifier.code 0} true;
    call {:si_unique_call 436} vslice_dummy_var_67 := opl3_ioctl($i203, $i204, $p42);
    goto SeqInstr_37, SeqInstr_38;

  SeqInstr_38:
    assume assertsPassed;
    goto SeqInstr_39;

  SeqInstr_39:
    goto corral_source_split_2530;

  corral_source_split_2530:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 437} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2531;

  corral_source_split_2531:
    assume {:verifier.code 0} true;
    goto $bb78;

  SeqInstr_37:
    assume !assertsPassed;
    return;

  $bb73:
    assume $i197 == 1;
    goto corral_source_split_2518;

  corral_source_split_2518:
    assume {:verifier.code 0} true;
    $i198 := $load.i32($M.8, $p2);
    goto corral_source_split_2519;

  corral_source_split_2519:
    assume {:verifier.code 0} true;
    $i199 := $load.i32($M.8, $p17);
    goto corral_source_split_2520;

  corral_source_split_2520:
    assume {:verifier.code 0} true;
    call {:si_unique_call 434} vslice_dummy_var_66 := opl3_ioctl($i198, $i199, $p42);
    goto SeqInstr_34, SeqInstr_35;

  SeqInstr_35:
    assume assertsPassed;
    goto SeqInstr_36;

  SeqInstr_36:
    goto corral_source_split_2521;

  corral_source_split_2521:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 435} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2522;

  corral_source_split_2522:
    assume {:verifier.code 0} true;
    goto $bb75;

  SeqInstr_34:
    assume !assertsPassed;
    return;

  $bb32:
    assume $i143 == 1;
    assume {:verifier.code 0} true;
    $i147 := $slt.i32($i133, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i147 == 1);
    assume {:verifier.code 0} true;
    $i148 := $slt.i32($i133, 3);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb42, $bb43;

  $bb43:
    assume !($i148 == 1);
    goto corral_source_split_2439;

  corral_source_split_2439:
    assume {:verifier.code 0} true;
    $i186 := $M.9;
    goto corral_source_split_2440;

  corral_source_split_2440:
    assume {:verifier.code 0} true;
    $i187 := $eq.i32($i186, 1);
    goto corral_source_split_2441;

  corral_source_split_2441:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb67, $bb68;

  $bb68:
    assume !($i187 == 1);
    assume {:verifier.code 0} true;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    $i191 := $M.9;
    goto corral_source_split_2508;

  corral_source_split_2508:
    assume {:verifier.code 0} true;
    $i192 := $eq.i32($i191, 2);
    goto corral_source_split_2509;

  corral_source_split_2509:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb70, $bb71;

  $bb71:
    assume !($i192 == 1);
    assume {:verifier.code 0} true;
    goto $bb72;

  $bb72:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb70:
    assume $i192 == 1;
    goto corral_source_split_2511;

  corral_source_split_2511:
    assume {:verifier.code 0} true;
    $i193 := $load.i32($M.8, $p11);
    goto corral_source_split_2512;

  corral_source_split_2512:
    assume {:verifier.code 0} true;
    $i194 := $load.i32($M.8, $p8);
    goto corral_source_split_2513;

  corral_source_split_2513:
    assume {:verifier.code 0} true;
    $i195 := $load.i32($M.8, $p27);
    goto corral_source_split_2514;

  corral_source_split_2514:
    assume {:verifier.code 0} true;
    call {:si_unique_call 432} opl3_bender($i193, $i194, $i195);
    goto corral_source_split_2515;

  corral_source_split_2515:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 433} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2516;

  corral_source_split_2516:
    assume {:verifier.code 0} true;
    goto $bb72;

  $bb67:
    assume $i187 == 1;
    goto corral_source_split_2501;

  corral_source_split_2501:
    assume {:verifier.code 0} true;
    $i188 := $load.i32($M.8, $p11);
    goto corral_source_split_2502;

  corral_source_split_2502:
    assume {:verifier.code 0} true;
    $i189 := $load.i32($M.8, $p8);
    goto corral_source_split_2503;

  corral_source_split_2503:
    assume {:verifier.code 0} true;
    $i190 := $load.i32($M.8, $p27);
    goto corral_source_split_2504;

  corral_source_split_2504:
    assume {:verifier.code 0} true;
    call {:si_unique_call 430} opl3_bender($i188, $i189, $i190);
    goto corral_source_split_2505;

  corral_source_split_2505:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 431} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2506;

  corral_source_split_2506:
    assume {:verifier.code 0} true;
    goto $bb69;

  $bb42:
    assume $i148 == 1;
    goto corral_source_split_2435;

  corral_source_split_2435:
    assume {:verifier.code 0} true;
    $i177 := $M.9;
    goto corral_source_split_2436;

  corral_source_split_2436:
    assume {:verifier.code 0} true;
    $i178 := $eq.i32($i177, 1);
    goto corral_source_split_2437;

  corral_source_split_2437:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i178 == 1);
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb61:
    assume $i178 == 1;
    goto corral_source_split_2487;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    $i179 := $load.i32($M.8, $p13);
    goto corral_source_split_2488;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    $i180 := $load.i32($M.8, $p21);
    goto corral_source_split_2489;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    call {:si_unique_call 426} $i181 := opl3_open($i179, $i180);
    goto corral_source_split_2490;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    $M.12 := $i181;
    call {:si_unique_call 427} {:cexpr "ldv_retval_0"} boogie_si_record_i32($i181);
    goto corral_source_split_2491;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    $i182 := $M.12;
    goto corral_source_split_2492;

  corral_source_split_2492:
    assume {:verifier.code 0} true;
    $i183 := $eq.i32($i182, 0);
    goto corral_source_split_2493;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i183 == 1);
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb63:
    assume $i183 == 1;
    goto corral_source_split_2495;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 428} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2496;

  corral_source_split_2496:
    assume {:verifier.code 0} true;
    $i184 := $M.10;
    goto corral_source_split_2497;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    $i185 := $add.i32($i184, 1);
    goto corral_source_split_2498;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    $M.10 := $i185;
    call {:si_unique_call 429} {:cexpr "ref_cnt"} boogie_si_record_i32($i185);
    goto corral_source_split_2499;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb40:
    assume $i147 == 1;
    assume {:verifier.code 0} true;
    $i149 := $slt.i32($i133, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i149 == 1);
    goto corral_source_split_2443;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    $i163 := $M.9;
    goto corral_source_split_2444;

  corral_source_split_2444:
    assume {:verifier.code 0} true;
    $i164 := $eq.i32($i163, 1);
    goto corral_source_split_2445;

  corral_source_split_2445:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55, $bb56;

  $bb56:
    assume !($i164 == 1);
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    $i170 := $M.9;
    goto corral_source_split_2476;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    $i171 := $eq.i32($i170, 2);
    goto corral_source_split_2477;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb58, $bb59;

  $bb59:
    assume !($i171 == 1);
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb58:
    assume $i171 == 1;
    goto corral_source_split_2479;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    $i172 := $load.i32($M.8, $p24);
    goto corral_source_split_2480;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $i173 := $load.i32($M.8, $p3);
    goto corral_source_split_2481;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    $i174 := $load.i32($M.8, $p4);
    goto corral_source_split_2482;

  corral_source_split_2482:
    assume {:verifier.code 0} true;
    $i175 := $load.i32($M.8, $p28);
    goto corral_source_split_2483;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    call {:si_unique_call 424} vslice_dummy_var_65 := opl3_kill_note($i172, $i173, $i174, $i175);
    goto corral_source_split_2484;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 425} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2485;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb55:
    assume $i164 == 1;
    goto corral_source_split_2468;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    $i165 := $load.i32($M.8, $p24);
    goto corral_source_split_2469;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    $i166 := $load.i32($M.8, $p3);
    goto corral_source_split_2470;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    $i167 := $load.i32($M.8, $p4);
    goto corral_source_split_2471;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    $i168 := $load.i32($M.8, $p28);
    goto corral_source_split_2472;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    call {:si_unique_call 422} vslice_dummy_var_64 := opl3_kill_note($i165, $i166, $i167, $i168);
    goto corral_source_split_2473;

  corral_source_split_2473:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 423} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2474;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb44:
    assume $i149 == 1;
    assume {:verifier.code 0} true;
    $i150 := $eq.i32($i133, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb46, $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    assume !($i150 == 1);
    goto $bb23;

  $bb46:
    assume $i150 == 1;
    goto corral_source_split_2447;

  corral_source_split_2447:
    assume {:verifier.code 0} true;
    $i151 := $M.9;
    goto corral_source_split_2448;

  corral_source_split_2448:
    assume {:verifier.code 0} true;
    $i152 := $eq.i32($i151, 1);
    goto corral_source_split_2449;

  corral_source_split_2449:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i152 == 1);
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    $i157 := $M.9;
    goto corral_source_split_2458;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    $i158 := $eq.i32($i157, 2);
    goto corral_source_split_2459;

  corral_source_split_2459:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i158 == 1);
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb51:
    assume $i158 == 1;
    goto corral_source_split_2461;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    $i159 := $load.i32($M.8, $p29);
    goto corral_source_split_2462;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    $i160 := $load.i32($M.8, $p20);
    goto corral_source_split_2463;

  corral_source_split_2463:
    assume {:verifier.code 0} true;
    $i161 := $load.i32($M.8, $p6);
    goto corral_source_split_2464;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    call {:si_unique_call 420} vslice_dummy_var_63 := opl3_alloc_voice($i159, $i160, $i161, $p41);
    goto corral_source_split_2465;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 421} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2466;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb48:
    assume $i152 == 1;
    goto corral_source_split_2451;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    $i153 := $load.i32($M.8, $p29);
    goto corral_source_split_2452;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    $i154 := $load.i32($M.8, $p20);
    goto corral_source_split_2453;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    $i155 := $load.i32($M.8, $p6);
    goto corral_source_split_2454;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    call {:si_unique_call 418} vslice_dummy_var_62 := opl3_alloc_voice($i153, $i154, $i155, $p41);
    goto corral_source_split_2455;

  corral_source_split_2455:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 419} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2456;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb145_dummy:
    assume false;
    return;

  $bb1_last:
    assume {:verifier.code 1} true;
    call {:si_unique_call 412} $i127 := __VERIFIER_nondet_int();
    call {:si_unique_call 413} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i127);
    call {:si_unique_call 414} {:cexpr "tmp___3"} boogie_si_record_i32($i127);
    assume {:verifier.code 0} true;
    goto $bb2;
}



const ldv_initialize: ref;

axiom ldv_initialize == $sub.ref(0, 95445);

procedure ldv_initialize();
  free requires assertsPassed;



implementation ldv_initialize()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2738;

  corral_source_split_2738:
    assume {:verifier.code 0} true;
    return;
}



const ldv_stop: ref;

axiom ldv_stop == $sub.ref(0, 96477);

procedure ldv_stop();
  free requires assertsPassed;



implementation ldv_stop()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2740;

  corral_source_split_2740:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call ldv_stop_loop_$bb1();
    goto $bb1_last;

  $bb1_dummy:
    assume false;
    return;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto $bb1_dummy;
}



const cleanup_opl3: ref;

axiom cleanup_opl3 == $sub.ref(0, 97509);

procedure cleanup_opl3();
  free requires assertsPassed;
  modifies $M.1;



implementation cleanup_opl3()
{
  var $p0: ref;
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i32;
  var $i21: i64;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2742;

  corral_source_split_2742:
    assume {:verifier.code 0} true;
    $p0 := $M.1;
    goto corral_source_split_2743;

  corral_source_split_2743:
    assume {:verifier.code 0} true;
    $i1 := $p2i.ref.i64($p0);
    goto corral_source_split_2744;

  corral_source_split_2744:
    assume {:verifier.code 0} true;
    $i2 := $ne.i64($i1, 0);
    goto corral_source_split_2745;

  corral_source_split_2745:
    assume {:verifier.code 0} true;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i2 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_2747;

  corral_source_split_2747:
    assume {:verifier.code 0} true;
    $i3 := $M.14;
    goto corral_source_split_2748;

  corral_source_split_2748:
    assume {:verifier.code 0} true;
    $i4 := $ne.i32($i3, $sub.i32(0, 1));
    goto corral_source_split_2749;

  corral_source_split_2749:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i4 == 1);
    goto $bb3;

  $bb4:
    assume $i4 == 1;
    goto corral_source_split_2751;

  corral_source_split_2751:
    assume {:verifier.code 0} true;
    $p5 := $M.1;
    goto corral_source_split_2752;

  corral_source_split_2752:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p5, $mul.ref(0, 11656)), $mul.ref(0, 1));
    goto corral_source_split_2753;

  corral_source_split_2753:
    assume {:verifier.code 0} true;
    $i7 := $load.i32($M.0, $p6);
    goto corral_source_split_2754;

  corral_source_split_2754:
    assume {:verifier.code 0} true;
    $i8 := $ne.i32($i7, 0);
    goto corral_source_split_2755;

  corral_source_split_2755:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $p22 := $M.1;
    goto corral_source_split_2776;

  corral_source_split_2776:
    assume {:verifier.code 0} true;
    $p23 := $bitcast.ref.ref($p22);
    goto corral_source_split_2777;

  corral_source_split_2777:
    assume {:verifier.code 0} true;
    call {:si_unique_call 496} kfree($p23);
    goto corral_source_split_2778;

  corral_source_split_2778:
    assume {:verifier.code 0} true;
    $M.1 := $0.ref;
    goto corral_source_split_2779;

  corral_source_split_2779:
    assume {:verifier.code 0} true;
    $i24 := $M.15;
    goto corral_source_split_2780;

  corral_source_split_2780:
    assume {:verifier.code 0} true;
    call {:si_unique_call 497} sound_unload_synthdev($i24);
    goto corral_source_split_2781;

  corral_source_split_2781:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb6:
    assume $i8 == 1;
    goto corral_source_split_2757;

  corral_source_split_2757:
    assume {:verifier.code 0} true;
    $p9 := $M.1;
    goto corral_source_split_2758;

  corral_source_split_2758:
    assume {:verifier.code 0} true;
    $p10 := $add.ref($add.ref($p9, $mul.ref(0, 11656)), $mul.ref(0, 1));
    goto corral_source_split_2759;

  corral_source_split_2759:
    assume {:verifier.code 0} true;
    $i11 := $load.i32($M.0, $p10);
    goto corral_source_split_2760;

  corral_source_split_2760:
    assume {:verifier.code 0} true;
    $i12 := $sext.i32.i64($i11);
    goto corral_source_split_2761;

  corral_source_split_2761:
    assume {:verifier.code 0} true;
    call {:si_unique_call 494} __release_region(ioport_resource, $i12, 4);
    goto corral_source_split_2762;

  corral_source_split_2762:
    assume {:verifier.code 0} true;
    $p13 := $M.1;
    goto corral_source_split_2763;

  corral_source_split_2763:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($p13, $mul.ref(0, 11656)), $mul.ref(11648, 1));
    goto corral_source_split_2764;

  corral_source_split_2764:
    assume {:verifier.code 0} true;
    $i15 := $load.i32($M.0, $p14);
    goto corral_source_split_2765;

  corral_source_split_2765:
    assume {:verifier.code 0} true;
    $i16 := $ne.i32($i15, 0);
    goto corral_source_split_2766;

  corral_source_split_2766:
    assume {:verifier.code 0} true;
    assume {:branchcond $i16} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb8:
    assume $i16 == 1;
    goto corral_source_split_2768;

  corral_source_split_2768:
    assume {:verifier.code 0} true;
    $p17 := $M.1;
    goto corral_source_split_2769;

  corral_source_split_2769:
    assume {:verifier.code 0} true;
    $p18 := $add.ref($add.ref($p17, $mul.ref(0, 11656)), $mul.ref(0, 1));
    goto corral_source_split_2770;

  corral_source_split_2770:
    assume {:verifier.code 0} true;
    $i19 := $load.i32($M.0, $p18);
    goto corral_source_split_2771;

  corral_source_split_2771:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, $sub.i32(0, 8));
    goto corral_source_split_2772;

  corral_source_split_2772:
    assume {:verifier.code 0} true;
    $i21 := $sext.i32.i64($i20);
    goto corral_source_split_2773;

  corral_source_split_2773:
    assume {:verifier.code 0} true;
    call {:si_unique_call 495} __release_region(ioport_resource, $i21, 2);
    goto corral_source_split_2774;

  corral_source_split_2774:
    assume {:verifier.code 0} true;
    goto $bb10;
}



const init_opl3: ref;

axiom init_opl3 == $sub.ref(0, 98541);

procedure init_opl3() returns ($r: i32);
  free requires assertsPassed;
  modifies $M.15, $M.1, $M.0, $M.16, $M.2, $CurrAddr;



implementation init_opl3() returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i7: i32;
  var $i8: i32;
  var $i6: i32;
  var vslice_dummy_var_74: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2783;

  corral_source_split_2783:
    assume {:verifier.code 0} true;
    call {:si_unique_call 498} vslice_dummy_var_74 := printk.ref(.str.7);
    goto corral_source_split_2784;

  corral_source_split_2784:
    assume {:verifier.code 0} true;
    $i1 := $M.14;
    goto corral_source_split_2785;

  corral_source_split_2785:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, $sub.i32(0, 1));
    goto corral_source_split_2786;

  corral_source_split_2786:
    assume {:verifier.code 0} true;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i6 := 0;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_2795;

  corral_source_split_2795:
    assume {:verifier.code 0} true;
    $r := $i6;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_2788;

  corral_source_split_2788:
    assume {:verifier.code 0} true;
    $i3 := $M.14;
    goto corral_source_split_2789;

  corral_source_split_2789:
    assume {:verifier.code 0} true;
    call {:si_unique_call 499} $i4 := opl3_detect($i3);
    call {:si_unique_call 500} {:cexpr "tmp"} boogie_si_record_i32($i4);
    goto corral_source_split_2790;

  corral_source_split_2790:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_2791;

  corral_source_split_2791:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i7 := $M.14;
    goto corral_source_split_2797;

  corral_source_split_2797:
    assume {:verifier.code 0} true;
    call {:si_unique_call 501} $i8 := opl3_init($i7, __this_module);
    goto corral_source_split_2798;

  corral_source_split_2798:
    assume {:verifier.code 0} true;
    $M.15 := $i8;
    call {:si_unique_call 502} {:cexpr "me"} boogie_si_record_i32($i8);
    goto corral_source_split_2799;

  corral_source_split_2799:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb3:
    assume $i5 == 1;
    goto corral_source_split_2793;

  corral_source_split_2793:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 19);
    goto $bb5;
}



const ldv_check_final_state: ref;

axiom ldv_check_final_state == $sub.ref(0, 99573);

procedure ldv_check_final_state();
  free requires assertsPassed;



implementation ldv_check_final_state()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2801;

  corral_source_split_2801:
    assume {:verifier.code 0} true;
    return;
}



const opl3_detect: ref;

axiom opl3_detect == $sub.ref(0, 100605);

procedure opl3_detect($i0: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.1, $M.0, $M.16, $CurrAddr;



implementation opl3_detect($i0: i32) returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p6: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $i17: i64;
  var $p18: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i1;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $i55: i32;
  var $i56: i32;
  var $i57: i8;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i64;
  var $i64: i32;
  var $i65: i64;
  var $p66: ref;
  var $p67: ref;
  var $i5: i32;
  var vslice_dummy_var_75: i32;
  var vslice_dummy_var_76: i32;
  var vslice_dummy_var_77: ref;
  var vslice_dummy_var_78: i32;
  var vslice_dummy_var_79: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 503} {:cexpr "opl3_detect:arg:ioaddr"} boogie_si_record_i32($i0);
    goto corral_source_split_2803;

  corral_source_split_2803:
    assume {:verifier.code 0} true;
    $p1 := $M.1;
    goto corral_source_split_2804;

  corral_source_split_2804:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p1);
    goto corral_source_split_2805;

  corral_source_split_2805:
    assume {:verifier.code 0} true;
    $i3 := $ne.i64($i2, 0);
    goto corral_source_split_2806;

  corral_source_split_2806:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    call {:si_unique_call 505} $p6 := kzalloc(11656, 208);
    goto corral_source_split_2813;

  corral_source_split_2813:
    assume {:verifier.code 0} true;
    goto corral_source_split_2814;

  corral_source_split_2814:
    assume {:verifier.code 0} true;
    $M.1 := $p6;
    goto corral_source_split_2815;

  corral_source_split_2815:
    assume {:verifier.code 0} true;
    $p8 := $M.1;
    goto corral_source_split_2816;

  corral_source_split_2816:
    assume {:verifier.code 0} true;
    $i9 := $p2i.ref.i64($p8);
    goto corral_source_split_2817;

  corral_source_split_2817:
    assume {:verifier.code 0} true;
    $i10 := $eq.i64($i9, 0);
    goto corral_source_split_2818;

  corral_source_split_2818:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $p12 := $M.1;
    goto corral_source_split_2823;

  corral_source_split_2823:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($add.ref($p12, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_2824;

  corral_source_split_2824:
    assume {:verifier.code 0} true;
    $p15 := $bitcast.ref.ref($p14);
    goto corral_source_split_2825;

  corral_source_split_2825:
    assume {:verifier.code 0} true;
    call {:si_unique_call 507} vslice_dummy_var_77 := strcpy($p15, .str.10);
    goto corral_source_split_2826;

  corral_source_split_2826:
    assume {:verifier.code 0} true;
    $i17 := $sext.i32.i64($i0);
    goto corral_source_split_2827;

  corral_source_split_2827:
    assume {:verifier.code 0} true;
    $p18 := $M.1;
    goto corral_source_split_2828;

  corral_source_split_2828:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($add.ref($p18, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_2829;

  corral_source_split_2829:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p20);
    goto corral_source_split_2830;

  corral_source_split_2830:
    assume {:verifier.code 0} true;
    call {:si_unique_call 508} $p22 := __request_region(ioport_resource, $i17, 4, $p21, 0);
    goto corral_source_split_2831;

  corral_source_split_2831:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p22);
    goto corral_source_split_2832;

  corral_source_split_2832:
    assume {:verifier.code 0} true;
    $i24 := $eq.i64($i23, 0);
    goto corral_source_split_2833;

  corral_source_split_2833:
    assume {:verifier.code 0} true;
    assume {:branchcond $i24} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i24 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $p26 := $M.1;
    goto corral_source_split_2843;

  corral_source_split_2843:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($p26, $mul.ref(0, 11656)), $mul.ref(0, 1));
    goto corral_source_split_2844;

  corral_source_split_2844:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p27, $i0);
    goto corral_source_split_2845;

  corral_source_split_2845:
    assume {:verifier.code 0} true;
    call {:si_unique_call 511} opl3_command($i0, 4, 96);
    goto corral_source_split_2846;

  corral_source_split_2846:
    assume {:verifier.code 0} true;
    call {:si_unique_call 512} opl3_command($i0, 4, 128);
    goto corral_source_split_2847;

  corral_source_split_2847:
    assume {:verifier.code 0} true;
    call {:si_unique_call 513} $i28 := inb($i0);
    call {:si_unique_call 514} {:cexpr "stat1"} boogie_si_record_i8($i28);
    goto corral_source_split_2848;

  corral_source_split_2848:
    assume {:verifier.code 0} true;
    $i29 := $zext.i8.i32($i28);
    goto corral_source_split_2849;

  corral_source_split_2849:
    assume {:verifier.code 0} true;
    $i30 := $ne.i32($i29, 0);
    goto corral_source_split_2850;

  corral_source_split_2850:
    assume {:verifier.code 0} true;
    assume {:branchcond $i30} true;
    goto $bb12, $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    assume !($i30 == 1);
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i39 := $zext.i8.i32($i28);
    goto corral_source_split_2871;

  corral_source_split_2871:
    assume {:verifier.code 0} true;
    $i40 := $eq.i32($i39, 6);
    goto corral_source_split_2872;

  corral_source_split_2872:
    assume {:verifier.code 0} true;
    assume {:branchcond $i40} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i40 == 1);
    goto corral_source_split_2877;

  corral_source_split_2877:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i28);
    goto corral_source_split_2878;

  corral_source_split_2878:
    assume {:verifier.code 0} true;
    $i42 := $eq.i32($i41, 0);
    goto corral_source_split_2879;

  corral_source_split_2879:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb26, $bb28;

  $bb28:
    assume !($i42 == 1);
    goto corral_source_split_2890;

  corral_source_split_2890:
    assume {:verifier.code 0} true;
    $i43 := $zext.i8.i32($i28);
    goto corral_source_split_2891;

  corral_source_split_2891:
    assume {:verifier.code 0} true;
    $i44 := $eq.i32($i43, 15);
    goto corral_source_split_2892;

  corral_source_split_2892:
    assume {:verifier.code 0} true;
    assume {:branchcond $i44} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i44 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    call {:si_unique_call 539} opl3_command($i0, 176, 0);
    goto corral_source_split_2930;

  corral_source_split_2930:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    call {:si_unique_call 540} opl3_command($i0, 177, 0);
    goto corral_source_split_2932;

  corral_source_split_2932:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    call {:si_unique_call 543} opl3_command($i0, 178, 0);
    goto corral_source_split_2937;

  corral_source_split_2937:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    call {:si_unique_call 544} opl3_command($i0, 179, 0);
    goto corral_source_split_2939;

  corral_source_split_2939:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    call {:si_unique_call 545} opl3_command($i0, 180, 0);
    goto corral_source_split_2941;

  corral_source_split_2941:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    call {:si_unique_call 546} opl3_command($i0, 181, 0);
    goto corral_source_split_2943;

  corral_source_split_2943:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    call {:si_unique_call 547} opl3_command($i0, 182, 0);
    goto corral_source_split_2945;

  corral_source_split_2945:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    call {:si_unique_call 548} opl3_command($i0, 183, 0);
    goto corral_source_split_2947;

  corral_source_split_2947:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    call {:si_unique_call 549} opl3_command($i0, 184, 0);
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    call {:si_unique_call 541} opl3_command($i0, 1, 32);
    goto corral_source_split_2934;

  corral_source_split_2934:
    assume {:verifier.code 0} true;
    call {:si_unique_call 542} opl3_command($i0, 189, 0);
    goto corral_source_split_2935;

  corral_source_split_2935:
    assume {:verifier.code 0} true;
    $i5 := 1;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2811;

  corral_source_split_2811:
    assume {:verifier.code 0} true;
    $r := $i5;
    return;

  $bb29:
    assume {:verifier.code 0} true;
    assume $i44 == 1;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $M.16 := 3;
    call {:si_unique_call 518} {:cexpr "detected_model"} boogie_si_record_i32(3);
    goto corral_source_split_2881;

  corral_source_split_2881:
    assume {:verifier.code 0} true;
    $i45 := $add.i32($i0, 2);
    goto corral_source_split_2882;

  corral_source_split_2882:
    assume {:verifier.code 0} true;
    call {:si_unique_call 519} opl3_command($i45, 5, 0);
    goto corral_source_split_2883;

  corral_source_split_2883:
    assume {:verifier.code 0} true;
    $i46 := $add.i32($i0, 2);
    goto corral_source_split_2884;

  corral_source_split_2884:
    assume {:verifier.code 0} true;
    call {:si_unique_call 520} opl3_command($i46, 5, 3);
    goto corral_source_split_2885;

  corral_source_split_2885:
    assume {:verifier.code 0} true;
    call {:si_unique_call 521} $i47 := inb($i0);
    call {:si_unique_call 522} {:cexpr "tmp___1"} boogie_si_record_i8($i47);
    goto corral_source_split_2886;

  corral_source_split_2886:
    assume {:verifier.code 0} true;
    $i48 := $zext.i8.i32($i47);
    goto corral_source_split_2887;

  corral_source_split_2887:
    assume {:verifier.code 0} true;
    $i49 := $eq.i32($i48, 2);
    goto corral_source_split_2888;

  corral_source_split_2888:
    assume {:verifier.code 0} true;
    assume {:branchcond $i49} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i49 == 1);
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i0, $sub.i32(0, 8));
    goto corral_source_split_2897;

  corral_source_split_2897:
    assume {:verifier.code 0} true;
    $i51 := $sext.i32.i64($i50);
    goto corral_source_split_2898;

  corral_source_split_2898:
    assume {:verifier.code 0} true;
    call {:si_unique_call 524} $p52 := __request_region(ioport_resource, $i51, 2, .str.13, 0);
    goto corral_source_split_2899;

  corral_source_split_2899:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p52);
    goto corral_source_split_2900;

  corral_source_split_2900:
    assume {:verifier.code 0} true;
    $i54 := $ne.i64($i53, 0);
    goto corral_source_split_2901;

  corral_source_split_2901:
    assume {:verifier.code 0} true;
    assume {:branchcond $i54} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i54 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i64 := $add.i32($i0, 2);
    goto corral_source_split_2927;

  corral_source_split_2927:
    assume {:verifier.code 0} true;
    call {:si_unique_call 538} opl3_command($i64, 5, 0);
    goto corral_source_split_2928;

  corral_source_split_2928:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb34:
    assume $i54 == 1;
    goto corral_source_split_2903;

  corral_source_split_2903:
    assume {:verifier.code 0} true;
    $i55 := $add.i32($i0, $sub.i32(0, 8));
    goto corral_source_split_2904;

  corral_source_split_2904:
    assume {:verifier.code 0} true;
    call {:si_unique_call 525} outb(2, $i55);
    goto corral_source_split_2905;

  corral_source_split_2905:
    assume {:verifier.code 0} true;
    call {:si_unique_call 526} __const_udelay(42950);
    goto corral_source_split_2906;

  corral_source_split_2906:
    assume {:verifier.code 0} true;
    $i56 := $add.i32($i0, $sub.i32(0, 7));
    goto corral_source_split_2907;

  corral_source_split_2907:
    assume {:verifier.code 0} true;
    call {:si_unique_call 527} $i57 := inb($i56);
    call {:si_unique_call 528} {:cexpr "tmp___3"} boogie_si_record_i8($i57);
    goto corral_source_split_2908;

  corral_source_split_2908:
    assume {:verifier.code 0} true;
    $i58 := $zext.i8.i32($i57);
    call {:si_unique_call 529} {:cexpr "tmp___2"} boogie_si_record_i32($i58);
    goto corral_source_split_2909;

  corral_source_split_2909:
    assume {:verifier.code 0} true;
    call {:si_unique_call 530} __const_udelay(42950);
    goto corral_source_split_2910;

  corral_source_split_2910:
    assume {:verifier.code 0} true;
    $i59 := $eq.i32($i58, 32);
    goto corral_source_split_2911;

  corral_source_split_2911:
    assume {:verifier.code 0} true;
    assume {:branchcond $i59} true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i59 == 1);
    goto corral_source_split_2922;

  corral_source_split_2922:
    assume {:verifier.code 0} true;
    $i62 := $add.i32($i0, $sub.i32(0, 8));
    goto corral_source_split_2923;

  corral_source_split_2923:
    assume {:verifier.code 0} true;
    $i63 := $sext.i32.i64($i62);
    goto corral_source_split_2924;

  corral_source_split_2924:
    assume {:verifier.code 0} true;
    call {:si_unique_call 536} __release_region(ioport_resource, $i63, 2);
    goto corral_source_split_2925;

  corral_source_split_2925:
    assume {:verifier.code 0} true;
    $M.16 := 3;
    call {:si_unique_call 537} {:cexpr "detected_model"} boogie_si_record_i32(3);
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb36:
    assume $i59 == 1;
    goto corral_source_split_2913;

  corral_source_split_2913:
    assume {:verifier.code 0} true;
    $M.16 := 4;
    call {:si_unique_call 531} {:cexpr "detected_model"} boogie_si_record_i32(4);
    goto corral_source_split_2914;

  corral_source_split_2914:
    assume {:verifier.code 0} true;
    $i60 := $add.i32($i0, $sub.i32(0, 8));
    goto corral_source_split_2915;

  corral_source_split_2915:
    assume {:verifier.code 0} true;
    call {:si_unique_call 532} outb($sub.i8(0, 8), $i60);
    goto corral_source_split_2916;

  corral_source_split_2916:
    assume {:verifier.code 0} true;
    call {:si_unique_call 533} __const_udelay(42950);
    goto corral_source_split_2917;

  corral_source_split_2917:
    assume {:verifier.code 0} true;
    $i61 := $add.i32($i0, $sub.i32(0, 7));
    goto corral_source_split_2918;

  corral_source_split_2918:
    assume {:verifier.code 0} true;
    call {:si_unique_call 534} outb(27, $i61);
    goto corral_source_split_2919;

  corral_source_split_2919:
    assume {:verifier.code 0} true;
    call {:si_unique_call 535} __const_udelay(42950);
    goto corral_source_split_2920;

  corral_source_split_2920:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb31:
    assume $i49 == 1;
    goto corral_source_split_2894;

  corral_source_split_2894:
    assume {:verifier.code 0} true;
    $M.16 := 4;
    call {:si_unique_call 523} {:cexpr "detected_model"} boogie_si_record_i32(4);
    goto corral_source_split_2895;

  corral_source_split_2895:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb26:
    assume {:verifier.code 0} true;
    assume $i42 == 1;
    goto $bb27;

  $bb23:
    assume $i40 == 1;
    goto corral_source_split_2874;

  corral_source_split_2874:
    assume {:verifier.code 0} true;
    $M.16 := 2;
    call {:si_unique_call 517} {:cexpr "detected_model"} boogie_si_record_i32(2);
    goto corral_source_split_2875;

  corral_source_split_2875:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb12:
    assume $i30 == 1;
    goto corral_source_split_2852;

  corral_source_split_2852:
    assume {:verifier.code 0} true;
    $i31 := $zext.i8.i32($i28);
    goto corral_source_split_2853;

  corral_source_split_2853:
    assume {:verifier.code 0} true;
    $i32 := $ne.i32($i31, 6);
    goto corral_source_split_2854;

  corral_source_split_2854:
    assume {:verifier.code 0} true;
    assume {:branchcond $i32} true;
    goto $bb15, $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    assume !($i32 == 1);
    goto $bb14;

  $bb15:
    assume $i32 == 1;
    goto corral_source_split_2856;

  corral_source_split_2856:
    assume {:verifier.code 0} true;
    $i33 := $zext.i8.i32($i28);
    goto corral_source_split_2857;

  corral_source_split_2857:
    assume {:verifier.code 0} true;
    $i34 := $ne.i32($i33, 2);
    goto corral_source_split_2858;

  corral_source_split_2858:
    assume {:verifier.code 0} true;
    assume {:branchcond $i34} true;
    goto $bb17, $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume !($i34 == 1);
    goto $bb14;

  $bb17:
    assume $i34 == 1;
    goto corral_source_split_2860;

  corral_source_split_2860:
    assume {:verifier.code 0} true;
    $i35 := $zext.i8.i32($i28);
    goto corral_source_split_2861;

  corral_source_split_2861:
    assume {:verifier.code 0} true;
    $i36 := $ne.i32($i35, 15);
    goto corral_source_split_2862;

  corral_source_split_2862:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb19, $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    assume !($i36 == 1);
    goto $bb14;

  $bb19:
    assume $i36 == 1;
    goto corral_source_split_2864;

  corral_source_split_2864:
    assume {:verifier.code 0} true;
    $i37 := $zext.i8.i32($i28);
    goto corral_source_split_2865;

  corral_source_split_2865:
    assume {:verifier.code 0} true;
    call {:si_unique_call 515} vslice_dummy_var_79 := printk.ref.i32(.str.12, $i37);
    goto corral_source_split_2866;

  corral_source_split_2866:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i65 := $sext.i32.i64($i0);
    goto corral_source_split_2868;

  corral_source_split_2868:
    assume {:verifier.code 0} true;
    call {:si_unique_call 516} __release_region(ioport_resource, $i65, 4);
    goto corral_source_split_2869;

  corral_source_split_2869:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $p66 := $M.1;
    goto corral_source_split_2838;

  corral_source_split_2838:
    assume {:verifier.code 0} true;
    $p67 := $bitcast.ref.ref($p66);
    goto corral_source_split_2839;

  corral_source_split_2839:
    assume {:verifier.code 0} true;
    call {:si_unique_call 510} kfree($p67);
    goto corral_source_split_2840;

  corral_source_split_2840:
    assume {:verifier.code 0} true;
    $M.1 := $0.ref;
    goto corral_source_split_2841;

  corral_source_split_2841:
    assume {:verifier.code 0} true;
    $i5 := 0;
    goto $bb3;

  $bb8:
    assume $i24 == 1;
    goto corral_source_split_2835;

  corral_source_split_2835:
    assume {:verifier.code 0} true;
    call {:si_unique_call 509} vslice_dummy_var_78 := printk.ref.i32(.str.11, $i0);
    goto corral_source_split_2836;

  corral_source_split_2836:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb5:
    assume $i10 == 1;
    goto corral_source_split_2820;

  corral_source_split_2820:
    assume {:verifier.code 0} true;
    call {:si_unique_call 506} vslice_dummy_var_76 := printk.ref(.str.9);
    goto corral_source_split_2821;

  corral_source_split_2821:
    assume {:verifier.code 0} true;
    $i5 := 0;
    goto $bb3;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_2808;

  corral_source_split_2808:
    assume {:verifier.code 0} true;
    call {:si_unique_call 504} vslice_dummy_var_75 := printk.ref(.str.8);
    goto corral_source_split_2809;

  corral_source_split_2809:
    assume {:verifier.code 0} true;
    $i5 := 0;
    goto $bb3;
}



const opl3_init: ref;

axiom opl3_init == $sub.ref(0, 101637);

procedure opl3_init($i0: i32, $p1: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.2;



implementation opl3_init($i0: i32, $p1: ref) returns ($r: i32)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p17: ref;
  var $p18: ref;
  var $p20: ref;
  var $p21: ref;
  var $p23: ref;
  var $p24: ref;
  var $p26: ref;
  var $p27: ref;
  var $p29: ref;
  var $p30: ref;
  var $p32: ref;
  var $p33: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $p54: ref;
  var $i55: i64;
  var $i56: i1;
  var $i57: i64;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i1;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $p73: ref;
  var $p75: ref;
  var $p76: ref;
  var $p78: ref;
  var $p80: ref;
  var $p81: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p91: ref;
  var $p92: ref;
  var $p94: ref;
  var $p95: ref;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $p100: ref;
  var $p102: ref;
  var $i103: i16;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $i109: i16;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $i113: i16;
  var $p114: ref;
  var $p115: ref;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $p120: ref;
  var $p122: ref;
  var $p123: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i16;
  var $p138: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p145: ref;
  var $i6: i32;
  var $p146: ref;
  var $p149: ref;
  var $p150: ref;
  var $p153: ref;
  var $p154: ref;
  var $p157: ref;
  var $p158: ref;
  var $p161: ref;
  var $p162: ref;
  var $p165: ref;
  var $p166: ref;
  var $p169: ref;
  var $p170: ref;
  var $p173: ref;
  var $p174: ref;
  var $p177: ref;
  var $p178: ref;
  var $p181: ref;
  var $p182: ref;
  var $p185: ref;
  var $p186: ref;
  var $p189: ref;
  var $p190: ref;
  var $p193: ref;
  var $p194: ref;
  var $p197: ref;
  var $p198: ref;
  var $p201: ref;
  var $p202: ref;
  var $p205: ref;
  var $p206: ref;
  var $p209: ref;
  var $p210: ref;
  var $p213: ref;
  var $p214: ref;
  var $p217: ref;
  var $p218: ref;
  var $p221: ref;
  var $p222: ref;
  var $p225: ref;
  var $p226: ref;
  var $p229: ref;
  var $p230: ref;
  var $p233: ref;
  var $p234: ref;
  var $p237: ref;
  var $p238: ref;
  var $p241: ref;
  var $p242: ref;
  var $p245: ref;
  var $p246: ref;
  var $p249: ref;
  var $p250: ref;
  var $p253: ref;
  var $p254: ref;
  var $p257: ref;
  var $p258: ref;
  var $p261: ref;
  var $p262: ref;
  var $p265: ref;
  var $p266: ref;
  var $p269: ref;
  var $p270: ref;
  var $p273: ref;
  var $p274: ref;
  var $p277: ref;
  var $p278: ref;
  var $p281: ref;
  var $p282: ref;
  var $p285: ref;
  var $p286: ref;
  var $p289: ref;
  var $p290: ref;
  var $p293: ref;
  var $p294: ref;
  var $p297: ref;
  var $p298: ref;
  var $p301: ref;
  var $p302: ref;
  var $p305: ref;
  var $p306: ref;
  var $p309: ref;
  var $p310: ref;
  var $p313: ref;
  var $p314: ref;
  var $p317: ref;
  var $p318: ref;
  var $p321: ref;
  var $p322: ref;
  var $p325: ref;
  var $p326: ref;
  var $p329: ref;
  var $p330: ref;
  var $p333: ref;
  var $p334: ref;
  var $p337: ref;
  var $p338: ref;
  var $p341: ref;
  var $p342: ref;
  var $p345: ref;
  var $p346: ref;
  var $p349: ref;
  var $p350: ref;
  var $p353: ref;
  var $p354: ref;
  var $p357: ref;
  var $p358: ref;
  var $p361: ref;
  var $p362: ref;
  var $p365: ref;
  var $p366: ref;
  var $p369: ref;
  var $p370: ref;
  var $p373: ref;
  var $p374: ref;
  var $p377: ref;
  var $p378: ref;
  var $p381: ref;
  var $p382: ref;
  var $p385: ref;
  var $p386: ref;
  var $p389: ref;
  var $p390: ref;
  var $p393: ref;
  var $p394: ref;
  var $p397: ref;
  var $p398: ref;
  var $p401: ref;
  var $p402: ref;
  var $p405: ref;
  var $p406: ref;
  var $p409: ref;
  var $p410: ref;
  var $p413: ref;
  var $p414: ref;
  var $p417: ref;
  var $p418: ref;
  var $p421: ref;
  var $p422: ref;
  var $p425: ref;
  var $p426: ref;
  var $p429: ref;
  var $p430: ref;
  var $p433: ref;
  var $p434: ref;
  var $p437: ref;
  var $p438: ref;
  var $p441: ref;
  var $p442: ref;
  var $p445: ref;
  var $p446: ref;
  var $p449: ref;
  var $p450: ref;
  var $p453: ref;
  var $p454: ref;
  var $p457: ref;
  var $p458: ref;
  var $p461: ref;
  var $p462: ref;
  var $p465: ref;
  var $p466: ref;
  var $p469: ref;
  var $p470: ref;
  var $p473: ref;
  var $p474: ref;
  var $p477: ref;
  var $p478: ref;
  var $p481: ref;
  var $p482: ref;
  var $p485: ref;
  var $p486: ref;
  var $p489: ref;
  var $p490: ref;
  var $p493: ref;
  var $p494: ref;
  var $p497: ref;
  var $p498: ref;
  var $p501: ref;
  var $p502: ref;
  var $p505: ref;
  var $p506: ref;
  var $p509: ref;
  var $p510: ref;
  var $p513: ref;
  var $p514: ref;
  var $p517: ref;
  var $p518: ref;
  var $p521: ref;
  var $p522: ref;
  var $p525: ref;
  var $p526: ref;
  var $p529: ref;
  var $p530: ref;
  var $p533: ref;
  var $p534: ref;
  var $p537: ref;
  var $p538: ref;
  var $p541: ref;
  var $p542: ref;
  var $p545: ref;
  var $p546: ref;
  var $p549: ref;
  var $p550: ref;
  var $p553: ref;
  var $p554: ref;
  var $p557: ref;
  var $p558: ref;
  var $p561: ref;
  var $p562: ref;
  var $p565: ref;
  var $p566: ref;
  var $p569: ref;
  var $p570: ref;
  var $p573: ref;
  var $p574: ref;
  var $p577: ref;
  var $p578: ref;
  var $p581: ref;
  var $p582: ref;
  var $p585: ref;
  var $p586: ref;
  var $p589: ref;
  var $p590: ref;
  var $p593: ref;
  var $p594: ref;
  var $p597: ref;
  var $p598: ref;
  var $p601: ref;
  var $p602: ref;
  var $p605: ref;
  var $p606: ref;
  var $p609: ref;
  var $p610: ref;
  var $p613: ref;
  var $p614: ref;
  var $p617: ref;
  var $p618: ref;
  var $p621: ref;
  var $p622: ref;
  var $p625: ref;
  var $p626: ref;
  var $p629: ref;
  var $p630: ref;
  var $p633: ref;
  var $p634: ref;
  var $p637: ref;
  var $p638: ref;
  var $p641: ref;
  var $p642: ref;
  var $p645: ref;
  var $p646: ref;
  var $p649: ref;
  var $p650: ref;
  var $p653: ref;
  var $p654: ref;
  var $p657: ref;
  var $p658: ref;
  var $p661: ref;
  var $p662: ref;
  var $p665: ref;
  var $p666: ref;
  var $p669: ref;
  var $p670: ref;
  var $p673: ref;
  var $p674: ref;
  var $p677: ref;
  var $p678: ref;
  var $p681: ref;
  var $p682: ref;
  var $p685: ref;
  var $p686: ref;
  var $p689: ref;
  var $p690: ref;
  var $p693: ref;
  var $p694: ref;
  var $p697: ref;
  var $p698: ref;
  var $p701: ref;
  var $p702: ref;
  var $p705: ref;
  var $p706: ref;
  var $p709: ref;
  var $p710: ref;
  var $p713: ref;
  var $p714: ref;
  var $p717: ref;
  var $p718: ref;
  var $p721: ref;
  var $p722: ref;
  var $p725: ref;
  var $p726: ref;
  var $p729: ref;
  var $p730: ref;
  var $p733: ref;
  var $p734: ref;
  var $p737: ref;
  var $p738: ref;
  var $p741: ref;
  var $p742: ref;
  var $p745: ref;
  var $p746: ref;
  var $p749: ref;
  var $p750: ref;
  var $p753: ref;
  var $p754: ref;
  var $p757: ref;
  var $p758: ref;
  var $p761: ref;
  var $p762: ref;
  var $p765: ref;
  var $p766: ref;
  var $p769: ref;
  var $p770: ref;
  var $p773: ref;
  var $p774: ref;
  var $p777: ref;
  var $p778: ref;
  var $p781: ref;
  var $p782: ref;
  var $p785: ref;
  var $p786: ref;
  var $p789: ref;
  var $p790: ref;
  var $p793: ref;
  var $p794: ref;
  var $p797: ref;
  var $p798: ref;
  var $p801: ref;
  var $p802: ref;
  var $p805: ref;
  var $p806: ref;
  var $p809: ref;
  var $p810: ref;
  var $p813: ref;
  var $p814: ref;
  var $p817: ref;
  var $p818: ref;
  var $p821: ref;
  var $p822: ref;
  var $p825: ref;
  var $p826: ref;
  var $p829: ref;
  var $p830: ref;
  var $p833: ref;
  var $p834: ref;
  var $p837: ref;
  var $p838: ref;
  var $p841: ref;
  var $p842: ref;
  var $p845: ref;
  var $p846: ref;
  var $p849: ref;
  var $p850: ref;
  var $p853: ref;
  var $p854: ref;
  var $p857: ref;
  var $p858: ref;
  var $p861: ref;
  var $p862: ref;
  var $p865: ref;
  var $p866: ref;
  var $p869: ref;
  var $p870: ref;
  var $p873: ref;
  var $p874: ref;
  var $p877: ref;
  var $p878: ref;
  var $p881: ref;
  var $p882: ref;
  var $p885: ref;
  var $p886: ref;
  var $p889: ref;
  var $p890: ref;
  var $p893: ref;
  var $p894: ref;
  var $p897: ref;
  var $p898: ref;
  var $p901: ref;
  var $p902: ref;
  var $p905: ref;
  var $p906: ref;
  var $p909: ref;
  var $p910: ref;
  var $p913: ref;
  var $p914: ref;
  var $p917: ref;
  var $p918: ref;
  var $p921: ref;
  var $p922: ref;
  var $p925: ref;
  var $p926: ref;
  var $p929: ref;
  var $p930: ref;
  var $p933: ref;
  var $p934: ref;
  var $p937: ref;
  var $p938: ref;
  var $p941: ref;
  var $p942: ref;
  var $p945: ref;
  var $p946: ref;
  var $p949: ref;
  var $p950: ref;
  var $p953: ref;
  var $p954: ref;
  var $p957: ref;
  var $p958: ref;
  var $p961: ref;
  var $p962: ref;
  var $p965: ref;
  var $p966: ref;
  var $p969: ref;
  var $p970: ref;
  var $p973: ref;
  var $p974: ref;
  var $p977: ref;
  var $p978: ref;
  var $p981: ref;
  var $p982: ref;
  var $p985: ref;
  var $p986: ref;
  var $p989: ref;
  var $p990: ref;
  var $p993: ref;
  var $p994: ref;
  var $p997: ref;
  var $p998: ref;
  var $p1001: ref;
  var $p1002: ref;
  var $p1005: ref;
  var $p1006: ref;
  var $p1009: ref;
  var $p1010: ref;
  var $p1013: ref;
  var $p1014: ref;
  var $p1017: ref;
  var $p1018: ref;
  var $p1021: ref;
  var $p1022: ref;
  var $p1025: ref;
  var $p1026: ref;
  var $p1029: ref;
  var $p1030: ref;
  var $p1033: ref;
  var $p1034: ref;
  var $p1037: ref;
  var $p1038: ref;
  var $p1041: ref;
  var $p1042: ref;
  var $p1045: ref;
  var $p1046: ref;
  var $p1049: ref;
  var $p1050: ref;
  var $p1053: ref;
  var $p1054: ref;
  var $p1057: ref;
  var $p1058: ref;
  var $p1061: ref;
  var $p1062: ref;
  var $p1065: ref;
  var $p1066: ref;
  var $p1069: ref;
  var $p1070: ref;
  var $p1073: ref;
  var $p1074: ref;
  var $p1077: ref;
  var $p1078: ref;
  var $p1081: ref;
  var $p1082: ref;
  var $p1085: ref;
  var $p1086: ref;
  var $p1089: ref;
  var $p1090: ref;
  var $p1093: ref;
  var $p1094: ref;
  var $p1097: ref;
  var $p1098: ref;
  var $p1101: ref;
  var $p1102: ref;
  var $p1105: ref;
  var $p1106: ref;
  var $p1109: ref;
  var $p1110: ref;
  var $p1113: ref;
  var $p1114: ref;
  var $p1117: ref;
  var $p1118: ref;
  var $p1121: ref;
  var $p1122: ref;
  var $p1125: ref;
  var $p1126: ref;
  var $p1129: ref;
  var $p1130: ref;
  var $p1133: ref;
  var $p1134: ref;
  var $p1137: ref;
  var $p1138: ref;
  var $p1141: ref;
  var $p1142: ref;
  var $p1145: ref;
  var $p1146: ref;
  var $p1149: ref;
  var $p1150: ref;
  var $p1153: ref;
  var $p1154: ref;
  var $p1157: ref;
  var $p1158: ref;
  var $p1161: ref;
  var $p1162: ref;
  var $p1165: ref;
  var $i1166: i16;
  var $i1167: i32;
  var $i1168: i1;
  var $p1169: ref;
  var $p1170: ref;
  var $i1171: i32;
  var $i1172: i16;
  var $p1173: ref;
  var $p1174: ref;
  var $i1175: i32;
  var $i1176: i16;
  var $i1177: i16;
  var $i1178: i32;
  var $i1179: i1;
  var $p1180: ref;
  var $p1181: ref;
  var $i1182: i32;
  var $i1183: i16;
  var $p1184: ref;
  var $p1185: ref;
  var $i1186: i32;
  var $i1187: i16;
  var $i1188: i16;
  var $i1189: i32;
  var $i1190: i1;
  var $p1191: ref;
  var $p1192: ref;
  var $i1193: i32;
  var $i1194: i16;
  var $p1195: ref;
  var $p1196: ref;
  var $i1197: i32;
  var $i1198: i16;
  var $i1199: i16;
  var $i1200: i32;
  var $i1201: i1;
  var $p1202: ref;
  var $p1203: ref;
  var $i1204: i32;
  var $i1205: i16;
  var $p1206: ref;
  var $p1207: ref;
  var $i1208: i32;
  var $i1209: i16;
  var $i1210: i16;
  var $i1211: i32;
  var $i1212: i1;
  var $p1213: ref;
  var $p1214: ref;
  var $i1215: i32;
  var $i1216: i16;
  var $p1217: ref;
  var $p1218: ref;
  var $i1219: i32;
  var $i1220: i16;
  var $i1221: i16;
  var $i1222: i32;
  var $i1223: i1;
  var $p1224: ref;
  var $p1225: ref;
  var $i1226: i32;
  var $i1227: i16;
  var $p1228: ref;
  var $p1229: ref;
  var $i1230: i32;
  var $i1231: i16;
  var $i1232: i16;
  var $i1233: i32;
  var $i1234: i1;
  var $p1235: ref;
  var $p1236: ref;
  var $i1237: i32;
  var $i1238: i16;
  var $p1239: ref;
  var $p1240: ref;
  var $i1241: i32;
  var $i1242: i16;
  var $i1243: i16;
  var $i1244: i32;
  var $i1245: i1;
  var $p1246: ref;
  var $p1247: ref;
  var $i1248: i32;
  var $i1249: i16;
  var $p1250: ref;
  var $p1251: ref;
  var $i1252: i32;
  var $i1253: i16;
  var $i1254: i16;
  var $i1255: i32;
  var $i1256: i1;
  var $p1257: ref;
  var $p1258: ref;
  var $i1259: i32;
  var $i1260: i16;
  var $p1261: ref;
  var $p1262: ref;
  var $i1263: i32;
  var $i1264: i16;
  var $i1265: i16;
  var $i1266: i32;
  var $i1267: i1;
  var $p1268: ref;
  var $p1269: ref;
  var $i1270: i32;
  var $i1271: i16;
  var $p1272: ref;
  var $p1273: ref;
  var $i1274: i32;
  var $i1275: i16;
  var $i1276: i16;
  var $i1277: i32;
  var $i1278: i1;
  var $p1279: ref;
  var $p1280: ref;
  var $i1281: i32;
  var $i1282: i16;
  var $p1283: ref;
  var $p1284: ref;
  var $i1285: i32;
  var $i1286: i16;
  var $i1287: i16;
  var $i1288: i32;
  var $i1289: i1;
  var $p1290: ref;
  var $p1291: ref;
  var $i1292: i32;
  var $i1293: i16;
  var $p1294: ref;
  var $p1295: ref;
  var $i1296: i32;
  var $i1297: i16;
  var $i1298: i16;
  var $i1299: i32;
  var $i1300: i1;
  var $p1301: ref;
  var $p1302: ref;
  var $i1303: i32;
  var $i1304: i16;
  var $p1305: ref;
  var $p1306: ref;
  var $i1307: i32;
  var $i1308: i16;
  var $i1309: i16;
  var $i1310: i32;
  var $i1311: i1;
  var $p1312: ref;
  var $p1313: ref;
  var $i1314: i32;
  var $i1315: i16;
  var $p1316: ref;
  var $p1317: ref;
  var $i1318: i32;
  var $i1319: i16;
  var $i1320: i16;
  var $i1321: i32;
  var $i1322: i1;
  var $p1323: ref;
  var $p1324: ref;
  var $i1325: i32;
  var $i1326: i16;
  var $p1327: ref;
  var $p1328: ref;
  var $i1329: i32;
  var $i1330: i16;
  var $i1331: i16;
  var $i1332: i32;
  var $i1333: i1;
  var $p1334: ref;
  var $p1335: ref;
  var $i1336: i32;
  var $i1337: i16;
  var $p1338: ref;
  var $p1339: ref;
  var $i1340: i32;
  var $i1341: i16;
  var $i1342: i16;
  var $i1343: i32;
  var $i1344: i1;
  var $p1345: ref;
  var $p1346: ref;
  var $i1347: i32;
  var $i1348: i16;
  var $p1349: ref;
  var $p1350: ref;
  var $i1351: i32;
  var $i1352: i16;
  var $p1353: ref;
  var $p1354: ref;
  var $i1355: i32;
  var $i1356: i16;
  var $p1357: ref;
  var $p1358: ref;
  var $i1359: i32;
  var $i1360: i16;
  var $p1361: ref;
  var $p1362: ref;
  var $i1363: i32;
  var $i1364: i16;
  var $p1365: ref;
  var $p1366: ref;
  var $i1367: i32;
  var $i1368: i16;
  var $p1369: ref;
  var $p1370: ref;
  var $i1371: i32;
  var $i1372: i16;
  var $p1373: ref;
  var $p1374: ref;
  var $i1375: i32;
  var $i1376: i16;
  var $p1377: ref;
  var $p1378: ref;
  var $i1379: i32;
  var $i1380: i16;
  var $p1381: ref;
  var $p1382: ref;
  var $i1383: i32;
  var $i1384: i16;
  var $p1385: ref;
  var $p1386: ref;
  var $i1387: i32;
  var $i1388: i16;
  var $p1389: ref;
  var $p1390: ref;
  var $i1391: i32;
  var $i1392: i16;
  var $p1393: ref;
  var $p1394: ref;
  var $i1395: i32;
  var $i1396: i16;
  var $p1397: ref;
  var $p1398: ref;
  var $i1399: i32;
  var $i1400: i16;
  var $p1401: ref;
  var $p1402: ref;
  var $i1403: i32;
  var $i1404: i16;
  var $p1405: ref;
  var $p1406: ref;
  var $i1407: i32;
  var $i1408: i16;
  var $p1409: ref;
  var $p1410: ref;
  var $i1411: i32;
  var $i1412: i16;
  var $p1413: ref;
  var $p1414: ref;
  var $i1415: i32;
  var $i1416: i16;
  var $p1417: ref;
  var $p1418: ref;
  var $i1419: i32;
  var $i1420: i16;
  var vslice_dummy_var_80: i32;
  var vslice_dummy_var_81: i32;
  var vslice_dummy_var_82: ref;
  var vslice_dummy_var_83: ref;
  var vslice_dummy_var_84: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 550} {:cexpr "opl3_init:arg:ioaddr"} boogie_si_record_i32($i0);
    goto corral_source_split_2949;

  corral_source_split_2949:
    assume {:verifier.code 0} true;
    $p2 := $M.1;
    goto corral_source_split_2950;

  corral_source_split_2950:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    goto corral_source_split_2951;

  corral_source_split_2951:
    assume {:verifier.code 0} true;
    $i4 := $eq.i64($i3, 0);
    goto corral_source_split_2952;

  corral_source_split_2952:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i4 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    call {:si_unique_call 552} $i7 := sound_alloc_synthdev();
    call {:si_unique_call 553} {:cexpr "me___0"} boogie_si_record_i32($i7);
    goto corral_source_split_2959;

  corral_source_split_2959:
    assume {:verifier.code 0} true;
    $i8 := $eq.i32($i7, $sub.i32(0, 1));
    goto corral_source_split_2960;

  corral_source_split_2960:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $p10 := $M.1;
    goto corral_source_split_2965;

  corral_source_split_2965:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p10, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_2966;

  corral_source_split_2966:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p11, 9);
    goto corral_source_split_2967;

  corral_source_split_2967:
    assume {:verifier.code 0} true;
    $p12 := $M.1;
    goto corral_source_split_2968;

  corral_source_split_2968:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($add.ref($p12, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(32, 1));
    goto corral_source_split_2969;

  corral_source_split_2969:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p14, 0);
    goto corral_source_split_2970;

  corral_source_split_2970:
    assume {:verifier.code 0} true;
    $p15 := $M.1;
    goto corral_source_split_2971;

  corral_source_split_2971:
    assume {:verifier.code 0} true;
    $p17 := $add.ref($add.ref($add.ref($p15, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(36, 1));
    goto corral_source_split_2972;

  corral_source_split_2972:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p17, 0);
    goto corral_source_split_2973;

  corral_source_split_2973:
    assume {:verifier.code 0} true;
    $p18 := $M.1;
    goto corral_source_split_2974;

  corral_source_split_2974:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($add.ref($p18, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(40, 1));
    goto corral_source_split_2975;

  corral_source_split_2975:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p20, 0);
    goto corral_source_split_2976;

  corral_source_split_2976:
    assume {:verifier.code 0} true;
    $p21 := $M.1;
    goto corral_source_split_2977;

  corral_source_split_2977:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($add.ref($p21, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(44, 1));
    goto corral_source_split_2978;

  corral_source_split_2978:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p23, 0);
    goto corral_source_split_2979;

  corral_source_split_2979:
    assume {:verifier.code 0} true;
    $p24 := $M.1;
    goto corral_source_split_2980;

  corral_source_split_2980:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($add.ref($add.ref($p24, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(48, 1));
    goto corral_source_split_2981;

  corral_source_split_2981:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p26, 9);
    goto corral_source_split_2982;

  corral_source_split_2982:
    assume {:verifier.code 0} true;
    $p27 := $M.1;
    goto corral_source_split_2983;

  corral_source_split_2983:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($add.ref($add.ref($p27, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(52, 1));
    goto corral_source_split_2984;

  corral_source_split_2984:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p29, 0);
    goto corral_source_split_2985;

  corral_source_split_2985:
    assume {:verifier.code 0} true;
    $p30 := $M.1;
    goto corral_source_split_2986;

  corral_source_split_2986:
    assume {:verifier.code 0} true;
    $p32 := $add.ref($add.ref($add.ref($p30, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(56, 1));
    goto corral_source_split_2987;

  corral_source_split_2987:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p32, 256);
    goto corral_source_split_2988;

  corral_source_split_2988:
    assume {:verifier.code 0} true;
    $p33 := $M.1;
    goto corral_source_split_2989;

  corral_source_split_2989:
    assume {:verifier.code 0} true;
    $p35 := $add.ref($add.ref($add.ref($p33, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(60, 1));
    goto corral_source_split_2990;

  corral_source_split_2990:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p35, 0);
    goto corral_source_split_2991;

  corral_source_split_2991:
    assume {:verifier.code 0} true;
    $p36 := $M.1;
    goto corral_source_split_2992;

  corral_source_split_2992:
    assume {:verifier.code 0} true;
    $p37 := $add.ref($add.ref($p36, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_2993;

  corral_source_split_2993:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p37, $i0);
    goto corral_source_split_2994;

  corral_source_split_2994:
    assume {:verifier.code 0} true;
    $i38 := $add.i32($i0, 2);
    goto corral_source_split_2995;

  corral_source_split_2995:
    assume {:verifier.code 0} true;
    $p39 := $M.1;
    goto corral_source_split_2996;

  corral_source_split_2996:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p39, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_2997;

  corral_source_split_2997:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p40, $i38);
    goto corral_source_split_2998;

  corral_source_split_2998:
    assume {:verifier.code 0} true;
    $i41 := $M.16;
    goto corral_source_split_2999;

  corral_source_split_2999:
    assume {:verifier.code 0} true;
    $i42 := $sle.i32($i41, 2);
    goto corral_source_split_3000;

  corral_source_split_3000:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i42 == 1);
    goto corral_source_split_3007;

  corral_source_split_3007:
    assume {:verifier.code 0} true;
    $p45 := $M.1;
    goto corral_source_split_3008;

  corral_source_split_3008:
    assume {:verifier.code 0} true;
    $p46 := $add.ref($add.ref($p45, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_3009;

  corral_source_split_3009:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p46, 2);
    goto corral_source_split_3010;

  corral_source_split_3010:
    assume {:verifier.code 0} true;
    $i47 := $M.16;
    goto corral_source_split_3011;

  corral_source_split_3011:
    assume {:verifier.code 0} true;
    $i48 := $eq.i32($i47, 4);
    goto corral_source_split_3012;

  corral_source_split_3012:
    assume {:verifier.code 0} true;
    assume {:branchcond $i48} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i48 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $p51 := $M.1;
    goto corral_source_split_3014;

  corral_source_split_3014:
    assume {:verifier.code 0} true;
    $p52 := $add.ref($add.ref($p51, $mul.ref(0, 11656)), $mul.ref(11496, 1));
    goto corral_source_split_3015;

  corral_source_split_3015:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(16, 1)), $p52);
    goto corral_source_split_3016;

  corral_source_split_3016:
    assume {:verifier.code 0} true;
    $i53 := $sext.i32.i64($i7);
    goto corral_source_split_3017;

  corral_source_split_3017:
    assume {:verifier.code 0} true;
    $p54 := $add.ref($add.ref(synth_devs, $mul.ref(0, 88)), $mul.ref($i53, 8));
    goto corral_source_split_3018;

  corral_source_split_3018:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p54, opl3_operations);
    goto corral_source_split_3019;

  corral_source_split_3019:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p1);
    goto corral_source_split_3020;

  corral_source_split_3020:
    assume {:verifier.code 0} true;
    $i56 := $ne.i64($i55, 0);
    goto corral_source_split_3021;

  corral_source_split_3021:
    assume {:verifier.code 0} true;
    assume {:branchcond $i56} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i56 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    call {:si_unique_call 555} sequencer_init();
    goto corral_source_split_3035;

  corral_source_split_3035:
    assume {:verifier.code 0} true;
    $p61 := $M.1;
    goto corral_source_split_3036;

  corral_source_split_3036:
    assume {:verifier.code 0} true;
    $p62 := $add.ref($add.ref($p61, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_3037;

  corral_source_split_3037:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p62, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)));
    goto corral_source_split_3038;

  corral_source_split_3038:
    assume {:verifier.code 0} true;
    $p63 := $M.1;
    goto corral_source_split_3039;

  corral_source_split_3039:
    assume {:verifier.code 0} true;
    $p64 := $add.ref($add.ref($p63, $mul.ref(0, 11656)), $mul.ref(1104, 1));
    goto corral_source_split_3040;

  corral_source_split_3040:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p64, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)));
    goto corral_source_split_3041;

  corral_source_split_3041:
    assume {:verifier.code 0} true;
    $p65 := $M.1;
    goto corral_source_split_3042;

  corral_source_split_3042:
    assume {:verifier.code 0} true;
    $p66 := $add.ref($add.ref($p65, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_3043;

  corral_source_split_3043:
    assume {:verifier.code 0} true;
    $i67 := $load.i32($M.0, $p66);
    goto corral_source_split_3044;

  corral_source_split_3044:
    assume {:verifier.code 0} true;
    $i68 := $eq.i32($i67, 2);
    goto corral_source_split_3045;

  corral_source_split_3045:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i68 == 1);
    goto corral_source_split_3053;

  corral_source_split_3053:
    assume {:verifier.code 0} true;
    $p120 := $M.1;
    goto corral_source_split_3054;

  corral_source_split_3054:
    assume {:verifier.code 0} true;
    $p122 := $add.ref($add.ref($add.ref($p120, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_3055;

  corral_source_split_3055:
    assume {:verifier.code 0} true;
    $p123 := $bitcast.ref.ref($p122);
    goto corral_source_split_3056;

  corral_source_split_3056:
    assume {:verifier.code 0} true;
    call {:si_unique_call 556} vslice_dummy_var_82 := strcpy($p123, .str.18);
    goto corral_source_split_3057;

  corral_source_split_3057:
    assume {:verifier.code 0} true;
    $p125 := $M.1;
    goto corral_source_split_3058;

  corral_source_split_3058:
    assume {:verifier.code 0} true;
    $p126 := $add.ref($add.ref($p125, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_3059;

  corral_source_split_3059:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p126, 9);
    goto corral_source_split_3060;

  corral_source_split_3060:
    assume {:verifier.code 0} true;
    $p127 := $M.1;
    goto corral_source_split_3061;

  corral_source_split_3061:
    assume {:verifier.code 0} true;
    $p128 := $add.ref($add.ref($p127, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_3062;

  corral_source_split_3062:
    assume {:verifier.code 0} true;
    $p129 := $load.ref($M.0, $p128);
    goto corral_source_split_3063;

  corral_source_split_3063:
    assume {:verifier.code 0} true;
    $p130 := $add.ref($add.ref($p129, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_3064;

  corral_source_split_3064:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p130, 9);
    goto corral_source_split_3065;

  corral_source_split_3065:
    assume {:verifier.code 0} true;
    $p131 := $M.1;
    goto corral_source_split_3066;

  corral_source_split_3066:
    assume {:verifier.code 0} true;
    $p133 := $add.ref($add.ref($add.ref($p131, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(52, 1));
    goto corral_source_split_3067;

  corral_source_split_3067:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p133, 0);
    goto corral_source_split_3068;

  corral_source_split_3068:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $p134 := $M.1;
    goto corral_source_split_3138;

  corral_source_split_3138:
    assume {:verifier.code 0} true;
    $p135 := $add.ref($add.ref($p134, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_3139;

  corral_source_split_3139:
    assume {:verifier.code 0} true;
    $i136 := $load.i32($M.0, $p135);
    goto corral_source_split_3140;

  corral_source_split_3140:
    assume {:verifier.code 0} true;
    $i137 := $trunc.i32.i16($i136);
    goto corral_source_split_3141;

  corral_source_split_3141:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(2, 1)), $i137);
    goto corral_source_split_3142;

  corral_source_split_3142:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $p1353 := $M.1;
    goto corral_source_split_3144;

  corral_source_split_3144:
    assume {:verifier.code 0} true;
    $p1354 := $add.ref($add.ref($p1353, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_3145;

  corral_source_split_3145:
    assume {:verifier.code 0} true;
    $i1355 := $load.i32($M.0, $p1354);
    goto corral_source_split_3146;

  corral_source_split_3146:
    assume {:verifier.code 0} true;
    $i1356 := $trunc.i32.i16($i1355);
    goto corral_source_split_3147;

  corral_source_split_3147:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(2, 1)), $i1356);
    goto corral_source_split_3148;

  corral_source_split_3148:
    assume {:verifier.code 0} true;
    goto $bb359;

  $bb359:
    assume {:verifier.code 0} true;
    $p1357 := $M.1;
    goto corral_source_split_4458;

  corral_source_split_4458:
    assume {:verifier.code 0} true;
    $p1358 := $add.ref($add.ref($p1357, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4459;

  corral_source_split_4459:
    assume {:verifier.code 0} true;
    $i1359 := $load.i32($M.0, $p1358);
    goto corral_source_split_4460;

  corral_source_split_4460:
    assume {:verifier.code 0} true;
    $i1360 := $trunc.i32.i16($i1359);
    goto corral_source_split_4461;

  corral_source_split_4461:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(2, 1)), $i1360);
    goto corral_source_split_4462;

  corral_source_split_4462:
    assume {:verifier.code 0} true;
    goto $bb360;

  $bb360:
    assume {:verifier.code 0} true;
    $p1361 := $M.1;
    goto corral_source_split_4464;

  corral_source_split_4464:
    assume {:verifier.code 0} true;
    $p1362 := $add.ref($add.ref($p1361, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4465;

  corral_source_split_4465:
    assume {:verifier.code 0} true;
    $i1363 := $load.i32($M.0, $p1362);
    goto corral_source_split_4466;

  corral_source_split_4466:
    assume {:verifier.code 0} true;
    $i1364 := $trunc.i32.i16($i1363);
    goto corral_source_split_4467;

  corral_source_split_4467:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(2, 1)), $i1364);
    goto corral_source_split_4468;

  corral_source_split_4468:
    assume {:verifier.code 0} true;
    goto $bb361;

  $bb361:
    assume {:verifier.code 0} true;
    $p1365 := $M.1;
    goto corral_source_split_4470;

  corral_source_split_4470:
    assume {:verifier.code 0} true;
    $p1366 := $add.ref($add.ref($p1365, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4471;

  corral_source_split_4471:
    assume {:verifier.code 0} true;
    $i1367 := $load.i32($M.0, $p1366);
    goto corral_source_split_4472;

  corral_source_split_4472:
    assume {:verifier.code 0} true;
    $i1368 := $trunc.i32.i16($i1367);
    goto corral_source_split_4473;

  corral_source_split_4473:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(2, 1)), $i1368);
    goto corral_source_split_4474;

  corral_source_split_4474:
    assume {:verifier.code 0} true;
    goto $bb362;

  $bb362:
    assume {:verifier.code 0} true;
    $p1369 := $M.1;
    goto corral_source_split_4476;

  corral_source_split_4476:
    assume {:verifier.code 0} true;
    $p1370 := $add.ref($add.ref($p1369, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4477;

  corral_source_split_4477:
    assume {:verifier.code 0} true;
    $i1371 := $load.i32($M.0, $p1370);
    goto corral_source_split_4478;

  corral_source_split_4478:
    assume {:verifier.code 0} true;
    $i1372 := $trunc.i32.i16($i1371);
    goto corral_source_split_4479;

  corral_source_split_4479:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(2, 1)), $i1372);
    goto corral_source_split_4480;

  corral_source_split_4480:
    assume {:verifier.code 0} true;
    goto $bb363;

  $bb363:
    assume {:verifier.code 0} true;
    $p1373 := $M.1;
    goto corral_source_split_4482;

  corral_source_split_4482:
    assume {:verifier.code 0} true;
    $p1374 := $add.ref($add.ref($p1373, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4483;

  corral_source_split_4483:
    assume {:verifier.code 0} true;
    $i1375 := $load.i32($M.0, $p1374);
    goto corral_source_split_4484;

  corral_source_split_4484:
    assume {:verifier.code 0} true;
    $i1376 := $trunc.i32.i16($i1375);
    goto corral_source_split_4485;

  corral_source_split_4485:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(2, 1)), $i1376);
    goto corral_source_split_4486;

  corral_source_split_4486:
    assume {:verifier.code 0} true;
    goto $bb364;

  $bb364:
    assume {:verifier.code 0} true;
    $p1377 := $M.1;
    goto corral_source_split_4488;

  corral_source_split_4488:
    assume {:verifier.code 0} true;
    $p1378 := $add.ref($add.ref($p1377, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4489;

  corral_source_split_4489:
    assume {:verifier.code 0} true;
    $i1379 := $load.i32($M.0, $p1378);
    goto corral_source_split_4490;

  corral_source_split_4490:
    assume {:verifier.code 0} true;
    $i1380 := $trunc.i32.i16($i1379);
    goto corral_source_split_4491;

  corral_source_split_4491:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(2, 1)), $i1380);
    goto corral_source_split_4492;

  corral_source_split_4492:
    assume {:verifier.code 0} true;
    goto $bb365;

  $bb365:
    assume {:verifier.code 0} true;
    $p1381 := $M.1;
    goto corral_source_split_4494;

  corral_source_split_4494:
    assume {:verifier.code 0} true;
    $p1382 := $add.ref($add.ref($p1381, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4495;

  corral_source_split_4495:
    assume {:verifier.code 0} true;
    $i1383 := $load.i32($M.0, $p1382);
    goto corral_source_split_4496;

  corral_source_split_4496:
    assume {:verifier.code 0} true;
    $i1384 := $trunc.i32.i16($i1383);
    goto corral_source_split_4497;

  corral_source_split_4497:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(2, 1)), $i1384);
    goto corral_source_split_4498;

  corral_source_split_4498:
    assume {:verifier.code 0} true;
    goto $bb366;

  $bb366:
    assume {:verifier.code 0} true;
    $p1385 := $M.1;
    goto corral_source_split_4500;

  corral_source_split_4500:
    assume {:verifier.code 0} true;
    $p1386 := $add.ref($add.ref($p1385, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4501;

  corral_source_split_4501:
    assume {:verifier.code 0} true;
    $i1387 := $load.i32($M.0, $p1386);
    goto corral_source_split_4502;

  corral_source_split_4502:
    assume {:verifier.code 0} true;
    $i1388 := $trunc.i32.i16($i1387);
    goto corral_source_split_4503;

  corral_source_split_4503:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(2, 1)), $i1388);
    goto corral_source_split_4504;

  corral_source_split_4504:
    assume {:verifier.code 0} true;
    goto $bb367;

  $bb367:
    assume {:verifier.code 0} true;
    $p1389 := $M.1;
    goto corral_source_split_4506;

  corral_source_split_4506:
    assume {:verifier.code 0} true;
    $p1390 := $add.ref($add.ref($p1389, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4507;

  corral_source_split_4507:
    assume {:verifier.code 0} true;
    $i1391 := $load.i32($M.0, $p1390);
    goto corral_source_split_4508;

  corral_source_split_4508:
    assume {:verifier.code 0} true;
    $i1392 := $trunc.i32.i16($i1391);
    goto corral_source_split_4509;

  corral_source_split_4509:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(2, 1)), $i1392);
    goto corral_source_split_4510;

  corral_source_split_4510:
    assume {:verifier.code 0} true;
    goto $bb368;

  $bb368:
    assume {:verifier.code 0} true;
    $p1393 := $M.1;
    goto corral_source_split_4512;

  corral_source_split_4512:
    assume {:verifier.code 0} true;
    $p1394 := $add.ref($add.ref($p1393, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4513;

  corral_source_split_4513:
    assume {:verifier.code 0} true;
    $i1395 := $load.i32($M.0, $p1394);
    goto corral_source_split_4514;

  corral_source_split_4514:
    assume {:verifier.code 0} true;
    $i1396 := $trunc.i32.i16($i1395);
    goto corral_source_split_4515;

  corral_source_split_4515:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(2, 1)), $i1396);
    goto corral_source_split_4516;

  corral_source_split_4516:
    assume {:verifier.code 0} true;
    goto $bb369;

  $bb369:
    assume {:verifier.code 0} true;
    $p1397 := $M.1;
    goto corral_source_split_4518;

  corral_source_split_4518:
    assume {:verifier.code 0} true;
    $p1398 := $add.ref($add.ref($p1397, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4519;

  corral_source_split_4519:
    assume {:verifier.code 0} true;
    $i1399 := $load.i32($M.0, $p1398);
    goto corral_source_split_4520;

  corral_source_split_4520:
    assume {:verifier.code 0} true;
    $i1400 := $trunc.i32.i16($i1399);
    goto corral_source_split_4521;

  corral_source_split_4521:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(2, 1)), $i1400);
    goto corral_source_split_4522;

  corral_source_split_4522:
    assume {:verifier.code 0} true;
    goto $bb370;

  $bb370:
    assume {:verifier.code 0} true;
    $p1401 := $M.1;
    goto corral_source_split_4524;

  corral_source_split_4524:
    assume {:verifier.code 0} true;
    $p1402 := $add.ref($add.ref($p1401, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4525;

  corral_source_split_4525:
    assume {:verifier.code 0} true;
    $i1403 := $load.i32($M.0, $p1402);
    goto corral_source_split_4526;

  corral_source_split_4526:
    assume {:verifier.code 0} true;
    $i1404 := $trunc.i32.i16($i1403);
    goto corral_source_split_4527;

  corral_source_split_4527:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(2, 1)), $i1404);
    goto corral_source_split_4528;

  corral_source_split_4528:
    assume {:verifier.code 0} true;
    goto $bb371;

  $bb371:
    assume {:verifier.code 0} true;
    $p1405 := $M.1;
    goto corral_source_split_4530;

  corral_source_split_4530:
    assume {:verifier.code 0} true;
    $p1406 := $add.ref($add.ref($p1405, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4531;

  corral_source_split_4531:
    assume {:verifier.code 0} true;
    $i1407 := $load.i32($M.0, $p1406);
    goto corral_source_split_4532;

  corral_source_split_4532:
    assume {:verifier.code 0} true;
    $i1408 := $trunc.i32.i16($i1407);
    goto corral_source_split_4533;

  corral_source_split_4533:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(2, 1)), $i1408);
    goto corral_source_split_4534;

  corral_source_split_4534:
    assume {:verifier.code 0} true;
    goto $bb372;

  $bb372:
    assume {:verifier.code 0} true;
    $p1409 := $M.1;
    goto corral_source_split_4536;

  corral_source_split_4536:
    assume {:verifier.code 0} true;
    $p1410 := $add.ref($add.ref($p1409, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4537;

  corral_source_split_4537:
    assume {:verifier.code 0} true;
    $i1411 := $load.i32($M.0, $p1410);
    goto corral_source_split_4538;

  corral_source_split_4538:
    assume {:verifier.code 0} true;
    $i1412 := $trunc.i32.i16($i1411);
    goto corral_source_split_4539;

  corral_source_split_4539:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(2, 1)), $i1412);
    goto corral_source_split_4540;

  corral_source_split_4540:
    assume {:verifier.code 0} true;
    goto $bb373;

  $bb373:
    assume {:verifier.code 0} true;
    $p1413 := $M.1;
    goto corral_source_split_4542;

  corral_source_split_4542:
    assume {:verifier.code 0} true;
    $p1414 := $add.ref($add.ref($p1413, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4543;

  corral_source_split_4543:
    assume {:verifier.code 0} true;
    $i1415 := $load.i32($M.0, $p1414);
    goto corral_source_split_4544;

  corral_source_split_4544:
    assume {:verifier.code 0} true;
    $i1416 := $trunc.i32.i16($i1415);
    goto corral_source_split_4545;

  corral_source_split_4545:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(2, 1)), $i1416);
    goto corral_source_split_4546;

  corral_source_split_4546:
    assume {:verifier.code 0} true;
    goto $bb374;

  $bb374:
    assume {:verifier.code 0} true;
    $p1417 := $M.1;
    goto corral_source_split_4548;

  corral_source_split_4548:
    assume {:verifier.code 0} true;
    $p1418 := $add.ref($add.ref($p1417, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4549;

  corral_source_split_4549:
    assume {:verifier.code 0} true;
    $i1419 := $load.i32($M.0, $p1418);
    goto corral_source_split_4550;

  corral_source_split_4550:
    assume {:verifier.code 0} true;
    $i1420 := $trunc.i32.i16($i1419);
    goto corral_source_split_4551;

  corral_source_split_4551:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(2, 1)), $i1420);
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $p138 := $M.1;
    goto corral_source_split_3133;

  corral_source_split_3133:
    assume {:verifier.code 0} true;
    $p140 := $add.ref($add.ref($add.ref($p138, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_3134;

  corral_source_split_3134:
    assume {:verifier.code 0} true;
    $p141 := $bitcast.ref.ref($p140);
    goto corral_source_split_3135;

  corral_source_split_3135:
    assume {:verifier.code 0} true;
    call {:si_unique_call 561} conf_printf2($p141, $i0, 0, $sub.i32(0, 1), $sub.i32(0, 1));
    goto corral_source_split_3136;

  corral_source_split_3136:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $p142 := $M.1;
    goto corral_source_split_3150;

  corral_source_split_3150:
    assume {:verifier.code 0} true;
    $p145 := $add.ref($add.ref($add.ref($add.ref($p142, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(0, 40)), $mul.ref(4, 1));
    goto corral_source_split_3151;

  corral_source_split_3151:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p145, $sub.i32(0, 1));
    goto corral_source_split_3152;

  corral_source_split_3152:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $p146 := $M.1;
    goto corral_source_split_3154;

  corral_source_split_3154:
    assume {:verifier.code 0} true;
    $p149 := $add.ref($add.ref($add.ref($add.ref($p146, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(1, 40)), $mul.ref(4, 1));
    goto corral_source_split_3155;

  corral_source_split_3155:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p149, $sub.i32(0, 1));
    goto corral_source_split_3156;

  corral_source_split_3156:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    $p150 := $M.1;
    goto corral_source_split_3158;

  corral_source_split_3158:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($add.ref($add.ref($add.ref($p150, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(2, 40)), $mul.ref(4, 1));
    goto corral_source_split_3159;

  corral_source_split_3159:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p153, $sub.i32(0, 1));
    goto corral_source_split_3160;

  corral_source_split_3160:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $p154 := $M.1;
    goto corral_source_split_3162;

  corral_source_split_3162:
    assume {:verifier.code 0} true;
    $p157 := $add.ref($add.ref($add.ref($add.ref($p154, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(3, 40)), $mul.ref(4, 1));
    goto corral_source_split_3163;

  corral_source_split_3163:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p157, $sub.i32(0, 1));
    goto corral_source_split_3164;

  corral_source_split_3164:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $p158 := $M.1;
    goto corral_source_split_3166;

  corral_source_split_3166:
    assume {:verifier.code 0} true;
    $p161 := $add.ref($add.ref($add.ref($add.ref($p158, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(4, 40)), $mul.ref(4, 1));
    goto corral_source_split_3167;

  corral_source_split_3167:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p161, $sub.i32(0, 1));
    goto corral_source_split_3168;

  corral_source_split_3168:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    $p162 := $M.1;
    goto corral_source_split_3170;

  corral_source_split_3170:
    assume {:verifier.code 0} true;
    $p165 := $add.ref($add.ref($add.ref($add.ref($p162, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(5, 40)), $mul.ref(4, 1));
    goto corral_source_split_3171;

  corral_source_split_3171:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p165, $sub.i32(0, 1));
    goto corral_source_split_3172;

  corral_source_split_3172:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $p166 := $M.1;
    goto corral_source_split_3174;

  corral_source_split_3174:
    assume {:verifier.code 0} true;
    $p169 := $add.ref($add.ref($add.ref($add.ref($p166, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(6, 40)), $mul.ref(4, 1));
    goto corral_source_split_3175;

  corral_source_split_3175:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p169, $sub.i32(0, 1));
    goto corral_source_split_3176;

  corral_source_split_3176:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $p170 := $M.1;
    goto corral_source_split_3178;

  corral_source_split_3178:
    assume {:verifier.code 0} true;
    $p173 := $add.ref($add.ref($add.ref($add.ref($p170, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(7, 40)), $mul.ref(4, 1));
    goto corral_source_split_3179;

  corral_source_split_3179:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p173, $sub.i32(0, 1));
    goto corral_source_split_3180;

  corral_source_split_3180:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $p174 := $M.1;
    goto corral_source_split_3182;

  corral_source_split_3182:
    assume {:verifier.code 0} true;
    $p177 := $add.ref($add.ref($add.ref($add.ref($p174, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(8, 40)), $mul.ref(4, 1));
    goto corral_source_split_3183;

  corral_source_split_3183:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p177, $sub.i32(0, 1));
    goto corral_source_split_3184;

  corral_source_split_3184:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $p178 := $M.1;
    goto corral_source_split_3186;

  corral_source_split_3186:
    assume {:verifier.code 0} true;
    $p181 := $add.ref($add.ref($add.ref($add.ref($p178, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(9, 40)), $mul.ref(4, 1));
    goto corral_source_split_3187;

  corral_source_split_3187:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p181, $sub.i32(0, 1));
    goto corral_source_split_3188;

  corral_source_split_3188:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p182 := $M.1;
    goto corral_source_split_3190;

  corral_source_split_3190:
    assume {:verifier.code 0} true;
    $p185 := $add.ref($add.ref($add.ref($add.ref($p182, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(10, 40)), $mul.ref(4, 1));
    goto corral_source_split_3191;

  corral_source_split_3191:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p185, $sub.i32(0, 1));
    goto corral_source_split_3192;

  corral_source_split_3192:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $p186 := $M.1;
    goto corral_source_split_3194;

  corral_source_split_3194:
    assume {:verifier.code 0} true;
    $p189 := $add.ref($add.ref($add.ref($add.ref($p186, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(11, 40)), $mul.ref(4, 1));
    goto corral_source_split_3195;

  corral_source_split_3195:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p189, $sub.i32(0, 1));
    goto corral_source_split_3196;

  corral_source_split_3196:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    $p190 := $M.1;
    goto corral_source_split_3198;

  corral_source_split_3198:
    assume {:verifier.code 0} true;
    $p193 := $add.ref($add.ref($add.ref($add.ref($p190, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(12, 40)), $mul.ref(4, 1));
    goto corral_source_split_3199;

  corral_source_split_3199:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p193, $sub.i32(0, 1));
    goto corral_source_split_3200;

  corral_source_split_3200:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    $p194 := $M.1;
    goto corral_source_split_3202;

  corral_source_split_3202:
    assume {:verifier.code 0} true;
    $p197 := $add.ref($add.ref($add.ref($add.ref($p194, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(13, 40)), $mul.ref(4, 1));
    goto corral_source_split_3203;

  corral_source_split_3203:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p197, $sub.i32(0, 1));
    goto corral_source_split_3204;

  corral_source_split_3204:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    $p198 := $M.1;
    goto corral_source_split_3206;

  corral_source_split_3206:
    assume {:verifier.code 0} true;
    $p201 := $add.ref($add.ref($add.ref($add.ref($p198, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(14, 40)), $mul.ref(4, 1));
    goto corral_source_split_3207;

  corral_source_split_3207:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p201, $sub.i32(0, 1));
    goto corral_source_split_3208;

  corral_source_split_3208:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $p202 := $M.1;
    goto corral_source_split_3210;

  corral_source_split_3210:
    assume {:verifier.code 0} true;
    $p205 := $add.ref($add.ref($add.ref($add.ref($p202, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(15, 40)), $mul.ref(4, 1));
    goto corral_source_split_3211;

  corral_source_split_3211:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p205, $sub.i32(0, 1));
    goto corral_source_split_3212;

  corral_source_split_3212:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    $p206 := $M.1;
    goto corral_source_split_3214;

  corral_source_split_3214:
    assume {:verifier.code 0} true;
    $p209 := $add.ref($add.ref($add.ref($add.ref($p206, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(16, 40)), $mul.ref(4, 1));
    goto corral_source_split_3215;

  corral_source_split_3215:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p209, $sub.i32(0, 1));
    goto corral_source_split_3216;

  corral_source_split_3216:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $p210 := $M.1;
    goto corral_source_split_3218;

  corral_source_split_3218:
    assume {:verifier.code 0} true;
    $p213 := $add.ref($add.ref($add.ref($add.ref($p210, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(17, 40)), $mul.ref(4, 1));
    goto corral_source_split_3219;

  corral_source_split_3219:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p213, $sub.i32(0, 1));
    goto corral_source_split_3220;

  corral_source_split_3220:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    $p214 := $M.1;
    goto corral_source_split_3222;

  corral_source_split_3222:
    assume {:verifier.code 0} true;
    $p217 := $add.ref($add.ref($add.ref($add.ref($p214, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(18, 40)), $mul.ref(4, 1));
    goto corral_source_split_3223;

  corral_source_split_3223:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p217, $sub.i32(0, 1));
    goto corral_source_split_3224;

  corral_source_split_3224:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    $p218 := $M.1;
    goto corral_source_split_3226;

  corral_source_split_3226:
    assume {:verifier.code 0} true;
    $p221 := $add.ref($add.ref($add.ref($add.ref($p218, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(19, 40)), $mul.ref(4, 1));
    goto corral_source_split_3227;

  corral_source_split_3227:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p221, $sub.i32(0, 1));
    goto corral_source_split_3228;

  corral_source_split_3228:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    $p222 := $M.1;
    goto corral_source_split_3230;

  corral_source_split_3230:
    assume {:verifier.code 0} true;
    $p225 := $add.ref($add.ref($add.ref($add.ref($p222, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(20, 40)), $mul.ref(4, 1));
    goto corral_source_split_3231;

  corral_source_split_3231:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p225, $sub.i32(0, 1));
    goto corral_source_split_3232;

  corral_source_split_3232:
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    $p226 := $M.1;
    goto corral_source_split_3234;

  corral_source_split_3234:
    assume {:verifier.code 0} true;
    $p229 := $add.ref($add.ref($add.ref($add.ref($p226, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(21, 40)), $mul.ref(4, 1));
    goto corral_source_split_3235;

  corral_source_split_3235:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p229, $sub.i32(0, 1));
    goto corral_source_split_3236;

  corral_source_split_3236:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    $p230 := $M.1;
    goto corral_source_split_3238;

  corral_source_split_3238:
    assume {:verifier.code 0} true;
    $p233 := $add.ref($add.ref($add.ref($add.ref($p230, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(22, 40)), $mul.ref(4, 1));
    goto corral_source_split_3239;

  corral_source_split_3239:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p233, $sub.i32(0, 1));
    goto corral_source_split_3240;

  corral_source_split_3240:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    $p234 := $M.1;
    goto corral_source_split_3242;

  corral_source_split_3242:
    assume {:verifier.code 0} true;
    $p237 := $add.ref($add.ref($add.ref($add.ref($p234, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(23, 40)), $mul.ref(4, 1));
    goto corral_source_split_3243;

  corral_source_split_3243:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p237, $sub.i32(0, 1));
    goto corral_source_split_3244;

  corral_source_split_3244:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    $p238 := $M.1;
    goto corral_source_split_3246;

  corral_source_split_3246:
    assume {:verifier.code 0} true;
    $p241 := $add.ref($add.ref($add.ref($add.ref($p238, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(24, 40)), $mul.ref(4, 1));
    goto corral_source_split_3247;

  corral_source_split_3247:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p241, $sub.i32(0, 1));
    goto corral_source_split_3248;

  corral_source_split_3248:
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    $p242 := $M.1;
    goto corral_source_split_3250;

  corral_source_split_3250:
    assume {:verifier.code 0} true;
    $p245 := $add.ref($add.ref($add.ref($add.ref($p242, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(25, 40)), $mul.ref(4, 1));
    goto corral_source_split_3251;

  corral_source_split_3251:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p245, $sub.i32(0, 1));
    goto corral_source_split_3252;

  corral_source_split_3252:
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $p246 := $M.1;
    goto corral_source_split_3254;

  corral_source_split_3254:
    assume {:verifier.code 0} true;
    $p249 := $add.ref($add.ref($add.ref($add.ref($p246, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(26, 40)), $mul.ref(4, 1));
    goto corral_source_split_3255;

  corral_source_split_3255:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p249, $sub.i32(0, 1));
    goto corral_source_split_3256;

  corral_source_split_3256:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    $p250 := $M.1;
    goto corral_source_split_3258;

  corral_source_split_3258:
    assume {:verifier.code 0} true;
    $p253 := $add.ref($add.ref($add.ref($add.ref($p250, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(27, 40)), $mul.ref(4, 1));
    goto corral_source_split_3259;

  corral_source_split_3259:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p253, $sub.i32(0, 1));
    goto corral_source_split_3260;

  corral_source_split_3260:
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    $p254 := $M.1;
    goto corral_source_split_3262;

  corral_source_split_3262:
    assume {:verifier.code 0} true;
    $p257 := $add.ref($add.ref($add.ref($add.ref($p254, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(28, 40)), $mul.ref(4, 1));
    goto corral_source_split_3263;

  corral_source_split_3263:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p257, $sub.i32(0, 1));
    goto corral_source_split_3264;

  corral_source_split_3264:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    $p258 := $M.1;
    goto corral_source_split_3266;

  corral_source_split_3266:
    assume {:verifier.code 0} true;
    $p261 := $add.ref($add.ref($add.ref($add.ref($p258, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(29, 40)), $mul.ref(4, 1));
    goto corral_source_split_3267;

  corral_source_split_3267:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p261, $sub.i32(0, 1));
    goto corral_source_split_3268;

  corral_source_split_3268:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    $p262 := $M.1;
    goto corral_source_split_3270;

  corral_source_split_3270:
    assume {:verifier.code 0} true;
    $p265 := $add.ref($add.ref($add.ref($add.ref($p262, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(30, 40)), $mul.ref(4, 1));
    goto corral_source_split_3271;

  corral_source_split_3271:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p265, $sub.i32(0, 1));
    goto corral_source_split_3272;

  corral_source_split_3272:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    $p266 := $M.1;
    goto corral_source_split_3274;

  corral_source_split_3274:
    assume {:verifier.code 0} true;
    $p269 := $add.ref($add.ref($add.ref($add.ref($p266, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(31, 40)), $mul.ref(4, 1));
    goto corral_source_split_3275;

  corral_source_split_3275:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p269, $sub.i32(0, 1));
    goto corral_source_split_3276;

  corral_source_split_3276:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    $p270 := $M.1;
    goto corral_source_split_3278;

  corral_source_split_3278:
    assume {:verifier.code 0} true;
    $p273 := $add.ref($add.ref($add.ref($add.ref($p270, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(32, 40)), $mul.ref(4, 1));
    goto corral_source_split_3279;

  corral_source_split_3279:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p273, $sub.i32(0, 1));
    goto corral_source_split_3280;

  corral_source_split_3280:
    assume {:verifier.code 0} true;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    $p274 := $M.1;
    goto corral_source_split_3282;

  corral_source_split_3282:
    assume {:verifier.code 0} true;
    $p277 := $add.ref($add.ref($add.ref($add.ref($p274, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(33, 40)), $mul.ref(4, 1));
    goto corral_source_split_3283;

  corral_source_split_3283:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p277, $sub.i32(0, 1));
    goto corral_source_split_3284;

  corral_source_split_3284:
    assume {:verifier.code 0} true;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    $p278 := $M.1;
    goto corral_source_split_3286;

  corral_source_split_3286:
    assume {:verifier.code 0} true;
    $p281 := $add.ref($add.ref($add.ref($add.ref($p278, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(34, 40)), $mul.ref(4, 1));
    goto corral_source_split_3287;

  corral_source_split_3287:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p281, $sub.i32(0, 1));
    goto corral_source_split_3288;

  corral_source_split_3288:
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    $p282 := $M.1;
    goto corral_source_split_3290;

  corral_source_split_3290:
    assume {:verifier.code 0} true;
    $p285 := $add.ref($add.ref($add.ref($add.ref($p282, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(35, 40)), $mul.ref(4, 1));
    goto corral_source_split_3291;

  corral_source_split_3291:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p285, $sub.i32(0, 1));
    goto corral_source_split_3292;

  corral_source_split_3292:
    assume {:verifier.code 0} true;
    goto $bb72;

  $bb72:
    assume {:verifier.code 0} true;
    $p286 := $M.1;
    goto corral_source_split_3294;

  corral_source_split_3294:
    assume {:verifier.code 0} true;
    $p289 := $add.ref($add.ref($add.ref($add.ref($p286, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(36, 40)), $mul.ref(4, 1));
    goto corral_source_split_3295;

  corral_source_split_3295:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p289, $sub.i32(0, 1));
    goto corral_source_split_3296;

  corral_source_split_3296:
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    $p290 := $M.1;
    goto corral_source_split_3298;

  corral_source_split_3298:
    assume {:verifier.code 0} true;
    $p293 := $add.ref($add.ref($add.ref($add.ref($p290, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(37, 40)), $mul.ref(4, 1));
    goto corral_source_split_3299;

  corral_source_split_3299:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p293, $sub.i32(0, 1));
    goto corral_source_split_3300;

  corral_source_split_3300:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    $p294 := $M.1;
    goto corral_source_split_3302;

  corral_source_split_3302:
    assume {:verifier.code 0} true;
    $p297 := $add.ref($add.ref($add.ref($add.ref($p294, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(38, 40)), $mul.ref(4, 1));
    goto corral_source_split_3303;

  corral_source_split_3303:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p297, $sub.i32(0, 1));
    goto corral_source_split_3304;

  corral_source_split_3304:
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $p298 := $M.1;
    goto corral_source_split_3306;

  corral_source_split_3306:
    assume {:verifier.code 0} true;
    $p301 := $add.ref($add.ref($add.ref($add.ref($p298, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(39, 40)), $mul.ref(4, 1));
    goto corral_source_split_3307;

  corral_source_split_3307:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p301, $sub.i32(0, 1));
    goto corral_source_split_3308;

  corral_source_split_3308:
    assume {:verifier.code 0} true;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    $p302 := $M.1;
    goto corral_source_split_3310;

  corral_source_split_3310:
    assume {:verifier.code 0} true;
    $p305 := $add.ref($add.ref($add.ref($add.ref($p302, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(40, 40)), $mul.ref(4, 1));
    goto corral_source_split_3311;

  corral_source_split_3311:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p305, $sub.i32(0, 1));
    goto corral_source_split_3312;

  corral_source_split_3312:
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    $p306 := $M.1;
    goto corral_source_split_3314;

  corral_source_split_3314:
    assume {:verifier.code 0} true;
    $p309 := $add.ref($add.ref($add.ref($add.ref($p306, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(41, 40)), $mul.ref(4, 1));
    goto corral_source_split_3315;

  corral_source_split_3315:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p309, $sub.i32(0, 1));
    goto corral_source_split_3316;

  corral_source_split_3316:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    $p310 := $M.1;
    goto corral_source_split_3318;

  corral_source_split_3318:
    assume {:verifier.code 0} true;
    $p313 := $add.ref($add.ref($add.ref($add.ref($p310, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(42, 40)), $mul.ref(4, 1));
    goto corral_source_split_3319;

  corral_source_split_3319:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p313, $sub.i32(0, 1));
    goto corral_source_split_3320;

  corral_source_split_3320:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    $p314 := $M.1;
    goto corral_source_split_3322;

  corral_source_split_3322:
    assume {:verifier.code 0} true;
    $p317 := $add.ref($add.ref($add.ref($add.ref($p314, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(43, 40)), $mul.ref(4, 1));
    goto corral_source_split_3323;

  corral_source_split_3323:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p317, $sub.i32(0, 1));
    goto corral_source_split_3324;

  corral_source_split_3324:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    $p318 := $M.1;
    goto corral_source_split_3326;

  corral_source_split_3326:
    assume {:verifier.code 0} true;
    $p321 := $add.ref($add.ref($add.ref($add.ref($p318, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(44, 40)), $mul.ref(4, 1));
    goto corral_source_split_3327;

  corral_source_split_3327:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p321, $sub.i32(0, 1));
    goto corral_source_split_3328;

  corral_source_split_3328:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    $p322 := $M.1;
    goto corral_source_split_3330;

  corral_source_split_3330:
    assume {:verifier.code 0} true;
    $p325 := $add.ref($add.ref($add.ref($add.ref($p322, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(45, 40)), $mul.ref(4, 1));
    goto corral_source_split_3331;

  corral_source_split_3331:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p325, $sub.i32(0, 1));
    goto corral_source_split_3332;

  corral_source_split_3332:
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb82:
    assume {:verifier.code 0} true;
    $p326 := $M.1;
    goto corral_source_split_3334;

  corral_source_split_3334:
    assume {:verifier.code 0} true;
    $p329 := $add.ref($add.ref($add.ref($add.ref($p326, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(46, 40)), $mul.ref(4, 1));
    goto corral_source_split_3335;

  corral_source_split_3335:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p329, $sub.i32(0, 1));
    goto corral_source_split_3336;

  corral_source_split_3336:
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    $p330 := $M.1;
    goto corral_source_split_3338;

  corral_source_split_3338:
    assume {:verifier.code 0} true;
    $p333 := $add.ref($add.ref($add.ref($add.ref($p330, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(47, 40)), $mul.ref(4, 1));
    goto corral_source_split_3339;

  corral_source_split_3339:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p333, $sub.i32(0, 1));
    goto corral_source_split_3340;

  corral_source_split_3340:
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    $p334 := $M.1;
    goto corral_source_split_3342;

  corral_source_split_3342:
    assume {:verifier.code 0} true;
    $p337 := $add.ref($add.ref($add.ref($add.ref($p334, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(48, 40)), $mul.ref(4, 1));
    goto corral_source_split_3343;

  corral_source_split_3343:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p337, $sub.i32(0, 1));
    goto corral_source_split_3344;

  corral_source_split_3344:
    assume {:verifier.code 0} true;
    goto $bb85;

  $bb85:
    assume {:verifier.code 0} true;
    $p338 := $M.1;
    goto corral_source_split_3346;

  corral_source_split_3346:
    assume {:verifier.code 0} true;
    $p341 := $add.ref($add.ref($add.ref($add.ref($p338, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(49, 40)), $mul.ref(4, 1));
    goto corral_source_split_3347;

  corral_source_split_3347:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p341, $sub.i32(0, 1));
    goto corral_source_split_3348;

  corral_source_split_3348:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    $p342 := $M.1;
    goto corral_source_split_3350;

  corral_source_split_3350:
    assume {:verifier.code 0} true;
    $p345 := $add.ref($add.ref($add.ref($add.ref($p342, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(50, 40)), $mul.ref(4, 1));
    goto corral_source_split_3351;

  corral_source_split_3351:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p345, $sub.i32(0, 1));
    goto corral_source_split_3352;

  corral_source_split_3352:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    $p346 := $M.1;
    goto corral_source_split_3354;

  corral_source_split_3354:
    assume {:verifier.code 0} true;
    $p349 := $add.ref($add.ref($add.ref($add.ref($p346, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(51, 40)), $mul.ref(4, 1));
    goto corral_source_split_3355;

  corral_source_split_3355:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p349, $sub.i32(0, 1));
    goto corral_source_split_3356;

  corral_source_split_3356:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    $p350 := $M.1;
    goto corral_source_split_3358;

  corral_source_split_3358:
    assume {:verifier.code 0} true;
    $p353 := $add.ref($add.ref($add.ref($add.ref($p350, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(52, 40)), $mul.ref(4, 1));
    goto corral_source_split_3359;

  corral_source_split_3359:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p353, $sub.i32(0, 1));
    goto corral_source_split_3360;

  corral_source_split_3360:
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    $p354 := $M.1;
    goto corral_source_split_3362;

  corral_source_split_3362:
    assume {:verifier.code 0} true;
    $p357 := $add.ref($add.ref($add.ref($add.ref($p354, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(53, 40)), $mul.ref(4, 1));
    goto corral_source_split_3363;

  corral_source_split_3363:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p357, $sub.i32(0, 1));
    goto corral_source_split_3364;

  corral_source_split_3364:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $p358 := $M.1;
    goto corral_source_split_3366;

  corral_source_split_3366:
    assume {:verifier.code 0} true;
    $p361 := $add.ref($add.ref($add.ref($add.ref($p358, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(54, 40)), $mul.ref(4, 1));
    goto corral_source_split_3367;

  corral_source_split_3367:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p361, $sub.i32(0, 1));
    goto corral_source_split_3368;

  corral_source_split_3368:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    $p362 := $M.1;
    goto corral_source_split_3370;

  corral_source_split_3370:
    assume {:verifier.code 0} true;
    $p365 := $add.ref($add.ref($add.ref($add.ref($p362, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(55, 40)), $mul.ref(4, 1));
    goto corral_source_split_3371;

  corral_source_split_3371:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p365, $sub.i32(0, 1));
    goto corral_source_split_3372;

  corral_source_split_3372:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    $p366 := $M.1;
    goto corral_source_split_3374;

  corral_source_split_3374:
    assume {:verifier.code 0} true;
    $p369 := $add.ref($add.ref($add.ref($add.ref($p366, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(56, 40)), $mul.ref(4, 1));
    goto corral_source_split_3375;

  corral_source_split_3375:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p369, $sub.i32(0, 1));
    goto corral_source_split_3376;

  corral_source_split_3376:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    $p370 := $M.1;
    goto corral_source_split_3378;

  corral_source_split_3378:
    assume {:verifier.code 0} true;
    $p373 := $add.ref($add.ref($add.ref($add.ref($p370, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(57, 40)), $mul.ref(4, 1));
    goto corral_source_split_3379;

  corral_source_split_3379:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p373, $sub.i32(0, 1));
    goto corral_source_split_3380;

  corral_source_split_3380:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $p374 := $M.1;
    goto corral_source_split_3382;

  corral_source_split_3382:
    assume {:verifier.code 0} true;
    $p377 := $add.ref($add.ref($add.ref($add.ref($p374, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(58, 40)), $mul.ref(4, 1));
    goto corral_source_split_3383;

  corral_source_split_3383:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p377, $sub.i32(0, 1));
    goto corral_source_split_3384;

  corral_source_split_3384:
    assume {:verifier.code 0} true;
    goto $bb95;

  $bb95:
    assume {:verifier.code 0} true;
    $p378 := $M.1;
    goto corral_source_split_3386;

  corral_source_split_3386:
    assume {:verifier.code 0} true;
    $p381 := $add.ref($add.ref($add.ref($add.ref($p378, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(59, 40)), $mul.ref(4, 1));
    goto corral_source_split_3387;

  corral_source_split_3387:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p381, $sub.i32(0, 1));
    goto corral_source_split_3388;

  corral_source_split_3388:
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    $p382 := $M.1;
    goto corral_source_split_3390;

  corral_source_split_3390:
    assume {:verifier.code 0} true;
    $p385 := $add.ref($add.ref($add.ref($add.ref($p382, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(60, 40)), $mul.ref(4, 1));
    goto corral_source_split_3391;

  corral_source_split_3391:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p385, $sub.i32(0, 1));
    goto corral_source_split_3392;

  corral_source_split_3392:
    assume {:verifier.code 0} true;
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    $p386 := $M.1;
    goto corral_source_split_3394;

  corral_source_split_3394:
    assume {:verifier.code 0} true;
    $p389 := $add.ref($add.ref($add.ref($add.ref($p386, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(61, 40)), $mul.ref(4, 1));
    goto corral_source_split_3395;

  corral_source_split_3395:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p389, $sub.i32(0, 1));
    goto corral_source_split_3396;

  corral_source_split_3396:
    assume {:verifier.code 0} true;
    goto $bb98;

  $bb98:
    assume {:verifier.code 0} true;
    $p390 := $M.1;
    goto corral_source_split_3398;

  corral_source_split_3398:
    assume {:verifier.code 0} true;
    $p393 := $add.ref($add.ref($add.ref($add.ref($p390, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(62, 40)), $mul.ref(4, 1));
    goto corral_source_split_3399;

  corral_source_split_3399:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p393, $sub.i32(0, 1));
    goto corral_source_split_3400;

  corral_source_split_3400:
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    $p394 := $M.1;
    goto corral_source_split_3402;

  corral_source_split_3402:
    assume {:verifier.code 0} true;
    $p397 := $add.ref($add.ref($add.ref($add.ref($p394, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(63, 40)), $mul.ref(4, 1));
    goto corral_source_split_3403;

  corral_source_split_3403:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p397, $sub.i32(0, 1));
    goto corral_source_split_3404;

  corral_source_split_3404:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $p398 := $M.1;
    goto corral_source_split_3406;

  corral_source_split_3406:
    assume {:verifier.code 0} true;
    $p401 := $add.ref($add.ref($add.ref($add.ref($p398, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(64, 40)), $mul.ref(4, 1));
    goto corral_source_split_3407;

  corral_source_split_3407:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p401, $sub.i32(0, 1));
    goto corral_source_split_3408;

  corral_source_split_3408:
    assume {:verifier.code 0} true;
    goto $bb101;

  $bb101:
    assume {:verifier.code 0} true;
    $p402 := $M.1;
    goto corral_source_split_3410;

  corral_source_split_3410:
    assume {:verifier.code 0} true;
    $p405 := $add.ref($add.ref($add.ref($add.ref($p402, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(65, 40)), $mul.ref(4, 1));
    goto corral_source_split_3411;

  corral_source_split_3411:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p405, $sub.i32(0, 1));
    goto corral_source_split_3412;

  corral_source_split_3412:
    assume {:verifier.code 0} true;
    goto $bb102;

  $bb102:
    assume {:verifier.code 0} true;
    $p406 := $M.1;
    goto corral_source_split_3414;

  corral_source_split_3414:
    assume {:verifier.code 0} true;
    $p409 := $add.ref($add.ref($add.ref($add.ref($p406, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(66, 40)), $mul.ref(4, 1));
    goto corral_source_split_3415;

  corral_source_split_3415:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p409, $sub.i32(0, 1));
    goto corral_source_split_3416;

  corral_source_split_3416:
    assume {:verifier.code 0} true;
    goto $bb103;

  $bb103:
    assume {:verifier.code 0} true;
    $p410 := $M.1;
    goto corral_source_split_3418;

  corral_source_split_3418:
    assume {:verifier.code 0} true;
    $p413 := $add.ref($add.ref($add.ref($add.ref($p410, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(67, 40)), $mul.ref(4, 1));
    goto corral_source_split_3419;

  corral_source_split_3419:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p413, $sub.i32(0, 1));
    goto corral_source_split_3420;

  corral_source_split_3420:
    assume {:verifier.code 0} true;
    goto $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    $p414 := $M.1;
    goto corral_source_split_3422;

  corral_source_split_3422:
    assume {:verifier.code 0} true;
    $p417 := $add.ref($add.ref($add.ref($add.ref($p414, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(68, 40)), $mul.ref(4, 1));
    goto corral_source_split_3423;

  corral_source_split_3423:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p417, $sub.i32(0, 1));
    goto corral_source_split_3424;

  corral_source_split_3424:
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    $p418 := $M.1;
    goto corral_source_split_3426;

  corral_source_split_3426:
    assume {:verifier.code 0} true;
    $p421 := $add.ref($add.ref($add.ref($add.ref($p418, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(69, 40)), $mul.ref(4, 1));
    goto corral_source_split_3427;

  corral_source_split_3427:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p421, $sub.i32(0, 1));
    goto corral_source_split_3428;

  corral_source_split_3428:
    assume {:verifier.code 0} true;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    $p422 := $M.1;
    goto corral_source_split_3430;

  corral_source_split_3430:
    assume {:verifier.code 0} true;
    $p425 := $add.ref($add.ref($add.ref($add.ref($p422, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(70, 40)), $mul.ref(4, 1));
    goto corral_source_split_3431;

  corral_source_split_3431:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p425, $sub.i32(0, 1));
    goto corral_source_split_3432;

  corral_source_split_3432:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $p426 := $M.1;
    goto corral_source_split_3434;

  corral_source_split_3434:
    assume {:verifier.code 0} true;
    $p429 := $add.ref($add.ref($add.ref($add.ref($p426, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(71, 40)), $mul.ref(4, 1));
    goto corral_source_split_3435;

  corral_source_split_3435:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p429, $sub.i32(0, 1));
    goto corral_source_split_3436;

  corral_source_split_3436:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    $p430 := $M.1;
    goto corral_source_split_3438;

  corral_source_split_3438:
    assume {:verifier.code 0} true;
    $p433 := $add.ref($add.ref($add.ref($add.ref($p430, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(72, 40)), $mul.ref(4, 1));
    goto corral_source_split_3439;

  corral_source_split_3439:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p433, $sub.i32(0, 1));
    goto corral_source_split_3440;

  corral_source_split_3440:
    assume {:verifier.code 0} true;
    goto $bb109;

  $bb109:
    assume {:verifier.code 0} true;
    $p434 := $M.1;
    goto corral_source_split_3442;

  corral_source_split_3442:
    assume {:verifier.code 0} true;
    $p437 := $add.ref($add.ref($add.ref($add.ref($p434, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(73, 40)), $mul.ref(4, 1));
    goto corral_source_split_3443;

  corral_source_split_3443:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p437, $sub.i32(0, 1));
    goto corral_source_split_3444;

  corral_source_split_3444:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    $p438 := $M.1;
    goto corral_source_split_3446;

  corral_source_split_3446:
    assume {:verifier.code 0} true;
    $p441 := $add.ref($add.ref($add.ref($add.ref($p438, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(74, 40)), $mul.ref(4, 1));
    goto corral_source_split_3447;

  corral_source_split_3447:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p441, $sub.i32(0, 1));
    goto corral_source_split_3448;

  corral_source_split_3448:
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb111:
    assume {:verifier.code 0} true;
    $p442 := $M.1;
    goto corral_source_split_3450;

  corral_source_split_3450:
    assume {:verifier.code 0} true;
    $p445 := $add.ref($add.ref($add.ref($add.ref($p442, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(75, 40)), $mul.ref(4, 1));
    goto corral_source_split_3451;

  corral_source_split_3451:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p445, $sub.i32(0, 1));
    goto corral_source_split_3452;

  corral_source_split_3452:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    $p446 := $M.1;
    goto corral_source_split_3454;

  corral_source_split_3454:
    assume {:verifier.code 0} true;
    $p449 := $add.ref($add.ref($add.ref($add.ref($p446, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(76, 40)), $mul.ref(4, 1));
    goto corral_source_split_3455;

  corral_source_split_3455:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p449, $sub.i32(0, 1));
    goto corral_source_split_3456;

  corral_source_split_3456:
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb113:
    assume {:verifier.code 0} true;
    $p450 := $M.1;
    goto corral_source_split_3458;

  corral_source_split_3458:
    assume {:verifier.code 0} true;
    $p453 := $add.ref($add.ref($add.ref($add.ref($p450, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(77, 40)), $mul.ref(4, 1));
    goto corral_source_split_3459;

  corral_source_split_3459:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p453, $sub.i32(0, 1));
    goto corral_source_split_3460;

  corral_source_split_3460:
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    $p454 := $M.1;
    goto corral_source_split_3462;

  corral_source_split_3462:
    assume {:verifier.code 0} true;
    $p457 := $add.ref($add.ref($add.ref($add.ref($p454, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(78, 40)), $mul.ref(4, 1));
    goto corral_source_split_3463;

  corral_source_split_3463:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p457, $sub.i32(0, 1));
    goto corral_source_split_3464;

  corral_source_split_3464:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    $p458 := $M.1;
    goto corral_source_split_3466;

  corral_source_split_3466:
    assume {:verifier.code 0} true;
    $p461 := $add.ref($add.ref($add.ref($add.ref($p458, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(79, 40)), $mul.ref(4, 1));
    goto corral_source_split_3467;

  corral_source_split_3467:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p461, $sub.i32(0, 1));
    goto corral_source_split_3468;

  corral_source_split_3468:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    $p462 := $M.1;
    goto corral_source_split_3470;

  corral_source_split_3470:
    assume {:verifier.code 0} true;
    $p465 := $add.ref($add.ref($add.ref($add.ref($p462, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(80, 40)), $mul.ref(4, 1));
    goto corral_source_split_3471;

  corral_source_split_3471:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p465, $sub.i32(0, 1));
    goto corral_source_split_3472;

  corral_source_split_3472:
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    $p466 := $M.1;
    goto corral_source_split_3474;

  corral_source_split_3474:
    assume {:verifier.code 0} true;
    $p469 := $add.ref($add.ref($add.ref($add.ref($p466, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(81, 40)), $mul.ref(4, 1));
    goto corral_source_split_3475;

  corral_source_split_3475:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p469, $sub.i32(0, 1));
    goto corral_source_split_3476;

  corral_source_split_3476:
    assume {:verifier.code 0} true;
    goto $bb118;

  $bb118:
    assume {:verifier.code 0} true;
    $p470 := $M.1;
    goto corral_source_split_3478;

  corral_source_split_3478:
    assume {:verifier.code 0} true;
    $p473 := $add.ref($add.ref($add.ref($add.ref($p470, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(82, 40)), $mul.ref(4, 1));
    goto corral_source_split_3479;

  corral_source_split_3479:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p473, $sub.i32(0, 1));
    goto corral_source_split_3480;

  corral_source_split_3480:
    assume {:verifier.code 0} true;
    goto $bb119;

  $bb119:
    assume {:verifier.code 0} true;
    $p474 := $M.1;
    goto corral_source_split_3482;

  corral_source_split_3482:
    assume {:verifier.code 0} true;
    $p477 := $add.ref($add.ref($add.ref($add.ref($p474, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(83, 40)), $mul.ref(4, 1));
    goto corral_source_split_3483;

  corral_source_split_3483:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p477, $sub.i32(0, 1));
    goto corral_source_split_3484;

  corral_source_split_3484:
    assume {:verifier.code 0} true;
    goto $bb120;

  $bb120:
    assume {:verifier.code 0} true;
    $p478 := $M.1;
    goto corral_source_split_3486;

  corral_source_split_3486:
    assume {:verifier.code 0} true;
    $p481 := $add.ref($add.ref($add.ref($add.ref($p478, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(84, 40)), $mul.ref(4, 1));
    goto corral_source_split_3487;

  corral_source_split_3487:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p481, $sub.i32(0, 1));
    goto corral_source_split_3488;

  corral_source_split_3488:
    assume {:verifier.code 0} true;
    goto $bb121;

  $bb121:
    assume {:verifier.code 0} true;
    $p482 := $M.1;
    goto corral_source_split_3490;

  corral_source_split_3490:
    assume {:verifier.code 0} true;
    $p485 := $add.ref($add.ref($add.ref($add.ref($p482, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(85, 40)), $mul.ref(4, 1));
    goto corral_source_split_3491;

  corral_source_split_3491:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p485, $sub.i32(0, 1));
    goto corral_source_split_3492;

  corral_source_split_3492:
    assume {:verifier.code 0} true;
    goto $bb122;

  $bb122:
    assume {:verifier.code 0} true;
    $p486 := $M.1;
    goto corral_source_split_3494;

  corral_source_split_3494:
    assume {:verifier.code 0} true;
    $p489 := $add.ref($add.ref($add.ref($add.ref($p486, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(86, 40)), $mul.ref(4, 1));
    goto corral_source_split_3495;

  corral_source_split_3495:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p489, $sub.i32(0, 1));
    goto corral_source_split_3496;

  corral_source_split_3496:
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    $p490 := $M.1;
    goto corral_source_split_3498;

  corral_source_split_3498:
    assume {:verifier.code 0} true;
    $p493 := $add.ref($add.ref($add.ref($add.ref($p490, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(87, 40)), $mul.ref(4, 1));
    goto corral_source_split_3499;

  corral_source_split_3499:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p493, $sub.i32(0, 1));
    goto corral_source_split_3500;

  corral_source_split_3500:
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $p494 := $M.1;
    goto corral_source_split_3502;

  corral_source_split_3502:
    assume {:verifier.code 0} true;
    $p497 := $add.ref($add.ref($add.ref($add.ref($p494, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(88, 40)), $mul.ref(4, 1));
    goto corral_source_split_3503;

  corral_source_split_3503:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p497, $sub.i32(0, 1));
    goto corral_source_split_3504;

  corral_source_split_3504:
    assume {:verifier.code 0} true;
    goto $bb125;

  $bb125:
    assume {:verifier.code 0} true;
    $p498 := $M.1;
    goto corral_source_split_3506;

  corral_source_split_3506:
    assume {:verifier.code 0} true;
    $p501 := $add.ref($add.ref($add.ref($add.ref($p498, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(89, 40)), $mul.ref(4, 1));
    goto corral_source_split_3507;

  corral_source_split_3507:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p501, $sub.i32(0, 1));
    goto corral_source_split_3508;

  corral_source_split_3508:
    assume {:verifier.code 0} true;
    goto $bb126;

  $bb126:
    assume {:verifier.code 0} true;
    $p502 := $M.1;
    goto corral_source_split_3510;

  corral_source_split_3510:
    assume {:verifier.code 0} true;
    $p505 := $add.ref($add.ref($add.ref($add.ref($p502, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(90, 40)), $mul.ref(4, 1));
    goto corral_source_split_3511;

  corral_source_split_3511:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p505, $sub.i32(0, 1));
    goto corral_source_split_3512;

  corral_source_split_3512:
    assume {:verifier.code 0} true;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    $p506 := $M.1;
    goto corral_source_split_3514;

  corral_source_split_3514:
    assume {:verifier.code 0} true;
    $p509 := $add.ref($add.ref($add.ref($add.ref($p506, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(91, 40)), $mul.ref(4, 1));
    goto corral_source_split_3515;

  corral_source_split_3515:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p509, $sub.i32(0, 1));
    goto corral_source_split_3516;

  corral_source_split_3516:
    assume {:verifier.code 0} true;
    goto $bb128;

  $bb128:
    assume {:verifier.code 0} true;
    $p510 := $M.1;
    goto corral_source_split_3518;

  corral_source_split_3518:
    assume {:verifier.code 0} true;
    $p513 := $add.ref($add.ref($add.ref($add.ref($p510, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(92, 40)), $mul.ref(4, 1));
    goto corral_source_split_3519;

  corral_source_split_3519:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p513, $sub.i32(0, 1));
    goto corral_source_split_3520;

  corral_source_split_3520:
    assume {:verifier.code 0} true;
    goto $bb129;

  $bb129:
    assume {:verifier.code 0} true;
    $p514 := $M.1;
    goto corral_source_split_3522;

  corral_source_split_3522:
    assume {:verifier.code 0} true;
    $p517 := $add.ref($add.ref($add.ref($add.ref($p514, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(93, 40)), $mul.ref(4, 1));
    goto corral_source_split_3523;

  corral_source_split_3523:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p517, $sub.i32(0, 1));
    goto corral_source_split_3524;

  corral_source_split_3524:
    assume {:verifier.code 0} true;
    goto $bb130;

  $bb130:
    assume {:verifier.code 0} true;
    $p518 := $M.1;
    goto corral_source_split_3526;

  corral_source_split_3526:
    assume {:verifier.code 0} true;
    $p521 := $add.ref($add.ref($add.ref($add.ref($p518, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(94, 40)), $mul.ref(4, 1));
    goto corral_source_split_3527;

  corral_source_split_3527:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p521, $sub.i32(0, 1));
    goto corral_source_split_3528;

  corral_source_split_3528:
    assume {:verifier.code 0} true;
    goto $bb131;

  $bb131:
    assume {:verifier.code 0} true;
    $p522 := $M.1;
    goto corral_source_split_3530;

  corral_source_split_3530:
    assume {:verifier.code 0} true;
    $p525 := $add.ref($add.ref($add.ref($add.ref($p522, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(95, 40)), $mul.ref(4, 1));
    goto corral_source_split_3531;

  corral_source_split_3531:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p525, $sub.i32(0, 1));
    goto corral_source_split_3532;

  corral_source_split_3532:
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb132:
    assume {:verifier.code 0} true;
    $p526 := $M.1;
    goto corral_source_split_3534;

  corral_source_split_3534:
    assume {:verifier.code 0} true;
    $p529 := $add.ref($add.ref($add.ref($add.ref($p526, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(96, 40)), $mul.ref(4, 1));
    goto corral_source_split_3535;

  corral_source_split_3535:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p529, $sub.i32(0, 1));
    goto corral_source_split_3536;

  corral_source_split_3536:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb133:
    assume {:verifier.code 0} true;
    $p530 := $M.1;
    goto corral_source_split_3538;

  corral_source_split_3538:
    assume {:verifier.code 0} true;
    $p533 := $add.ref($add.ref($add.ref($add.ref($p530, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(97, 40)), $mul.ref(4, 1));
    goto corral_source_split_3539;

  corral_source_split_3539:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p533, $sub.i32(0, 1));
    goto corral_source_split_3540;

  corral_source_split_3540:
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb134:
    assume {:verifier.code 0} true;
    $p534 := $M.1;
    goto corral_source_split_3542;

  corral_source_split_3542:
    assume {:verifier.code 0} true;
    $p537 := $add.ref($add.ref($add.ref($add.ref($p534, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(98, 40)), $mul.ref(4, 1));
    goto corral_source_split_3543;

  corral_source_split_3543:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p537, $sub.i32(0, 1));
    goto corral_source_split_3544;

  corral_source_split_3544:
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    $p538 := $M.1;
    goto corral_source_split_3546;

  corral_source_split_3546:
    assume {:verifier.code 0} true;
    $p541 := $add.ref($add.ref($add.ref($add.ref($p538, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(99, 40)), $mul.ref(4, 1));
    goto corral_source_split_3547;

  corral_source_split_3547:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p541, $sub.i32(0, 1));
    goto corral_source_split_3548;

  corral_source_split_3548:
    assume {:verifier.code 0} true;
    goto $bb136;

  $bb136:
    assume {:verifier.code 0} true;
    $p542 := $M.1;
    goto corral_source_split_3550;

  corral_source_split_3550:
    assume {:verifier.code 0} true;
    $p545 := $add.ref($add.ref($add.ref($add.ref($p542, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(100, 40)), $mul.ref(4, 1));
    goto corral_source_split_3551;

  corral_source_split_3551:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p545, $sub.i32(0, 1));
    goto corral_source_split_3552;

  corral_source_split_3552:
    assume {:verifier.code 0} true;
    goto $bb137;

  $bb137:
    assume {:verifier.code 0} true;
    $p546 := $M.1;
    goto corral_source_split_3554;

  corral_source_split_3554:
    assume {:verifier.code 0} true;
    $p549 := $add.ref($add.ref($add.ref($add.ref($p546, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(101, 40)), $mul.ref(4, 1));
    goto corral_source_split_3555;

  corral_source_split_3555:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p549, $sub.i32(0, 1));
    goto corral_source_split_3556;

  corral_source_split_3556:
    assume {:verifier.code 0} true;
    goto $bb138;

  $bb138:
    assume {:verifier.code 0} true;
    $p550 := $M.1;
    goto corral_source_split_3558;

  corral_source_split_3558:
    assume {:verifier.code 0} true;
    $p553 := $add.ref($add.ref($add.ref($add.ref($p550, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(102, 40)), $mul.ref(4, 1));
    goto corral_source_split_3559;

  corral_source_split_3559:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p553, $sub.i32(0, 1));
    goto corral_source_split_3560;

  corral_source_split_3560:
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    $p554 := $M.1;
    goto corral_source_split_3562;

  corral_source_split_3562:
    assume {:verifier.code 0} true;
    $p557 := $add.ref($add.ref($add.ref($add.ref($p554, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(103, 40)), $mul.ref(4, 1));
    goto corral_source_split_3563;

  corral_source_split_3563:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p557, $sub.i32(0, 1));
    goto corral_source_split_3564;

  corral_source_split_3564:
    assume {:verifier.code 0} true;
    goto $bb140;

  $bb140:
    assume {:verifier.code 0} true;
    $p558 := $M.1;
    goto corral_source_split_3566;

  corral_source_split_3566:
    assume {:verifier.code 0} true;
    $p561 := $add.ref($add.ref($add.ref($add.ref($p558, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(104, 40)), $mul.ref(4, 1));
    goto corral_source_split_3567;

  corral_source_split_3567:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p561, $sub.i32(0, 1));
    goto corral_source_split_3568;

  corral_source_split_3568:
    assume {:verifier.code 0} true;
    goto $bb141;

  $bb141:
    assume {:verifier.code 0} true;
    $p562 := $M.1;
    goto corral_source_split_3570;

  corral_source_split_3570:
    assume {:verifier.code 0} true;
    $p565 := $add.ref($add.ref($add.ref($add.ref($p562, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(105, 40)), $mul.ref(4, 1));
    goto corral_source_split_3571;

  corral_source_split_3571:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p565, $sub.i32(0, 1));
    goto corral_source_split_3572;

  corral_source_split_3572:
    assume {:verifier.code 0} true;
    goto $bb142;

  $bb142:
    assume {:verifier.code 0} true;
    $p566 := $M.1;
    goto corral_source_split_3574;

  corral_source_split_3574:
    assume {:verifier.code 0} true;
    $p569 := $add.ref($add.ref($add.ref($add.ref($p566, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(106, 40)), $mul.ref(4, 1));
    goto corral_source_split_3575;

  corral_source_split_3575:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p569, $sub.i32(0, 1));
    goto corral_source_split_3576;

  corral_source_split_3576:
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb143:
    assume {:verifier.code 0} true;
    $p570 := $M.1;
    goto corral_source_split_3578;

  corral_source_split_3578:
    assume {:verifier.code 0} true;
    $p573 := $add.ref($add.ref($add.ref($add.ref($p570, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(107, 40)), $mul.ref(4, 1));
    goto corral_source_split_3579;

  corral_source_split_3579:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p573, $sub.i32(0, 1));
    goto corral_source_split_3580;

  corral_source_split_3580:
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    $p574 := $M.1;
    goto corral_source_split_3582;

  corral_source_split_3582:
    assume {:verifier.code 0} true;
    $p577 := $add.ref($add.ref($add.ref($add.ref($p574, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(108, 40)), $mul.ref(4, 1));
    goto corral_source_split_3583;

  corral_source_split_3583:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p577, $sub.i32(0, 1));
    goto corral_source_split_3584;

  corral_source_split_3584:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    $p578 := $M.1;
    goto corral_source_split_3586;

  corral_source_split_3586:
    assume {:verifier.code 0} true;
    $p581 := $add.ref($add.ref($add.ref($add.ref($p578, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(109, 40)), $mul.ref(4, 1));
    goto corral_source_split_3587;

  corral_source_split_3587:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p581, $sub.i32(0, 1));
    goto corral_source_split_3588;

  corral_source_split_3588:
    assume {:verifier.code 0} true;
    goto $bb146;

  $bb146:
    assume {:verifier.code 0} true;
    $p582 := $M.1;
    goto corral_source_split_3590;

  corral_source_split_3590:
    assume {:verifier.code 0} true;
    $p585 := $add.ref($add.ref($add.ref($add.ref($p582, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(110, 40)), $mul.ref(4, 1));
    goto corral_source_split_3591;

  corral_source_split_3591:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p585, $sub.i32(0, 1));
    goto corral_source_split_3592;

  corral_source_split_3592:
    assume {:verifier.code 0} true;
    goto $bb147;

  $bb147:
    assume {:verifier.code 0} true;
    $p586 := $M.1;
    goto corral_source_split_3594;

  corral_source_split_3594:
    assume {:verifier.code 0} true;
    $p589 := $add.ref($add.ref($add.ref($add.ref($p586, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(111, 40)), $mul.ref(4, 1));
    goto corral_source_split_3595;

  corral_source_split_3595:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p589, $sub.i32(0, 1));
    goto corral_source_split_3596;

  corral_source_split_3596:
    assume {:verifier.code 0} true;
    goto $bb148;

  $bb148:
    assume {:verifier.code 0} true;
    $p590 := $M.1;
    goto corral_source_split_3598;

  corral_source_split_3598:
    assume {:verifier.code 0} true;
    $p593 := $add.ref($add.ref($add.ref($add.ref($p590, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(112, 40)), $mul.ref(4, 1));
    goto corral_source_split_3599;

  corral_source_split_3599:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p593, $sub.i32(0, 1));
    goto corral_source_split_3600;

  corral_source_split_3600:
    assume {:verifier.code 0} true;
    goto $bb149;

  $bb149:
    assume {:verifier.code 0} true;
    $p594 := $M.1;
    goto corral_source_split_3602;

  corral_source_split_3602:
    assume {:verifier.code 0} true;
    $p597 := $add.ref($add.ref($add.ref($add.ref($p594, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(113, 40)), $mul.ref(4, 1));
    goto corral_source_split_3603;

  corral_source_split_3603:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p597, $sub.i32(0, 1));
    goto corral_source_split_3604;

  corral_source_split_3604:
    assume {:verifier.code 0} true;
    goto $bb150;

  $bb150:
    assume {:verifier.code 0} true;
    $p598 := $M.1;
    goto corral_source_split_3606;

  corral_source_split_3606:
    assume {:verifier.code 0} true;
    $p601 := $add.ref($add.ref($add.ref($add.ref($p598, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(114, 40)), $mul.ref(4, 1));
    goto corral_source_split_3607;

  corral_source_split_3607:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p601, $sub.i32(0, 1));
    goto corral_source_split_3608;

  corral_source_split_3608:
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb151:
    assume {:verifier.code 0} true;
    $p602 := $M.1;
    goto corral_source_split_3610;

  corral_source_split_3610:
    assume {:verifier.code 0} true;
    $p605 := $add.ref($add.ref($add.ref($add.ref($p602, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(115, 40)), $mul.ref(4, 1));
    goto corral_source_split_3611;

  corral_source_split_3611:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p605, $sub.i32(0, 1));
    goto corral_source_split_3612;

  corral_source_split_3612:
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb152:
    assume {:verifier.code 0} true;
    $p606 := $M.1;
    goto corral_source_split_3614;

  corral_source_split_3614:
    assume {:verifier.code 0} true;
    $p609 := $add.ref($add.ref($add.ref($add.ref($p606, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(116, 40)), $mul.ref(4, 1));
    goto corral_source_split_3615;

  corral_source_split_3615:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p609, $sub.i32(0, 1));
    goto corral_source_split_3616;

  corral_source_split_3616:
    assume {:verifier.code 0} true;
    goto $bb153;

  $bb153:
    assume {:verifier.code 0} true;
    $p610 := $M.1;
    goto corral_source_split_3618;

  corral_source_split_3618:
    assume {:verifier.code 0} true;
    $p613 := $add.ref($add.ref($add.ref($add.ref($p610, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(117, 40)), $mul.ref(4, 1));
    goto corral_source_split_3619;

  corral_source_split_3619:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p613, $sub.i32(0, 1));
    goto corral_source_split_3620;

  corral_source_split_3620:
    assume {:verifier.code 0} true;
    goto $bb154;

  $bb154:
    assume {:verifier.code 0} true;
    $p614 := $M.1;
    goto corral_source_split_3622;

  corral_source_split_3622:
    assume {:verifier.code 0} true;
    $p617 := $add.ref($add.ref($add.ref($add.ref($p614, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(118, 40)), $mul.ref(4, 1));
    goto corral_source_split_3623;

  corral_source_split_3623:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p617, $sub.i32(0, 1));
    goto corral_source_split_3624;

  corral_source_split_3624:
    assume {:verifier.code 0} true;
    goto $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    $p618 := $M.1;
    goto corral_source_split_3626;

  corral_source_split_3626:
    assume {:verifier.code 0} true;
    $p621 := $add.ref($add.ref($add.ref($add.ref($p618, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(119, 40)), $mul.ref(4, 1));
    goto corral_source_split_3627;

  corral_source_split_3627:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p621, $sub.i32(0, 1));
    goto corral_source_split_3628;

  corral_source_split_3628:
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    $p622 := $M.1;
    goto corral_source_split_3630;

  corral_source_split_3630:
    assume {:verifier.code 0} true;
    $p625 := $add.ref($add.ref($add.ref($add.ref($p622, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(120, 40)), $mul.ref(4, 1));
    goto corral_source_split_3631;

  corral_source_split_3631:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p625, $sub.i32(0, 1));
    goto corral_source_split_3632;

  corral_source_split_3632:
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb157:
    assume {:verifier.code 0} true;
    $p626 := $M.1;
    goto corral_source_split_3634;

  corral_source_split_3634:
    assume {:verifier.code 0} true;
    $p629 := $add.ref($add.ref($add.ref($add.ref($p626, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(121, 40)), $mul.ref(4, 1));
    goto corral_source_split_3635;

  corral_source_split_3635:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p629, $sub.i32(0, 1));
    goto corral_source_split_3636;

  corral_source_split_3636:
    assume {:verifier.code 0} true;
    goto $bb158;

  $bb158:
    assume {:verifier.code 0} true;
    $p630 := $M.1;
    goto corral_source_split_3638;

  corral_source_split_3638:
    assume {:verifier.code 0} true;
    $p633 := $add.ref($add.ref($add.ref($add.ref($p630, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(122, 40)), $mul.ref(4, 1));
    goto corral_source_split_3639;

  corral_source_split_3639:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p633, $sub.i32(0, 1));
    goto corral_source_split_3640;

  corral_source_split_3640:
    assume {:verifier.code 0} true;
    goto $bb159;

  $bb159:
    assume {:verifier.code 0} true;
    $p634 := $M.1;
    goto corral_source_split_3642;

  corral_source_split_3642:
    assume {:verifier.code 0} true;
    $p637 := $add.ref($add.ref($add.ref($add.ref($p634, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(123, 40)), $mul.ref(4, 1));
    goto corral_source_split_3643;

  corral_source_split_3643:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p637, $sub.i32(0, 1));
    goto corral_source_split_3644;

  corral_source_split_3644:
    assume {:verifier.code 0} true;
    goto $bb160;

  $bb160:
    assume {:verifier.code 0} true;
    $p638 := $M.1;
    goto corral_source_split_3646;

  corral_source_split_3646:
    assume {:verifier.code 0} true;
    $p641 := $add.ref($add.ref($add.ref($add.ref($p638, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(124, 40)), $mul.ref(4, 1));
    goto corral_source_split_3647;

  corral_source_split_3647:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p641, $sub.i32(0, 1));
    goto corral_source_split_3648;

  corral_source_split_3648:
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb161:
    assume {:verifier.code 0} true;
    $p642 := $M.1;
    goto corral_source_split_3650;

  corral_source_split_3650:
    assume {:verifier.code 0} true;
    $p645 := $add.ref($add.ref($add.ref($add.ref($p642, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(125, 40)), $mul.ref(4, 1));
    goto corral_source_split_3651;

  corral_source_split_3651:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p645, $sub.i32(0, 1));
    goto corral_source_split_3652;

  corral_source_split_3652:
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    $p646 := $M.1;
    goto corral_source_split_3654;

  corral_source_split_3654:
    assume {:verifier.code 0} true;
    $p649 := $add.ref($add.ref($add.ref($add.ref($p646, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(126, 40)), $mul.ref(4, 1));
    goto corral_source_split_3655;

  corral_source_split_3655:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p649, $sub.i32(0, 1));
    goto corral_source_split_3656;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb163:
    assume {:verifier.code 0} true;
    $p650 := $M.1;
    goto corral_source_split_3658;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    $p653 := $add.ref($add.ref($add.ref($add.ref($p650, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(127, 40)), $mul.ref(4, 1));
    goto corral_source_split_3659;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p653, $sub.i32(0, 1));
    goto corral_source_split_3660;

  corral_source_split_3660:
    assume {:verifier.code 0} true;
    goto $bb164;

  $bb164:
    assume {:verifier.code 0} true;
    $p654 := $M.1;
    goto corral_source_split_3662;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    $p657 := $add.ref($add.ref($add.ref($add.ref($p654, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(128, 40)), $mul.ref(4, 1));
    goto corral_source_split_3663;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p657, $sub.i32(0, 1));
    goto corral_source_split_3664;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    goto $bb165;

  $bb165:
    assume {:verifier.code 0} true;
    $p658 := $M.1;
    goto corral_source_split_3666;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    $p661 := $add.ref($add.ref($add.ref($add.ref($p658, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(129, 40)), $mul.ref(4, 1));
    goto corral_source_split_3667;

  corral_source_split_3667:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p661, $sub.i32(0, 1));
    goto corral_source_split_3668;

  corral_source_split_3668:
    assume {:verifier.code 0} true;
    goto $bb166;

  $bb166:
    assume {:verifier.code 0} true;
    $p662 := $M.1;
    goto corral_source_split_3670;

  corral_source_split_3670:
    assume {:verifier.code 0} true;
    $p665 := $add.ref($add.ref($add.ref($add.ref($p662, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(130, 40)), $mul.ref(4, 1));
    goto corral_source_split_3671;

  corral_source_split_3671:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p665, $sub.i32(0, 1));
    goto corral_source_split_3672;

  corral_source_split_3672:
    assume {:verifier.code 0} true;
    goto $bb167;

  $bb167:
    assume {:verifier.code 0} true;
    $p666 := $M.1;
    goto corral_source_split_3674;

  corral_source_split_3674:
    assume {:verifier.code 0} true;
    $p669 := $add.ref($add.ref($add.ref($add.ref($p666, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(131, 40)), $mul.ref(4, 1));
    goto corral_source_split_3675;

  corral_source_split_3675:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p669, $sub.i32(0, 1));
    goto corral_source_split_3676;

  corral_source_split_3676:
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    $p670 := $M.1;
    goto corral_source_split_3678;

  corral_source_split_3678:
    assume {:verifier.code 0} true;
    $p673 := $add.ref($add.ref($add.ref($add.ref($p670, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(132, 40)), $mul.ref(4, 1));
    goto corral_source_split_3679;

  corral_source_split_3679:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p673, $sub.i32(0, 1));
    goto corral_source_split_3680;

  corral_source_split_3680:
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb169:
    assume {:verifier.code 0} true;
    $p674 := $M.1;
    goto corral_source_split_3682;

  corral_source_split_3682:
    assume {:verifier.code 0} true;
    $p677 := $add.ref($add.ref($add.ref($add.ref($p674, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(133, 40)), $mul.ref(4, 1));
    goto corral_source_split_3683;

  corral_source_split_3683:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p677, $sub.i32(0, 1));
    goto corral_source_split_3684;

  corral_source_split_3684:
    assume {:verifier.code 0} true;
    goto $bb170;

  $bb170:
    assume {:verifier.code 0} true;
    $p678 := $M.1;
    goto corral_source_split_3686;

  corral_source_split_3686:
    assume {:verifier.code 0} true;
    $p681 := $add.ref($add.ref($add.ref($add.ref($p678, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(134, 40)), $mul.ref(4, 1));
    goto corral_source_split_3687;

  corral_source_split_3687:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p681, $sub.i32(0, 1));
    goto corral_source_split_3688;

  corral_source_split_3688:
    assume {:verifier.code 0} true;
    goto $bb171;

  $bb171:
    assume {:verifier.code 0} true;
    $p682 := $M.1;
    goto corral_source_split_3690;

  corral_source_split_3690:
    assume {:verifier.code 0} true;
    $p685 := $add.ref($add.ref($add.ref($add.ref($p682, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(135, 40)), $mul.ref(4, 1));
    goto corral_source_split_3691;

  corral_source_split_3691:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p685, $sub.i32(0, 1));
    goto corral_source_split_3692;

  corral_source_split_3692:
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb172:
    assume {:verifier.code 0} true;
    $p686 := $M.1;
    goto corral_source_split_3694;

  corral_source_split_3694:
    assume {:verifier.code 0} true;
    $p689 := $add.ref($add.ref($add.ref($add.ref($p686, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(136, 40)), $mul.ref(4, 1));
    goto corral_source_split_3695;

  corral_source_split_3695:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p689, $sub.i32(0, 1));
    goto corral_source_split_3696;

  corral_source_split_3696:
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb173:
    assume {:verifier.code 0} true;
    $p690 := $M.1;
    goto corral_source_split_3698;

  corral_source_split_3698:
    assume {:verifier.code 0} true;
    $p693 := $add.ref($add.ref($add.ref($add.ref($p690, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(137, 40)), $mul.ref(4, 1));
    goto corral_source_split_3699;

  corral_source_split_3699:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p693, $sub.i32(0, 1));
    goto corral_source_split_3700;

  corral_source_split_3700:
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb174:
    assume {:verifier.code 0} true;
    $p694 := $M.1;
    goto corral_source_split_3702;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    $p697 := $add.ref($add.ref($add.ref($add.ref($p694, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(138, 40)), $mul.ref(4, 1));
    goto corral_source_split_3703;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p697, $sub.i32(0, 1));
    goto corral_source_split_3704;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    $p698 := $M.1;
    goto corral_source_split_3706;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    $p701 := $add.ref($add.ref($add.ref($add.ref($p698, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(139, 40)), $mul.ref(4, 1));
    goto corral_source_split_3707;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p701, $sub.i32(0, 1));
    goto corral_source_split_3708;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    goto $bb176;

  $bb176:
    assume {:verifier.code 0} true;
    $p702 := $M.1;
    goto corral_source_split_3710;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $p705 := $add.ref($add.ref($add.ref($add.ref($p702, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(140, 40)), $mul.ref(4, 1));
    goto corral_source_split_3711;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p705, $sub.i32(0, 1));
    goto corral_source_split_3712;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    goto $bb177;

  $bb177:
    assume {:verifier.code 0} true;
    $p706 := $M.1;
    goto corral_source_split_3714;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    $p709 := $add.ref($add.ref($add.ref($add.ref($p706, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(141, 40)), $mul.ref(4, 1));
    goto corral_source_split_3715;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p709, $sub.i32(0, 1));
    goto corral_source_split_3716;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    goto $bb178;

  $bb178:
    assume {:verifier.code 0} true;
    $p710 := $M.1;
    goto corral_source_split_3718;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $p713 := $add.ref($add.ref($add.ref($add.ref($p710, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(142, 40)), $mul.ref(4, 1));
    goto corral_source_split_3719;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p713, $sub.i32(0, 1));
    goto corral_source_split_3720;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    goto $bb179;

  $bb179:
    assume {:verifier.code 0} true;
    $p714 := $M.1;
    goto corral_source_split_3722;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $p717 := $add.ref($add.ref($add.ref($add.ref($p714, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(143, 40)), $mul.ref(4, 1));
    goto corral_source_split_3723;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p717, $sub.i32(0, 1));
    goto corral_source_split_3724;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    goto $bb180;

  $bb180:
    assume {:verifier.code 0} true;
    $p718 := $M.1;
    goto corral_source_split_3726;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $p721 := $add.ref($add.ref($add.ref($add.ref($p718, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(144, 40)), $mul.ref(4, 1));
    goto corral_source_split_3727;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p721, $sub.i32(0, 1));
    goto corral_source_split_3728;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb181:
    assume {:verifier.code 0} true;
    $p722 := $M.1;
    goto corral_source_split_3730;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    $p725 := $add.ref($add.ref($add.ref($add.ref($p722, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(145, 40)), $mul.ref(4, 1));
    goto corral_source_split_3731;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p725, $sub.i32(0, 1));
    goto corral_source_split_3732;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    goto $bb182;

  $bb182:
    assume {:verifier.code 0} true;
    $p726 := $M.1;
    goto corral_source_split_3734;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    $p729 := $add.ref($add.ref($add.ref($add.ref($p726, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(146, 40)), $mul.ref(4, 1));
    goto corral_source_split_3735;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p729, $sub.i32(0, 1));
    goto corral_source_split_3736;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    goto $bb183;

  $bb183:
    assume {:verifier.code 0} true;
    $p730 := $M.1;
    goto corral_source_split_3738;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    $p733 := $add.ref($add.ref($add.ref($add.ref($p730, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(147, 40)), $mul.ref(4, 1));
    goto corral_source_split_3739;

  corral_source_split_3739:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p733, $sub.i32(0, 1));
    goto corral_source_split_3740;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    goto $bb184;

  $bb184:
    assume {:verifier.code 0} true;
    $p734 := $M.1;
    goto corral_source_split_3742;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    $p737 := $add.ref($add.ref($add.ref($add.ref($p734, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(148, 40)), $mul.ref(4, 1));
    goto corral_source_split_3743;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p737, $sub.i32(0, 1));
    goto corral_source_split_3744;

  corral_source_split_3744:
    assume {:verifier.code 0} true;
    goto $bb185;

  $bb185:
    assume {:verifier.code 0} true;
    $p738 := $M.1;
    goto corral_source_split_3746;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    $p741 := $add.ref($add.ref($add.ref($add.ref($p738, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(149, 40)), $mul.ref(4, 1));
    goto corral_source_split_3747;

  corral_source_split_3747:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p741, $sub.i32(0, 1));
    goto corral_source_split_3748;

  corral_source_split_3748:
    assume {:verifier.code 0} true;
    goto $bb186;

  $bb186:
    assume {:verifier.code 0} true;
    $p742 := $M.1;
    goto corral_source_split_3750;

  corral_source_split_3750:
    assume {:verifier.code 0} true;
    $p745 := $add.ref($add.ref($add.ref($add.ref($p742, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(150, 40)), $mul.ref(4, 1));
    goto corral_source_split_3751;

  corral_source_split_3751:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p745, $sub.i32(0, 1));
    goto corral_source_split_3752;

  corral_source_split_3752:
    assume {:verifier.code 0} true;
    goto $bb187;

  $bb187:
    assume {:verifier.code 0} true;
    $p746 := $M.1;
    goto corral_source_split_3754;

  corral_source_split_3754:
    assume {:verifier.code 0} true;
    $p749 := $add.ref($add.ref($add.ref($add.ref($p746, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(151, 40)), $mul.ref(4, 1));
    goto corral_source_split_3755;

  corral_source_split_3755:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p749, $sub.i32(0, 1));
    goto corral_source_split_3756;

  corral_source_split_3756:
    assume {:verifier.code 0} true;
    goto $bb188;

  $bb188:
    assume {:verifier.code 0} true;
    $p750 := $M.1;
    goto corral_source_split_3758;

  corral_source_split_3758:
    assume {:verifier.code 0} true;
    $p753 := $add.ref($add.ref($add.ref($add.ref($p750, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(152, 40)), $mul.ref(4, 1));
    goto corral_source_split_3759;

  corral_source_split_3759:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p753, $sub.i32(0, 1));
    goto corral_source_split_3760;

  corral_source_split_3760:
    assume {:verifier.code 0} true;
    goto $bb189;

  $bb189:
    assume {:verifier.code 0} true;
    $p754 := $M.1;
    goto corral_source_split_3762;

  corral_source_split_3762:
    assume {:verifier.code 0} true;
    $p757 := $add.ref($add.ref($add.ref($add.ref($p754, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(153, 40)), $mul.ref(4, 1));
    goto corral_source_split_3763;

  corral_source_split_3763:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p757, $sub.i32(0, 1));
    goto corral_source_split_3764;

  corral_source_split_3764:
    assume {:verifier.code 0} true;
    goto $bb190;

  $bb190:
    assume {:verifier.code 0} true;
    $p758 := $M.1;
    goto corral_source_split_3766;

  corral_source_split_3766:
    assume {:verifier.code 0} true;
    $p761 := $add.ref($add.ref($add.ref($add.ref($p758, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(154, 40)), $mul.ref(4, 1));
    goto corral_source_split_3767;

  corral_source_split_3767:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p761, $sub.i32(0, 1));
    goto corral_source_split_3768;

  corral_source_split_3768:
    assume {:verifier.code 0} true;
    goto $bb191;

  $bb191:
    assume {:verifier.code 0} true;
    $p762 := $M.1;
    goto corral_source_split_3770;

  corral_source_split_3770:
    assume {:verifier.code 0} true;
    $p765 := $add.ref($add.ref($add.ref($add.ref($p762, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(155, 40)), $mul.ref(4, 1));
    goto corral_source_split_3771;

  corral_source_split_3771:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p765, $sub.i32(0, 1));
    goto corral_source_split_3772;

  corral_source_split_3772:
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb192:
    assume {:verifier.code 0} true;
    $p766 := $M.1;
    goto corral_source_split_3774;

  corral_source_split_3774:
    assume {:verifier.code 0} true;
    $p769 := $add.ref($add.ref($add.ref($add.ref($p766, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(156, 40)), $mul.ref(4, 1));
    goto corral_source_split_3775;

  corral_source_split_3775:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p769, $sub.i32(0, 1));
    goto corral_source_split_3776;

  corral_source_split_3776:
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb193:
    assume {:verifier.code 0} true;
    $p770 := $M.1;
    goto corral_source_split_3778;

  corral_source_split_3778:
    assume {:verifier.code 0} true;
    $p773 := $add.ref($add.ref($add.ref($add.ref($p770, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(157, 40)), $mul.ref(4, 1));
    goto corral_source_split_3779;

  corral_source_split_3779:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p773, $sub.i32(0, 1));
    goto corral_source_split_3780;

  corral_source_split_3780:
    assume {:verifier.code 0} true;
    goto $bb194;

  $bb194:
    assume {:verifier.code 0} true;
    $p774 := $M.1;
    goto corral_source_split_3782;

  corral_source_split_3782:
    assume {:verifier.code 0} true;
    $p777 := $add.ref($add.ref($add.ref($add.ref($p774, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(158, 40)), $mul.ref(4, 1));
    goto corral_source_split_3783;

  corral_source_split_3783:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p777, $sub.i32(0, 1));
    goto corral_source_split_3784;

  corral_source_split_3784:
    assume {:verifier.code 0} true;
    goto $bb195;

  $bb195:
    assume {:verifier.code 0} true;
    $p778 := $M.1;
    goto corral_source_split_3786;

  corral_source_split_3786:
    assume {:verifier.code 0} true;
    $p781 := $add.ref($add.ref($add.ref($add.ref($p778, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(159, 40)), $mul.ref(4, 1));
    goto corral_source_split_3787;

  corral_source_split_3787:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p781, $sub.i32(0, 1));
    goto corral_source_split_3788;

  corral_source_split_3788:
    assume {:verifier.code 0} true;
    goto $bb196;

  $bb196:
    assume {:verifier.code 0} true;
    $p782 := $M.1;
    goto corral_source_split_3790;

  corral_source_split_3790:
    assume {:verifier.code 0} true;
    $p785 := $add.ref($add.ref($add.ref($add.ref($p782, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(160, 40)), $mul.ref(4, 1));
    goto corral_source_split_3791;

  corral_source_split_3791:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p785, $sub.i32(0, 1));
    goto corral_source_split_3792;

  corral_source_split_3792:
    assume {:verifier.code 0} true;
    goto $bb197;

  $bb197:
    assume {:verifier.code 0} true;
    $p786 := $M.1;
    goto corral_source_split_3794;

  corral_source_split_3794:
    assume {:verifier.code 0} true;
    $p789 := $add.ref($add.ref($add.ref($add.ref($p786, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(161, 40)), $mul.ref(4, 1));
    goto corral_source_split_3795;

  corral_source_split_3795:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p789, $sub.i32(0, 1));
    goto corral_source_split_3796;

  corral_source_split_3796:
    assume {:verifier.code 0} true;
    goto $bb198;

  $bb198:
    assume {:verifier.code 0} true;
    $p790 := $M.1;
    goto corral_source_split_3798;

  corral_source_split_3798:
    assume {:verifier.code 0} true;
    $p793 := $add.ref($add.ref($add.ref($add.ref($p790, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(162, 40)), $mul.ref(4, 1));
    goto corral_source_split_3799;

  corral_source_split_3799:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p793, $sub.i32(0, 1));
    goto corral_source_split_3800;

  corral_source_split_3800:
    assume {:verifier.code 0} true;
    goto $bb199;

  $bb199:
    assume {:verifier.code 0} true;
    $p794 := $M.1;
    goto corral_source_split_3802;

  corral_source_split_3802:
    assume {:verifier.code 0} true;
    $p797 := $add.ref($add.ref($add.ref($add.ref($p794, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(163, 40)), $mul.ref(4, 1));
    goto corral_source_split_3803;

  corral_source_split_3803:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p797, $sub.i32(0, 1));
    goto corral_source_split_3804;

  corral_source_split_3804:
    assume {:verifier.code 0} true;
    goto $bb200;

  $bb200:
    assume {:verifier.code 0} true;
    $p798 := $M.1;
    goto corral_source_split_3806;

  corral_source_split_3806:
    assume {:verifier.code 0} true;
    $p801 := $add.ref($add.ref($add.ref($add.ref($p798, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(164, 40)), $mul.ref(4, 1));
    goto corral_source_split_3807;

  corral_source_split_3807:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p801, $sub.i32(0, 1));
    goto corral_source_split_3808;

  corral_source_split_3808:
    assume {:verifier.code 0} true;
    goto $bb201;

  $bb201:
    assume {:verifier.code 0} true;
    $p802 := $M.1;
    goto corral_source_split_3810;

  corral_source_split_3810:
    assume {:verifier.code 0} true;
    $p805 := $add.ref($add.ref($add.ref($add.ref($p802, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(165, 40)), $mul.ref(4, 1));
    goto corral_source_split_3811;

  corral_source_split_3811:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p805, $sub.i32(0, 1));
    goto corral_source_split_3812;

  corral_source_split_3812:
    assume {:verifier.code 0} true;
    goto $bb202;

  $bb202:
    assume {:verifier.code 0} true;
    $p806 := $M.1;
    goto corral_source_split_3814;

  corral_source_split_3814:
    assume {:verifier.code 0} true;
    $p809 := $add.ref($add.ref($add.ref($add.ref($p806, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(166, 40)), $mul.ref(4, 1));
    goto corral_source_split_3815;

  corral_source_split_3815:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p809, $sub.i32(0, 1));
    goto corral_source_split_3816;

  corral_source_split_3816:
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb203:
    assume {:verifier.code 0} true;
    $p810 := $M.1;
    goto corral_source_split_3818;

  corral_source_split_3818:
    assume {:verifier.code 0} true;
    $p813 := $add.ref($add.ref($add.ref($add.ref($p810, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(167, 40)), $mul.ref(4, 1));
    goto corral_source_split_3819;

  corral_source_split_3819:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p813, $sub.i32(0, 1));
    goto corral_source_split_3820;

  corral_source_split_3820:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb204:
    assume {:verifier.code 0} true;
    $p814 := $M.1;
    goto corral_source_split_3822;

  corral_source_split_3822:
    assume {:verifier.code 0} true;
    $p817 := $add.ref($add.ref($add.ref($add.ref($p814, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(168, 40)), $mul.ref(4, 1));
    goto corral_source_split_3823;

  corral_source_split_3823:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p817, $sub.i32(0, 1));
    goto corral_source_split_3824;

  corral_source_split_3824:
    assume {:verifier.code 0} true;
    goto $bb205;

  $bb205:
    assume {:verifier.code 0} true;
    $p818 := $M.1;
    goto corral_source_split_3826;

  corral_source_split_3826:
    assume {:verifier.code 0} true;
    $p821 := $add.ref($add.ref($add.ref($add.ref($p818, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(169, 40)), $mul.ref(4, 1));
    goto corral_source_split_3827;

  corral_source_split_3827:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p821, $sub.i32(0, 1));
    goto corral_source_split_3828;

  corral_source_split_3828:
    assume {:verifier.code 0} true;
    goto $bb206;

  $bb206:
    assume {:verifier.code 0} true;
    $p822 := $M.1;
    goto corral_source_split_3830;

  corral_source_split_3830:
    assume {:verifier.code 0} true;
    $p825 := $add.ref($add.ref($add.ref($add.ref($p822, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(170, 40)), $mul.ref(4, 1));
    goto corral_source_split_3831;

  corral_source_split_3831:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p825, $sub.i32(0, 1));
    goto corral_source_split_3832;

  corral_source_split_3832:
    assume {:verifier.code 0} true;
    goto $bb207;

  $bb207:
    assume {:verifier.code 0} true;
    $p826 := $M.1;
    goto corral_source_split_3834;

  corral_source_split_3834:
    assume {:verifier.code 0} true;
    $p829 := $add.ref($add.ref($add.ref($add.ref($p826, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(171, 40)), $mul.ref(4, 1));
    goto corral_source_split_3835;

  corral_source_split_3835:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p829, $sub.i32(0, 1));
    goto corral_source_split_3836;

  corral_source_split_3836:
    assume {:verifier.code 0} true;
    goto $bb208;

  $bb208:
    assume {:verifier.code 0} true;
    $p830 := $M.1;
    goto corral_source_split_3838;

  corral_source_split_3838:
    assume {:verifier.code 0} true;
    $p833 := $add.ref($add.ref($add.ref($add.ref($p830, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(172, 40)), $mul.ref(4, 1));
    goto corral_source_split_3839;

  corral_source_split_3839:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p833, $sub.i32(0, 1));
    goto corral_source_split_3840;

  corral_source_split_3840:
    assume {:verifier.code 0} true;
    goto $bb209;

  $bb209:
    assume {:verifier.code 0} true;
    $p834 := $M.1;
    goto corral_source_split_3842;

  corral_source_split_3842:
    assume {:verifier.code 0} true;
    $p837 := $add.ref($add.ref($add.ref($add.ref($p834, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(173, 40)), $mul.ref(4, 1));
    goto corral_source_split_3843;

  corral_source_split_3843:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p837, $sub.i32(0, 1));
    goto corral_source_split_3844;

  corral_source_split_3844:
    assume {:verifier.code 0} true;
    goto $bb210;

  $bb210:
    assume {:verifier.code 0} true;
    $p838 := $M.1;
    goto corral_source_split_3846;

  corral_source_split_3846:
    assume {:verifier.code 0} true;
    $p841 := $add.ref($add.ref($add.ref($add.ref($p838, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(174, 40)), $mul.ref(4, 1));
    goto corral_source_split_3847;

  corral_source_split_3847:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p841, $sub.i32(0, 1));
    goto corral_source_split_3848;

  corral_source_split_3848:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    $p842 := $M.1;
    goto corral_source_split_3850;

  corral_source_split_3850:
    assume {:verifier.code 0} true;
    $p845 := $add.ref($add.ref($add.ref($add.ref($p842, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(175, 40)), $mul.ref(4, 1));
    goto corral_source_split_3851;

  corral_source_split_3851:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p845, $sub.i32(0, 1));
    goto corral_source_split_3852;

  corral_source_split_3852:
    assume {:verifier.code 0} true;
    goto $bb212;

  $bb212:
    assume {:verifier.code 0} true;
    $p846 := $M.1;
    goto corral_source_split_3854;

  corral_source_split_3854:
    assume {:verifier.code 0} true;
    $p849 := $add.ref($add.ref($add.ref($add.ref($p846, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(176, 40)), $mul.ref(4, 1));
    goto corral_source_split_3855;

  corral_source_split_3855:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p849, $sub.i32(0, 1));
    goto corral_source_split_3856;

  corral_source_split_3856:
    assume {:verifier.code 0} true;
    goto $bb213;

  $bb213:
    assume {:verifier.code 0} true;
    $p850 := $M.1;
    goto corral_source_split_3858;

  corral_source_split_3858:
    assume {:verifier.code 0} true;
    $p853 := $add.ref($add.ref($add.ref($add.ref($p850, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(177, 40)), $mul.ref(4, 1));
    goto corral_source_split_3859;

  corral_source_split_3859:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p853, $sub.i32(0, 1));
    goto corral_source_split_3860;

  corral_source_split_3860:
    assume {:verifier.code 0} true;
    goto $bb214;

  $bb214:
    assume {:verifier.code 0} true;
    $p854 := $M.1;
    goto corral_source_split_3862;

  corral_source_split_3862:
    assume {:verifier.code 0} true;
    $p857 := $add.ref($add.ref($add.ref($add.ref($p854, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(178, 40)), $mul.ref(4, 1));
    goto corral_source_split_3863;

  corral_source_split_3863:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p857, $sub.i32(0, 1));
    goto corral_source_split_3864;

  corral_source_split_3864:
    assume {:verifier.code 0} true;
    goto $bb215;

  $bb215:
    assume {:verifier.code 0} true;
    $p858 := $M.1;
    goto corral_source_split_3866;

  corral_source_split_3866:
    assume {:verifier.code 0} true;
    $p861 := $add.ref($add.ref($add.ref($add.ref($p858, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(179, 40)), $mul.ref(4, 1));
    goto corral_source_split_3867;

  corral_source_split_3867:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p861, $sub.i32(0, 1));
    goto corral_source_split_3868;

  corral_source_split_3868:
    assume {:verifier.code 0} true;
    goto $bb216;

  $bb216:
    assume {:verifier.code 0} true;
    $p862 := $M.1;
    goto corral_source_split_3870;

  corral_source_split_3870:
    assume {:verifier.code 0} true;
    $p865 := $add.ref($add.ref($add.ref($add.ref($p862, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(180, 40)), $mul.ref(4, 1));
    goto corral_source_split_3871;

  corral_source_split_3871:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p865, $sub.i32(0, 1));
    goto corral_source_split_3872;

  corral_source_split_3872:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    $p866 := $M.1;
    goto corral_source_split_3874;

  corral_source_split_3874:
    assume {:verifier.code 0} true;
    $p869 := $add.ref($add.ref($add.ref($add.ref($p866, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(181, 40)), $mul.ref(4, 1));
    goto corral_source_split_3875;

  corral_source_split_3875:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p869, $sub.i32(0, 1));
    goto corral_source_split_3876;

  corral_source_split_3876:
    assume {:verifier.code 0} true;
    goto $bb218;

  $bb218:
    assume {:verifier.code 0} true;
    $p870 := $M.1;
    goto corral_source_split_3878;

  corral_source_split_3878:
    assume {:verifier.code 0} true;
    $p873 := $add.ref($add.ref($add.ref($add.ref($p870, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(182, 40)), $mul.ref(4, 1));
    goto corral_source_split_3879;

  corral_source_split_3879:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p873, $sub.i32(0, 1));
    goto corral_source_split_3880;

  corral_source_split_3880:
    assume {:verifier.code 0} true;
    goto $bb219;

  $bb219:
    assume {:verifier.code 0} true;
    $p874 := $M.1;
    goto corral_source_split_3882;

  corral_source_split_3882:
    assume {:verifier.code 0} true;
    $p877 := $add.ref($add.ref($add.ref($add.ref($p874, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(183, 40)), $mul.ref(4, 1));
    goto corral_source_split_3883;

  corral_source_split_3883:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p877, $sub.i32(0, 1));
    goto corral_source_split_3884;

  corral_source_split_3884:
    assume {:verifier.code 0} true;
    goto $bb220;

  $bb220:
    assume {:verifier.code 0} true;
    $p878 := $M.1;
    goto corral_source_split_3886;

  corral_source_split_3886:
    assume {:verifier.code 0} true;
    $p881 := $add.ref($add.ref($add.ref($add.ref($p878, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(184, 40)), $mul.ref(4, 1));
    goto corral_source_split_3887;

  corral_source_split_3887:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p881, $sub.i32(0, 1));
    goto corral_source_split_3888;

  corral_source_split_3888:
    assume {:verifier.code 0} true;
    goto $bb221;

  $bb221:
    assume {:verifier.code 0} true;
    $p882 := $M.1;
    goto corral_source_split_3890;

  corral_source_split_3890:
    assume {:verifier.code 0} true;
    $p885 := $add.ref($add.ref($add.ref($add.ref($p882, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(185, 40)), $mul.ref(4, 1));
    goto corral_source_split_3891;

  corral_source_split_3891:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p885, $sub.i32(0, 1));
    goto corral_source_split_3892;

  corral_source_split_3892:
    assume {:verifier.code 0} true;
    goto $bb222;

  $bb222:
    assume {:verifier.code 0} true;
    $p886 := $M.1;
    goto corral_source_split_3894;

  corral_source_split_3894:
    assume {:verifier.code 0} true;
    $p889 := $add.ref($add.ref($add.ref($add.ref($p886, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(186, 40)), $mul.ref(4, 1));
    goto corral_source_split_3895;

  corral_source_split_3895:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p889, $sub.i32(0, 1));
    goto corral_source_split_3896;

  corral_source_split_3896:
    assume {:verifier.code 0} true;
    goto $bb223;

  $bb223:
    assume {:verifier.code 0} true;
    $p890 := $M.1;
    goto corral_source_split_3898;

  corral_source_split_3898:
    assume {:verifier.code 0} true;
    $p893 := $add.ref($add.ref($add.ref($add.ref($p890, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(187, 40)), $mul.ref(4, 1));
    goto corral_source_split_3899;

  corral_source_split_3899:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p893, $sub.i32(0, 1));
    goto corral_source_split_3900;

  corral_source_split_3900:
    assume {:verifier.code 0} true;
    goto $bb224;

  $bb224:
    assume {:verifier.code 0} true;
    $p894 := $M.1;
    goto corral_source_split_3902;

  corral_source_split_3902:
    assume {:verifier.code 0} true;
    $p897 := $add.ref($add.ref($add.ref($add.ref($p894, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(188, 40)), $mul.ref(4, 1));
    goto corral_source_split_3903;

  corral_source_split_3903:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p897, $sub.i32(0, 1));
    goto corral_source_split_3904;

  corral_source_split_3904:
    assume {:verifier.code 0} true;
    goto $bb225;

  $bb225:
    assume {:verifier.code 0} true;
    $p898 := $M.1;
    goto corral_source_split_3906;

  corral_source_split_3906:
    assume {:verifier.code 0} true;
    $p901 := $add.ref($add.ref($add.ref($add.ref($p898, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(189, 40)), $mul.ref(4, 1));
    goto corral_source_split_3907;

  corral_source_split_3907:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p901, $sub.i32(0, 1));
    goto corral_source_split_3908;

  corral_source_split_3908:
    assume {:verifier.code 0} true;
    goto $bb226;

  $bb226:
    assume {:verifier.code 0} true;
    $p902 := $M.1;
    goto corral_source_split_3910;

  corral_source_split_3910:
    assume {:verifier.code 0} true;
    $p905 := $add.ref($add.ref($add.ref($add.ref($p902, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(190, 40)), $mul.ref(4, 1));
    goto corral_source_split_3911;

  corral_source_split_3911:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p905, $sub.i32(0, 1));
    goto corral_source_split_3912;

  corral_source_split_3912:
    assume {:verifier.code 0} true;
    goto $bb227;

  $bb227:
    assume {:verifier.code 0} true;
    $p906 := $M.1;
    goto corral_source_split_3914;

  corral_source_split_3914:
    assume {:verifier.code 0} true;
    $p909 := $add.ref($add.ref($add.ref($add.ref($p906, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(191, 40)), $mul.ref(4, 1));
    goto corral_source_split_3915;

  corral_source_split_3915:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p909, $sub.i32(0, 1));
    goto corral_source_split_3916;

  corral_source_split_3916:
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb228:
    assume {:verifier.code 0} true;
    $p910 := $M.1;
    goto corral_source_split_3918;

  corral_source_split_3918:
    assume {:verifier.code 0} true;
    $p913 := $add.ref($add.ref($add.ref($add.ref($p910, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(192, 40)), $mul.ref(4, 1));
    goto corral_source_split_3919;

  corral_source_split_3919:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p913, $sub.i32(0, 1));
    goto corral_source_split_3920;

  corral_source_split_3920:
    assume {:verifier.code 0} true;
    goto $bb229;

  $bb229:
    assume {:verifier.code 0} true;
    $p914 := $M.1;
    goto corral_source_split_3922;

  corral_source_split_3922:
    assume {:verifier.code 0} true;
    $p917 := $add.ref($add.ref($add.ref($add.ref($p914, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(193, 40)), $mul.ref(4, 1));
    goto corral_source_split_3923;

  corral_source_split_3923:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p917, $sub.i32(0, 1));
    goto corral_source_split_3924;

  corral_source_split_3924:
    assume {:verifier.code 0} true;
    goto $bb230;

  $bb230:
    assume {:verifier.code 0} true;
    $p918 := $M.1;
    goto corral_source_split_3926;

  corral_source_split_3926:
    assume {:verifier.code 0} true;
    $p921 := $add.ref($add.ref($add.ref($add.ref($p918, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(194, 40)), $mul.ref(4, 1));
    goto corral_source_split_3927;

  corral_source_split_3927:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p921, $sub.i32(0, 1));
    goto corral_source_split_3928;

  corral_source_split_3928:
    assume {:verifier.code 0} true;
    goto $bb231;

  $bb231:
    assume {:verifier.code 0} true;
    $p922 := $M.1;
    goto corral_source_split_3930;

  corral_source_split_3930:
    assume {:verifier.code 0} true;
    $p925 := $add.ref($add.ref($add.ref($add.ref($p922, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(195, 40)), $mul.ref(4, 1));
    goto corral_source_split_3931;

  corral_source_split_3931:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p925, $sub.i32(0, 1));
    goto corral_source_split_3932;

  corral_source_split_3932:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb232:
    assume {:verifier.code 0} true;
    $p926 := $M.1;
    goto corral_source_split_3934;

  corral_source_split_3934:
    assume {:verifier.code 0} true;
    $p929 := $add.ref($add.ref($add.ref($add.ref($p926, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(196, 40)), $mul.ref(4, 1));
    goto corral_source_split_3935;

  corral_source_split_3935:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p929, $sub.i32(0, 1));
    goto corral_source_split_3936;

  corral_source_split_3936:
    assume {:verifier.code 0} true;
    goto $bb233;

  $bb233:
    assume {:verifier.code 0} true;
    $p930 := $M.1;
    goto corral_source_split_3938;

  corral_source_split_3938:
    assume {:verifier.code 0} true;
    $p933 := $add.ref($add.ref($add.ref($add.ref($p930, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(197, 40)), $mul.ref(4, 1));
    goto corral_source_split_3939;

  corral_source_split_3939:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p933, $sub.i32(0, 1));
    goto corral_source_split_3940;

  corral_source_split_3940:
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb234:
    assume {:verifier.code 0} true;
    $p934 := $M.1;
    goto corral_source_split_3942;

  corral_source_split_3942:
    assume {:verifier.code 0} true;
    $p937 := $add.ref($add.ref($add.ref($add.ref($p934, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(198, 40)), $mul.ref(4, 1));
    goto corral_source_split_3943;

  corral_source_split_3943:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p937, $sub.i32(0, 1));
    goto corral_source_split_3944;

  corral_source_split_3944:
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb235:
    assume {:verifier.code 0} true;
    $p938 := $M.1;
    goto corral_source_split_3946;

  corral_source_split_3946:
    assume {:verifier.code 0} true;
    $p941 := $add.ref($add.ref($add.ref($add.ref($p938, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(199, 40)), $mul.ref(4, 1));
    goto corral_source_split_3947;

  corral_source_split_3947:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p941, $sub.i32(0, 1));
    goto corral_source_split_3948;

  corral_source_split_3948:
    assume {:verifier.code 0} true;
    goto $bb236;

  $bb236:
    assume {:verifier.code 0} true;
    $p942 := $M.1;
    goto corral_source_split_3950;

  corral_source_split_3950:
    assume {:verifier.code 0} true;
    $p945 := $add.ref($add.ref($add.ref($add.ref($p942, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(200, 40)), $mul.ref(4, 1));
    goto corral_source_split_3951;

  corral_source_split_3951:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p945, $sub.i32(0, 1));
    goto corral_source_split_3952;

  corral_source_split_3952:
    assume {:verifier.code 0} true;
    goto $bb237;

  $bb237:
    assume {:verifier.code 0} true;
    $p946 := $M.1;
    goto corral_source_split_3954;

  corral_source_split_3954:
    assume {:verifier.code 0} true;
    $p949 := $add.ref($add.ref($add.ref($add.ref($p946, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(201, 40)), $mul.ref(4, 1));
    goto corral_source_split_3955;

  corral_source_split_3955:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p949, $sub.i32(0, 1));
    goto corral_source_split_3956;

  corral_source_split_3956:
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb238:
    assume {:verifier.code 0} true;
    $p950 := $M.1;
    goto corral_source_split_3958;

  corral_source_split_3958:
    assume {:verifier.code 0} true;
    $p953 := $add.ref($add.ref($add.ref($add.ref($p950, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(202, 40)), $mul.ref(4, 1));
    goto corral_source_split_3959;

  corral_source_split_3959:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p953, $sub.i32(0, 1));
    goto corral_source_split_3960;

  corral_source_split_3960:
    assume {:verifier.code 0} true;
    goto $bb239;

  $bb239:
    assume {:verifier.code 0} true;
    $p954 := $M.1;
    goto corral_source_split_3962;

  corral_source_split_3962:
    assume {:verifier.code 0} true;
    $p957 := $add.ref($add.ref($add.ref($add.ref($p954, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(203, 40)), $mul.ref(4, 1));
    goto corral_source_split_3963;

  corral_source_split_3963:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p957, $sub.i32(0, 1));
    goto corral_source_split_3964;

  corral_source_split_3964:
    assume {:verifier.code 0} true;
    goto $bb240;

  $bb240:
    assume {:verifier.code 0} true;
    $p958 := $M.1;
    goto corral_source_split_3966;

  corral_source_split_3966:
    assume {:verifier.code 0} true;
    $p961 := $add.ref($add.ref($add.ref($add.ref($p958, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(204, 40)), $mul.ref(4, 1));
    goto corral_source_split_3967;

  corral_source_split_3967:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p961, $sub.i32(0, 1));
    goto corral_source_split_3968;

  corral_source_split_3968:
    assume {:verifier.code 0} true;
    goto $bb241;

  $bb241:
    assume {:verifier.code 0} true;
    $p962 := $M.1;
    goto corral_source_split_3970;

  corral_source_split_3970:
    assume {:verifier.code 0} true;
    $p965 := $add.ref($add.ref($add.ref($add.ref($p962, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(205, 40)), $mul.ref(4, 1));
    goto corral_source_split_3971;

  corral_source_split_3971:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p965, $sub.i32(0, 1));
    goto corral_source_split_3972;

  corral_source_split_3972:
    assume {:verifier.code 0} true;
    goto $bb242;

  $bb242:
    assume {:verifier.code 0} true;
    $p966 := $M.1;
    goto corral_source_split_3974;

  corral_source_split_3974:
    assume {:verifier.code 0} true;
    $p969 := $add.ref($add.ref($add.ref($add.ref($p966, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(206, 40)), $mul.ref(4, 1));
    goto corral_source_split_3975;

  corral_source_split_3975:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p969, $sub.i32(0, 1));
    goto corral_source_split_3976;

  corral_source_split_3976:
    assume {:verifier.code 0} true;
    goto $bb243;

  $bb243:
    assume {:verifier.code 0} true;
    $p970 := $M.1;
    goto corral_source_split_3978;

  corral_source_split_3978:
    assume {:verifier.code 0} true;
    $p973 := $add.ref($add.ref($add.ref($add.ref($p970, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(207, 40)), $mul.ref(4, 1));
    goto corral_source_split_3979;

  corral_source_split_3979:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p973, $sub.i32(0, 1));
    goto corral_source_split_3980;

  corral_source_split_3980:
    assume {:verifier.code 0} true;
    goto $bb244;

  $bb244:
    assume {:verifier.code 0} true;
    $p974 := $M.1;
    goto corral_source_split_3982;

  corral_source_split_3982:
    assume {:verifier.code 0} true;
    $p977 := $add.ref($add.ref($add.ref($add.ref($p974, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(208, 40)), $mul.ref(4, 1));
    goto corral_source_split_3983;

  corral_source_split_3983:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p977, $sub.i32(0, 1));
    goto corral_source_split_3984;

  corral_source_split_3984:
    assume {:verifier.code 0} true;
    goto $bb245;

  $bb245:
    assume {:verifier.code 0} true;
    $p978 := $M.1;
    goto corral_source_split_3986;

  corral_source_split_3986:
    assume {:verifier.code 0} true;
    $p981 := $add.ref($add.ref($add.ref($add.ref($p978, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(209, 40)), $mul.ref(4, 1));
    goto corral_source_split_3987;

  corral_source_split_3987:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p981, $sub.i32(0, 1));
    goto corral_source_split_3988;

  corral_source_split_3988:
    assume {:verifier.code 0} true;
    goto $bb246;

  $bb246:
    assume {:verifier.code 0} true;
    $p982 := $M.1;
    goto corral_source_split_3990;

  corral_source_split_3990:
    assume {:verifier.code 0} true;
    $p985 := $add.ref($add.ref($add.ref($add.ref($p982, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(210, 40)), $mul.ref(4, 1));
    goto corral_source_split_3991;

  corral_source_split_3991:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p985, $sub.i32(0, 1));
    goto corral_source_split_3992;

  corral_source_split_3992:
    assume {:verifier.code 0} true;
    goto $bb247;

  $bb247:
    assume {:verifier.code 0} true;
    $p986 := $M.1;
    goto corral_source_split_3994;

  corral_source_split_3994:
    assume {:verifier.code 0} true;
    $p989 := $add.ref($add.ref($add.ref($add.ref($p986, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(211, 40)), $mul.ref(4, 1));
    goto corral_source_split_3995;

  corral_source_split_3995:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p989, $sub.i32(0, 1));
    goto corral_source_split_3996;

  corral_source_split_3996:
    assume {:verifier.code 0} true;
    goto $bb248;

  $bb248:
    assume {:verifier.code 0} true;
    $p990 := $M.1;
    goto corral_source_split_3998;

  corral_source_split_3998:
    assume {:verifier.code 0} true;
    $p993 := $add.ref($add.ref($add.ref($add.ref($p990, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(212, 40)), $mul.ref(4, 1));
    goto corral_source_split_3999;

  corral_source_split_3999:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p993, $sub.i32(0, 1));
    goto corral_source_split_4000;

  corral_source_split_4000:
    assume {:verifier.code 0} true;
    goto $bb249;

  $bb249:
    assume {:verifier.code 0} true;
    $p994 := $M.1;
    goto corral_source_split_4002;

  corral_source_split_4002:
    assume {:verifier.code 0} true;
    $p997 := $add.ref($add.ref($add.ref($add.ref($p994, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(213, 40)), $mul.ref(4, 1));
    goto corral_source_split_4003;

  corral_source_split_4003:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p997, $sub.i32(0, 1));
    goto corral_source_split_4004;

  corral_source_split_4004:
    assume {:verifier.code 0} true;
    goto $bb250;

  $bb250:
    assume {:verifier.code 0} true;
    $p998 := $M.1;
    goto corral_source_split_4006;

  corral_source_split_4006:
    assume {:verifier.code 0} true;
    $p1001 := $add.ref($add.ref($add.ref($add.ref($p998, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(214, 40)), $mul.ref(4, 1));
    goto corral_source_split_4007;

  corral_source_split_4007:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1001, $sub.i32(0, 1));
    goto corral_source_split_4008;

  corral_source_split_4008:
    assume {:verifier.code 0} true;
    goto $bb251;

  $bb251:
    assume {:verifier.code 0} true;
    $p1002 := $M.1;
    goto corral_source_split_4010;

  corral_source_split_4010:
    assume {:verifier.code 0} true;
    $p1005 := $add.ref($add.ref($add.ref($add.ref($p1002, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(215, 40)), $mul.ref(4, 1));
    goto corral_source_split_4011;

  corral_source_split_4011:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1005, $sub.i32(0, 1));
    goto corral_source_split_4012;

  corral_source_split_4012:
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb252:
    assume {:verifier.code 0} true;
    $p1006 := $M.1;
    goto corral_source_split_4014;

  corral_source_split_4014:
    assume {:verifier.code 0} true;
    $p1009 := $add.ref($add.ref($add.ref($add.ref($p1006, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(216, 40)), $mul.ref(4, 1));
    goto corral_source_split_4015;

  corral_source_split_4015:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1009, $sub.i32(0, 1));
    goto corral_source_split_4016;

  corral_source_split_4016:
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb253:
    assume {:verifier.code 0} true;
    $p1010 := $M.1;
    goto corral_source_split_4018;

  corral_source_split_4018:
    assume {:verifier.code 0} true;
    $p1013 := $add.ref($add.ref($add.ref($add.ref($p1010, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(217, 40)), $mul.ref(4, 1));
    goto corral_source_split_4019;

  corral_source_split_4019:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1013, $sub.i32(0, 1));
    goto corral_source_split_4020;

  corral_source_split_4020:
    assume {:verifier.code 0} true;
    goto $bb254;

  $bb254:
    assume {:verifier.code 0} true;
    $p1014 := $M.1;
    goto corral_source_split_4022;

  corral_source_split_4022:
    assume {:verifier.code 0} true;
    $p1017 := $add.ref($add.ref($add.ref($add.ref($p1014, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(218, 40)), $mul.ref(4, 1));
    goto corral_source_split_4023;

  corral_source_split_4023:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1017, $sub.i32(0, 1));
    goto corral_source_split_4024;

  corral_source_split_4024:
    assume {:verifier.code 0} true;
    goto $bb255;

  $bb255:
    assume {:verifier.code 0} true;
    $p1018 := $M.1;
    goto corral_source_split_4026;

  corral_source_split_4026:
    assume {:verifier.code 0} true;
    $p1021 := $add.ref($add.ref($add.ref($add.ref($p1018, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(219, 40)), $mul.ref(4, 1));
    goto corral_source_split_4027;

  corral_source_split_4027:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1021, $sub.i32(0, 1));
    goto corral_source_split_4028;

  corral_source_split_4028:
    assume {:verifier.code 0} true;
    goto $bb256;

  $bb256:
    assume {:verifier.code 0} true;
    $p1022 := $M.1;
    goto corral_source_split_4030;

  corral_source_split_4030:
    assume {:verifier.code 0} true;
    $p1025 := $add.ref($add.ref($add.ref($add.ref($p1022, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(220, 40)), $mul.ref(4, 1));
    goto corral_source_split_4031;

  corral_source_split_4031:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1025, $sub.i32(0, 1));
    goto corral_source_split_4032;

  corral_source_split_4032:
    assume {:verifier.code 0} true;
    goto $bb257;

  $bb257:
    assume {:verifier.code 0} true;
    $p1026 := $M.1;
    goto corral_source_split_4034;

  corral_source_split_4034:
    assume {:verifier.code 0} true;
    $p1029 := $add.ref($add.ref($add.ref($add.ref($p1026, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(221, 40)), $mul.ref(4, 1));
    goto corral_source_split_4035;

  corral_source_split_4035:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1029, $sub.i32(0, 1));
    goto corral_source_split_4036;

  corral_source_split_4036:
    assume {:verifier.code 0} true;
    goto $bb258;

  $bb258:
    assume {:verifier.code 0} true;
    $p1030 := $M.1;
    goto corral_source_split_4038;

  corral_source_split_4038:
    assume {:verifier.code 0} true;
    $p1033 := $add.ref($add.ref($add.ref($add.ref($p1030, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(222, 40)), $mul.ref(4, 1));
    goto corral_source_split_4039;

  corral_source_split_4039:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1033, $sub.i32(0, 1));
    goto corral_source_split_4040;

  corral_source_split_4040:
    assume {:verifier.code 0} true;
    goto $bb259;

  $bb259:
    assume {:verifier.code 0} true;
    $p1034 := $M.1;
    goto corral_source_split_4042;

  corral_source_split_4042:
    assume {:verifier.code 0} true;
    $p1037 := $add.ref($add.ref($add.ref($add.ref($p1034, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(223, 40)), $mul.ref(4, 1));
    goto corral_source_split_4043;

  corral_source_split_4043:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1037, $sub.i32(0, 1));
    goto corral_source_split_4044;

  corral_source_split_4044:
    assume {:verifier.code 0} true;
    goto $bb260;

  $bb260:
    assume {:verifier.code 0} true;
    $p1038 := $M.1;
    goto corral_source_split_4046;

  corral_source_split_4046:
    assume {:verifier.code 0} true;
    $p1041 := $add.ref($add.ref($add.ref($add.ref($p1038, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(224, 40)), $mul.ref(4, 1));
    goto corral_source_split_4047;

  corral_source_split_4047:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1041, $sub.i32(0, 1));
    goto corral_source_split_4048;

  corral_source_split_4048:
    assume {:verifier.code 0} true;
    goto $bb261;

  $bb261:
    assume {:verifier.code 0} true;
    $p1042 := $M.1;
    goto corral_source_split_4050;

  corral_source_split_4050:
    assume {:verifier.code 0} true;
    $p1045 := $add.ref($add.ref($add.ref($add.ref($p1042, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(225, 40)), $mul.ref(4, 1));
    goto corral_source_split_4051;

  corral_source_split_4051:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1045, $sub.i32(0, 1));
    goto corral_source_split_4052;

  corral_source_split_4052:
    assume {:verifier.code 0} true;
    goto $bb262;

  $bb262:
    assume {:verifier.code 0} true;
    $p1046 := $M.1;
    goto corral_source_split_4054;

  corral_source_split_4054:
    assume {:verifier.code 0} true;
    $p1049 := $add.ref($add.ref($add.ref($add.ref($p1046, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(226, 40)), $mul.ref(4, 1));
    goto corral_source_split_4055;

  corral_source_split_4055:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1049, $sub.i32(0, 1));
    goto corral_source_split_4056;

  corral_source_split_4056:
    assume {:verifier.code 0} true;
    goto $bb263;

  $bb263:
    assume {:verifier.code 0} true;
    $p1050 := $M.1;
    goto corral_source_split_4058;

  corral_source_split_4058:
    assume {:verifier.code 0} true;
    $p1053 := $add.ref($add.ref($add.ref($add.ref($p1050, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(227, 40)), $mul.ref(4, 1));
    goto corral_source_split_4059;

  corral_source_split_4059:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1053, $sub.i32(0, 1));
    goto corral_source_split_4060;

  corral_source_split_4060:
    assume {:verifier.code 0} true;
    goto $bb264;

  $bb264:
    assume {:verifier.code 0} true;
    $p1054 := $M.1;
    goto corral_source_split_4062;

  corral_source_split_4062:
    assume {:verifier.code 0} true;
    $p1057 := $add.ref($add.ref($add.ref($add.ref($p1054, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(228, 40)), $mul.ref(4, 1));
    goto corral_source_split_4063;

  corral_source_split_4063:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1057, $sub.i32(0, 1));
    goto corral_source_split_4064;

  corral_source_split_4064:
    assume {:verifier.code 0} true;
    goto $bb265;

  $bb265:
    assume {:verifier.code 0} true;
    $p1058 := $M.1;
    goto corral_source_split_4066;

  corral_source_split_4066:
    assume {:verifier.code 0} true;
    $p1061 := $add.ref($add.ref($add.ref($add.ref($p1058, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(229, 40)), $mul.ref(4, 1));
    goto corral_source_split_4067;

  corral_source_split_4067:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1061, $sub.i32(0, 1));
    goto corral_source_split_4068;

  corral_source_split_4068:
    assume {:verifier.code 0} true;
    goto $bb266;

  $bb266:
    assume {:verifier.code 0} true;
    $p1062 := $M.1;
    goto corral_source_split_4070;

  corral_source_split_4070:
    assume {:verifier.code 0} true;
    $p1065 := $add.ref($add.ref($add.ref($add.ref($p1062, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(230, 40)), $mul.ref(4, 1));
    goto corral_source_split_4071;

  corral_source_split_4071:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1065, $sub.i32(0, 1));
    goto corral_source_split_4072;

  corral_source_split_4072:
    assume {:verifier.code 0} true;
    goto $bb267;

  $bb267:
    assume {:verifier.code 0} true;
    $p1066 := $M.1;
    goto corral_source_split_4074;

  corral_source_split_4074:
    assume {:verifier.code 0} true;
    $p1069 := $add.ref($add.ref($add.ref($add.ref($p1066, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(231, 40)), $mul.ref(4, 1));
    goto corral_source_split_4075;

  corral_source_split_4075:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1069, $sub.i32(0, 1));
    goto corral_source_split_4076;

  corral_source_split_4076:
    assume {:verifier.code 0} true;
    goto $bb268;

  $bb268:
    assume {:verifier.code 0} true;
    $p1070 := $M.1;
    goto corral_source_split_4078;

  corral_source_split_4078:
    assume {:verifier.code 0} true;
    $p1073 := $add.ref($add.ref($add.ref($add.ref($p1070, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(232, 40)), $mul.ref(4, 1));
    goto corral_source_split_4079;

  corral_source_split_4079:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1073, $sub.i32(0, 1));
    goto corral_source_split_4080;

  corral_source_split_4080:
    assume {:verifier.code 0} true;
    goto $bb269;

  $bb269:
    assume {:verifier.code 0} true;
    $p1074 := $M.1;
    goto corral_source_split_4082;

  corral_source_split_4082:
    assume {:verifier.code 0} true;
    $p1077 := $add.ref($add.ref($add.ref($add.ref($p1074, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(233, 40)), $mul.ref(4, 1));
    goto corral_source_split_4083;

  corral_source_split_4083:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1077, $sub.i32(0, 1));
    goto corral_source_split_4084;

  corral_source_split_4084:
    assume {:verifier.code 0} true;
    goto $bb270;

  $bb270:
    assume {:verifier.code 0} true;
    $p1078 := $M.1;
    goto corral_source_split_4086;

  corral_source_split_4086:
    assume {:verifier.code 0} true;
    $p1081 := $add.ref($add.ref($add.ref($add.ref($p1078, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(234, 40)), $mul.ref(4, 1));
    goto corral_source_split_4087;

  corral_source_split_4087:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1081, $sub.i32(0, 1));
    goto corral_source_split_4088;

  corral_source_split_4088:
    assume {:verifier.code 0} true;
    goto $bb271;

  $bb271:
    assume {:verifier.code 0} true;
    $p1082 := $M.1;
    goto corral_source_split_4090;

  corral_source_split_4090:
    assume {:verifier.code 0} true;
    $p1085 := $add.ref($add.ref($add.ref($add.ref($p1082, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(235, 40)), $mul.ref(4, 1));
    goto corral_source_split_4091;

  corral_source_split_4091:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1085, $sub.i32(0, 1));
    goto corral_source_split_4092;

  corral_source_split_4092:
    assume {:verifier.code 0} true;
    goto $bb272;

  $bb272:
    assume {:verifier.code 0} true;
    $p1086 := $M.1;
    goto corral_source_split_4094;

  corral_source_split_4094:
    assume {:verifier.code 0} true;
    $p1089 := $add.ref($add.ref($add.ref($add.ref($p1086, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(236, 40)), $mul.ref(4, 1));
    goto corral_source_split_4095;

  corral_source_split_4095:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1089, $sub.i32(0, 1));
    goto corral_source_split_4096;

  corral_source_split_4096:
    assume {:verifier.code 0} true;
    goto $bb273;

  $bb273:
    assume {:verifier.code 0} true;
    $p1090 := $M.1;
    goto corral_source_split_4098;

  corral_source_split_4098:
    assume {:verifier.code 0} true;
    $p1093 := $add.ref($add.ref($add.ref($add.ref($p1090, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(237, 40)), $mul.ref(4, 1));
    goto corral_source_split_4099;

  corral_source_split_4099:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1093, $sub.i32(0, 1));
    goto corral_source_split_4100;

  corral_source_split_4100:
    assume {:verifier.code 0} true;
    goto $bb274;

  $bb274:
    assume {:verifier.code 0} true;
    $p1094 := $M.1;
    goto corral_source_split_4102;

  corral_source_split_4102:
    assume {:verifier.code 0} true;
    $p1097 := $add.ref($add.ref($add.ref($add.ref($p1094, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(238, 40)), $mul.ref(4, 1));
    goto corral_source_split_4103;

  corral_source_split_4103:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1097, $sub.i32(0, 1));
    goto corral_source_split_4104;

  corral_source_split_4104:
    assume {:verifier.code 0} true;
    goto $bb275;

  $bb275:
    assume {:verifier.code 0} true;
    $p1098 := $M.1;
    goto corral_source_split_4106;

  corral_source_split_4106:
    assume {:verifier.code 0} true;
    $p1101 := $add.ref($add.ref($add.ref($add.ref($p1098, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(239, 40)), $mul.ref(4, 1));
    goto corral_source_split_4107;

  corral_source_split_4107:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1101, $sub.i32(0, 1));
    goto corral_source_split_4108;

  corral_source_split_4108:
    assume {:verifier.code 0} true;
    goto $bb276;

  $bb276:
    assume {:verifier.code 0} true;
    $p1102 := $M.1;
    goto corral_source_split_4110;

  corral_source_split_4110:
    assume {:verifier.code 0} true;
    $p1105 := $add.ref($add.ref($add.ref($add.ref($p1102, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(240, 40)), $mul.ref(4, 1));
    goto corral_source_split_4111;

  corral_source_split_4111:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1105, $sub.i32(0, 1));
    goto corral_source_split_4112;

  corral_source_split_4112:
    assume {:verifier.code 0} true;
    goto $bb277;

  $bb277:
    assume {:verifier.code 0} true;
    $p1106 := $M.1;
    goto corral_source_split_4114;

  corral_source_split_4114:
    assume {:verifier.code 0} true;
    $p1109 := $add.ref($add.ref($add.ref($add.ref($p1106, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(241, 40)), $mul.ref(4, 1));
    goto corral_source_split_4115;

  corral_source_split_4115:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1109, $sub.i32(0, 1));
    goto corral_source_split_4116;

  corral_source_split_4116:
    assume {:verifier.code 0} true;
    goto $bb278;

  $bb278:
    assume {:verifier.code 0} true;
    $p1110 := $M.1;
    goto corral_source_split_4118;

  corral_source_split_4118:
    assume {:verifier.code 0} true;
    $p1113 := $add.ref($add.ref($add.ref($add.ref($p1110, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(242, 40)), $mul.ref(4, 1));
    goto corral_source_split_4119;

  corral_source_split_4119:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1113, $sub.i32(0, 1));
    goto corral_source_split_4120;

  corral_source_split_4120:
    assume {:verifier.code 0} true;
    goto $bb279;

  $bb279:
    assume {:verifier.code 0} true;
    $p1114 := $M.1;
    goto corral_source_split_4122;

  corral_source_split_4122:
    assume {:verifier.code 0} true;
    $p1117 := $add.ref($add.ref($add.ref($add.ref($p1114, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(243, 40)), $mul.ref(4, 1));
    goto corral_source_split_4123;

  corral_source_split_4123:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1117, $sub.i32(0, 1));
    goto corral_source_split_4124;

  corral_source_split_4124:
    assume {:verifier.code 0} true;
    goto $bb280;

  $bb280:
    assume {:verifier.code 0} true;
    $p1118 := $M.1;
    goto corral_source_split_4126;

  corral_source_split_4126:
    assume {:verifier.code 0} true;
    $p1121 := $add.ref($add.ref($add.ref($add.ref($p1118, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(244, 40)), $mul.ref(4, 1));
    goto corral_source_split_4127;

  corral_source_split_4127:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1121, $sub.i32(0, 1));
    goto corral_source_split_4128;

  corral_source_split_4128:
    assume {:verifier.code 0} true;
    goto $bb281;

  $bb281:
    assume {:verifier.code 0} true;
    $p1122 := $M.1;
    goto corral_source_split_4130;

  corral_source_split_4130:
    assume {:verifier.code 0} true;
    $p1125 := $add.ref($add.ref($add.ref($add.ref($p1122, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(245, 40)), $mul.ref(4, 1));
    goto corral_source_split_4131;

  corral_source_split_4131:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1125, $sub.i32(0, 1));
    goto corral_source_split_4132;

  corral_source_split_4132:
    assume {:verifier.code 0} true;
    goto $bb282;

  $bb282:
    assume {:verifier.code 0} true;
    $p1126 := $M.1;
    goto corral_source_split_4134;

  corral_source_split_4134:
    assume {:verifier.code 0} true;
    $p1129 := $add.ref($add.ref($add.ref($add.ref($p1126, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(246, 40)), $mul.ref(4, 1));
    goto corral_source_split_4135;

  corral_source_split_4135:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1129, $sub.i32(0, 1));
    goto corral_source_split_4136;

  corral_source_split_4136:
    assume {:verifier.code 0} true;
    goto $bb283;

  $bb283:
    assume {:verifier.code 0} true;
    $p1130 := $M.1;
    goto corral_source_split_4138;

  corral_source_split_4138:
    assume {:verifier.code 0} true;
    $p1133 := $add.ref($add.ref($add.ref($add.ref($p1130, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(247, 40)), $mul.ref(4, 1));
    goto corral_source_split_4139;

  corral_source_split_4139:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1133, $sub.i32(0, 1));
    goto corral_source_split_4140;

  corral_source_split_4140:
    assume {:verifier.code 0} true;
    goto $bb284;

  $bb284:
    assume {:verifier.code 0} true;
    $p1134 := $M.1;
    goto corral_source_split_4142;

  corral_source_split_4142:
    assume {:verifier.code 0} true;
    $p1137 := $add.ref($add.ref($add.ref($add.ref($p1134, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(248, 40)), $mul.ref(4, 1));
    goto corral_source_split_4143;

  corral_source_split_4143:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1137, $sub.i32(0, 1));
    goto corral_source_split_4144;

  corral_source_split_4144:
    assume {:verifier.code 0} true;
    goto $bb285;

  $bb285:
    assume {:verifier.code 0} true;
    $p1138 := $M.1;
    goto corral_source_split_4146;

  corral_source_split_4146:
    assume {:verifier.code 0} true;
    $p1141 := $add.ref($add.ref($add.ref($add.ref($p1138, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(249, 40)), $mul.ref(4, 1));
    goto corral_source_split_4147;

  corral_source_split_4147:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1141, $sub.i32(0, 1));
    goto corral_source_split_4148;

  corral_source_split_4148:
    assume {:verifier.code 0} true;
    goto $bb286;

  $bb286:
    assume {:verifier.code 0} true;
    $p1142 := $M.1;
    goto corral_source_split_4150;

  corral_source_split_4150:
    assume {:verifier.code 0} true;
    $p1145 := $add.ref($add.ref($add.ref($add.ref($p1142, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(250, 40)), $mul.ref(4, 1));
    goto corral_source_split_4151;

  corral_source_split_4151:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1145, $sub.i32(0, 1));
    goto corral_source_split_4152;

  corral_source_split_4152:
    assume {:verifier.code 0} true;
    goto $bb287;

  $bb287:
    assume {:verifier.code 0} true;
    $p1146 := $M.1;
    goto corral_source_split_4154;

  corral_source_split_4154:
    assume {:verifier.code 0} true;
    $p1149 := $add.ref($add.ref($add.ref($add.ref($p1146, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(251, 40)), $mul.ref(4, 1));
    goto corral_source_split_4155;

  corral_source_split_4155:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1149, $sub.i32(0, 1));
    goto corral_source_split_4156;

  corral_source_split_4156:
    assume {:verifier.code 0} true;
    goto $bb288;

  $bb288:
    assume {:verifier.code 0} true;
    $p1150 := $M.1;
    goto corral_source_split_4158;

  corral_source_split_4158:
    assume {:verifier.code 0} true;
    $p1153 := $add.ref($add.ref($add.ref($add.ref($p1150, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(252, 40)), $mul.ref(4, 1));
    goto corral_source_split_4159;

  corral_source_split_4159:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1153, $sub.i32(0, 1));
    goto corral_source_split_4160;

  corral_source_split_4160:
    assume {:verifier.code 0} true;
    goto $bb289;

  $bb289:
    assume {:verifier.code 0} true;
    $p1154 := $M.1;
    goto corral_source_split_4162;

  corral_source_split_4162:
    assume {:verifier.code 0} true;
    $p1157 := $add.ref($add.ref($add.ref($add.ref($p1154, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(253, 40)), $mul.ref(4, 1));
    goto corral_source_split_4163;

  corral_source_split_4163:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1157, $sub.i32(0, 1));
    goto corral_source_split_4164;

  corral_source_split_4164:
    assume {:verifier.code 0} true;
    goto $bb290;

  $bb290:
    assume {:verifier.code 0} true;
    $p1158 := $M.1;
    goto corral_source_split_4166;

  corral_source_split_4166:
    assume {:verifier.code 0} true;
    $p1161 := $add.ref($add.ref($add.ref($add.ref($p1158, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(254, 40)), $mul.ref(4, 1));
    goto corral_source_split_4167;

  corral_source_split_4167:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1161, $sub.i32(0, 1));
    goto corral_source_split_4168;

  corral_source_split_4168:
    assume {:verifier.code 0} true;
    goto $bb291;

  $bb291:
    assume {:verifier.code 0} true;
    $p1162 := $M.1;
    goto corral_source_split_4170;

  corral_source_split_4170:
    assume {:verifier.code 0} true;
    $p1165 := $add.ref($add.ref($add.ref($add.ref($p1162, $mul.ref(0, 11656)), $mul.ref(1112, 1)), $mul.ref(255, 40)), $mul.ref(4, 1));
    goto corral_source_split_4171;

  corral_source_split_4171:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p1165, $sub.i32(0, 1));
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i6 := $i7;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2957;

  corral_source_split_2957:
    assume {:verifier.code 0} true;
    $r := $i6;
    return;

  $bb17:
    assume $i68 == 1;
    goto corral_source_split_3047;

  corral_source_split_3047:
    assume {:verifier.code 0} true;
    $p69 := $M.1;
    goto corral_source_split_3048;

  corral_source_split_3048:
    assume {:verifier.code 0} true;
    $p70 := $add.ref($add.ref($p69, $mul.ref(0, 11656)), $mul.ref(11648, 1));
    goto corral_source_split_3049;

  corral_source_split_3049:
    assume {:verifier.code 0} true;
    $i71 := $load.i32($M.0, $p70);
    goto corral_source_split_3050;

  corral_source_split_3050:
    assume {:verifier.code 0} true;
    $i72 := $ne.i32($i71, 0);
    goto corral_source_split_3051;

  corral_source_split_3051:
    assume {:verifier.code 0} true;
    assume {:branchcond $i72} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i72 == 1);
    goto corral_source_split_3076;

  corral_source_split_3076:
    assume {:verifier.code 0} true;
    $p78 := $M.1;
    goto corral_source_split_3077;

  corral_source_split_3077:
    assume {:verifier.code 0} true;
    $p80 := $add.ref($add.ref($add.ref($p78, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_3078;

  corral_source_split_3078:
    assume {:verifier.code 0} true;
    $p81 := $bitcast.ref.ref($p80);
    goto corral_source_split_3079;

  corral_source_split_3079:
    assume {:verifier.code 0} true;
    call {:si_unique_call 558} vslice_dummy_var_84 := strcpy($p81, .str.17);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $p83 := $M.1;
    goto corral_source_split_3081;

  corral_source_split_3081:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($add.ref($p83, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_3082;

  corral_source_split_3082:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p84, 18);
    goto corral_source_split_3083;

  corral_source_split_3083:
    assume {:verifier.code 0} true;
    $p85 := $M.1;
    goto corral_source_split_3084;

  corral_source_split_3084:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p85, $mul.ref(0, 11656)), $mul.ref(1096, 1));
    goto corral_source_split_3085;

  corral_source_split_3085:
    assume {:verifier.code 0} true;
    $p87 := $load.ref($M.0, $p86);
    goto corral_source_split_3086;

  corral_source_split_3086:
    assume {:verifier.code 0} true;
    $p88 := $add.ref($add.ref($p87, $mul.ref(0, 208)), $mul.ref(0, 1));
    goto corral_source_split_3087;

  corral_source_split_3087:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p88, 18);
    goto corral_source_split_3088;

  corral_source_split_3088:
    assume {:verifier.code 0} true;
    $p89 := $M.1;
    goto corral_source_split_3089;

  corral_source_split_3089:
    assume {:verifier.code 0} true;
    $p91 := $add.ref($add.ref($add.ref($p89, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(52, 1));
    goto corral_source_split_3090;

  corral_source_split_3090:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p91, 0);
    goto corral_source_split_3091;

  corral_source_split_3091:
    assume {:verifier.code 0} true;
    $p92 := $M.1;
    goto corral_source_split_3092;

  corral_source_split_3092:
    assume {:verifier.code 0} true;
    $p94 := $add.ref($add.ref($add.ref($p92, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(40, 1));
    goto corral_source_split_3093;

  corral_source_split_3093:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p94, 1);
    goto corral_source_split_3094;

  corral_source_split_3094:
    assume {:verifier.code 0} true;
    $p95 := $M.1;
    goto corral_source_split_3095;

  corral_source_split_3095:
    assume {:verifier.code 0} true;
    $p97 := $add.ref($add.ref($add.ref($p95, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(60, 1));
    goto corral_source_split_3096;

  corral_source_split_3096:
    assume {:verifier.code 0} true;
    $i98 := $load.i32($M.0, $p97);
    goto corral_source_split_3097;

  corral_source_split_3097:
    assume {:verifier.code 0} true;
    $i99 := $or.i32($i98, 2);
    goto corral_source_split_3098;

  corral_source_split_3098:
    assume {:verifier.code 0} true;
    $p100 := $M.1;
    goto corral_source_split_3099;

  corral_source_split_3099:
    assume {:verifier.code 0} true;
    $p102 := $add.ref($add.ref($add.ref($p100, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(60, 1));
    goto corral_source_split_3100;

  corral_source_split_3100:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p102, $i99);
    goto corral_source_split_3101;

  corral_source_split_3101:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i103 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(2, 1)));
    goto corral_source_split_3103;

  corral_source_split_3103:
    assume {:verifier.code 0} true;
    $i104 := $zext.i16.i32($i103);
    goto corral_source_split_3104;

  corral_source_split_3104:
    assume {:verifier.code 0} true;
    $i105 := $eq.i32($i104, 0);
    goto corral_source_split_3105;

  corral_source_split_3105:
    assume {:verifier.code 0} true;
    assume {:branchcond $i105} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i105 == 1);
    goto corral_source_split_3114;

  corral_source_split_3114:
    assume {:verifier.code 0} true;
    $p110 := $M.1;
    goto corral_source_split_3115;

  corral_source_split_3115:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($p110, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_3116;

  corral_source_split_3116:
    assume {:verifier.code 0} true;
    $i112 := $load.i32($M.0, $p111);
    goto corral_source_split_3117;

  corral_source_split_3117:
    assume {:verifier.code 0} true;
    $i113 := $trunc.i32.i16($i112);
    goto corral_source_split_3118;

  corral_source_split_3118:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(2, 1)), $i113);
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i1166 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(2, 1)));
    goto corral_source_split_3120;

  corral_source_split_3120:
    assume {:verifier.code 0} true;
    $i1167 := $zext.i16.i32($i1166);
    goto corral_source_split_3121;

  corral_source_split_3121:
    assume {:verifier.code 0} true;
    $i1168 := $eq.i32($i1167, 0);
    goto corral_source_split_3122;

  corral_source_split_3122:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1168} true;
    goto $bb292, $bb293;

  $bb293:
    assume !($i1168 == 1);
    goto corral_source_split_4180;

  corral_source_split_4180:
    assume {:verifier.code 0} true;
    $p1169 := $M.1;
    goto corral_source_split_4181;

  corral_source_split_4181:
    assume {:verifier.code 0} true;
    $p1170 := $add.ref($add.ref($p1169, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4182;

  corral_source_split_4182:
    assume {:verifier.code 0} true;
    $i1171 := $load.i32($M.0, $p1170);
    goto corral_source_split_4183;

  corral_source_split_4183:
    assume {:verifier.code 0} true;
    $i1172 := $trunc.i32.i16($i1171);
    goto corral_source_split_4184;

  corral_source_split_4184:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(2, 1)), $i1172);
    assume {:verifier.code 0} true;
    goto $bb294;

  $bb294:
    assume {:verifier.code 0} true;
    goto $bb295;

  $bb295:
    assume {:verifier.code 0} true;
    $i1177 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4186;

  corral_source_split_4186:
    assume {:verifier.code 0} true;
    $i1178 := $zext.i16.i32($i1177);
    goto corral_source_split_4187;

  corral_source_split_4187:
    assume {:verifier.code 0} true;
    $i1179 := $eq.i32($i1178, 0);
    goto corral_source_split_4188;

  corral_source_split_4188:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1179} true;
    goto $bb296, $bb297;

  $bb297:
    assume !($i1179 == 1);
    goto corral_source_split_4197;

  corral_source_split_4197:
    assume {:verifier.code 0} true;
    $p1180 := $M.1;
    goto corral_source_split_4198;

  corral_source_split_4198:
    assume {:verifier.code 0} true;
    $p1181 := $add.ref($add.ref($p1180, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4199;

  corral_source_split_4199:
    assume {:verifier.code 0} true;
    $i1182 := $load.i32($M.0, $p1181);
    goto corral_source_split_4200;

  corral_source_split_4200:
    assume {:verifier.code 0} true;
    $i1183 := $trunc.i32.i16($i1182);
    goto corral_source_split_4201;

  corral_source_split_4201:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(2, 1)), $i1183);
    assume {:verifier.code 0} true;
    goto $bb298;

  $bb298:
    assume {:verifier.code 0} true;
    goto $bb299;

  $bb299:
    assume {:verifier.code 0} true;
    $i1188 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4203;

  corral_source_split_4203:
    assume {:verifier.code 0} true;
    $i1189 := $zext.i16.i32($i1188);
    goto corral_source_split_4204;

  corral_source_split_4204:
    assume {:verifier.code 0} true;
    $i1190 := $eq.i32($i1189, 0);
    goto corral_source_split_4205;

  corral_source_split_4205:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1190} true;
    goto $bb300, $bb301;

  $bb301:
    assume !($i1190 == 1);
    goto corral_source_split_4214;

  corral_source_split_4214:
    assume {:verifier.code 0} true;
    $p1191 := $M.1;
    goto corral_source_split_4215;

  corral_source_split_4215:
    assume {:verifier.code 0} true;
    $p1192 := $add.ref($add.ref($p1191, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4216;

  corral_source_split_4216:
    assume {:verifier.code 0} true;
    $i1193 := $load.i32($M.0, $p1192);
    goto corral_source_split_4217;

  corral_source_split_4217:
    assume {:verifier.code 0} true;
    $i1194 := $trunc.i32.i16($i1193);
    goto corral_source_split_4218;

  corral_source_split_4218:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(2, 1)), $i1194);
    assume {:verifier.code 0} true;
    goto $bb302;

  $bb302:
    assume {:verifier.code 0} true;
    goto $bb303;

  $bb303:
    assume {:verifier.code 0} true;
    $i1199 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4220;

  corral_source_split_4220:
    assume {:verifier.code 0} true;
    $i1200 := $zext.i16.i32($i1199);
    goto corral_source_split_4221;

  corral_source_split_4221:
    assume {:verifier.code 0} true;
    $i1201 := $eq.i32($i1200, 0);
    goto corral_source_split_4222;

  corral_source_split_4222:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1201} true;
    goto $bb304, $bb305;

  $bb305:
    assume !($i1201 == 1);
    goto corral_source_split_4231;

  corral_source_split_4231:
    assume {:verifier.code 0} true;
    $p1202 := $M.1;
    goto corral_source_split_4232;

  corral_source_split_4232:
    assume {:verifier.code 0} true;
    $p1203 := $add.ref($add.ref($p1202, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4233;

  corral_source_split_4233:
    assume {:verifier.code 0} true;
    $i1204 := $load.i32($M.0, $p1203);
    goto corral_source_split_4234;

  corral_source_split_4234:
    assume {:verifier.code 0} true;
    $i1205 := $trunc.i32.i16($i1204);
    goto corral_source_split_4235;

  corral_source_split_4235:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(2, 1)), $i1205);
    assume {:verifier.code 0} true;
    goto $bb306;

  $bb306:
    assume {:verifier.code 0} true;
    goto $bb307;

  $bb307:
    assume {:verifier.code 0} true;
    $i1210 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4237;

  corral_source_split_4237:
    assume {:verifier.code 0} true;
    $i1211 := $zext.i16.i32($i1210);
    goto corral_source_split_4238;

  corral_source_split_4238:
    assume {:verifier.code 0} true;
    $i1212 := $eq.i32($i1211, 0);
    goto corral_source_split_4239;

  corral_source_split_4239:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1212} true;
    goto $bb308, $bb309;

  $bb309:
    assume !($i1212 == 1);
    goto corral_source_split_4248;

  corral_source_split_4248:
    assume {:verifier.code 0} true;
    $p1213 := $M.1;
    goto corral_source_split_4249;

  corral_source_split_4249:
    assume {:verifier.code 0} true;
    $p1214 := $add.ref($add.ref($p1213, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4250;

  corral_source_split_4250:
    assume {:verifier.code 0} true;
    $i1215 := $load.i32($M.0, $p1214);
    goto corral_source_split_4251;

  corral_source_split_4251:
    assume {:verifier.code 0} true;
    $i1216 := $trunc.i32.i16($i1215);
    goto corral_source_split_4252;

  corral_source_split_4252:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(2, 1)), $i1216);
    assume {:verifier.code 0} true;
    goto $bb310;

  $bb310:
    assume {:verifier.code 0} true;
    goto $bb311;

  $bb311:
    assume {:verifier.code 0} true;
    $i1221 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4254;

  corral_source_split_4254:
    assume {:verifier.code 0} true;
    $i1222 := $zext.i16.i32($i1221);
    goto corral_source_split_4255;

  corral_source_split_4255:
    assume {:verifier.code 0} true;
    $i1223 := $eq.i32($i1222, 0);
    goto corral_source_split_4256;

  corral_source_split_4256:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1223} true;
    goto $bb312, $bb313;

  $bb313:
    assume !($i1223 == 1);
    goto corral_source_split_4265;

  corral_source_split_4265:
    assume {:verifier.code 0} true;
    $p1224 := $M.1;
    goto corral_source_split_4266;

  corral_source_split_4266:
    assume {:verifier.code 0} true;
    $p1225 := $add.ref($add.ref($p1224, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4267;

  corral_source_split_4267:
    assume {:verifier.code 0} true;
    $i1226 := $load.i32($M.0, $p1225);
    goto corral_source_split_4268;

  corral_source_split_4268:
    assume {:verifier.code 0} true;
    $i1227 := $trunc.i32.i16($i1226);
    goto corral_source_split_4269;

  corral_source_split_4269:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(2, 1)), $i1227);
    assume {:verifier.code 0} true;
    goto $bb314;

  $bb314:
    assume {:verifier.code 0} true;
    goto $bb315;

  $bb315:
    assume {:verifier.code 0} true;
    $i1232 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4271;

  corral_source_split_4271:
    assume {:verifier.code 0} true;
    $i1233 := $zext.i16.i32($i1232);
    goto corral_source_split_4272;

  corral_source_split_4272:
    assume {:verifier.code 0} true;
    $i1234 := $eq.i32($i1233, 0);
    goto corral_source_split_4273;

  corral_source_split_4273:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1234} true;
    goto $bb316, $bb317;

  $bb317:
    assume !($i1234 == 1);
    goto corral_source_split_4282;

  corral_source_split_4282:
    assume {:verifier.code 0} true;
    $p1235 := $M.1;
    goto corral_source_split_4283;

  corral_source_split_4283:
    assume {:verifier.code 0} true;
    $p1236 := $add.ref($add.ref($p1235, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4284;

  corral_source_split_4284:
    assume {:verifier.code 0} true;
    $i1237 := $load.i32($M.0, $p1236);
    goto corral_source_split_4285;

  corral_source_split_4285:
    assume {:verifier.code 0} true;
    $i1238 := $trunc.i32.i16($i1237);
    goto corral_source_split_4286;

  corral_source_split_4286:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(2, 1)), $i1238);
    assume {:verifier.code 0} true;
    goto $bb318;

  $bb318:
    assume {:verifier.code 0} true;
    goto $bb319;

  $bb319:
    assume {:verifier.code 0} true;
    $i1243 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4288;

  corral_source_split_4288:
    assume {:verifier.code 0} true;
    $i1244 := $zext.i16.i32($i1243);
    goto corral_source_split_4289;

  corral_source_split_4289:
    assume {:verifier.code 0} true;
    $i1245 := $eq.i32($i1244, 0);
    goto corral_source_split_4290;

  corral_source_split_4290:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1245} true;
    goto $bb320, $bb321;

  $bb321:
    assume !($i1245 == 1);
    goto corral_source_split_4299;

  corral_source_split_4299:
    assume {:verifier.code 0} true;
    $p1246 := $M.1;
    goto corral_source_split_4300;

  corral_source_split_4300:
    assume {:verifier.code 0} true;
    $p1247 := $add.ref($add.ref($p1246, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4301;

  corral_source_split_4301:
    assume {:verifier.code 0} true;
    $i1248 := $load.i32($M.0, $p1247);
    goto corral_source_split_4302;

  corral_source_split_4302:
    assume {:verifier.code 0} true;
    $i1249 := $trunc.i32.i16($i1248);
    goto corral_source_split_4303;

  corral_source_split_4303:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(2, 1)), $i1249);
    assume {:verifier.code 0} true;
    goto $bb322;

  $bb322:
    assume {:verifier.code 0} true;
    goto $bb323;

  $bb323:
    assume {:verifier.code 0} true;
    $i1254 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4305;

  corral_source_split_4305:
    assume {:verifier.code 0} true;
    $i1255 := $zext.i16.i32($i1254);
    goto corral_source_split_4306;

  corral_source_split_4306:
    assume {:verifier.code 0} true;
    $i1256 := $eq.i32($i1255, 0);
    goto corral_source_split_4307;

  corral_source_split_4307:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1256} true;
    goto $bb324, $bb325;

  $bb325:
    assume !($i1256 == 1);
    goto corral_source_split_4316;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    $p1257 := $M.1;
    goto corral_source_split_4317;

  corral_source_split_4317:
    assume {:verifier.code 0} true;
    $p1258 := $add.ref($add.ref($p1257, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4318;

  corral_source_split_4318:
    assume {:verifier.code 0} true;
    $i1259 := $load.i32($M.0, $p1258);
    goto corral_source_split_4319;

  corral_source_split_4319:
    assume {:verifier.code 0} true;
    $i1260 := $trunc.i32.i16($i1259);
    goto corral_source_split_4320;

  corral_source_split_4320:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(2, 1)), $i1260);
    assume {:verifier.code 0} true;
    goto $bb326;

  $bb326:
    assume {:verifier.code 0} true;
    goto $bb327;

  $bb327:
    assume {:verifier.code 0} true;
    $i1265 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4322;

  corral_source_split_4322:
    assume {:verifier.code 0} true;
    $i1266 := $zext.i16.i32($i1265);
    goto corral_source_split_4323;

  corral_source_split_4323:
    assume {:verifier.code 0} true;
    $i1267 := $eq.i32($i1266, 0);
    goto corral_source_split_4324;

  corral_source_split_4324:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1267} true;
    goto $bb328, $bb329;

  $bb329:
    assume !($i1267 == 1);
    goto corral_source_split_4333;

  corral_source_split_4333:
    assume {:verifier.code 0} true;
    $p1268 := $M.1;
    goto corral_source_split_4334;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    $p1269 := $add.ref($add.ref($p1268, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4335;

  corral_source_split_4335:
    assume {:verifier.code 0} true;
    $i1270 := $load.i32($M.0, $p1269);
    goto corral_source_split_4336;

  corral_source_split_4336:
    assume {:verifier.code 0} true;
    $i1271 := $trunc.i32.i16($i1270);
    goto corral_source_split_4337;

  corral_source_split_4337:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(2, 1)), $i1271);
    assume {:verifier.code 0} true;
    goto $bb330;

  $bb330:
    assume {:verifier.code 0} true;
    goto $bb331;

  $bb331:
    assume {:verifier.code 0} true;
    $i1276 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4339;

  corral_source_split_4339:
    assume {:verifier.code 0} true;
    $i1277 := $zext.i16.i32($i1276);
    goto corral_source_split_4340;

  corral_source_split_4340:
    assume {:verifier.code 0} true;
    $i1278 := $eq.i32($i1277, 0);
    goto corral_source_split_4341;

  corral_source_split_4341:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1278} true;
    goto $bb332, $bb333;

  $bb333:
    assume !($i1278 == 1);
    goto corral_source_split_4350;

  corral_source_split_4350:
    assume {:verifier.code 0} true;
    $p1279 := $M.1;
    goto corral_source_split_4351;

  corral_source_split_4351:
    assume {:verifier.code 0} true;
    $p1280 := $add.ref($add.ref($p1279, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4352;

  corral_source_split_4352:
    assume {:verifier.code 0} true;
    $i1281 := $load.i32($M.0, $p1280);
    goto corral_source_split_4353;

  corral_source_split_4353:
    assume {:verifier.code 0} true;
    $i1282 := $trunc.i32.i16($i1281);
    goto corral_source_split_4354;

  corral_source_split_4354:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(2, 1)), $i1282);
    assume {:verifier.code 0} true;
    goto $bb334;

  $bb334:
    assume {:verifier.code 0} true;
    goto $bb335;

  $bb335:
    assume {:verifier.code 0} true;
    $i1287 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4356;

  corral_source_split_4356:
    assume {:verifier.code 0} true;
    $i1288 := $zext.i16.i32($i1287);
    goto corral_source_split_4357;

  corral_source_split_4357:
    assume {:verifier.code 0} true;
    $i1289 := $eq.i32($i1288, 0);
    goto corral_source_split_4358;

  corral_source_split_4358:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1289} true;
    goto $bb336, $bb337;

  $bb337:
    assume !($i1289 == 1);
    goto corral_source_split_4367;

  corral_source_split_4367:
    assume {:verifier.code 0} true;
    $p1290 := $M.1;
    goto corral_source_split_4368;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    $p1291 := $add.ref($add.ref($p1290, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4369;

  corral_source_split_4369:
    assume {:verifier.code 0} true;
    $i1292 := $load.i32($M.0, $p1291);
    goto corral_source_split_4370;

  corral_source_split_4370:
    assume {:verifier.code 0} true;
    $i1293 := $trunc.i32.i16($i1292);
    goto corral_source_split_4371;

  corral_source_split_4371:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(2, 1)), $i1293);
    assume {:verifier.code 0} true;
    goto $bb338;

  $bb338:
    assume {:verifier.code 0} true;
    goto $bb339;

  $bb339:
    assume {:verifier.code 0} true;
    $i1298 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4373;

  corral_source_split_4373:
    assume {:verifier.code 0} true;
    $i1299 := $zext.i16.i32($i1298);
    goto corral_source_split_4374;

  corral_source_split_4374:
    assume {:verifier.code 0} true;
    $i1300 := $eq.i32($i1299, 0);
    goto corral_source_split_4375;

  corral_source_split_4375:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1300} true;
    goto $bb340, $bb341;

  $bb341:
    assume !($i1300 == 1);
    goto corral_source_split_4384;

  corral_source_split_4384:
    assume {:verifier.code 0} true;
    $p1301 := $M.1;
    goto corral_source_split_4385;

  corral_source_split_4385:
    assume {:verifier.code 0} true;
    $p1302 := $add.ref($add.ref($p1301, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4386;

  corral_source_split_4386:
    assume {:verifier.code 0} true;
    $i1303 := $load.i32($M.0, $p1302);
    goto corral_source_split_4387;

  corral_source_split_4387:
    assume {:verifier.code 0} true;
    $i1304 := $trunc.i32.i16($i1303);
    goto corral_source_split_4388;

  corral_source_split_4388:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(2, 1)), $i1304);
    assume {:verifier.code 0} true;
    goto $bb342;

  $bb342:
    assume {:verifier.code 0} true;
    goto $bb343;

  $bb343:
    assume {:verifier.code 0} true;
    $i1309 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4390;

  corral_source_split_4390:
    assume {:verifier.code 0} true;
    $i1310 := $zext.i16.i32($i1309);
    goto corral_source_split_4391;

  corral_source_split_4391:
    assume {:verifier.code 0} true;
    $i1311 := $eq.i32($i1310, 0);
    goto corral_source_split_4392;

  corral_source_split_4392:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1311} true;
    goto $bb344, $bb345;

  $bb345:
    assume !($i1311 == 1);
    goto corral_source_split_4401;

  corral_source_split_4401:
    assume {:verifier.code 0} true;
    $p1312 := $M.1;
    goto corral_source_split_4402;

  corral_source_split_4402:
    assume {:verifier.code 0} true;
    $p1313 := $add.ref($add.ref($p1312, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4403;

  corral_source_split_4403:
    assume {:verifier.code 0} true;
    $i1314 := $load.i32($M.0, $p1313);
    goto corral_source_split_4404;

  corral_source_split_4404:
    assume {:verifier.code 0} true;
    $i1315 := $trunc.i32.i16($i1314);
    goto corral_source_split_4405;

  corral_source_split_4405:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(2, 1)), $i1315);
    assume {:verifier.code 0} true;
    goto $bb346;

  $bb346:
    assume {:verifier.code 0} true;
    goto $bb347;

  $bb347:
    assume {:verifier.code 0} true;
    $i1320 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4407;

  corral_source_split_4407:
    assume {:verifier.code 0} true;
    $i1321 := $zext.i16.i32($i1320);
    goto corral_source_split_4408;

  corral_source_split_4408:
    assume {:verifier.code 0} true;
    $i1322 := $eq.i32($i1321, 0);
    goto corral_source_split_4409;

  corral_source_split_4409:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1322} true;
    goto $bb348, $bb349;

  $bb349:
    assume !($i1322 == 1);
    goto corral_source_split_4418;

  corral_source_split_4418:
    assume {:verifier.code 0} true;
    $p1323 := $M.1;
    goto corral_source_split_4419;

  corral_source_split_4419:
    assume {:verifier.code 0} true;
    $p1324 := $add.ref($add.ref($p1323, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4420;

  corral_source_split_4420:
    assume {:verifier.code 0} true;
    $i1325 := $load.i32($M.0, $p1324);
    goto corral_source_split_4421;

  corral_source_split_4421:
    assume {:verifier.code 0} true;
    $i1326 := $trunc.i32.i16($i1325);
    goto corral_source_split_4422;

  corral_source_split_4422:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(2, 1)), $i1326);
    assume {:verifier.code 0} true;
    goto $bb350;

  $bb350:
    assume {:verifier.code 0} true;
    goto $bb351;

  $bb351:
    assume {:verifier.code 0} true;
    $i1331 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4424;

  corral_source_split_4424:
    assume {:verifier.code 0} true;
    $i1332 := $zext.i16.i32($i1331);
    goto corral_source_split_4425;

  corral_source_split_4425:
    assume {:verifier.code 0} true;
    $i1333 := $eq.i32($i1332, 0);
    goto corral_source_split_4426;

  corral_source_split_4426:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1333} true;
    goto $bb352, $bb353;

  $bb353:
    assume !($i1333 == 1);
    goto corral_source_split_4435;

  corral_source_split_4435:
    assume {:verifier.code 0} true;
    $p1334 := $M.1;
    goto corral_source_split_4436;

  corral_source_split_4436:
    assume {:verifier.code 0} true;
    $p1335 := $add.ref($add.ref($p1334, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4437;

  corral_source_split_4437:
    assume {:verifier.code 0} true;
    $i1336 := $load.i32($M.0, $p1335);
    goto corral_source_split_4438;

  corral_source_split_4438:
    assume {:verifier.code 0} true;
    $i1337 := $trunc.i32.i16($i1336);
    goto corral_source_split_4439;

  corral_source_split_4439:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(2, 1)), $i1337);
    assume {:verifier.code 0} true;
    goto $bb354;

  $bb354:
    assume {:verifier.code 0} true;
    goto $bb355;

  $bb355:
    assume {:verifier.code 0} true;
    $i1342 := $load.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(2, 1)));
    goto corral_source_split_4441;

  corral_source_split_4441:
    assume {:verifier.code 0} true;
    $i1343 := $zext.i16.i32($i1342);
    goto corral_source_split_4442;

  corral_source_split_4442:
    assume {:verifier.code 0} true;
    $i1344 := $eq.i32($i1343, 0);
    goto corral_source_split_4443;

  corral_source_split_4443:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1344} true;
    goto $bb356, $bb357;

  $bb357:
    assume !($i1344 == 1);
    goto corral_source_split_4452;

  corral_source_split_4452:
    assume {:verifier.code 0} true;
    $p1345 := $M.1;
    goto corral_source_split_4453;

  corral_source_split_4453:
    assume {:verifier.code 0} true;
    $p1346 := $add.ref($add.ref($p1345, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_4454;

  corral_source_split_4454:
    assume {:verifier.code 0} true;
    $i1347 := $load.i32($M.0, $p1346);
    goto corral_source_split_4455;

  corral_source_split_4455:
    assume {:verifier.code 0} true;
    $i1348 := $trunc.i32.i16($i1347);
    goto corral_source_split_4456;

  corral_source_split_4456:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(2, 1)), $i1348);
    assume {:verifier.code 0} true;
    goto $bb358;

  $bb358:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $p114 := $M.1;
    goto corral_source_split_3124;

  corral_source_split_3124:
    assume {:verifier.code 0} true;
    $p115 := $add.ref($add.ref($p114, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_3125;

  corral_source_split_3125:
    assume {:verifier.code 0} true;
    $i116 := $load.i32($M.0, $p115);
    goto corral_source_split_3126;

  corral_source_split_3126:
    assume {:verifier.code 0} true;
    call {:si_unique_call 559} opl3_command($i116, 5, 1);
    goto corral_source_split_3127;

  corral_source_split_3127:
    assume {:verifier.code 0} true;
    $p117 := $M.1;
    goto corral_source_split_3128;

  corral_source_split_3128:
    assume {:verifier.code 0} true;
    $p118 := $add.ref($add.ref($p117, $mul.ref(0, 11656)), $mul.ref(8, 1));
    goto corral_source_split_3129;

  corral_source_split_3129:
    assume {:verifier.code 0} true;
    $i119 := $load.i32($M.0, $p118);
    goto corral_source_split_3130;

  corral_source_split_3130:
    assume {:verifier.code 0} true;
    call {:si_unique_call 560} opl3_command($i119, 4, 0);
    goto corral_source_split_3131;

  corral_source_split_3131:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb356:
    assume $i1344 == 1;
    goto corral_source_split_4445;

  corral_source_split_4445:
    assume {:verifier.code 0} true;
    $p1349 := $M.1;
    goto corral_source_split_4446;

  corral_source_split_4446:
    assume {:verifier.code 0} true;
    $p1350 := $add.ref($add.ref($p1349, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4447;

  corral_source_split_4447:
    assume {:verifier.code 0} true;
    $i1351 := $load.i32($M.0, $p1350);
    goto corral_source_split_4448;

  corral_source_split_4448:
    assume {:verifier.code 0} true;
    $i1352 := $trunc.i32.i16($i1351);
    goto corral_source_split_4449;

  corral_source_split_4449:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(2, 1)), $i1352);
    goto corral_source_split_4450;

  corral_source_split_4450:
    assume {:verifier.code 0} true;
    goto $bb358;

  $bb352:
    assume $i1333 == 1;
    goto corral_source_split_4428;

  corral_source_split_4428:
    assume {:verifier.code 0} true;
    $p1338 := $M.1;
    goto corral_source_split_4429;

  corral_source_split_4429:
    assume {:verifier.code 0} true;
    $p1339 := $add.ref($add.ref($p1338, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4430;

  corral_source_split_4430:
    assume {:verifier.code 0} true;
    $i1340 := $load.i32($M.0, $p1339);
    goto corral_source_split_4431;

  corral_source_split_4431:
    assume {:verifier.code 0} true;
    $i1341 := $trunc.i32.i16($i1340);
    goto corral_source_split_4432;

  corral_source_split_4432:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(2, 1)), $i1341);
    goto corral_source_split_4433;

  corral_source_split_4433:
    assume {:verifier.code 0} true;
    goto $bb354;

  $bb348:
    assume $i1322 == 1;
    goto corral_source_split_4411;

  corral_source_split_4411:
    assume {:verifier.code 0} true;
    $p1327 := $M.1;
    goto corral_source_split_4412;

  corral_source_split_4412:
    assume {:verifier.code 0} true;
    $p1328 := $add.ref($add.ref($p1327, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4413;

  corral_source_split_4413:
    assume {:verifier.code 0} true;
    $i1329 := $load.i32($M.0, $p1328);
    goto corral_source_split_4414;

  corral_source_split_4414:
    assume {:verifier.code 0} true;
    $i1330 := $trunc.i32.i16($i1329);
    goto corral_source_split_4415;

  corral_source_split_4415:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(2, 1)), $i1330);
    goto corral_source_split_4416;

  corral_source_split_4416:
    assume {:verifier.code 0} true;
    goto $bb350;

  $bb344:
    assume $i1311 == 1;
    goto corral_source_split_4394;

  corral_source_split_4394:
    assume {:verifier.code 0} true;
    $p1316 := $M.1;
    goto corral_source_split_4395;

  corral_source_split_4395:
    assume {:verifier.code 0} true;
    $p1317 := $add.ref($add.ref($p1316, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4396;

  corral_source_split_4396:
    assume {:verifier.code 0} true;
    $i1318 := $load.i32($M.0, $p1317);
    goto corral_source_split_4397;

  corral_source_split_4397:
    assume {:verifier.code 0} true;
    $i1319 := $trunc.i32.i16($i1318);
    goto corral_source_split_4398;

  corral_source_split_4398:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(2, 1)), $i1319);
    goto corral_source_split_4399;

  corral_source_split_4399:
    assume {:verifier.code 0} true;
    goto $bb346;

  $bb340:
    assume $i1300 == 1;
    goto corral_source_split_4377;

  corral_source_split_4377:
    assume {:verifier.code 0} true;
    $p1305 := $M.1;
    goto corral_source_split_4378;

  corral_source_split_4378:
    assume {:verifier.code 0} true;
    $p1306 := $add.ref($add.ref($p1305, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4379;

  corral_source_split_4379:
    assume {:verifier.code 0} true;
    $i1307 := $load.i32($M.0, $p1306);
    goto corral_source_split_4380;

  corral_source_split_4380:
    assume {:verifier.code 0} true;
    $i1308 := $trunc.i32.i16($i1307);
    goto corral_source_split_4381;

  corral_source_split_4381:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(2, 1)), $i1308);
    goto corral_source_split_4382;

  corral_source_split_4382:
    assume {:verifier.code 0} true;
    goto $bb342;

  $bb336:
    assume $i1289 == 1;
    goto corral_source_split_4360;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    $p1294 := $M.1;
    goto corral_source_split_4361;

  corral_source_split_4361:
    assume {:verifier.code 0} true;
    $p1295 := $add.ref($add.ref($p1294, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4362;

  corral_source_split_4362:
    assume {:verifier.code 0} true;
    $i1296 := $load.i32($M.0, $p1295);
    goto corral_source_split_4363;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    $i1297 := $trunc.i32.i16($i1296);
    goto corral_source_split_4364;

  corral_source_split_4364:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(2, 1)), $i1297);
    goto corral_source_split_4365;

  corral_source_split_4365:
    assume {:verifier.code 0} true;
    goto $bb338;

  $bb332:
    assume $i1278 == 1;
    goto corral_source_split_4343;

  corral_source_split_4343:
    assume {:verifier.code 0} true;
    $p1283 := $M.1;
    goto corral_source_split_4344;

  corral_source_split_4344:
    assume {:verifier.code 0} true;
    $p1284 := $add.ref($add.ref($p1283, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4345;

  corral_source_split_4345:
    assume {:verifier.code 0} true;
    $i1285 := $load.i32($M.0, $p1284);
    goto corral_source_split_4346;

  corral_source_split_4346:
    assume {:verifier.code 0} true;
    $i1286 := $trunc.i32.i16($i1285);
    goto corral_source_split_4347;

  corral_source_split_4347:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(2, 1)), $i1286);
    goto corral_source_split_4348;

  corral_source_split_4348:
    assume {:verifier.code 0} true;
    goto $bb334;

  $bb328:
    assume $i1267 == 1;
    goto corral_source_split_4326;

  corral_source_split_4326:
    assume {:verifier.code 0} true;
    $p1272 := $M.1;
    goto corral_source_split_4327;

  corral_source_split_4327:
    assume {:verifier.code 0} true;
    $p1273 := $add.ref($add.ref($p1272, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4328;

  corral_source_split_4328:
    assume {:verifier.code 0} true;
    $i1274 := $load.i32($M.0, $p1273);
    goto corral_source_split_4329;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    $i1275 := $trunc.i32.i16($i1274);
    goto corral_source_split_4330;

  corral_source_split_4330:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(2, 1)), $i1275);
    goto corral_source_split_4331;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    goto $bb330;

  $bb324:
    assume $i1256 == 1;
    goto corral_source_split_4309;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    $p1261 := $M.1;
    goto corral_source_split_4310;

  corral_source_split_4310:
    assume {:verifier.code 0} true;
    $p1262 := $add.ref($add.ref($p1261, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4311;

  corral_source_split_4311:
    assume {:verifier.code 0} true;
    $i1263 := $load.i32($M.0, $p1262);
    goto corral_source_split_4312;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    $i1264 := $trunc.i32.i16($i1263);
    goto corral_source_split_4313;

  corral_source_split_4313:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(2, 1)), $i1264);
    goto corral_source_split_4314;

  corral_source_split_4314:
    assume {:verifier.code 0} true;
    goto $bb326;

  $bb320:
    assume $i1245 == 1;
    goto corral_source_split_4292;

  corral_source_split_4292:
    assume {:verifier.code 0} true;
    $p1250 := $M.1;
    goto corral_source_split_4293;

  corral_source_split_4293:
    assume {:verifier.code 0} true;
    $p1251 := $add.ref($add.ref($p1250, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4294;

  corral_source_split_4294:
    assume {:verifier.code 0} true;
    $i1252 := $load.i32($M.0, $p1251);
    goto corral_source_split_4295;

  corral_source_split_4295:
    assume {:verifier.code 0} true;
    $i1253 := $trunc.i32.i16($i1252);
    goto corral_source_split_4296;

  corral_source_split_4296:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(2, 1)), $i1253);
    goto corral_source_split_4297;

  corral_source_split_4297:
    assume {:verifier.code 0} true;
    goto $bb322;

  $bb316:
    assume $i1234 == 1;
    goto corral_source_split_4275;

  corral_source_split_4275:
    assume {:verifier.code 0} true;
    $p1239 := $M.1;
    goto corral_source_split_4276;

  corral_source_split_4276:
    assume {:verifier.code 0} true;
    $p1240 := $add.ref($add.ref($p1239, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4277;

  corral_source_split_4277:
    assume {:verifier.code 0} true;
    $i1241 := $load.i32($M.0, $p1240);
    goto corral_source_split_4278;

  corral_source_split_4278:
    assume {:verifier.code 0} true;
    $i1242 := $trunc.i32.i16($i1241);
    goto corral_source_split_4279;

  corral_source_split_4279:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(2, 1)), $i1242);
    goto corral_source_split_4280;

  corral_source_split_4280:
    assume {:verifier.code 0} true;
    goto $bb318;

  $bb312:
    assume $i1223 == 1;
    goto corral_source_split_4258;

  corral_source_split_4258:
    assume {:verifier.code 0} true;
    $p1228 := $M.1;
    goto corral_source_split_4259;

  corral_source_split_4259:
    assume {:verifier.code 0} true;
    $p1229 := $add.ref($add.ref($p1228, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4260;

  corral_source_split_4260:
    assume {:verifier.code 0} true;
    $i1230 := $load.i32($M.0, $p1229);
    goto corral_source_split_4261;

  corral_source_split_4261:
    assume {:verifier.code 0} true;
    $i1231 := $trunc.i32.i16($i1230);
    goto corral_source_split_4262;

  corral_source_split_4262:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(2, 1)), $i1231);
    goto corral_source_split_4263;

  corral_source_split_4263:
    assume {:verifier.code 0} true;
    goto $bb314;

  $bb308:
    assume $i1212 == 1;
    goto corral_source_split_4241;

  corral_source_split_4241:
    assume {:verifier.code 0} true;
    $p1217 := $M.1;
    goto corral_source_split_4242;

  corral_source_split_4242:
    assume {:verifier.code 0} true;
    $p1218 := $add.ref($add.ref($p1217, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4243;

  corral_source_split_4243:
    assume {:verifier.code 0} true;
    $i1219 := $load.i32($M.0, $p1218);
    goto corral_source_split_4244;

  corral_source_split_4244:
    assume {:verifier.code 0} true;
    $i1220 := $trunc.i32.i16($i1219);
    goto corral_source_split_4245;

  corral_source_split_4245:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(2, 1)), $i1220);
    goto corral_source_split_4246;

  corral_source_split_4246:
    assume {:verifier.code 0} true;
    goto $bb310;

  $bb304:
    assume $i1201 == 1;
    goto corral_source_split_4224;

  corral_source_split_4224:
    assume {:verifier.code 0} true;
    $p1206 := $M.1;
    goto corral_source_split_4225;

  corral_source_split_4225:
    assume {:verifier.code 0} true;
    $p1207 := $add.ref($add.ref($p1206, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4226;

  corral_source_split_4226:
    assume {:verifier.code 0} true;
    $i1208 := $load.i32($M.0, $p1207);
    goto corral_source_split_4227;

  corral_source_split_4227:
    assume {:verifier.code 0} true;
    $i1209 := $trunc.i32.i16($i1208);
    goto corral_source_split_4228;

  corral_source_split_4228:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(2, 1)), $i1209);
    goto corral_source_split_4229;

  corral_source_split_4229:
    assume {:verifier.code 0} true;
    goto $bb306;

  $bb300:
    assume $i1190 == 1;
    goto corral_source_split_4207;

  corral_source_split_4207:
    assume {:verifier.code 0} true;
    $p1195 := $M.1;
    goto corral_source_split_4208;

  corral_source_split_4208:
    assume {:verifier.code 0} true;
    $p1196 := $add.ref($add.ref($p1195, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4209;

  corral_source_split_4209:
    assume {:verifier.code 0} true;
    $i1197 := $load.i32($M.0, $p1196);
    goto corral_source_split_4210;

  corral_source_split_4210:
    assume {:verifier.code 0} true;
    $i1198 := $trunc.i32.i16($i1197);
    goto corral_source_split_4211;

  corral_source_split_4211:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(2, 1)), $i1198);
    goto corral_source_split_4212;

  corral_source_split_4212:
    assume {:verifier.code 0} true;
    goto $bb302;

  $bb296:
    assume $i1179 == 1;
    goto corral_source_split_4190;

  corral_source_split_4190:
    assume {:verifier.code 0} true;
    $p1184 := $M.1;
    goto corral_source_split_4191;

  corral_source_split_4191:
    assume {:verifier.code 0} true;
    $p1185 := $add.ref($add.ref($p1184, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4192;

  corral_source_split_4192:
    assume {:verifier.code 0} true;
    $i1186 := $load.i32($M.0, $p1185);
    goto corral_source_split_4193;

  corral_source_split_4193:
    assume {:verifier.code 0} true;
    $i1187 := $trunc.i32.i16($i1186);
    goto corral_source_split_4194;

  corral_source_split_4194:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(2, 1)), $i1187);
    goto corral_source_split_4195;

  corral_source_split_4195:
    assume {:verifier.code 0} true;
    goto $bb298;

  $bb292:
    assume $i1168 == 1;
    goto corral_source_split_4173;

  corral_source_split_4173:
    assume {:verifier.code 0} true;
    $p1173 := $M.1;
    goto corral_source_split_4174;

  corral_source_split_4174:
    assume {:verifier.code 0} true;
    $p1174 := $add.ref($add.ref($p1173, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_4175;

  corral_source_split_4175:
    assume {:verifier.code 0} true;
    $i1175 := $load.i32($M.0, $p1174);
    goto corral_source_split_4176;

  corral_source_split_4176:
    assume {:verifier.code 0} true;
    $i1176 := $trunc.i32.i16($i1175);
    goto corral_source_split_4177;

  corral_source_split_4177:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(2, 1)), $i1176);
    goto corral_source_split_4178;

  corral_source_split_4178:
    assume {:verifier.code 0} true;
    goto $bb294;

  $bb24:
    assume $i105 == 1;
    goto corral_source_split_3107;

  corral_source_split_3107:
    assume {:verifier.code 0} true;
    $p106 := $M.1;
    goto corral_source_split_3108;

  corral_source_split_3108:
    assume {:verifier.code 0} true;
    $p107 := $add.ref($add.ref($p106, $mul.ref(0, 11656)), $mul.ref(4, 1));
    goto corral_source_split_3109;

  corral_source_split_3109:
    assume {:verifier.code 0} true;
    $i108 := $load.i32($M.0, $p107);
    goto corral_source_split_3110;

  corral_source_split_3110:
    assume {:verifier.code 0} true;
    $i109 := $trunc.i32.i16($i108);
    goto corral_source_split_3111;

  corral_source_split_3111:
    assume {:verifier.code 0} true;
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(2, 1)), $i109);
    goto corral_source_split_3112;

  corral_source_split_3112:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb19:
    assume $i72 == 1;
    goto corral_source_split_3070;

  corral_source_split_3070:
    assume {:verifier.code 0} true;
    $p73 := $M.1;
    goto corral_source_split_3071;

  corral_source_split_3071:
    assume {:verifier.code 0} true;
    $p75 := $add.ref($add.ref($add.ref($p73, $mul.ref(0, 11656)), $mul.ref(11496, 1)), $mul.ref(0, 1));
    goto corral_source_split_3072;

  corral_source_split_3072:
    assume {:verifier.code 0} true;
    $p76 := $bitcast.ref.ref($p75);
    goto corral_source_split_3073;

  corral_source_split_3073:
    assume {:verifier.code 0} true;
    call {:si_unique_call 557} vslice_dummy_var_83 := strcpy($p76, .str.16);
    goto corral_source_split_3074;

  corral_source_split_3074:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb14:
    assume $i56 == 1;
    goto corral_source_split_3028;

  corral_source_split_3028:
    assume {:verifier.code 0} true;
    $i57 := $sext.i32.i64($i7);
    goto corral_source_split_3029;

  corral_source_split_3029:
    assume {:verifier.code 0} true;
    $p58 := $add.ref($add.ref(synth_devs, $mul.ref(0, 88)), $mul.ref($i57, 8));
    goto corral_source_split_3030;

  corral_source_split_3030:
    assume {:verifier.code 0} true;
    $p59 := $load.ref($M.0, $p58);
    goto corral_source_split_3031;

  corral_source_split_3031:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($p59, $mul.ref(0, 2696)), $mul.ref(0, 1));
    goto corral_source_split_3032;

  corral_source_split_3032:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p60, $p1);
    goto corral_source_split_3033;

  corral_source_split_3033:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb11:
    assume $i48 == 1;
    goto corral_source_split_3023;

  corral_source_split_3023:
    assume {:verifier.code 0} true;
    $p49 := $M.1;
    goto corral_source_split_3024;

  corral_source_split_3024:
    assume {:verifier.code 0} true;
    $p50 := $add.ref($add.ref($p49, $mul.ref(0, 11656)), $mul.ref(11648, 1));
    goto corral_source_split_3025;

  corral_source_split_3025:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p50, 1);
    goto corral_source_split_3026;

  corral_source_split_3026:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb8:
    assume $i42 == 1;
    goto corral_source_split_3002;

  corral_source_split_3002:
    assume {:verifier.code 0} true;
    $p43 := $M.1;
    goto corral_source_split_3003;

  corral_source_split_3003:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($p43, $mul.ref(0, 11656)), $mul.ref(11640, 1));
    goto corral_source_split_3004;

  corral_source_split_3004:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p44, 1);
    goto corral_source_split_3005;

  corral_source_split_3005:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb5:
    assume $i8 == 1;
    goto corral_source_split_2962;

  corral_source_split_2962:
    assume {:verifier.code 0} true;
    call {:si_unique_call 554} vslice_dummy_var_81 := printk.ref(.str.15);
    goto corral_source_split_2963;

  corral_source_split_2963:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 1);
    goto $bb3;

  $bb1:
    assume $i4 == 1;
    goto corral_source_split_2954;

  corral_source_split_2954:
    assume {:verifier.code 0} true;
    call {:si_unique_call 551} vslice_dummy_var_80 := printk.ref(.str.14);
    goto corral_source_split_2955;

  corral_source_split_2955:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 1);
    goto $bb3;
}



const sound_alloc_synthdev: ref;

axiom sound_alloc_synthdev == $sub.ref(0, 102669);

procedure sound_alloc_synthdev() returns ($r: i32);
  free requires assertsPassed;



implementation sound_alloc_synthdev() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4553;

  corral_source_split_4553:
    assume {:verifier.code 1} true;
    call {:si_unique_call 562} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 563} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_4554;

  corral_source_split_4554:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const sequencer_init: ref;

axiom sequencer_init == $sub.ref(0, 103701);

procedure sequencer_init();
  free requires assertsPassed;



implementation sequencer_init()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_4556;

  corral_source_split_4556:
    assume {:verifier.code 0} true;
    return;
}



const strcpy: ref;

axiom strcpy == $sub.ref(0, 104733);

procedure strcpy($p0: ref, $p1: ref) returns ($r: ref);



const conf_printf2: ref;

axiom conf_printf2 == $sub.ref(0, 105765);

procedure conf_printf2($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32);
  free requires assertsPassed;



implementation conf_printf2($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 564} {:cexpr "conf_printf2:arg:arg1"} boogie_si_record_i32($i1);
    call {:si_unique_call 565} {:cexpr "conf_printf2:arg:arg2"} boogie_si_record_i32($i2);
    call {:si_unique_call 566} {:cexpr "conf_printf2:arg:arg3"} boogie_si_record_i32($i3);
    call {:si_unique_call 567} {:cexpr "conf_printf2:arg:arg4"} boogie_si_record_i32($i4);
    goto corral_source_split_4558;

  corral_source_split_4558:
    assume {:verifier.code 0} true;
    return;
}



const kzalloc: ref;

axiom kzalloc == $sub.ref(0, 106797);

procedure kzalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation kzalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var $i2: i32;
  var $p3: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 568} {:cexpr "kzalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 569} {:cexpr "kzalloc:arg:flags"} boogie_si_record_i32($i1);
    goto corral_source_split_4560;

  corral_source_split_4560:
    assume {:verifier.code 0} true;
    $i2 := $or.i32($i1, 32768);
    goto corral_source_split_4561;

  corral_source_split_4561:
    assume {:verifier.code 0} true;
    call {:si_unique_call 570} $p3 := kmalloc($i0, $i2);
    goto corral_source_split_4562;

  corral_source_split_4562:
    assume {:verifier.code 0} true;
    $r := $p3;
    return;
}



const __request_region: ref;

axiom __request_region == $sub.ref(0, 107829);

procedure __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32) returns ($r: ref);
  free requires assertsPassed;



implementation __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32) returns ($r: ref)
{
  var $p5: ref;
  var $p6: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 571} {:cexpr "__request_region:arg:arg1"} boogie_si_record_i64($i1);
    call {:si_unique_call 572} {:cexpr "__request_region:arg:arg2"} boogie_si_record_i64($i2);
    call {:si_unique_call 573} {:cexpr "__request_region:arg:arg4"} boogie_si_record_i32($i4);
    goto corral_source_split_4564;

  corral_source_split_4564:
    assume {:verifier.code 0} true;
    call {:si_unique_call 574} $p5 := external_alloc();
    goto corral_source_split_4565;

  corral_source_split_4565:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_4566;

  corral_source_split_4566:
    assume {:verifier.code 0} true;
    $r := $p6;
    return;
}



const __release_region: ref;

axiom __release_region == $sub.ref(0, 108861);

procedure __release_region($p0: ref, $i1: i64, $i2: i64);
  free requires assertsPassed;



implementation __release_region($p0: ref, $i1: i64, $i2: i64)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 575} {:cexpr "__release_region:arg:arg1"} boogie_si_record_i64($i1);
    call {:si_unique_call 576} {:cexpr "__release_region:arg:arg2"} boogie_si_record_i64($i2);
    goto corral_source_split_4568;

  corral_source_split_4568:
    assume {:verifier.code 0} true;
    return;
}



const kfree: ref;

axiom kfree == $sub.ref(0, 109893);

procedure kfree($p0: ref);
  free requires assertsPassed;



implementation kfree($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_4570;

  corral_source_split_4570:
    assume {:verifier.code 0} true;
    call {:si_unique_call 577} free_($p0);
    goto corral_source_split_4571;

  corral_source_split_4571:
    assume {:verifier.code 0} true;
    return;
}



const free_: ref;

axiom free_ == $sub.ref(0, 110925);

procedure free_($p0: ref);
  free requires assertsPassed;



implementation free_($p0: ref)
{

  anon0:
    call {:si_unique_call 578} $free($p0);
    return;
}



const external_alloc: ref;

axiom external_alloc == $sub.ref(0, 111957);

procedure external_alloc() returns ($r: ref);
  free requires assertsPassed;



implementation external_alloc() returns ($r: ref)
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4573;

  corral_source_split_4573:
    assume {:verifier.code 1} true;
    call {:si_unique_call 579} $p0 := __VERIFIER_nondet_pointer();
    call {:si_unique_call 580} {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
    goto corral_source_split_4574;

  corral_source_split_4574:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const kmalloc: ref;

axiom kmalloc == $sub.ref(0, 112989);

procedure kmalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation kmalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 581} {:cexpr "kmalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 582} {:cexpr "kmalloc:arg:flags"} boogie_si_record_i32($i1);
    goto corral_source_split_4576;

  corral_source_split_4576:
    assume {:verifier.code 0} true;
    call {:si_unique_call 583} $p2 := __kmalloc($i0, $i1);
    goto corral_source_split_4577;

  corral_source_split_4577:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const sound_unload_synthdev: ref;

axiom sound_unload_synthdev == $sub.ref(0, 114021);

procedure sound_unload_synthdev($i0: i32);
  free requires assertsPassed;



implementation sound_unload_synthdev($i0: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 584} {:cexpr "sound_unload_synthdev:arg:arg0"} boogie_si_record_i32($i0);
    goto corral_source_split_4579;

  corral_source_split_4579:
    assume {:verifier.code 0} true;
    return;
}



const __VERIFIER_assume: ref;

axiom __VERIFIER_assume == $sub.ref(0, 115053);

procedure __VERIFIER_assume($i0: i32);
  free requires assertsPassed;



implementation __VERIFIER_assume($i0: i32)
{

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 585} {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
    goto corral_source_split_4581;

  corral_source_split_4581:
    assume {:verifier.code 1} true;
    goto corral_source_split_4582;

  corral_source_split_4582:
    assume {:verifier.code 1} true;
    assume $i0 != $0;
    goto corral_source_split_4583;

  corral_source_split_4583:
    assume {:verifier.code 0} true;
    return;
}



const __SMACK_code: ref;

axiom __SMACK_code == $sub.ref(0, 116085);

procedure __SMACK_code.ref($p0: ref);



procedure __SMACK_code.ref.i32($p0: ref, p.1: i32);



const __SMACK_dummy: ref;

axiom __SMACK_dummy == $sub.ref(0, 117117);

procedure __SMACK_dummy($i0: i32);



const __VERIFIER_error: ref;

axiom __VERIFIER_error == $sub.ref(0, 118149);

procedure __VERIFIER_error();
  free requires assertsPassed;
  modifies assertsPassed;



implementation __VERIFIER_error()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4585;

  corral_source_split_4585:
    assume {:verifier.code 1} true;
    goto assert_rewrite_dummy_block_0, assert_rewrite_dummy_block_1;

  assert_rewrite_dummy_block_1:
    assume false;
    return;

  assert_rewrite_dummy_block_0:
    assume {:corral_assert_pt} !false;
    assertsPassed := false;
    goto SeqInstr_46, SeqInstr_47;

  SeqInstr_47:
    assume assertsPassed;
    goto SeqInstr_48;

  SeqInstr_48:
    goto assert_rewrite_dummy_block_2;

  assert_rewrite_dummy_block_2:
    goto corral_source_split_4586;

  corral_source_split_4586:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_46:
    assume !assertsPassed;
    return;
}



const __SMACK_check_overflow: ref;

axiom __SMACK_check_overflow == $sub.ref(0, 119181);

procedure __SMACK_check_overflow($i0: i32);



const __SMACK_nondet_char: ref;

axiom __SMACK_nondet_char == $sub.ref(0, 120213);

procedure __SMACK_nondet_char() returns ($r: i8);



const __SMACK_nondet_signed_char: ref;

axiom __SMACK_nondet_signed_char == $sub.ref(0, 121245);

procedure __SMACK_nondet_signed_char() returns ($r: i8);



const __SMACK_nondet_unsigned_char: ref;

axiom __SMACK_nondet_unsigned_char == $sub.ref(0, 122277);

procedure __SMACK_nondet_unsigned_char() returns ($r: i8);



const __SMACK_nondet_short: ref;

axiom __SMACK_nondet_short == $sub.ref(0, 123309);

procedure __SMACK_nondet_short() returns ($r: i16);



const __SMACK_nondet_signed_short: ref;

axiom __SMACK_nondet_signed_short == $sub.ref(0, 124341);

procedure __SMACK_nondet_signed_short() returns ($r: i16);



const __SMACK_nondet_signed_short_int: ref;

axiom __SMACK_nondet_signed_short_int == $sub.ref(0, 125373);

procedure __SMACK_nondet_signed_short_int() returns ($r: i16);



const __SMACK_nondet_unsigned_short: ref;

axiom __SMACK_nondet_unsigned_short == $sub.ref(0, 126405);

procedure __SMACK_nondet_unsigned_short() returns ($r: i16);



const __SMACK_nondet_unsigned_short_int: ref;

axiom __SMACK_nondet_unsigned_short_int == $sub.ref(0, 127437);

procedure __SMACK_nondet_unsigned_short_int() returns ($r: i16);



const __VERIFIER_nondet_int: ref;

axiom __VERIFIER_nondet_int == $sub.ref(0, 128469);

procedure __VERIFIER_nondet_int() returns ($r: i32);
  free requires assertsPassed;



implementation __VERIFIER_nondet_int() returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4588;

  corral_source_split_4588:
    assume {:verifier.code 1} true;
    call {:si_unique_call 586} $i0 := __SMACK_nondet_int();
    call {:si_unique_call 587} {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
    call {:si_unique_call 588} {:cexpr "x"} boogie_si_record_i32($i0);
    goto corral_source_split_4589;

  corral_source_split_4589:
    assume {:verifier.code 0} true;
    $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
    goto corral_source_split_4590;

  corral_source_split_4590:
    assume {:verifier.code 0} true;
    $i2 := 0;
    assume {:branchcond $i1} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i1 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_4594;

  corral_source_split_4594:
    assume {:verifier.code 1} true;
    $i4 := $zext.i1.i32($i2);
    goto corral_source_split_4595;

  corral_source_split_4595:
    assume {:verifier.code 1} true;
    call {:si_unique_call 589} __VERIFIER_assume($i4);
    goto corral_source_split_4596;

  corral_source_split_4596:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_4592;

  corral_source_split_4592:
    assume {:verifier.code 1} true;
    $i3 := $sle.i32($i0, 2147483647);
    assume {:verifier.code 0} true;
    $i2 := $i3;
    goto $bb3;
}



const __SMACK_nondet_int: ref;

axiom __SMACK_nondet_int == $sub.ref(0, 129501);

procedure __SMACK_nondet_int() returns ($r: i32);



const __SMACK_nondet_signed_int: ref;

axiom __SMACK_nondet_signed_int == $sub.ref(0, 130533);

procedure __SMACK_nondet_signed_int() returns ($r: i32);



const __SMACK_nondet_unsigned: ref;

axiom __SMACK_nondet_unsigned == $sub.ref(0, 131565);

procedure __SMACK_nondet_unsigned() returns ($r: i32);



const __SMACK_nondet_unsigned_int: ref;

axiom __SMACK_nondet_unsigned_int == $sub.ref(0, 132597);

procedure __SMACK_nondet_unsigned_int() returns ($r: i32);



const __SMACK_nondet_long: ref;

axiom __SMACK_nondet_long == $sub.ref(0, 133629);

procedure __SMACK_nondet_long() returns ($r: i64);



const __SMACK_nondet_long_int: ref;

axiom __SMACK_nondet_long_int == $sub.ref(0, 134661);

procedure __SMACK_nondet_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long: ref;

axiom __SMACK_nondet_signed_long == $sub.ref(0, 135693);

procedure __SMACK_nondet_signed_long() returns ($r: i64);



const __SMACK_nondet_signed_long_int: ref;

axiom __SMACK_nondet_signed_long_int == $sub.ref(0, 136725);

procedure __SMACK_nondet_signed_long_int() returns ($r: i64);



const __VERIFIER_nondet_unsigned_long: ref;

axiom __VERIFIER_nondet_unsigned_long == $sub.ref(0, 137757);

procedure __VERIFIER_nondet_unsigned_long() returns ($r: i64);
  free requires assertsPassed;



implementation __VERIFIER_nondet_unsigned_long() returns ($r: i64)
{
  var $i0: i64;
  var $i1: i64;
  var $i2: i64;
  var $i3: i1;
  var $i5: i1;
  var $i6: i1;
  var $i4: i1;
  var $i7: i32;
  var $i8: i1;
  var $i10: i1;
  var $i9: i1;
  var $i11: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4598;

  corral_source_split_4598:
    assume {:verifier.code 1} true;
    call {:si_unique_call 590} $i0 := __SMACK_nondet_unsigned_long();
    call {:si_unique_call 591} {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
    call {:si_unique_call 592} {:cexpr "x"} boogie_si_record_i64($i0);
    goto corral_source_split_4599;

  corral_source_split_4599:
    assume {:verifier.code 1} true;
    call {:si_unique_call 593} $i1 := __SMACK_nondet_unsigned_long();
    call {:si_unique_call 594} {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i1);
    call {:si_unique_call 595} {:cexpr "min"} boogie_si_record_i64($i1);
    goto corral_source_split_4600;

  corral_source_split_4600:
    assume {:verifier.code 1} true;
    call {:si_unique_call 596} $i2 := __SMACK_nondet_unsigned_long();
    call {:si_unique_call 597} {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i2);
    call {:si_unique_call 598} {:cexpr "max"} boogie_si_record_i64($i2);
    goto corral_source_split_4601;

  corral_source_split_4601:
    assume {:verifier.code 0} true;
    $i3 := $eq.i64($i1, 0);
    goto corral_source_split_4602;

  corral_source_split_4602:
    assume {:verifier.code 0} true;
    $i4 := 0;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i3 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_4607;

  corral_source_split_4607:
    assume {:verifier.code 1} true;
    $i7 := $zext.i1.i32($i4);
    goto corral_source_split_4608;

  corral_source_split_4608:
    assume {:verifier.code 1} true;
    call {:si_unique_call 599} __VERIFIER_assume($i7);
    goto corral_source_split_4609;

  corral_source_split_4609:
    assume {:verifier.code 0} true;
    $i8 := $uge.i64($i0, $i1);
    goto corral_source_split_4610;

  corral_source_split_4610:
    assume {:verifier.code 0} true;
    $i9 := 0;
    assume {:branchcond $i8} true;
    goto $bb6, $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    assume !($i8 == 1);
    goto $bb8;

  $bb8:
    assume {:verifier.code 1} true;
    goto corral_source_split_4616;

  corral_source_split_4616:
    assume {:verifier.code 1} true;
    $i11 := $zext.i1.i32($i9);
    goto corral_source_split_4617;

  corral_source_split_4617:
    assume {:verifier.code 1} true;
    call {:si_unique_call 600} __VERIFIER_assume($i11);
    goto corral_source_split_4618;

  corral_source_split_4618:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;

  $bb6:
    assume $i8 == 1;
    goto corral_source_split_4614;

  corral_source_split_4614:
    assume {:verifier.code 1} true;
    $i10 := $ule.i64($i0, $i2);
    assume {:verifier.code 0} true;
    $i9 := $i10;
    goto $bb8;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_4604;

  corral_source_split_4604:
    assume {:verifier.code 0} true;
    $i5 := $uge.i64($i2, 18446744073709551615);
    goto corral_source_split_4605;

  corral_source_split_4605:
    assume {:verifier.code 0} true;
    $i4 := 0;
    assume {:branchcond $i5} true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i5 == 1);
    goto $bb3;

  $bb4:
    assume $i5 == 1;
    goto corral_source_split_4612;

  corral_source_split_4612:
    assume {:verifier.code 1} true;
    $i6 := $ule.i64($i2, 18446744073709551615);
    assume {:verifier.code 0} true;
    $i4 := $i6;
    goto $bb3;
}



const __SMACK_nondet_unsigned_long: ref;

axiom __SMACK_nondet_unsigned_long == $sub.ref(0, 138789);

procedure __SMACK_nondet_unsigned_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_int: ref;

axiom __SMACK_nondet_unsigned_long_int == $sub.ref(0, 139821);

procedure __SMACK_nondet_unsigned_long_int() returns ($r: i64);



const __SMACK_nondet_long_long: ref;

axiom __SMACK_nondet_long_long == $sub.ref(0, 140853);

procedure __SMACK_nondet_long_long() returns ($r: i64);



const __SMACK_nondet_long_long_int: ref;

axiom __SMACK_nondet_long_long_int == $sub.ref(0, 141885);

procedure __SMACK_nondet_long_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long_long: ref;

axiom __SMACK_nondet_signed_long_long == $sub.ref(0, 142917);

procedure __SMACK_nondet_signed_long_long() returns ($r: i64);



const __SMACK_nondet_signed_long_long_int: ref;

axiom __SMACK_nondet_signed_long_long_int == $sub.ref(0, 143949);

procedure __SMACK_nondet_signed_long_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long: ref;

axiom __SMACK_nondet_unsigned_long_long == $sub.ref(0, 144981);

procedure __SMACK_nondet_unsigned_long_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long_int: ref;

axiom __SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 146013);

procedure __SMACK_nondet_unsigned_long_long_int() returns ($r: i64);



const __VERIFIER_nondet_ulong: ref;

axiom __VERIFIER_nondet_ulong == $sub.ref(0, 147045);

procedure __VERIFIER_nondet_ulong() returns ($r: i64);
  free requires assertsPassed;



implementation __VERIFIER_nondet_ulong() returns ($r: i64)
{
  var $i0: i64;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4620;

  corral_source_split_4620:
    assume {:verifier.code 1} true;
    call {:si_unique_call 601} $i0 := __VERIFIER_nondet_unsigned_long();
    call {:si_unique_call 602} {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
    call {:si_unique_call 603} {:cexpr "x"} boogie_si_record_i64($i0);
    goto corral_source_split_4621;

  corral_source_split_4621:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const __VERIFIER_nondet_pointer: ref;

axiom __VERIFIER_nondet_pointer == $sub.ref(0, 148077);

procedure __VERIFIER_nondet_pointer() returns ($r: ref);
  free requires assertsPassed;



implementation __VERIFIER_nondet_pointer() returns ($r: ref)
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4623;

  corral_source_split_4623:
    assume {:verifier.code 1} true;
    call {:si_unique_call 604} $p0 := __VERIFIER_nondet();
    call {:si_unique_call 605} {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
    goto corral_source_split_4624;

  corral_source_split_4624:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const __VERIFIER_nondet: ref;

axiom __VERIFIER_nondet == $sub.ref(0, 149109);

procedure __VERIFIER_nondet() returns ($r: ref);



const __SMACK_decls: ref;

axiom __SMACK_decls == $sub.ref(0, 150141);

function {:inline} $bitcast.ref.ref(i: ref) : ref
{
  i
}

function {:inline} $zext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 1bv8)
}

function {:inline} $zext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 1bv16)
}

function {:inline} $zext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 1bv24)
}

function {:inline} $zext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 1bv32)
}

function {:inline} $zext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1bv40)
}

function {:inline} $zext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 1bv48)
}

function {:inline} $zext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 1bv56)
}

function {:inline} $zext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 1bv64)
}

function {:inline} $zext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1bv80)
}

function {:inline} $zext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 1bv88)
}

function {:inline} $zext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 1bv96)
}

function {:inline} $zext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 1bv128)
}

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) : bv128;

function {:inline} $sext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 255bv8)
}

function {:inline} $sext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 65535bv16)
}

function {:inline} $sext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 16777215bv24)
}

function {:inline} $sext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 4294967295bv32)
}

function {:inline} $sext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1099511627775bv40)
}

function {:inline} $sext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 281474976710655bv48)
}

function {:inline} $sext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 72057594037927935bv56)
}

function {:inline} $sext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 18446744073709551615bv64)
}

function {:inline} $sext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1208925819614629174706175bv80)
}

function {:inline} $sext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88)
}

function {:inline} $sext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96)
}

function {:inline} $sext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128)
}

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) : bv56;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) : bv128;

function {:builtin "div"} $div(i1: int, i2: int) : int;

function {:builtin "mod"} $mod(i1: int, i2: int) : int;

function {:builtin "rem"} $rem(i1: int, i2: int) : int;

function {:inline} $min(i1: int, i2: int) : int
{
  (if i1 < i2 then i1 else i2)
}

function {:inline} $max(i1: int, i2: int) : int
{
  (if i1 > i2 then i1 else i2)
}

axiom $and.i1(0, 0) == 0;

axiom $and.i1(0, 1) == 0;

axiom $and.i1(1, 0) == 0;

axiom $and.i1(1, 1) == 1;

axiom $or.i1(0, 0) == 0;

axiom $or.i1(0, 1) == 1;

axiom $or.i1(1, 0) == 1;

axiom $or.i1(1, 1) == 1;

axiom $xor.i1(0, 0) == 0;

axiom $xor.i1(0, 1) == 1;

axiom $xor.i1(1, 0) == 1;

axiom $xor.i1(1, 1) == 0;

axiom $and.i32(32, 16) == 0;

function $fp(ipart: int, fpart: int, epart: int) : float;

function $fadd.float(i1: float, i2: float) : float;

function $fsub.float(i1: float, i2: float) : float;

function $fmul.float(i1: float, i2: float) : float;

function $fdiv.float(i1: float, i2: float) : float;

function $frem.float(i1: float, i2: float) : float;

function {:inline} $ffalse.float.bool(i1: float, i2: float) : bool
{
  false
}

function {:inline} $ftrue.float.bool(i1: float, i2: float) : bool
{
  true
}

function $foeq.float.bool(i1: float, i2: float) : bool;

function $foge.float.bool(i1: float, i2: float) : bool;

function $fogt.float.bool(i1: float, i2: float) : bool;

function $fole.float.bool(i1: float, i2: float) : bool;

function $folt.float.bool(i1: float, i2: float) : bool;

function $fone.float.bool(i1: float, i2: float) : bool;

function $ford.float.bool(i1: float, i2: float) : bool;

function $fueq.float.bool(i1: float, i2: float) : bool;

function $fuge.float.bool(i1: float, i2: float) : bool;

function $fugt.float.bool(i1: float, i2: float) : bool;

function $fule.float.bool(i1: float, i2: float) : bool;

function $fult.float.bool(i1: float, i2: float) : bool;

function $fune.float.bool(i1: float, i2: float) : bool;

function $funo.float.bool(i1: float, i2: float) : bool;

function $fp2si.float.i128(i: float) : i128;

function $fp2ui.float.i128(i: float) : i128;

function $fp2si.float.i96(i: float) : i96;

function $fp2ui.float.i96(i: float) : i96;

function $fp2si.float.i88(i: float) : i88;

function $fp2ui.float.i88(i: float) : i88;

function $fp2si.float.i80(i: float) : i80;

function $fp2ui.float.i80(i: float) : i80;

function $fp2si.float.i64(i: float) : i64;

function $fp2ui.float.i64(i: float) : i64;

function $fp2si.float.i56(i: float) : i56;

function $fp2ui.float.i56(i: float) : i56;

function $fp2si.float.i48(i: float) : i48;

function $fp2ui.float.i48(i: float) : i48;

function $fp2si.float.i40(i: float) : i40;

function $fp2ui.float.i40(i: float) : i40;

function $fp2si.float.i32(i: float) : i32;

function $fp2ui.float.i32(i: float) : i32;

function $fp2si.float.i24(i: float) : i24;

function $fp2ui.float.i24(i: float) : i24;

function $fp2si.float.i16(i: float) : i16;

function $fp2ui.float.i16(i: float) : i16;

function $fp2si.float.i8(i: float) : i8;

function $fp2ui.float.i8(i: float) : i8;

function $fp2si.float.i1(i: float) : i1;

function $fp2ui.float.i1(i: float) : i1;

function $si2fp.i128.float(i: i128) : float;

function $ui2fp.i128.float(i: i128) : float;

function $si2fp.i96.float(i: i96) : float;

function $ui2fp.i96.float(i: i96) : float;

function $si2fp.i88.float(i: i88) : float;

function $ui2fp.i88.float(i: i88) : float;

function $si2fp.i80.float(i: i80) : float;

function $ui2fp.i80.float(i: i80) : float;

function $si2fp.i64.float(i: i64) : float;

function $ui2fp.i64.float(i: i64) : float;

function $si2fp.i56.float(i: i56) : float;

function $ui2fp.i56.float(i: i56) : float;

function $si2fp.i48.float(i: i48) : float;

function $ui2fp.i48.float(i: i48) : float;

function $si2fp.i40.float(i: i40) : float;

function $ui2fp.i40.float(i: i40) : float;

function $si2fp.i32.float(i: i32) : float;

function $ui2fp.i32.float(i: i32) : float;

function $si2fp.i24.float(i: i24) : float;

function $ui2fp.i24.float(i: i24) : float;

function $si2fp.i16.float(i: i16) : float;

function $ui2fp.i16.float(i: i16) : float;

function $si2fp.i8.float(i: i8) : float;

function $ui2fp.i8.float(i: i8) : float;

function $si2fp.i1.float(i: i1) : float;

function $ui2fp.i1.float(i: i1) : float;

function $fp2si.float.bv128(i: float) : bv128;

function $fp2ui.float.bv128(i: float) : bv128;

function $fp2si.float.bv96(i: float) : bv96;

function $fp2ui.float.bv96(i: float) : bv96;

function $fp2si.float.bv88(i: float) : bv88;

function $fp2ui.float.bv88(i: float) : bv88;

function $fp2si.float.bv80(i: float) : bv80;

function $fp2ui.float.bv80(i: float) : bv80;

function $fp2si.float.bv64(i: float) : bv64;

function $fp2ui.float.bv64(i: float) : bv64;

function $fp2si.float.bv56(i: float) : bv56;

function $fp2ui.float.bv56(i: float) : bv56;

function $fp2si.float.bv48(i: float) : bv48;

function $fp2ui.float.bv48(i: float) : bv48;

function $fp2si.float.bv40(i: float) : bv40;

function $fp2ui.float.bv40(i: float) : bv40;

function $fp2si.float.bv32(i: float) : bv32;

function $fp2ui.float.bv32(i: float) : bv32;

function $fp2si.float.bv24(i: float) : bv24;

function $fp2ui.float.bv24(i: float) : bv24;

function $fp2si.float.bv16(i: float) : bv16;

function $fp2ui.float.bv16(i: float) : bv16;

function $fp2si.float.bv8(i: float) : bv8;

function $fp2ui.float.bv8(i: float) : bv8;

function $fp2si.float.bv1(i: float) : bv1;

function $fp2ui.float.bv1(i: float) : bv1;

function $si2fp.bv128.float(i: bv128) : float;

function $ui2fp.bv128.float(i: bv128) : float;

function $si2fp.bv96.float(i: bv96) : float;

function $ui2fp.bv96.float(i: bv96) : float;

function $si2fp.bv88.float(i: bv88) : float;

function $ui2fp.bv88.float(i: bv88) : float;

function $si2fp.bv80.float(i: bv80) : float;

function $ui2fp.bv80.float(i: bv80) : float;

function $si2fp.bv64.float(i: bv64) : float;

function $ui2fp.bv64.float(i: bv64) : float;

function $si2fp.bv56.float(i: bv56) : float;

function $ui2fp.bv56.float(i: bv56) : float;

function $si2fp.bv48.float(i: bv48) : float;

function $ui2fp.bv48.float(i: bv48) : float;

function $si2fp.bv40.float(i: bv40) : float;

function $ui2fp.bv40.float(i: bv40) : float;

function $si2fp.bv32.float(i: bv32) : float;

function $ui2fp.bv32.float(i: bv32) : float;

function $si2fp.bv24.float(i: bv24) : float;

function $ui2fp.bv24.float(i: bv24) : float;

function $si2fp.bv16.float(i: bv16) : float;

function $ui2fp.bv16.float(i: bv16) : float;

function $si2fp.bv8.float(i: bv8) : float;

function $ui2fp.bv8.float(i: bv8) : float;

function $si2fp.bv1.float(i: bv1) : float;

function $ui2fp.bv1.float(i: bv1) : float;

function $fptrunc.float.float(i: float) : float;

function $fpext.float.float(i: float) : float;

function $bitcast.float.i1(i: float) : i1;

function $bitcast.float.bv1(i: float) : bv1;

function $bitcast.i1.float(i: i1) : float;

function $bitcast.bv1.float(i: bv1) : float;

function $bitcast.float.i8(i: float) : i8;

function $bitcast.float.bv8(i: float) : bv8;

function $bitcast.i8.float(i: i8) : float;

function $bitcast.bv8.float(i: bv8) : float;

function $bitcast.float.i16(i: float) : i16;

function $bitcast.float.bv16(i: float) : bv16;

function $bitcast.i16.float(i: i16) : float;

function $bitcast.bv16.float(i: bv16) : float;

function $bitcast.float.i32(i: float) : i32;

function $bitcast.float.bv32(i: float) : bv32;

function $bitcast.i32.float(i: i32) : float;

function $bitcast.bv32.float(i: bv32) : float;

function $bitcast.float.i64(i: float) : i64;

function $bitcast.float.bv64(i: float) : bv64;

function $bitcast.i64.float(i: i64) : float;

function $bitcast.bv64.float(i: bv64) : float;

function $bitcast.float.i80(i: float) : i80;

function $bitcast.float.bv80(i: float) : bv80;

function $bitcast.i80.float(i: i80) : float;

function $bitcast.bv80.float(i: bv80) : float;

const $GLOBALS_BOTTOM: ref;

const $EXTERNS_BOTTOM: ref;

const $MALLOC_TOP: ref;

function {:inline} $isExternal(p: ref) : bool
{
  $slt.ref.bool(p, $EXTERNS_BOTTOM)
}

function {:inline} $load.bytes.bv16(M: [ref]bv8, p: ref) : bv16
{
  $load.bytes.bv8(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv24(M: [ref]bv8, p: ref) : bv24
{
  $load.bytes.bv16(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv32(M: [ref]bv8, p: ref) : bv32
{
  $load.bytes.bv24(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv40(M: [ref]bv8, p: ref) : bv40
{
  $load.bytes.bv32(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv48(M: [ref]bv8, p: ref) : bv48
{
  $load.bytes.bv40(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv56(M: [ref]bv8, p: ref) : bv56
{
  $load.bytes.bv48(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv64(M: [ref]bv8, p: ref) : bv64
{
  $load.bytes.bv56(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv72(M: [ref]bv8, p: ref) : bv72
{
  $load.bytes.bv64(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv80(M: [ref]bv8, p: ref) : bv80
{
  $load.bytes.bv72(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv88(M: [ref]bv8, p: ref) : bv88
{
  $load.bytes.bv80(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv96(M: [ref]bv8, p: ref) : bv96
{
  $load.bytes.bv88(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv104(M: [ref]bv8, p: ref) : bv104
{
  $load.bytes.bv96(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv112(M: [ref]bv8, p: ref) : bv112
{
  $load.bytes.bv104(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv120(M: [ref]bv8, p: ref) : bv120
{
  $load.bytes.bv112(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv128(M: [ref]bv8, p: ref) : bv128
{
  $load.bytes.bv120(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $load.bytes.bv1(M: [ref]bv8, p: ref) : bv1
{
  $trunc.bv8.bv1(M[p])
}

function {:inline} $store.bytes.bv16(M: [ref]bv8, p: ref, v: bv16) : [ref]bv8
{
  $store.bytes.bv8(M, $add.ref(p, $1.ref), v[16:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv24(M: [ref]bv8, p: ref, v: bv24) : [ref]bv8
{
  $store.bytes.bv16(M, $add.ref(p, $1.ref), v[24:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv32(M: [ref]bv8, p: ref, v: bv32) : [ref]bv8
{
  $store.bytes.bv24(M, $add.ref(p, $1.ref), v[32:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv40(M: [ref]bv8, p: ref, v: bv40) : [ref]bv8
{
  $store.bytes.bv32(M, $add.ref(p, $1.ref), v[40:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv48(M: [ref]bv8, p: ref, v: bv48) : [ref]bv8
{
  $store.bytes.bv40(M, $add.ref(p, $1.ref), v[48:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv56(M: [ref]bv8, p: ref, v: bv56) : [ref]bv8
{
  $store.bytes.bv48(M, $add.ref(p, $1.ref), v[56:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv64(M: [ref]bv8, p: ref, v: bv64) : [ref]bv8
{
  $store.bytes.bv56(M, $add.ref(p, $1.ref), v[64:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv72(M: [ref]bv8, p: ref, v: bv72) : [ref]bv8
{
  $store.bytes.bv64(M, $add.ref(p, $1.ref), v[72:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv80(M: [ref]bv8, p: ref, v: bv80) : [ref]bv8
{
  $store.bytes.bv72(M, $add.ref(p, $1.ref), v[80:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv88(M: [ref]bv8, p: ref, v: bv88) : [ref]bv8
{
  $store.bytes.bv80(M, $add.ref(p, $1.ref), v[88:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv96(M: [ref]bv8, p: ref, v: bv96) : [ref]bv8
{
  $store.bytes.bv88(M, $add.ref(p, $1.ref), v[96:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv104(M: [ref]bv8, p: ref, v: bv104) : [ref]bv8
{
  $store.bytes.bv96(M, $add.ref(p, $1.ref), v[104:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv112(M: [ref]bv8, p: ref, v: bv112) : [ref]bv8
{
  $store.bytes.bv104(M, $add.ref(p, $1.ref), v[112:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv120(M: [ref]bv8, p: ref, v: bv120) : [ref]bv8
{
  $store.bytes.bv112(M, $add.ref(p, $1.ref), v[120:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv128(M: [ref]bv8, p: ref, v: bv128) : [ref]bv8
{
  $store.bytes.bv120(M, $add.ref(p, $1.ref), v[128:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:inline} $store.bytes.bv1(M: [ref]bv8, p: ref, v: bv1) : [ref]bv8
{
  M[p := $zext.bv1.bv8(v)]
}

function {:inline} $load.ref(M: [ref]ref, p: ref) : ref
{
  M[p]
}

function {:inline} $store.ref(M: [ref]ref, p: ref, v: ref) : [ref]ref
{
  M[p := v]
}

function {:inline} $load.float(M: [ref]float, p: ref) : float
{
  M[p]
}

function {:inline} $load.unsafe.float(M: [ref]i8, p: ref) : float
{
  $bitcast.i8.float(M[p])
}

function {:inline} $store.float(M: [ref]float, p: ref, v: float) : [ref]float
{
  M[p := v]
}

function {:inline} $store.unsafe.float(M: [ref]i8, p: ref, v: float) : [ref]i8
{
  M[p := $bitcast.float.i8(v)]
}

function {:inline} $load.bytes.float(M: [ref]bv8, p: ref) : float
{
  $bitcast.bv8.float(M[p])
}

function {:inline} $store.bytes.float(M: [ref]bv8, p: ref, v: float) : [ref]bv8
{
  M[p := $bitcast.float.bv8(v)]
}

type $mop;

procedure boogie_si_record_mop(m: $mop);



const $MOP: $mop;

function $extractvalue(p: int, i: int) : int;

procedure $alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $alloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 606} p := $$alloc(n);
    return;
}



procedure $malloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $malloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 607} p := $$alloc(n);
    return;
}



procedure $$alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation {:ForceInline} $$alloc(n: ref) returns (p: ref)
{

  anon0:
    assume $sge.ref.bool(n, $0.ref);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} !$sgt.ref.bool(n, $0.ref);
    p := $0.ref;
    return;

  anon3_Then:
    assume {:partition} $sgt.ref.bool(n, $0.ref);
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
    return;
}



procedure $free(p: ref);



const __SMACK_top_decl: ref;

axiom __SMACK_top_decl == $sub.ref(0, 151173);

procedure __SMACK_top_decl.ref($p0: ref);



const __SMACK_init_func_memory_model: ref;

axiom __SMACK_init_func_memory_model == $sub.ref(0, 152205);

procedure __SMACK_init_func_memory_model();
  free requires assertsPassed;
  modifies $CurrAddr;



implementation __SMACK_init_func_memory_model()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_4626;

  corral_source_split_4626:
    assume {:verifier.code 1} true;
    $CurrAddr := $1024.ref;
    goto corral_source_split_4627;

  corral_source_split_4627:
    assume {:verifier.code 0} true;
    return;
}



const calloc: ref;

axiom calloc == $sub.ref(0, 153237);

procedure calloc($i0: i64, $i1: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.0, $CurrAddr;



implementation calloc($i0: i64, $i1: i64) returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
  var cmdloc_dummy_var_8: [ref]i8;
  var cmdloc_dummy_var_9: [ref]i8;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 608} {:cexpr "calloc:arg:num"} boogie_si_record_i64($i0);
    call {:si_unique_call 609} {:cexpr "calloc:arg:size"} boogie_si_record_i64($i1);
    goto corral_source_split_4629;

  corral_source_split_4629:
    assume {:verifier.code 1} true;
    call {:si_unique_call 610} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 611} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_4630;

  corral_source_split_4630:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i2, 0);
    goto corral_source_split_4631;

  corral_source_split_4631:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    goto corral_source_split_4635;

  corral_source_split_4635:
    assume {:verifier.code 0} true;
    $i5 := $mul.i64($i0, $i1);
    goto corral_source_split_4636;

  corral_source_split_4636:
    assume {:verifier.code 0} true;
    call {:si_unique_call 612} $p6 := malloc($i5);
    goto corral_source_split_4637;

  corral_source_split_4637:
    assume {:verifier.code 0} true;
    $i7 := $mul.i64($i0, $i1);
    goto corral_source_split_4638;

  corral_source_split_4638:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_8 := $M.0;
    call {:si_unique_call 613} cmdloc_dummy_var_9 := $memset.i8(cmdloc_dummy_var_8, $p6, 0, $i7, $zext.i32.i64(1), 0 == 1);
    $M.0 := cmdloc_dummy_var_9;
    assume {:verifier.code 0} true;
    $p4 := $p6;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_4640;

  corral_source_split_4640:
    assume {:verifier.code 0} true;
    $r := $p4;
    return;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_4633;

  corral_source_split_4633:
    assume {:verifier.code 0} true;
    $p4 := $0.ref;
    goto $bb3;
}



const llvm.dbg.value: ref;

axiom llvm.dbg.value == $sub.ref(0, 154269);

procedure llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);



const __SMACK_static_init: ref;

axiom __SMACK_static_init == $sub.ref(0, 155301);

procedure __SMACK_static_init();
  free requires assertsPassed;
  modifies $M.9, $M.10, $M.11, $M.12, $M.13, $M.0, $M.16, $M.15, $M.14, $M.6, $M.2, $M.1;



implementation __SMACK_static_init()
{

  $bb0:
    call {:si_unique_call 614} {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
    $M.9 := 0;
    call {:si_unique_call 615} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    $M.10 := 0;
    call {:si_unique_call 616} {:cexpr "ref_cnt"} boogie_si_record_i32(0);
    $M.11 := 0;
    call {:si_unique_call 617} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
    $M.12 := 0;
    call {:si_unique_call 618} {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
    $M.13 := 0;
    call {:si_unique_call 619} {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
    $M.0 := $store.ref($M.0, opl3_operations, __this_module);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(8, 1)), .str.19);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(32, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(40, 1)), opl3_open);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(48, 1)), opl3_close);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(56, 1)), opl3_ioctl);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(64, 1)), opl3_kill_note);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(72, 1)), opl3_start_note);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(80, 1)), opl3_set_instr);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(88, 1)), opl3_reset);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(96, 1)), opl3_hw_control);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(104, 1)), opl3_load_patch);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(112, 1)), opl3_aftertouch);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(120, 1)), opl3_controller);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(128, 1)), opl3_panning);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(136, 1)), opl3_volume_method);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(144, 1)), opl3_bender);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(152, 1)), opl3_alloc_voice);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(160, 1)), opl3_setup_voice);
    $M.0 := $store.ref($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(168, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(0, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(1, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(2, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(3, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(4, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(5, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(6, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(7, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(8, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(9, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(10, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(11, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(12, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(13, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(14, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(15, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(16, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(17, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(18, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(19, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(20, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(21, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(22, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(23, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(24, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(25, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(26, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(27, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(28, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(29, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(30, 2)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(12, 1)), $mul.ref(31, 2)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(0, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(1, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(2, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(3, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(4, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(5, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(6, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(7, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(8, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(9, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(10, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(11, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(12, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(13, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(14, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(15, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(16, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(17, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(18, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(19, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(20, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(21, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(22, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(23, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(24, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(25, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(26, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(27, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(28, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(29, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(30, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(176, 1)), $mul.ref(80, 1)), $mul.ref(31, 4)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(0, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(1, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(2, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(3, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(4, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(5, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(6, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(7, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(8, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(9, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(10, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(11, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(12, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(13, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(14, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(64, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(65, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(66, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(67, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(68, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(69, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(70, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(71, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(72, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(73, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(74, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(75, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(76, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(77, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(78, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(79, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(80, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(81, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(82, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(83, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(84, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(85, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(86, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(87, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(88, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(89, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(90, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(91, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(92, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(93, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(94, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(95, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(96, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(97, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(98, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(99, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(100, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(101, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(102, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(103, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(104, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(105, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(106, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(107, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(108, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(109, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(110, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(111, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(112, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(113, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(114, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(115, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(116, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(117, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(118, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(119, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(120, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(121, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(122, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(123, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(124, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(125, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(126, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(384, 1)), $mul.ref(15, 140)), $mul.ref(12, 1)), $mul.ref(127, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2624, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(1, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(22, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(23, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(25, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(26, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(27, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(28, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(29, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(30, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(31, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(32, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(33, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(34, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(35, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(36, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(37, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(38, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(39, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(40, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(41, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(42, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(43, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(44, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(45, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(46, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(47, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(49, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(50, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(51, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(52, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(53, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(54, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(55, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(56, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(57, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(58, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(59, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(60, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(61, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(62, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2628, 1)), $mul.ref(63, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref(opl3_operations, $mul.ref(0, 2696)), $mul.ref(2692, 1)), 0);
    $M.16 := 0;
    call {:si_unique_call 620} {:cexpr "detected_model"} boogie_si_record_i32(0);
    $M.15 := 0;
    call {:si_unique_call 621} {:cexpr "me"} boogie_si_record_i32(0);
    $M.14 := 0;
    call {:si_unique_call 622} {:cexpr "io"} boogie_si_record_i32(0);
    $M.6 := $store.i8($M.6, fm_volume_table, $sub.i8(0, 64));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(1, 1)), $sub.i8(0, 48));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(2, 1)), $sub.i8(0, 40));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(3, 1)), $sub.i8(0, 35));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(4, 1)), $sub.i8(0, 32));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(5, 1)), $sub.i8(0, 29));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(6, 1)), $sub.i8(0, 27));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(7, 1)), $sub.i8(0, 26));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(8, 1)), $sub.i8(0, 24));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(9, 1)), $sub.i8(0, 23));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(10, 1)), $sub.i8(0, 21));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(11, 1)), $sub.i8(0, 20));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(12, 1)), $sub.i8(0, 19));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(13, 1)), $sub.i8(0, 18));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(14, 1)), $sub.i8(0, 18));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(15, 1)), $sub.i8(0, 17));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(16, 1)), $sub.i8(0, 16));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(17, 1)), $sub.i8(0, 15));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(18, 1)), $sub.i8(0, 15));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(19, 1)), $sub.i8(0, 14));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(20, 1)), $sub.i8(0, 13));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(21, 1)), $sub.i8(0, 13));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(22, 1)), $sub.i8(0, 12));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(23, 1)), $sub.i8(0, 12));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(24, 1)), $sub.i8(0, 11));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(25, 1)), $sub.i8(0, 11));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(26, 1)), $sub.i8(0, 10));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(27, 1)), $sub.i8(0, 10));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(28, 1)), $sub.i8(0, 10));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(29, 1)), $sub.i8(0, 9));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(30, 1)), $sub.i8(0, 9));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(31, 1)), $sub.i8(0, 8));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(32, 1)), $sub.i8(0, 8));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(33, 1)), $sub.i8(0, 8));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(34, 1)), $sub.i8(0, 7));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(35, 1)), $sub.i8(0, 7));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(36, 1)), $sub.i8(0, 7));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(37, 1)), $sub.i8(0, 6));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(38, 1)), $sub.i8(0, 6));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(39, 1)), $sub.i8(0, 6));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(40, 1)), $sub.i8(0, 5));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(41, 1)), $sub.i8(0, 5));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(42, 1)), $sub.i8(0, 5));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(43, 1)), $sub.i8(0, 5));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(44, 1)), $sub.i8(0, 4));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(45, 1)), $sub.i8(0, 4));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(46, 1)), $sub.i8(0, 4));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(47, 1)), $sub.i8(0, 4));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(48, 1)), $sub.i8(0, 3));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(49, 1)), $sub.i8(0, 3));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(50, 1)), $sub.i8(0, 3));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(51, 1)), $sub.i8(0, 3));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(52, 1)), $sub.i8(0, 2));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(53, 1)), $sub.i8(0, 2));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(54, 1)), $sub.i8(0, 2));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(55, 1)), $sub.i8(0, 2));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(56, 1)), $sub.i8(0, 2));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(57, 1)), $sub.i8(0, 1));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(58, 1)), $sub.i8(0, 1));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(59, 1)), $sub.i8(0, 1));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(60, 1)), $sub.i8(0, 1));
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(61, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(62, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(63, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(64, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(65, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(66, 1)), 0);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(67, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(68, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(69, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(70, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(71, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(72, 1)), 1);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(73, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(74, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(75, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(76, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(77, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(78, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(79, 1)), 2);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(80, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(81, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(82, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(83, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(84, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(85, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(86, 1)), 3);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(87, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(88, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(89, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(90, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(91, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(92, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(93, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(94, 1)), 4);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(95, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(96, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(97, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(98, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(99, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(100, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(101, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(102, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(103, 1)), 5);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(104, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(105, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(106, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(107, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(108, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(109, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(110, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(111, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(112, 1)), 6);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(113, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(114, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(115, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(116, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(117, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(118, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(119, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(120, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(121, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(122, 1)), 7);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(123, 1)), 8);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(124, 1)), 8);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(125, 1)), 8);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(126, 1)), 8);
    $M.6 := $store.i8($M.6, $add.ref($add.ref(fm_volume_table, $mul.ref(0, 128)), $mul.ref(127, 1)), 8);
    $M.2 := $store.i8($M.2, pv_map, 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 3);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(0, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 11);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(0, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 4);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 9);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(1, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 12);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(0, 1)), 2);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 2);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 5);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 10);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(2, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 13);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(0, 1)), 3);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 11);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(3, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(0, 1)), 4);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 9);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 12);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(4, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(0, 1)), 5);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 10);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 13);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(5, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(0, 1)), 6);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 16);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 19);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(6, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(0, 1)), 7);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 17);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 20);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(7, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(0, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 18);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 21);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(8, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(0, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 3);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(9, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 11);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(0, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 4);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 9);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(10, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 12);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(0, 1)), 2);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 2);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 5);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 10);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(11, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 13);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(0, 1)), 3);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 11);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(12, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(0, 1)), 4);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 9);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 12);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(13, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(0, 1)), 5);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 10);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 13);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(14, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(0, 1)), 6);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 16);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 19);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(15, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(0, 1)), 7);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 17);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 20);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(16, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(0, 1)), 8);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(1, 1)), 2);
    $M.2 := $store.i16($M.2, $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(2, 1)), 1);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(4, 1)), $mul.ref(0, 1)), 18);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(4, 1)), $mul.ref(1, 1)), 21);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(4, 1)), $mul.ref(2, 1)), 0);
    $M.2 := $store.i8($M.2, $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(17, 8)), $mul.ref(4, 1)), $mul.ref(3, 1)), 0);
    $M.1 := $0.ref;
    $M.0 := $store.i8($M.0, .str.19, 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.19, $mul.ref(0, 4)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.19, $mul.ref(0, 4)), $mul.ref(2, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.19, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.16, 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(3, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(4, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(5, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(6, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(7, 1)), 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(8, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(9, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(10, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(11, 1)), 47);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(12, 1)), 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(13, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(14, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(15, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(16, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(17, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(18, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.16, $mul.ref(0, 20)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, .str.17, 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(3, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(4, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(5, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(6, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(7, 1)), 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(8, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(9, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(10, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.17, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.18, 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(3, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(4, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(5, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(6, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(7, 1)), 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(8, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(9, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(10, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.18, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.10, 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.10, $mul.ref(0, 5)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.10, $mul.ref(0, 5)), $mul.ref(2, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.10, $mul.ref(0, 5)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.10, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.13, 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.13, $mul.ref(0, 5)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.13, $mul.ref(0, 5)), $mul.ref(2, 1)), 76);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.13, $mul.ref(0, 5)), $mul.ref(3, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.13, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    call {:si_unique_call 623} {:cexpr "errno_global"} boogie_si_record_i32(0);
    return;
}



const devirtbounce: ref;

axiom devirtbounce == $sub.ref(0, 156333);

procedure devirtbounce(funcPtr: ref, arg: i8, arg1: i32);
  free requires assertsPassed;



implementation devirtbounce(funcPtr: ref, arg: i8, arg1: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i1;

  $bb0:
    $p0 := $bitcast.ref.ref(funcPtr);
    goto $bb1;

  $bb1:
    $i2 := $eq.ref(opl3_volume_method, $p0);
    assume {:branchcond $i2} true;
    goto $bb2, $bb3;

  $bb3:
    assume !($i2 == 1);
    assume false;
    return;

  $bb2:
    assume $i2 == 1;
    $i1 := $zext.i8.i32(arg);
    call {:si_unique_call 624} opl3_volume_method($i1, arg1);
    return;
}



const devirtbounce.1: ref;

axiom devirtbounce.1 == $sub.ref(0, 157365);

procedure devirtbounce.1(funcPtr: ref, arg: i32) returns ($r: i8);
  free requires assertsPassed;



implementation devirtbounce.1(funcPtr: ref, arg: i32) returns ($r: i8)
{

  $bb0:
    goto $bb1;

  $bb1:
    return;
}



procedure $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src, dst), x)]);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M.dst[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M.dst[x]);
    return;
}



procedure $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == val);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M[x]);
    return;
}



procedure boogie_si_record_i32(x: i32);



procedure boogie_si_record_i64(x: i64);



procedure boogie_si_record_i8(x: i8);



procedure boogie_si_record_ref(x: ref);



procedure $initialize();
  free requires assertsPassed;
  modifies $M.9, $M.10, $M.11, $M.12, $M.13, $M.0, $M.16, $M.15, $M.14, $M.6, $M.2, $M.1, $CurrAddr;



implementation $initialize()
{

  anon0:
    call {:si_unique_call 625} __SMACK_static_init();
    call {:si_unique_call 626} __SMACK_init_func_memory_model();
    return;
}



function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $add.i1(i1: i1, i2: i1) : i1
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $sub.i1(i1: i1, i2: i1) : i1
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $mul.i1(i1: i1, i2: i1) : i1
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) : bv1;

function $shl.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) : bv1;

function $lshr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) : bv1;

function $ashr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) : bv1;

function $and.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) : bv1;

function $or.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) : bv1;

function $xor.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) : bv1;

function $nand.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ule.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ule.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $ule.i1(i1: i1, i2: i1) : i1
{
  (if $ule.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ult.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $ult.i1(i1: i1, i2: i1) : i1
{
  (if $ult.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $uge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $uge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $uge.i1(i1: i1, i2: i1) : i1
{
  (if $uge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ugt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $ugt.i1(i1: i1, i2: i1) : i1
{
  (if $ugt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sle.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sle.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $sle.i1(i1: i1, i2: i1) : i1
{
  (if $sle.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $slt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $slt.i1(i1: i1, i2: i1) : i1
{
  (if $slt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $sge.i1(i1: i1, i2: i1) : i1
{
  (if $sge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sgt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $sgt.i1(i1: i1, i2: i1) : i1
{
  (if $sgt.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 == i2
}

function {:inline} $eq.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $eq.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i1.bool(i1: i1, i2: i1) : bool
{
  i1 == i2
}

function {:inline} $eq.i1(i1: i1, i2: i1) : i1
{
  (if $eq.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 != i2
}

function {:inline} $ne.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ne.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i1.bool(i1: i1, i2: i1) : bool
{
  i1 != i2
}

function {:inline} $ne.i1(i1: i1, i2: i1) : i1
{
  (if $ne.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $smax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:inline} $umin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $umax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv1(i1: bv1) : bv1;

function $not.i1(i1: i1) : i1;

function {:inline} $load.i1(M: [ref]i1, p: ref) : i1
{
  M[p]
}

function {:inline} $load.bv1(M: [ref]bv1, p: ref) : bv1
{
  M[p]
}

function {:inline} $store.i1(M: [ref]i1, p: ref, v: i1) : [ref]i1
{
  M[p := v]
}

function {:inline} $store.bv1(M: [ref]bv1, p: ref, v: bv1) : [ref]bv1
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $add.i5(i1: i5, i2: i5) : i5
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $sub.i5(i1: i5, i2: i5) : i5
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $mul.i5(i1: i5, i2: i5) : i5
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsmod"} $smod.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsrem"} $srem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $srem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvudiv"} $udiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvurem"} $urem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $urem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvshl"} $shl.bv5(i1: bv5, i2: bv5) : bv5;

function $shl.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvlshr"} $lshr.bv5(i1: bv5, i2: bv5) : bv5;

function $lshr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvashr"} $ashr.bv5(i1: bv5, i2: bv5) : bv5;

function $ashr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvand"} $and.bv5(i1: bv5, i2: bv5) : bv5;

function $and.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvor"} $or.bv5(i1: bv5, i2: bv5) : bv5;

function $or.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvxor"} $xor.bv5(i1: bv5, i2: bv5) : bv5;

function $xor.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvnand"} $nand.bv5(i1: bv5, i2: bv5) : bv5;

function $nand.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvule"} $ule.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ule.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ule.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $ule.i5(i1: i5, i2: i5) : i1
{
  (if $ule.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ult.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ult.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $ult.i5(i1: i5, i2: i5) : i1
{
  (if $ult.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $uge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $uge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $uge.i5(i1: i5, i2: i5) : i1
{
  (if $uge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ugt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ugt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $ugt.i5(i1: i5, i2: i5) : i1
{
  (if $ugt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sle.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sle.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $sle.i5(i1: i5, i2: i5) : i1
{
  (if $sle.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $slt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $slt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $slt.i5(i1: i5, i2: i5) : i1
{
  (if $slt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $sge.i5(i1: i5, i2: i5) : i1
{
  (if $sge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sgt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sgt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $sgt.i5(i1: i5, i2: i5) : i1
{
  (if $sgt.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 == i2
}

function {:inline} $eq.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $eq.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i5.bool(i1: i5, i2: i5) : bool
{
  i1 == i2
}

function {:inline} $eq.i5(i1: i5, i2: i5) : i1
{
  (if $eq.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 != i2
}

function {:inline} $ne.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ne.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i5.bool(i1: i5, i2: i5) : bool
{
  i1 != i2
}

function {:inline} $ne.i5(i1: i5, i2: i5) : i1
{
  (if $ne.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $slt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $sgt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ult.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ugt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $smax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:inline} $umin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $umax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv5(i1: bv5) : bv5;

function $not.i5(i1: i5) : i5;

function {:inline} $load.i5(M: [ref]i5, p: ref) : i5
{
  M[p]
}

function {:inline} $load.bv5(M: [ref]bv5, p: ref) : bv5
{
  M[p]
}

function {:inline} $store.i5(M: [ref]i5, p: ref, v: i5) : [ref]i5
{
  M[p := v]
}

function {:inline} $store.bv5(M: [ref]bv5, p: ref, v: bv5) : [ref]bv5
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $add.i6(i1: i6, i2: i6) : i6
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $sub.i6(i1: i6, i2: i6) : i6
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $mul.i6(i1: i6, i2: i6) : i6
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsmod"} $smod.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsrem"} $srem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $srem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvudiv"} $udiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvurem"} $urem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $urem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvshl"} $shl.bv6(i1: bv6, i2: bv6) : bv6;

function $shl.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvlshr"} $lshr.bv6(i1: bv6, i2: bv6) : bv6;

function $lshr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvashr"} $ashr.bv6(i1: bv6, i2: bv6) : bv6;

function $ashr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvand"} $and.bv6(i1: bv6, i2: bv6) : bv6;

function $and.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvor"} $or.bv6(i1: bv6, i2: bv6) : bv6;

function $or.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvxor"} $xor.bv6(i1: bv6, i2: bv6) : bv6;

function $xor.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvnand"} $nand.bv6(i1: bv6, i2: bv6) : bv6;

function $nand.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvule"} $ule.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ule.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ule.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $ule.i6(i1: i6, i2: i6) : i1
{
  (if $ule.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ult.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ult.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $ult.i6(i1: i6, i2: i6) : i1
{
  (if $ult.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $uge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $uge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $uge.i6(i1: i6, i2: i6) : i1
{
  (if $uge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ugt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ugt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $ugt.i6(i1: i6, i2: i6) : i1
{
  (if $ugt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sle.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sle.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $sle.i6(i1: i6, i2: i6) : i1
{
  (if $sle.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $slt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $slt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $slt.i6(i1: i6, i2: i6) : i1
{
  (if $slt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $sge.i6(i1: i6, i2: i6) : i1
{
  (if $sge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sgt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sgt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $sgt.i6(i1: i6, i2: i6) : i1
{
  (if $sgt.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 == i2
}

function {:inline} $eq.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $eq.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i6.bool(i1: i6, i2: i6) : bool
{
  i1 == i2
}

function {:inline} $eq.i6(i1: i6, i2: i6) : i1
{
  (if $eq.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 != i2
}

function {:inline} $ne.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ne.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i6.bool(i1: i6, i2: i6) : bool
{
  i1 != i2
}

function {:inline} $ne.i6(i1: i6, i2: i6) : i1
{
  (if $ne.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $slt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $sgt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ult.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ugt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $smax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:inline} $umin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $umax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv6(i1: bv6) : bv6;

function $not.i6(i1: i6) : i6;

function {:inline} $load.i6(M: [ref]i6, p: ref) : i6
{
  M[p]
}

function {:inline} $load.bv6(M: [ref]bv6, p: ref) : bv6
{
  M[p]
}

function {:inline} $store.i6(M: [ref]i6, p: ref, v: i6) : [ref]i6
{
  M[p := v]
}

function {:inline} $store.bv6(M: [ref]bv6, p: ref, v: bv6) : [ref]bv6
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $add.i8(i1: i8, i2: i8) : i8
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $sub.i8(i1: i8, i2: i8) : i8
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $mul.i8(i1: i8, i2: i8) : i8
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) : bv8;

function $shl.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) : bv8;

function $lshr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) : bv8;

function $ashr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) : bv8;

function $and.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) : bv8;

function $or.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) : bv8;

function $xor.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) : bv8;

function $nand.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ule.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ule.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $ule.i8(i1: i8, i2: i8) : i1
{
  (if $ule.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ult.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ult.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $ult.i8(i1: i8, i2: i8) : i1
{
  (if $ult.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $uge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $uge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $uge.i8(i1: i8, i2: i8) : i1
{
  (if $uge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ugt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ugt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $ugt.i8(i1: i8, i2: i8) : i1
{
  (if $ugt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sle.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sle.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $sle.i8(i1: i8, i2: i8) : i1
{
  (if $sle.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $slt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $slt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $slt.i8(i1: i8, i2: i8) : i1
{
  (if $slt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $sge.i8(i1: i8, i2: i8) : i1
{
  (if $sge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sgt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sgt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $sgt.i8(i1: i8, i2: i8) : i1
{
  (if $sgt.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 == i2
}

function {:inline} $eq.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $eq.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i8.bool(i1: i8, i2: i8) : bool
{
  i1 == i2
}

function {:inline} $eq.i8(i1: i8, i2: i8) : i1
{
  (if $eq.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 != i2
}

function {:inline} $ne.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ne.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i8.bool(i1: i8, i2: i8) : bool
{
  i1 != i2
}

function {:inline} $ne.i8(i1: i8, i2: i8) : i1
{
  (if $ne.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $slt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $sgt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ult.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ugt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $smax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:inline} $umin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $umax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv8(i1: bv8) : bv8;

function $not.i8(i1: i8) : i8;

function {:inline} $load.i8(M: [ref]i8, p: ref) : i8
{
  M[p]
}

function {:inline} $load.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $store.i8(M: [ref]i8, p: ref, v: i8) : [ref]i8
{
  M[p := v]
}

function {:inline} $store.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $add.i16(i1: i16, i2: i16) : i16
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $sub.i16(i1: i16, i2: i16) : i16
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $mul.i16(i1: i16, i2: i16) : i16
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) : bv16;

function $shl.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) : bv16;

function $lshr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) : bv16;

function $ashr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) : bv16;

function $and.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) : bv16;

function $or.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) : bv16;

function $xor.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) : bv16;

function $nand.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ule.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ule.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $ule.i16(i1: i16, i2: i16) : i1
{
  (if $ule.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ult.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ult.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $ult.i16(i1: i16, i2: i16) : i1
{
  (if $ult.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $uge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $uge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $uge.i16(i1: i16, i2: i16) : i1
{
  (if $uge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ugt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ugt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $ugt.i16(i1: i16, i2: i16) : i1
{
  (if $ugt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sle.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sle.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $sle.i16(i1: i16, i2: i16) : i1
{
  (if $sle.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $slt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $slt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $slt.i16(i1: i16, i2: i16) : i1
{
  (if $slt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $sge.i16(i1: i16, i2: i16) : i1
{
  (if $sge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sgt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sgt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $sgt.i16(i1: i16, i2: i16) : i1
{
  (if $sgt.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 == i2
}

function {:inline} $eq.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $eq.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i16.bool(i1: i16, i2: i16) : bool
{
  i1 == i2
}

function {:inline} $eq.i16(i1: i16, i2: i16) : i1
{
  (if $eq.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 != i2
}

function {:inline} $ne.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ne.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i16.bool(i1: i16, i2: i16) : bool
{
  i1 != i2
}

function {:inline} $ne.i16(i1: i16, i2: i16) : i1
{
  (if $ne.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $slt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $sgt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ult.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ugt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $smax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:inline} $umin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $umax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv16(i1: bv16) : bv16;

function $not.i16(i1: i16) : i16;

function {:inline} $load.i16(M: [ref]i16, p: ref) : i16
{
  M[p]
}

function {:inline} $load.bv16(M: [ref]bv16, p: ref) : bv16
{
  M[p]
}

function {:inline} $store.i16(M: [ref]i16, p: ref, v: i16) : [ref]i16
{
  M[p := v]
}

function {:inline} $store.bv16(M: [ref]bv16, p: ref, v: bv16) : [ref]bv16
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $add.i24(i1: i24, i2: i24) : i24
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $sub.i24(i1: i24, i2: i24) : i24
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $mul.i24(i1: i24, i2: i24) : i24
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) : bv24;

function $shl.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) : bv24;

function $lshr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) : bv24;

function $ashr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) : bv24;

function $and.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) : bv24;

function $or.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) : bv24;

function $xor.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) : bv24;

function $nand.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ule.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ule.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $ule.i24(i1: i24, i2: i24) : i1
{
  (if $ule.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ult.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ult.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $ult.i24(i1: i24, i2: i24) : i1
{
  (if $ult.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $uge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $uge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $uge.i24(i1: i24, i2: i24) : i1
{
  (if $uge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ugt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ugt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $ugt.i24(i1: i24, i2: i24) : i1
{
  (if $ugt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sle.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sle.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $sle.i24(i1: i24, i2: i24) : i1
{
  (if $sle.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $slt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $slt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $slt.i24(i1: i24, i2: i24) : i1
{
  (if $slt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $sge.i24(i1: i24, i2: i24) : i1
{
  (if $sge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sgt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sgt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $sgt.i24(i1: i24, i2: i24) : i1
{
  (if $sgt.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 == i2
}

function {:inline} $eq.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $eq.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i24.bool(i1: i24, i2: i24) : bool
{
  i1 == i2
}

function {:inline} $eq.i24(i1: i24, i2: i24) : i1
{
  (if $eq.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 != i2
}

function {:inline} $ne.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ne.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i24.bool(i1: i24, i2: i24) : bool
{
  i1 != i2
}

function {:inline} $ne.i24(i1: i24, i2: i24) : i1
{
  (if $ne.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $slt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $sgt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ult.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ugt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $smax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:inline} $umin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $umax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv24(i1: bv24) : bv24;

function $not.i24(i1: i24) : i24;

function {:inline} $load.i24(M: [ref]i24, p: ref) : i24
{
  M[p]
}

function {:inline} $load.bv24(M: [ref]bv24, p: ref) : bv24
{
  M[p]
}

function {:inline} $store.i24(M: [ref]i24, p: ref, v: i24) : [ref]i24
{
  M[p := v]
}

function {:inline} $store.bv24(M: [ref]bv24, p: ref, v: bv24) : [ref]bv24
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $add.i32(i1: i32, i2: i32) : i32
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $sub.i32(i1: i32, i2: i32) : i32
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $mul.i32(i1: i32, i2: i32) : i32
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) : bv32;

function $shl.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) : bv32;

function $lshr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) : bv32;

function $ashr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) : bv32;

function $and.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) : bv32;

function $or.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) : bv32;

function $xor.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) : bv32;

function $nand.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ule.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ule.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $ule.i32(i1: i32, i2: i32) : i1
{
  (if $ule.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ult.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ult.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $ult.i32(i1: i32, i2: i32) : i1
{
  (if $ult.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $uge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $uge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $uge.i32(i1: i32, i2: i32) : i1
{
  (if $uge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ugt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ugt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $ugt.i32(i1: i32, i2: i32) : i1
{
  (if $ugt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sle.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sle.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $sle.i32(i1: i32, i2: i32) : i1
{
  (if $sle.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $slt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $slt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $slt.i32(i1: i32, i2: i32) : i1
{
  (if $slt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $sge.i32(i1: i32, i2: i32) : i1
{
  (if $sge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sgt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sgt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $sgt.i32(i1: i32, i2: i32) : i1
{
  (if $sgt.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 == i2
}

function {:inline} $eq.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $eq.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i32.bool(i1: i32, i2: i32) : bool
{
  i1 == i2
}

function {:inline} $eq.i32(i1: i32, i2: i32) : i1
{
  (if $eq.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 != i2
}

function {:inline} $ne.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ne.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i32.bool(i1: i32, i2: i32) : bool
{
  i1 != i2
}

function {:inline} $ne.i32(i1: i32, i2: i32) : i1
{
  (if $ne.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $slt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $sgt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ult.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ugt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $smax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:inline} $umin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $umax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv32(i1: bv32) : bv32;

function $not.i32(i1: i32) : i32;

function {:inline} $load.i32(M: [ref]i32, p: ref) : i32
{
  M[p]
}

function {:inline} $load.bv32(M: [ref]bv32, p: ref) : bv32
{
  M[p]
}

function {:inline} $store.i32(M: [ref]i32, p: ref, v: i32) : [ref]i32
{
  M[p := v]
}

function {:inline} $store.bv32(M: [ref]bv32, p: ref, v: bv32) : [ref]bv32
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $add.i40(i1: i40, i2: i40) : i40
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $sub.i40(i1: i40, i2: i40) : i40
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $mul.i40(i1: i40, i2: i40) : i40
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) : bv40;

function $shl.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) : bv40;

function $lshr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) : bv40;

function $ashr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) : bv40;

function $and.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) : bv40;

function $or.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) : bv40;

function $xor.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) : bv40;

function $nand.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ule.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ule.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $ule.i40(i1: i40, i2: i40) : i1
{
  (if $ule.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ult.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ult.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $ult.i40(i1: i40, i2: i40) : i1
{
  (if $ult.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $uge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $uge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $uge.i40(i1: i40, i2: i40) : i1
{
  (if $uge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ugt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ugt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $ugt.i40(i1: i40, i2: i40) : i1
{
  (if $ugt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sle.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sle.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $sle.i40(i1: i40, i2: i40) : i1
{
  (if $sle.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $slt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $slt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $slt.i40(i1: i40, i2: i40) : i1
{
  (if $slt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $sge.i40(i1: i40, i2: i40) : i1
{
  (if $sge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sgt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sgt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $sgt.i40(i1: i40, i2: i40) : i1
{
  (if $sgt.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 == i2
}

function {:inline} $eq.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $eq.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i40.bool(i1: i40, i2: i40) : bool
{
  i1 == i2
}

function {:inline} $eq.i40(i1: i40, i2: i40) : i1
{
  (if $eq.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 != i2
}

function {:inline} $ne.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ne.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i40.bool(i1: i40, i2: i40) : bool
{
  i1 != i2
}

function {:inline} $ne.i40(i1: i40, i2: i40) : i1
{
  (if $ne.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $slt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $sgt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ult.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ugt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $smax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:inline} $umin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $umax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv40(i1: bv40) : bv40;

function $not.i40(i1: i40) : i40;

function {:inline} $load.i40(M: [ref]i40, p: ref) : i40
{
  M[p]
}

function {:inline} $load.bv40(M: [ref]bv40, p: ref) : bv40
{
  M[p]
}

function {:inline} $store.i40(M: [ref]i40, p: ref, v: i40) : [ref]i40
{
  M[p := v]
}

function {:inline} $store.bv40(M: [ref]bv40, p: ref, v: bv40) : [ref]bv40
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $add.i48(i1: i48, i2: i48) : i48
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $sub.i48(i1: i48, i2: i48) : i48
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $mul.i48(i1: i48, i2: i48) : i48
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) : bv48;

function $shl.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) : bv48;

function $lshr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) : bv48;

function $ashr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) : bv48;

function $and.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) : bv48;

function $or.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) : bv48;

function $xor.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) : bv48;

function $nand.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ule.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ule.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $ule.i48(i1: i48, i2: i48) : i1
{
  (if $ule.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ult.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ult.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $ult.i48(i1: i48, i2: i48) : i1
{
  (if $ult.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $uge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $uge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $uge.i48(i1: i48, i2: i48) : i1
{
  (if $uge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ugt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ugt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $ugt.i48(i1: i48, i2: i48) : i1
{
  (if $ugt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sle.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sle.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $sle.i48(i1: i48, i2: i48) : i1
{
  (if $sle.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $slt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $slt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $slt.i48(i1: i48, i2: i48) : i1
{
  (if $slt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $sge.i48(i1: i48, i2: i48) : i1
{
  (if $sge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sgt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sgt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $sgt.i48(i1: i48, i2: i48) : i1
{
  (if $sgt.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 == i2
}

function {:inline} $eq.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $eq.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i48.bool(i1: i48, i2: i48) : bool
{
  i1 == i2
}

function {:inline} $eq.i48(i1: i48, i2: i48) : i1
{
  (if $eq.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 != i2
}

function {:inline} $ne.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ne.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i48.bool(i1: i48, i2: i48) : bool
{
  i1 != i2
}

function {:inline} $ne.i48(i1: i48, i2: i48) : i1
{
  (if $ne.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $slt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $sgt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ult.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ugt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $smax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:inline} $umin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $umax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv48(i1: bv48) : bv48;

function $not.i48(i1: i48) : i48;

function {:inline} $load.i48(M: [ref]i48, p: ref) : i48
{
  M[p]
}

function {:inline} $load.bv48(M: [ref]bv48, p: ref) : bv48
{
  M[p]
}

function {:inline} $store.i48(M: [ref]i48, p: ref, v: i48) : [ref]i48
{
  M[p := v]
}

function {:inline} $store.bv48(M: [ref]bv48, p: ref, v: bv48) : [ref]bv48
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $add.i56(i1: i56, i2: i56) : i56
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $sub.i56(i1: i56, i2: i56) : i56
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $mul.i56(i1: i56, i2: i56) : i56
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) : bv56;

function $shl.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) : bv56;

function $lshr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) : bv56;

function $ashr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) : bv56;

function $and.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) : bv56;

function $or.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) : bv56;

function $xor.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) : bv56;

function $nand.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ule.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ule.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $ule.i56(i1: i56, i2: i56) : i1
{
  (if $ule.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ult.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ult.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $ult.i56(i1: i56, i2: i56) : i1
{
  (if $ult.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $uge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $uge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $uge.i56(i1: i56, i2: i56) : i1
{
  (if $uge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ugt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ugt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $ugt.i56(i1: i56, i2: i56) : i1
{
  (if $ugt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sle.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sle.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $sle.i56(i1: i56, i2: i56) : i1
{
  (if $sle.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $slt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $slt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $slt.i56(i1: i56, i2: i56) : i1
{
  (if $slt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $sge.i56(i1: i56, i2: i56) : i1
{
  (if $sge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sgt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sgt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $sgt.i56(i1: i56, i2: i56) : i1
{
  (if $sgt.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 == i2
}

function {:inline} $eq.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $eq.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i56.bool(i1: i56, i2: i56) : bool
{
  i1 == i2
}

function {:inline} $eq.i56(i1: i56, i2: i56) : i1
{
  (if $eq.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 != i2
}

function {:inline} $ne.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ne.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i56.bool(i1: i56, i2: i56) : bool
{
  i1 != i2
}

function {:inline} $ne.i56(i1: i56, i2: i56) : i1
{
  (if $ne.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $slt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $sgt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ult.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ugt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $smax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:inline} $umin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $umax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv56(i1: bv56) : bv56;

function $not.i56(i1: i56) : i56;

function {:inline} $load.i56(M: [ref]i56, p: ref) : i56
{
  M[p]
}

function {:inline} $load.bv56(M: [ref]bv56, p: ref) : bv56
{
  M[p]
}

function {:inline} $store.i56(M: [ref]i56, p: ref, v: i56) : [ref]i56
{
  M[p := v]
}

function {:inline} $store.bv56(M: [ref]bv56, p: ref, v: bv56) : [ref]bv56
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $add.i64(i1: i64, i2: i64) : i64
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $sub.i64(i1: i64, i2: i64) : i64
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $mul.i64(i1: i64, i2: i64) : i64
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) : bv64;

function $shl.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) : bv64;

function $lshr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) : bv64;

function $ashr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) : bv64;

function $and.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) : bv64;

function $or.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) : bv64;

function $xor.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) : bv64;

function $nand.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ule.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ule.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $ule.i64(i1: i64, i2: i64) : i1
{
  (if $ule.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ult.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ult.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $ult.i64(i1: i64, i2: i64) : i1
{
  (if $ult.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $uge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $uge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $uge.i64(i1: i64, i2: i64) : i1
{
  (if $uge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ugt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ugt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $ugt.i64(i1: i64, i2: i64) : i1
{
  (if $ugt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sle.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sle.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $sle.i64(i1: i64, i2: i64) : i1
{
  (if $sle.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $slt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $slt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $slt.i64(i1: i64, i2: i64) : i1
{
  (if $slt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $sge.i64(i1: i64, i2: i64) : i1
{
  (if $sge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sgt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sgt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $sgt.i64(i1: i64, i2: i64) : i1
{
  (if $sgt.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 == i2
}

function {:inline} $eq.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $eq.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i64.bool(i1: i64, i2: i64) : bool
{
  i1 == i2
}

function {:inline} $eq.i64(i1: i64, i2: i64) : i1
{
  (if $eq.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 != i2
}

function {:inline} $ne.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ne.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i64.bool(i1: i64, i2: i64) : bool
{
  i1 != i2
}

function {:inline} $ne.i64(i1: i64, i2: i64) : i1
{
  (if $ne.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $slt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $sgt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ult.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ugt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $smax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:inline} $umin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $umax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv64(i1: bv64) : bv64;

function $not.i64(i1: i64) : i64;

function {:inline} $load.i64(M: [ref]i64, p: ref) : i64
{
  M[p]
}

function {:inline} $load.bv64(M: [ref]bv64, p: ref) : bv64
{
  M[p]
}

function {:inline} $store.i64(M: [ref]i64, p: ref, v: i64) : [ref]i64
{
  M[p := v]
}

function {:inline} $store.bv64(M: [ref]bv64, p: ref, v: bv64) : [ref]bv64
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $add.i80(i1: i80, i2: i80) : i80
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $sub.i80(i1: i80, i2: i80) : i80
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $mul.i80(i1: i80, i2: i80) : i80
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsmod"} $smod.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsrem"} $srem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $srem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvudiv"} $udiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvurem"} $urem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $urem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvshl"} $shl.bv80(i1: bv80, i2: bv80) : bv80;

function $shl.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvlshr"} $lshr.bv80(i1: bv80, i2: bv80) : bv80;

function $lshr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvashr"} $ashr.bv80(i1: bv80, i2: bv80) : bv80;

function $ashr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvand"} $and.bv80(i1: bv80, i2: bv80) : bv80;

function $and.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvor"} $or.bv80(i1: bv80, i2: bv80) : bv80;

function $or.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvxor"} $xor.bv80(i1: bv80, i2: bv80) : bv80;

function $xor.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvnand"} $nand.bv80(i1: bv80, i2: bv80) : bv80;

function $nand.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvule"} $ule.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ule.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ule.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $ule.i80(i1: i80, i2: i80) : i1
{
  (if $ule.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ult.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ult.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $ult.i80(i1: i80, i2: i80) : i1
{
  (if $ult.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $uge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $uge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $uge.i80(i1: i80, i2: i80) : i1
{
  (if $uge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ugt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ugt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $ugt.i80(i1: i80, i2: i80) : i1
{
  (if $ugt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sle.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sle.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $sle.i80(i1: i80, i2: i80) : i1
{
  (if $sle.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $slt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $slt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $slt.i80(i1: i80, i2: i80) : i1
{
  (if $slt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $sge.i80(i1: i80, i2: i80) : i1
{
  (if $sge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sgt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sgt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $sgt.i80(i1: i80, i2: i80) : i1
{
  (if $sgt.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 == i2
}

function {:inline} $eq.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $eq.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i80.bool(i1: i80, i2: i80) : bool
{
  i1 == i2
}

function {:inline} $eq.i80(i1: i80, i2: i80) : i1
{
  (if $eq.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 != i2
}

function {:inline} $ne.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ne.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i80.bool(i1: i80, i2: i80) : bool
{
  i1 != i2
}

function {:inline} $ne.i80(i1: i80, i2: i80) : i1
{
  (if $ne.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $slt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $sgt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ult.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ugt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $smax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:inline} $umin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $umax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv80(i1: bv80) : bv80;

function $not.i80(i1: i80) : i80;

function {:inline} $load.i80(M: [ref]i80, p: ref) : i80
{
  M[p]
}

function {:inline} $load.bv80(M: [ref]bv80, p: ref) : bv80
{
  M[p]
}

function {:inline} $store.i80(M: [ref]i80, p: ref, v: i80) : [ref]i80
{
  M[p := v]
}

function {:inline} $store.bv80(M: [ref]bv80, p: ref, v: bv80) : [ref]bv80
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $add.i88(i1: i88, i2: i88) : i88
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $sub.i88(i1: i88, i2: i88) : i88
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $mul.i88(i1: i88, i2: i88) : i88
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) : bv88;

function $shl.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) : bv88;

function $lshr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) : bv88;

function $ashr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) : bv88;

function $and.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) : bv88;

function $or.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) : bv88;

function $xor.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) : bv88;

function $nand.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ule.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ule.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $ule.i88(i1: i88, i2: i88) : i1
{
  (if $ule.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ult.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ult.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $ult.i88(i1: i88, i2: i88) : i1
{
  (if $ult.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $uge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $uge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $uge.i88(i1: i88, i2: i88) : i1
{
  (if $uge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ugt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ugt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $ugt.i88(i1: i88, i2: i88) : i1
{
  (if $ugt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sle.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sle.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $sle.i88(i1: i88, i2: i88) : i1
{
  (if $sle.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $slt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $slt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $slt.i88(i1: i88, i2: i88) : i1
{
  (if $slt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $sge.i88(i1: i88, i2: i88) : i1
{
  (if $sge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sgt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sgt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $sgt.i88(i1: i88, i2: i88) : i1
{
  (if $sgt.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 == i2
}

function {:inline} $eq.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $eq.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i88.bool(i1: i88, i2: i88) : bool
{
  i1 == i2
}

function {:inline} $eq.i88(i1: i88, i2: i88) : i1
{
  (if $eq.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 != i2
}

function {:inline} $ne.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ne.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i88.bool(i1: i88, i2: i88) : bool
{
  i1 != i2
}

function {:inline} $ne.i88(i1: i88, i2: i88) : i1
{
  (if $ne.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $slt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $sgt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ult.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ugt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $smax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:inline} $umin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $umax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv88(i1: bv88) : bv88;

function $not.i88(i1: i88) : i88;

function {:inline} $load.i88(M: [ref]i88, p: ref) : i88
{
  M[p]
}

function {:inline} $load.bv88(M: [ref]bv88, p: ref) : bv88
{
  M[p]
}

function {:inline} $store.i88(M: [ref]i88, p: ref, v: i88) : [ref]i88
{
  M[p := v]
}

function {:inline} $store.bv88(M: [ref]bv88, p: ref, v: bv88) : [ref]bv88
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $add.i96(i1: i96, i2: i96) : i96
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $sub.i96(i1: i96, i2: i96) : i96
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $mul.i96(i1: i96, i2: i96) : i96
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) : bv96;

function $shl.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) : bv96;

function $lshr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) : bv96;

function $ashr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) : bv96;

function $and.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) : bv96;

function $or.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) : bv96;

function $xor.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) : bv96;

function $nand.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ule.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ule.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $ule.i96(i1: i96, i2: i96) : i1
{
  (if $ule.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ult.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ult.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $ult.i96(i1: i96, i2: i96) : i1
{
  (if $ult.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $uge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $uge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $uge.i96(i1: i96, i2: i96) : i1
{
  (if $uge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ugt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ugt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $ugt.i96(i1: i96, i2: i96) : i1
{
  (if $ugt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sle.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sle.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $sle.i96(i1: i96, i2: i96) : i1
{
  (if $sle.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $slt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $slt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $slt.i96(i1: i96, i2: i96) : i1
{
  (if $slt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $sge.i96(i1: i96, i2: i96) : i1
{
  (if $sge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sgt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sgt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $sgt.i96(i1: i96, i2: i96) : i1
{
  (if $sgt.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 == i2
}

function {:inline} $eq.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $eq.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i96.bool(i1: i96, i2: i96) : bool
{
  i1 == i2
}

function {:inline} $eq.i96(i1: i96, i2: i96) : i1
{
  (if $eq.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 != i2
}

function {:inline} $ne.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ne.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i96.bool(i1: i96, i2: i96) : bool
{
  i1 != i2
}

function {:inline} $ne.i96(i1: i96, i2: i96) : i1
{
  (if $ne.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $slt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $sgt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ult.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ugt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $smax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:inline} $umin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $umax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv96(i1: bv96) : bv96;

function $not.i96(i1: i96) : i96;

function {:inline} $load.i96(M: [ref]i96, p: ref) : i96
{
  M[p]
}

function {:inline} $load.bv96(M: [ref]bv96, p: ref) : bv96
{
  M[p]
}

function {:inline} $store.i96(M: [ref]i96, p: ref, v: i96) : [ref]i96
{
  M[p := v]
}

function {:inline} $store.bv96(M: [ref]bv96, p: ref, v: bv96) : [ref]bv96
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $add.i128(i1: i128, i2: i128) : i128
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $sub.i128(i1: i128, i2: i128) : i128
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $mul.i128(i1: i128, i2: i128) : i128
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) : bv128;

function $shl.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) : bv128;

function $lshr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) : bv128;

function $ashr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) : bv128;

function $and.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) : bv128;

function $or.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) : bv128;

function $xor.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) : bv128;

function $nand.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ule.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ule.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $ule.i128(i1: i128, i2: i128) : i1
{
  (if $ule.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ult.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ult.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $ult.i128(i1: i128, i2: i128) : i1
{
  (if $ult.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $uge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $uge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $uge.i128(i1: i128, i2: i128) : i1
{
  (if $uge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ugt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ugt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $ugt.i128(i1: i128, i2: i128) : i1
{
  (if $ugt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sle.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sle.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $sle.i128(i1: i128, i2: i128) : i1
{
  (if $sle.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $slt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $slt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $slt.i128(i1: i128, i2: i128) : i1
{
  (if $slt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $sge.i128(i1: i128, i2: i128) : i1
{
  (if $sge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sgt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sgt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $sgt.i128(i1: i128, i2: i128) : i1
{
  (if $sgt.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 == i2
}

function {:inline} $eq.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $eq.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i128.bool(i1: i128, i2: i128) : bool
{
  i1 == i2
}

function {:inline} $eq.i128(i1: i128, i2: i128) : i1
{
  (if $eq.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 != i2
}

function {:inline} $ne.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ne.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i128.bool(i1: i128, i2: i128) : bool
{
  i1 != i2
}

function {:inline} $ne.i128(i1: i128, i2: i128) : i1
{
  (if $ne.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $slt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $sgt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ult.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ugt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $smax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:inline} $umin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $umax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv128(i1: bv128) : bv128;

function $not.i128(i1: i128) : i128;

function {:inline} $load.i128(M: [ref]i128, p: ref) : i128
{
  M[p]
}

function {:inline} $load.bv128(M: [ref]bv128, p: ref) : bv128
{
  M[p]
}

function {:inline} $store.i128(M: [ref]i128, p: ref, v: i128) : [ref]i128
{
  M[p := v]
}

function {:inline} $store.bv128(M: [ref]bv128, p: ref, v: bv128) : [ref]bv128
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $add.i160(i1: i160, i2: i160) : i160
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $sub.i160(i1: i160, i2: i160) : i160
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $mul.i160(i1: i160, i2: i160) : i160
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsmod"} $smod.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsrem"} $srem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $srem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvudiv"} $udiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvurem"} $urem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $urem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvshl"} $shl.bv160(i1: bv160, i2: bv160) : bv160;

function $shl.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvlshr"} $lshr.bv160(i1: bv160, i2: bv160) : bv160;

function $lshr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvashr"} $ashr.bv160(i1: bv160, i2: bv160) : bv160;

function $ashr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvand"} $and.bv160(i1: bv160, i2: bv160) : bv160;

function $and.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvor"} $or.bv160(i1: bv160, i2: bv160) : bv160;

function $or.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvxor"} $xor.bv160(i1: bv160, i2: bv160) : bv160;

function $xor.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvnand"} $nand.bv160(i1: bv160, i2: bv160) : bv160;

function $nand.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvule"} $ule.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ule.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ule.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $ule.i160(i1: i160, i2: i160) : i1
{
  (if $ule.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ult.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ult.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $ult.i160(i1: i160, i2: i160) : i1
{
  (if $ult.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $uge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $uge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $uge.i160(i1: i160, i2: i160) : i1
{
  (if $uge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ugt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ugt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $ugt.i160(i1: i160, i2: i160) : i1
{
  (if $ugt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sle.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sle.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $sle.i160(i1: i160, i2: i160) : i1
{
  (if $sle.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $slt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $slt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $slt.i160(i1: i160, i2: i160) : i1
{
  (if $slt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $sge.i160(i1: i160, i2: i160) : i1
{
  (if $sge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sgt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sgt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $sgt.i160(i1: i160, i2: i160) : i1
{
  (if $sgt.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 == i2
}

function {:inline} $eq.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $eq.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i160.bool(i1: i160, i2: i160) : bool
{
  i1 == i2
}

function {:inline} $eq.i160(i1: i160, i2: i160) : i1
{
  (if $eq.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 != i2
}

function {:inline} $ne.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ne.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i160.bool(i1: i160, i2: i160) : bool
{
  i1 != i2
}

function {:inline} $ne.i160(i1: i160, i2: i160) : i1
{
  (if $ne.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $slt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $sgt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ult.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ugt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $smax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:inline} $umin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $umax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv160(i1: bv160) : bv160;

function $not.i160(i1: i160) : i160;

function {:inline} $load.i160(M: [ref]i160, p: ref) : i160
{
  M[p]
}

function {:inline} $load.bv160(M: [ref]bv160, p: ref) : bv160
{
  M[p]
}

function {:inline} $store.i160(M: [ref]i160, p: ref, v: i160) : [ref]i160
{
  M[p := v]
}

function {:inline} $store.bv160(M: [ref]bv160, p: ref, v: bv160) : [ref]bv160
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $add.i256(i1: i256, i2: i256) : i256
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $sub.i256(i1: i256, i2: i256) : i256
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $mul.i256(i1: i256, i2: i256) : i256
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsmod"} $smod.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsrem"} $srem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $srem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvudiv"} $udiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvurem"} $urem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $urem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvshl"} $shl.bv256(i1: bv256, i2: bv256) : bv256;

function $shl.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvlshr"} $lshr.bv256(i1: bv256, i2: bv256) : bv256;

function $lshr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvashr"} $ashr.bv256(i1: bv256, i2: bv256) : bv256;

function $ashr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvand"} $and.bv256(i1: bv256, i2: bv256) : bv256;

function $and.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvor"} $or.bv256(i1: bv256, i2: bv256) : bv256;

function $or.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvxor"} $xor.bv256(i1: bv256, i2: bv256) : bv256;

function $xor.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvnand"} $nand.bv256(i1: bv256, i2: bv256) : bv256;

function $nand.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvule"} $ule.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ule.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ule.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $ule.i256(i1: i256, i2: i256) : i1
{
  (if $ule.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ult.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ult.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $ult.i256(i1: i256, i2: i256) : i1
{
  (if $ult.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $uge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $uge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $uge.i256(i1: i256, i2: i256) : i1
{
  (if $uge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ugt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ugt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $ugt.i256(i1: i256, i2: i256) : i1
{
  (if $ugt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sle.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sle.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $sle.i256(i1: i256, i2: i256) : i1
{
  (if $sle.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $slt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $slt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $slt.i256(i1: i256, i2: i256) : i1
{
  (if $slt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $sge.i256(i1: i256, i2: i256) : i1
{
  (if $sge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sgt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sgt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $sgt.i256(i1: i256, i2: i256) : i1
{
  (if $sgt.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 == i2
}

function {:inline} $eq.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $eq.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i256.bool(i1: i256, i2: i256) : bool
{
  i1 == i2
}

function {:inline} $eq.i256(i1: i256, i2: i256) : i1
{
  (if $eq.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 != i2
}

function {:inline} $ne.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ne.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i256.bool(i1: i256, i2: i256) : bool
{
  i1 != i2
}

function {:inline} $ne.i256(i1: i256, i2: i256) : i1
{
  (if $ne.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $slt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $sgt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ult.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ugt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $smax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:inline} $umin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $umax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv256(i1: bv256) : bv256;

function $not.i256(i1: i256) : i256;

function {:inline} $load.i256(M: [ref]i256, p: ref) : i256
{
  M[p]
}

function {:inline} $load.bv256(M: [ref]bv256, p: ref) : bv256
{
  M[p]
}

function {:inline} $store.i256(M: [ref]i256, p: ref, v: i256) : [ref]i256
{
  M[p := v]
}

function {:inline} $store.bv256(M: [ref]bv256, p: ref, v: bv256) : [ref]bv256
{
  M[p := v]
}

function {:inline} $trunc.bv5.bv1(i1: bv5) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i5.i1(i1: i5) : i1
{
  i1
}

function {:inline} $zext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $sext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $trunc.bv6.bv1(i1: bv6) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i6.i1(i1: i6) : i1
{
  i1
}

function {:inline} $zext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $sext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv1(i1: bv8) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i8.i1(i1: i8) : i1
{
  i1
}

function {:inline} $zext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $sext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv1(i1: bv16) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i16.i1(i1: i16) : i1
{
  i1
}

function {:inline} $zext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $sext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv1(i1: bv24) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i24.i1(i1: i24) : i1
{
  i1
}

function {:inline} $zext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $sext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv1(i1: bv32) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i32.i1(i1: i32) : i1
{
  i1
}

function {:inline} $zext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $sext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv1(i1: bv40) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i40.i1(i1: i40) : i1
{
  i1
}

function {:inline} $zext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $sext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv1(i1: bv48) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i48.i1(i1: i48) : i1
{
  i1
}

function {:inline} $zext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $sext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv1(i1: bv56) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i56.i1(i1: i56) : i1
{
  i1
}

function {:inline} $zext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $sext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv1(i1: bv64) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i64.i1(i1: i64) : i1
{
  i1
}

function {:inline} $zext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $sext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv1(i1: bv80) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i80.i1(i1: i80) : i1
{
  i1
}

function {:inline} $zext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $sext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv1(i1: bv88) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i88.i1(i1: i88) : i1
{
  i1
}

function {:inline} $zext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $sext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv1(i1: bv96) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i96.i1(i1: i96) : i1
{
  i1
}

function {:inline} $zext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $sext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv1(i1: bv128) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i128.i1(i1: i128) : i1
{
  i1
}

function {:inline} $zext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $sext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv1(i1: bv160) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i160.i1(i1: i160) : i1
{
  i1
}

function {:inline} $zext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $sext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv1(i1: bv256) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i256.i1(i1: i256) : i1
{
  i1
}

function {:inline} $zext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $sext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $trunc.bv6.bv5(i1: bv6) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i6.i5(i1: i6) : i5
{
  i1
}

function {:inline} $zext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $sext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv5(i1: bv8) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i8.i5(i1: i8) : i5
{
  i1
}

function {:inline} $zext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $sext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv5(i1: bv16) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i16.i5(i1: i16) : i5
{
  i1
}

function {:inline} $zext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $sext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv5(i1: bv24) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i24.i5(i1: i24) : i5
{
  i1
}

function {:inline} $zext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $sext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv5(i1: bv32) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i32.i5(i1: i32) : i5
{
  i1
}

function {:inline} $zext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $sext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv5(i1: bv40) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i40.i5(i1: i40) : i5
{
  i1
}

function {:inline} $zext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $sext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv5(i1: bv48) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i48.i5(i1: i48) : i5
{
  i1
}

function {:inline} $zext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $sext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv5(i1: bv56) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i56.i5(i1: i56) : i5
{
  i1
}

function {:inline} $zext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $sext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv5(i1: bv64) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i64.i5(i1: i64) : i5
{
  i1
}

function {:inline} $zext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $sext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv5(i1: bv80) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i80.i5(i1: i80) : i5
{
  i1
}

function {:inline} $zext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $sext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv5(i1: bv88) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i88.i5(i1: i88) : i5
{
  i1
}

function {:inline} $zext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $sext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv5(i1: bv96) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i96.i5(i1: i96) : i5
{
  i1
}

function {:inline} $zext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $sext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv5(i1: bv128) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i128.i5(i1: i128) : i5
{
  i1
}

function {:inline} $zext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $sext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv5(i1: bv160) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i160.i5(i1: i160) : i5
{
  i1
}

function {:inline} $zext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $sext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv5(i1: bv256) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i256.i5(i1: i256) : i5
{
  i1
}

function {:inline} $zext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $sext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $trunc.bv8.bv6(i1: bv8) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i8.i6(i1: i8) : i6
{
  i1
}

function {:inline} $zext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $sext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv6(i1: bv16) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i16.i6(i1: i16) : i6
{
  i1
}

function {:inline} $zext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $sext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv6(i1: bv24) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i24.i6(i1: i24) : i6
{
  i1
}

function {:inline} $zext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $sext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv6(i1: bv32) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i32.i6(i1: i32) : i6
{
  i1
}

function {:inline} $zext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $sext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv6(i1: bv40) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i40.i6(i1: i40) : i6
{
  i1
}

function {:inline} $zext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $sext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv6(i1: bv48) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i48.i6(i1: i48) : i6
{
  i1
}

function {:inline} $zext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $sext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv6(i1: bv56) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i56.i6(i1: i56) : i6
{
  i1
}

function {:inline} $zext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $sext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv6(i1: bv64) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i64.i6(i1: i64) : i6
{
  i1
}

function {:inline} $zext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $sext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv6(i1: bv80) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i80.i6(i1: i80) : i6
{
  i1
}

function {:inline} $zext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $sext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv6(i1: bv88) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i88.i6(i1: i88) : i6
{
  i1
}

function {:inline} $zext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $sext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv6(i1: bv96) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i96.i6(i1: i96) : i6
{
  i1
}

function {:inline} $zext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $sext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv6(i1: bv128) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i128.i6(i1: i128) : i6
{
  i1
}

function {:inline} $zext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $sext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv6(i1: bv160) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i160.i6(i1: i160) : i6
{
  i1
}

function {:inline} $zext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $sext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv6(i1: bv256) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i256.i6(i1: i256) : i6
{
  i1
}

function {:inline} $zext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $sext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $trunc.bv16.bv8(i1: bv16) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i16.i8(i1: i16) : i8
{
  i1
}

function {:inline} $zext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $sext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv8(i1: bv24) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i24.i8(i1: i24) : i8
{
  i1
}

function {:inline} $zext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $sext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv8(i1: bv32) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i32.i8(i1: i32) : i8
{
  i1
}

function {:inline} $zext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $sext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv8(i1: bv40) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i40.i8(i1: i40) : i8
{
  i1
}

function {:inline} $zext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $sext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv8(i1: bv48) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i48.i8(i1: i48) : i8
{
  i1
}

function {:inline} $zext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $sext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv8(i1: bv56) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i56.i8(i1: i56) : i8
{
  i1
}

function {:inline} $zext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $sext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv8(i1: bv64) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i64.i8(i1: i64) : i8
{
  i1
}

function {:inline} $zext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $sext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv8(i1: bv80) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i80.i8(i1: i80) : i8
{
  i1
}

function {:inline} $zext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $sext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv8(i1: bv88) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i88.i8(i1: i88) : i8
{
  i1
}

function {:inline} $zext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $sext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv8(i1: bv96) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i96.i8(i1: i96) : i8
{
  i1
}

function {:inline} $zext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $sext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv8(i1: bv128) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i128.i8(i1: i128) : i8
{
  i1
}

function {:inline} $zext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $sext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv8(i1: bv160) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i160.i8(i1: i160) : i8
{
  i1
}

function {:inline} $zext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $sext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv8(i1: bv256) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i256.i8(i1: i256) : i8
{
  i1
}

function {:inline} $zext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $sext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $trunc.bv24.bv16(i1: bv24) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i24.i16(i1: i24) : i16
{
  i1
}

function {:inline} $zext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $sext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv16(i1: bv32) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i32.i16(i1: i32) : i16
{
  i1
}

function {:inline} $zext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $sext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv16(i1: bv40) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i40.i16(i1: i40) : i16
{
  i1
}

function {:inline} $zext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $sext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv16(i1: bv48) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i48.i16(i1: i48) : i16
{
  i1
}

function {:inline} $zext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $sext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv16(i1: bv56) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i56.i16(i1: i56) : i16
{
  i1
}

function {:inline} $zext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $sext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv16(i1: bv64) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i64.i16(i1: i64) : i16
{
  i1
}

function {:inline} $zext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $sext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv16(i1: bv80) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i80.i16(i1: i80) : i16
{
  i1
}

function {:inline} $zext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $sext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv16(i1: bv88) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i88.i16(i1: i88) : i16
{
  i1
}

function {:inline} $zext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $sext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv16(i1: bv96) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i96.i16(i1: i96) : i16
{
  i1
}

function {:inline} $zext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $sext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv16(i1: bv128) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i128.i16(i1: i128) : i16
{
  i1
}

function {:inline} $zext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $sext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv16(i1: bv160) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i160.i16(i1: i160) : i16
{
  i1
}

function {:inline} $zext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $sext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv16(i1: bv256) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i256.i16(i1: i256) : i16
{
  i1
}

function {:inline} $zext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $sext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $trunc.bv32.bv24(i1: bv32) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i32.i24(i1: i32) : i24
{
  i1
}

function {:inline} $zext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $sext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv24(i1: bv40) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i40.i24(i1: i40) : i24
{
  i1
}

function {:inline} $zext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $sext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv24(i1: bv48) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i48.i24(i1: i48) : i24
{
  i1
}

function {:inline} $zext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $sext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv24(i1: bv56) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i56.i24(i1: i56) : i24
{
  i1
}

function {:inline} $zext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $sext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv24(i1: bv64) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i64.i24(i1: i64) : i24
{
  i1
}

function {:inline} $zext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $sext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv24(i1: bv80) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i80.i24(i1: i80) : i24
{
  i1
}

function {:inline} $zext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $sext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv24(i1: bv88) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i88.i24(i1: i88) : i24
{
  i1
}

function {:inline} $zext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $sext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv24(i1: bv96) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i96.i24(i1: i96) : i24
{
  i1
}

function {:inline} $zext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $sext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv24(i1: bv128) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i128.i24(i1: i128) : i24
{
  i1
}

function {:inline} $zext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $sext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv24(i1: bv160) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i160.i24(i1: i160) : i24
{
  i1
}

function {:inline} $zext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $sext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv24(i1: bv256) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i256.i24(i1: i256) : i24
{
  i1
}

function {:inline} $zext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $sext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $trunc.bv40.bv32(i1: bv40) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i40.i32(i1: i40) : i32
{
  i1
}

function {:inline} $zext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $sext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv32(i1: bv48) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i48.i32(i1: i48) : i32
{
  i1
}

function {:inline} $zext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $sext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv32(i1: bv56) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i56.i32(i1: i56) : i32
{
  i1
}

function {:inline} $zext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $sext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv32(i1: bv64) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i64.i32(i1: i64) : i32
{
  i1
}

function {:inline} $zext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $sext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv32(i1: bv80) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i80.i32(i1: i80) : i32
{
  i1
}

function {:inline} $zext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $sext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv32(i1: bv88) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i88.i32(i1: i88) : i32
{
  i1
}

function {:inline} $zext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $sext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv32(i1: bv96) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i96.i32(i1: i96) : i32
{
  i1
}

function {:inline} $zext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $sext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv32(i1: bv128) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i128.i32(i1: i128) : i32
{
  i1
}

function {:inline} $zext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $sext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv32(i1: bv160) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i160.i32(i1: i160) : i32
{
  i1
}

function {:inline} $zext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $sext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv32(i1: bv256) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i256.i32(i1: i256) : i32
{
  i1
}

function {:inline} $zext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $sext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $trunc.bv48.bv40(i1: bv48) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i48.i40(i1: i48) : i40
{
  i1
}

function {:inline} $zext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $sext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv40(i1: bv56) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i56.i40(i1: i56) : i40
{
  i1
}

function {:inline} $zext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $sext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv40(i1: bv64) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i64.i40(i1: i64) : i40
{
  i1
}

function {:inline} $zext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $sext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv40(i1: bv80) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i80.i40(i1: i80) : i40
{
  i1
}

function {:inline} $zext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $sext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv40(i1: bv88) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i88.i40(i1: i88) : i40
{
  i1
}

function {:inline} $zext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $sext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv40(i1: bv96) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i96.i40(i1: i96) : i40
{
  i1
}

function {:inline} $zext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $sext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv40(i1: bv128) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i128.i40(i1: i128) : i40
{
  i1
}

function {:inline} $zext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $sext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv40(i1: bv160) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i160.i40(i1: i160) : i40
{
  i1
}

function {:inline} $zext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $sext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv40(i1: bv256) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i256.i40(i1: i256) : i40
{
  i1
}

function {:inline} $zext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $sext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $trunc.bv56.bv48(i1: bv56) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i56.i48(i1: i56) : i48
{
  i1
}

function {:inline} $zext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $sext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv48(i1: bv64) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i64.i48(i1: i64) : i48
{
  i1
}

function {:inline} $zext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $sext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv48(i1: bv80) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i80.i48(i1: i80) : i48
{
  i1
}

function {:inline} $zext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $sext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv48(i1: bv88) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i88.i48(i1: i88) : i48
{
  i1
}

function {:inline} $zext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $sext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv48(i1: bv96) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i96.i48(i1: i96) : i48
{
  i1
}

function {:inline} $zext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $sext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv48(i1: bv128) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i128.i48(i1: i128) : i48
{
  i1
}

function {:inline} $zext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $sext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv48(i1: bv160) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i160.i48(i1: i160) : i48
{
  i1
}

function {:inline} $zext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $sext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv48(i1: bv256) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i256.i48(i1: i256) : i48
{
  i1
}

function {:inline} $zext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $sext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $trunc.bv64.bv56(i1: bv64) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i64.i56(i1: i64) : i56
{
  i1
}

function {:inline} $zext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $sext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv56(i1: bv80) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i80.i56(i1: i80) : i56
{
  i1
}

function {:inline} $zext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $sext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv56(i1: bv88) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i88.i56(i1: i88) : i56
{
  i1
}

function {:inline} $zext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $sext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv56(i1: bv96) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i96.i56(i1: i96) : i56
{
  i1
}

function {:inline} $zext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $sext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv56(i1: bv128) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i128.i56(i1: i128) : i56
{
  i1
}

function {:inline} $zext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $sext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv56(i1: bv160) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i160.i56(i1: i160) : i56
{
  i1
}

function {:inline} $zext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $sext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv56(i1: bv256) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i256.i56(i1: i256) : i56
{
  i1
}

function {:inline} $zext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $sext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $trunc.bv80.bv64(i1: bv80) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i80.i64(i1: i80) : i64
{
  i1
}

function {:inline} $zext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $sext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv64(i1: bv88) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i88.i64(i1: i88) : i64
{
  i1
}

function {:inline} $zext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $sext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv64(i1: bv96) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i96.i64(i1: i96) : i64
{
  i1
}

function {:inline} $zext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $sext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv64(i1: bv128) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i128.i64(i1: i128) : i64
{
  i1
}

function {:inline} $zext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $sext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv64(i1: bv160) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i160.i64(i1: i160) : i64
{
  i1
}

function {:inline} $zext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $sext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv64(i1: bv256) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i256.i64(i1: i256) : i64
{
  i1
}

function {:inline} $zext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $sext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $trunc.bv88.bv80(i1: bv88) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i88.i80(i1: i88) : i80
{
  i1
}

function {:inline} $zext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $sext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv80(i1: bv96) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i96.i80(i1: i96) : i80
{
  i1
}

function {:inline} $zext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $sext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv80(i1: bv128) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i128.i80(i1: i128) : i80
{
  i1
}

function {:inline} $zext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $sext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv80(i1: bv160) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i160.i80(i1: i160) : i80
{
  i1
}

function {:inline} $zext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $sext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv80(i1: bv256) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i256.i80(i1: i256) : i80
{
  i1
}

function {:inline} $zext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $sext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $trunc.bv96.bv88(i1: bv96) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i96.i88(i1: i96) : i88
{
  i1
}

function {:inline} $zext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $sext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv88(i1: bv128) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i128.i88(i1: i128) : i88
{
  i1
}

function {:inline} $zext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $sext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv88(i1: bv160) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i160.i88(i1: i160) : i88
{
  i1
}

function {:inline} $zext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $sext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv88(i1: bv256) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i256.i88(i1: i256) : i88
{
  i1
}

function {:inline} $zext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $sext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $trunc.bv128.bv96(i1: bv128) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i128.i96(i1: i128) : i96
{
  i1
}

function {:inline} $zext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $sext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv96(i1: bv160) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i160.i96(i1: i160) : i96
{
  i1
}

function {:inline} $zext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $sext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv96(i1: bv256) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i256.i96(i1: i256) : i96
{
  i1
}

function {:inline} $zext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $sext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $trunc.bv160.bv128(i1: bv160) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i160.i128(i1: i160) : i128
{
  i1
}

function {:inline} $zext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $sext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv128(i1: bv256) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i256.i128(i1: i256) : i128
{
  i1
}

function {:inline} $zext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $sext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $trunc.bv256.bv160(i1: bv256) : bv160
{
  i1[160:0]
}

function {:inline} $trunc.i256.i160(i1: i256) : i160
{
  i1
}

function {:inline} $zext.i160.i256(i1: i160) : i256
{
  i1
}

function {:inline} $sext.i160.i256(i1: i160) : i256
{
  i1
}

procedure corral_assert_not_reachable();



procedure {:entrypoint} main_SeqInstr() returns ($r: i32);
  free requires assertsPassed;
  modifies assertsPassed, $M.8, $M.9, $M.10, $M.11, $M.0, $M.12, $M.2, $M.13, $M.16, $M.15, $M.14, $M.6, $M.1, $CurrAddr, $M.7, $M.5, $M.3, $M.4;



implementation {:entrypoint} main_SeqInstr() returns ($r: i32)
{

  start:
    assertsPassed := true;
    call $r := main();
    assume {:OldAssert} !assertsPassed;
    return;
}



implementation opl3_reset_loop_$bb8(in_$i0: i32, in_$i9: i64, in_$p10: ref, in_$p12: ref, in_$i13: i32, in_$i14: i64, in_$p16: ref, in_$i17: i16, in_$i18: i32, in_$i19: i64, in_$p20: ref, in_$p22: ref, in_$i23: i32, in_$i24: i64, in_$p27: ref, in_$i28: i8, in_$i29: i32, in_$i30: i32, in_$i31: i64, in_$p32: ref, in_$p34: ref, in_$i35: i32, in_$i36: i64, in_$p38: ref, in_$i39: i16, in_$i40: i32, in_$i41: i64, in_$p42: ref, in_$p44: ref, in_$i45: i32, in_$i46: i64, in_$p49: ref, in_$i50: i8, in_$i51: i32, in_$i52: i32, in_$i53: i64, in_$p54: ref, in_$p56: ref, in_$i57: i32, in_$i58: i64, in_$p60: ref, in_$i61: i8, in_$i62: i32, in_$i63: i1, in_$i64: i64, in_$p65: ref, in_$p67: ref, in_$i68: i32, in_$i69: i64, in_$p71: ref, in_$i72: i16, in_$i73: i32, in_$i74: i64, in_$p75: ref, in_$p77: ref, in_$i78: i32, in_$i79: i64, in_$p82: ref, in_$i83: i8, in_$i84: i32, in_$i85: i32, in_$i86: i64, in_$p87: ref, in_$p89: ref, in_$i90: i32, in_$i91: i64, in_$p93: ref, in_$i94: i16, in_$i95: i32, in_$i96: i64, in_$p97: ref, in_$p99: ref, in_$i100: i32, in_$i101: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i109: i32, in_$p110: ref, in_$p111: ref, in_$i112: i32, in_$i113: i1, in_$i8: i32, in_vslice_dummy_var_13: i32) returns (out_$i9: i64, out_$p10: ref, out_$p12: ref, out_$i13: i32, out_$i14: i64, out_$p16: ref, out_$i17: i16, out_$i18: i32, out_$i19: i64, out_$p20: ref, out_$p22: ref, out_$i23: i32, out_$i24: i64, out_$p27: ref, out_$i28: i8, out_$i29: i32, out_$i30: i32, out_$i31: i64, out_$p32: ref, out_$p34: ref, out_$i35: i32, out_$i36: i64, out_$p38: ref, out_$i39: i16, out_$i40: i32, out_$i41: i64, out_$p42: ref, out_$p44: ref, out_$i45: i32, out_$i46: i64, out_$p49: ref, out_$i50: i8, out_$i51: i32, out_$i52: i32, out_$i53: i64, out_$p54: ref, out_$p56: ref, out_$i57: i32, out_$i58: i64, out_$p60: ref, out_$i61: i8, out_$i62: i32, out_$i63: i1, out_$i64: i64, out_$p65: ref, out_$p67: ref, out_$i68: i32, out_$i69: i64, out_$p71: ref, out_$i72: i16, out_$i73: i32, out_$i74: i64, out_$p75: ref, out_$p77: ref, out_$i78: i32, out_$i79: i64, out_$p82: ref, out_$i83: i8, out_$i84: i32, out_$i85: i32, out_$i86: i64, out_$p87: ref, out_$p89: ref, out_$i90: i32, out_$i91: i64, out_$p93: ref, out_$i94: i16, out_$i95: i32, out_$i96: i64, out_$p97: ref, out_$p99: ref, out_$i100: i32, out_$i101: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i109: i32, out_$p110: ref, out_$p111: ref, out_$i112: i32, out_$i113: i1, out_$i8: i32, out_vslice_dummy_var_13: i32)
{

  entry:
    out_$i9, out_$p10, out_$p12, out_$i13, out_$i14, out_$p16, out_$i17, out_$i18, out_$i19, out_$p20, out_$p22, out_$i23, out_$i24, out_$p27, out_$i28, out_$i29, out_$i30, out_$i31, out_$p32, out_$p34, out_$i35, out_$i36, out_$p38, out_$i39, out_$i40, out_$i41, out_$p42, out_$p44, out_$i45, out_$i46, out_$p49, out_$i50, out_$i51, out_$i52, out_$i53, out_$p54, out_$p56, out_$i57, out_$i58, out_$p60, out_$i61, out_$i62, out_$i63, out_$i64, out_$p65, out_$p67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$p75, out_$p77, out_$i78, out_$i79, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$p87, out_$p89, out_$i90, out_$i91, out_$p93, out_$i94, out_$i95, out_$i96, out_$p97, out_$p99, out_$i100, out_$i101, out_$p104, out_$i105, out_$i106, out_$i107, out_$i109, out_$p110, out_$p111, out_$i112, out_$i113, out_$i8, out_vslice_dummy_var_13 := in_$i9, in_$p10, in_$p12, in_$i13, in_$i14, in_$p16, in_$i17, in_$i18, in_$i19, in_$p20, in_$p22, in_$i23, in_$i24, in_$p27, in_$i28, in_$i29, in_$i30, in_$i31, in_$p32, in_$p34, in_$i35, in_$i36, in_$p38, in_$i39, in_$i40, in_$i41, in_$p42, in_$p44, in_$i45, in_$i46, in_$p49, in_$i50, in_$i51, in_$i52, in_$i53, in_$p54, in_$p56, in_$i57, in_$i58, in_$p60, in_$i61, in_$i62, in_$i63, in_$i64, in_$p65, in_$p67, in_$i68, in_$i69, in_$p71, in_$i72, in_$i73, in_$i74, in_$p75, in_$p77, in_$i78, in_$i79, in_$p82, in_$i83, in_$i84, in_$i85, in_$i86, in_$p87, in_$p89, in_$i90, in_$i91, in_$p93, in_$i94, in_$i95, in_$i96, in_$p97, in_$p99, in_$i100, in_$i101, in_$p104, in_$i105, in_$i106, in_$i107, in_$i109, in_$p110, in_$p111, in_$i112, in_$i113, in_$i8, in_vslice_dummy_var_13;
    goto $bb8, exit;

  $bb8:
    assume {:verifier.code 0} true;
    goto corral_source_split_928;

  $bb13:
    assume out_$i113 == 1;
    assume {:verifier.code 0} true;
    out_$i8 := out_$i109;
    goto $bb13_dummy;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    out_$i113 := $sgt.i32(out_$i112, out_$i109);
    goto corral_source_split_1019;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    out_$i112 := $load.i32($M.0, out_$p111);
    goto corral_source_split_1018;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    out_$p111 := $add.ref($add.ref(out_$p110, $mul.ref(0, 11656)), $mul.ref(12, 1));
    goto corral_source_split_1017;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    out_$p110 := $M.1;
    goto corral_source_split_1016;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    out_$i109 := $add.i32(out_$i8, 1);
    call {:si_unique_call 100} {:cexpr "i"} boogie_si_record_i32(out_$i109);
    goto corral_source_split_1015;

  $bb12:
    assume {:verifier.code 0} true;
    call {:si_unique_call 99} out_vslice_dummy_var_13 := opl3_kill_note(in_$i0, out_$i8, 0, 64);
    goto corral_source_split_1014;

  $bb11:
    assume !(out_$i63 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    call {:si_unique_call 98} opl3_command(out_$i95, out_$i107, 255);
    goto corral_source_split_1012;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    out_$i107 := $add.i32(out_$i106, 64);
    goto corral_source_split_1011;

  corral_source_split_1009:
    assume {:verifier.code 0} true;
    out_$i106 := $zext.i8.i32(out_$i105);
    goto corral_source_split_1010;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    out_$i105 := $load.i8($M.2, out_$p104);
    goto corral_source_split_1009;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    out_$p104 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i101, 8)), $mul.ref(4, 1)), $mul.ref(3, 1));
    goto corral_source_split_1008;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    out_$i101 := $sext.i32.i64(out_$i100);
    goto corral_source_split_1007;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    out_$i100 := $load.i32($M.0, out_$p99);
    goto corral_source_split_1006;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    out_$p99 := $add.ref($add.ref($add.ref(out_$p97, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i96, 4));
    goto corral_source_split_1005;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    out_$p97 := $M.1;
    goto corral_source_split_1004;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    out_$i96 := $sext.i32.i64(out_$i8);
    goto corral_source_split_1003;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    out_$i95 := $zext.i16.i32(out_$i94);
    goto corral_source_split_1002;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    out_$i94 := $load.i16($M.2, out_$p93);
    goto corral_source_split_1001;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    out_$p93 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i91, 8)), $mul.ref(2, 1));
    goto corral_source_split_1000;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    out_$i91 := $sext.i32.i64(out_$i90);
    goto corral_source_split_999;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    out_$i90 := $load.i32($M.0, out_$p89);
    goto corral_source_split_998;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    out_$p89 := $add.ref($add.ref($add.ref(out_$p87, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i86, 4));
    goto corral_source_split_997;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    out_$p87 := $M.1;
    goto corral_source_split_996;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    out_$i86 := $sext.i32.i64(out_$i8);
    goto corral_source_split_995;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    call {:si_unique_call 97} opl3_command(out_$i73, out_$i85, 255);
    goto corral_source_split_994;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    out_$i85 := $add.i32(out_$i84, 64);
    goto corral_source_split_993;

  corral_source_split_991:
    assume {:verifier.code 0} true;
    out_$i84 := $zext.i8.i32(out_$i83);
    goto corral_source_split_992;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    out_$i83 := $load.i8($M.2, out_$p82);
    goto corral_source_split_991;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    out_$p82 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i79, 8)), $mul.ref(4, 1)), $mul.ref(2, 1));
    goto corral_source_split_990;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    out_$i79 := $sext.i32.i64(out_$i78);
    goto corral_source_split_989;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    out_$i78 := $load.i32($M.0, out_$p77);
    goto corral_source_split_988;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    out_$p77 := $add.ref($add.ref($add.ref(out_$p75, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i74, 4));
    goto corral_source_split_987;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    out_$p75 := $M.1;
    goto corral_source_split_986;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    out_$i74 := $sext.i32.i64(out_$i8);
    goto corral_source_split_985;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i16.i32(out_$i72);
    goto corral_source_split_984;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    out_$i72 := $load.i16($M.2, out_$p71);
    goto corral_source_split_983;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    out_$p71 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i69, 8)), $mul.ref(2, 1));
    goto corral_source_split_982;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    out_$i69 := $sext.i32.i64(out_$i68);
    goto corral_source_split_981;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    out_$i68 := $load.i32($M.0, out_$p67);
    goto corral_source_split_980;

  corral_source_split_978:
    assume {:verifier.code 0} true;
    out_$p67 := $add.ref($add.ref($add.ref(out_$p65, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i64, 4));
    goto corral_source_split_979;

  corral_source_split_977:
    assume {:verifier.code 0} true;
    out_$p65 := $M.1;
    goto corral_source_split_978;

  corral_source_split_976:
    assume {:verifier.code 0} true;
    out_$i64 := $sext.i32.i64(out_$i8);
    goto corral_source_split_977;

  $bb10:
    assume out_$i63 == 1;
    goto corral_source_split_976;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    out_$i63 := $eq.i32(out_$i62, 4);
    goto corral_source_split_974;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    out_$i62 := $zext.i8.i32(out_$i61);
    goto corral_source_split_973;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    out_$i61 := $load.i8($M.2, out_$p60);
    goto corral_source_split_972;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    out_$p60 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i58, 8)), $mul.ref(1, 1));
    goto corral_source_split_971;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    out_$i58 := $sext.i32.i64(out_$i57);
    goto corral_source_split_970;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    out_$i57 := $load.i32($M.0, out_$p56);
    goto corral_source_split_969;

  corral_source_split_967:
    assume {:verifier.code 0} true;
    out_$p56 := $add.ref($add.ref($add.ref(out_$p54, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i53, 4));
    goto corral_source_split_968;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    out_$p54 := $M.1;
    goto corral_source_split_967;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    out_$i53 := $sext.i32.i64(out_$i8);
    goto corral_source_split_966;

  corral_source_split_964:
    assume {:verifier.code 0} true;
    call {:si_unique_call 96} opl3_command(out_$i40, out_$i52, 255);
    goto corral_source_split_965;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    out_$i52 := $add.i32(out_$i51, 64);
    goto corral_source_split_964;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    out_$i51 := $zext.i8.i32(out_$i50);
    goto corral_source_split_963;

  corral_source_split_961:
    assume {:verifier.code 0} true;
    out_$i50 := $load.i8($M.2, out_$p49);
    goto corral_source_split_962;

  corral_source_split_960:
    assume {:verifier.code 0} true;
    out_$p49 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i46, 8)), $mul.ref(4, 1)), $mul.ref(1, 1));
    goto corral_source_split_961;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    out_$i46 := $sext.i32.i64(out_$i45);
    goto corral_source_split_960;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    out_$i45 := $load.i32($M.0, out_$p44);
    goto corral_source_split_959;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    out_$p44 := $add.ref($add.ref($add.ref(out_$p42, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i41, 4));
    goto corral_source_split_958;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    out_$p42 := $M.1;
    goto corral_source_split_957;

  corral_source_split_955:
    assume {:verifier.code 0} true;
    out_$i41 := $sext.i32.i64(out_$i8);
    goto corral_source_split_956;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    out_$i40 := $zext.i16.i32(out_$i39);
    goto corral_source_split_955;

  corral_source_split_953:
    assume {:verifier.code 0} true;
    out_$i39 := $load.i16($M.2, out_$p38);
    goto corral_source_split_954;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    out_$p38 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i36, 8)), $mul.ref(2, 1));
    goto corral_source_split_953;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    out_$i36 := $sext.i32.i64(out_$i35);
    goto corral_source_split_952;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    out_$i35 := $load.i32($M.0, out_$p34);
    goto corral_source_split_951;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    out_$p34 := $add.ref($add.ref($add.ref(out_$p32, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i31, 4));
    goto corral_source_split_950;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    out_$p32 := $M.1;
    goto corral_source_split_949;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    out_$i31 := $sext.i32.i64(out_$i8);
    goto corral_source_split_948;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    call {:si_unique_call 95} opl3_command(out_$i18, out_$i30, 255);
    goto corral_source_split_947;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    out_$i30 := $add.i32(out_$i29, 64);
    goto corral_source_split_946;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    out_$i29 := $zext.i8.i32(out_$i28);
    goto corral_source_split_945;

  corral_source_split_943:
    assume {:verifier.code 0} true;
    out_$i28 := $load.i8($M.2, out_$p27);
    goto corral_source_split_944;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    out_$p27 := $add.ref($add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i24, 8)), $mul.ref(4, 1)), $mul.ref(0, 1));
    goto corral_source_split_943;

  corral_source_split_941:
    assume {:verifier.code 0} true;
    out_$i24 := $sext.i32.i64(out_$i23);
    goto corral_source_split_942;

  corral_source_split_940:
    assume {:verifier.code 0} true;
    out_$i23 := $load.i32($M.0, out_$p22);
    goto corral_source_split_941;

  corral_source_split_939:
    assume {:verifier.code 0} true;
    out_$p22 := $add.ref($add.ref($add.ref(out_$p20, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i19, 4));
    goto corral_source_split_940;

  corral_source_split_938:
    assume {:verifier.code 0} true;
    out_$p20 := $M.1;
    goto corral_source_split_939;

  corral_source_split_937:
    assume {:verifier.code 0} true;
    out_$i19 := $sext.i32.i64(out_$i8);
    goto corral_source_split_938;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    out_$i18 := $zext.i16.i32(out_$i17);
    goto corral_source_split_937;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    out_$i17 := $load.i16($M.2, out_$p16);
    goto corral_source_split_936;

  corral_source_split_934:
    assume {:verifier.code 0} true;
    out_$p16 := $add.ref($add.ref($add.ref(pv_map, $mul.ref(0, 144)), $mul.ref(out_$i14, 8)), $mul.ref(2, 1));
    goto corral_source_split_935;

  corral_source_split_933:
    assume {:verifier.code 0} true;
    out_$i14 := $sext.i32.i64(out_$i13);
    goto corral_source_split_934;

  corral_source_split_932:
    assume {:verifier.code 0} true;
    out_$i13 := $load.i32($M.0, out_$p12);
    goto corral_source_split_933;

  corral_source_split_931:
    assume {:verifier.code 0} true;
    out_$p12 := $add.ref($add.ref($add.ref(out_$p10, $mul.ref(0, 11656)), $mul.ref(16, 1)), $mul.ref(out_$i9, 4));
    goto corral_source_split_932;

  corral_source_split_930:
    assume {:verifier.code 0} true;
    out_$p10 := $M.1;
    goto corral_source_split_931;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i9 := $sext.i32.i64(out_$i8);
    goto corral_source_split_930;

  corral_source_split_928:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb13_dummy:
    call {:si_unique_call 1} out_$i9, out_$p10, out_$p12, out_$i13, out_$i14, out_$p16, out_$i17, out_$i18, out_$i19, out_$p20, out_$p22, out_$i23, out_$i24, out_$p27, out_$i28, out_$i29, out_$i30, out_$i31, out_$p32, out_$p34, out_$i35, out_$i36, out_$p38, out_$i39, out_$i40, out_$i41, out_$p42, out_$p44, out_$i45, out_$i46, out_$p49, out_$i50, out_$i51, out_$i52, out_$i53, out_$p54, out_$p56, out_$i57, out_$i58, out_$p60, out_$i61, out_$i62, out_$i63, out_$i64, out_$p65, out_$p67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$p75, out_$p77, out_$i78, out_$i79, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$p87, out_$p89, out_$i90, out_$i91, out_$p93, out_$i94, out_$i95, out_$i96, out_$p97, out_$p99, out_$i100, out_$i101, out_$p104, out_$i105, out_$i106, out_$i107, out_$i109, out_$p110, out_$p111, out_$i112, out_$i113, out_$i8, out_vslice_dummy_var_13 := opl3_reset_loop_$bb8(in_$i0, out_$i9, out_$p10, out_$p12, out_$i13, out_$i14, out_$p16, out_$i17, out_$i18, out_$i19, out_$p20, out_$p22, out_$i23, out_$i24, out_$p27, out_$i28, out_$i29, out_$i30, out_$i31, out_$p32, out_$p34, out_$i35, out_$i36, out_$p38, out_$i39, out_$i40, out_$i41, out_$p42, out_$p44, out_$i45, out_$i46, out_$p49, out_$i50, out_$i51, out_$i52, out_$i53, out_$p54, out_$p56, out_$i57, out_$i58, out_$p60, out_$i61, out_$i62, out_$i63, out_$i64, out_$p65, out_$p67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$p75, out_$p77, out_$i78, out_$i79, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$p87, out_$p89, out_$i90, out_$i91, out_$p93, out_$i94, out_$i95, out_$i96, out_$p97, out_$p99, out_$i100, out_$i101, out_$p104, out_$i105, out_$i106, out_$i107, out_$i109, out_$p110, out_$p111, out_$i112, out_$i113, out_$i8, out_vslice_dummy_var_13);
    return;

  exit:
    return;
}



procedure opl3_reset_loop_$bb8(in_$i0: i32, in_$i9: i64, in_$p10: ref, in_$p12: ref, in_$i13: i32, in_$i14: i64, in_$p16: ref, in_$i17: i16, in_$i18: i32, in_$i19: i64, in_$p20: ref, in_$p22: ref, in_$i23: i32, in_$i24: i64, in_$p27: ref, in_$i28: i8, in_$i29: i32, in_$i30: i32, in_$i31: i64, in_$p32: ref, in_$p34: ref, in_$i35: i32, in_$i36: i64, in_$p38: ref, in_$i39: i16, in_$i40: i32, in_$i41: i64, in_$p42: ref, in_$p44: ref, in_$i45: i32, in_$i46: i64, in_$p49: ref, in_$i50: i8, in_$i51: i32, in_$i52: i32, in_$i53: i64, in_$p54: ref, in_$p56: ref, in_$i57: i32, in_$i58: i64, in_$p60: ref, in_$i61: i8, in_$i62: i32, in_$i63: i1, in_$i64: i64, in_$p65: ref, in_$p67: ref, in_$i68: i32, in_$i69: i64, in_$p71: ref, in_$i72: i16, in_$i73: i32, in_$i74: i64, in_$p75: ref, in_$p77: ref, in_$i78: i32, in_$i79: i64, in_$p82: ref, in_$i83: i8, in_$i84: i32, in_$i85: i32, in_$i86: i64, in_$p87: ref, in_$p89: ref, in_$i90: i32, in_$i91: i64, in_$p93: ref, in_$i94: i16, in_$i95: i32, in_$i96: i64, in_$p97: ref, in_$p99: ref, in_$i100: i32, in_$i101: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i109: i32, in_$p110: ref, in_$p111: ref, in_$i112: i32, in_$i113: i1, in_$i8: i32, in_vslice_dummy_var_13: i32) returns (out_$i9: i64, out_$p10: ref, out_$p12: ref, out_$i13: i32, out_$i14: i64, out_$p16: ref, out_$i17: i16, out_$i18: i32, out_$i19: i64, out_$p20: ref, out_$p22: ref, out_$i23: i32, out_$i24: i64, out_$p27: ref, out_$i28: i8, out_$i29: i32, out_$i30: i32, out_$i31: i64, out_$p32: ref, out_$p34: ref, out_$i35: i32, out_$i36: i64, out_$p38: ref, out_$i39: i16, out_$i40: i32, out_$i41: i64, out_$p42: ref, out_$p44: ref, out_$i45: i32, out_$i46: i64, out_$p49: ref, out_$i50: i8, out_$i51: i32, out_$i52: i32, out_$i53: i64, out_$p54: ref, out_$p56: ref, out_$i57: i32, out_$i58: i64, out_$p60: ref, out_$i61: i8, out_$i62: i32, out_$i63: i1, out_$i64: i64, out_$p65: ref, out_$p67: ref, out_$i68: i32, out_$i69: i64, out_$p71: ref, out_$i72: i16, out_$i73: i32, out_$i74: i64, out_$p75: ref, out_$p77: ref, out_$i78: i32, out_$i79: i64, out_$p82: ref, out_$i83: i8, out_$i84: i32, out_$i85: i32, out_$i86: i64, out_$p87: ref, out_$p89: ref, out_$i90: i32, out_$i91: i64, out_$p93: ref, out_$i94: i16, out_$i95: i32, out_$i96: i64, out_$p97: ref, out_$p99: ref, out_$i100: i32, out_$i101: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i109: i32, out_$p110: ref, out_$p111: ref, out_$i112: i32, out_$i113: i1, out_$i8: i32, out_vslice_dummy_var_13: i32);
  modifies $M.0;



implementation opl3_alloc_voice_loop_$bb25(in_$p3: ref, in_$i40: i32, in_$i56: i64, in_$p58: ref, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i32, in_$i64: i64, in_$p66: ref, in_$i67: i32, in_$i68: i1, in_$i69: i64, in_$p71: ref, in_$i72: i32, in_$i73: i32, in_$i74: i32, in_$i75: i32, in_$i76: i32, in_$i77: i32, in_$i78: i1, in_$i52: i32, in_$i53: i32, in_$i54: i32, in_$i55: i32, in_$i79: i32) returns (out_$i56: i64, out_$p58: ref, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i32, out_$i64: i64, out_$p66: ref, out_$i67: i32, out_$i68: i1, out_$i69: i64, out_$p71: ref, out_$i72: i32, out_$i73: i32, out_$i74: i32, out_$i75: i32, out_$i76: i32, out_$i77: i32, out_$i78: i1, out_$i52: i32, out_$i53: i32, out_$i54: i32, out_$i55: i32, out_$i79: i32)
{

  entry:
    out_$i56, out_$p58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i64, out_$p66, out_$i67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i52, out_$i53, out_$i54, out_$i55, out_$i79 := in_$i56, in_$p58, in_$i59, in_$i60, in_$i61, in_$i62, in_$i64, in_$p66, in_$i67, in_$i68, in_$i69, in_$p71, in_$i72, in_$i73, in_$i74, in_$i75, in_$i76, in_$i77, in_$i78, in_$i52, in_$i53, in_$i54, in_$i55, in_$i79;
    goto $bb25, exit;

  $bb25:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1521;

  $bb34:
    assume out_$i78 == 1;
    assume {:verifier.code 0} true;
    out_$i52, out_$i53, out_$i54, out_$i55 := out_$i74, out_$i77, out_$i76, out_$i73;
    goto $bb34_dummy;

  corral_source_split_1547:
    assume {:verifier.code 0} true;
    out_$i79 := out_$i73;
    assume true;
    goto $bb34;

  corral_source_split_1546:
    assume {:verifier.code 0} true;
    out_$i78 := $slt.i32(out_$i77, in_$i40);
    goto corral_source_split_1547;

  corral_source_split_1545:
    assume {:verifier.code 0} true;
    out_$i77 := $add.i32(out_$i53, 1);
    call {:si_unique_call 170} {:cexpr "i"} boogie_si_record_i32(out_$i77);
    goto corral_source_split_1546;

  corral_source_split_1544:
    assume {:verifier.code 0} true;
    out_$i76 := $srem.i32(out_$i75, in_$i40);
    call {:si_unique_call 169} {:cexpr "p"} boogie_si_record_i32(out_$i76);
    goto corral_source_split_1545;

  corral_source_split_1543:
    assume {:verifier.code 0} true;
    out_$i75 := $add.i32(out_$i54, 1);
    goto corral_source_split_1544;

  $bb33:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1543;

  $bb32:
    assume !(out_$i68 == 1);
    assume {:verifier.code 0} true;
    out_$i73, out_$i74 := out_$i55, out_$i52;
    goto $bb33;

  corral_source_split_1541:
    assume {:verifier.code 0} true;
    out_$i73, out_$i74 := out_$i54, out_$i72;
    goto $bb33;

  corral_source_split_1540:
    assume {:verifier.code 0} true;
    out_$i72 := $load.i32($M.0, out_$p71);
    call {:si_unique_call 168} {:cexpr "best_time"} boogie_si_record_i32(out_$i72);
    goto corral_source_split_1541;

  corral_source_split_1539:
    assume {:verifier.code 0} true;
    out_$p71 := $add.ref($add.ref($add.ref(in_$p3, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(out_$i69, 4));
    goto corral_source_split_1540;

  corral_source_split_1538:
    assume {:verifier.code 0} true;
    out_$i69 := $sext.i32.i64(out_$i54);
    goto corral_source_split_1539;

  $bb31:
    assume out_$i68 == 1;
    goto corral_source_split_1538;

  corral_source_split_1536:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_1535:
    assume {:verifier.code 0} true;
    out_$i68 := $slt.i32(out_$i67, out_$i52);
    goto corral_source_split_1536;

  corral_source_split_1534:
    assume {:verifier.code 0} true;
    out_$i67 := $load.i32($M.0, out_$p66);
    goto corral_source_split_1535;

  corral_source_split_1533:
    assume {:verifier.code 0} true;
    out_$p66 := $add.ref($add.ref($add.ref(in_$p3, $mul.ref(0, 208)), $mul.ref(80, 1)), $mul.ref(out_$i64, 4));
    goto corral_source_split_1534;

  $bb30:
    assume {:verifier.code 0} true;
    out_$i64 := $sext.i32.i64(out_$i54);
    goto corral_source_split_1533;

  $bb28:
    assume !(out_$i61 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_1527:
    assume {:verifier.code 0} true;
    out_$i62 := out_$i54;
    assume true;
    goto $bb28;

  corral_source_split_1526:
    assume {:verifier.code 0} true;
    out_$i61 := $eq.i32(out_$i60, 0);
    goto corral_source_split_1527;

  corral_source_split_1525:
    assume {:verifier.code 0} true;
    out_$i60 := $zext.i16.i32(out_$i59);
    goto corral_source_split_1526;

  corral_source_split_1524:
    assume {:verifier.code 0} true;
    out_$i59 := $load.i16($M.0, out_$p58);
    goto corral_source_split_1525;

  corral_source_split_1523:
    assume {:verifier.code 0} true;
    out_$p58 := $add.ref($add.ref($add.ref(in_$p3, $mul.ref(0, 208)), $mul.ref(12, 1)), $mul.ref(out_$i56, 2));
    goto corral_source_split_1524;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i56 := $sext.i32.i64(out_$i54);
    goto corral_source_split_1523;

  corral_source_split_1521:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb34_dummy:
    call {:si_unique_call 1} out_$i56, out_$p58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i64, out_$p66, out_$i67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i52, out_$i53, out_$i54, out_$i55, out_$i79 := opl3_alloc_voice_loop_$bb25(in_$p3, in_$i40, out_$i56, out_$p58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i64, out_$p66, out_$i67, out_$i68, out_$i69, out_$p71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i52, out_$i53, out_$i54, out_$i55, out_$i79);
    return;

  exit:
    return;
}



procedure opl3_alloc_voice_loop_$bb25(in_$p3: ref, in_$i40: i32, in_$i56: i64, in_$p58: ref, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i32, in_$i64: i64, in_$p66: ref, in_$i67: i32, in_$i68: i1, in_$i69: i64, in_$p71: ref, in_$i72: i32, in_$i73: i32, in_$i74: i32, in_$i75: i32, in_$i76: i32, in_$i77: i32, in_$i78: i1, in_$i52: i32, in_$i53: i32, in_$i54: i32, in_$i55: i32, in_$i79: i32) returns (out_$i56: i64, out_$p58: ref, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i32, out_$i64: i64, out_$p66: ref, out_$i67: i32, out_$i68: i1, out_$i69: i64, out_$p71: ref, out_$i72: i32, out_$i73: i32, out_$i74: i32, out_$i75: i32, out_$i76: i32, out_$i77: i32, out_$i78: i1, out_$i52: i32, out_$i53: i32, out_$i54: i32, out_$i55: i32, out_$i79: i32);



implementation freq_to_fnum_loop_$bb20(in_$i20: i32, in_$i21: i32, in_$i22: i1, in_$i18: i32, in_$i19: i32, in_$i23: i32) returns (out_$i20: i32, out_$i21: i32, out_$i22: i1, out_$i18: i32, out_$i19: i32, out_$i23: i32)
{

  entry:
    out_$i20, out_$i21, out_$i22, out_$i18, out_$i19, out_$i23 := in_$i20, in_$i21, in_$i22, in_$i18, in_$i19, in_$i23;
    goto $bb20, exit;

  $bb20:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1743;

  $bb22:
    assume out_$i22 == 1;
    assume {:verifier.code 0} true;
    out_$i18, out_$i19 := out_$i20, out_$i21;
    goto $bb22_dummy;

  corral_source_split_1747:
    assume {:verifier.code 0} true;
    out_$i23 := out_$i20;
    assume true;
    goto $bb22;

  corral_source_split_1746:
    assume {:verifier.code 0} true;
    out_$i22 := $sgt.i32(out_$i21, 493);
    goto corral_source_split_1747;

  corral_source_split_1745:
    assume {:verifier.code 0} true;
    out_$i21 := $ashr.i32(out_$i19, 1);
    call {:si_unique_call 200} {:cexpr "f"} boogie_si_record_i32(out_$i21);
    goto corral_source_split_1746;

  $bb21:
    assume {:verifier.code 0} true;
    out_$i20 := $add.i32(out_$i18, 1);
    call {:si_unique_call 199} {:cexpr "octave"} boogie_si_record_i32(out_$i20);
    goto corral_source_split_1745;

  corral_source_split_1743:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb22_dummy:
    call {:si_unique_call 1} out_$i20, out_$i21, out_$i22, out_$i18, out_$i19, out_$i23 := freq_to_fnum_loop_$bb20(out_$i20, out_$i21, out_$i22, out_$i18, out_$i19, out_$i23);
    return;

  exit:
    return;
}



procedure freq_to_fnum_loop_$bb20(in_$i20: i32, in_$i21: i32, in_$i22: i1, in_$i18: i32, in_$i19: i32, in_$i23: i32) returns (out_$i20: i32, out_$i21: i32, out_$i22: i1, out_$i18: i32, out_$i19: i32, out_$i23: i32);



implementation freq_to_fnum_loop_$bb9(in_$i10: i32, in_$i11: i32, in_$i12: i1, in_$i8: i32, in_$i9: i32, in_$i13: i32) returns (out_$i10: i32, out_$i11: i32, out_$i12: i1, out_$i8: i32, out_$i9: i32, out_$i13: i32)
{

  entry:
    out_$i10, out_$i11, out_$i12, out_$i8, out_$i9, out_$i13 := in_$i10, in_$i11, in_$i12, in_$i8, in_$i9, in_$i13;
    goto $bb9, exit;

  $bb9:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1730;

  $bb11:
    assume out_$i12 == 1;
    assume {:verifier.code 0} true;
    out_$i8, out_$i9 := out_$i10, out_$i11;
    goto $bb11_dummy;

  corral_source_split_1734:
    assume {:verifier.code 0} true;
    out_$i13 := out_$i10;
    assume true;
    goto $bb11;

  corral_source_split_1733:
    assume {:verifier.code 0} true;
    out_$i12 := $sle.i32(out_$i11, 260);
    goto corral_source_split_1734;

  corral_source_split_1732:
    assume {:verifier.code 0} true;
    out_$i11 := $shl.i32(out_$i9, 1);
    call {:si_unique_call 198} {:cexpr "f"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_1733;

  $bb10:
    assume {:verifier.code 0} true;
    out_$i10 := $sub.i32(out_$i8, 1);
    call {:si_unique_call 197} {:cexpr "octave"} boogie_si_record_i32(out_$i10);
    goto corral_source_split_1732;

  corral_source_split_1730:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb11_dummy:
    call {:si_unique_call 1} out_$i10, out_$i11, out_$i12, out_$i8, out_$i9, out_$i13 := freq_to_fnum_loop_$bb9(out_$i10, out_$i11, out_$i12, out_$i8, out_$i9, out_$i13);
    return;

  exit:
    return;
}



procedure freq_to_fnum_loop_$bb9(in_$i10: i32, in_$i11: i32, in_$i12: i1, in_$i8: i32, in_$i9: i32, in_$i13: i32) returns (out_$i10: i32, out_$i11: i32, out_$i12: i1, out_$i8: i32, out_$i9: i32, out_$i13: i32);



implementation main_loop_$bb1(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p7: ref, in_$p8: ref, in_$p9: ref, in_$p10: ref, in_$p11: ref, in_$p12: ref, in_$p13: ref, in_$p14: ref, in_$p15: ref, in_$p16: ref, in_$p17: ref, in_$p18: ref, in_$p19: ref, in_$p20: ref, in_$p21: ref, in_$p22: ref, in_$p23: ref, in_$p24: ref, in_$p25: ref, in_$p26: ref, in_$p27: ref, in_$p28: ref, in_$p29: ref, in_$p30: ref, in_$p31: ref, in_$p32: ref, in_$p33: ref, in_$p34: ref, in_$p35: ref, in_$p36: ref, in_$p37: ref, in_$p38: ref, in_$p39: ref, in_$p41: ref, in_$p42: ref, in_$p43: ref, in_$i50: i32, in_$i73: i32, in_$i76: i32, in_$i103: i32, in_$i106: i32, in_$i127: i32, in_$i128: i1, in_$i129: i1, in_$i130: i1, in_$i131: i32, in_$i132: i1, in_$i133: i32, in_$i134: i1, in_$i135: i1, in_$i136: i1, in_$i137: i1, in_$i138: i1, in_$i139: i1, in_$i140: i1, in_$i141: i1, in_$i142: i1, in_$i143: i1, in_$i144: i1, in_$i145: i1, in_$i146: i1, in_$i147: i1, in_$i148: i1, in_$i149: i1, in_$i150: i1, in_$i151: i32, in_$i152: i1, in_$i153: i32, in_$i154: i32, in_$i155: i32, in_$i157: i32, in_$i158: i1, in_$i159: i32, in_$i160: i32, in_$i161: i32, in_$i163: i32, in_$i164: i1, in_$i165: i32, in_$i166: i32, in_$i167: i32, in_$i168: i32, in_$i170: i32, in_$i171: i1, in_$i172: i32, in_$i173: i32, in_$i174: i32, in_$i175: i32, in_$i177: i32, in_$i178: i1, in_$i179: i32, in_$i180: i32, in_$i181: i32, in_$i182: i32, in_$i183: i1, in_$i184: i32, in_$i185: i32, in_$i186: i32, in_$i187: i1, in_$i188: i32, in_$i189: i32, in_$i190: i32, in_$i191: i32, in_$i192: i1, in_$i193: i32, in_$i194: i32, in_$i195: i32, in_$i196: i32, in_$i197: i1, in_$i198: i32, in_$i199: i32, in_$i201: i32, in_$i202: i1, in_$i203: i32, in_$i204: i32, in_$i206: i32, in_$i207: i1, in_$i208: i32, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i1, in_$i213: i32, in_$i214: i32, in_$i215: i32, in_$i216: i32, in_$i217: i1, in_$i218: i32, in_$i219: i32, in_$i220: i32, in_$i221: i32, in_$i223: i32, in_$i224: i1, in_$i225: i32, in_$i226: i32, in_$i227: i32, in_$i228: i32, in_$i230: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i234: i1, in_$i235: i32, in_$i236: i32, in_$i237: i1, in_$i238: i32, in_$i239: i32, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i248: i32, in_$i249: i1, in_$i250: i32, in_$i251: i32, in_$i252: i32, in_$i254: i32, in_$i255: i1, in_$i256: i32, in_$i257: i32, in_$i258: i1, in_$i259: i32, in_$i260: i32, in_$i261: i32, in_$i262: i32, in_$i263: i32, in_$i264: i1, in_$i265: i32, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i1, in_$i271: i32, in_$i272: i32, in_$i273: i32, in_$i274: i32, in_$i275: i1, in_$i276: i32, in_$i277: i32, in_$i278: i32, in_$i279: i32, in_$i280: i1, in_$i282: i32, in_$i283: i1, in_$i285: i32, in_$i286: i1, in_$i287: i32, in_$i288: i32, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i1, in_$i295: i32, in_$i296: i32, in_$i297: i32, in_$i298: i32, in_$i299: i1, in_$i300: i32, in_$i301: i32, in_$i302: i32, in_$i303: i32, in_$i304: i1, in_$i305: i32, in_$i306: i1, in_$i307: i1, in_$i308: i1, in_$i309: i32, in_$i310: i1, in_$i311: i32, in_$i312: i1, in_$i313: i32, in_$i314: i1, in_$i315: i32, in_$i316: i32, in_$i317: i1, in_$i318: i32, in_$i319: i1, in_vslice_dummy_var_62: i32, in_vslice_dummy_var_63: i32, in_vslice_dummy_var_64: i32, in_vslice_dummy_var_65: i32, in_vslice_dummy_var_66: i32, in_vslice_dummy_var_67: i32, in_vslice_dummy_var_68: i32, in_vslice_dummy_var_69: i32, in_vslice_dummy_var_70: i32, in_vslice_dummy_var_71: i32, in_vslice_dummy_var_72: i32, in_vslice_dummy_var_73: i32) returns (out_$i127: i32, out_$i128: i1, out_$i129: i1, out_$i130: i1, out_$i131: i32, out_$i132: i1, out_$i133: i32, out_$i134: i1, out_$i135: i1, out_$i136: i1, out_$i137: i1, out_$i138: i1, out_$i139: i1, out_$i140: i1, out_$i141: i1, out_$i142: i1, out_$i143: i1, out_$i144: i1, out_$i145: i1, out_$i146: i1, out_$i147: i1, out_$i148: i1, out_$i149: i1, out_$i150: i1, out_$i151: i32, out_$i152: i1, out_$i153: i32, out_$i154: i32, out_$i155: i32, out_$i157: i32, out_$i158: i1, out_$i159: i32, out_$i160: i32, out_$i161: i32, out_$i163: i32, out_$i164: i1, out_$i165: i32, out_$i166: i32, out_$i167: i32, out_$i168: i32, out_$i170: i32, out_$i171: i1, out_$i172: i32, out_$i173: i32, out_$i174: i32, out_$i175: i32, out_$i177: i32, out_$i178: i1, out_$i179: i32, out_$i180: i32, out_$i181: i32, out_$i182: i32, out_$i183: i1, out_$i184: i32, out_$i185: i32, out_$i186: i32, out_$i187: i1, out_$i188: i32, out_$i189: i32, out_$i190: i32, out_$i191: i32, out_$i192: i1, out_$i193: i32, out_$i194: i32, out_$i195: i32, out_$i196: i32, out_$i197: i1, out_$i198: i32, out_$i199: i32, out_$i201: i32, out_$i202: i1, out_$i203: i32, out_$i204: i32, out_$i206: i32, out_$i207: i1, out_$i208: i32, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i1, out_$i213: i32, out_$i214: i32, out_$i215: i32, out_$i216: i32, out_$i217: i1, out_$i218: i32, out_$i219: i32, out_$i220: i32, out_$i221: i32, out_$i223: i32, out_$i224: i1, out_$i225: i32, out_$i226: i32, out_$i227: i32, out_$i228: i32, out_$i230: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i234: i1, out_$i235: i32, out_$i236: i32, out_$i237: i1, out_$i238: i32, out_$i239: i32, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i248: i32, out_$i249: i1, out_$i250: i32, out_$i251: i32, out_$i252: i32, out_$i254: i32, out_$i255: i1, out_$i256: i32, out_$i257: i32, out_$i258: i1, out_$i259: i32, out_$i260: i32, out_$i261: i32, out_$i262: i32, out_$i263: i32, out_$i264: i1, out_$i265: i32, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i1, out_$i271: i32, out_$i272: i32, out_$i273: i32, out_$i274: i32, out_$i275: i1, out_$i276: i32, out_$i277: i32, out_$i278: i32, out_$i279: i32, out_$i280: i1, out_$i282: i32, out_$i283: i1, out_$i285: i32, out_$i286: i1, out_$i287: i32, out_$i288: i32, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i1, out_$i295: i32, out_$i296: i32, out_$i297: i32, out_$i298: i32, out_$i299: i1, out_$i300: i32, out_$i301: i32, out_$i302: i32, out_$i303: i32, out_$i304: i1, out_$i305: i32, out_$i306: i1, out_$i307: i1, out_$i308: i1, out_$i309: i32, out_$i310: i1, out_$i311: i32, out_$i312: i1, out_$i313: i32, out_$i314: i1, out_$i315: i32, out_$i316: i32, out_$i317: i1, out_$i318: i32, out_$i319: i1, out_vslice_dummy_var_62: i32, out_vslice_dummy_var_63: i32, out_vslice_dummy_var_64: i32, out_vslice_dummy_var_65: i32, out_vslice_dummy_var_66: i32, out_vslice_dummy_var_67: i32, out_vslice_dummy_var_68: i32, out_vslice_dummy_var_69: i32, out_vslice_dummy_var_70: i32, out_vslice_dummy_var_71: i32, out_vslice_dummy_var_72: i32, out_vslice_dummy_var_73: i32)
{

  entry:
    out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i185, out_$i186, out_$i187, out_$i188, out_$i189, out_$i190, out_$i191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i201, out_$i202, out_$i203, out_$i204, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$i218, out_$i219, out_$i220, out_$i221, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i248, out_$i249, out_$i250, out_$i251, out_$i252, out_$i254, out_$i255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$i278, out_$i279, out_$i280, out_$i282, out_$i283, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i301, out_$i302, out_$i303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$i310, out_$i311, out_$i312, out_$i313, out_$i314, out_$i315, out_$i316, out_$i317, out_$i318, out_$i319, out_vslice_dummy_var_62, out_vslice_dummy_var_63, out_vslice_dummy_var_64, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_69, out_vslice_dummy_var_70, out_vslice_dummy_var_71, out_vslice_dummy_var_72, out_vslice_dummy_var_73 := in_$i127, in_$i128, in_$i129, in_$i130, in_$i131, in_$i132, in_$i133, in_$i134, in_$i135, in_$i136, in_$i137, in_$i138, in_$i139, in_$i140, in_$i141, in_$i142, in_$i143, in_$i144, in_$i145, in_$i146, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i152, in_$i153, in_$i154, in_$i155, in_$i157, in_$i158, in_$i159, in_$i160, in_$i161, in_$i163, in_$i164, in_$i165, in_$i166, in_$i167, in_$i168, in_$i170, in_$i171, in_$i172, in_$i173, in_$i174, in_$i175, in_$i177, in_$i178, in_$i179, in_$i180, in_$i181, in_$i182, in_$i183, in_$i184, in_$i185, in_$i186, in_$i187, in_$i188, in_$i189, in_$i190, in_$i191, in_$i192, in_$i193, in_$i194, in_$i195, in_$i196, in_$i197, in_$i198, in_$i199, in_$i201, in_$i202, in_$i203, in_$i204, in_$i206, in_$i207, in_$i208, in_$i209, in_$i210, in_$i211, in_$i212, in_$i213, in_$i214, in_$i215, in_$i216, in_$i217, in_$i218, in_$i219, in_$i220, in_$i221, in_$i223, in_$i224, in_$i225, in_$i226, in_$i227, in_$i228, in_$i230, in_$i231, in_$i232, in_$i233, in_$i234, in_$i235, in_$i236, in_$i237, in_$i238, in_$i239, in_$i240, in_$i241, in_$i242, in_$i243, in_$i244, in_$i245, in_$i246, in_$i248, in_$i249, in_$i250, in_$i251, in_$i252, in_$i254, in_$i255, in_$i256, in_$i257, in_$i258, in_$i259, in_$i260, in_$i261, in_$i262, in_$i263, in_$i264, in_$i265, in_$i266, in_$i267, in_$i268, in_$i269, in_$i270, in_$i271, in_$i272, in_$i273, in_$i274, in_$i275, in_$i276, in_$i277, in_$i278, in_$i279, in_$i280, in_$i282, in_$i283, in_$i285, in_$i286, in_$i287, in_$i288, in_$i289, in_$i290, in_$i291, in_$i292, in_$i293, in_$i294, in_$i295, in_$i296, in_$i297, in_$i298, in_$i299, in_$i300, in_$i301, in_$i302, in_$i303, in_$i304, in_$i305, in_$i306, in_$i307, in_$i308, in_$i309, in_$i310, in_$i311, in_$i312, in_$i313, in_$i314, in_$i315, in_$i316, in_$i317, in_$i318, in_$i319, in_vslice_dummy_var_62, in_vslice_dummy_var_63, in_vslice_dummy_var_64, in_vslice_dummy_var_65, in_vslice_dummy_var_66, in_vslice_dummy_var_67, in_vslice_dummy_var_68, in_vslice_dummy_var_69, in_vslice_dummy_var_70, in_vslice_dummy_var_71, in_vslice_dummy_var_72, in_vslice_dummy_var_73;
    goto $bb1, exit;

  $bb1:
    assume {:verifier.code 1} true;
    call {:si_unique_call 412} out_$i127 := __VERIFIER_nondet_int();
    call {:si_unique_call 413} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i127);
    call {:si_unique_call 414} {:cexpr "tmp___3"} boogie_si_record_i32(out_$i127);
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb145:
    assume {:verifier.code 0} true;
    goto $bb145_dummy;

  $bb177:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb175:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb11:
    assume !(out_$i132 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb54:
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb143:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb141:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb135:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb129:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb123:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb117:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb111:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb108:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb102:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb96:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb90:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb84:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb72:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb66:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb60:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb53:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb52:
    assume !(out_$i158 == 1);
    assume {:verifier.code 0} true;
    goto $bb53;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    goto $bb53;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 421} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2466;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    call {:si_unique_call 420} out_vslice_dummy_var_63 := opl3_alloc_voice(out_$i159, out_$i160, out_$i161, in_$p41);
    goto corral_source_split_2465;

  corral_source_split_2463:
    assume {:verifier.code 0} true;
    out_$i161 := $load.i32($M.8, in_$p6);
    goto corral_source_split_2464;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    out_$i160 := $load.i32($M.8, in_$p20);
    goto corral_source_split_2463;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    out_$i159 := $load.i32($M.8, in_$p29);
    goto corral_source_split_2462;

  $bb51:
    assume out_$i158 == 1;
    goto corral_source_split_2461;

  corral_source_split_2459:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    out_$i158 := $eq.i32(out_$i157, 2);
    goto corral_source_split_2459;

  $bb50:
    assume {:verifier.code 0} true;
    out_$i157 := $M.9;
    goto corral_source_split_2458;

  $bb49:
    assume !(out_$i152 == 1);
    assume {:verifier.code 0} true;
    goto $bb50;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    goto $bb50;

  corral_source_split_2455:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 419} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2456;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    call {:si_unique_call 418} out_vslice_dummy_var_62 := opl3_alloc_voice(out_$i153, out_$i154, out_$i155, in_$p41);
    goto corral_source_split_2455;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    out_$i155 := $load.i32($M.8, in_$p6);
    goto corral_source_split_2454;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    out_$i154 := $load.i32($M.8, in_$p20);
    goto corral_source_split_2453;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    out_$i153 := $load.i32($M.8, in_$p29);
    goto corral_source_split_2452;

  $bb48:
    assume out_$i152 == 1;
    goto corral_source_split_2451;

  corral_source_split_2449:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb48, $bb49;

  corral_source_split_2448:
    assume {:verifier.code 0} true;
    out_$i152 := $eq.i32(out_$i151, 1);
    goto corral_source_split_2449;

  corral_source_split_2447:
    assume {:verifier.code 0} true;
    out_$i151 := $M.9;
    goto corral_source_split_2448;

  $bb46:
    assume out_$i150 == 1;
    goto corral_source_split_2447;

  $bb44:
    assume out_$i149 == 1;
    assume {:verifier.code 0} true;
    out_$i150 := $eq.i32(out_$i133, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb46, $bb47;

  $bb40:
    assume out_$i147 == 1;
    assume {:verifier.code 0} true;
    out_$i149 := $slt.i32(out_$i133, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb44, $bb45;

  $bb32:
    assume out_$i143 == 1;
    assume {:verifier.code 0} true;
    out_$i147 := $slt.i32(out_$i133, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb40, $bb41;

  $bb13:
    assume out_$i134 == 1;
    assume {:verifier.code 0} true;
    out_$i143 := $slt.i32(out_$i133, 4);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i134 := $slt.i32(out_$i133, 8);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  corral_source_split_2385:
    assume {:verifier.code 1} true;
    call {:si_unique_call 415} out_$i133 := __VERIFIER_nondet_int();
    call {:si_unique_call 416} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i133);
    call {:si_unique_call 417} {:cexpr "tmp___4"} boogie_si_record_i32(out_$i133);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb10:
    assume out_$i132 == 1;
    goto corral_source_split_2385;

  corral_source_split_2383:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  corral_source_split_2382:
    assume {:verifier.code 0} true;
    out_$i132 := $ne.i32(out_$i131, 0);
    goto corral_source_split_2383;

  corral_source_split_2381:
    assume {:verifier.code 0} true;
    out_$i131 := $M.9;
    goto corral_source_split_2382;

  $bb8:
    assume out_$i130 == 1;
    goto corral_source_split_2381;

  $bb3:
    assume out_$i128 == 1;
    assume {:verifier.code 0} true;
    out_$i130 := $eq.i32(out_$i127, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i128 := $slt.i32(out_$i127, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb59:
    assume !(out_$i171 == 1);
    assume {:verifier.code 0} true;
    goto $bb60;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    goto $bb60;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 425} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2485;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    call {:si_unique_call 424} out_vslice_dummy_var_65 := opl3_kill_note(out_$i172, out_$i173, out_$i174, out_$i175);
    goto corral_source_split_2484;

  corral_source_split_2482:
    assume {:verifier.code 0} true;
    out_$i175 := $load.i32($M.8, in_$p28);
    goto corral_source_split_2483;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    out_$i174 := $load.i32($M.8, in_$p4);
    goto corral_source_split_2482;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    out_$i173 := $load.i32($M.8, in_$p3);
    goto corral_source_split_2481;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    out_$i172 := $load.i32($M.8, in_$p24);
    goto corral_source_split_2480;

  $bb58:
    assume out_$i171 == 1;
    goto corral_source_split_2479;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb58, $bb59;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    out_$i171 := $eq.i32(out_$i170, 2);
    goto corral_source_split_2477;

  $bb57:
    assume {:verifier.code 0} true;
    out_$i170 := $M.9;
    goto corral_source_split_2476;

  $bb56:
    assume !(out_$i164 == 1);
    assume {:verifier.code 0} true;
    goto $bb57;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    goto $bb57;

  corral_source_split_2473:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 423} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2474;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    call {:si_unique_call 422} out_vslice_dummy_var_64 := opl3_kill_note(out_$i165, out_$i166, out_$i167, out_$i168);
    goto corral_source_split_2473;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    out_$i168 := $load.i32($M.8, in_$p28);
    goto corral_source_split_2472;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    out_$i167 := $load.i32($M.8, in_$p4);
    goto corral_source_split_2471;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    out_$i166 := $load.i32($M.8, in_$p3);
    goto corral_source_split_2470;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    out_$i165 := $load.i32($M.8, in_$p24);
    goto corral_source_split_2469;

  $bb55:
    assume out_$i164 == 1;
    goto corral_source_split_2468;

  corral_source_split_2445:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55, $bb56;

  corral_source_split_2444:
    assume {:verifier.code 0} true;
    out_$i164 := $eq.i32(out_$i163, 1);
    goto corral_source_split_2445;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    out_$i163 := $M.9;
    goto corral_source_split_2444;

  $bb45:
    assume !(out_$i149 == 1);
    goto corral_source_split_2443;

  $bb62:
    assume !(out_$i178 == 1);
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb65:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb64:
    assume !(out_$i183 == 1);
    assume {:verifier.code 0} true;
    goto $bb65;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    goto $bb65;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    $M.10 := out_$i185;
    call {:si_unique_call 429} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i185);
    goto corral_source_split_2499;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    out_$i185 := $add.i32(out_$i184, 1);
    goto corral_source_split_2498;

  corral_source_split_2496:
    assume {:verifier.code 0} true;
    out_$i184 := $M.10;
    goto corral_source_split_2497;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 428} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2496;

  $bb63:
    assume out_$i183 == 1;
    goto corral_source_split_2495;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb63, $bb64;

  corral_source_split_2492:
    assume {:verifier.code 0} true;
    out_$i183 := $eq.i32(out_$i182, 0);
    goto corral_source_split_2493;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    out_$i182 := $M.12;
    goto corral_source_split_2492;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    $M.12 := out_$i181;
    call {:si_unique_call 427} {:cexpr "ldv_retval_0"} boogie_si_record_i32(out_$i181);
    goto corral_source_split_2491;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    call {:si_unique_call 426} out_$i181 := opl3_open(out_$i179, out_$i180);
    goto corral_source_split_2490;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    out_$i180 := $load.i32($M.8, in_$p21);
    goto corral_source_split_2489;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    out_$i179 := $load.i32($M.8, in_$p13);
    goto corral_source_split_2488;

  $bb61:
    assume out_$i178 == 1;
    goto corral_source_split_2487;

  corral_source_split_2437:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61, $bb62;

  corral_source_split_2436:
    assume {:verifier.code 0} true;
    out_$i178 := $eq.i32(out_$i177, 1);
    goto corral_source_split_2437;

  corral_source_split_2435:
    assume {:verifier.code 0} true;
    out_$i177 := $M.9;
    goto corral_source_split_2436;

  $bb42:
    assume out_$i148 == 1;
    goto corral_source_split_2435;

  $bb41:
    assume !(out_$i147 == 1);
    assume {:verifier.code 0} true;
    out_$i148 := $slt.i32(out_$i133, 3);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb42, $bb43;

  $bb71:
    assume !(out_$i192 == 1);
    assume {:verifier.code 0} true;
    goto $bb72;

  corral_source_split_2516:
    assume {:verifier.code 0} true;
    goto $bb72;

  corral_source_split_2515:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 433} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2516;

  corral_source_split_2514:
    assume {:verifier.code 0} true;
    call {:si_unique_call 432} opl3_bender(out_$i193, out_$i194, out_$i195);
    goto corral_source_split_2515;

  corral_source_split_2513:
    assume {:verifier.code 0} true;
    out_$i195 := $load.i32($M.8, in_$p27);
    goto corral_source_split_2514;

  corral_source_split_2512:
    assume {:verifier.code 0} true;
    out_$i194 := $load.i32($M.8, in_$p8);
    goto corral_source_split_2513;

  corral_source_split_2511:
    assume {:verifier.code 0} true;
    out_$i193 := $load.i32($M.8, in_$p11);
    goto corral_source_split_2512;

  $bb70:
    assume out_$i192 == 1;
    goto corral_source_split_2511;

  corral_source_split_2509:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb70, $bb71;

  corral_source_split_2508:
    assume {:verifier.code 0} true;
    out_$i192 := $eq.i32(out_$i191, 2);
    goto corral_source_split_2509;

  $bb69:
    assume {:verifier.code 0} true;
    out_$i191 := $M.9;
    goto corral_source_split_2508;

  $bb68:
    assume !(out_$i187 == 1);
    assume {:verifier.code 0} true;
    goto $bb69;

  corral_source_split_2506:
    assume {:verifier.code 0} true;
    goto $bb69;

  corral_source_split_2505:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 431} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2506;

  corral_source_split_2504:
    assume {:verifier.code 0} true;
    call {:si_unique_call 430} opl3_bender(out_$i188, out_$i189, out_$i190);
    goto corral_source_split_2505;

  corral_source_split_2503:
    assume {:verifier.code 0} true;
    out_$i190 := $load.i32($M.8, in_$p27);
    goto corral_source_split_2504;

  corral_source_split_2502:
    assume {:verifier.code 0} true;
    out_$i189 := $load.i32($M.8, in_$p8);
    goto corral_source_split_2503;

  corral_source_split_2501:
    assume {:verifier.code 0} true;
    out_$i188 := $load.i32($M.8, in_$p11);
    goto corral_source_split_2502;

  $bb67:
    assume out_$i187 == 1;
    goto corral_source_split_2501;

  corral_source_split_2441:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb67, $bb68;

  corral_source_split_2440:
    assume {:verifier.code 0} true;
    out_$i187 := $eq.i32(out_$i186, 1);
    goto corral_source_split_2441;

  corral_source_split_2439:
    assume {:verifier.code 0} true;
    out_$i186 := $M.9;
    goto corral_source_split_2440;

  $bb43:
    assume !(out_$i148 == 1);
    goto corral_source_split_2439;

  $bb77:
    assume !(out_$i202 == 1);
    assume {:verifier.code 0} true;
    goto $bb78;

  corral_source_split_2531:
    assume {:verifier.code 0} true;
    goto $bb78;

  corral_source_split_2530:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 437} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2531;

  SeqInstr_39:
    goto corral_source_split_2530;

  SeqInstr_38:
    assume assertsPassed;
    goto SeqInstr_39;

  corral_source_split_2529:
    assume {:verifier.code 0} true;
    call {:si_unique_call 436} out_vslice_dummy_var_67 := opl3_ioctl(out_$i203, out_$i204, in_$p42);
    goto SeqInstr_38;

  corral_source_split_2528:
    assume {:verifier.code 0} true;
    out_$i204 := $load.i32($M.8, in_$p17);
    goto corral_source_split_2529;

  corral_source_split_2527:
    assume {:verifier.code 0} true;
    out_$i203 := $load.i32($M.8, in_$p2);
    goto corral_source_split_2528;

  $bb76:
    assume out_$i202 == 1;
    goto corral_source_split_2527;

  corral_source_split_2525:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76, $bb77;

  corral_source_split_2524:
    assume {:verifier.code 0} true;
    out_$i202 := $eq.i32(out_$i201, 2);
    goto corral_source_split_2525;

  $bb75:
    assume {:verifier.code 0} true;
    out_$i201 := $M.9;
    goto corral_source_split_2524;

  $bb74:
    assume !(out_$i197 == 1);
    assume {:verifier.code 0} true;
    goto $bb75;

  corral_source_split_2522:
    assume {:verifier.code 0} true;
    goto $bb75;

  corral_source_split_2521:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 435} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2522;

  SeqInstr_36:
    goto corral_source_split_2521;

  SeqInstr_35:
    assume assertsPassed;
    goto SeqInstr_36;

  corral_source_split_2520:
    assume {:verifier.code 0} true;
    call {:si_unique_call 434} out_vslice_dummy_var_66 := opl3_ioctl(out_$i198, out_$i199, in_$p42);
    goto SeqInstr_35;

  corral_source_split_2519:
    assume {:verifier.code 0} true;
    out_$i199 := $load.i32($M.8, in_$p17);
    goto corral_source_split_2520;

  corral_source_split_2518:
    assume {:verifier.code 0} true;
    out_$i198 := $load.i32($M.8, in_$p2);
    goto corral_source_split_2519;

  $bb73:
    assume out_$i197 == 1;
    goto corral_source_split_2518;

  corral_source_split_2429:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb73, $bb74;

  corral_source_split_2428:
    assume {:verifier.code 0} true;
    out_$i197 := $eq.i32(out_$i196, 1);
    goto corral_source_split_2429;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    out_$i196 := $M.9;
    goto corral_source_split_2428;

  $bb38:
    assume out_$i146 == 1;
    goto corral_source_split_2427;

  $bb34:
    assume out_$i144 == 1;
    assume {:verifier.code 0} true;
    out_$i146 := $slt.i32(out_$i133, 5);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb33:
    assume !(out_$i143 == 1);
    assume {:verifier.code 0} true;
    out_$i144 := $slt.i32(out_$i133, 6);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb83:
    assume !(out_$i212 == 1);
    assume {:verifier.code 0} true;
    goto $bb84;

  corral_source_split_2548:
    assume {:verifier.code 0} true;
    goto $bb84;

  corral_source_split_2547:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 441} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2548;

  corral_source_split_2546:
    assume {:verifier.code 0} true;
    call {:si_unique_call 440} opl3_setup_voice(out_$i213, out_$i214, out_$i215);
    goto corral_source_split_2547;

  corral_source_split_2545:
    assume {:verifier.code 0} true;
    out_$i215 := $load.i32($M.8, in_$p33);
    goto corral_source_split_2546;

  corral_source_split_2544:
    assume {:verifier.code 0} true;
    out_$i214 := $load.i32($M.8, in_$p23);
    goto corral_source_split_2545;

  corral_source_split_2543:
    assume {:verifier.code 0} true;
    out_$i213 := $load.i32($M.8, in_$p9);
    goto corral_source_split_2544;

  $bb82:
    assume out_$i212 == 1;
    goto corral_source_split_2543;

  corral_source_split_2541:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  corral_source_split_2540:
    assume {:verifier.code 0} true;
    out_$i212 := $eq.i32(out_$i211, 2);
    goto corral_source_split_2541;

  $bb81:
    assume {:verifier.code 0} true;
    out_$i211 := $M.9;
    goto corral_source_split_2540;

  $bb80:
    assume !(out_$i207 == 1);
    assume {:verifier.code 0} true;
    goto $bb81;

  corral_source_split_2538:
    assume {:verifier.code 0} true;
    goto $bb81;

  corral_source_split_2537:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 439} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2538;

  corral_source_split_2536:
    assume {:verifier.code 0} true;
    call {:si_unique_call 438} opl3_setup_voice(out_$i208, out_$i209, out_$i210);
    goto corral_source_split_2537;

  corral_source_split_2535:
    assume {:verifier.code 0} true;
    out_$i210 := $load.i32($M.8, in_$p33);
    goto corral_source_split_2536;

  corral_source_split_2534:
    assume {:verifier.code 0} true;
    out_$i209 := $load.i32($M.8, in_$p23);
    goto corral_source_split_2535;

  corral_source_split_2533:
    assume {:verifier.code 0} true;
    out_$i208 := $load.i32($M.8, in_$p9);
    goto corral_source_split_2534;

  $bb79:
    assume out_$i207 == 1;
    goto corral_source_split_2533;

  corral_source_split_2433:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb79, $bb80;

  corral_source_split_2432:
    assume {:verifier.code 0} true;
    out_$i207 := $eq.i32(out_$i206, 1);
    goto corral_source_split_2433;

  corral_source_split_2431:
    assume {:verifier.code 0} true;
    out_$i206 := $M.9;
    goto corral_source_split_2432;

  $bb39:
    assume !(out_$i146 == 1);
    goto corral_source_split_2431;

  $bb89:
    assume !(out_$i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_2567:
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_2566:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 445} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2567;

  corral_source_split_2565:
    assume {:verifier.code 0} true;
    call {:si_unique_call 444} out_vslice_dummy_var_69 := opl3_start_note(out_$i225, out_$i226, out_$i227, out_$i228);
    goto corral_source_split_2566;

  corral_source_split_2564:
    assume {:verifier.code 0} true;
    out_$i228 := $load.i32($M.8, in_$p36);
    goto corral_source_split_2565;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    out_$i227 := $load.i32($M.8, in_$p31);
    goto corral_source_split_2564;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    out_$i226 := $load.i32($M.8, in_$p18);
    goto corral_source_split_2563;

  corral_source_split_2561:
    assume {:verifier.code 0} true;
    out_$i225 := $load.i32($M.8, in_$p30);
    goto corral_source_split_2562;

  $bb88:
    assume out_$i224 == 1;
    goto corral_source_split_2561;

  corral_source_split_2559:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    out_$i224 := $eq.i32(out_$i223, 2);
    goto corral_source_split_2559;

  $bb87:
    assume {:verifier.code 0} true;
    out_$i223 := $M.9;
    goto corral_source_split_2558;

  $bb86:
    assume !(out_$i217 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    goto $bb87;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 443} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2556;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    call {:si_unique_call 442} out_vslice_dummy_var_68 := opl3_start_note(out_$i218, out_$i219, out_$i220, out_$i221);
    goto corral_source_split_2555;

  corral_source_split_2553:
    assume {:verifier.code 0} true;
    out_$i221 := $load.i32($M.8, in_$p36);
    goto corral_source_split_2554;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    out_$i220 := $load.i32($M.8, in_$p31);
    goto corral_source_split_2553;

  corral_source_split_2551:
    assume {:verifier.code 0} true;
    out_$i219 := $load.i32($M.8, in_$p18);
    goto corral_source_split_2552;

  corral_source_split_2550:
    assume {:verifier.code 0} true;
    out_$i218 := $load.i32($M.8, in_$p30);
    goto corral_source_split_2551;

  $bb85:
    assume out_$i217 == 1;
    goto corral_source_split_2550;

  corral_source_split_2421:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb85, $bb86;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    out_$i217 := $eq.i32(out_$i216, 1);
    goto corral_source_split_2421;

  corral_source_split_2419:
    assume {:verifier.code 0} true;
    out_$i216 := $M.9;
    goto corral_source_split_2420;

  $bb36:
    assume out_$i145 == 1;
    goto corral_source_split_2419;

  $bb35:
    assume !(out_$i144 == 1);
    assume {:verifier.code 0} true;
    out_$i145 := $slt.i32(out_$i133, 7);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb95:
    assume !(out_$i234 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  corral_source_split_2580:
    assume {:verifier.code 0} true;
    goto $bb96;

  corral_source_split_2579:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 449} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2580;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    call {:si_unique_call 448} opl3_reset(out_$i235);
    goto corral_source_split_2579;

  corral_source_split_2577:
    assume {:verifier.code 0} true;
    out_$i235 := $load.i32($M.8, in_$p10);
    goto corral_source_split_2578;

  $bb94:
    assume out_$i234 == 1;
    goto corral_source_split_2577;

  corral_source_split_2575:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb94, $bb95;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    out_$i234 := $eq.i32(out_$i233, 2);
    goto corral_source_split_2575;

  $bb93:
    assume {:verifier.code 0} true;
    out_$i233 := $M.9;
    goto corral_source_split_2574;

  $bb92:
    assume !(out_$i231 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  corral_source_split_2572:
    assume {:verifier.code 0} true;
    goto $bb93;

  corral_source_split_2571:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 447} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2572;

  corral_source_split_2570:
    assume {:verifier.code 0} true;
    call {:si_unique_call 446} opl3_reset(out_$i232);
    goto corral_source_split_2571;

  corral_source_split_2569:
    assume {:verifier.code 0} true;
    out_$i232 := $load.i32($M.8, in_$p10);
    goto corral_source_split_2570;

  $bb91:
    assume out_$i231 == 1;
    goto corral_source_split_2569;

  corral_source_split_2425:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb91, $bb92;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    out_$i231 := $eq.i32(out_$i230, 1);
    goto corral_source_split_2425;

  corral_source_split_2423:
    assume {:verifier.code 0} true;
    out_$i230 := $M.9;
    goto corral_source_split_2424;

  $bb37:
    assume !(out_$i145 == 1);
    goto corral_source_split_2423;

  $bb101:
    assume !(out_$i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb102;

  corral_source_split_2593:
    assume {:verifier.code 0} true;
    goto $bb102;

  corral_source_split_2592:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 453} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2593;

  corral_source_split_2591:
    assume {:verifier.code 0} true;
    call {:si_unique_call 452} opl3_hw_control(out_$i241, in_$p39);
    goto corral_source_split_2592;

  corral_source_split_2590:
    assume {:verifier.code 0} true;
    out_$i241 := $load.i32($M.8, in_$p37);
    goto corral_source_split_2591;

  $bb100:
    assume out_$i240 == 1;
    goto corral_source_split_2590;

  corral_source_split_2588:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb100, $bb101;

  corral_source_split_2587:
    assume {:verifier.code 0} true;
    out_$i240 := $eq.i32(out_$i239, 2);
    goto corral_source_split_2588;

  $bb99:
    assume {:verifier.code 0} true;
    out_$i239 := $M.9;
    goto corral_source_split_2587;

  $bb98:
    assume !(out_$i237 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    goto $bb99;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 451} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2585;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    call {:si_unique_call 450} opl3_hw_control(out_$i238, in_$p39);
    goto corral_source_split_2584;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    out_$i238 := $load.i32($M.8, in_$p37);
    goto corral_source_split_2583;

  $bb97:
    assume out_$i237 == 1;
    goto corral_source_split_2582;

  corral_source_split_2413:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  corral_source_split_2412:
    assume {:verifier.code 0} true;
    out_$i237 := $eq.i32(out_$i236, 1);
    goto corral_source_split_2413;

  corral_source_split_2411:
    assume {:verifier.code 0} true;
    out_$i236 := $M.9;
    goto corral_source_split_2412;

  $bb30:
    assume out_$i142 == 1;
    goto corral_source_split_2411;

  $bb26:
    assume out_$i140 == 1;
    assume {:verifier.code 0} true;
    out_$i142 := $slt.i32(out_$i133, 9);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb30, $bb31;

  $bb15:
    assume out_$i135 == 1;
    assume {:verifier.code 0} true;
    out_$i140 := $slt.i32(out_$i133, 10);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26, $bb27;

  $bb14:
    assume !(out_$i134 == 1);
    assume {:verifier.code 0} true;
    out_$i135 := $slt.i32(out_$i133, 12);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  $bb107:
    assume !(out_$i249 == 1);
    assume {:verifier.code 0} true;
    goto $bb108;

  corral_source_split_2610:
    assume {:verifier.code 0} true;
    goto $bb108;

  corral_source_split_2609:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 457} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2610;

  corral_source_split_2608:
    assume {:verifier.code 0} true;
    call {:si_unique_call 456} out_vslice_dummy_var_71 := opl3_set_instr(out_$i250, out_$i251, out_$i252);
    goto corral_source_split_2609;

  corral_source_split_2607:
    assume {:verifier.code 0} true;
    out_$i252 := $load.i32($M.8, in_$p22);
    goto corral_source_split_2608;

  corral_source_split_2606:
    assume {:verifier.code 0} true;
    out_$i251 := $load.i32($M.8, in_$p34);
    goto corral_source_split_2607;

  corral_source_split_2605:
    assume {:verifier.code 0} true;
    out_$i250 := $load.i32($M.8, in_$p38);
    goto corral_source_split_2606;

  $bb106:
    assume out_$i249 == 1;
    goto corral_source_split_2605;

  corral_source_split_2603:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb106, $bb107;

  corral_source_split_2602:
    assume {:verifier.code 0} true;
    out_$i249 := $eq.i32(out_$i248, 2);
    goto corral_source_split_2603;

  $bb105:
    assume {:verifier.code 0} true;
    out_$i248 := $M.9;
    goto corral_source_split_2602;

  $bb104:
    assume !(out_$i243 == 1);
    assume {:verifier.code 0} true;
    goto $bb105;

  corral_source_split_2600:
    assume {:verifier.code 0} true;
    goto $bb105;

  corral_source_split_2599:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 455} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2600;

  corral_source_split_2598:
    assume {:verifier.code 0} true;
    call {:si_unique_call 454} out_vslice_dummy_var_70 := opl3_set_instr(out_$i244, out_$i245, out_$i246);
    goto corral_source_split_2599;

  corral_source_split_2597:
    assume {:verifier.code 0} true;
    out_$i246 := $load.i32($M.8, in_$p22);
    goto corral_source_split_2598;

  corral_source_split_2596:
    assume {:verifier.code 0} true;
    out_$i245 := $load.i32($M.8, in_$p34);
    goto corral_source_split_2597;

  corral_source_split_2595:
    assume {:verifier.code 0} true;
    out_$i244 := $load.i32($M.8, in_$p38);
    goto corral_source_split_2596;

  $bb103:
    assume out_$i243 == 1;
    goto corral_source_split_2595;

  corral_source_split_2417:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb103, $bb104;

  corral_source_split_2416:
    assume {:verifier.code 0} true;
    out_$i243 := $eq.i32(out_$i242, 1);
    goto corral_source_split_2417;

  corral_source_split_2415:
    assume {:verifier.code 0} true;
    out_$i242 := $M.9;
    goto corral_source_split_2416;

  $bb31:
    assume !(out_$i142 == 1);
    goto corral_source_split_2415;

  $bb110:
    assume !(out_$i255 == 1);
    assume {:verifier.code 0} true;
    goto $bb111;

  corral_source_split_2615:
    assume {:verifier.code 0} true;
    goto $bb111;

  corral_source_split_2614:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 459} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2615;

  corral_source_split_2613:
    assume {:verifier.code 0} true;
    call {:si_unique_call 458} opl3_close(out_$i256);
    goto corral_source_split_2614;

  corral_source_split_2612:
    assume {:verifier.code 0} true;
    out_$i256 := $load.i32($M.8, in_$p0);
    goto corral_source_split_2613;

  $bb109:
    assume out_$i255 == 1;
    goto corral_source_split_2612;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  corral_source_split_2404:
    assume {:verifier.code 0} true;
    out_$i255 := $eq.i32(out_$i254, 2);
    goto corral_source_split_2405;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    out_$i254 := $M.9;
    goto corral_source_split_2404;

  $bb28:
    assume out_$i141 == 1;
    goto corral_source_split_2403;

  $bb27:
    assume !(out_$i140 == 1);
    assume {:verifier.code 0} true;
    out_$i141 := $slt.i32(out_$i133, 11);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb116:
    assume !(out_$i264 == 1);
    assume {:verifier.code 0} true;
    goto $bb117;

  corral_source_split_2634:
    assume {:verifier.code 0} true;
    goto $bb117;

  corral_source_split_2633:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 463} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2634;

  corral_source_split_2632:
    assume {:verifier.code 0} true;
    call {:si_unique_call 462} opl3_controller(out_$i265, out_$i266, out_$i267, out_$i268);
    goto corral_source_split_2633;

  corral_source_split_2631:
    assume {:verifier.code 0} true;
    out_$i268 := $load.i32($M.8, in_$p16);
    goto corral_source_split_2632;

  corral_source_split_2630:
    assume {:verifier.code 0} true;
    out_$i267 := $load.i32($M.8, in_$p14);
    goto corral_source_split_2631;

  corral_source_split_2629:
    assume {:verifier.code 0} true;
    out_$i266 := $load.i32($M.8, in_$p35);
    goto corral_source_split_2630;

  corral_source_split_2628:
    assume {:verifier.code 0} true;
    out_$i265 := $load.i32($M.8, in_$p32);
    goto corral_source_split_2629;

  $bb115:
    assume out_$i264 == 1;
    goto corral_source_split_2628;

  corral_source_split_2626:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb115, $bb116;

  corral_source_split_2625:
    assume {:verifier.code 0} true;
    out_$i264 := $eq.i32(out_$i263, 2);
    goto corral_source_split_2626;

  $bb114:
    assume {:verifier.code 0} true;
    out_$i263 := $M.9;
    goto corral_source_split_2625;

  $bb113:
    assume !(out_$i258 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  corral_source_split_2623:
    assume {:verifier.code 0} true;
    goto $bb114;

  corral_source_split_2622:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 461} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2623;

  corral_source_split_2621:
    assume {:verifier.code 0} true;
    call {:si_unique_call 460} opl3_controller(out_$i259, out_$i260, out_$i261, out_$i262);
    goto corral_source_split_2622;

  corral_source_split_2620:
    assume {:verifier.code 0} true;
    out_$i262 := $load.i32($M.8, in_$p16);
    goto corral_source_split_2621;

  corral_source_split_2619:
    assume {:verifier.code 0} true;
    out_$i261 := $load.i32($M.8, in_$p14);
    goto corral_source_split_2620;

  corral_source_split_2618:
    assume {:verifier.code 0} true;
    out_$i260 := $load.i32($M.8, in_$p35);
    goto corral_source_split_2619;

  corral_source_split_2617:
    assume {:verifier.code 0} true;
    out_$i259 := $load.i32($M.8, in_$p32);
    goto corral_source_split_2618;

  $bb112:
    assume out_$i258 == 1;
    goto corral_source_split_2617;

  corral_source_split_2409:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb112, $bb113;

  corral_source_split_2408:
    assume {:verifier.code 0} true;
    out_$i258 := $eq.i32(out_$i257, 1);
    goto corral_source_split_2409;

  corral_source_split_2407:
    assume {:verifier.code 0} true;
    out_$i257 := $M.9;
    goto corral_source_split_2408;

  $bb29:
    assume !(out_$i141 == 1);
    goto corral_source_split_2407;

  $bb122:
    assume !(out_$i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  corral_source_split_2651:
    assume {:verifier.code 0} true;
    goto $bb123;

  corral_source_split_2650:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 467} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2651;

  corral_source_split_2649:
    assume {:verifier.code 0} true;
    call {:si_unique_call 466} opl3_panning(out_$i276, out_$i277, out_$i278);
    goto corral_source_split_2650;

  corral_source_split_2648:
    assume {:verifier.code 0} true;
    out_$i278 := $load.i32($M.8, in_$p5);
    goto corral_source_split_2649;

  corral_source_split_2647:
    assume {:verifier.code 0} true;
    out_$i277 := $load.i32($M.8, in_$p26);
    goto corral_source_split_2648;

  corral_source_split_2646:
    assume {:verifier.code 0} true;
    out_$i276 := $load.i32($M.8, in_$p1);
    goto corral_source_split_2647;

  $bb121:
    assume out_$i275 == 1;
    goto corral_source_split_2646;

  corral_source_split_2644:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb121, $bb122;

  corral_source_split_2643:
    assume {:verifier.code 0} true;
    out_$i275 := $eq.i32(out_$i274, 2);
    goto corral_source_split_2644;

  $bb120:
    assume {:verifier.code 0} true;
    out_$i274 := $M.9;
    goto corral_source_split_2643;

  $bb119:
    assume !(out_$i270 == 1);
    assume {:verifier.code 0} true;
    goto $bb120;

  corral_source_split_2641:
    assume {:verifier.code 0} true;
    goto $bb120;

  corral_source_split_2640:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 465} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2641;

  corral_source_split_2639:
    assume {:verifier.code 0} true;
    call {:si_unique_call 464} opl3_panning(out_$i271, out_$i272, out_$i273);
    goto corral_source_split_2640;

  corral_source_split_2638:
    assume {:verifier.code 0} true;
    out_$i273 := $load.i32($M.8, in_$p5);
    goto corral_source_split_2639;

  corral_source_split_2637:
    assume {:verifier.code 0} true;
    out_$i272 := $load.i32($M.8, in_$p26);
    goto corral_source_split_2638;

  corral_source_split_2636:
    assume {:verifier.code 0} true;
    out_$i271 := $load.i32($M.8, in_$p1);
    goto corral_source_split_2637;

  $bb118:
    assume out_$i270 == 1;
    goto corral_source_split_2636;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb118, $bb119;

  corral_source_split_2396:
    assume {:verifier.code 0} true;
    out_$i270 := $eq.i32(out_$i269, 1);
    goto corral_source_split_2397;

  corral_source_split_2395:
    assume {:verifier.code 0} true;
    out_$i269 := $M.9;
    goto corral_source_split_2396;

  $bb24:
    assume out_$i139 == 1;
    goto corral_source_split_2395;

  $bb17:
    assume out_$i136 == 1;
    assume {:verifier.code 0} true;
    out_$i139 := $slt.i32(out_$i133, 13);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  $bb16:
    assume !(out_$i135 == 1);
    assume {:verifier.code 0} true;
    out_$i136 := $slt.i32(out_$i133, 14);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb128:
    assume !(out_$i283 == 1);
    assume {:verifier.code 0} true;
    goto $bb129;

  corral_source_split_2662:
    assume {:verifier.code 0} true;
    goto $bb129;

  corral_source_split_2661:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 471} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2662;

  SeqInstr_45:
    goto corral_source_split_2661;

  SeqInstr_44:
    assume assertsPassed;
    goto SeqInstr_45;

  corral_source_split_2660:
    assume {:verifier.code 0} true;
    call {:si_unique_call 470} out_vslice_dummy_var_73 := opl3_load_patch(in_$i50, in_$i106, in_$p43, in_$i76, in_$i103, in_$i73);
    goto SeqInstr_44;

  $bb127:
    assume out_$i283 == 1;
    goto corral_source_split_2660;

  corral_source_split_2658:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb127, $bb128;

  corral_source_split_2657:
    assume {:verifier.code 0} true;
    out_$i283 := $eq.i32(out_$i282, 2);
    goto corral_source_split_2658;

  $bb126:
    assume {:verifier.code 0} true;
    out_$i282 := $M.9;
    goto corral_source_split_2657;

  $bb125:
    assume !(out_$i280 == 1);
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_2655:
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_2654:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 469} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2655;

  SeqInstr_42:
    goto corral_source_split_2654;

  SeqInstr_41:
    assume assertsPassed;
    goto SeqInstr_42;

  corral_source_split_2653:
    assume {:verifier.code 0} true;
    call {:si_unique_call 468} out_vslice_dummy_var_72 := opl3_load_patch(in_$i50, in_$i106, in_$p43, in_$i76, in_$i103, in_$i73);
    goto SeqInstr_41;

  $bb124:
    assume out_$i280 == 1;
    goto corral_source_split_2653;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb124, $bb125;

  corral_source_split_2400:
    assume {:verifier.code 0} true;
    out_$i280 := $eq.i32(out_$i279, 1);
    goto corral_source_split_2401;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    out_$i279 := $M.9;
    goto corral_source_split_2400;

  $bb25:
    assume !(out_$i139 == 1);
    goto corral_source_split_2399;

  $bb134:
    assume !(out_$i290 == 1);
    assume {:verifier.code 0} true;
    goto $bb135;

  corral_source_split_2677:
    assume {:verifier.code 0} true;
    goto $bb135;

  corral_source_split_2676:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 475} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2677;

  corral_source_split_2675:
    assume {:verifier.code 0} true;
    call {:si_unique_call 474} opl3_volume_method(out_$i291, out_$i292);
    goto corral_source_split_2676;

  corral_source_split_2674:
    assume {:verifier.code 0} true;
    out_$i292 := $load.i32($M.8, in_$p15);
    goto corral_source_split_2675;

  corral_source_split_2673:
    assume {:verifier.code 0} true;
    out_$i291 := $load.i32($M.8, in_$p25);
    goto corral_source_split_2674;

  $bb133:
    assume out_$i290 == 1;
    goto corral_source_split_2673;

  corral_source_split_2671:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb133, $bb134;

  corral_source_split_2670:
    assume {:verifier.code 0} true;
    out_$i290 := $eq.i32(out_$i289, 2);
    goto corral_source_split_2671;

  $bb132:
    assume {:verifier.code 0} true;
    out_$i289 := $M.9;
    goto corral_source_split_2670;

  $bb131:
    assume !(out_$i286 == 1);
    assume {:verifier.code 0} true;
    goto $bb132;

  corral_source_split_2668:
    assume {:verifier.code 0} true;
    goto $bb132;

  corral_source_split_2667:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 473} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2668;

  corral_source_split_2666:
    assume {:verifier.code 0} true;
    call {:si_unique_call 472} opl3_volume_method(out_$i287, out_$i288);
    goto corral_source_split_2667;

  corral_source_split_2665:
    assume {:verifier.code 0} true;
    out_$i288 := $load.i32($M.8, in_$p15);
    goto corral_source_split_2666;

  corral_source_split_2664:
    assume {:verifier.code 0} true;
    out_$i287 := $load.i32($M.8, in_$p25);
    goto corral_source_split_2665;

  $bb130:
    assume out_$i286 == 1;
    goto corral_source_split_2664;

  corral_source_split_2389:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb130, $bb131;

  corral_source_split_2388:
    assume {:verifier.code 0} true;
    out_$i286 := $eq.i32(out_$i285, 1);
    goto corral_source_split_2389;

  corral_source_split_2387:
    assume {:verifier.code 0} true;
    out_$i285 := $M.9;
    goto corral_source_split_2388;

  $bb19:
    assume out_$i137 == 1;
    goto corral_source_split_2387;

  $bb18:
    assume !(out_$i136 == 1);
    assume {:verifier.code 0} true;
    out_$i137 := $slt.i32(out_$i133, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb140:
    assume !(out_$i299 == 1);
    assume {:verifier.code 0} true;
    goto $bb141;

  corral_source_split_2694:
    assume {:verifier.code 0} true;
    goto $bb141;

  corral_source_split_2693:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 479} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_2694;

  corral_source_split_2692:
    assume {:verifier.code 0} true;
    call {:si_unique_call 478} opl3_aftertouch(out_$i300, out_$i301, out_$i302);
    goto corral_source_split_2693;

  corral_source_split_2691:
    assume {:verifier.code 0} true;
    out_$i302 := $load.i32($M.8, in_$p7);
    goto corral_source_split_2692;

  corral_source_split_2690:
    assume {:verifier.code 0} true;
    out_$i301 := $load.i32($M.8, in_$p19);
    goto corral_source_split_2691;

  corral_source_split_2689:
    assume {:verifier.code 0} true;
    out_$i300 := $load.i32($M.8, in_$p12);
    goto corral_source_split_2690;

  $bb139:
    assume out_$i299 == 1;
    goto corral_source_split_2689;

  corral_source_split_2687:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb139, $bb140;

  corral_source_split_2686:
    assume {:verifier.code 0} true;
    out_$i299 := $eq.i32(out_$i298, 2);
    goto corral_source_split_2687;

  $bb138:
    assume {:verifier.code 0} true;
    out_$i298 := $M.9;
    goto corral_source_split_2686;

  $bb137:
    assume !(out_$i294 == 1);
    assume {:verifier.code 0} true;
    goto $bb138;

  corral_source_split_2684:
    assume {:verifier.code 0} true;
    goto $bb138;

  corral_source_split_2683:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 477} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2684;

  corral_source_split_2682:
    assume {:verifier.code 0} true;
    call {:si_unique_call 476} opl3_aftertouch(out_$i295, out_$i296, out_$i297);
    goto corral_source_split_2683;

  corral_source_split_2681:
    assume {:verifier.code 0} true;
    out_$i297 := $load.i32($M.8, in_$p7);
    goto corral_source_split_2682;

  corral_source_split_2680:
    assume {:verifier.code 0} true;
    out_$i296 := $load.i32($M.8, in_$p19);
    goto corral_source_split_2681;

  corral_source_split_2679:
    assume {:verifier.code 0} true;
    out_$i295 := $load.i32($M.8, in_$p12);
    goto corral_source_split_2680;

  $bb136:
    assume out_$i294 == 1;
    goto corral_source_split_2679;

  corral_source_split_2393:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb136, $bb137;

  corral_source_split_2392:
    assume {:verifier.code 0} true;
    out_$i294 := $eq.i32(out_$i293, 1);
    goto corral_source_split_2393;

  corral_source_split_2391:
    assume {:verifier.code 0} true;
    out_$i293 := $M.9;
    goto corral_source_split_2392;

  $bb21:
    assume out_$i138 == 1;
    goto corral_source_split_2391;

  $bb20:
    assume !(out_$i137 == 1);
    assume {:verifier.code 0} true;
    out_$i138 := $eq.i32(out_$i133, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_2696:
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb142:
    assume {:verifier.code 0} true;
    call {:si_unique_call 480} ldv_stop();
    goto corral_source_split_2696;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb142;

  $bb22:
    assume {:verifier.code 0} true;
    assume !(out_$i138 == 1);
    goto $bb23;

  $bb47:
    assume {:verifier.code 0} true;
    assume !(out_$i150 == 1);
    goto $bb23;

  $bb147:
    assume !(out_$i304 == 1);
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb163:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb172:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb158:
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb157:
    assume {:verifier.code 0} true;
    assume !(out_$i310 == 1);
    goto $bb158;

  $bb160:
    assume {:verifier.code 0} true;
    assume !(out_$i312 == 1);
    goto $bb158;

  corral_source_split_2710:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb160;

  corral_source_split_2709:
    assume {:verifier.code 0} true;
    out_$i312 := $eq.i32(out_$i311, 0);
    goto corral_source_split_2710;

  corral_source_split_2708:
    assume {:verifier.code 0} true;
    out_$i311 := $M.10;
    goto corral_source_split_2709;

  $bb156:
    assume out_$i310 == 1;
    goto corral_source_split_2708;

  corral_source_split_2706:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb156, $bb157;

  corral_source_split_2705:
    assume {:verifier.code 0} true;
    out_$i310 := $eq.i32(out_$i309, 3);
    goto corral_source_split_2706;

  corral_source_split_2704:
    assume {:verifier.code 0} true;
    out_$i309 := $M.11;
    goto corral_source_split_2705;

  $bb154:
    assume out_$i308 == 1;
    goto corral_source_split_2704;

  $bb149:
    assume out_$i306 == 1;
    assume {:verifier.code 0} true;
    out_$i308 := $eq.i32(out_$i305, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  $bb148:
    assume {:verifier.code 0} true;
    out_$i306 := $slt.i32(out_$i305, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb149, $bb150;

  corral_source_split_2698:
    assume {:verifier.code 1} true;
    call {:si_unique_call 481} out_$i305 := __VERIFIER_nondet_int();
    call {:si_unique_call 482} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i305);
    call {:si_unique_call 483} {:cexpr "tmp___5"} boogie_si_record_i32(out_$i305);
    assume {:verifier.code 0} true;
    goto $bb148;

  $bb146:
    assume out_$i304 == 1;
    goto corral_source_split_2698;

  corral_source_split_2379:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  corral_source_split_2378:
    assume {:verifier.code 0} true;
    out_$i304 := $ne.i32(out_$i303, 0);
    goto corral_source_split_2379;

  corral_source_split_2377:
    assume {:verifier.code 0} true;
    out_$i303 := $M.11;
    goto corral_source_split_2378;

  $bb5:
    assume out_$i129 == 1;
    goto corral_source_split_2377;

  $bb4:
    assume !(out_$i128 == 1);
    assume {:verifier.code 0} true;
    out_$i129 := $eq.i32(out_$i127, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb165:
    assume !(out_$i314 == 1);
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb171:
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb170:
    assume !(out_$i319 == 1);
    assume {:verifier.code 0} true;
    goto $bb171;

  corral_source_split_2729:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb170;

  corral_source_split_2728:
    assume {:verifier.code 0} true;
    out_$i319 := $ne.i32(out_$i318, 0);
    goto corral_source_split_2729;

  $bb168:
    assume {:verifier.code 0} true;
    out_$i318 := $M.13;
    goto corral_source_split_2728;

  $bb167:
    assume !(out_$i317 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  corral_source_split_2726:
    assume {:verifier.code 0} true;
    goto $bb168;

  corral_source_split_2725:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 490} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2726;

  corral_source_split_2724:
    assume {:verifier.code 0} true;
    $M.11 := 3;
    call {:si_unique_call 489} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
    goto corral_source_split_2725;

  $bb166:
    assume out_$i317 == 1;
    goto corral_source_split_2724;

  corral_source_split_2722:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb166, $bb167;

  corral_source_split_2721:
    assume {:verifier.code 0} true;
    out_$i317 := $eq.i32(out_$i316, 0);
    goto corral_source_split_2722;

  corral_source_split_2720:
    assume {:verifier.code 0} true;
    out_$i316 := $M.13;
    goto corral_source_split_2721;

  corral_source_split_2719:
    assume {:verifier.code 0} true;
    $M.13 := out_$i315;
    call {:si_unique_call 488} {:cexpr "ldv_retval_1"} boogie_si_record_i32(out_$i315);
    goto corral_source_split_2720;

  corral_source_split_2718:
    assume {:verifier.code 0} true;
    call {:si_unique_call 487} out_$i315 := init_opl3();
    goto corral_source_split_2719;

  $bb164:
    assume out_$i314 == 1;
    goto corral_source_split_2718;

  corral_source_split_2702:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb164, $bb165;

  corral_source_split_2701:
    assume {:verifier.code 0} true;
    out_$i314 := $eq.i32(out_$i313, 1);
    goto corral_source_split_2702;

  corral_source_split_2700:
    assume {:verifier.code 0} true;
    out_$i313 := $M.11;
    goto corral_source_split_2701;

  $bb151:
    assume out_$i307 == 1;
    goto corral_source_split_2700;

  $bb150:
    assume !(out_$i306 == 1);
    assume {:verifier.code 0} true;
    out_$i307 := $eq.i32(out_$i305, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb151, $bb152;

  corral_source_split_2734:
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb173:
    assume {:verifier.code 0} true;
    call {:si_unique_call 492} ldv_stop();
    goto corral_source_split_2734;

  $bb153:
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb152:
    assume {:verifier.code 0} true;
    assume !(out_$i307 == 1);
    goto $bb153;

  $bb155:
    assume {:verifier.code 0} true;
    assume !(out_$i308 == 1);
    goto $bb153;

  corral_source_split_2736:
    assume {:verifier.code 0} true;
    goto $bb177;

  $bb176:
    assume {:verifier.code 0} true;
    call {:si_unique_call 493} ldv_stop();
    goto corral_source_split_2736;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb176;

  $bb6:
    assume {:verifier.code 0} true;
    assume !(out_$i129 == 1);
    goto $bb7;

  $bb9:
    assume {:verifier.code 0} true;
    assume !(out_$i130 == 1);
    goto $bb7;

  $bb145_dummy:
    call {:si_unique_call 1} out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i185, out_$i186, out_$i187, out_$i188, out_$i189, out_$i190, out_$i191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i201, out_$i202, out_$i203, out_$i204, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$i218, out_$i219, out_$i220, out_$i221, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i248, out_$i249, out_$i250, out_$i251, out_$i252, out_$i254, out_$i255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$i278, out_$i279, out_$i280, out_$i282, out_$i283, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i301, out_$i302, out_$i303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$i310, out_$i311, out_$i312, out_$i313, out_$i314, out_$i315, out_$i316, out_$i317, out_$i318, out_$i319, out_vslice_dummy_var_62, out_vslice_dummy_var_63, out_vslice_dummy_var_64, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_69, out_vslice_dummy_var_70, out_vslice_dummy_var_71, out_vslice_dummy_var_72, out_vslice_dummy_var_73 := main_loop_$bb1(in_$p0, in_$p1, in_$p2, in_$p3, in_$p4, in_$p5, in_$p6, in_$p7, in_$p8, in_$p9, in_$p10, in_$p11, in_$p12, in_$p13, in_$p14, in_$p15, in_$p16, in_$p17, in_$p18, in_$p19, in_$p20, in_$p21, in_$p22, in_$p23, in_$p24, in_$p25, in_$p26, in_$p27, in_$p28, in_$p29, in_$p30, in_$p31, in_$p32, in_$p33, in_$p34, in_$p35, in_$p36, in_$p37, in_$p38, in_$p39, in_$p41, in_$p42, in_$p43, in_$i50, in_$i73, in_$i76, in_$i103, in_$i106, out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i185, out_$i186, out_$i187, out_$i188, out_$i189, out_$i190, out_$i191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i201, out_$i202, out_$i203, out_$i204, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$i218, out_$i219, out_$i220, out_$i221, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i248, out_$i249, out_$i250, out_$i251, out_$i252, out_$i254, out_$i255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$i278, out_$i279, out_$i280, out_$i282, out_$i283, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i301, out_$i302, out_$i303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$i310, out_$i311, out_$i312, out_$i313, out_$i314, out_$i315, out_$i316, out_$i317, out_$i318, out_$i319, out_vslice_dummy_var_62, out_vslice_dummy_var_63, out_vslice_dummy_var_64, out_vslice_dummy_var_65, out_vslice_dummy_var_66, out_vslice_dummy_var_67, out_vslice_dummy_var_68, out_vslice_dummy_var_69, out_vslice_dummy_var_70, out_vslice_dummy_var_71, out_vslice_dummy_var_72, out_vslice_dummy_var_73);
    return;

  exit:
    return;
}



procedure main_loop_$bb1(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p7: ref, in_$p8: ref, in_$p9: ref, in_$p10: ref, in_$p11: ref, in_$p12: ref, in_$p13: ref, in_$p14: ref, in_$p15: ref, in_$p16: ref, in_$p17: ref, in_$p18: ref, in_$p19: ref, in_$p20: ref, in_$p21: ref, in_$p22: ref, in_$p23: ref, in_$p24: ref, in_$p25: ref, in_$p26: ref, in_$p27: ref, in_$p28: ref, in_$p29: ref, in_$p30: ref, in_$p31: ref, in_$p32: ref, in_$p33: ref, in_$p34: ref, in_$p35: ref, in_$p36: ref, in_$p37: ref, in_$p38: ref, in_$p39: ref, in_$p41: ref, in_$p42: ref, in_$p43: ref, in_$i50: i32, in_$i73: i32, in_$i76: i32, in_$i103: i32, in_$i106: i32, in_$i127: i32, in_$i128: i1, in_$i129: i1, in_$i130: i1, in_$i131: i32, in_$i132: i1, in_$i133: i32, in_$i134: i1, in_$i135: i1, in_$i136: i1, in_$i137: i1, in_$i138: i1, in_$i139: i1, in_$i140: i1, in_$i141: i1, in_$i142: i1, in_$i143: i1, in_$i144: i1, in_$i145: i1, in_$i146: i1, in_$i147: i1, in_$i148: i1, in_$i149: i1, in_$i150: i1, in_$i151: i32, in_$i152: i1, in_$i153: i32, in_$i154: i32, in_$i155: i32, in_$i157: i32, in_$i158: i1, in_$i159: i32, in_$i160: i32, in_$i161: i32, in_$i163: i32, in_$i164: i1, in_$i165: i32, in_$i166: i32, in_$i167: i32, in_$i168: i32, in_$i170: i32, in_$i171: i1, in_$i172: i32, in_$i173: i32, in_$i174: i32, in_$i175: i32, in_$i177: i32, in_$i178: i1, in_$i179: i32, in_$i180: i32, in_$i181: i32, in_$i182: i32, in_$i183: i1, in_$i184: i32, in_$i185: i32, in_$i186: i32, in_$i187: i1, in_$i188: i32, in_$i189: i32, in_$i190: i32, in_$i191: i32, in_$i192: i1, in_$i193: i32, in_$i194: i32, in_$i195: i32, in_$i196: i32, in_$i197: i1, in_$i198: i32, in_$i199: i32, in_$i201: i32, in_$i202: i1, in_$i203: i32, in_$i204: i32, in_$i206: i32, in_$i207: i1, in_$i208: i32, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i1, in_$i213: i32, in_$i214: i32, in_$i215: i32, in_$i216: i32, in_$i217: i1, in_$i218: i32, in_$i219: i32, in_$i220: i32, in_$i221: i32, in_$i223: i32, in_$i224: i1, in_$i225: i32, in_$i226: i32, in_$i227: i32, in_$i228: i32, in_$i230: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i234: i1, in_$i235: i32, in_$i236: i32, in_$i237: i1, in_$i238: i32, in_$i239: i32, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i248: i32, in_$i249: i1, in_$i250: i32, in_$i251: i32, in_$i252: i32, in_$i254: i32, in_$i255: i1, in_$i256: i32, in_$i257: i32, in_$i258: i1, in_$i259: i32, in_$i260: i32, in_$i261: i32, in_$i262: i32, in_$i263: i32, in_$i264: i1, in_$i265: i32, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i1, in_$i271: i32, in_$i272: i32, in_$i273: i32, in_$i274: i32, in_$i275: i1, in_$i276: i32, in_$i277: i32, in_$i278: i32, in_$i279: i32, in_$i280: i1, in_$i282: i32, in_$i283: i1, in_$i285: i32, in_$i286: i1, in_$i287: i32, in_$i288: i32, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i1, in_$i295: i32, in_$i296: i32, in_$i297: i32, in_$i298: i32, in_$i299: i1, in_$i300: i32, in_$i301: i32, in_$i302: i32, in_$i303: i32, in_$i304: i1, in_$i305: i32, in_$i306: i1, in_$i307: i1, in_$i308: i1, in_$i309: i32, in_$i310: i1, in_$i311: i32, in_$i312: i1, in_$i313: i32, in_$i314: i1, in_$i315: i32, in_$i316: i32, in_$i317: i1, in_$i318: i32, in_$i319: i1, in_vslice_dummy_var_62: i32, in_vslice_dummy_var_63: i32, in_vslice_dummy_var_64: i32, in_vslice_dummy_var_65: i32, in_vslice_dummy_var_66: i32, in_vslice_dummy_var_67: i32, in_vslice_dummy_var_68: i32, in_vslice_dummy_var_69: i32, in_vslice_dummy_var_70: i32, in_vslice_dummy_var_71: i32, in_vslice_dummy_var_72: i32, in_vslice_dummy_var_73: i32) returns (out_$i127: i32, out_$i128: i1, out_$i129: i1, out_$i130: i1, out_$i131: i32, out_$i132: i1, out_$i133: i32, out_$i134: i1, out_$i135: i1, out_$i136: i1, out_$i137: i1, out_$i138: i1, out_$i139: i1, out_$i140: i1, out_$i141: i1, out_$i142: i1, out_$i143: i1, out_$i144: i1, out_$i145: i1, out_$i146: i1, out_$i147: i1, out_$i148: i1, out_$i149: i1, out_$i150: i1, out_$i151: i32, out_$i152: i1, out_$i153: i32, out_$i154: i32, out_$i155: i32, out_$i157: i32, out_$i158: i1, out_$i159: i32, out_$i160: i32, out_$i161: i32, out_$i163: i32, out_$i164: i1, out_$i165: i32, out_$i166: i32, out_$i167: i32, out_$i168: i32, out_$i170: i32, out_$i171: i1, out_$i172: i32, out_$i173: i32, out_$i174: i32, out_$i175: i32, out_$i177: i32, out_$i178: i1, out_$i179: i32, out_$i180: i32, out_$i181: i32, out_$i182: i32, out_$i183: i1, out_$i184: i32, out_$i185: i32, out_$i186: i32, out_$i187: i1, out_$i188: i32, out_$i189: i32, out_$i190: i32, out_$i191: i32, out_$i192: i1, out_$i193: i32, out_$i194: i32, out_$i195: i32, out_$i196: i32, out_$i197: i1, out_$i198: i32, out_$i199: i32, out_$i201: i32, out_$i202: i1, out_$i203: i32, out_$i204: i32, out_$i206: i32, out_$i207: i1, out_$i208: i32, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i1, out_$i213: i32, out_$i214: i32, out_$i215: i32, out_$i216: i32, out_$i217: i1, out_$i218: i32, out_$i219: i32, out_$i220: i32, out_$i221: i32, out_$i223: i32, out_$i224: i1, out_$i225: i32, out_$i226: i32, out_$i227: i32, out_$i228: i32, out_$i230: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i234: i1, out_$i235: i32, out_$i236: i32, out_$i237: i1, out_$i238: i32, out_$i239: i32, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i248: i32, out_$i249: i1, out_$i250: i32, out_$i251: i32, out_$i252: i32, out_$i254: i32, out_$i255: i1, out_$i256: i32, out_$i257: i32, out_$i258: i1, out_$i259: i32, out_$i260: i32, out_$i261: i32, out_$i262: i32, out_$i263: i32, out_$i264: i1, out_$i265: i32, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i1, out_$i271: i32, out_$i272: i32, out_$i273: i32, out_$i274: i32, out_$i275: i1, out_$i276: i32, out_$i277: i32, out_$i278: i32, out_$i279: i32, out_$i280: i1, out_$i282: i32, out_$i283: i1, out_$i285: i32, out_$i286: i1, out_$i287: i32, out_$i288: i32, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i1, out_$i295: i32, out_$i296: i32, out_$i297: i32, out_$i298: i32, out_$i299: i1, out_$i300: i32, out_$i301: i32, out_$i302: i32, out_$i303: i32, out_$i304: i1, out_$i305: i32, out_$i306: i1, out_$i307: i1, out_$i308: i1, out_$i309: i32, out_$i310: i1, out_$i311: i32, out_$i312: i1, out_$i313: i32, out_$i314: i1, out_$i315: i32, out_$i316: i32, out_$i317: i1, out_$i318: i32, out_$i319: i1, out_vslice_dummy_var_62: i32, out_vslice_dummy_var_63: i32, out_vslice_dummy_var_64: i32, out_vslice_dummy_var_65: i32, out_vslice_dummy_var_66: i32, out_vslice_dummy_var_67: i32, out_vslice_dummy_var_68: i32, out_vslice_dummy_var_69: i32, out_vslice_dummy_var_70: i32, out_vslice_dummy_var_71: i32, out_vslice_dummy_var_72: i32, out_vslice_dummy_var_73: i32);
  modifies $M.9, $M.0, $M.10, $M.12, $M.3, $M.4, $CurrAddr, $M.7, $M.2, assertsPassed, $M.5, $M.11, $M.13, $M.15, $M.1, $M.16;



implementation ldv_stop_loop_$bb1()
{

  entry:
    goto $bb1, exit;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb1_dummy;

  $bb1_dummy:
    call {:si_unique_call 1} ldv_stop_loop_$bb1();
    return;

  exit:
    return;
}



procedure ldv_stop_loop_$bb1();


