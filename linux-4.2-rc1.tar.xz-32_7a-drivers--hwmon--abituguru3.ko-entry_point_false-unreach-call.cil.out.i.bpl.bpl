var $M.0: [ref]i8;

var $M.1: [ref]i8;

var $M.2: i8;

var $M.3: [ref]ref;

var $M.4: [ref]ref;

var $M.5: [ref]ref;

var $M.6: [ref]ref;

var $M.7: [ref]i24;

var $M.8: [ref]i8;

var $M.9: i32;

var $M.10: [ref]i32;

var $M.11: [ref]i32;

var $M.12: [ref]i8;

var $M.13: ref;

var $M.14: ref;

var $M.15: ref;

var $M.16: ref;

var $M.17: i32;

var $M.18: i32;

var $M.19: i32;

var $M.20: i32;

var $M.21: i32;

var $M.22: i32;

var $M.23: i32;

var $M.24: i32;

var $M.25: i32;

var $M.26: i32;

var $M.27: i32;

var $M.28: i32;

var $M.29: i32;

var $M.30: i32;

var $M.31: i32;

var $M.32: i32;

var $M.33: i32;

var $M.34: i32;

var $M.35: i32;

var $M.36: i32;

var $M.37: i32;

var $M.38: i32;

var $M.39: i32;

var $M.40: i32;

var $M.41: i32;

var $M.42: i32;

var $M.43: i32;

var $M.44: ref;

var $M.45: [ref]i64;

var $M.46: [ref]i64;

var $M.47: [ref]ref;

var $M.48: [ref]i64;

var $M.49: [ref]ref;

var $M.50: [ref]ref;

var $M.51: [ref]ref;

var $M.52: i32;

var $M.53: i32;

var $M.54: i8;

var $M.102: [ref]i8;

var $M.103: [ref]i8;

var $M.104: [ref]i8;

var $M.105: [ref]i8;

var $M.106: [ref]i8;

var $M.107: [ref]i8;

var $M.108: [ref]i8;

var $CurrAddr: ref;

var assertsPassed: bool;

type i1 = int;

type i5 = int;

type i6 = int;

type i8 = int;

type i16 = int;

type i24 = int;

type i32 = int;

type i40 = int;

type i48 = int;

type i56 = int;

type i64 = int;

type i80 = int;

type i88 = int;

type i96 = int;

type i128 = int;

type i160 = int;

type i256 = int;

type ref = i64;

type float;

const $0: i32;

axiom $0 == 0;

const $1: i32;

axiom $1 == 1;

const $0.ref: ref;

axiom $0.ref == 0;

const $1.ref: ref;

axiom $1.ref == 1;

const $2.ref: ref;

axiom $2.ref == 2;

const $3.ref: ref;

axiom $3.ref == 3;

const $4.ref: ref;

axiom $4.ref == 4;

const $5.ref: ref;

axiom $5.ref == 5;

const $6.ref: ref;

axiom $6.ref == 6;

const $7.ref: ref;

axiom $7.ref == 7;

const $8.ref: ref;

axiom $8.ref == 8;

const $9.ref: ref;

axiom $9.ref == 9;

const $10.ref: ref;

axiom $10.ref == 10;

const $11.ref: ref;

axiom $11.ref == 11;

const $12.ref: ref;

axiom $12.ref == 12;

const $13.ref: ref;

axiom $13.ref == 13;

const $14.ref: ref;

axiom $14.ref == 14;

const $1024.ref: ref;

axiom $1024.ref == 1024;

axiom $GLOBALS_BOTTOM == $sub.ref(0, 358051);

axiom $EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792));

axiom $MALLOC_TOP == 9223372036854775807;

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) : bv64;

function {:builtin "bv2int"} $bv2int.64(i: bv64) : i64;

function {:inline} $p2i.ref.i8(p: ref) : i8
{
  $trunc.i64.i8(p)
}

function {:inline} $i2p.i8.ref(i: i8) : ref
{
  $zext.i8.i64(i)
}

function {:inline} $p2i.ref.i16(p: ref) : i16
{
  $trunc.i64.i16(p)
}

function {:inline} $i2p.i16.ref(i: i16) : ref
{
  $zext.i16.i64(i)
}

function {:inline} $p2i.ref.i32(p: ref) : i32
{
  $trunc.i64.i32(p)
}

function {:inline} $i2p.i32.ref(i: i32) : ref
{
  $zext.i32.i64(i)
}

function {:inline} $p2i.ref.i64(p: ref) : i64
{
  p
}

function {:inline} $i2p.i64.ref(i: i64) : ref
{
  i
}

function {:inline} $eq.ref(p1: ref, p2: ref) : i1
{
  (if $eq.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $eq.ref.bool(p1: ref, p2: ref) : bool
{
  $eq.i64.bool(p1, p2)
}

function {:inline} $ne.ref(p1: ref, p2: ref) : i1
{
  (if $ne.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ne.ref.bool(p1: ref, p2: ref) : bool
{
  $ne.i64.bool(p1, p2)
}

function {:inline} $ugt.ref(p1: ref, p2: ref) : i1
{
  (if $ugt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ugt.ref.bool(p1: ref, p2: ref) : bool
{
  $ugt.i64.bool(p1, p2)
}

function {:inline} $uge.ref(p1: ref, p2: ref) : i1
{
  (if $uge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $uge.ref.bool(p1: ref, p2: ref) : bool
{
  $uge.i64.bool(p1, p2)
}

function {:inline} $ult.ref(p1: ref, p2: ref) : i1
{
  (if $ult.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ult.ref.bool(p1: ref, p2: ref) : bool
{
  $ult.i64.bool(p1, p2)
}

function {:inline} $ule.ref(p1: ref, p2: ref) : i1
{
  (if $ule.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ule.ref.bool(p1: ref, p2: ref) : bool
{
  $ule.i64.bool(p1, p2)
}

function {:inline} $sgt.ref(p1: ref, p2: ref) : i1
{
  (if $sgt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sgt.ref.bool(p1: ref, p2: ref) : bool
{
  $sgt.i64.bool(p1, p2)
}

function {:inline} $sge.ref(p1: ref, p2: ref) : i1
{
  (if $sge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sge.ref.bool(p1: ref, p2: ref) : bool
{
  $sge.i64.bool(p1, p2)
}

function {:inline} $slt.ref(p1: ref, p2: ref) : i1
{
  (if $slt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $slt.ref.bool(p1: ref, p2: ref) : bool
{
  $slt.i64.bool(p1, p2)
}

function {:inline} $sle.ref(p1: ref, p2: ref) : i1
{
  (if $sle.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sle.ref.bool(p1: ref, p2: ref) : bool
{
  $sle.i64.bool(p1, p2)
}

function {:inline} $add.ref(p1: ref, p2: ref) : ref
{
  $add.i64(p1, p2)
}

function {:inline} $sub.ref(p1: ref, p2: ref) : ref
{
  $sub.i64(p1, p2)
}

function {:inline} $mul.ref(p1: ref, p2: ref) : ref
{
  $mul.i64(p1, p2)
}

const LDV_IN_INTERRUPT: ref;

axiom LDV_IN_INTERRUPT == $sub.ref(0, 1028);

const probed_1: ref;

axiom probed_1 == $sub.ref(0, 2056);

const abituguru3_driver_group1: ref;

axiom abituguru3_driver_group1 == $sub.ref(0, 3088);

const ref_cnt: ref;

axiom ref_cnt == $sub.ref(0, 4116);

const abituguru3_pm_group1: ref;

axiom abituguru3_pm_group1 == $sub.ref(0, 5148);

const ldv_state_variable_1: ref;

axiom ldv_state_variable_1 == $sub.ref(0, 6176);

const ldv_state_variable_0: ref;

axiom ldv_state_variable_0 == $sub.ref(0, 7204);

const ldv_state_variable_2: ref;

axiom ldv_state_variable_2 == $sub.ref(0, 8232);

const ldv_retval_1: ref;

axiom ldv_retval_1 == $sub.ref(0, 9260);

const ldv_retval_0: ref;

axiom ldv_retval_0 == $sub.ref(0, 10288);

const ldv_retval_2: ref;

axiom ldv_retval_2 == $sub.ref(0, 11316);

const ldv_retval_21: ref;

axiom ldv_retval_21 == $sub.ref(0, 12344);

const ldv_retval_20: ref;

axiom ldv_retval_20 == $sub.ref(0, 13372);

const ldv_retval_19: ref;

axiom ldv_retval_19 == $sub.ref(0, 14400);

const ldv_retval_18: ref;

axiom ldv_retval_18 == $sub.ref(0, 15428);

const ldv_retval_17: ref;

axiom ldv_retval_17 == $sub.ref(0, 16456);

const ldv_retval_16: ref;

axiom ldv_retval_16 == $sub.ref(0, 17484);

const ldv_retval_15: ref;

axiom ldv_retval_15 == $sub.ref(0, 18512);

const ldv_retval_14: ref;

axiom ldv_retval_14 == $sub.ref(0, 19540);

const ldv_retval_13: ref;

axiom ldv_retval_13 == $sub.ref(0, 20568);

const ldv_retval_12: ref;

axiom ldv_retval_12 == $sub.ref(0, 21596);

const ldv_retval_11: ref;

axiom ldv_retval_11 == $sub.ref(0, 22624);

const ldv_retval_10: ref;

axiom ldv_retval_10 == $sub.ref(0, 23652);

const ldv_retval_9: ref;

axiom ldv_retval_9 == $sub.ref(0, 24680);

const ldv_retval_8: ref;

axiom ldv_retval_8 == $sub.ref(0, 25708);

const ldv_retval_7: ref;

axiom ldv_retval_7 == $sub.ref(0, 26736);

const ldv_retval_6: ref;

axiom ldv_retval_6 == $sub.ref(0, 27764);

const ldv_retval_5: ref;

axiom ldv_retval_5 == $sub.ref(0, 28792);

const ldv_retval_4: ref;

axiom ldv_retval_4 == $sub.ref(0, 29820);

const ldv_retval_3: ref;

axiom ldv_retval_3 == $sub.ref(0, 30848);

const ldv_mutex_update_lock_of_abituguru3_data: ref;

axiom ldv_mutex_update_lock_of_abituguru3_data == $sub.ref(0, 31876);

const ldv_mutex_mutex_of_device: ref;

axiom ldv_mutex_mutex_of_device == $sub.ref(0, 32904);

const ldv_mutex_lock: ref;

axiom ldv_mutex_lock == $sub.ref(0, 33932);

const force: ref;

axiom force == $sub.ref(0, 34957);

const abituguru3_pm: ref;

axiom abituguru3_pm == $sub.ref(0, 36165);

const abituguru3_driver: ref;

axiom abituguru3_driver == $sub.ref(0, 37365);

const abituguru3_pdev: ref;

axiom abituguru3_pdev == $sub.ref(0, 38397);

const abituguru3_sysfs_attr: ref;

axiom abituguru3_sysfs_attr == $sub.ref(0, 39477);

const {:count 3} abituguru3_sysfs_templ: ref;

axiom abituguru3_sysfs_templ == $sub.ref(0, 42181);

const never_happen: ref;

axiom never_happen == $sub.ref(0, 43213);

const report_this: ref;

axiom report_this == $sub.ref(0, 44245);

const {:count 18} abituguru3_motherboards: ref;

axiom abituguru3_motherboards == $sub.ref(0, 61397);

const verbose: ref;

axiom verbose == $sub.ref(0, 62422);

const {:count 9} .str.31: ref;

axiom .str.31 == $sub.ref(0, 63455);

const {:count 4} .str.32: ref;

axiom .str.32 == $sub.ref(0, 64483);

const {:count 8} .str.33: ref;

axiom .str.33 == $sub.ref(0, 65515);

const {:count 13} .str.34: ref;

axiom .str.34 == $sub.ref(0, 66552);

const {:count 16} .str.35: ref;

axiom .str.35 == $sub.ref(0, 67592);

const {:count 9} .str.36: ref;

axiom .str.36 == $sub.ref(0, 68625);

const {:count 10} .str.37: ref;

axiom .str.37 == $sub.ref(0, 69659);

const {:count 18} .str.38: ref;

axiom .str.38 == $sub.ref(0, 70701);

const {:count 17} .str.39: ref;

axiom .str.39 == $sub.ref(0, 71742);

const {:count 8} .str.40: ref;

axiom .str.40 == $sub.ref(0, 72774);

const {:count 6} .str.41: ref;

axiom .str.41 == $sub.ref(0, 73804);

const {:count 5} .str.42: ref;

axiom .str.42 == $sub.ref(0, 74833);

const {:count 4} .str.43: ref;

axiom .str.43 == $sub.ref(0, 75861);

const {:count 7} .str.44: ref;

axiom .str.44 == $sub.ref(0, 76892);

const {:count 4} .str.45: ref;

axiom .str.45 == $sub.ref(0, 77920);

const {:count 8} .str.46: ref;

axiom .str.46 == $sub.ref(0, 78952);

const {:count 7} .str.47: ref;

axiom .str.47 == $sub.ref(0, 79983);

const {:count 8} .str.48: ref;

axiom .str.48 == $sub.ref(0, 81015);

const {:count 9} .str.49: ref;

axiom .str.49 == $sub.ref(0, 82048);

const {:count 5} .str.50: ref;

axiom .str.50 == $sub.ref(0, 83077);

const {:count 5} .str.51: ref;

axiom .str.51 == $sub.ref(0, 84106);

const {:count 5} .str.52: ref;

axiom .str.52 == $sub.ref(0, 85135);

const {:count 5} .str.53: ref;

axiom .str.53 == $sub.ref(0, 86164);

const {:count 8} .str.54: ref;

axiom .str.54 == $sub.ref(0, 87196);

const {:count 9} .str.55: ref;

axiom .str.55 == $sub.ref(0, 88229);

const {:count 9} .str.56: ref;

axiom .str.56 == $sub.ref(0, 89262);

const {:count 9} .str.57: ref;

axiom .str.57 == $sub.ref(0, 90295);

const {:count 9} .str.58: ref;

axiom .str.58 == $sub.ref(0, 91328);

const {:count 8} .str.59: ref;

axiom .str.59 == $sub.ref(0, 92360);

const {:count 8} .str.60: ref;

axiom .str.60 == $sub.ref(0, 93392);

const {:count 4} .str.61: ref;

axiom .str.61 == $sub.ref(0, 94420);

const {:count 10} .str.62: ref;

axiom .str.62 == $sub.ref(0, 95454);

const {:count 8} .str.63: ref;

axiom .str.63 == $sub.ref(0, 96486);

const {:count 14} .str.64: ref;

axiom .str.64 == $sub.ref(0, 97524);

const {:count 8} .str.65: ref;

axiom .str.65 == $sub.ref(0, 98556);

const {:count 13} .str.66: ref;

axiom .str.66 == $sub.ref(0, 99593);

const {:count 8} .str.67: ref;

axiom .str.67 == $sub.ref(0, 100625);

const {:count 10} .str.68: ref;

axiom .str.68 == $sub.ref(0, 101659);

const {:count 8} .str.69: ref;

axiom .str.69 == $sub.ref(0, 102691);

const {:count 3} .str.70: ref;

axiom .str.70 == $sub.ref(0, 103718);

const {:count 15} .str.71: ref;

axiom .str.71 == $sub.ref(0, 104757);

const {:count 3} .str.72: ref;

axiom .str.72 == $sub.ref(0, 105784);

const {:count 4} .str.73: ref;

axiom .str.73 == $sub.ref(0, 106812);

const {:count 8} .str.74: ref;

axiom .str.74 == $sub.ref(0, 107844);

const {:count 9} .str.75: ref;

axiom .str.75 == $sub.ref(0, 108877);

const {:count 5} .str.76: ref;

axiom .str.76 == $sub.ref(0, 109906);

const {:count 9} .str.77: ref;

axiom .str.77 == $sub.ref(0, 110939);

const {:count 9} .str.78: ref;

axiom .str.78 == $sub.ref(0, 111972);

const {:count 8} .str.79: ref;

axiom .str.79 == $sub.ref(0, 113004);

const {:count 10} .str.80: ref;

axiom .str.80 == $sub.ref(0, 114038);

const {:count 9} .str.81: ref;

axiom .str.81 == $sub.ref(0, 115071);

const {:count 8} .str.82: ref;

axiom .str.82 == $sub.ref(0, 116103);

const {:count 9} .str.83: ref;

axiom .str.83 == $sub.ref(0, 117136);

const {:count 9} .str.84: ref;

axiom .str.84 == $sub.ref(0, 118169);

const {:count 9} .str.85: ref;

axiom .str.85 == $sub.ref(0, 119202);

const {:count 11} .str.86: ref;

axiom .str.86 == $sub.ref(0, 120237);

const {:count 8} .str.87: ref;

axiom .str.87 == $sub.ref(0, 121269);

const {:count 10} .str.88: ref;

axiom .str.88 == $sub.ref(0, 122303);

const {:count 11} .str.89: ref;

axiom .str.89 == $sub.ref(0, 123338);

const {:count 11} .str.90: ref;

axiom .str.90 == $sub.ref(0, 124373);

const {:count 11} .str.91: ref;

axiom .str.91 == $sub.ref(0, 125408);

const {:count 11} .str.92: ref;

axiom .str.92 == $sub.ref(0, 126443);

const {:count 11} .str.93: ref;

axiom .str.93 == $sub.ref(0, 127478);

const {:count 11} .str.94: ref;

axiom .str.94 == $sub.ref(0, 128513);

const {:count 12} .str.95: ref;

axiom .str.95 == $sub.ref(0, 129549);

const {:count 9} .str.96: ref;

axiom .str.96 == $sub.ref(0, 130582);

const {:count 12} .str.97: ref;

axiom .str.97 == $sub.ref(0, 131618);

const {:count 17} .str.98: ref;

axiom .str.98 == $sub.ref(0, 132659);

const {:count 5} .str.99: ref;

axiom .str.99 == $sub.ref(0, 133688);

const {:count 9} .str.100: ref;

axiom .str.100 == $sub.ref(0, 134721);

const {:count 12} .str.101: ref;

axiom .str.101 == $sub.ref(0, 135757);

const {:count 66} .str.102: ref;

axiom .str.102 == $sub.ref(0, 136847);

const {:count 26} .str.103: ref;

axiom .str.103 == $sub.ref(0, 137897);

const {:count 11} .str.104: ref;

axiom .str.104 == $sub.ref(0, 138932);

const {:count 9} .str.105: ref;

axiom .str.105 == $sub.ref(0, 139965);

const {:count 9} .str.106: ref;

axiom .str.106 == $sub.ref(0, 140998);

const {:count 15} .str.107: ref;

axiom .str.107 == $sub.ref(0, 142037);

const {:count 15} .str.108: ref;

axiom .str.108 == $sub.ref(0, 143076);

const {:count 10} .str.109: ref;

axiom .str.109 == $sub.ref(0, 144110);

const {:count 14} .str.110: ref;

axiom .str.110 == $sub.ref(0, 145148);

const {:count 22} .str.111: ref;

axiom .str.111 == $sub.ref(0, 146194);

const {:count 22} .str.112: ref;

axiom .str.112 == $sub.ref(0, 147240);

const {:count 11} .str.113: ref;

axiom .str.113 == $sub.ref(0, 148275);

const {:count 13} .str.114: ref;

axiom .str.114 == $sub.ref(0, 149312);

const {:count 11} .str.115: ref;

axiom .str.115 == $sub.ref(0, 150347);

const {:count 12} .str.116: ref;

axiom .str.116 == $sub.ref(0, 151383);

const {:count 13} .str.117: ref;

axiom .str.117 == $sub.ref(0, 152420);

const {:count 12} .str.118: ref;

axiom .str.118 == $sub.ref(0, 153456);

const {:count 16} .str.119: ref;

axiom .str.119 == $sub.ref(0, 154496);

const {:count 20} .str.120: ref;

axiom .str.120 == $sub.ref(0, 155540);

const {:count 13} .str.121: ref;

axiom .str.121 == $sub.ref(0, 156577);

const {:count 12} .str.122: ref;

axiom .str.122 == $sub.ref(0, 157613);

const {:count 10} .str.123: ref;

axiom .str.123 == $sub.ref(0, 158647);

const {:count 12} .str.124: ref;

axiom .str.124 == $sub.ref(0, 159683);

const {:count 11} .str.125: ref;

axiom .str.125 == $sub.ref(0, 160718);

const {:count 15} .str.126: ref;

axiom .str.126 == $sub.ref(0, 161757);

const {:count 19} .str.127: ref;

axiom .str.127 == $sub.ref(0, 162800);

const {:count 12} .str.128: ref;

axiom .str.128 == $sub.ref(0, 163836);

const {:count 4} .str.132: ref;

axiom .str.132 == $sub.ref(0, 164864);

const {:count 3} .str.130: ref;

axiom .str.130 == $sub.ref(0, 165891);

const {:count 3} .str.131: ref;

axiom .str.131 == $sub.ref(0, 166918);

const jiffies: ref;

axiom jiffies == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776));

const {:count 11} .str.5: ref;

axiom .str.5 == $sub.ref(0, 167953);

const {:count 16} .str.6: ref;

axiom .str.6 == $sub.ref(0, 168993);

const {:count 205} .str.7: ref;

axiom .str.7 == $sub.ref(0, 170222);

const {:count 70} .str.8: ref;

axiom .str.8 == $sub.ref(0, 171316);

const {:count 82} .str.9: ref;

axiom .str.9 == $sub.ref(0, 172422);

const {:count 74} .str.10: ref;

axiom .str.10 == $sub.ref(0, 173520);

const {:count 86} .str.11: ref;

axiom .str.11 == $sub.ref(0, 174630);

const {:count 76} .str.12: ref;

axiom .str.12 == $sub.ref(0, 175730);

const {:count 88} .str.13: ref;

axiom .str.13 == $sub.ref(0, 176842);

const {:count 75} .str.14: ref;

axiom .str.14 == $sub.ref(0, 177941);

const {:count 87} .str.15: ref;

axiom .str.15 == $sub.ref(0, 179052);

const {:count 60} .str.16: ref;

axiom .str.16 == $sub.ref(0, 180136);

const {:count 72} .str.17: ref;

axiom .str.17 == $sub.ref(0, 181232);

const pv_cpu_ops: ref;

axiom pv_cpu_ops == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784));

const {:count 23} .str.18: ref;

axiom .str.18 == $sub.ref(0, 182279);

const {:count 62} .str.19: ref;

axiom .str.19 == $sub.ref(0, 183365);

const {:count 74} .str.20: ref;

axiom .str.20 == $sub.ref(0, 184463);

const {:count 56} .str.21: ref;

axiom .str.21 == $sub.ref(0, 185543);

const {:count 68} .str.22: ref;

axiom .str.22 == $sub.ref(0, 186635);

const {:count 56} .str.23: ref;

axiom .str.23 == $sub.ref(0, 187715);

const {:count 68} .str.24: ref;

axiom .str.24 == $sub.ref(0, 188807);

const {:count 56} .str.25: ref;

axiom .str.25 == $sub.ref(0, 189887);

const {:count 68} .str.26: ref;

axiom .str.26 == $sub.ref(0, 190979);

const {:count 54} .str.27: ref;

axiom .str.27 == $sub.ref(0, 192057);

const {:count 66} .str.28: ref;

axiom .str.28 == $sub.ref(0, 193147);

const {:count 75} .str.29: ref;

axiom .str.29 == $sub.ref(0, 194246);

const {:count 87} .str.30: ref;

axiom .str.30 == $sub.ref(0, 195357);

const {:count 4} .str.129: ref;

axiom .str.129 == $sub.ref(0, 196385);

const {:count 5} .str.133: ref;

axiom .str.133 == $sub.ref(0, 197414);

const .str: ref;

axiom .str == $sub.ref(0, 198457);

const {:count 53} .str.1: ref;

axiom .str.1 == $sub.ref(0, 199534);

const {:count 54} .str.2: ref;

axiom .str.2 == $sub.ref(0, 200612);

const {:count 94} .str.3: ref;

axiom .str.3 == $sub.ref(0, 201730);

const {:count 71} .str.4: ref;

axiom .str.4 == $sub.ref(0, 202825);

const {:count 144} .str.134: ref;

axiom .str.134 == $sub.ref(0, 203993);

const __this_module: ref;

axiom __this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792));

const {:count 39} .str.135: ref;

axiom .str.135 == $sub.ref(0, 205056);

const {:count 51} .str.136: ref;

axiom .str.136 == $sub.ref(0, 206131);

const {:count 42} .str.137: ref;

axiom .str.137 == $sub.ref(0, 207197);

const {:count 18} .str.140: ref;

axiom .str.140 == $sub.ref(0, 208239);

const {:count 51} .str.141: ref;

axiom .str.141 == $sub.ref(0, 209314);

const {:count 63} .str.142: ref;

axiom .str.142 == $sub.ref(0, 210401);

const {:count 75} .str.143: ref;

axiom .str.143 == $sub.ref(0, 211500);

const {:count 24} .str.138: ref;

axiom .str.138 == $sub.ref(0, 212548);

const {:count 2} .str.139: ref;

axiom .str.139 == $sub.ref(0, 213574);

const env_value_str: ref;

axiom env_value_str == $sub.ref(0, 214606);

const {:count 3} .str.1.296: ref;

axiom .str.1.296 == $sub.ref(0, 215633);

const {:count 14} .str.388: ref;

axiom .str.388 == $sub.ref(0, 216671);

const errno_global: ref;

axiom errno_global == $sub.ref(0, 217699);

const llvm.dbg.declare: ref;

axiom llvm.dbg.declare == $sub.ref(0, 218731);

procedure llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);



const malloc: ref;

axiom malloc == $sub.ref(0, 219763);

procedure malloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation malloc($i0: i64) returns ($r: ref)
{

  anon0:
    call {:si_unique_call 0} $r := $malloc($i0);
    return;
}



const show_value: ref;

axiom show_value == $sub.ref(0, 220795);

procedure show_value($p0: ref, $p1: ref, $p2: ref) returns ($r: i64);



const show_alarm: ref;

axiom show_alarm == $sub.ref(0, 221827);

procedure show_alarm($p0: ref, $p1: ref, $p2: ref) returns ($r: i64);



const show_mask: ref;

axiom show_mask == $sub.ref(0, 222859);

procedure show_mask($p0: ref, $p1: ref, $p2: ref) returns ($r: i64);



const show_label: ref;

axiom show_label == $sub.ref(0, 223891);

procedure show_label($p0: ref, $p1: ref, $p2: ref) returns ($r: i64);



const dev_get_drvdata: ref;

axiom dev_get_drvdata == $sub.ref(0, 224923);

procedure dev_get_drvdata($p0: ref) returns ($r: ref);
  free requires assertsPassed;



implementation dev_get_drvdata($p0: ref) returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1;

  corral_source_split_1:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(512, 1));
    goto corral_source_split_2;

  corral_source_split_2:
    assume {:verifier.code 0} true;
    $p2 := $load.ref($M.1, $p1);
    goto corral_source_split_3;

  corral_source_split_3:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const sprintf: ref;

axiom sprintf == $sub.ref(0, 225955);

procedure sprintf.ref.ref.ref($p0: ref, $p1: ref, p.2: ref) returns ($r: i32);



procedure sprintf.ref.ref.i32($p0: ref, $p1: ref, p.2: i32) returns ($r: i32);



procedure sprintf.ref.ref($p0: ref, $p1: ref) returns ($r: i32);



const abituguru3_update_device: ref;

axiom abituguru3_update_device == $sub.ref(0, 226987);

procedure abituguru3_update_device($p0: ref) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.0, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, assertsPassed, $CurrAddr;



implementation abituguru3_update_device($p0: ref) returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $i37: i64;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i1;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $i80: i1;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $i110: i1;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i32;
  var $i115: i1;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $i119: i32;
  var $i120: i1;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i32;
  var $i130: i1;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i1;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i1;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $i144: i32;
  var $i145: i1;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $i149: i32;
  var $i150: i1;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i32;
  var $i155: i1;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i32;
  var $i160: i1;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $i164: i32;
  var $i165: i1;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i32;
  var $i170: i1;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $i175: i1;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $i179: i32;
  var $i180: i1;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $i184: i32;
  var $i185: i1;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i32;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: i32;
  var $i195: i1;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $i199: i32;
  var $i200: i1;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $i204: i32;
  var $i205: i1;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $i209: i32;
  var $i210: i1;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $i214: i32;
  var $i215: i1;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $i219: i32;
  var $i220: i1;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $i224: i32;
  var $i225: i1;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $i229: i32;
  var $i230: i1;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $i234: i32;
  var $i235: i1;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $i239: i32;
  var $i240: i1;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $i244: i32;
  var $i245: i1;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: i32;
  var $i250: i1;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $i254: i32;
  var $i255: i1;
  var $p256: ref;
  var $p257: ref;
  var $p258: ref;
  var $i259: i32;
  var $i260: i1;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $i265: i1;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $i269: i32;
  var $i270: i1;
  var $p271: ref;
  var $p272: ref;
  var $p273: ref;
  var $i274: i32;
  var $i275: i1;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $i279: i32;
  var $i280: i1;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $i284: i32;
  var $i285: i1;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $i289: i32;
  var $i290: i1;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $i294: i32;
  var $i295: i1;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $i299: i32;
  var $i300: i1;
  var $p301: ref;
  var $p302: ref;
  var $p303: ref;
  var $i304: i32;
  var $i305: i1;
  var $p306: ref;
  var $p307: ref;
  var $p308: ref;
  var $i309: i32;
  var $i310: i1;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $i314: i32;
  var $i315: i1;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $i319: i32;
  var $i320: i1;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i32;
  var $i325: i1;
  var $p326: ref;
  var $p327: ref;
  var $p328: ref;
  var $i329: i32;
  var $i330: i1;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $i334: i32;
  var $i335: i1;
  var $p336: ref;
  var $p337: ref;
  var $p338: ref;
  var $i339: i32;
  var $i340: i1;
  var $p341: ref;
  var $p342: ref;
  var $p343: ref;
  var $i344: i32;
  var $i345: i1;
  var $p346: ref;
  var $p347: ref;
  var $p348: ref;
  var $i349: i32;
  var $i350: i1;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $i354: i32;
  var $i355: i1;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $i359: i32;
  var $i360: i1;
  var $p361: ref;
  var $p362: ref;
  var $p363: ref;
  var $i364: i32;
  var $i365: i1;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $i369: i32;
  var $i370: i1;
  var $p371: ref;
  var $p372: ref;
  var $p373: ref;
  var $i374: i32;
  var $i375: i1;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $i379: i32;
  var $i380: i1;
  var $p381: ref;
  var $p382: ref;
  var $p383: ref;
  var $i384: i32;
  var $i385: i1;
  var $p386: ref;
  var $p387: ref;
  var $p388: ref;
  var $i389: i32;
  var $i390: i1;
  var $p391: ref;
  var $p392: ref;
  var $p393: ref;
  var $i394: i32;
  var $i395: i1;
  var $p396: ref;
  var $p397: ref;
  var $p398: ref;
  var $i399: i32;
  var $i400: i1;
  var $p401: ref;
  var $p402: ref;
  var $p403: ref;
  var $i404: i32;
  var $i405: i1;
  var $p406: ref;
  var $p407: ref;
  var $p408: ref;
  var $i409: i32;
  var $i410: i1;
  var $p411: ref;
  var $p412: ref;
  var $p413: ref;
  var $i414: i32;
  var $i415: i1;
  var $p416: ref;
  var $p417: ref;
  var $p418: ref;
  var $i419: i32;
  var $i420: i1;
  var $p421: ref;
  var $p422: ref;
  var $p423: ref;
  var $i424: i32;
  var $i425: i1;
  var $p426: ref;
  var $p427: ref;
  var $p428: ref;
  var $i429: i32;
  var $i430: i1;
  var $p431: ref;
  var $p432: ref;
  var $p433: ref;
  var $i434: i32;
  var $i435: i1;
  var $p436: ref;
  var $p437: ref;
  var $p438: ref;
  var $i439: i32;
  var $i440: i1;
  var $p441: ref;
  var $p442: ref;
  var $p443: ref;
  var $i444: i32;
  var $i445: i1;
  var $p446: ref;
  var $p447: ref;
  var $p448: ref;
  var $i449: i32;
  var $i450: i1;
  var $p451: ref;
  var $p452: ref;
  var $p453: ref;
  var $i454: i32;
  var $i455: i1;
  var $p456: ref;
  var $p457: ref;
  var $p458: ref;
  var $i459: i32;
  var $i460: i1;
  var $p461: ref;
  var $p462: ref;
  var $p463: ref;
  var $i464: i32;
  var $i465: i1;
  var $p466: ref;
  var $p467: ref;
  var $p468: ref;
  var $i469: i32;
  var $i470: i1;
  var $p471: ref;
  var $p472: ref;
  var $p473: ref;
  var $i474: i32;
  var $i475: i1;
  var $p476: ref;
  var $p477: ref;
  var $p478: ref;
  var $i479: i32;
  var $i480: i1;
  var $p481: ref;
  var $p482: ref;
  var $p483: ref;
  var $i484: i32;
  var $i485: i1;
  var $p486: ref;
  var $p487: ref;
  var $p488: ref;
  var $i489: i32;
  var $i490: i1;
  var $p491: ref;
  var $p492: ref;
  var $p493: ref;
  var $i494: i32;
  var $i495: i1;
  var $p496: ref;
  var $p497: ref;
  var $p498: ref;
  var $i499: i32;
  var $i500: i1;
  var $p501: ref;
  var $p502: ref;
  var $p503: ref;
  var $i504: i32;
  var $i505: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_5;

  corral_source_split_5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1} $p1 := dev_get_drvdata($p0);
    goto corral_source_split_6;

  corral_source_split_6:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p1);
    goto corral_source_split_7;

  corral_source_split_7:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(8, 1));
    goto corral_source_split_8;

  corral_source_split_8:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2} ldv_mutex_lock_10($p3);
    goto SeqInstr_1, SeqInstr_2;

  SeqInstr_2:
    assume assertsPassed;
    goto SeqInstr_3;

  SeqInstr_3:
    goto corral_source_split_9;

  corral_source_split_9:
    assume {:verifier.code 0} true;
    $p4 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(170, 1));
    goto corral_source_split_10;

  corral_source_split_10:
    assume {:verifier.code 0} true;
    $i5 := $load.i8($M.0, $p4);
    goto corral_source_split_11;

  corral_source_split_11:
    assume {:verifier.code 0} true;
    $i6 := $sext.i8.i32($i5);
    goto corral_source_split_12;

  corral_source_split_12:
    assume {:verifier.code 0} true;
    $i7 := $eq.i32($i6, 0);
    goto corral_source_split_13;

  corral_source_split_13:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i7 == 1);
    goto corral_source_split_22;

  corral_source_split_22:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(176, 1));
    goto corral_source_split_23;

  corral_source_split_23:
    assume {:verifier.code 0} true;
    $i9 := $load.i64($M.0, $p8);
    goto corral_source_split_24;

  corral_source_split_24:
    assume {:verifier.code 0} true;
    $i10 := $load.i64($M.0, jiffies);
    goto corral_source_split_25;

  corral_source_split_25:
    assume {:verifier.code 0} true;
    $i11 := $sub.i64($i9, $i10);
    goto corral_source_split_26;

  corral_source_split_26:
    assume {:verifier.code 0} true;
    $i12 := $add.i64($i11, 250);
    goto corral_source_split_27;

  corral_source_split_27:
    assume {:verifier.code 0} true;
    $i13 := $slt.i64($i12, 0);
    goto corral_source_split_28;

  corral_source_split_28:
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i13 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(8, 1));
    goto corral_source_split_32;

  corral_source_split_32:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5} ldv_mutex_unlock_11($p40);
    goto SeqInstr_4, SeqInstr_5;

  SeqInstr_5:
    assume assertsPassed;
    goto SeqInstr_6;

  SeqInstr_6:
    goto corral_source_split_33;

  corral_source_split_33:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(170, 1));
    goto corral_source_split_34;

  corral_source_split_34:
    assume {:verifier.code 0} true;
    $i42 := $load.i8($M.0, $p41);
    goto corral_source_split_35;

  corral_source_split_35:
    assume {:verifier.code 0} true;
    $i43 := $sext.i8.i32($i42);
    goto corral_source_split_36;

  corral_source_split_36:
    assume {:verifier.code 0} true;
    $i44 := $ne.i32($i43, 0);
    goto corral_source_split_37;

  corral_source_split_37:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i44 == 1);
    goto corral_source_split_81;

  corral_source_split_81:
    assume {:verifier.code 0} true;
    $p45 := $0.ref;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    goto corral_source_split_83;

  corral_source_split_83:
    assume {:verifier.code 0} true;
    $r := $p45;
    return;

  $bb35:
    assume $i44 == 1;
    goto corral_source_split_79;

  corral_source_split_79:
    assume {:verifier.code 0} true;
    $p45 := $p1;
    goto $bb37;

  SeqInstr_4:
    assume !assertsPassed;
    return;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i13 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(170, 1));
    goto corral_source_split_15;

  corral_source_split_15:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p14, 0);
    goto corral_source_split_16;

  corral_source_split_16:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18064, 1));
    goto corral_source_split_17;

  corral_source_split_17:
    assume {:verifier.code 0} true;
    $p16 := $bitcast.ref.ref($p15);
    goto corral_source_split_18;

  corral_source_split_18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 3} $i17 := abituguru3_read_increment_offset($p2, 1, 30, 1, $p16, 6);
    call {:si_unique_call 4} {:cexpr "tmp___0"} boogie_si_record_i32($i17);
    goto corral_source_split_19;

  corral_source_split_19:
    assume {:verifier.code 0} true;
    $i18 := $ne.i32($i17, 6);
    goto corral_source_split_20;

  corral_source_split_20:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i18 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_39;

  corral_source_split_39:
    assume {:verifier.code 0} true;
    $p20 := $bitcast.ref.ref($p19);
    goto corral_source_split_40;

  corral_source_split_40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 6} $i21 := abituguru3_read($p2, 8, $sub.i8(0, 128), 1, $p20);
    call {:si_unique_call 7} {:cexpr "tmp___1"} boogie_si_record_i32($i21);
    goto corral_source_split_41;

  corral_source_split_41:
    assume {:verifier.code 0} true;
    $i22 := $ne.i32($i21, 1);
    goto corral_source_split_42;

  corral_source_split_42:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb14;

  $bb14:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_44;

  corral_source_split_44:
    assume {:verifier.code 0} true;
    $p24 := $bitcast.ref.ref($p23);
    goto corral_source_split_45;

  corral_source_split_45:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8} $i25 := abituguru3_read_increment_offset($p2, 1, 36, 1, $p24, 3);
    call {:si_unique_call 9} {:cexpr "tmp___2"} boogie_si_record_i32($i25);
    goto corral_source_split_46;

  corral_source_split_46:
    assume {:verifier.code 0} true;
    $i26 := $ne.i32($i25, 3);
    goto corral_source_split_47;

  corral_source_split_47:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb18;

  $bb18:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $p196 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_49;

  corral_source_split_49:
    assume {:verifier.code 0} true;
    $p197 := $bitcast.ref.ref($p196);
    goto corral_source_split_50;

  corral_source_split_50:
    assume {:verifier.code 0} true;
    $p198 := $add.ref($p197, $mul.ref(1, 1));
    goto corral_source_split_51;

  corral_source_split_51:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10} $i199 := abituguru3_read($p2, 8, $sub.i8(0, 127), 1, $p198);
    goto corral_source_split_52;

  corral_source_split_52:
    assume {:verifier.code 0} true;
    $i200 := $ne.i32($i199, 1);
    goto corral_source_split_53;

  corral_source_split_53:
    assume {:verifier.code 0} true;
    assume {:branchcond $i200} true;
    goto $bb142, $bb143;

  $bb143:
    assume !($i200 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    $p201 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_259;

  corral_source_split_259:
    assume {:verifier.code 0} true;
    $p202 := $bitcast.ref.ref($p201);
    goto corral_source_split_260;

  corral_source_split_260:
    assume {:verifier.code 0} true;
    $p203 := $add.ref($p202, $mul.ref(1, 1));
    goto corral_source_split_261;

  corral_source_split_261:
    assume {:verifier.code 0} true;
    call {:si_unique_call 45} $i204 := abituguru3_read_increment_offset($p2, 1, 39, 1, $p203, 3);
    goto corral_source_split_262;

  corral_source_split_262:
    assume {:verifier.code 0} true;
    $i205 := $ne.i32($i204, 3);
    goto corral_source_split_263;

  corral_source_split_263:
    assume {:verifier.code 0} true;
    assume {:branchcond $i205} true;
    goto $bb145, $bb146;

  $bb146:
    assume !($i205 == 1);
    assume {:verifier.code 0} true;
    goto $bb147;

  $bb147:
    assume {:verifier.code 0} true;
    goto $bb148;

  $bb148:
    assume {:verifier.code 0} true;
    $p206 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_265;

  corral_source_split_265:
    assume {:verifier.code 0} true;
    $p207 := $bitcast.ref.ref($p206);
    goto corral_source_split_266;

  corral_source_split_266:
    assume {:verifier.code 0} true;
    $p208 := $add.ref($p207, $mul.ref(2, 1));
    goto corral_source_split_267;

  corral_source_split_267:
    assume {:verifier.code 0} true;
    call {:si_unique_call 46} $i209 := abituguru3_read($p2, 8, $sub.i8(0, 126), 1, $p208);
    goto corral_source_split_268;

  corral_source_split_268:
    assume {:verifier.code 0} true;
    $i210 := $ne.i32($i209, 1);
    goto corral_source_split_269;

  corral_source_split_269:
    assume {:verifier.code 0} true;
    assume {:branchcond $i210} true;
    goto $bb149, $bb150;

  $bb150:
    assume !($i210 == 1);
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb151:
    assume {:verifier.code 0} true;
    $p211 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_271;

  corral_source_split_271:
    assume {:verifier.code 0} true;
    $p212 := $bitcast.ref.ref($p211);
    goto corral_source_split_272;

  corral_source_split_272:
    assume {:verifier.code 0} true;
    $p213 := $add.ref($p212, $mul.ref(2, 1));
    goto corral_source_split_273;

  corral_source_split_273:
    assume {:verifier.code 0} true;
    call {:si_unique_call 47} $i214 := abituguru3_read_increment_offset($p2, 1, 42, 1, $p213, 3);
    goto corral_source_split_274;

  corral_source_split_274:
    assume {:verifier.code 0} true;
    $i215 := $ne.i32($i214, 3);
    goto corral_source_split_275;

  corral_source_split_275:
    assume {:verifier.code 0} true;
    assume {:branchcond $i215} true;
    goto $bb152, $bb153;

  $bb153:
    assume !($i215 == 1);
    assume {:verifier.code 0} true;
    goto $bb154;

  $bb154:
    assume {:verifier.code 0} true;
    goto $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    $p216 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_277;

  corral_source_split_277:
    assume {:verifier.code 0} true;
    $p217 := $bitcast.ref.ref($p216);
    goto corral_source_split_278;

  corral_source_split_278:
    assume {:verifier.code 0} true;
    $p218 := $add.ref($p217, $mul.ref(3, 1));
    goto corral_source_split_279;

  corral_source_split_279:
    assume {:verifier.code 0} true;
    call {:si_unique_call 48} $i219 := abituguru3_read($p2, 8, $sub.i8(0, 125), 1, $p218);
    goto corral_source_split_280;

  corral_source_split_280:
    assume {:verifier.code 0} true;
    $i220 := $ne.i32($i219, 1);
    goto corral_source_split_281;

  corral_source_split_281:
    assume {:verifier.code 0} true;
    assume {:branchcond $i220} true;
    goto $bb156, $bb157;

  $bb157:
    assume !($i220 == 1);
    assume {:verifier.code 0} true;
    goto $bb158;

  $bb158:
    assume {:verifier.code 0} true;
    $p221 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_283;

  corral_source_split_283:
    assume {:verifier.code 0} true;
    $p222 := $bitcast.ref.ref($p221);
    goto corral_source_split_284;

  corral_source_split_284:
    assume {:verifier.code 0} true;
    $p223 := $add.ref($p222, $mul.ref(3, 1));
    goto corral_source_split_285;

  corral_source_split_285:
    assume {:verifier.code 0} true;
    call {:si_unique_call 49} $i224 := abituguru3_read_increment_offset($p2, 1, 45, 1, $p223, 3);
    goto corral_source_split_286;

  corral_source_split_286:
    assume {:verifier.code 0} true;
    $i225 := $ne.i32($i224, 3);
    goto corral_source_split_287;

  corral_source_split_287:
    assume {:verifier.code 0} true;
    assume {:branchcond $i225} true;
    goto $bb159, $bb160;

  $bb160:
    assume !($i225 == 1);
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb161:
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    $p226 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_289;

  corral_source_split_289:
    assume {:verifier.code 0} true;
    $p227 := $bitcast.ref.ref($p226);
    goto corral_source_split_290;

  corral_source_split_290:
    assume {:verifier.code 0} true;
    $p228 := $add.ref($p227, $mul.ref(4, 1));
    goto corral_source_split_291;

  corral_source_split_291:
    assume {:verifier.code 0} true;
    call {:si_unique_call 50} $i229 := abituguru3_read($p2, 8, $sub.i8(0, 124), 1, $p228);
    goto corral_source_split_292;

  corral_source_split_292:
    assume {:verifier.code 0} true;
    $i230 := $ne.i32($i229, 1);
    goto corral_source_split_293;

  corral_source_split_293:
    assume {:verifier.code 0} true;
    assume {:branchcond $i230} true;
    goto $bb163, $bb164;

  $bb164:
    assume !($i230 == 1);
    assume {:verifier.code 0} true;
    goto $bb165;

  $bb165:
    assume {:verifier.code 0} true;
    $p231 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_295;

  corral_source_split_295:
    assume {:verifier.code 0} true;
    $p232 := $bitcast.ref.ref($p231);
    goto corral_source_split_296;

  corral_source_split_296:
    assume {:verifier.code 0} true;
    $p233 := $add.ref($p232, $mul.ref(4, 1));
    goto corral_source_split_297;

  corral_source_split_297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 51} $i234 := abituguru3_read_increment_offset($p2, 1, 48, 1, $p233, 3);
    goto corral_source_split_298;

  corral_source_split_298:
    assume {:verifier.code 0} true;
    $i235 := $ne.i32($i234, 3);
    goto corral_source_split_299;

  corral_source_split_299:
    assume {:verifier.code 0} true;
    assume {:branchcond $i235} true;
    goto $bb166, $bb167;

  $bb167:
    assume !($i235 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb169:
    assume {:verifier.code 0} true;
    $p236 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_301;

  corral_source_split_301:
    assume {:verifier.code 0} true;
    $p237 := $bitcast.ref.ref($p236);
    goto corral_source_split_302;

  corral_source_split_302:
    assume {:verifier.code 0} true;
    $p238 := $add.ref($p237, $mul.ref(5, 1));
    goto corral_source_split_303;

  corral_source_split_303:
    assume {:verifier.code 0} true;
    call {:si_unique_call 52} $i239 := abituguru3_read($p2, 8, $sub.i8(0, 123), 1, $p238);
    goto corral_source_split_304;

  corral_source_split_304:
    assume {:verifier.code 0} true;
    $i240 := $ne.i32($i239, 1);
    goto corral_source_split_305;

  corral_source_split_305:
    assume {:verifier.code 0} true;
    assume {:branchcond $i240} true;
    goto $bb170, $bb171;

  $bb171:
    assume !($i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb172;

  $bb172:
    assume {:verifier.code 0} true;
    $p241 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_307;

  corral_source_split_307:
    assume {:verifier.code 0} true;
    $p242 := $bitcast.ref.ref($p241);
    goto corral_source_split_308;

  corral_source_split_308:
    assume {:verifier.code 0} true;
    $p243 := $add.ref($p242, $mul.ref(5, 1));
    goto corral_source_split_309;

  corral_source_split_309:
    assume {:verifier.code 0} true;
    call {:si_unique_call 53} $i244 := abituguru3_read_increment_offset($p2, 1, 51, 1, $p243, 3);
    goto corral_source_split_310;

  corral_source_split_310:
    assume {:verifier.code 0} true;
    $i245 := $ne.i32($i244, 3);
    goto corral_source_split_311;

  corral_source_split_311:
    assume {:verifier.code 0} true;
    assume {:branchcond $i245} true;
    goto $bb173, $bb174;

  $bb174:
    assume !($i245 == 1);
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    goto $bb176;

  $bb176:
    assume {:verifier.code 0} true;
    $p246 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_313;

  corral_source_split_313:
    assume {:verifier.code 0} true;
    $p247 := $bitcast.ref.ref($p246);
    goto corral_source_split_314;

  corral_source_split_314:
    assume {:verifier.code 0} true;
    $p248 := $add.ref($p247, $mul.ref(6, 1));
    goto corral_source_split_315;

  corral_source_split_315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 54} $i249 := abituguru3_read($p2, 8, $sub.i8(0, 122), 1, $p248);
    goto corral_source_split_316;

  corral_source_split_316:
    assume {:verifier.code 0} true;
    $i250 := $ne.i32($i249, 1);
    goto corral_source_split_317;

  corral_source_split_317:
    assume {:verifier.code 0} true;
    assume {:branchcond $i250} true;
    goto $bb177, $bb178;

  $bb178:
    assume !($i250 == 1);
    assume {:verifier.code 0} true;
    goto $bb179;

  $bb179:
    assume {:verifier.code 0} true;
    $p251 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_319;

  corral_source_split_319:
    assume {:verifier.code 0} true;
    $p252 := $bitcast.ref.ref($p251);
    goto corral_source_split_320;

  corral_source_split_320:
    assume {:verifier.code 0} true;
    $p253 := $add.ref($p252, $mul.ref(6, 1));
    goto corral_source_split_321;

  corral_source_split_321:
    assume {:verifier.code 0} true;
    call {:si_unique_call 55} $i254 := abituguru3_read_increment_offset($p2, 1, 54, 1, $p253, 3);
    goto corral_source_split_322;

  corral_source_split_322:
    assume {:verifier.code 0} true;
    $i255 := $ne.i32($i254, 3);
    goto corral_source_split_323;

  corral_source_split_323:
    assume {:verifier.code 0} true;
    assume {:branchcond $i255} true;
    goto $bb180, $bb181;

  $bb181:
    assume !($i255 == 1);
    assume {:verifier.code 0} true;
    goto $bb182;

  $bb182:
    assume {:verifier.code 0} true;
    goto $bb183;

  $bb183:
    assume {:verifier.code 0} true;
    $p256 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_325;

  corral_source_split_325:
    assume {:verifier.code 0} true;
    $p257 := $bitcast.ref.ref($p256);
    goto corral_source_split_326;

  corral_source_split_326:
    assume {:verifier.code 0} true;
    $p258 := $add.ref($p257, $mul.ref(7, 1));
    goto corral_source_split_327;

  corral_source_split_327:
    assume {:verifier.code 0} true;
    call {:si_unique_call 56} $i259 := abituguru3_read($p2, 8, $sub.i8(0, 121), 1, $p258);
    goto corral_source_split_328;

  corral_source_split_328:
    assume {:verifier.code 0} true;
    $i260 := $ne.i32($i259, 1);
    goto corral_source_split_329;

  corral_source_split_329:
    assume {:verifier.code 0} true;
    assume {:branchcond $i260} true;
    goto $bb184, $bb185;

  $bb185:
    assume !($i260 == 1);
    assume {:verifier.code 0} true;
    goto $bb186;

  $bb186:
    assume {:verifier.code 0} true;
    $p261 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_331;

  corral_source_split_331:
    assume {:verifier.code 0} true;
    $p262 := $bitcast.ref.ref($p261);
    goto corral_source_split_332;

  corral_source_split_332:
    assume {:verifier.code 0} true;
    $p263 := $add.ref($p262, $mul.ref(7, 1));
    goto corral_source_split_333;

  corral_source_split_333:
    assume {:verifier.code 0} true;
    call {:si_unique_call 57} $i264 := abituguru3_read_increment_offset($p2, 1, 57, 1, $p263, 3);
    goto corral_source_split_334;

  corral_source_split_334:
    assume {:verifier.code 0} true;
    $i265 := $ne.i32($i264, 3);
    goto corral_source_split_335;

  corral_source_split_335:
    assume {:verifier.code 0} true;
    assume {:branchcond $i265} true;
    goto $bb187, $bb188;

  $bb188:
    assume !($i265 == 1);
    assume {:verifier.code 0} true;
    goto $bb189;

  $bb189:
    assume {:verifier.code 0} true;
    goto $bb190;

  $bb190:
    assume {:verifier.code 0} true;
    $p266 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_337;

  corral_source_split_337:
    assume {:verifier.code 0} true;
    $p267 := $bitcast.ref.ref($p266);
    goto corral_source_split_338;

  corral_source_split_338:
    assume {:verifier.code 0} true;
    $p268 := $add.ref($p267, $mul.ref(8, 1));
    goto corral_source_split_339;

  corral_source_split_339:
    assume {:verifier.code 0} true;
    call {:si_unique_call 58} $i269 := abituguru3_read($p2, 8, $sub.i8(0, 120), 1, $p268);
    goto corral_source_split_340;

  corral_source_split_340:
    assume {:verifier.code 0} true;
    $i270 := $ne.i32($i269, 1);
    goto corral_source_split_341;

  corral_source_split_341:
    assume {:verifier.code 0} true;
    assume {:branchcond $i270} true;
    goto $bb191, $bb192;

  $bb192:
    assume !($i270 == 1);
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb193:
    assume {:verifier.code 0} true;
    $p271 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_343;

  corral_source_split_343:
    assume {:verifier.code 0} true;
    $p272 := $bitcast.ref.ref($p271);
    goto corral_source_split_344;

  corral_source_split_344:
    assume {:verifier.code 0} true;
    $p273 := $add.ref($p272, $mul.ref(8, 1));
    goto corral_source_split_345;

  corral_source_split_345:
    assume {:verifier.code 0} true;
    call {:si_unique_call 59} $i274 := abituguru3_read_increment_offset($p2, 1, 60, 1, $p273, 3);
    goto corral_source_split_346;

  corral_source_split_346:
    assume {:verifier.code 0} true;
    $i275 := $ne.i32($i274, 3);
    goto corral_source_split_347;

  corral_source_split_347:
    assume {:verifier.code 0} true;
    assume {:branchcond $i275} true;
    goto $bb194, $bb195;

  $bb195:
    assume !($i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb196;

  $bb196:
    assume {:verifier.code 0} true;
    goto $bb197;

  $bb197:
    assume {:verifier.code 0} true;
    $p276 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_349;

  corral_source_split_349:
    assume {:verifier.code 0} true;
    $p277 := $bitcast.ref.ref($p276);
    goto corral_source_split_350;

  corral_source_split_350:
    assume {:verifier.code 0} true;
    $p278 := $add.ref($p277, $mul.ref(9, 1));
    goto corral_source_split_351;

  corral_source_split_351:
    assume {:verifier.code 0} true;
    call {:si_unique_call 60} $i279 := abituguru3_read($p2, 8, $sub.i8(0, 119), 1, $p278);
    goto corral_source_split_352;

  corral_source_split_352:
    assume {:verifier.code 0} true;
    $i280 := $ne.i32($i279, 1);
    goto corral_source_split_353;

  corral_source_split_353:
    assume {:verifier.code 0} true;
    assume {:branchcond $i280} true;
    goto $bb198, $bb199;

  $bb199:
    assume !($i280 == 1);
    assume {:verifier.code 0} true;
    goto $bb200;

  $bb200:
    assume {:verifier.code 0} true;
    $p281 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_355;

  corral_source_split_355:
    assume {:verifier.code 0} true;
    $p282 := $bitcast.ref.ref($p281);
    goto corral_source_split_356;

  corral_source_split_356:
    assume {:verifier.code 0} true;
    $p283 := $add.ref($p282, $mul.ref(9, 1));
    goto corral_source_split_357;

  corral_source_split_357:
    assume {:verifier.code 0} true;
    call {:si_unique_call 61} $i284 := abituguru3_read_increment_offset($p2, 1, 63, 1, $p283, 3);
    goto corral_source_split_358;

  corral_source_split_358:
    assume {:verifier.code 0} true;
    $i285 := $ne.i32($i284, 3);
    goto corral_source_split_359;

  corral_source_split_359:
    assume {:verifier.code 0} true;
    assume {:branchcond $i285} true;
    goto $bb201, $bb202;

  $bb202:
    assume !($i285 == 1);
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb203:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb204:
    assume {:verifier.code 0} true;
    $p286 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_361;

  corral_source_split_361:
    assume {:verifier.code 0} true;
    $p287 := $bitcast.ref.ref($p286);
    goto corral_source_split_362;

  corral_source_split_362:
    assume {:verifier.code 0} true;
    $p288 := $add.ref($p287, $mul.ref(10, 1));
    goto corral_source_split_363;

  corral_source_split_363:
    assume {:verifier.code 0} true;
    call {:si_unique_call 62} $i289 := abituguru3_read($p2, 8, $sub.i8(0, 118), 1, $p288);
    goto corral_source_split_364;

  corral_source_split_364:
    assume {:verifier.code 0} true;
    $i290 := $ne.i32($i289, 1);
    goto corral_source_split_365;

  corral_source_split_365:
    assume {:verifier.code 0} true;
    assume {:branchcond $i290} true;
    goto $bb205, $bb206;

  $bb206:
    assume !($i290 == 1);
    assume {:verifier.code 0} true;
    goto $bb207;

  $bb207:
    assume {:verifier.code 0} true;
    $p291 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_367;

  corral_source_split_367:
    assume {:verifier.code 0} true;
    $p292 := $bitcast.ref.ref($p291);
    goto corral_source_split_368;

  corral_source_split_368:
    assume {:verifier.code 0} true;
    $p293 := $add.ref($p292, $mul.ref(10, 1));
    goto corral_source_split_369;

  corral_source_split_369:
    assume {:verifier.code 0} true;
    call {:si_unique_call 63} $i294 := abituguru3_read_increment_offset($p2, 1, 66, 1, $p293, 3);
    goto corral_source_split_370;

  corral_source_split_370:
    assume {:verifier.code 0} true;
    $i295 := $ne.i32($i294, 3);
    goto corral_source_split_371;

  corral_source_split_371:
    assume {:verifier.code 0} true;
    assume {:branchcond $i295} true;
    goto $bb208, $bb209;

  $bb209:
    assume !($i295 == 1);
    assume {:verifier.code 0} true;
    goto $bb210;

  $bb210:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    $p296 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_373;

  corral_source_split_373:
    assume {:verifier.code 0} true;
    $p297 := $bitcast.ref.ref($p296);
    goto corral_source_split_374;

  corral_source_split_374:
    assume {:verifier.code 0} true;
    $p298 := $add.ref($p297, $mul.ref(11, 1));
    goto corral_source_split_375;

  corral_source_split_375:
    assume {:verifier.code 0} true;
    call {:si_unique_call 64} $i299 := abituguru3_read($p2, 8, $sub.i8(0, 117), 1, $p298);
    goto corral_source_split_376;

  corral_source_split_376:
    assume {:verifier.code 0} true;
    $i300 := $ne.i32($i299, 1);
    goto corral_source_split_377;

  corral_source_split_377:
    assume {:verifier.code 0} true;
    assume {:branchcond $i300} true;
    goto $bb212, $bb213;

  $bb213:
    assume !($i300 == 1);
    assume {:verifier.code 0} true;
    goto $bb214;

  $bb214:
    assume {:verifier.code 0} true;
    $p301 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_379;

  corral_source_split_379:
    assume {:verifier.code 0} true;
    $p302 := $bitcast.ref.ref($p301);
    goto corral_source_split_380;

  corral_source_split_380:
    assume {:verifier.code 0} true;
    $p303 := $add.ref($p302, $mul.ref(11, 1));
    goto corral_source_split_381;

  corral_source_split_381:
    assume {:verifier.code 0} true;
    call {:si_unique_call 65} $i304 := abituguru3_read_increment_offset($p2, 1, 69, 1, $p303, 3);
    goto corral_source_split_382;

  corral_source_split_382:
    assume {:verifier.code 0} true;
    $i305 := $ne.i32($i304, 3);
    goto corral_source_split_383;

  corral_source_split_383:
    assume {:verifier.code 0} true;
    assume {:branchcond $i305} true;
    goto $bb215, $bb216;

  $bb216:
    assume !($i305 == 1);
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    goto $bb218;

  $bb218:
    assume {:verifier.code 0} true;
    $p306 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_385;

  corral_source_split_385:
    assume {:verifier.code 0} true;
    $p307 := $bitcast.ref.ref($p306);
    goto corral_source_split_386;

  corral_source_split_386:
    assume {:verifier.code 0} true;
    $p308 := $add.ref($p307, $mul.ref(12, 1));
    goto corral_source_split_387;

  corral_source_split_387:
    assume {:verifier.code 0} true;
    call {:si_unique_call 66} $i309 := abituguru3_read($p2, 8, $sub.i8(0, 116), 1, $p308);
    goto corral_source_split_388;

  corral_source_split_388:
    assume {:verifier.code 0} true;
    $i310 := $ne.i32($i309, 1);
    goto corral_source_split_389;

  corral_source_split_389:
    assume {:verifier.code 0} true;
    assume {:branchcond $i310} true;
    goto $bb219, $bb220;

  $bb220:
    assume !($i310 == 1);
    assume {:verifier.code 0} true;
    goto $bb221;

  $bb221:
    assume {:verifier.code 0} true;
    $p311 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_391;

  corral_source_split_391:
    assume {:verifier.code 0} true;
    $p312 := $bitcast.ref.ref($p311);
    goto corral_source_split_392;

  corral_source_split_392:
    assume {:verifier.code 0} true;
    $p313 := $add.ref($p312, $mul.ref(12, 1));
    goto corral_source_split_393;

  corral_source_split_393:
    assume {:verifier.code 0} true;
    call {:si_unique_call 67} $i314 := abituguru3_read_increment_offset($p2, 1, 72, 1, $p313, 3);
    goto corral_source_split_394;

  corral_source_split_394:
    assume {:verifier.code 0} true;
    $i315 := $ne.i32($i314, 3);
    goto corral_source_split_395;

  corral_source_split_395:
    assume {:verifier.code 0} true;
    assume {:branchcond $i315} true;
    goto $bb222, $bb223;

  $bb223:
    assume !($i315 == 1);
    assume {:verifier.code 0} true;
    goto $bb224;

  $bb224:
    assume {:verifier.code 0} true;
    goto $bb225;

  $bb225:
    assume {:verifier.code 0} true;
    $p316 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_397;

  corral_source_split_397:
    assume {:verifier.code 0} true;
    $p317 := $bitcast.ref.ref($p316);
    goto corral_source_split_398;

  corral_source_split_398:
    assume {:verifier.code 0} true;
    $p318 := $add.ref($p317, $mul.ref(13, 1));
    goto corral_source_split_399;

  corral_source_split_399:
    assume {:verifier.code 0} true;
    call {:si_unique_call 68} $i319 := abituguru3_read($p2, 8, $sub.i8(0, 115), 1, $p318);
    goto corral_source_split_400;

  corral_source_split_400:
    assume {:verifier.code 0} true;
    $i320 := $ne.i32($i319, 1);
    goto corral_source_split_401;

  corral_source_split_401:
    assume {:verifier.code 0} true;
    assume {:branchcond $i320} true;
    goto $bb226, $bb227;

  $bb227:
    assume !($i320 == 1);
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb228:
    assume {:verifier.code 0} true;
    $p321 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_403;

  corral_source_split_403:
    assume {:verifier.code 0} true;
    $p322 := $bitcast.ref.ref($p321);
    goto corral_source_split_404;

  corral_source_split_404:
    assume {:verifier.code 0} true;
    $p323 := $add.ref($p322, $mul.ref(13, 1));
    goto corral_source_split_405;

  corral_source_split_405:
    assume {:verifier.code 0} true;
    call {:si_unique_call 69} $i324 := abituguru3_read_increment_offset($p2, 1, 75, 1, $p323, 3);
    goto corral_source_split_406;

  corral_source_split_406:
    assume {:verifier.code 0} true;
    $i325 := $ne.i32($i324, 3);
    goto corral_source_split_407;

  corral_source_split_407:
    assume {:verifier.code 0} true;
    assume {:branchcond $i325} true;
    goto $bb229, $bb230;

  $bb230:
    assume !($i325 == 1);
    assume {:verifier.code 0} true;
    goto $bb231;

  $bb231:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb232:
    assume {:verifier.code 0} true;
    $p326 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_409;

  corral_source_split_409:
    assume {:verifier.code 0} true;
    $p327 := $bitcast.ref.ref($p326);
    goto corral_source_split_410;

  corral_source_split_410:
    assume {:verifier.code 0} true;
    $p328 := $add.ref($p327, $mul.ref(14, 1));
    goto corral_source_split_411;

  corral_source_split_411:
    assume {:verifier.code 0} true;
    call {:si_unique_call 70} $i329 := abituguru3_read($p2, 8, $sub.i8(0, 114), 1, $p328);
    goto corral_source_split_412;

  corral_source_split_412:
    assume {:verifier.code 0} true;
    $i330 := $ne.i32($i329, 1);
    goto corral_source_split_413;

  corral_source_split_413:
    assume {:verifier.code 0} true;
    assume {:branchcond $i330} true;
    goto $bb233, $bb234;

  $bb234:
    assume !($i330 == 1);
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb235:
    assume {:verifier.code 0} true;
    $p331 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_415;

  corral_source_split_415:
    assume {:verifier.code 0} true;
    $p332 := $bitcast.ref.ref($p331);
    goto corral_source_split_416;

  corral_source_split_416:
    assume {:verifier.code 0} true;
    $p333 := $add.ref($p332, $mul.ref(14, 1));
    goto corral_source_split_417;

  corral_source_split_417:
    assume {:verifier.code 0} true;
    call {:si_unique_call 71} $i334 := abituguru3_read_increment_offset($p2, 1, 78, 1, $p333, 3);
    goto corral_source_split_418;

  corral_source_split_418:
    assume {:verifier.code 0} true;
    $i335 := $ne.i32($i334, 3);
    goto corral_source_split_419;

  corral_source_split_419:
    assume {:verifier.code 0} true;
    assume {:branchcond $i335} true;
    goto $bb236, $bb237;

  $bb237:
    assume !($i335 == 1);
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb238:
    assume {:verifier.code 0} true;
    goto $bb239;

  $bb239:
    assume {:verifier.code 0} true;
    $p336 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_421;

  corral_source_split_421:
    assume {:verifier.code 0} true;
    $p337 := $bitcast.ref.ref($p336);
    goto corral_source_split_422;

  corral_source_split_422:
    assume {:verifier.code 0} true;
    $p338 := $add.ref($p337, $mul.ref(15, 1));
    goto corral_source_split_423;

  corral_source_split_423:
    assume {:verifier.code 0} true;
    call {:si_unique_call 72} $i339 := abituguru3_read($p2, 8, $sub.i8(0, 113), 1, $p338);
    goto corral_source_split_424;

  corral_source_split_424:
    assume {:verifier.code 0} true;
    $i340 := $ne.i32($i339, 1);
    goto corral_source_split_425;

  corral_source_split_425:
    assume {:verifier.code 0} true;
    assume {:branchcond $i340} true;
    goto $bb240, $bb241;

  $bb241:
    assume !($i340 == 1);
    assume {:verifier.code 0} true;
    goto $bb242;

  $bb242:
    assume {:verifier.code 0} true;
    $p341 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_427;

  corral_source_split_427:
    assume {:verifier.code 0} true;
    $p342 := $bitcast.ref.ref($p341);
    goto corral_source_split_428;

  corral_source_split_428:
    assume {:verifier.code 0} true;
    $p343 := $add.ref($p342, $mul.ref(15, 1));
    goto corral_source_split_429;

  corral_source_split_429:
    assume {:verifier.code 0} true;
    call {:si_unique_call 73} $i344 := abituguru3_read_increment_offset($p2, 1, 81, 1, $p343, 3);
    goto corral_source_split_430;

  corral_source_split_430:
    assume {:verifier.code 0} true;
    $i345 := $ne.i32($i344, 3);
    goto corral_source_split_431;

  corral_source_split_431:
    assume {:verifier.code 0} true;
    assume {:branchcond $i345} true;
    goto $bb243, $bb244;

  $bb244:
    assume !($i345 == 1);
    assume {:verifier.code 0} true;
    goto $bb245;

  $bb245:
    assume {:verifier.code 0} true;
    goto $bb246;

  $bb246:
    assume {:verifier.code 0} true;
    $p346 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_433;

  corral_source_split_433:
    assume {:verifier.code 0} true;
    $p347 := $bitcast.ref.ref($p346);
    goto corral_source_split_434;

  corral_source_split_434:
    assume {:verifier.code 0} true;
    $p348 := $add.ref($p347, $mul.ref(16, 1));
    goto corral_source_split_435;

  corral_source_split_435:
    assume {:verifier.code 0} true;
    call {:si_unique_call 74} $i349 := abituguru3_read($p2, 8, $sub.i8(0, 112), 1, $p348);
    goto corral_source_split_436;

  corral_source_split_436:
    assume {:verifier.code 0} true;
    $i350 := $ne.i32($i349, 1);
    goto corral_source_split_437;

  corral_source_split_437:
    assume {:verifier.code 0} true;
    assume {:branchcond $i350} true;
    goto $bb247, $bb248;

  $bb248:
    assume !($i350 == 1);
    assume {:verifier.code 0} true;
    goto $bb249;

  $bb249:
    assume {:verifier.code 0} true;
    $p351 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_439;

  corral_source_split_439:
    assume {:verifier.code 0} true;
    $p352 := $bitcast.ref.ref($p351);
    goto corral_source_split_440;

  corral_source_split_440:
    assume {:verifier.code 0} true;
    $p353 := $add.ref($p352, $mul.ref(16, 1));
    goto corral_source_split_441;

  corral_source_split_441:
    assume {:verifier.code 0} true;
    call {:si_unique_call 75} $i354 := abituguru3_read_increment_offset($p2, 1, 84, 1, $p353, 3);
    goto corral_source_split_442;

  corral_source_split_442:
    assume {:verifier.code 0} true;
    $i355 := $ne.i32($i354, 3);
    goto corral_source_split_443;

  corral_source_split_443:
    assume {:verifier.code 0} true;
    assume {:branchcond $i355} true;
    goto $bb250, $bb251;

  $bb251:
    assume !($i355 == 1);
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb252:
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb253:
    assume {:verifier.code 0} true;
    $p356 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_445;

  corral_source_split_445:
    assume {:verifier.code 0} true;
    $p357 := $bitcast.ref.ref($p356);
    goto corral_source_split_446;

  corral_source_split_446:
    assume {:verifier.code 0} true;
    $p358 := $add.ref($p357, $mul.ref(17, 1));
    goto corral_source_split_447;

  corral_source_split_447:
    assume {:verifier.code 0} true;
    call {:si_unique_call 76} $i359 := abituguru3_read($p2, 8, $sub.i8(0, 111), 1, $p358);
    goto corral_source_split_448;

  corral_source_split_448:
    assume {:verifier.code 0} true;
    $i360 := $ne.i32($i359, 1);
    goto corral_source_split_449;

  corral_source_split_449:
    assume {:verifier.code 0} true;
    assume {:branchcond $i360} true;
    goto $bb254, $bb255;

  $bb255:
    assume !($i360 == 1);
    assume {:verifier.code 0} true;
    goto $bb256;

  $bb256:
    assume {:verifier.code 0} true;
    $p361 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_451;

  corral_source_split_451:
    assume {:verifier.code 0} true;
    $p362 := $bitcast.ref.ref($p361);
    goto corral_source_split_452;

  corral_source_split_452:
    assume {:verifier.code 0} true;
    $p363 := $add.ref($p362, $mul.ref(17, 1));
    goto corral_source_split_453;

  corral_source_split_453:
    assume {:verifier.code 0} true;
    call {:si_unique_call 77} $i364 := abituguru3_read_increment_offset($p2, 1, 87, 1, $p363, 3);
    goto corral_source_split_454;

  corral_source_split_454:
    assume {:verifier.code 0} true;
    $i365 := $ne.i32($i364, 3);
    goto corral_source_split_455;

  corral_source_split_455:
    assume {:verifier.code 0} true;
    assume {:branchcond $i365} true;
    goto $bb257, $bb258;

  $bb258:
    assume !($i365 == 1);
    assume {:verifier.code 0} true;
    goto $bb259;

  $bb259:
    assume {:verifier.code 0} true;
    goto $bb260;

  $bb260:
    assume {:verifier.code 0} true;
    $p366 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $p367 := $bitcast.ref.ref($p366);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $p368 := $add.ref($p367, $mul.ref(18, 1));
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    call {:si_unique_call 78} $i369 := abituguru3_read($p2, 8, $sub.i8(0, 110), 1, $p368);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    $i370 := $ne.i32($i369, 1);
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    assume {:branchcond $i370} true;
    goto $bb261, $bb262;

  $bb262:
    assume !($i370 == 1);
    assume {:verifier.code 0} true;
    goto $bb263;

  $bb263:
    assume {:verifier.code 0} true;
    $p371 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $p372 := $bitcast.ref.ref($p371);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    $p373 := $add.ref($p372, $mul.ref(18, 1));
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    call {:si_unique_call 79} $i374 := abituguru3_read_increment_offset($p2, 1, 90, 1, $p373, 3);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    $i375 := $ne.i32($i374, 3);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    assume {:branchcond $i375} true;
    goto $bb264, $bb265;

  $bb265:
    assume !($i375 == 1);
    assume {:verifier.code 0} true;
    goto $bb266;

  $bb266:
    assume {:verifier.code 0} true;
    goto $bb267;

  $bb267:
    assume {:verifier.code 0} true;
    $p376 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    $p377 := $bitcast.ref.ref($p376);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    $p378 := $add.ref($p377, $mul.ref(19, 1));
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    call {:si_unique_call 80} $i379 := abituguru3_read($p2, 8, $sub.i8(0, 109), 1, $p378);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i380 := $ne.i32($i379, 1);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    assume {:branchcond $i380} true;
    goto $bb268, $bb269;

  $bb269:
    assume !($i380 == 1);
    assume {:verifier.code 0} true;
    goto $bb270;

  $bb270:
    assume {:verifier.code 0} true;
    $p381 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $p382 := $bitcast.ref.ref($p381);
    goto corral_source_split_476;

  corral_source_split_476:
    assume {:verifier.code 0} true;
    $p383 := $add.ref($p382, $mul.ref(19, 1));
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    call {:si_unique_call 81} $i384 := abituguru3_read_increment_offset($p2, 1, 93, 1, $p383, 3);
    goto corral_source_split_478;

  corral_source_split_478:
    assume {:verifier.code 0} true;
    $i385 := $ne.i32($i384, 3);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    assume {:branchcond $i385} true;
    goto $bb271, $bb272;

  $bb272:
    assume !($i385 == 1);
    assume {:verifier.code 0} true;
    goto $bb273;

  $bb273:
    assume {:verifier.code 0} true;
    goto $bb274;

  $bb274:
    assume {:verifier.code 0} true;
    $p386 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_481;

  corral_source_split_481:
    assume {:verifier.code 0} true;
    $p387 := $bitcast.ref.ref($p386);
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    $p388 := $add.ref($p387, $mul.ref(20, 1));
    goto corral_source_split_483;

  corral_source_split_483:
    assume {:verifier.code 0} true;
    call {:si_unique_call 82} $i389 := abituguru3_read($p2, 8, $sub.i8(0, 108), 1, $p388);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    $i390 := $ne.i32($i389, 1);
    goto corral_source_split_485;

  corral_source_split_485:
    assume {:verifier.code 0} true;
    assume {:branchcond $i390} true;
    goto $bb275, $bb276;

  $bb276:
    assume !($i390 == 1);
    assume {:verifier.code 0} true;
    goto $bb277;

  $bb277:
    assume {:verifier.code 0} true;
    $p391 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_487;

  corral_source_split_487:
    assume {:verifier.code 0} true;
    $p392 := $bitcast.ref.ref($p391);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    $p393 := $add.ref($p392, $mul.ref(20, 1));
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    call {:si_unique_call 83} $i394 := abituguru3_read_increment_offset($p2, 1, 96, 1, $p393, 3);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i395 := $ne.i32($i394, 3);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    assume {:branchcond $i395} true;
    goto $bb278, $bb279;

  $bb279:
    assume !($i395 == 1);
    assume {:verifier.code 0} true;
    goto $bb280;

  $bb280:
    assume {:verifier.code 0} true;
    goto $bb281;

  $bb281:
    assume {:verifier.code 0} true;
    $p396 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $p397 := $bitcast.ref.ref($p396);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $p398 := $add.ref($p397, $mul.ref(21, 1));
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    call {:si_unique_call 84} $i399 := abituguru3_read($p2, 8, $sub.i8(0, 107), 1, $p398);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    $i400 := $ne.i32($i399, 1);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    assume {:branchcond $i400} true;
    goto $bb282, $bb283;

  $bb283:
    assume !($i400 == 1);
    assume {:verifier.code 0} true;
    goto $bb284;

  $bb284:
    assume {:verifier.code 0} true;
    $p401 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    $p402 := $bitcast.ref.ref($p401);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    $p403 := $add.ref($p402, $mul.ref(21, 1));
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    call {:si_unique_call 85} $i404 := abituguru3_read_increment_offset($p2, 1, 99, 1, $p403, 3);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i405 := $ne.i32($i404, 3);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    assume {:branchcond $i405} true;
    goto $bb285, $bb286;

  $bb286:
    assume !($i405 == 1);
    assume {:verifier.code 0} true;
    goto $bb287;

  $bb287:
    assume {:verifier.code 0} true;
    goto $bb288;

  $bb288:
    assume {:verifier.code 0} true;
    $p406 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $p407 := $bitcast.ref.ref($p406);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $p408 := $add.ref($p407, $mul.ref(22, 1));
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 86} $i409 := abituguru3_read($p2, 8, $sub.i8(0, 106), 1, $p408);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    $i410 := $ne.i32($i409, 1);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    assume {:branchcond $i410} true;
    goto $bb289, $bb290;

  $bb290:
    assume !($i410 == 1);
    assume {:verifier.code 0} true;
    goto $bb291;

  $bb291:
    assume {:verifier.code 0} true;
    $p411 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    $p412 := $bitcast.ref.ref($p411);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $p413 := $add.ref($p412, $mul.ref(22, 1));
    goto corral_source_split_513;

  corral_source_split_513:
    assume {:verifier.code 0} true;
    call {:si_unique_call 87} $i414 := abituguru3_read_increment_offset($p2, 1, 102, 1, $p413, 3);
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    $i415 := $ne.i32($i414, 3);
    goto corral_source_split_515;

  corral_source_split_515:
    assume {:verifier.code 0} true;
    assume {:branchcond $i415} true;
    goto $bb292, $bb293;

  $bb293:
    assume !($i415 == 1);
    assume {:verifier.code 0} true;
    goto $bb294;

  $bb294:
    assume {:verifier.code 0} true;
    goto $bb295;

  $bb295:
    assume {:verifier.code 0} true;
    $p416 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_517;

  corral_source_split_517:
    assume {:verifier.code 0} true;
    $p417 := $bitcast.ref.ref($p416);
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    $p418 := $add.ref($p417, $mul.ref(23, 1));
    goto corral_source_split_519;

  corral_source_split_519:
    assume {:verifier.code 0} true;
    call {:si_unique_call 88} $i419 := abituguru3_read($p2, 8, $sub.i8(0, 105), 1, $p418);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    $i420 := $ne.i32($i419, 1);
    goto corral_source_split_521;

  corral_source_split_521:
    assume {:verifier.code 0} true;
    assume {:branchcond $i420} true;
    goto $bb296, $bb297;

  $bb297:
    assume !($i420 == 1);
    assume {:verifier.code 0} true;
    goto $bb298;

  $bb298:
    assume {:verifier.code 0} true;
    $p421 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    $p422 := $bitcast.ref.ref($p421);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $p423 := $add.ref($p422, $mul.ref(23, 1));
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    call {:si_unique_call 89} $i424 := abituguru3_read_increment_offset($p2, 1, 105, 1, $p423, 3);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i425 := $ne.i32($i424, 3);
    goto corral_source_split_527;

  corral_source_split_527:
    assume {:verifier.code 0} true;
    assume {:branchcond $i425} true;
    goto $bb299, $bb300;

  $bb300:
    assume !($i425 == 1);
    assume {:verifier.code 0} true;
    goto $bb301;

  $bb301:
    assume {:verifier.code 0} true;
    goto $bb302;

  $bb302:
    assume {:verifier.code 0} true;
    $p426 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_529;

  corral_source_split_529:
    assume {:verifier.code 0} true;
    $p427 := $bitcast.ref.ref($p426);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    $p428 := $add.ref($p427, $mul.ref(24, 1));
    goto corral_source_split_531;

  corral_source_split_531:
    assume {:verifier.code 0} true;
    call {:si_unique_call 90} $i429 := abituguru3_read($p2, 8, $sub.i8(0, 104), 1, $p428);
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    $i430 := $ne.i32($i429, 1);
    goto corral_source_split_533;

  corral_source_split_533:
    assume {:verifier.code 0} true;
    assume {:branchcond $i430} true;
    goto $bb303, $bb304;

  $bb304:
    assume !($i430 == 1);
    assume {:verifier.code 0} true;
    goto $bb305;

  $bb305:
    assume {:verifier.code 0} true;
    $p431 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_535;

  corral_source_split_535:
    assume {:verifier.code 0} true;
    $p432 := $bitcast.ref.ref($p431);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $p433 := $add.ref($p432, $mul.ref(24, 1));
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 91} $i434 := abituguru3_read_increment_offset($p2, 1, 108, 1, $p433, 3);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $i435 := $ne.i32($i434, 3);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    assume {:branchcond $i435} true;
    goto $bb306, $bb307;

  $bb307:
    assume !($i435 == 1);
    assume {:verifier.code 0} true;
    goto $bb308;

  $bb308:
    assume {:verifier.code 0} true;
    goto $bb309;

  $bb309:
    assume {:verifier.code 0} true;
    $p436 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_541;

  corral_source_split_541:
    assume {:verifier.code 0} true;
    $p437 := $bitcast.ref.ref($p436);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    $p438 := $add.ref($p437, $mul.ref(25, 1));
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    call {:si_unique_call 92} $i439 := abituguru3_read($p2, 8, $sub.i8(0, 103), 1, $p438);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i440 := $ne.i32($i439, 1);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    assume {:branchcond $i440} true;
    goto $bb310, $bb311;

  $bb311:
    assume !($i440 == 1);
    assume {:verifier.code 0} true;
    goto $bb312;

  $bb312:
    assume {:verifier.code 0} true;
    $p441 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    $p442 := $bitcast.ref.ref($p441);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $p443 := $add.ref($p442, $mul.ref(25, 1));
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    call {:si_unique_call 93} $i444 := abituguru3_read_increment_offset($p2, 1, 111, 1, $p443, 3);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i445 := $ne.i32($i444, 3);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    assume {:branchcond $i445} true;
    goto $bb313, $bb314;

  $bb314:
    assume !($i445 == 1);
    assume {:verifier.code 0} true;
    goto $bb315;

  $bb315:
    assume {:verifier.code 0} true;
    goto $bb316;

  $bb316:
    assume {:verifier.code 0} true;
    $p446 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    $p447 := $bitcast.ref.ref($p446);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $p448 := $add.ref($p447, $mul.ref(26, 1));
    goto corral_source_split_555;

  corral_source_split_555:
    assume {:verifier.code 0} true;
    call {:si_unique_call 94} $i449 := abituguru3_read($p2, 8, $sub.i8(0, 102), 1, $p448);
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    $i450 := $ne.i32($i449, 1);
    goto corral_source_split_557;

  corral_source_split_557:
    assume {:verifier.code 0} true;
    assume {:branchcond $i450} true;
    goto $bb317, $bb318;

  $bb318:
    assume !($i450 == 1);
    assume {:verifier.code 0} true;
    goto $bb319;

  $bb319:
    assume {:verifier.code 0} true;
    $p451 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    $p452 := $bitcast.ref.ref($p451);
    goto corral_source_split_560;

  corral_source_split_560:
    assume {:verifier.code 0} true;
    $p453 := $add.ref($p452, $mul.ref(26, 1));
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    call {:si_unique_call 95} $i454 := abituguru3_read_increment_offset($p2, 1, 114, 1, $p453, 3);
    goto corral_source_split_562;

  corral_source_split_562:
    assume {:verifier.code 0} true;
    $i455 := $ne.i32($i454, 3);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    assume {:branchcond $i455} true;
    goto $bb320, $bb321;

  $bb321:
    assume !($i455 == 1);
    assume {:verifier.code 0} true;
    goto $bb322;

  $bb322:
    assume {:verifier.code 0} true;
    goto $bb323;

  $bb323:
    assume {:verifier.code 0} true;
    $p456 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $p457 := $bitcast.ref.ref($p456);
    goto corral_source_split_566;

  corral_source_split_566:
    assume {:verifier.code 0} true;
    $p458 := $add.ref($p457, $mul.ref(27, 1));
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    call {:si_unique_call 96} $i459 := abituguru3_read($p2, 8, $sub.i8(0, 101), 1, $p458);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $i460 := $ne.i32($i459, 1);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    assume {:branchcond $i460} true;
    goto $bb324, $bb325;

  $bb325:
    assume !($i460 == 1);
    assume {:verifier.code 0} true;
    goto $bb326;

  $bb326:
    assume {:verifier.code 0} true;
    $p461 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $p462 := $bitcast.ref.ref($p461);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $p463 := $add.ref($p462, $mul.ref(27, 1));
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    call {:si_unique_call 97} $i464 := abituguru3_read_increment_offset($p2, 1, 117, 1, $p463, 3);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $i465 := $ne.i32($i464, 3);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    assume {:branchcond $i465} true;
    goto $bb327, $bb328;

  $bb328:
    assume !($i465 == 1);
    assume {:verifier.code 0} true;
    goto $bb329;

  $bb329:
    assume {:verifier.code 0} true;
    goto $bb330;

  $bb330:
    assume {:verifier.code 0} true;
    $p466 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $p467 := $bitcast.ref.ref($p466);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $p468 := $add.ref($p467, $mul.ref(28, 1));
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    call {:si_unique_call 98} $i469 := abituguru3_read($p2, 8, $sub.i8(0, 100), 1, $p468);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    $i470 := $ne.i32($i469, 1);
    goto corral_source_split_581;

  corral_source_split_581:
    assume {:verifier.code 0} true;
    assume {:branchcond $i470} true;
    goto $bb331, $bb332;

  $bb332:
    assume !($i470 == 1);
    assume {:verifier.code 0} true;
    goto $bb333;

  $bb333:
    assume {:verifier.code 0} true;
    $p471 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_583;

  corral_source_split_583:
    assume {:verifier.code 0} true;
    $p472 := $bitcast.ref.ref($p471);
    goto corral_source_split_584;

  corral_source_split_584:
    assume {:verifier.code 0} true;
    $p473 := $add.ref($p472, $mul.ref(28, 1));
    goto corral_source_split_585;

  corral_source_split_585:
    assume {:verifier.code 0} true;
    call {:si_unique_call 99} $i474 := abituguru3_read_increment_offset($p2, 1, 120, 1, $p473, 3);
    goto corral_source_split_586;

  corral_source_split_586:
    assume {:verifier.code 0} true;
    $i475 := $ne.i32($i474, 3);
    goto corral_source_split_587;

  corral_source_split_587:
    assume {:verifier.code 0} true;
    assume {:branchcond $i475} true;
    goto $bb334, $bb335;

  $bb335:
    assume !($i475 == 1);
    assume {:verifier.code 0} true;
    goto $bb336;

  $bb336:
    assume {:verifier.code 0} true;
    goto $bb337;

  $bb337:
    assume {:verifier.code 0} true;
    $p476 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_589;

  corral_source_split_589:
    assume {:verifier.code 0} true;
    $p477 := $bitcast.ref.ref($p476);
    goto corral_source_split_590;

  corral_source_split_590:
    assume {:verifier.code 0} true;
    $p478 := $add.ref($p477, $mul.ref(29, 1));
    goto corral_source_split_591;

  corral_source_split_591:
    assume {:verifier.code 0} true;
    call {:si_unique_call 100} $i479 := abituguru3_read($p2, 8, $sub.i8(0, 99), 1, $p478);
    goto corral_source_split_592;

  corral_source_split_592:
    assume {:verifier.code 0} true;
    $i480 := $ne.i32($i479, 1);
    goto corral_source_split_593;

  corral_source_split_593:
    assume {:verifier.code 0} true;
    assume {:branchcond $i480} true;
    goto $bb338, $bb339;

  $bb339:
    assume !($i480 == 1);
    assume {:verifier.code 0} true;
    goto $bb340;

  $bb340:
    assume {:verifier.code 0} true;
    $p481 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_595;

  corral_source_split_595:
    assume {:verifier.code 0} true;
    $p482 := $bitcast.ref.ref($p481);
    goto corral_source_split_596;

  corral_source_split_596:
    assume {:verifier.code 0} true;
    $p483 := $add.ref($p482, $mul.ref(29, 1));
    goto corral_source_split_597;

  corral_source_split_597:
    assume {:verifier.code 0} true;
    call {:si_unique_call 101} $i484 := abituguru3_read_increment_offset($p2, 1, 123, 1, $p483, 3);
    goto corral_source_split_598;

  corral_source_split_598:
    assume {:verifier.code 0} true;
    $i485 := $ne.i32($i484, 3);
    goto corral_source_split_599;

  corral_source_split_599:
    assume {:verifier.code 0} true;
    assume {:branchcond $i485} true;
    goto $bb341, $bb342;

  $bb342:
    assume !($i485 == 1);
    assume {:verifier.code 0} true;
    goto $bb343;

  $bb343:
    assume {:verifier.code 0} true;
    goto $bb344;

  $bb344:
    assume {:verifier.code 0} true;
    $p486 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_601;

  corral_source_split_601:
    assume {:verifier.code 0} true;
    $p487 := $bitcast.ref.ref($p486);
    goto corral_source_split_602;

  corral_source_split_602:
    assume {:verifier.code 0} true;
    $p488 := $add.ref($p487, $mul.ref(30, 1));
    goto corral_source_split_603;

  corral_source_split_603:
    assume {:verifier.code 0} true;
    call {:si_unique_call 102} $i489 := abituguru3_read($p2, 8, $sub.i8(0, 98), 1, $p488);
    goto corral_source_split_604;

  corral_source_split_604:
    assume {:verifier.code 0} true;
    $i490 := $ne.i32($i489, 1);
    goto corral_source_split_605;

  corral_source_split_605:
    assume {:verifier.code 0} true;
    assume {:branchcond $i490} true;
    goto $bb345, $bb346;

  $bb346:
    assume !($i490 == 1);
    assume {:verifier.code 0} true;
    goto $bb347;

  $bb347:
    assume {:verifier.code 0} true;
    $p491 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_607;

  corral_source_split_607:
    assume {:verifier.code 0} true;
    $p492 := $bitcast.ref.ref($p491);
    goto corral_source_split_608;

  corral_source_split_608:
    assume {:verifier.code 0} true;
    $p493 := $add.ref($p492, $mul.ref(30, 1));
    goto corral_source_split_609;

  corral_source_split_609:
    assume {:verifier.code 0} true;
    call {:si_unique_call 103} $i494 := abituguru3_read_increment_offset($p2, 1, 126, 1, $p493, 3);
    goto corral_source_split_610;

  corral_source_split_610:
    assume {:verifier.code 0} true;
    $i495 := $ne.i32($i494, 3);
    goto corral_source_split_611;

  corral_source_split_611:
    assume {:verifier.code 0} true;
    assume {:branchcond $i495} true;
    goto $bb348, $bb349;

  $bb349:
    assume !($i495 == 1);
    assume {:verifier.code 0} true;
    goto $bb350;

  $bb350:
    assume {:verifier.code 0} true;
    goto $bb351;

  $bb351:
    assume {:verifier.code 0} true;
    $p496 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_613;

  corral_source_split_613:
    assume {:verifier.code 0} true;
    $p497 := $bitcast.ref.ref($p496);
    goto corral_source_split_614;

  corral_source_split_614:
    assume {:verifier.code 0} true;
    $p498 := $add.ref($p497, $mul.ref(31, 1));
    goto corral_source_split_615;

  corral_source_split_615:
    assume {:verifier.code 0} true;
    call {:si_unique_call 104} $i499 := abituguru3_read($p2, 8, $sub.i8(0, 97), 1, $p498);
    goto corral_source_split_616;

  corral_source_split_616:
    assume {:verifier.code 0} true;
    $i500 := $ne.i32($i499, 1);
    goto corral_source_split_617;

  corral_source_split_617:
    assume {:verifier.code 0} true;
    assume {:branchcond $i500} true;
    goto $bb352, $bb353;

  $bb353:
    assume !($i500 == 1);
    assume {:verifier.code 0} true;
    goto $bb354;

  $bb354:
    assume {:verifier.code 0} true;
    $p501 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_619;

  corral_source_split_619:
    assume {:verifier.code 0} true;
    $p502 := $bitcast.ref.ref($p501);
    goto corral_source_split_620;

  corral_source_split_620:
    assume {:verifier.code 0} true;
    $p503 := $add.ref($p502, $mul.ref(31, 1));
    goto corral_source_split_621;

  corral_source_split_621:
    assume {:verifier.code 0} true;
    call {:si_unique_call 105} $i504 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 127), 1, $p503, 3);
    goto corral_source_split_622;

  corral_source_split_622:
    assume {:verifier.code 0} true;
    $i505 := $ne.i32($i504, 3);
    goto corral_source_split_623;

  corral_source_split_623:
    assume {:verifier.code 0} true;
    assume {:branchcond $i505} true;
    goto $bb355, $bb356;

  $bb356:
    assume !($i505 == 1);
    assume {:verifier.code 0} true;
    goto $bb357;

  $bb357:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $p27 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_55;

  corral_source_split_55:
    assume {:verifier.code 0} true;
    $p28 := $bitcast.ref.ref($p27);
    goto corral_source_split_56;

  corral_source_split_56:
    assume {:verifier.code 0} true;
    $p29 := $add.ref($p28, $mul.ref(32, 1));
    goto corral_source_split_57;

  corral_source_split_57:
    assume {:verifier.code 0} true;
    call {:si_unique_call 11} $i30 := abituguru3_read($p2, 8, $sub.i8(0, 96), 1, $p29);
    call {:si_unique_call 12} {:cexpr "tmp___3"} boogie_si_record_i32($i30);
    goto corral_source_split_58;

  corral_source_split_58:
    assume {:verifier.code 0} true;
    $i31 := $ne.i32($i30, 1);
    goto corral_source_split_59;

  corral_source_split_59:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb24, $bb26;

  $bb26:
    assume !($i31 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $p32 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_61;

  corral_source_split_61:
    assume {:verifier.code 0} true;
    $p33 := $bitcast.ref.ref($p32);
    goto corral_source_split_62;

  corral_source_split_62:
    assume {:verifier.code 0} true;
    $p34 := $add.ref($p33, $mul.ref(32, 1));
    goto corral_source_split_63;

  corral_source_split_63:
    assume {:verifier.code 0} true;
    call {:si_unique_call 13} $i35 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 124), 1, $p34, 2);
    call {:si_unique_call 14} {:cexpr "tmp___4"} boogie_si_record_i32($i35);
    goto corral_source_split_64;

  corral_source_split_64:
    assume {:verifier.code 0} true;
    $i36 := $ne.i32($i35, 2);
    goto corral_source_split_65;

  corral_source_split_65:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb30;

  $bb30:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $p46 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_67;

  corral_source_split_67:
    assume {:verifier.code 0} true;
    $p47 := $bitcast.ref.ref($p46);
    goto corral_source_split_68;

  corral_source_split_68:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($p47, $mul.ref(33, 1));
    goto corral_source_split_69;

  corral_source_split_69:
    assume {:verifier.code 0} true;
    call {:si_unique_call 15} $i49 := abituguru3_read($p2, 8, $sub.i8(0, 95), 1, $p48);
    goto corral_source_split_70;

  corral_source_split_70:
    assume {:verifier.code 0} true;
    $i50 := $ne.i32($i49, 1);
    goto corral_source_split_71;

  corral_source_split_71:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $p51 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_85;

  corral_source_split_85:
    assume {:verifier.code 0} true;
    $p52 := $bitcast.ref.ref($p51);
    goto corral_source_split_86;

  corral_source_split_86:
    assume {:verifier.code 0} true;
    $p53 := $add.ref($p52, $mul.ref(33, 1));
    goto corral_source_split_87;

  corral_source_split_87:
    assume {:verifier.code 0} true;
    call {:si_unique_call 16} $i54 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 122), 1, $p53, 2);
    goto corral_source_split_88;

  corral_source_split_88:
    assume {:verifier.code 0} true;
    $i55 := $ne.i32($i54, 2);
    goto corral_source_split_89;

  corral_source_split_89:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $p56 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_91;

  corral_source_split_91:
    assume {:verifier.code 0} true;
    $p57 := $bitcast.ref.ref($p56);
    goto corral_source_split_92;

  corral_source_split_92:
    assume {:verifier.code 0} true;
    $p58 := $add.ref($p57, $mul.ref(34, 1));
    goto corral_source_split_93;

  corral_source_split_93:
    assume {:verifier.code 0} true;
    call {:si_unique_call 17} $i59 := abituguru3_read($p2, 8, $sub.i8(0, 94), 1, $p58);
    goto corral_source_split_94;

  corral_source_split_94:
    assume {:verifier.code 0} true;
    $i60 := $ne.i32($i59, 1);
    goto corral_source_split_95;

  corral_source_split_95:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb45, $bb46;

  $bb46:
    assume !($i60 == 1);
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $p61 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_97;

  corral_source_split_97:
    assume {:verifier.code 0} true;
    $p62 := $bitcast.ref.ref($p61);
    goto corral_source_split_98;

  corral_source_split_98:
    assume {:verifier.code 0} true;
    $p63 := $add.ref($p62, $mul.ref(34, 1));
    goto corral_source_split_99;

  corral_source_split_99:
    assume {:verifier.code 0} true;
    call {:si_unique_call 18} $i64 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 120), 1, $p63, 2);
    goto corral_source_split_100;

  corral_source_split_100:
    assume {:verifier.code 0} true;
    $i65 := $ne.i32($i64, 2);
    goto corral_source_split_101;

  corral_source_split_101:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i65 == 1);
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $p66 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_103;

  corral_source_split_103:
    assume {:verifier.code 0} true;
    $p67 := $bitcast.ref.ref($p66);
    goto corral_source_split_104;

  corral_source_split_104:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($p67, $mul.ref(35, 1));
    goto corral_source_split_105;

  corral_source_split_105:
    assume {:verifier.code 0} true;
    call {:si_unique_call 19} $i69 := abituguru3_read($p2, 8, $sub.i8(0, 93), 1, $p68);
    goto corral_source_split_106;

  corral_source_split_106:
    assume {:verifier.code 0} true;
    $i70 := $ne.i32($i69, 1);
    goto corral_source_split_107;

  corral_source_split_107:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i70 == 1);
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    $p71 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_109;

  corral_source_split_109:
    assume {:verifier.code 0} true;
    $p72 := $bitcast.ref.ref($p71);
    goto corral_source_split_110;

  corral_source_split_110:
    assume {:verifier.code 0} true;
    $p73 := $add.ref($p72, $mul.ref(35, 1));
    goto corral_source_split_111;

  corral_source_split_111:
    assume {:verifier.code 0} true;
    call {:si_unique_call 20} $i74 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 118), 1, $p73, 2);
    goto corral_source_split_112;

  corral_source_split_112:
    assume {:verifier.code 0} true;
    $i75 := $ne.i32($i74, 2);
    goto corral_source_split_113;

  corral_source_split_113:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55, $bb56;

  $bb56:
    assume !($i75 == 1);
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    $p76 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_115;

  corral_source_split_115:
    assume {:verifier.code 0} true;
    $p77 := $bitcast.ref.ref($p76);
    goto corral_source_split_116;

  corral_source_split_116:
    assume {:verifier.code 0} true;
    $p78 := $add.ref($p77, $mul.ref(36, 1));
    goto corral_source_split_117;

  corral_source_split_117:
    assume {:verifier.code 0} true;
    call {:si_unique_call 21} $i79 := abituguru3_read($p2, 8, $sub.i8(0, 92), 1, $p78);
    goto corral_source_split_118;

  corral_source_split_118:
    assume {:verifier.code 0} true;
    $i80 := $ne.i32($i79, 1);
    goto corral_source_split_119;

  corral_source_split_119:
    assume {:verifier.code 0} true;
    assume {:branchcond $i80} true;
    goto $bb59, $bb60;

  $bb60:
    assume !($i80 == 1);
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    $p81 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_121;

  corral_source_split_121:
    assume {:verifier.code 0} true;
    $p82 := $bitcast.ref.ref($p81);
    goto corral_source_split_122;

  corral_source_split_122:
    assume {:verifier.code 0} true;
    $p83 := $add.ref($p82, $mul.ref(36, 1));
    goto corral_source_split_123;

  corral_source_split_123:
    assume {:verifier.code 0} true;
    call {:si_unique_call 22} $i84 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 116), 1, $p83, 2);
    goto corral_source_split_124;

  corral_source_split_124:
    assume {:verifier.code 0} true;
    $i85 := $ne.i32($i84, 2);
    goto corral_source_split_125;

  corral_source_split_125:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb62, $bb63;

  $bb63:
    assume !($i85 == 1);
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_127;

  corral_source_split_127:
    assume {:verifier.code 0} true;
    $p87 := $bitcast.ref.ref($p86);
    goto corral_source_split_128;

  corral_source_split_128:
    assume {:verifier.code 0} true;
    $p88 := $add.ref($p87, $mul.ref(37, 1));
    goto corral_source_split_129;

  corral_source_split_129:
    assume {:verifier.code 0} true;
    call {:si_unique_call 23} $i89 := abituguru3_read($p2, 8, $sub.i8(0, 91), 1, $p88);
    goto corral_source_split_130;

  corral_source_split_130:
    assume {:verifier.code 0} true;
    $i90 := $ne.i32($i89, 1);
    goto corral_source_split_131;

  corral_source_split_131:
    assume {:verifier.code 0} true;
    assume {:branchcond $i90} true;
    goto $bb66, $bb67;

  $bb67:
    assume !($i90 == 1);
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    $p91 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_133;

  corral_source_split_133:
    assume {:verifier.code 0} true;
    $p92 := $bitcast.ref.ref($p91);
    goto corral_source_split_134;

  corral_source_split_134:
    assume {:verifier.code 0} true;
    $p93 := $add.ref($p92, $mul.ref(37, 1));
    goto corral_source_split_135;

  corral_source_split_135:
    assume {:verifier.code 0} true;
    call {:si_unique_call 24} $i94 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 114), 1, $p93, 2);
    goto corral_source_split_136;

  corral_source_split_136:
    assume {:verifier.code 0} true;
    $i95 := $ne.i32($i94, 2);
    goto corral_source_split_137;

  corral_source_split_137:
    assume {:verifier.code 0} true;
    assume {:branchcond $i95} true;
    goto $bb69, $bb70;

  $bb70:
    assume !($i95 == 1);
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    goto $bb72;

  $bb72:
    assume {:verifier.code 0} true;
    $p96 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_139;

  corral_source_split_139:
    assume {:verifier.code 0} true;
    $p97 := $bitcast.ref.ref($p96);
    goto corral_source_split_140;

  corral_source_split_140:
    assume {:verifier.code 0} true;
    $p98 := $add.ref($p97, $mul.ref(38, 1));
    goto corral_source_split_141;

  corral_source_split_141:
    assume {:verifier.code 0} true;
    call {:si_unique_call 25} $i99 := abituguru3_read($p2, 8, $sub.i8(0, 90), 1, $p98);
    goto corral_source_split_142;

  corral_source_split_142:
    assume {:verifier.code 0} true;
    $i100 := $ne.i32($i99, 1);
    goto corral_source_split_143;

  corral_source_split_143:
    assume {:verifier.code 0} true;
    assume {:branchcond $i100} true;
    goto $bb73, $bb74;

  $bb74:
    assume !($i100 == 1);
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $p101 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_145;

  corral_source_split_145:
    assume {:verifier.code 0} true;
    $p102 := $bitcast.ref.ref($p101);
    goto corral_source_split_146;

  corral_source_split_146:
    assume {:verifier.code 0} true;
    $p103 := $add.ref($p102, $mul.ref(38, 1));
    goto corral_source_split_147;

  corral_source_split_147:
    assume {:verifier.code 0} true;
    call {:si_unique_call 26} $i104 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 112), 1, $p103, 2);
    goto corral_source_split_148;

  corral_source_split_148:
    assume {:verifier.code 0} true;
    $i105 := $ne.i32($i104, 2);
    goto corral_source_split_149;

  corral_source_split_149:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76, $bb77;

  $bb77:
    assume !($i105 == 1);
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_151;

  corral_source_split_151:
    assume {:verifier.code 0} true;
    $p107 := $bitcast.ref.ref($p106);
    goto corral_source_split_152;

  corral_source_split_152:
    assume {:verifier.code 0} true;
    $p108 := $add.ref($p107, $mul.ref(39, 1));
    goto corral_source_split_153;

  corral_source_split_153:
    assume {:verifier.code 0} true;
    call {:si_unique_call 27} $i109 := abituguru3_read($p2, 8, $sub.i8(0, 89), 1, $p108);
    goto corral_source_split_154;

  corral_source_split_154:
    assume {:verifier.code 0} true;
    $i110 := $ne.i32($i109, 1);
    goto corral_source_split_155;

  corral_source_split_155:
    assume {:verifier.code 0} true;
    assume {:branchcond $i110} true;
    goto $bb80, $bb81;

  $bb81:
    assume !($i110 == 1);
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb82:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_157;

  corral_source_split_157:
    assume {:verifier.code 0} true;
    $p112 := $bitcast.ref.ref($p111);
    goto corral_source_split_158;

  corral_source_split_158:
    assume {:verifier.code 0} true;
    $p113 := $add.ref($p112, $mul.ref(39, 1));
    goto corral_source_split_159;

  corral_source_split_159:
    assume {:verifier.code 0} true;
    call {:si_unique_call 28} $i114 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 110), 1, $p113, 2);
    goto corral_source_split_160;

  corral_source_split_160:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 2);
    goto corral_source_split_161;

  corral_source_split_161:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb83, $bb84;

  $bb84:
    assume !($i115 == 1);
    assume {:verifier.code 0} true;
    goto $bb85;

  $bb85:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    $p116 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_163;

  corral_source_split_163:
    assume {:verifier.code 0} true;
    $p117 := $bitcast.ref.ref($p116);
    goto corral_source_split_164;

  corral_source_split_164:
    assume {:verifier.code 0} true;
    $p118 := $add.ref($p117, $mul.ref(40, 1));
    goto corral_source_split_165;

  corral_source_split_165:
    assume {:verifier.code 0} true;
    call {:si_unique_call 29} $i119 := abituguru3_read($p2, 8, $sub.i8(0, 88), 1, $p118);
    goto corral_source_split_166;

  corral_source_split_166:
    assume {:verifier.code 0} true;
    $i120 := $ne.i32($i119, 1);
    goto corral_source_split_167;

  corral_source_split_167:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb87, $bb88;

  $bb88:
    assume !($i120 == 1);
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    $p121 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_169;

  corral_source_split_169:
    assume {:verifier.code 0} true;
    $p122 := $bitcast.ref.ref($p121);
    goto corral_source_split_170;

  corral_source_split_170:
    assume {:verifier.code 0} true;
    $p123 := $add.ref($p122, $mul.ref(40, 1));
    goto corral_source_split_171;

  corral_source_split_171:
    assume {:verifier.code 0} true;
    call {:si_unique_call 30} $i124 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 108), 1, $p123, 2);
    goto corral_source_split_172;

  corral_source_split_172:
    assume {:verifier.code 0} true;
    $i125 := $ne.i32($i124, 2);
    goto corral_source_split_173;

  corral_source_split_173:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb90, $bb91;

  $bb91:
    assume !($i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    $p126 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_175;

  corral_source_split_175:
    assume {:verifier.code 0} true;
    $p127 := $bitcast.ref.ref($p126);
    goto corral_source_split_176;

  corral_source_split_176:
    assume {:verifier.code 0} true;
    $p128 := $add.ref($p127, $mul.ref(41, 1));
    goto corral_source_split_177;

  corral_source_split_177:
    assume {:verifier.code 0} true;
    call {:si_unique_call 31} $i129 := abituguru3_read($p2, 8, $sub.i8(0, 87), 1, $p128);
    goto corral_source_split_178;

  corral_source_split_178:
    assume {:verifier.code 0} true;
    $i130 := $ne.i32($i129, 1);
    goto corral_source_split_179;

  corral_source_split_179:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb94, $bb95;

  $bb95:
    assume !($i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    $p131 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_181;

  corral_source_split_181:
    assume {:verifier.code 0} true;
    $p132 := $bitcast.ref.ref($p131);
    goto corral_source_split_182;

  corral_source_split_182:
    assume {:verifier.code 0} true;
    $p133 := $add.ref($p132, $mul.ref(41, 1));
    goto corral_source_split_183;

  corral_source_split_183:
    assume {:verifier.code 0} true;
    call {:si_unique_call 32} $i134 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 106), 1, $p133, 2);
    goto corral_source_split_184;

  corral_source_split_184:
    assume {:verifier.code 0} true;
    $i135 := $ne.i32($i134, 2);
    goto corral_source_split_185;

  corral_source_split_185:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i135 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $p136 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_187;

  corral_source_split_187:
    assume {:verifier.code 0} true;
    $p137 := $bitcast.ref.ref($p136);
    goto corral_source_split_188;

  corral_source_split_188:
    assume {:verifier.code 0} true;
    $p138 := $add.ref($p137, $mul.ref(42, 1));
    goto corral_source_split_189;

  corral_source_split_189:
    assume {:verifier.code 0} true;
    call {:si_unique_call 33} $i139 := abituguru3_read($p2, 8, $sub.i8(0, 86), 1, $p138);
    goto corral_source_split_190;

  corral_source_split_190:
    assume {:verifier.code 0} true;
    $i140 := $ne.i32($i139, 1);
    goto corral_source_split_191;

  corral_source_split_191:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i140 == 1);
    assume {:verifier.code 0} true;
    goto $bb103;

  $bb103:
    assume {:verifier.code 0} true;
    $p141 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_193;

  corral_source_split_193:
    assume {:verifier.code 0} true;
    $p142 := $bitcast.ref.ref($p141);
    goto corral_source_split_194;

  corral_source_split_194:
    assume {:verifier.code 0} true;
    $p143 := $add.ref($p142, $mul.ref(42, 1));
    goto corral_source_split_195;

  corral_source_split_195:
    assume {:verifier.code 0} true;
    call {:si_unique_call 34} $i144 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 104), 1, $p143, 2);
    goto corral_source_split_196;

  corral_source_split_196:
    assume {:verifier.code 0} true;
    $i145 := $ne.i32($i144, 2);
    goto corral_source_split_197;

  corral_source_split_197:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb104, $bb105;

  $bb105:
    assume !($i145 == 1);
    assume {:verifier.code 0} true;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $p146 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_199;

  corral_source_split_199:
    assume {:verifier.code 0} true;
    $p147 := $bitcast.ref.ref($p146);
    goto corral_source_split_200;

  corral_source_split_200:
    assume {:verifier.code 0} true;
    $p148 := $add.ref($p147, $mul.ref(43, 1));
    goto corral_source_split_201;

  corral_source_split_201:
    assume {:verifier.code 0} true;
    call {:si_unique_call 35} $i149 := abituguru3_read($p2, 8, $sub.i8(0, 85), 1, $p148);
    goto corral_source_split_202;

  corral_source_split_202:
    assume {:verifier.code 0} true;
    $i150 := $ne.i32($i149, 1);
    goto corral_source_split_203;

  corral_source_split_203:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb108, $bb109;

  $bb109:
    assume !($i150 == 1);
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_205;

  corral_source_split_205:
    assume {:verifier.code 0} true;
    $p152 := $bitcast.ref.ref($p151);
    goto corral_source_split_206;

  corral_source_split_206:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($p152, $mul.ref(43, 1));
    goto corral_source_split_207;

  corral_source_split_207:
    assume {:verifier.code 0} true;
    call {:si_unique_call 36} $i154 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 102), 1, $p153, 2);
    goto corral_source_split_208;

  corral_source_split_208:
    assume {:verifier.code 0} true;
    $i155 := $ne.i32($i154, 2);
    goto corral_source_split_209;

  corral_source_split_209:
    assume {:verifier.code 0} true;
    assume {:branchcond $i155} true;
    goto $bb111, $bb112;

  $bb112:
    assume !($i155 == 1);
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb113:
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    $p156 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_211;

  corral_source_split_211:
    assume {:verifier.code 0} true;
    $p157 := $bitcast.ref.ref($p156);
    goto corral_source_split_212;

  corral_source_split_212:
    assume {:verifier.code 0} true;
    $p158 := $add.ref($p157, $mul.ref(44, 1));
    goto corral_source_split_213;

  corral_source_split_213:
    assume {:verifier.code 0} true;
    call {:si_unique_call 37} $i159 := abituguru3_read($p2, 8, $sub.i8(0, 84), 1, $p158);
    goto corral_source_split_214;

  corral_source_split_214:
    assume {:verifier.code 0} true;
    $i160 := $ne.i32($i159, 1);
    goto corral_source_split_215;

  corral_source_split_215:
    assume {:verifier.code 0} true;
    assume {:branchcond $i160} true;
    goto $bb115, $bb116;

  $bb116:
    assume !($i160 == 1);
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    $p161 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_217;

  corral_source_split_217:
    assume {:verifier.code 0} true;
    $p162 := $bitcast.ref.ref($p161);
    goto corral_source_split_218;

  corral_source_split_218:
    assume {:verifier.code 0} true;
    $p163 := $add.ref($p162, $mul.ref(44, 1));
    goto corral_source_split_219;

  corral_source_split_219:
    assume {:verifier.code 0} true;
    call {:si_unique_call 38} $i164 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 100), 1, $p163, 2);
    goto corral_source_split_220;

  corral_source_split_220:
    assume {:verifier.code 0} true;
    $i165 := $ne.i32($i164, 2);
    goto corral_source_split_221;

  corral_source_split_221:
    assume {:verifier.code 0} true;
    assume {:branchcond $i165} true;
    goto $bb118, $bb119;

  $bb119:
    assume !($i165 == 1);
    assume {:verifier.code 0} true;
    goto $bb120;

  $bb120:
    assume {:verifier.code 0} true;
    goto $bb121;

  $bb121:
    assume {:verifier.code 0} true;
    $p166 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_223;

  corral_source_split_223:
    assume {:verifier.code 0} true;
    $p167 := $bitcast.ref.ref($p166);
    goto corral_source_split_224;

  corral_source_split_224:
    assume {:verifier.code 0} true;
    $p168 := $add.ref($p167, $mul.ref(45, 1));
    goto corral_source_split_225;

  corral_source_split_225:
    assume {:verifier.code 0} true;
    call {:si_unique_call 39} $i169 := abituguru3_read($p2, 8, $sub.i8(0, 83), 1, $p168);
    goto corral_source_split_226;

  corral_source_split_226:
    assume {:verifier.code 0} true;
    $i170 := $ne.i32($i169, 1);
    goto corral_source_split_227;

  corral_source_split_227:
    assume {:verifier.code 0} true;
    assume {:branchcond $i170} true;
    goto $bb122, $bb123;

  $bb123:
    assume !($i170 == 1);
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $p171 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_229;

  corral_source_split_229:
    assume {:verifier.code 0} true;
    $p172 := $bitcast.ref.ref($p171);
    goto corral_source_split_230;

  corral_source_split_230:
    assume {:verifier.code 0} true;
    $p173 := $add.ref($p172, $mul.ref(45, 1));
    goto corral_source_split_231;

  corral_source_split_231:
    assume {:verifier.code 0} true;
    call {:si_unique_call 40} $i174 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 98), 1, $p173, 2);
    goto corral_source_split_232;

  corral_source_split_232:
    assume {:verifier.code 0} true;
    $i175 := $ne.i32($i174, 2);
    goto corral_source_split_233;

  corral_source_split_233:
    assume {:verifier.code 0} true;
    assume {:branchcond $i175} true;
    goto $bb125, $bb126;

  $bb126:
    assume !($i175 == 1);
    assume {:verifier.code 0} true;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    goto $bb128;

  $bb128:
    assume {:verifier.code 0} true;
    $p176 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_235;

  corral_source_split_235:
    assume {:verifier.code 0} true;
    $p177 := $bitcast.ref.ref($p176);
    goto corral_source_split_236;

  corral_source_split_236:
    assume {:verifier.code 0} true;
    $p178 := $add.ref($p177, $mul.ref(46, 1));
    goto corral_source_split_237;

  corral_source_split_237:
    assume {:verifier.code 0} true;
    call {:si_unique_call 41} $i179 := abituguru3_read($p2, 8, $sub.i8(0, 82), 1, $p178);
    goto corral_source_split_238;

  corral_source_split_238:
    assume {:verifier.code 0} true;
    $i180 := $ne.i32($i179, 1);
    goto corral_source_split_239;

  corral_source_split_239:
    assume {:verifier.code 0} true;
    assume {:branchcond $i180} true;
    goto $bb129, $bb130;

  $bb130:
    assume !($i180 == 1);
    assume {:verifier.code 0} true;
    goto $bb131;

  $bb131:
    assume {:verifier.code 0} true;
    $p181 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_241;

  corral_source_split_241:
    assume {:verifier.code 0} true;
    $p182 := $bitcast.ref.ref($p181);
    goto corral_source_split_242;

  corral_source_split_242:
    assume {:verifier.code 0} true;
    $p183 := $add.ref($p182, $mul.ref(46, 1));
    goto corral_source_split_243;

  corral_source_split_243:
    assume {:verifier.code 0} true;
    call {:si_unique_call 42} $i184 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 96), 1, $p183, 2);
    goto corral_source_split_244;

  corral_source_split_244:
    assume {:verifier.code 0} true;
    $i185 := $ne.i32($i184, 2);
    goto corral_source_split_245;

  corral_source_split_245:
    assume {:verifier.code 0} true;
    assume {:branchcond $i185} true;
    goto $bb132, $bb133;

  $bb133:
    assume !($i185 == 1);
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb134:
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    $p186 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18070, 1));
    goto corral_source_split_247;

  corral_source_split_247:
    assume {:verifier.code 0} true;
    $p187 := $bitcast.ref.ref($p186);
    goto corral_source_split_248;

  corral_source_split_248:
    assume {:verifier.code 0} true;
    $p188 := $add.ref($p187, $mul.ref(47, 1));
    goto corral_source_split_249;

  corral_source_split_249:
    assume {:verifier.code 0} true;
    call {:si_unique_call 43} $i189 := abituguru3_read($p2, 8, $sub.i8(0, 81), 1, $p188);
    goto corral_source_split_250;

  corral_source_split_250:
    assume {:verifier.code 0} true;
    $i190 := $ne.i32($i189, 1);
    goto corral_source_split_251;

  corral_source_split_251:
    assume {:verifier.code 0} true;
    assume {:branchcond $i190} true;
    goto $bb136, $bb137;

  $bb137:
    assume !($i190 == 1);
    assume {:verifier.code 0} true;
    goto $bb138;

  $bb138:
    assume {:verifier.code 0} true;
    $p191 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(18118, 1));
    goto corral_source_split_253;

  corral_source_split_253:
    assume {:verifier.code 0} true;
    $p192 := $bitcast.ref.ref($p191);
    goto corral_source_split_254;

  corral_source_split_254:
    assume {:verifier.code 0} true;
    $p193 := $add.ref($p192, $mul.ref(47, 1));
    goto corral_source_split_255;

  corral_source_split_255:
    assume {:verifier.code 0} true;
    call {:si_unique_call 44} $i194 := abituguru3_read_increment_offset($p2, 1, $sub.i8(0, 94), 1, $p193, 2);
    goto corral_source_split_256;

  corral_source_split_256:
    assume {:verifier.code 0} true;
    $i195 := $ne.i32($i194, 2);
    goto corral_source_split_257;

  corral_source_split_257:
    assume {:verifier.code 0} true;
    assume {:branchcond $i195} true;
    goto $bb139, $bb140;

  $bb140:
    assume !($i195 == 1);
    assume {:verifier.code 0} true;
    goto $bb141;

  $bb141:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i37 := $load.i64($M.0, jiffies);
    goto corral_source_split_73;

  corral_source_split_73:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(176, 1));
    goto corral_source_split_74;

  corral_source_split_74:
    assume {:verifier.code 0} true;
    $M.0 := $store.i64($M.0, $p38, $i37);
    goto corral_source_split_75;

  corral_source_split_75:
    assume {:verifier.code 0} true;
    $p39 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(170, 1));
    goto corral_source_split_76;

  corral_source_split_76:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p39, 1);
    goto corral_source_split_77;

  corral_source_split_77:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb139:
    assume {:verifier.code 0} true;
    assume $i195 == 1;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb136:
    assume {:verifier.code 0} true;
    assume $i190 == 1;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb132:
    assume {:verifier.code 0} true;
    assume $i185 == 1;
    goto $bb29;

  $bb129:
    assume {:verifier.code 0} true;
    assume $i180 == 1;
    goto $bb25;

  $bb125:
    assume {:verifier.code 0} true;
    assume $i175 == 1;
    goto $bb29;

  $bb122:
    assume {:verifier.code 0} true;
    assume $i170 == 1;
    goto $bb25;

  $bb118:
    assume {:verifier.code 0} true;
    assume $i165 == 1;
    goto $bb29;

  $bb115:
    assume {:verifier.code 0} true;
    assume $i160 == 1;
    goto $bb25;

  $bb111:
    assume {:verifier.code 0} true;
    assume $i155 == 1;
    goto $bb29;

  $bb108:
    assume {:verifier.code 0} true;
    assume $i150 == 1;
    goto $bb25;

  $bb104:
    assume {:verifier.code 0} true;
    assume $i145 == 1;
    goto $bb29;

  $bb101:
    assume {:verifier.code 0} true;
    assume $i140 == 1;
    goto $bb25;

  $bb97:
    assume {:verifier.code 0} true;
    assume $i135 == 1;
    goto $bb29;

  $bb94:
    assume {:verifier.code 0} true;
    assume $i130 == 1;
    goto $bb25;

  $bb90:
    assume {:verifier.code 0} true;
    assume $i125 == 1;
    goto $bb29;

  $bb87:
    assume {:verifier.code 0} true;
    assume $i120 == 1;
    goto $bb25;

  $bb83:
    assume {:verifier.code 0} true;
    assume $i115 == 1;
    goto $bb29;

  $bb80:
    assume {:verifier.code 0} true;
    assume $i110 == 1;
    goto $bb25;

  $bb76:
    assume {:verifier.code 0} true;
    assume $i105 == 1;
    goto $bb29;

  $bb73:
    assume {:verifier.code 0} true;
    assume $i100 == 1;
    goto $bb25;

  $bb69:
    assume {:verifier.code 0} true;
    assume $i95 == 1;
    goto $bb29;

  $bb66:
    assume {:verifier.code 0} true;
    assume $i90 == 1;
    goto $bb25;

  $bb62:
    assume {:verifier.code 0} true;
    assume $i85 == 1;
    goto $bb29;

  $bb59:
    assume {:verifier.code 0} true;
    assume $i80 == 1;
    goto $bb25;

  $bb55:
    assume {:verifier.code 0} true;
    assume $i75 == 1;
    goto $bb29;

  $bb52:
    assume {:verifier.code 0} true;
    assume $i70 == 1;
    goto $bb25;

  $bb48:
    assume {:verifier.code 0} true;
    assume $i65 == 1;
    goto $bb29;

  $bb45:
    assume {:verifier.code 0} true;
    assume $i60 == 1;
    goto $bb25;

  $bb41:
    assume {:verifier.code 0} true;
    assume $i55 == 1;
    goto $bb29;

  $bb38:
    assume {:verifier.code 0} true;
    assume $i50 == 1;
    goto $bb25;

  $bb28:
    assume {:verifier.code 0} true;
    assume $i36 == 1;
    goto $bb29;

  $bb24:
    assume {:verifier.code 0} true;
    assume $i31 == 1;
    goto $bb25;

  $bb355:
    assume {:verifier.code 0} true;
    assume $i505 == 1;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb352:
    assume {:verifier.code 0} true;
    assume $i500 == 1;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb348:
    assume {:verifier.code 0} true;
    assume $i495 == 1;
    goto $bb17;

  $bb345:
    assume {:verifier.code 0} true;
    assume $i490 == 1;
    goto $bb13;

  $bb341:
    assume {:verifier.code 0} true;
    assume $i485 == 1;
    goto $bb17;

  $bb338:
    assume {:verifier.code 0} true;
    assume $i480 == 1;
    goto $bb13;

  $bb334:
    assume {:verifier.code 0} true;
    assume $i475 == 1;
    goto $bb17;

  $bb331:
    assume {:verifier.code 0} true;
    assume $i470 == 1;
    goto $bb13;

  $bb327:
    assume {:verifier.code 0} true;
    assume $i465 == 1;
    goto $bb17;

  $bb324:
    assume {:verifier.code 0} true;
    assume $i460 == 1;
    goto $bb13;

  $bb320:
    assume {:verifier.code 0} true;
    assume $i455 == 1;
    goto $bb17;

  $bb317:
    assume {:verifier.code 0} true;
    assume $i450 == 1;
    goto $bb13;

  $bb313:
    assume {:verifier.code 0} true;
    assume $i445 == 1;
    goto $bb17;

  $bb310:
    assume {:verifier.code 0} true;
    assume $i440 == 1;
    goto $bb13;

  $bb306:
    assume {:verifier.code 0} true;
    assume $i435 == 1;
    goto $bb17;

  $bb303:
    assume {:verifier.code 0} true;
    assume $i430 == 1;
    goto $bb13;

  $bb299:
    assume {:verifier.code 0} true;
    assume $i425 == 1;
    goto $bb17;

  $bb296:
    assume {:verifier.code 0} true;
    assume $i420 == 1;
    goto $bb13;

  $bb292:
    assume {:verifier.code 0} true;
    assume $i415 == 1;
    goto $bb17;

  $bb289:
    assume {:verifier.code 0} true;
    assume $i410 == 1;
    goto $bb13;

  $bb285:
    assume {:verifier.code 0} true;
    assume $i405 == 1;
    goto $bb17;

  $bb282:
    assume {:verifier.code 0} true;
    assume $i400 == 1;
    goto $bb13;

  $bb278:
    assume {:verifier.code 0} true;
    assume $i395 == 1;
    goto $bb17;

  $bb275:
    assume {:verifier.code 0} true;
    assume $i390 == 1;
    goto $bb13;

  $bb271:
    assume {:verifier.code 0} true;
    assume $i385 == 1;
    goto $bb17;

  $bb268:
    assume {:verifier.code 0} true;
    assume $i380 == 1;
    goto $bb13;

  $bb264:
    assume {:verifier.code 0} true;
    assume $i375 == 1;
    goto $bb17;

  $bb261:
    assume {:verifier.code 0} true;
    assume $i370 == 1;
    goto $bb13;

  $bb257:
    assume {:verifier.code 0} true;
    assume $i365 == 1;
    goto $bb17;

  $bb254:
    assume {:verifier.code 0} true;
    assume $i360 == 1;
    goto $bb13;

  $bb250:
    assume {:verifier.code 0} true;
    assume $i355 == 1;
    goto $bb17;

  $bb247:
    assume {:verifier.code 0} true;
    assume $i350 == 1;
    goto $bb13;

  $bb243:
    assume {:verifier.code 0} true;
    assume $i345 == 1;
    goto $bb17;

  $bb240:
    assume {:verifier.code 0} true;
    assume $i340 == 1;
    goto $bb13;

  $bb236:
    assume {:verifier.code 0} true;
    assume $i335 == 1;
    goto $bb17;

  $bb233:
    assume {:verifier.code 0} true;
    assume $i330 == 1;
    goto $bb13;

  $bb229:
    assume {:verifier.code 0} true;
    assume $i325 == 1;
    goto $bb17;

  $bb226:
    assume {:verifier.code 0} true;
    assume $i320 == 1;
    goto $bb13;

  $bb222:
    assume {:verifier.code 0} true;
    assume $i315 == 1;
    goto $bb17;

  $bb219:
    assume {:verifier.code 0} true;
    assume $i310 == 1;
    goto $bb13;

  $bb215:
    assume {:verifier.code 0} true;
    assume $i305 == 1;
    goto $bb17;

  $bb212:
    assume {:verifier.code 0} true;
    assume $i300 == 1;
    goto $bb13;

  $bb208:
    assume {:verifier.code 0} true;
    assume $i295 == 1;
    goto $bb17;

  $bb205:
    assume {:verifier.code 0} true;
    assume $i290 == 1;
    goto $bb13;

  $bb201:
    assume {:verifier.code 0} true;
    assume $i285 == 1;
    goto $bb17;

  $bb198:
    assume {:verifier.code 0} true;
    assume $i280 == 1;
    goto $bb13;

  $bb194:
    assume {:verifier.code 0} true;
    assume $i275 == 1;
    goto $bb17;

  $bb191:
    assume {:verifier.code 0} true;
    assume $i270 == 1;
    goto $bb13;

  $bb187:
    assume {:verifier.code 0} true;
    assume $i265 == 1;
    goto $bb17;

  $bb184:
    assume {:verifier.code 0} true;
    assume $i260 == 1;
    goto $bb13;

  $bb180:
    assume {:verifier.code 0} true;
    assume $i255 == 1;
    goto $bb17;

  $bb177:
    assume {:verifier.code 0} true;
    assume $i250 == 1;
    goto $bb13;

  $bb173:
    assume {:verifier.code 0} true;
    assume $i245 == 1;
    goto $bb17;

  $bb170:
    assume {:verifier.code 0} true;
    assume $i240 == 1;
    goto $bb13;

  $bb166:
    assume {:verifier.code 0} true;
    assume $i235 == 1;
    goto $bb17;

  $bb163:
    assume {:verifier.code 0} true;
    assume $i230 == 1;
    goto $bb13;

  $bb159:
    assume {:verifier.code 0} true;
    assume $i225 == 1;
    goto $bb17;

  $bb156:
    assume {:verifier.code 0} true;
    assume $i220 == 1;
    goto $bb13;

  $bb152:
    assume {:verifier.code 0} true;
    assume $i215 == 1;
    goto $bb17;

  $bb149:
    assume {:verifier.code 0} true;
    assume $i210 == 1;
    goto $bb13;

  $bb145:
    assume {:verifier.code 0} true;
    assume $i205 == 1;
    goto $bb17;

  $bb142:
    assume {:verifier.code 0} true;
    assume $i200 == 1;
    goto $bb13;

  $bb16:
    assume {:verifier.code 0} true;
    assume $i26 == 1;
    goto $bb17;

  $bb12:
    assume {:verifier.code 0} true;
    assume $i22 == 1;
    goto $bb13;

  $bb6:
    assume $i18 == 1;
    goto corral_source_split_30;

  corral_source_split_30:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i7 == 1;
    goto $bb2;

  SeqInstr_1:
    assume !assertsPassed;
    return;
}



const ldv_mutex_lock_10: ref;

axiom ldv_mutex_lock_10 == $sub.ref(0, 228019);

procedure ldv_mutex_lock_10($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_lock_10($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_625;

  corral_source_split_625:
    assume {:verifier.code 0} true;
    call {:si_unique_call 106} ldv_mutex_lock_update_lock_of_abituguru3_data($p0);
    goto SeqInstr_7, SeqInstr_8;

  SeqInstr_8:
    assume assertsPassed;
    goto SeqInstr_9;

  SeqInstr_9:
    goto corral_source_split_626;

  corral_source_split_626:
    assume {:verifier.code 0} true;
    call {:si_unique_call 107} mutex_lock($p0);
    goto corral_source_split_627;

  corral_source_split_627:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_7:
    assume !assertsPassed;
    return;
}



const abituguru3_read_increment_offset: ref;

axiom abituguru3_read_increment_offset == $sub.ref(0, 229051);

procedure abituguru3_read_increment_offset($p0: ref, $i1: i8, $i2: i8, $i3: i8, $p4: ref, $i5: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.0, $CurrAddr;



implementation abituguru3_read_increment_offset($p0: ref, $i1: i8, $i2: i8, $i3: i8, $p4: ref, $i5: i32) returns ($r: i32)
{
  var $i6: i1;
  var $i9: i32;
  var $i10: i8;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i8;
  var $i16: i32;
  var $i17: i8;
  var $i18: i32;
  var $i19: i32;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i32;
  var $i27: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i8: i32;
  var $i34: i32;
  var $i7: i32;
  var $i35: i32;
  var $i36: i32;
  var $i28: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 108} {:cexpr "abituguru3_read_increment_offset:arg:bank"} boogie_si_record_i8($i1);
    call {:si_unique_call 109} {:cexpr "abituguru3_read_increment_offset:arg:offset"} boogie_si_record_i8($i2);
    call {:si_unique_call 110} {:cexpr "abituguru3_read_increment_offset:arg:count"} boogie_si_record_i8($i3);
    call {:si_unique_call 111} {:cexpr "abituguru3_read_increment_offset:arg:offset_count"} boogie_si_record_i32($i5);
    goto corral_source_split_629;

  corral_source_split_629:
    assume {:verifier.code 0} true;
    $i6 := $slt.i32(0, $i5);
    goto corral_source_split_630;

  corral_source_split_630:
    assume {:verifier.code 0} true;
    $i7 := 0;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i6 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i35 := $zext.i8.i32($i3);
    goto corral_source_split_669;

  corral_source_split_669:
    assume {:verifier.code 0} true;
    $i36 := $mul.i32($i35, $i7);
    goto corral_source_split_670;

  corral_source_split_670:
    assume {:verifier.code 0} true;
    $i28 := $i36;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto corral_source_split_658;

  corral_source_split_658:
    assume {:verifier.code 0} true;
    $r := $i28;
    return;

  $bb1:
    assume $i6 == 1;
    goto corral_source_split_632;

  corral_source_split_632:
    assume {:verifier.code 0} true;
    $i8 := 0;
    goto $bb4;

  $bb4:
    call $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $p21, $i22, $i23, $i24, $i25, $i26, $i32, $i33, $i8, $i34 := abituguru3_read_increment_offset_loop_$bb4($p0, $i1, $i2, $i3, $p4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $p21, $i22, $i23, $i24, $i25, $i26, $i32, $i33, $i8, $i34);
    goto $bb4_last;

  corral_source_split_634:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i9 := $zext.i8.i32($i1);
    goto corral_source_split_636;

  corral_source_split_636:
    assume {:verifier.code 0} true;
    $i10 := $trunc.i32.i8($i9);
    goto corral_source_split_637;

  corral_source_split_637:
    assume {:verifier.code 0} true;
    $i11 := $trunc.i32.i8($i8);
    goto corral_source_split_638;

  corral_source_split_638:
    assume {:verifier.code 0} true;
    $i12 := $zext.i8.i32($i11);
    goto corral_source_split_639;

  corral_source_split_639:
    assume {:verifier.code 0} true;
    $i13 := $zext.i8.i32($i2);
    goto corral_source_split_640;

  corral_source_split_640:
    assume {:verifier.code 0} true;
    $i14 := $add.i32($i12, $i13);
    goto corral_source_split_641;

  corral_source_split_641:
    assume {:verifier.code 0} true;
    $i15 := $trunc.i32.i8($i14);
    goto corral_source_split_642;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    $i16 := $zext.i8.i32($i3);
    goto corral_source_split_643;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    $i17 := $trunc.i32.i8($i16);
    goto corral_source_split_644;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    $i18 := $zext.i8.i32($i3);
    goto corral_source_split_645;

  corral_source_split_645:
    assume {:verifier.code 0} true;
    $i19 := $mul.i32($i18, $i8);
    goto corral_source_split_646;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    $i20 := $sext.i32.i64($i19);
    goto corral_source_split_647;

  corral_source_split_647:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($p4, $mul.ref($i20, 1));
    goto corral_source_split_648;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    call {:si_unique_call 112} $i22 := abituguru3_read($p0, $i10, $i15, $i17, $p21);
    call {:si_unique_call 113} {:cexpr "x"} boogie_si_record_i32($i22);
    goto corral_source_split_649;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i32($i3);
    goto corral_source_split_650;

  corral_source_split_650:
    assume {:verifier.code 0} true;
    $i24 := $ne.i32($i23, $i22);
    goto corral_source_split_651;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    $i25, $i26 := $i8, $i22;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i24 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i32 := $add.i32($i8, 1);
    call {:si_unique_call 114} {:cexpr "i"} boogie_si_record_i32($i32);
    goto corral_source_split_664;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    $i33 := $slt.i32($i32, $i5);
    goto corral_source_split_665;

  corral_source_split_665:
    assume {:verifier.code 0} true;
    $i34 := $i32;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i33 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_667;

  corral_source_split_667:
    assume {:verifier.code 0} true;
    $i7 := $i34;
    goto $bb3;

  $bb13:
    assume $i33 == 1;
    assume {:verifier.code 0} true;
    $i8 := $i32;
    goto $bb13_dummy;

  $bb6:
    assume $i24 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_653;

  corral_source_split_653:
    assume {:verifier.code 0} true;
    $i27 := $slt.i32($i26, 0);
    goto corral_source_split_654;

  corral_source_split_654:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i27 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i29 := $zext.i8.i32($i3);
    goto corral_source_split_660;

  corral_source_split_660:
    assume {:verifier.code 0} true;
    $i30 := $mul.i32($i29, $i25);
    goto corral_source_split_661;

  corral_source_split_661:
    assume {:verifier.code 0} true;
    $i31 := $add.i32($i30, $i26);
    goto corral_source_split_662;

  corral_source_split_662:
    assume {:verifier.code 0} true;
    $i28 := $i31;
    goto $bb10;

  $bb8:
    assume $i27 == 1;
    goto corral_source_split_656;

  corral_source_split_656:
    assume {:verifier.code 0} true;
    $i28 := $i26;
    goto $bb10;

  $bb13_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_634;
}



const abituguru3_read: ref;

axiom abituguru3_read == $sub.ref(0, 230083);

procedure abituguru3_read($p0: ref, $i1: i8, $i2: i8, $i3: i8, $p4: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.0, $CurrAddr;



implementation abituguru3_read($p0: ref, $i1: i8, $i2: i8, $i3: i8, $p4: ref) returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p13: ref;
  var $i14: i16;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i8;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i24;
  var $i28: i24;
  var $i29: i24;
  var $p30: ref;
  var $p31: ref;
  var $i32: i8;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i8;
  var $p41: ref;
  var $i42: i16;
  var $i43: i32;
  var $i44: i32;
  var $i45: i1;
  var $i46: i8;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i24;
  var $i55: i24;
  var $i56: i24;
  var $p57: ref;
  var $p58: ref;
  var $i59: i8;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i1;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i8;
  var $p68: ref;
  var $i69: i16;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i73: i8;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i24;
  var $i82: i24;
  var $i83: i24;
  var $p84: ref;
  var $p85: ref;
  var $i86: i8;
  var $i87: i64;
  var $i88: i64;
  var $i89: i64;
  var $i90: i1;
  var $i91: i32;
  var $i92: i32;
  var $i93: i32;
  var $i94: i8;
  var $p95: ref;
  var $i96: i16;
  var $i97: i32;
  var $i98: i32;
  var $i99: i1;
  var $i100: i8;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i24;
  var $i109: i24;
  var $i110: i24;
  var $p111: ref;
  var $p112: ref;
  var $i113: i8;
  var $i114: i64;
  var $i115: i64;
  var $i116: i64;
  var $i117: i1;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $i121: i1;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i32;
  var $i128: i8;
  var $i129: i1;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i24;
  var $i137: i24;
  var $i138: i24;
  var $p139: ref;
  var $p140: ref;
  var $i141: i8;
  var $i142: i64;
  var $i143: i64;
  var $i144: i64;
  var $i145: i1;
  var $i146: i32;
  var $i147: i32;
  var $p149: ref;
  var $i150: i16;
  var $i151: i32;
  var $i152: i8;
  var $i153: i64;
  var $p154: ref;
  var $i155: i32;
  var $i156: i1;
  var $i123: i32;
  var $i157: i32;
  var $i122: i32;
  var $i148: i32;
  var $i12: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 115} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 116} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 117} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 118} $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 119} $p9 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 120} {:cexpr "abituguru3_read:arg:bank"} boogie_si_record_i8($i1);
    call {:si_unique_call 121} {:cexpr "abituguru3_read:arg:offset"} boogie_si_record_i8($i2);
    call {:si_unique_call 122} {:cexpr "abituguru3_read:arg:count"} boogie_si_record_i8($i3);
    goto corral_source_split_672;

  corral_source_split_672:
    assume {:verifier.code 0} true;
    call {:si_unique_call 123} $i10 := abituguru3_synchronize($p0);
    call {:si_unique_call 124} {:cexpr "x"} boogie_si_record_i32($i10);
    goto corral_source_split_673;

  corral_source_split_673:
    assume {:verifier.code 0} true;
    $i11 := $ne.i32($i10, 0);
    goto corral_source_split_674;

  corral_source_split_674:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    $i14 := $load.i16($M.0, $p13);
    goto corral_source_split_681;

  corral_source_split_681:
    assume {:verifier.code 0} true;
    $i15 := $zext.i16.i32($i14);
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    $i16 := $add.i32($i15, 4);
    goto corral_source_split_683;

  corral_source_split_683:
    assume {:verifier.code 0} true;
    call {:si_unique_call 125} outb(26, $i16);
    goto corral_source_split_684;

  corral_source_split_684:
    assume {:verifier.code 0} true;
    call {:si_unique_call 126} $i17 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 127} {:cexpr "x"} boogie_si_record_i32($i17);
    goto corral_source_split_685;

  corral_source_split_685:
    assume {:verifier.code 0} true;
    $i18 := $ne.i32($i17, $sub.i32(0, 1));
    goto corral_source_split_686;

  corral_source_split_686:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i18 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i39 := $zext.i8.i32($i1);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    $i40 := $trunc.i32.i8($i39);
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    $i42 := $load.i16($M.0, $p41);
    goto corral_source_split_724;

  corral_source_split_724:
    assume {:verifier.code 0} true;
    $i43 := $zext.i16.i32($i42);
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    call {:si_unique_call 131} outb($i40, $i43);
    goto corral_source_split_726;

  corral_source_split_726:
    assume {:verifier.code 0} true;
    call {:si_unique_call 132} $i44 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 133} {:cexpr "x"} boogie_si_record_i32($i44);
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    $i45 := $ne.i32($i44, $sub.i32(0, 1));
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    assume {:branchcond $i45} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i45 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i66 := $zext.i8.i32($i2);
    goto corral_source_split_763;

  corral_source_split_763:
    assume {:verifier.code 0} true;
    $i67 := $trunc.i32.i8($i66);
    goto corral_source_split_764;

  corral_source_split_764:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_765;

  corral_source_split_765:
    assume {:verifier.code 0} true;
    $i69 := $load.i16($M.0, $p68);
    goto corral_source_split_766;

  corral_source_split_766:
    assume {:verifier.code 0} true;
    $i70 := $zext.i16.i32($i69);
    goto corral_source_split_767;

  corral_source_split_767:
    assume {:verifier.code 0} true;
    call {:si_unique_call 137} outb($i67, $i70);
    goto corral_source_split_768;

  corral_source_split_768:
    assume {:verifier.code 0} true;
    call {:si_unique_call 138} $i71 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 139} {:cexpr "x"} boogie_si_record_i32($i71);
    goto corral_source_split_769;

  corral_source_split_769:
    assume {:verifier.code 0} true;
    $i72 := $ne.i32($i71, $sub.i32(0, 1));
    goto corral_source_split_770;

  corral_source_split_770:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i72 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i93 := $zext.i8.i32($i3);
    goto corral_source_split_805;

  corral_source_split_805:
    assume {:verifier.code 0} true;
    $i94 := $trunc.i32.i8($i93);
    goto corral_source_split_806;

  corral_source_split_806:
    assume {:verifier.code 0} true;
    $p95 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_807;

  corral_source_split_807:
    assume {:verifier.code 0} true;
    $i96 := $load.i16($M.0, $p95);
    goto corral_source_split_808;

  corral_source_split_808:
    assume {:verifier.code 0} true;
    $i97 := $zext.i16.i32($i96);
    goto corral_source_split_809;

  corral_source_split_809:
    assume {:verifier.code 0} true;
    call {:si_unique_call 143} outb($i94, $i97);
    goto corral_source_split_810;

  corral_source_split_810:
    assume {:verifier.code 0} true;
    call {:si_unique_call 144} $i98 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 145} {:cexpr "x"} boogie_si_record_i32($i98);
    goto corral_source_split_811;

  corral_source_split_811:
    assume {:verifier.code 0} true;
    $i99 := $ne.i32($i98, $sub.i32(0, 1));
    goto corral_source_split_812;

  corral_source_split_812:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i99 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i120 := $zext.i8.i32($i3);
    goto corral_source_split_847;

  corral_source_split_847:
    assume {:verifier.code 0} true;
    $i121 := $sgt.i32($i120, 0);
    goto corral_source_split_848;

  corral_source_split_848:
    assume {:verifier.code 0} true;
    $i122 := 0;
    assume {:branchcond $i121} true;
    goto $bb41, $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    assume !($i121 == 1);
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    $i148 := $i122;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    goto corral_source_split_890;

  corral_source_split_890:
    assume {:verifier.code 0} true;
    $i12 := $i148;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    $r := $i12;
    return;

  $bb41:
    assume $i121 == 1;
    goto corral_source_split_850;

  corral_source_split_850:
    assume {:verifier.code 0} true;
    $i123 := 0;
    goto $bb44;

  $bb44:
    call $i124, $i125, $i126, $i127, $p149, $i150, $i151, $i152, $i153, $p154, $i155, $i156, $i123, $i157 := abituguru3_read_loop_$bb44($p0, $p4, $i120, $i124, $i125, $i126, $i127, $p149, $i150, $i151, $i152, $i153, $p154, $i155, $i156, $i123, $i157);
    goto $bb44_last;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    call {:si_unique_call 149} $i124 := abituguru3_wait_for_read($p0);
    call {:si_unique_call 150} {:cexpr "x"} boogie_si_record_i32($i124);
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    $i125 := $ne.i32($i124, $sub.i32(0, 1));
    goto corral_source_split_855;

  corral_source_split_855:
    assume {:verifier.code 0} true;
    $i126, $i127 := $i123, $i124;
    assume true;
    goto $bb46, $bb47;

  $bb47:
    assume !($i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    $p149 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_892;

  corral_source_split_892:
    assume {:verifier.code 0} true;
    $i150 := $load.i16($M.0, $p149);
    goto corral_source_split_893;

  corral_source_split_893:
    assume {:verifier.code 0} true;
    $i151 := $zext.i16.i32($i150);
    goto corral_source_split_894;

  corral_source_split_894:
    assume {:verifier.code 0} true;
    call {:si_unique_call 154} $i152 := inb($i151);
    goto corral_source_split_895;

  corral_source_split_895:
    assume {:verifier.code 0} true;
    $i153 := $sext.i32.i64($i123);
    goto corral_source_split_896;

  corral_source_split_896:
    assume {:verifier.code 0} true;
    $p154 := $add.ref($p4, $mul.ref($i153, 1));
    goto corral_source_split_897;

  corral_source_split_897:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p154, $i152);
    goto corral_source_split_898;

  corral_source_split_898:
    assume {:verifier.code 0} true;
    $i155 := $add.i32($i123, 1);
    call {:si_unique_call 155} {:cexpr "i"} boogie_si_record_i32($i155);
    goto corral_source_split_899;

  corral_source_split_899:
    assume {:verifier.code 0} true;
    $i156 := $sgt.i32($i120, $i155);
    goto corral_source_split_900;

  corral_source_split_900:
    assume {:verifier.code 0} true;
    $i157 := $i155;
    assume true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i156 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_902;

  corral_source_split_902:
    assume {:verifier.code 0} true;
    $i122 := $i157;
    goto $bb43;

  $bb56:
    assume $i156 == 1;
    assume {:verifier.code 0} true;
    $i123 := $i155;
    goto $bb56_dummy;

  $bb46:
    assume $i125 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_857;

  corral_source_split_857:
    assume {:verifier.code 0} true;
    $i128 := $M.2;
    goto corral_source_split_858;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    $i129 := $trunc.i8.i1($i128);
    goto corral_source_split_859;

  corral_source_split_859:
    assume {:verifier.code 0} true;
    assume {:branchcond $i129} true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i129 == 1);
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $i148 := $i126;
    goto $bb54;

  $bb48:
    assume $i129 == 1;
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    $p130 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p130, .str.5);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    $p131 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p131, .str.6);
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p132, .str.7);
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    $p133 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_868;

  corral_source_split_868:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p133, .str.16);
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    $p134 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_870;

  corral_source_split_870:
    assume {:verifier.code 0} true;
    $p135 := $bitcast.ref.ref($p134);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    $i136 := $load.i24($M.7, $p135);
    goto corral_source_split_872;

  corral_source_split_872:
    assume {:verifier.code 0} true;
    $i137 := $and.i24($i136, $sub.i24(0, 262144));
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    $i138 := $or.i24($i137, 800);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p135, $i138);
    goto corral_source_split_875;

  corral_source_split_875:
    assume {:verifier.code 0} true;
    $p139 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_876;

  corral_source_split_876:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p139, 1);
    goto corral_source_split_877;

  corral_source_split_877:
    assume {:verifier.code 0} true;
    $p140 := $add.ref($add.ref($p9, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    $i141 := $load.i8($M.8, $p140);
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    $i142 := $zext.i8.i64($i141);
    goto corral_source_split_880;

  corral_source_split_880:
    assume {:verifier.code 0} true;
    $i143 := $and.i64($i142, 1);
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    call {:si_unique_call 151} $i144 := ldv__builtin_expect($i143, 0);
    call {:si_unique_call 152} {:cexpr "tmp___3"} boogie_si_record_i64($i144);
    goto corral_source_split_882;

  corral_source_split_882:
    assume {:verifier.code 0} true;
    $i145 := $ne.i64($i144, 0);
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb50, $bb51;

  $bb51:
    assume !($i145 == 1);
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb50:
    assume $i145 == 1;
    goto corral_source_split_885;

  corral_source_split_885:
    assume {:verifier.code 0} true;
    $i146 := $zext.i8.i32($i1);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    $i147 := $zext.i8.i32($i2);
    goto corral_source_split_887;

  corral_source_split_887:
    assume {:verifier.code 0} true;
    call {:si_unique_call 153} __dynamic_pr_debug.ref.ref.i32.i32.i32.i32($p9, .str.17, $i126, $i146, $i147, $i127);
    goto corral_source_split_888;

  corral_source_split_888:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb32:
    assume $i99 == 1;
    goto corral_source_split_814;

  corral_source_split_814:
    assume {:verifier.code 0} true;
    $i100 := $M.2;
    goto corral_source_split_815;

  corral_source_split_815:
    assume {:verifier.code 0} true;
    $i101 := $trunc.i8.i1($i100);
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    assume {:branchcond $i101} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i101 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i12 := $sub.i32(0, 5);
    goto $bb3;

  $bb34:
    assume $i101 == 1;
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    $p102 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_819;

  corral_source_split_819:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p102, .str.5);
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    $p103 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_821;

  corral_source_split_821:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p103, .str.6);
    goto corral_source_split_822;

  corral_source_split_822:
    assume {:verifier.code 0} true;
    $p104 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_823;

  corral_source_split_823:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p104, .str.7);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    $p105 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p105, .str.14);
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    $p107 := $bitcast.ref.ref($p106);
    goto corral_source_split_828;

  corral_source_split_828:
    assume {:verifier.code 0} true;
    $i108 := $load.i24($M.7, $p107);
    goto corral_source_split_829;

  corral_source_split_829:
    assume {:verifier.code 0} true;
    $i109 := $and.i24($i108, $sub.i24(0, 262144));
    goto corral_source_split_830;

  corral_source_split_830:
    assume {:verifier.code 0} true;
    $i110 := $or.i24($i109, 791);
    goto corral_source_split_831;

  corral_source_split_831:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p107, $i110);
    goto corral_source_split_832;

  corral_source_split_832:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p111, 1);
    goto corral_source_split_834;

  corral_source_split_834:
    assume {:verifier.code 0} true;
    $p112 := $add.ref($add.ref($p8, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    $i113 := $load.i8($M.8, $p112);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    $i114 := $zext.i8.i64($i113);
    goto corral_source_split_837;

  corral_source_split_837:
    assume {:verifier.code 0} true;
    $i115 := $and.i64($i114, 1);
    goto corral_source_split_838;

  corral_source_split_838:
    assume {:verifier.code 0} true;
    call {:si_unique_call 146} $i116 := ldv__builtin_expect($i115, 0);
    call {:si_unique_call 147} {:cexpr "tmp___2"} boogie_si_record_i64($i116);
    goto corral_source_split_839;

  corral_source_split_839:
    assume {:verifier.code 0} true;
    $i117 := $ne.i64($i116, 0);
    goto corral_source_split_840;

  corral_source_split_840:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i117 == 1);
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb36:
    assume $i117 == 1;
    goto corral_source_split_842;

  corral_source_split_842:
    assume {:verifier.code 0} true;
    $i118 := $zext.i8.i32($i1);
    goto corral_source_split_843;

  corral_source_split_843:
    assume {:verifier.code 0} true;
    $i119 := $zext.i8.i32($i2);
    goto corral_source_split_844;

  corral_source_split_844:
    assume {:verifier.code 0} true;
    call {:si_unique_call 148} __dynamic_pr_debug.ref.ref.i32.i32.i32($p8, .str.15, $i118, $i119, $i98);
    goto corral_source_split_845;

  corral_source_split_845:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb23:
    assume $i72 == 1;
    goto corral_source_split_772;

  corral_source_split_772:
    assume {:verifier.code 0} true;
    $i73 := $M.2;
    goto corral_source_split_773;

  corral_source_split_773:
    assume {:verifier.code 0} true;
    $i74 := $trunc.i8.i1($i73);
    goto corral_source_split_774;

  corral_source_split_774:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i74 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i12 := $sub.i32(0, 5);
    goto $bb3;

  $bb25:
    assume $i74 == 1;
    goto corral_source_split_776;

  corral_source_split_776:
    assume {:verifier.code 0} true;
    $p75 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_777;

  corral_source_split_777:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p75, .str.5);
    goto corral_source_split_778;

  corral_source_split_778:
    assume {:verifier.code 0} true;
    $p76 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_779;

  corral_source_split_779:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p76, .str.6);
    goto corral_source_split_780;

  corral_source_split_780:
    assume {:verifier.code 0} true;
    $p77 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_781;

  corral_source_split_781:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p77, .str.7);
    goto corral_source_split_782;

  corral_source_split_782:
    assume {:verifier.code 0} true;
    $p78 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_783;

  corral_source_split_783:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p78, .str.12);
    goto corral_source_split_784;

  corral_source_split_784:
    assume {:verifier.code 0} true;
    $p79 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_785;

  corral_source_split_785:
    assume {:verifier.code 0} true;
    $p80 := $bitcast.ref.ref($p79);
    goto corral_source_split_786;

  corral_source_split_786:
    assume {:verifier.code 0} true;
    $i81 := $load.i24($M.7, $p80);
    goto corral_source_split_787;

  corral_source_split_787:
    assume {:verifier.code 0} true;
    $i82 := $and.i24($i81, $sub.i24(0, 262144));
    goto corral_source_split_788;

  corral_source_split_788:
    assume {:verifier.code 0} true;
    $i83 := $or.i24($i82, 782);
    goto corral_source_split_789;

  corral_source_split_789:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p80, $i83);
    goto corral_source_split_790;

  corral_source_split_790:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_791;

  corral_source_split_791:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p84, 1);
    goto corral_source_split_792;

  corral_source_split_792:
    assume {:verifier.code 0} true;
    $p85 := $add.ref($add.ref($p7, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_793;

  corral_source_split_793:
    assume {:verifier.code 0} true;
    $i86 := $load.i8($M.8, $p85);
    goto corral_source_split_794;

  corral_source_split_794:
    assume {:verifier.code 0} true;
    $i87 := $zext.i8.i64($i86);
    goto corral_source_split_795;

  corral_source_split_795:
    assume {:verifier.code 0} true;
    $i88 := $and.i64($i87, 1);
    goto corral_source_split_796;

  corral_source_split_796:
    assume {:verifier.code 0} true;
    call {:si_unique_call 140} $i89 := ldv__builtin_expect($i88, 0);
    call {:si_unique_call 141} {:cexpr "tmp___1"} boogie_si_record_i64($i89);
    goto corral_source_split_797;

  corral_source_split_797:
    assume {:verifier.code 0} true;
    $i90 := $ne.i64($i89, 0);
    goto corral_source_split_798;

  corral_source_split_798:
    assume {:verifier.code 0} true;
    assume {:branchcond $i90} true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i90 == 1);
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb27:
    assume $i90 == 1;
    goto corral_source_split_800;

  corral_source_split_800:
    assume {:verifier.code 0} true;
    $i91 := $zext.i8.i32($i1);
    goto corral_source_split_801;

  corral_source_split_801:
    assume {:verifier.code 0} true;
    $i92 := $zext.i8.i32($i2);
    goto corral_source_split_802;

  corral_source_split_802:
    assume {:verifier.code 0} true;
    call {:si_unique_call 142} __dynamic_pr_debug.ref.ref.i32.i32.i32($p7, .str.13, $i91, $i92, $i71);
    goto corral_source_split_803;

  corral_source_split_803:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb14:
    assume $i45 == 1;
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    $i46 := $M.2;
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    $i47 := $trunc.i8.i1($i46);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    assume {:branchcond $i47} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i47 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i12 := $sub.i32(0, 5);
    goto $bb3;

  $bb16:
    assume $i47 == 1;
    goto corral_source_split_734;

  corral_source_split_734:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p48, .str.5);
    goto corral_source_split_736;

  corral_source_split_736:
    assume {:verifier.code 0} true;
    $p49 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_737;

  corral_source_split_737:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p49, .str.6);
    goto corral_source_split_738;

  corral_source_split_738:
    assume {:verifier.code 0} true;
    $p50 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_739;

  corral_source_split_739:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p50, .str.7);
    goto corral_source_split_740;

  corral_source_split_740:
    assume {:verifier.code 0} true;
    $p51 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_741;

  corral_source_split_741:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p51, .str.10);
    goto corral_source_split_742;

  corral_source_split_742:
    assume {:verifier.code 0} true;
    $p52 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_743;

  corral_source_split_743:
    assume {:verifier.code 0} true;
    $p53 := $bitcast.ref.ref($p52);
    goto corral_source_split_744;

  corral_source_split_744:
    assume {:verifier.code 0} true;
    $i54 := $load.i24($M.7, $p53);
    goto corral_source_split_745;

  corral_source_split_745:
    assume {:verifier.code 0} true;
    $i55 := $and.i24($i54, $sub.i24(0, 262144));
    goto corral_source_split_746;

  corral_source_split_746:
    assume {:verifier.code 0} true;
    $i56 := $or.i24($i55, 773);
    goto corral_source_split_747;

  corral_source_split_747:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p53, $i56);
    goto corral_source_split_748;

  corral_source_split_748:
    assume {:verifier.code 0} true;
    $p57 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_749;

  corral_source_split_749:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p57, 1);
    goto corral_source_split_750;

  corral_source_split_750:
    assume {:verifier.code 0} true;
    $p58 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_751;

  corral_source_split_751:
    assume {:verifier.code 0} true;
    $i59 := $load.i8($M.8, $p58);
    goto corral_source_split_752;

  corral_source_split_752:
    assume {:verifier.code 0} true;
    $i60 := $zext.i8.i64($i59);
    goto corral_source_split_753;

  corral_source_split_753:
    assume {:verifier.code 0} true;
    $i61 := $and.i64($i60, 1);
    goto corral_source_split_754;

  corral_source_split_754:
    assume {:verifier.code 0} true;
    call {:si_unique_call 134} $i62 := ldv__builtin_expect($i61, 0);
    call {:si_unique_call 135} {:cexpr "tmp___0"} boogie_si_record_i64($i62);
    goto corral_source_split_755;

  corral_source_split_755:
    assume {:verifier.code 0} true;
    $i63 := $ne.i64($i62, 0);
    goto corral_source_split_756;

  corral_source_split_756:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i63 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb18:
    assume $i63 == 1;
    goto corral_source_split_758;

  corral_source_split_758:
    assume {:verifier.code 0} true;
    $i64 := $zext.i8.i32($i1);
    goto corral_source_split_759;

  corral_source_split_759:
    assume {:verifier.code 0} true;
    $i65 := $zext.i8.i32($i2);
    goto corral_source_split_760;

  corral_source_split_760:
    assume {:verifier.code 0} true;
    call {:si_unique_call 136} __dynamic_pr_debug.ref.ref.i32.i32.i32($p6, .str.11, $i64, $i65, $i44);
    goto corral_source_split_761;

  corral_source_split_761:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb5:
    assume $i18 == 1;
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    $i19 := $M.2;
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    $i20 := $trunc.i8.i1($i19);
    goto corral_source_split_690;

  corral_source_split_690:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i20 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i12 := $sub.i32(0, 5);
    goto $bb3;

  $bb7:
    assume $i20 == 1;
    goto corral_source_split_692;

  corral_source_split_692:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_693;

  corral_source_split_693:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p21, .str.5);
    goto corral_source_split_694;

  corral_source_split_694:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_695;

  corral_source_split_695:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p22, .str.6);
    goto corral_source_split_696;

  corral_source_split_696:
    assume {:verifier.code 0} true;
    $p23 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p23, .str.7);
    goto corral_source_split_698;

  corral_source_split_698:
    assume {:verifier.code 0} true;
    $p24 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p24, .str.8);
    goto corral_source_split_700;

  corral_source_split_700:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    $p26 := $bitcast.ref.ref($p25);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    $i27 := $load.i24($M.7, $p26);
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    $i28 := $and.i24($i27, $sub.i24(0, 262144));
    goto corral_source_split_704;

  corral_source_split_704:
    assume {:verifier.code 0} true;
    $i29 := $or.i24($i28, 764);
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p26, $i29);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    $p30 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p30, 1);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    $p31 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_709;

  corral_source_split_709:
    assume {:verifier.code 0} true;
    $i32 := $load.i8($M.8, $p31);
    goto corral_source_split_710;

  corral_source_split_710:
    assume {:verifier.code 0} true;
    $i33 := $zext.i8.i64($i32);
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    $i34 := $and.i64($i33, 1);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    call {:si_unique_call 128} $i35 := ldv__builtin_expect($i34, 0);
    call {:si_unique_call 129} {:cexpr "tmp"} boogie_si_record_i64($i35);
    goto corral_source_split_713;

  corral_source_split_713:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, 0);
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb9:
    assume $i36 == 1;
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    $i37 := $zext.i8.i32($i1);
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    $i38 := $zext.i8.i32($i2);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    call {:si_unique_call 130} __dynamic_pr_debug.ref.ref.i32.i32.i32($p5, .str.9, $i37, $i38, $i17);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb1:
    assume $i11 == 1;
    goto corral_source_split_676;

  corral_source_split_676:
    assume {:verifier.code 0} true;
    $i12 := $i10;
    goto $bb3;

  $bb56_dummy:
    assume false;
    return;

  $bb44_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_852;
}



const ldv_mutex_unlock_11: ref;

axiom ldv_mutex_unlock_11 == $sub.ref(0, 231115);

procedure ldv_mutex_unlock_11($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_unlock_11($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_904;

  corral_source_split_904:
    assume {:verifier.code 0} true;
    call {:si_unique_call 156} ldv_mutex_unlock_update_lock_of_abituguru3_data($p0);
    goto SeqInstr_10, SeqInstr_11;

  SeqInstr_11:
    assume assertsPassed;
    goto SeqInstr_12;

  SeqInstr_12:
    goto corral_source_split_905;

  corral_source_split_905:
    assume {:verifier.code 0} true;
    call {:si_unique_call 157} mutex_unlock($p0);
    goto corral_source_split_906;

  corral_source_split_906:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_10:
    assume !assertsPassed;
    return;
}



const ldv_mutex_unlock_update_lock_of_abituguru3_data: ref;

axiom ldv_mutex_unlock_update_lock_of_abituguru3_data == $sub.ref(0, 232147);

procedure ldv_mutex_unlock_update_lock_of_abituguru3_data($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_unlock_update_lock_of_abituguru3_data($p0: ref)
{
  var $i1: i32;
  var $i2: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_908;

  corral_source_split_908:
    assume {:verifier.code 0} true;
    $i1 := $M.9;
    goto corral_source_split_909;

  corral_source_split_909:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, 2);
    goto corral_source_split_910;

  corral_source_split_910:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $M.9 := 1;
    call {:si_unique_call 159} {:cexpr "ldv_mutex_update_lock_of_abituguru3_data"} boogie_si_record_i32(1);
    goto corral_source_split_915;

  corral_source_split_915:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_912;

  corral_source_split_912:
    assume {:verifier.code 0} true;
    call {:si_unique_call 158} ldv_error();
    goto SeqInstr_13, SeqInstr_14;

  SeqInstr_14:
    assume assertsPassed;
    goto SeqInstr_15;

  SeqInstr_15:
    goto corral_source_split_913;

  corral_source_split_913:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_13:
    assume !assertsPassed;
    return;
}



const mutex_unlock: ref;

axiom mutex_unlock == $sub.ref(0, 233179);

procedure mutex_unlock($p0: ref);
  free requires assertsPassed;



implementation mutex_unlock($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_917;

  corral_source_split_917:
    assume {:verifier.code 0} true;
    return;
}



const ldv_error: ref;

axiom ldv_error == $sub.ref(0, 234211);

procedure ldv_error();
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_error()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_919;

  corral_source_split_919:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 1} true;
    call {:si_unique_call 160} __VERIFIER_error();
    goto SeqInstr_16, SeqInstr_17;

  SeqInstr_17:
    assume assertsPassed;
    goto SeqInstr_18;

  SeqInstr_18:
    goto corral_source_split_921;

  corral_source_split_921:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_16:
    assume !assertsPassed;
    return;
}



const abituguru3_synchronize: ref;

axiom abituguru3_synchronize == $sub.ref(0, 235243);

procedure abituguru3_synchronize($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $CurrAddr;



implementation abituguru3_synchronize($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i1;
  var $i9: i8;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i24;
  var $i18: i24;
  var $i19: i24;
  var $p20: ref;
  var $p21: ref;
  var $i22: i8;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i1;
  var $p28: ref;
  var $i29: i16;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i1;
  var $i34: i8;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i24;
  var $i43: i24;
  var $i44: i24;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $i53: i16;
  var $i54: i32;
  var $i55: i32;
  var $i56: i1;
  var $i57: i8;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i24;
  var $i66: i24;
  var $i67: i24;
  var $p68: ref;
  var $p69: ref;
  var $i70: i8;
  var $i71: i64;
  var $i72: i64;
  var $i73: i64;
  var $i74: i1;
  var $p75: ref;
  var $i76: i16;
  var $i77: i32;
  var $i78: i32;
  var $i79: i1;
  var $i80: i8;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i24;
  var $i89: i24;
  var $i90: i24;
  var $p91: ref;
  var $p92: ref;
  var $i93: i8;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $i100: i8;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i24;
  var $i109: i24;
  var $i110: i24;
  var $p111: ref;
  var $p112: ref;
  var $i113: i8;
  var $i114: i64;
  var $i115: i64;
  var $i116: i64;
  var $i117: i1;
  var $p118: ref;
  var $i119: i16;
  var $i120: i32;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i8;
  var $i130: i1;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i24;
  var $i138: i24;
  var $i139: i24;
  var $p140: ref;
  var $p141: ref;
  var $i142: i8;
  var $i143: i64;
  var $i144: i64;
  var $i145: i64;
  var $i146: i1;
  var $i147: i16;
  var $i148: i32;
  var $i149: i8;
  var $i150: i32;
  var $i151: i1;
  var $i124: i32;
  var $i125: i32;
  var $i27: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 161} $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 162} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 163} $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 164} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 165} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 166} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_923;

  corral_source_split_923:
    assume {:verifier.code 0} true;
    call {:si_unique_call 167} $i7 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 168} {:cexpr "x"} boogie_si_record_i32($i7);
    goto corral_source_split_924;

  corral_source_split_924:
    assume {:verifier.code 0} true;
    $i8 := $ne.i32($i7, $sub.i32(0, 1));
    goto corral_source_split_925;

  corral_source_split_925:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_960;

  corral_source_split_960:
    assume {:verifier.code 0} true;
    $i29 := $load.i16($M.0, $p28);
    goto corral_source_split_961;

  corral_source_split_961:
    assume {:verifier.code 0} true;
    $i30 := $zext.i16.i32($i29);
    goto corral_source_split_962;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    $i31 := $add.i32($i30, 4);
    goto corral_source_split_963;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    call {:si_unique_call 172} outb(32, $i31);
    goto corral_source_split_964;

  corral_source_split_964:
    assume {:verifier.code 0} true;
    call {:si_unique_call 173} $i32 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 174} {:cexpr "x"} boogie_si_record_i32($i32);
    goto corral_source_split_965;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    $i33 := $ne.i32($i32, $sub.i32(0, 1));
    goto corral_source_split_966;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $p52 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    $i53 := $load.i16($M.0, $p52);
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    $i54 := $zext.i16.i32($i53);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    call {:si_unique_call 178} outb(16, $i54);
    goto corral_source_split_1002;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    call {:si_unique_call 179} $i55 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 180} {:cexpr "x"} boogie_si_record_i32($i55);
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    $i56 := $ne.i32($i55, $sub.i32(0, 1));
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    assume {:branchcond $i56} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i56 == 1);
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $p75 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_1037;

  corral_source_split_1037:
    assume {:verifier.code 0} true;
    $i76 := $load.i16($M.0, $p75);
    goto corral_source_split_1038;

  corral_source_split_1038:
    assume {:verifier.code 0} true;
    $i77 := $zext.i16.i32($i76);
    goto corral_source_split_1039;

  corral_source_split_1039:
    assume {:verifier.code 0} true;
    call {:si_unique_call 184} outb(0, $i77);
    goto corral_source_split_1040;

  corral_source_split_1040:
    assume {:verifier.code 0} true;
    call {:si_unique_call 185} $i78 := abituguru3_wait_while_busy($p0);
    call {:si_unique_call 186} {:cexpr "x"} boogie_si_record_i32($i78);
    goto corral_source_split_1041;

  corral_source_split_1041:
    assume {:verifier.code 0} true;
    $i79 := $ne.i32($i78, $sub.i32(0, 1));
    goto corral_source_split_1042;

  corral_source_split_1042:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i79 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    call {:si_unique_call 190} $i98 := abituguru3_wait_for_read($p0);
    call {:si_unique_call 191} {:cexpr "x"} boogie_si_record_i32($i98);
    goto corral_source_split_1075;

  corral_source_split_1075:
    assume {:verifier.code 0} true;
    $i99 := $ne.i32($i98, $sub.i32(0, 1));
    goto corral_source_split_1076;

  corral_source_split_1076:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i99 == 1);
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p118 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_1109;

  corral_source_split_1109:
    assume {:verifier.code 0} true;
    $i119 := $load.i16($M.0, $p118);
    goto corral_source_split_1110;

  corral_source_split_1110:
    assume {:verifier.code 0} true;
    $i120 := $zext.i16.i32($i119);
    goto corral_source_split_1111;

  corral_source_split_1111:
    assume {:verifier.code 0} true;
    call {:si_unique_call 195} $i121 := inb($i120);
    call {:si_unique_call 196} {:cexpr "tmp___5"} boogie_si_record_i8($i121);
    goto corral_source_split_1112;

  corral_source_split_1112:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i32($i121);
    call {:si_unique_call 197} {:cexpr "x"} boogie_si_record_i32($i122);
    goto corral_source_split_1113;

  corral_source_split_1113:
    assume {:verifier.code 0} true;
    $i123 := $ne.i32($i122, 172);
    goto corral_source_split_1114;

  corral_source_split_1114:
    assume {:verifier.code 0} true;
    assume {:branchcond $i123} true;
    goto $bb47, $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    assume !($i123 == 1);
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    $i27 := 0;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_958;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    $r := $i27;
    return;

  $bb47:
    assume $i123 == 1;
    goto corral_source_split_1116;

  corral_source_split_1116:
    assume {:verifier.code 0} true;
    $i124, $i125 := $i122, 5;
    goto $bb50;

  $bb50:
    call $i126, $i127, $i128, $i147, $i148, $i149, $i150, $i151, $i124, $i125 := abituguru3_synchronize_loop_$bb50($p118, $i126, $i127, $i128, $i147, $i148, $i149, $i150, $i151, $i124, $i125);
    goto $bb50_last;

  corral_source_split_1118:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $i126 := $sub.i32($i125, 1);
    call {:si_unique_call 198} {:cexpr "timeout"} boogie_si_record_i32($i126);
    goto corral_source_split_1120;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    $i127 := $eq.i32($i126, 0);
    goto corral_source_split_1121;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    $i128 := $i124;
    assume true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i127 == 1);
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    call {:si_unique_call 202} msleep(1);
    goto corral_source_split_1154;

  corral_source_split_1154:
    assume {:verifier.code 0} true;
    $i147 := $load.i16($M.0, $p118);
    goto corral_source_split_1155;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    $i148 := $zext.i16.i32($i147);
    goto corral_source_split_1156;

  corral_source_split_1156:
    assume {:verifier.code 0} true;
    call {:si_unique_call 203} $i149 := inb($i148);
    call {:si_unique_call 204} {:cexpr "tmp___5"} boogie_si_record_i8($i149);
    goto corral_source_split_1157;

  corral_source_split_1157:
    assume {:verifier.code 0} true;
    $i150 := $zext.i8.i32($i149);
    call {:si_unique_call 205} {:cexpr "x"} boogie_si_record_i32($i150);
    goto corral_source_split_1158;

  corral_source_split_1158:
    assume {:verifier.code 0} true;
    $i151 := $ne.i32($i150, 172);
    goto corral_source_split_1159;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i151 == 1);
    goto corral_source_split_1161;

  corral_source_split_1161:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb61:
    assume $i151 == 1;
    assume {:verifier.code 0} true;
    $i124, $i125 := $i150, $i126;
    goto $bb61_dummy;

  $bb52:
    assume $i127 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1123;

  corral_source_split_1123:
    assume {:verifier.code 0} true;
    $i129 := $M.2;
    goto corral_source_split_1124;

  corral_source_split_1124:
    assume {:verifier.code 0} true;
    $i130 := $trunc.i8.i1($i129);
    goto corral_source_split_1125;

  corral_source_split_1125:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb54:
    assume $i130 == 1;
    goto corral_source_split_1127;

  corral_source_split_1127:
    assume {:verifier.code 0} true;
    $p131 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1128;

  corral_source_split_1128:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p131, .str.5);
    goto corral_source_split_1129;

  corral_source_split_1129:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_1130;

  corral_source_split_1130:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p132, .str.18);
    goto corral_source_split_1131;

  corral_source_split_1131:
    assume {:verifier.code 0} true;
    $p133 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_1132;

  corral_source_split_1132:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p133, .str.7);
    goto corral_source_split_1133;

  corral_source_split_1133:
    assume {:verifier.code 0} true;
    $p134 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_1134;

  corral_source_split_1134:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p134, .str.29);
    goto corral_source_split_1135;

  corral_source_split_1135:
    assume {:verifier.code 0} true;
    $p135 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_1136;

  corral_source_split_1136:
    assume {:verifier.code 0} true;
    $p136 := $bitcast.ref.ref($p135);
    goto corral_source_split_1137;

  corral_source_split_1137:
    assume {:verifier.code 0} true;
    $i137 := $load.i24($M.7, $p136);
    goto corral_source_split_1138;

  corral_source_split_1138:
    assume {:verifier.code 0} true;
    $i138 := $and.i24($i137, $sub.i24(0, 262144));
    goto corral_source_split_1139;

  corral_source_split_1139:
    assume {:verifier.code 0} true;
    $i139 := $or.i24($i138, 738);
    goto corral_source_split_1140;

  corral_source_split_1140:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p136, $i139);
    goto corral_source_split_1141;

  corral_source_split_1141:
    assume {:verifier.code 0} true;
    $p140 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1142;

  corral_source_split_1142:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p140, 1);
    goto corral_source_split_1143;

  corral_source_split_1143:
    assume {:verifier.code 0} true;
    $p141 := $add.ref($add.ref($p6, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1144;

  corral_source_split_1144:
    assume {:verifier.code 0} true;
    $i142 := $load.i8($M.8, $p141);
    goto corral_source_split_1145;

  corral_source_split_1145:
    assume {:verifier.code 0} true;
    $i143 := $zext.i8.i64($i142);
    goto corral_source_split_1146;

  corral_source_split_1146:
    assume {:verifier.code 0} true;
    $i144 := $and.i64($i143, 1);
    goto corral_source_split_1147;

  corral_source_split_1147:
    assume {:verifier.code 0} true;
    call {:si_unique_call 199} $i145 := ldv__builtin_expect($i144, 0);
    call {:si_unique_call 200} {:cexpr "tmp___4"} boogie_si_record_i64($i145);
    goto corral_source_split_1148;

  corral_source_split_1148:
    assume {:verifier.code 0} true;
    $i146 := $ne.i64($i145, 0);
    goto corral_source_split_1149;

  corral_source_split_1149:
    assume {:verifier.code 0} true;
    assume {:branchcond $i146} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i146 == 1);
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb56:
    assume $i146 == 1;
    goto corral_source_split_1151;

  corral_source_split_1151:
    assume {:verifier.code 0} true;
    call {:si_unique_call 201} __dynamic_pr_debug.ref.ref.i32($p6, .str.30, $i128);
    goto corral_source_split_1152;

  corral_source_split_1152:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb38:
    assume $i99 == 1;
    goto corral_source_split_1078;

  corral_source_split_1078:
    assume {:verifier.code 0} true;
    $i100 := $M.2;
    goto corral_source_split_1079;

  corral_source_split_1079:
    assume {:verifier.code 0} true;
    $i101 := $trunc.i8.i1($i100);
    goto corral_source_split_1080;

  corral_source_split_1080:
    assume {:verifier.code 0} true;
    assume {:branchcond $i101} true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i101 == 1);
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb40:
    assume $i101 == 1;
    goto corral_source_split_1082;

  corral_source_split_1082:
    assume {:verifier.code 0} true;
    $p102 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1083;

  corral_source_split_1083:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p102, .str.5);
    goto corral_source_split_1084;

  corral_source_split_1084:
    assume {:verifier.code 0} true;
    $p103 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_1085;

  corral_source_split_1085:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p103, .str.18);
    goto corral_source_split_1086;

  corral_source_split_1086:
    assume {:verifier.code 0} true;
    $p104 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_1087;

  corral_source_split_1087:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p104, .str.7);
    goto corral_source_split_1088;

  corral_source_split_1088:
    assume {:verifier.code 0} true;
    $p105 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_1089;

  corral_source_split_1089:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p105, .str.27);
    goto corral_source_split_1090;

  corral_source_split_1090:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_1091;

  corral_source_split_1091:
    assume {:verifier.code 0} true;
    $p107 := $bitcast.ref.ref($p106);
    goto corral_source_split_1092;

  corral_source_split_1092:
    assume {:verifier.code 0} true;
    $i108 := $load.i24($M.7, $p107);
    goto corral_source_split_1093;

  corral_source_split_1093:
    assume {:verifier.code 0} true;
    $i109 := $and.i24($i108, $sub.i24(0, 262144));
    goto corral_source_split_1094;

  corral_source_split_1094:
    assume {:verifier.code 0} true;
    $i110 := $or.i24($i109, 729);
    goto corral_source_split_1095;

  corral_source_split_1095:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p107, $i110);
    goto corral_source_split_1096;

  corral_source_split_1096:
    assume {:verifier.code 0} true;
    $p111 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1097;

  corral_source_split_1097:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p111, 1);
    goto corral_source_split_1098;

  corral_source_split_1098:
    assume {:verifier.code 0} true;
    $p112 := $add.ref($add.ref($p5, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1099;

  corral_source_split_1099:
    assume {:verifier.code 0} true;
    $i113 := $load.i8($M.8, $p112);
    goto corral_source_split_1100;

  corral_source_split_1100:
    assume {:verifier.code 0} true;
    $i114 := $zext.i8.i64($i113);
    goto corral_source_split_1101;

  corral_source_split_1101:
    assume {:verifier.code 0} true;
    $i115 := $and.i64($i114, 1);
    goto corral_source_split_1102;

  corral_source_split_1102:
    assume {:verifier.code 0} true;
    call {:si_unique_call 192} $i116 := ldv__builtin_expect($i115, 0);
    call {:si_unique_call 193} {:cexpr "tmp___3"} boogie_si_record_i64($i116);
    goto corral_source_split_1103;

  corral_source_split_1103:
    assume {:verifier.code 0} true;
    $i117 := $ne.i64($i116, 0);
    goto corral_source_split_1104;

  corral_source_split_1104:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb42, $bb43;

  $bb43:
    assume !($i117 == 1);
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb42:
    assume $i117 == 1;
    goto corral_source_split_1106;

  corral_source_split_1106:
    assume {:verifier.code 0} true;
    call {:si_unique_call 194} __dynamic_pr_debug.ref.ref.i32($p5, .str.28, $i98);
    goto corral_source_split_1107;

  corral_source_split_1107:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb29:
    assume $i79 == 1;
    goto corral_source_split_1044;

  corral_source_split_1044:
    assume {:verifier.code 0} true;
    $i80 := $M.2;
    goto corral_source_split_1045;

  corral_source_split_1045:
    assume {:verifier.code 0} true;
    $i81 := $trunc.i8.i1($i80);
    goto corral_source_split_1046;

  corral_source_split_1046:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i81 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb31:
    assume $i81 == 1;
    goto corral_source_split_1048;

  corral_source_split_1048:
    assume {:verifier.code 0} true;
    $p82 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1049;

  corral_source_split_1049:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p82, .str.5);
    goto corral_source_split_1050;

  corral_source_split_1050:
    assume {:verifier.code 0} true;
    $p83 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_1051;

  corral_source_split_1051:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p83, .str.18);
    goto corral_source_split_1052;

  corral_source_split_1052:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_1053;

  corral_source_split_1053:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p84, .str.7);
    goto corral_source_split_1054;

  corral_source_split_1054:
    assume {:verifier.code 0} true;
    $p85 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_1055;

  corral_source_split_1055:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p85, .str.25);
    goto corral_source_split_1056;

  corral_source_split_1056:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_1057;

  corral_source_split_1057:
    assume {:verifier.code 0} true;
    $p87 := $bitcast.ref.ref($p86);
    goto corral_source_split_1058;

  corral_source_split_1058:
    assume {:verifier.code 0} true;
    $i88 := $load.i24($M.7, $p87);
    goto corral_source_split_1059;

  corral_source_split_1059:
    assume {:verifier.code 0} true;
    $i89 := $and.i24($i88, $sub.i24(0, 262144));
    goto corral_source_split_1060;

  corral_source_split_1060:
    assume {:verifier.code 0} true;
    $i90 := $or.i24($i89, 722);
    goto corral_source_split_1061;

  corral_source_split_1061:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p87, $i90);
    goto corral_source_split_1062;

  corral_source_split_1062:
    assume {:verifier.code 0} true;
    $p91 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1063;

  corral_source_split_1063:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p91, 1);
    goto corral_source_split_1064;

  corral_source_split_1064:
    assume {:verifier.code 0} true;
    $p92 := $add.ref($add.ref($p4, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1065;

  corral_source_split_1065:
    assume {:verifier.code 0} true;
    $i93 := $load.i8($M.8, $p92);
    goto corral_source_split_1066;

  corral_source_split_1066:
    assume {:verifier.code 0} true;
    $i94 := $zext.i8.i64($i93);
    goto corral_source_split_1067;

  corral_source_split_1067:
    assume {:verifier.code 0} true;
    $i95 := $and.i64($i94, 1);
    goto corral_source_split_1068;

  corral_source_split_1068:
    assume {:verifier.code 0} true;
    call {:si_unique_call 187} $i96 := ldv__builtin_expect($i95, 0);
    call {:si_unique_call 188} {:cexpr "tmp___2"} boogie_si_record_i64($i96);
    goto corral_source_split_1069;

  corral_source_split_1069:
    assume {:verifier.code 0} true;
    $i97 := $ne.i64($i96, 0);
    goto corral_source_split_1070;

  corral_source_split_1070:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb33, $bb34;

  $bb34:
    assume !($i97 == 1);
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb33:
    assume $i97 == 1;
    goto corral_source_split_1072;

  corral_source_split_1072:
    assume {:verifier.code 0} true;
    call {:si_unique_call 189} __dynamic_pr_debug.ref.ref.i32($p4, .str.26, $i78);
    goto corral_source_split_1073;

  corral_source_split_1073:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb20:
    assume $i56 == 1;
    goto corral_source_split_1006;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    $i57 := $M.2;
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    $i58 := $trunc.i8.i1($i57);
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    assume {:branchcond $i58} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i58 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb22:
    assume $i58 == 1;
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    $p59 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p59, .str.5);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_1013;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p60, .str.18);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    $p61 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p61, .str.7);
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    $p62 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_1017;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p62, .str.23);
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    $p63 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_1019;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    $p64 := $bitcast.ref.ref($p63);
    goto corral_source_split_1020;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    $i65 := $load.i24($M.7, $p64);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    $i66 := $and.i24($i65, $sub.i24(0, 262144));
    goto corral_source_split_1022;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    $i67 := $or.i24($i66, 714);
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p64, $i67);
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p68, 1);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    $p69 := $add.ref($add.ref($p3, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_1027;

  corral_source_split_1027:
    assume {:verifier.code 0} true;
    $i70 := $load.i8($M.8, $p69);
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    $i71 := $zext.i8.i64($i70);
    goto corral_source_split_1029;

  corral_source_split_1029:
    assume {:verifier.code 0} true;
    $i72 := $and.i64($i71, 1);
    goto corral_source_split_1030;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    call {:si_unique_call 181} $i73 := ldv__builtin_expect($i72, 0);
    call {:si_unique_call 182} {:cexpr "tmp___1"} boogie_si_record_i64($i73);
    goto corral_source_split_1031;

  corral_source_split_1031:
    assume {:verifier.code 0} true;
    $i74 := $ne.i64($i73, 0);
    goto corral_source_split_1032;

  corral_source_split_1032:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i74 == 1);
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb24:
    assume $i74 == 1;
    goto corral_source_split_1034;

  corral_source_split_1034:
    assume {:verifier.code 0} true;
    call {:si_unique_call 183} __dynamic_pr_debug.ref.ref.i32($p3, .str.24, $i55);
    goto corral_source_split_1035;

  corral_source_split_1035:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb11:
    assume $i33 == 1;
    goto corral_source_split_968;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    $i34 := $M.2;
    goto corral_source_split_969;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    $i35 := $trunc.i8.i1($i34);
    goto corral_source_split_970;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb13:
    assume $i35 == 1;
    goto corral_source_split_972;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    $p36 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p36, .str.5);
    goto corral_source_split_974;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    $p37 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_975;

  corral_source_split_975:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p37, .str.18);
    goto corral_source_split_976;

  corral_source_split_976:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_977;

  corral_source_split_977:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p38, .str.7);
    goto corral_source_split_978;

  corral_source_split_978:
    assume {:verifier.code 0} true;
    $p39 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p39, .str.21);
    goto corral_source_split_980;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    $p41 := $bitcast.ref.ref($p40);
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    $i42 := $load.i24($M.7, $p41);
    goto corral_source_split_983;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    $i43 := $and.i24($i42, $sub.i24(0, 262144));
    goto corral_source_split_984;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    $i44 := $or.i24($i43, 706);
    goto corral_source_split_985;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p41, $i44);
    goto corral_source_split_986;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    $p45 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_987;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p45, 1);
    goto corral_source_split_988;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    $p46 := $add.ref($add.ref($p2, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_989;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    $i47 := $load.i8($M.8, $p46);
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    $i48 := $zext.i8.i64($i47);
    goto corral_source_split_991;

  corral_source_split_991:
    assume {:verifier.code 0} true;
    $i49 := $and.i64($i48, 1);
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    call {:si_unique_call 175} $i50 := ldv__builtin_expect($i49, 0);
    call {:si_unique_call 176} {:cexpr "tmp___0"} boogie_si_record_i64($i50);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    $i51 := $ne.i64($i50, 0);
    goto corral_source_split_994;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    assume {:branchcond $i51} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i51 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb15:
    assume $i51 == 1;
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    call {:si_unique_call 177} __dynamic_pr_debug.ref.ref.i32($p2, .str.22, $i32);
    goto corral_source_split_997;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb1:
    assume $i8 == 1;
    goto corral_source_split_927;

  corral_source_split_927:
    assume {:verifier.code 0} true;
    $i9 := $M.2;
    goto corral_source_split_928;

  corral_source_split_928:
    assume {:verifier.code 0} true;
    $i10 := $trunc.i8.i1($i9);
    goto corral_source_split_929;

  corral_source_split_929:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 5);
    goto $bb9;

  $bb3:
    assume $i10 == 1;
    goto corral_source_split_931;

  corral_source_split_931:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_932;

  corral_source_split_932:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p11, .str.5);
    goto corral_source_split_933;

  corral_source_split_933:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_934;

  corral_source_split_934:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p12, .str.18);
    goto corral_source_split_935;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    $p13 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_936;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p13, .str.7);
    goto corral_source_split_937;

  corral_source_split_937:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_938;

  corral_source_split_938:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p14, .str.19);
    goto corral_source_split_939;

  corral_source_split_939:
    assume {:verifier.code 0} true;
    $p15 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_940;

  corral_source_split_940:
    assume {:verifier.code 0} true;
    $p16 := $bitcast.ref.ref($p15);
    goto corral_source_split_941;

  corral_source_split_941:
    assume {:verifier.code 0} true;
    $i17 := $load.i24($M.7, $p16);
    goto corral_source_split_942;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    $i18 := $and.i24($i17, $sub.i24(0, 262144));
    goto corral_source_split_943;

  corral_source_split_943:
    assume {:verifier.code 0} true;
    $i19 := $or.i24($i18, 698);
    goto corral_source_split_944;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p16, $i19);
    goto corral_source_split_945;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_946;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p20, 1);
    goto corral_source_split_947;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($add.ref($p1, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_948;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    $i22 := $load.i8($M.8, $p21);
    goto corral_source_split_949;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i64($i22);
    goto corral_source_split_950;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    $i24 := $and.i64($i23, 1);
    goto corral_source_split_951;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    call {:si_unique_call 169} $i25 := ldv__builtin_expect($i24, 0);
    call {:si_unique_call 170} {:cexpr "tmp"} boogie_si_record_i64($i25);
    goto corral_source_split_952;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    $i26 := $ne.i64($i25, 0);
    goto corral_source_split_953;

  corral_source_split_953:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb5:
    assume $i26 == 1;
    goto corral_source_split_955;

  corral_source_split_955:
    assume {:verifier.code 0} true;
    call {:si_unique_call 171} __dynamic_pr_debug.ref.ref.i32($p1, .str.20, $i7);
    goto corral_source_split_956;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb61_dummy:
    assume false;
    return;

  $bb50_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1118;
}



const outb: ref;

axiom outb == $sub.ref(0, 236275);

procedure outb($i0: i8, $i1: i32);
  free requires assertsPassed;



implementation outb($i0: i8, $i1: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 206} {:cexpr "outb:arg:value"} boogie_si_record_i8($i0);
    call {:si_unique_call 207} {:cexpr "outb:arg:port"} boogie_si_record_i32($i1);
    call {:si_unique_call 208} devirtbounce(0, $i0, $i1);
    goto corral_source_split_1163;

  corral_source_split_1163:
    assume {:verifier.code 0} true;
    return;
}



const abituguru3_wait_while_busy: ref;

axiom abituguru3_wait_while_busy == $sub.ref(0, 237307);

procedure abituguru3_wait_while_busy($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation abituguru3_wait_while_busy($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i32;
  var $i16: i1;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i9: i8;
  var $i10: i32;
  var $i15: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1165;

  corral_source_split_1165:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_1166;

  corral_source_split_1166:
    assume {:verifier.code 0} true;
    $i2 := $load.i16($M.0, $p1);
    goto corral_source_split_1167;

  corral_source_split_1167:
    assume {:verifier.code 0} true;
    $i3 := $zext.i16.i32($i2);
    goto corral_source_split_1168;

  corral_source_split_1168:
    assume {:verifier.code 0} true;
    $i4 := $add.i32($i3, 4);
    goto corral_source_split_1169;

  corral_source_split_1169:
    assume {:verifier.code 0} true;
    call {:si_unique_call 209} $i5 := inb_p($i4);
    call {:si_unique_call 210} {:cexpr "x"} boogie_si_record_i8($i5);
    goto corral_source_split_1170;

  corral_source_split_1170:
    assume {:verifier.code 0} true;
    $i6 := $zext.i8.i32($i5);
    goto corral_source_split_1171;

  corral_source_split_1171:
    assume {:verifier.code 0} true;
    $i7 := $and.i32($i6, 2);
    goto corral_source_split_1172;

  corral_source_split_1172:
    assume {:verifier.code 0} true;
    $i8 := $ne.i32($i7, 0);
    goto corral_source_split_1173;

  corral_source_split_1173:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i8 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 1);
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto corral_source_split_1185;

  corral_source_split_1185:
    assume {:verifier.code 0} true;
    $r := $i15;
    return;

  $bb1:
    assume $i8 == 1;
    goto corral_source_split_1175;

  corral_source_split_1175:
    assume {:verifier.code 0} true;
    $i9, $i10 := $i5, 250;
    goto $bb4;

  $bb4:
    call $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i9, $i10 := abituguru3_wait_while_busy_loop_$bb4($p1, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i9, $i10);
    goto $bb4_last;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i11 := $sub.i32($i10, 1);
    call {:si_unique_call 211} {:cexpr "timeout"} boogie_si_record_i32($i11);
    goto corral_source_split_1179;

  corral_source_split_1179:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i11, 0);
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    $i13 := $i9;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i16 := $eq.i32($i11, 1);
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i17 := $load.i16($M.0, $p1);
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    $i18 := $zext.i16.i32($i17);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    $i19 := $add.i32($i18, 4);
    goto corral_source_split_1194;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    call {:si_unique_call 213} $i20 := inb_p($i19);
    call {:si_unique_call 214} {:cexpr "x"} boogie_si_record_i8($i20);
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $i21 := $zext.i8.i32($i20);
    goto corral_source_split_1196;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    $i22 := $and.i32($i21, 2);
    goto corral_source_split_1197;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    $i23 := $ne.i32($i22, 0);
    goto corral_source_split_1198;

  corral_source_split_1198:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i23 == 1);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb13:
    assume $i23 == 1;
    assume {:verifier.code 0} true;
    $i9, $i10 := $i20, $i11;
    goto $bb13_dummy;

  $bb10:
    assume $i16 == 1;
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    call {:si_unique_call 212} msleep(1);
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb6:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $i14 := $zext.i8.i32($i13);
    goto corral_source_split_1183;

  corral_source_split_1183:
    assume {:verifier.code 0} true;
    $i15 := $i14;
    goto $bb8;

  $bb13_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1177;
}



const ldv__builtin_expect: ref;

axiom ldv__builtin_expect == $sub.ref(0, 238339);

procedure ldv__builtin_expect($i0: i64, $i1: i64) returns ($r: i64);
  free requires assertsPassed;



implementation ldv__builtin_expect($i0: i64, $i1: i64) returns ($r: i64)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 215} {:cexpr "ldv__builtin_expect:arg:exp"} boogie_si_record_i64($i0);
    call {:si_unique_call 216} {:cexpr "ldv__builtin_expect:arg:c"} boogie_si_record_i64($i1);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const __dynamic_pr_debug: ref;

axiom __dynamic_pr_debug == $sub.ref(0, 239371);

procedure __dynamic_pr_debug.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
{

  $bb1:
    assume {:verifier.code 0} true;
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32)
{

  $bb2:
    assume {:verifier.code 0} true;
    goto corral_source_split_1208;

  corral_source_split_1208:
    assume {:verifier.code 0} true;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32)
{

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1210;

  corral_source_split_1210:
    assume {:verifier.code 0} true;
    return;
}



const abituguru3_wait_for_read: ref;

axiom abituguru3_wait_for_read == $sub.ref(0, 240403);

procedure abituguru3_wait_for_read($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation abituguru3_wait_for_read($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i8;
  var $i14: i32;
  var $i16: i1;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i8;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $i9: i8;
  var $i10: i32;
  var $i15: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    $i2 := $load.i16($M.0, $p1);
    goto corral_source_split_1214;

  corral_source_split_1214:
    assume {:verifier.code 0} true;
    $i3 := $zext.i16.i32($i2);
    goto corral_source_split_1215;

  corral_source_split_1215:
    assume {:verifier.code 0} true;
    $i4 := $add.i32($i3, 4);
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    call {:si_unique_call 217} $i5 := inb_p($i4);
    call {:si_unique_call 218} {:cexpr "x"} boogie_si_record_i8($i5);
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    $i6 := $zext.i8.i32($i5);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    $i7 := $and.i32($i6, 1);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i8 := $eq.i32($i7, 0);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i8 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i15 := $sub.i32(0, 1);
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto corral_source_split_1232;

  corral_source_split_1232:
    assume {:verifier.code 0} true;
    $r := $i15;
    return;

  $bb1:
    assume $i8 == 1;
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    $i9, $i10 := $i5, 250;
    goto $bb4;

  $bb4:
    call $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i9, $i10 := abituguru3_wait_for_read_loop_$bb4($p1, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i9, $i10);
    goto $bb4_last;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i11 := $sub.i32($i10, 1);
    call {:si_unique_call 219} {:cexpr "timeout"} boogie_si_record_i32($i11);
    goto corral_source_split_1226;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i11, 0);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $i13 := $i9;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i16 := $eq.i32($i11, 1);
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i17 := $load.i16($M.0, $p1);
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $i18 := $zext.i16.i32($i17);
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i19 := $add.i32($i18, 4);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    call {:si_unique_call 221} $i20 := inb_p($i19);
    call {:si_unique_call 222} {:cexpr "x"} boogie_si_record_i8($i20);
    goto corral_source_split_1242;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    $i21 := $zext.i8.i32($i20);
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    $i22 := $and.i32($i21, 1);
    goto corral_source_split_1244;

  corral_source_split_1244:
    assume {:verifier.code 0} true;
    $i23 := $eq.i32($i22, 0);
    goto corral_source_split_1245;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i23 == 1);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb13:
    assume $i23 == 1;
    assume {:verifier.code 0} true;
    $i9, $i10 := $i20, $i11;
    goto $bb13_dummy;

  $bb10:
    assume $i16 == 1;
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    call {:si_unique_call 220} msleep(1);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb6:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i14 := $zext.i8.i32($i13);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i15 := $i14;
    goto $bb8;

  $bb13_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1224;
}



const inb: ref;

axiom inb == $sub.ref(0, 241435);

procedure inb($i0: i32) returns ($r: i8);
  free requires assertsPassed;



implementation inb($i0: i32) returns ($r: i8)
{
  var $i1: i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 223} {:cexpr "inb:arg:port"} boogie_si_record_i32($i0);
    call {:si_unique_call 224} $i1 := devirtbounce.1(0, $i0);
    call {:si_unique_call 225} {:cexpr "value"} boogie_si_record_i8($i1);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const msleep: ref;

axiom msleep == $sub.ref(0, 242467);

procedure msleep($i0: i32);
  free requires assertsPassed;



implementation msleep($i0: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 226} {:cexpr "msleep:arg:arg0"} boogie_si_record_i32($i0);
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    return;
}



const inb_p: ref;

axiom inb_p == $sub.ref(0, 243499);

procedure inb_p($i0: i32) returns ($r: i8);
  free requires assertsPassed;



implementation inb_p($i0: i32) returns ($r: i8)
{
  var $i1: i8;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 227} {:cexpr "inb_p:arg:port"} boogie_si_record_i32($i0);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    call {:si_unique_call 228} $i1 := inb($i0);
    call {:si_unique_call 229} {:cexpr "tmp"} boogie_si_record_i8($i1);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    call {:si_unique_call 230} slow_down_io();
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const slow_down_io: ref;

axiom slow_down_io == $sub.ref(0, 244531);

procedure slow_down_io();
  free requires assertsPassed;



implementation slow_down_io()
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $p0 := $load.ref($M.0, $add.ref($add.ref(pv_cpu_ops, $mul.ref(0, 312)), $mul.ref(208, 1)));
    call {:si_unique_call 231} devirtbounce.2($p0);
    goto corral_source_split_1258;

  corral_source_split_1258:
    assume {:verifier.code 0} true;
    return;
}



const ldv_mutex_lock_update_lock_of_abituguru3_data: ref;

axiom ldv_mutex_lock_update_lock_of_abituguru3_data == $sub.ref(0, 245563);

procedure ldv_mutex_lock_update_lock_of_abituguru3_data($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_lock_update_lock_of_abituguru3_data($p0: ref)
{
  var $i1: i32;
  var $i2: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $i1 := $M.9;
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, 1);
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $M.9 := 2;
    call {:si_unique_call 233} {:cexpr "ldv_mutex_update_lock_of_abituguru3_data"} boogie_si_record_i32(2);
    goto corral_source_split_1267;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_1264;

  corral_source_split_1264:
    assume {:verifier.code 0} true;
    call {:si_unique_call 232} ldv_error();
    goto SeqInstr_19, SeqInstr_20;

  SeqInstr_20:
    assume assertsPassed;
    goto SeqInstr_21;

  SeqInstr_21:
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_19:
    assume !assertsPassed;
    return;
}



const mutex_lock: ref;

axiom mutex_lock == $sub.ref(0, 246595);

procedure mutex_lock($p0: ref);
  free requires assertsPassed;



implementation mutex_lock($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    return;
}



const show_name: ref;

axiom show_name == $sub.ref(0, 247627);

procedure show_name($p0: ref, $p1: ref, $p2: ref) returns ($r: i64);



const abituguru3_probe: ref;

axiom abituguru3_probe == $sub.ref(0, 248659);

procedure abituguru3_probe($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.10, $M.11, $M.0, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $CurrAddr, $M.1, $M.9, assertsPassed;



implementation abituguru3_probe($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i16;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $p32: ref;
  var $i33: i8;
  var $i34: i32;
  var $i35: i32;
  var $i36: i16;
  var $i37: i32;
  var $p38: ref;
  var $i39: i8;
  var $i40: i16;
  var $i41: i32;
  var $i42: i32;
  var $i43: i16;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i32;
  var $i48: i64;
  var $p50: ref;
  var $i51: i16;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $p55: ref;
  var $i57: i64;
  var $p59: ref;
  var $p61: ref;
  var $i62: i32;
  var $p64: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i64;
  var $i71: i1;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i64;
  var $p86: ref;
  var $i87: i32;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $i91: i1;
  var $i99: i64;
  var $i100: i64;
  var $i101: i64;
  var $p106: ref;
  var $p107: ref;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $i112: i32;
  var $i113: i64;
  var $p115: ref;
  var $i116: i64;
  var $i117: i64;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i64;
  var $p127: ref;
  var $i128: i8;
  var $i129: i64;
  var $p132: ref;
  var $i133: i64;
  var $p134: ref;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i1;
  var $p95: ref;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i140: i32;
  var $i141: i32;
  var $p142: ref;
  var $i92: i32;
  var $i93: i32;
  var $p94: ref;
  var $i143: i64;
  var $p144: ref;
  var $i145: i32;
  var $i146: i32;
  var $i147: i64;
  var $p148: ref;
  var $i149: i32;
  var $p150: ref;
  var $i151: i64;
  var $p153: ref;
  var $p154: ref;
  var $i155: i64;
  var $i156: i1;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i157: i32;
  var $i158: i32;
  var $i72: i32;
  var $i73: i32;
  var $i159: i1;
  var $p160: ref;
  var $p161: ref;
  var $i163: i1;
  var $p165: ref;
  var $i166: i64;
  var $p169: ref;
  var $i170: i32;
  var $i171: i1;
  var $i172: i32;
  var $i173: i1;
  var $i164: i32;
  var $p174: ref;
  var $i175: i32;
  var $i176: i1;
  var $p177: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $i183: i1;
  var $i184: i8;
  var $i185: i1;
  var $p186: ref;
  var $p187: ref;
  var $p188: ref;
  var $i189: i64;
  var $i190: i32;
  var $i27: i32;
  var $p195: ref;
  var $p196: ref;
  var $i197: i64;
  var $i198: i1;
  var $p200: ref;
  var $i201: i64;
  var $p204: ref;
  var $i205: i32;
  var $i206: i64;
  var $p210: ref;
  var $p211: ref;
  var $i212: i64;
  var $i213: i1;
  var $i199: i32;
  var $p214: ref;
  var $i16: i32;
  var $i215: i32;
  var $i216: i1;
  var $i217: i32;
  var $i218: i1;
  var $i219: i32;
  var $i220: i1;
  var $i221: i32;
  var $i222: i1;
  var $i223: i32;
  var $i224: i1;
  var $i225: i32;
  var $i226: i1;
  var $i227: i32;
  var $i228: i1;
  var $i229: i32;
  var $i230: i1;
  var $i231: i32;
  var $i232: i1;
  var $i233: i32;
  var $i234: i1;
  var $i235: i32;
  var $i236: i1;
  var $i237: i32;
  var $i238: i1;
  var $i239: i32;
  var $i240: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i1;
  var $i245: i32;
  var $i246: i1;
  var cmdloc_dummy_var_0: [ref]i8;
  var cmdloc_dummy_var_1: [ref]i8;
  var cmdloc_dummy_var_2: [ref]i8;
  var vslice_dummy_var_5: i32;
  var vslice_dummy_var_6: i32;
  var vslice_dummy_var_7: i32;
  var vslice_dummy_var_8: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 234} $p1 := $alloc($mul.ref(12, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 235} $p2 := $alloc($mul.ref(12, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 236} $p3 := $alloc($mul.ref(2, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 237} $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p1, $mul.ref(0, 12)), $mul.ref(0, 4));
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $M.10 := $store.i32($M.10, $p5, 10);
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p1, $mul.ref(0, 12)), $mul.ref(1, 4));
    goto corral_source_split_1274;

  corral_source_split_1274:
    assume {:verifier.code 0} true;
    $M.10 := $store.i32($M.10, $p6, 8);
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $p7 := $add.ref($add.ref($p1, $mul.ref(0, 12)), $mul.ref(2, 4));
    goto corral_source_split_1276;

  corral_source_split_1276:
    assume {:verifier.code 0} true;
    $M.10 := $store.i32($M.10, $p7, 7);
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref(0, 4));
    goto corral_source_split_1278;

  corral_source_split_1278:
    assume {:verifier.code 0} true;
    $M.11 := $store.i32($M.11, $p8, 0);
    goto corral_source_split_1279;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref(1, 4));
    goto corral_source_split_1280;

  corral_source_split_1280:
    assume {:verifier.code 0} true;
    $M.11 := $store.i32($M.11, $p9, 1);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    $p10 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref(2, 4));
    goto corral_source_split_1282;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    $M.11 := $store.i32($M.11, $p10, 1);
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $p11 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    call {:si_unique_call 238} $p12 := devm_kzalloc($p11, 18264, 208);
    goto corral_source_split_1285;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    $p13 := $bitcast.ref.ref($p12);
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p13);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i15 := $eq.i64($i14, 0);
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    call {:si_unique_call 239} $p17 := platform_get_resource($p0, 256, 0);
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    $p18 := $add.ref($add.ref($p17, $mul.ref(0, 56)), $mul.ref(0, 1));
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $i19 := $load.i64($M.0, $p18);
    goto corral_source_split_1296;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    $i20 := $trunc.i64.i16($i19);
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $p21 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    $M.0 := $store.i16($M.0, $p21, $i20);
    goto corral_source_split_1299;

  corral_source_split_1299:
    assume {:verifier.code 0} true;
    $p22 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(8, 1));
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    call {:si_unique_call 240} __mutex_init($p22, .str, $p4);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $p23 := $bitcast.ref.ref($p13);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    call {:si_unique_call 241} platform_set_drvdata($p0, $p23);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    $p24 := $bitcast.ref.ref($p3);
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    call {:si_unique_call 242} $i25 := abituguru3_read($p13, 9, 10, 2, $p24);
    call {:si_unique_call 243} {:cexpr "i"} boogie_si_record_i32($i25);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i26 := $ne.i32($i25, 2);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    call {:si_unique_call 244} $p29 := abituguru3_update_device($p28);
    goto SeqInstr_22, SeqInstr_23;

  SeqInstr_23:
    assume assertsPassed;
    goto SeqInstr_24;

  SeqInstr_24:
    goto corral_source_split_1317;

  corral_source_split_1317:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p29);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    $i31 := $eq.i64($i30, 0);
    goto corral_source_split_1319;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i31 == 1);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $p32 := $add.ref($add.ref($p3, $mul.ref(0, 2)), $mul.ref(0, 1));
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    $i33 := $load.i8($M.12, $p32);
    goto corral_source_split_1324;

  corral_source_split_1324:
    assume {:verifier.code 0} true;
    $i34 := $zext.i8.i32($i33);
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i35 := $shl.i32($i34, 8);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i36 := $trunc.i32.i16($i35);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $i37 := $sext.i16.i32($i36);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    $p38 := $add.ref($add.ref($p3, $mul.ref(0, 2)), $mul.ref(1, 1));
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $i39 := $load.i8($M.12, $p38);
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $i40 := $zext.i8.i16($i39);
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    $i41 := $sext.i16.i32($i40);
    goto corral_source_split_1332;

  corral_source_split_1332:
    assume {:verifier.code 0} true;
    $i42 := $or.i32($i37, $i41);
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i16($i42);
    call {:si_unique_call 245} {:cexpr "id"} boogie_si_record_i16($i43);
    goto corral_source_split_1334;

  corral_source_split_1334:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i44 := $zext.i16.i32($i43);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i45 := $eq.i32(12, $i44);
    goto corral_source_split_1337;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    $i46 := 0;
    assume {:branchcond $i45} true;
    goto $bb14, $bb16;

  $bb16:
    assume !($i45 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i215 := $zext.i16.i32($i43);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    $i216 := $eq.i32(13, $i215);
    goto corral_source_split_1349;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    $i46 := 1;
    assume {:branchcond $i216} true;
    goto $bb77, $bb78;

  $bb78:
    assume !($i216 == 1);
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    $i217 := $zext.i16.i32($i43);
    goto corral_source_split_1519;

  corral_source_split_1519:
    assume {:verifier.code 0} true;
    $i218 := $eq.i32(14, $i217);
    goto corral_source_split_1520;

  corral_source_split_1520:
    assume {:verifier.code 0} true;
    $i46 := 2;
    assume {:branchcond $i218} true;
    goto $bb81, $bb82;

  $bb82:
    assume !($i218 == 1);
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    $i219 := $zext.i16.i32($i43);
    goto corral_source_split_1522;

  corral_source_split_1522:
    assume {:verifier.code 0} true;
    $i220 := $eq.i32(15, $i219);
    goto corral_source_split_1523;

  corral_source_split_1523:
    assume {:verifier.code 0} true;
    $i46 := 3;
    assume {:branchcond $i220} true;
    goto $bb85, $bb86;

  $bb86:
    assume !($i220 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    $i221 := $zext.i16.i32($i43);
    goto corral_source_split_1525;

  corral_source_split_1525:
    assume {:verifier.code 0} true;
    $i222 := $eq.i32(16, $i221);
    goto corral_source_split_1526;

  corral_source_split_1526:
    assume {:verifier.code 0} true;
    $i46 := 4;
    assume {:branchcond $i222} true;
    goto $bb89, $bb90;

  $bb90:
    assume !($i222 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    $i223 := $zext.i16.i32($i43);
    goto corral_source_split_1528;

  corral_source_split_1528:
    assume {:verifier.code 0} true;
    $i224 := $eq.i32(17, $i223);
    goto corral_source_split_1529;

  corral_source_split_1529:
    assume {:verifier.code 0} true;
    $i46 := 5;
    assume {:branchcond $i224} true;
    goto $bb93, $bb94;

  $bb94:
    assume !($i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb95;

  $bb95:
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    $i225 := $zext.i16.i32($i43);
    goto corral_source_split_1531;

  corral_source_split_1531:
    assume {:verifier.code 0} true;
    $i226 := $eq.i32(18, $i225);
    goto corral_source_split_1532;

  corral_source_split_1532:
    assume {:verifier.code 0} true;
    $i46 := 6;
    assume {:branchcond $i226} true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i226 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $i227 := $zext.i16.i32($i43);
    goto corral_source_split_1534;

  corral_source_split_1534:
    assume {:verifier.code 0} true;
    $i228 := $eq.i32(19, $i227);
    goto corral_source_split_1535;

  corral_source_split_1535:
    assume {:verifier.code 0} true;
    $i46 := 7;
    assume {:branchcond $i228} true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i228 == 1);
    assume {:verifier.code 0} true;
    goto $bb103;

  $bb103:
    assume {:verifier.code 0} true;
    goto $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    $i229 := $zext.i16.i32($i43);
    goto corral_source_split_1537;

  corral_source_split_1537:
    assume {:verifier.code 0} true;
    $i230 := $eq.i32(20, $i229);
    goto corral_source_split_1538;

  corral_source_split_1538:
    assume {:verifier.code 0} true;
    $i46 := 8;
    assume {:branchcond $i230} true;
    goto $bb105, $bb106;

  $bb106:
    assume !($i230 == 1);
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    $i231 := $zext.i16.i32($i43);
    goto corral_source_split_1540;

  corral_source_split_1540:
    assume {:verifier.code 0} true;
    $i232 := $eq.i32(21, $i231);
    goto corral_source_split_1541;

  corral_source_split_1541:
    assume {:verifier.code 0} true;
    $i46 := 9;
    assume {:branchcond $i232} true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i232 == 1);
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb111:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    $i233 := $zext.i16.i32($i43);
    goto corral_source_split_1543;

  corral_source_split_1543:
    assume {:verifier.code 0} true;
    $i234 := $eq.i32(22, $i233);
    goto corral_source_split_1544;

  corral_source_split_1544:
    assume {:verifier.code 0} true;
    $i46 := 10;
    assume {:branchcond $i234} true;
    goto $bb113, $bb114;

  $bb114:
    assume !($i234 == 1);
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    $i235 := $zext.i16.i32($i43);
    goto corral_source_split_1546;

  corral_source_split_1546:
    assume {:verifier.code 0} true;
    $i236 := $eq.i32(23, $i235);
    goto corral_source_split_1547;

  corral_source_split_1547:
    assume {:verifier.code 0} true;
    $i46 := 11;
    assume {:branchcond $i236} true;
    goto $bb117, $bb118;

  $bb118:
    assume !($i236 == 1);
    assume {:verifier.code 0} true;
    goto $bb119;

  $bb119:
    assume {:verifier.code 0} true;
    goto $bb120;

  $bb120:
    assume {:verifier.code 0} true;
    $i237 := $zext.i16.i32($i43);
    goto corral_source_split_1549;

  corral_source_split_1549:
    assume {:verifier.code 0} true;
    $i238 := $eq.i32(24, $i237);
    goto corral_source_split_1550;

  corral_source_split_1550:
    assume {:verifier.code 0} true;
    $i46 := 12;
    assume {:branchcond $i238} true;
    goto $bb121, $bb122;

  $bb122:
    assume !($i238 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $i239 := $zext.i16.i32($i43);
    goto corral_source_split_1552;

  corral_source_split_1552:
    assume {:verifier.code 0} true;
    $i240 := $eq.i32(25, $i239);
    goto corral_source_split_1553;

  corral_source_split_1553:
    assume {:verifier.code 0} true;
    $i46 := 13;
    assume {:branchcond $i240} true;
    goto $bb125, $bb126;

  $bb126:
    assume !($i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    goto $bb128;

  $bb128:
    assume {:verifier.code 0} true;
    $i241 := $zext.i16.i32($i43);
    goto corral_source_split_1555;

  corral_source_split_1555:
    assume {:verifier.code 0} true;
    $i242 := $eq.i32(26, $i241);
    goto corral_source_split_1556;

  corral_source_split_1556:
    assume {:verifier.code 0} true;
    $i46 := 14;
    assume {:branchcond $i242} true;
    goto $bb129, $bb130;

  $bb130:
    assume !($i242 == 1);
    assume {:verifier.code 0} true;
    goto $bb131;

  $bb131:
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb132:
    assume {:verifier.code 0} true;
    $i243 := $zext.i16.i32($i43);
    goto corral_source_split_1558;

  corral_source_split_1558:
    assume {:verifier.code 0} true;
    $i244 := $eq.i32(27, $i243);
    goto corral_source_split_1559;

  corral_source_split_1559:
    assume {:verifier.code 0} true;
    $i46 := 15;
    assume {:branchcond $i244} true;
    goto $bb133, $bb134;

  $bb134:
    assume !($i244 == 1);
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    goto $bb136;

  $bb136:
    assume {:verifier.code 0} true;
    $i245 := $zext.i16.i32($i43);
    goto corral_source_split_1561;

  corral_source_split_1561:
    assume {:verifier.code 0} true;
    $i246 := $eq.i32(28, $i245);
    goto corral_source_split_1562;

  corral_source_split_1562:
    assume {:verifier.code 0} true;
    $i46 := 16;
    assume {:branchcond $i246} true;
    goto $bb137, $bb138;

  $bb138:
    assume !($i246 == 1);
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i47 := 17;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    $i48 := $sext.i32.i64($i47);
    goto corral_source_split_1342;

  corral_source_split_1342:
    assume {:verifier.code 0} true;
    $p50 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref($i48, 896)), $mul.ref(0, 1));
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    $i51 := $load.i16($M.0, $p50);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    $i52 := $zext.i16.i32($i51);
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $i53 := $eq.i32($i52, 0);
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i53 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i57 := $sext.i32.i64($i47);
    goto corral_source_split_1356;

  corral_source_split_1356:
    assume {:verifier.code 0} true;
    $p59 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref($i57, 896)), $mul.ref(32, 1));
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    goto corral_source_split_1358;

  corral_source_split_1358:
    assume {:verifier.code 0} true;
    $p61 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(18056, 1));
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p61, $p59);
    goto corral_source_split_1360;

  corral_source_split_1360:
    assume {:verifier.code 0} true;
    $i62 := $zext.i16.i32($i43);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    call {:si_unique_call 247} vslice_dummy_var_6 := printk.ref.i32(.str.2, $i62);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    $p64 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(14744, 1));
    goto corral_source_split_1363;

  corral_source_split_1363:
    assume {:verifier.code 0} true;
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    $p66 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(18056, 1));
    goto corral_source_split_1365;

  corral_source_split_1365:
    assume {:verifier.code 0} true;
    $p67 := $load.ref($M.0, $p66);
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p67, $mul.ref(0, 32)), $mul.ref(0, 1));
    goto corral_source_split_1367;

  corral_source_split_1367:
    assume {:verifier.code 0} true;
    $p69 := $load.ref($M.0, $p68);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i70 := $p2i.ref.i64($p69);
    goto corral_source_split_1369;

  corral_source_split_1369:
    assume {:verifier.code 0} true;
    $i71 := $ne.i64($i70, 0);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $i72, $i73 := 3308, 0;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    assume !($i71 == 1);
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $i159 := $slt.i32($i72, 0);
    goto corral_source_split_1451;

  corral_source_split_1451:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i159 == 1);
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $i163 := $slt.i32(0, $i73);
    goto corral_source_split_1458;

  corral_source_split_1458:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb46, $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    assume !($i163 == 1);
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    $p174 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1477;

  corral_source_split_1477:
    assume {:verifier.code 0} true;
    call {:si_unique_call 262} $i175 := device_create_file($p174, abituguru3_sysfs_attr);
    call {:si_unique_call 263} {:cexpr "tmp___4"} boogie_si_record_i32($i175);
    goto corral_source_split_1478;

  corral_source_split_1478:
    assume {:verifier.code 0} true;
    $i176 := $ne.i32($i175, 0);
    goto corral_source_split_1479;

  corral_source_split_1479:
    assume {:verifier.code 0} true;
    assume {:branchcond $i176} true;
    goto $bb59, $bb60;

  $bb60:
    assume !($i176 == 1);
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $p177 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1483;

  corral_source_split_1483:
    assume {:verifier.code 0} true;
    call {:si_unique_call 264} $p178 := hwmon_device_register($p177);
    goto corral_source_split_1484;

  corral_source_split_1484:
    assume {:verifier.code 0} true;
    $p179 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(0, 1));
    goto corral_source_split_1485;

  corral_source_split_1485:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p179, $p178);
    goto corral_source_split_1486;

  corral_source_split_1486:
    assume {:verifier.code 0} true;
    $p180 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(0, 1));
    goto corral_source_split_1487;

  corral_source_split_1487:
    assume {:verifier.code 0} true;
    $p181 := $load.ref($M.0, $p180);
    goto corral_source_split_1488;

  corral_source_split_1488:
    assume {:verifier.code 0} true;
    $p182 := $bitcast.ref.ref($p181);
    goto corral_source_split_1489;

  corral_source_split_1489:
    assume {:verifier.code 0} true;
    call {:si_unique_call 265} $i183 := IS_ERR($p182);
    goto corral_source_split_1490;

  corral_source_split_1490:
    assume {:verifier.code 0} true;
    $i184 := $zext.i1.i8($i183);
    call {:si_unique_call 266} {:cexpr "tmp___6"} boogie_si_record_i8($i184);
    goto corral_source_split_1491;

  corral_source_split_1491:
    assume {:verifier.code 0} true;
    $i185 := $trunc.i8.i1($i184);
    goto corral_source_split_1492;

  corral_source_split_1492:
    assume {:verifier.code 0} true;
    assume {:branchcond $i185} true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i185 == 1);
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    $i16 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1292;

  corral_source_split_1292:
    assume {:verifier.code 0} true;
    $r := $i16;
    return;

  $bb63:
    assume $i185 == 1;
    goto corral_source_split_1494;

  corral_source_split_1494:
    assume {:verifier.code 0} true;
    $p186 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(0, 1));
    goto corral_source_split_1495;

  corral_source_split_1495:
    assume {:verifier.code 0} true;
    $p187 := $load.ref($M.0, $p186);
    goto corral_source_split_1496;

  corral_source_split_1496:
    assume {:verifier.code 0} true;
    $p188 := $bitcast.ref.ref($p187);
    goto corral_source_split_1497;

  corral_source_split_1497:
    assume {:verifier.code 0} true;
    call {:si_unique_call 267} $i189 := PTR_ERR($p188);
    call {:si_unique_call 268} {:cexpr "tmp___5"} boogie_si_record_i64($i189);
    goto corral_source_split_1498;

  corral_source_split_1498:
    assume {:verifier.code 0} true;
    $i190 := $trunc.i64.i32($i189);
    call {:si_unique_call 269} {:cexpr "res"} boogie_si_record_i32($i190);
    goto corral_source_split_1499;

  corral_source_split_1499:
    assume {:verifier.code 0} true;
    $i27 := $i190;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    $p195 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1311;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    $p196 := $load.ref($M.0, $p195);
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i197 := $p2i.ref.i64($p196);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    $i198 := $ne.i64($i197, 0);
    goto corral_source_split_1314;

  corral_source_split_1314:
    assume {:verifier.code 0} true;
    assume {:branchcond $i198} true;
    goto $bb66, $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    assume !($i198 == 1);
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $p214 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1517;

  corral_source_split_1517:
    assume {:verifier.code 0} true;
    call {:si_unique_call 272} device_remove_file($p214, abituguru3_sysfs_attr);
    assume {:verifier.code 0} true;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    $i16 := $i27;
    goto $bb3;

  $bb66:
    assume $i198 == 1;
    goto corral_source_split_1501;

  corral_source_split_1501:
    assume {:verifier.code 0} true;
    $i199 := 0;
    goto $bb69;

  $bb69:
    call $p200, $i201, $p204, $i205, $i206, $p210, $p211, $i212, $i213, $i199 := abituguru3_probe_loop_$bb69($p0, $p13, $p200, $i201, $p204, $i205, $i206, $p210, $p211, $i212, $i213, $i199);
    goto $bb69_last;

  corral_source_split_1503:
    assume {:verifier.code 0} true;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    $p200 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1505;

  corral_source_split_1505:
    assume {:verifier.code 0} true;
    $i201 := $sext.i32.i64($i199);
    goto corral_source_split_1506;

  corral_source_split_1506:
    assume {:verifier.code 0} true;
    $p204 := $add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i201, 56)), $mul.ref(0, 1));
    goto corral_source_split_1507;

  corral_source_split_1507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 270} device_remove_file($p200, $p204);
    goto corral_source_split_1508;

  corral_source_split_1508:
    assume {:verifier.code 0} true;
    $i205 := $add.i32($i199, 1);
    call {:si_unique_call 271} {:cexpr "i"} boogie_si_record_i32($i205);
    goto corral_source_split_1509;

  corral_source_split_1509:
    assume {:verifier.code 0} true;
    $i206 := $sext.i32.i64($i205);
    $p210 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i206, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1510;

  corral_source_split_1510:
    assume {:verifier.code 0} true;
    $p211 := $load.ref($M.0, $p210);
    goto corral_source_split_1511;

  corral_source_split_1511:
    assume {:verifier.code 0} true;
    $i212 := $p2i.ref.i64($p211);
    goto corral_source_split_1512;

  corral_source_split_1512:
    assume {:verifier.code 0} true;
    $i213 := $ne.i64($i212, 0);
    goto corral_source_split_1513;

  corral_source_split_1513:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb71, $bb72;

  $bb72:
    assume !($i213 == 1);
    goto corral_source_split_1515;

  corral_source_split_1515:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb71:
    assume $i213 == 1;
    assume {:verifier.code 0} true;
    $i199 := $i205;
    goto $bb71_dummy;

  $bb59:
    assume $i176 == 1;
    goto corral_source_split_1481;

  corral_source_split_1481:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 19);
    goto $bb7;

  $bb46:
    assume $i163 == 1;
    goto corral_source_split_1460;

  corral_source_split_1460:
    assume {:verifier.code 0} true;
    $i164 := 0;
    goto $bb49;

  $bb49:
    call $p165, $i166, $p169, $i170, $i171, $i172, $i173, $i164 := abituguru3_probe_loop_$bb49($p0, $p13, $i73, $p165, $i166, $p169, $i170, $i171, $i172, $i173, $i164);
    goto $bb49_last;

  corral_source_split_1462:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    $p165 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1464;

  corral_source_split_1464:
    assume {:verifier.code 0} true;
    $i166 := $sext.i32.i64($i164);
    goto corral_source_split_1465;

  corral_source_split_1465:
    assume {:verifier.code 0} true;
    $p169 := $add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i166, 56)), $mul.ref(0, 1));
    goto corral_source_split_1466;

  corral_source_split_1466:
    assume {:verifier.code 0} true;
    call {:si_unique_call 259} $i170 := device_create_file($p165, $p169);
    call {:si_unique_call 260} {:cexpr "tmp___3"} boogie_si_record_i32($i170);
    goto corral_source_split_1467;

  corral_source_split_1467:
    assume {:verifier.code 0} true;
    $i171 := $ne.i32($i170, 0);
    goto corral_source_split_1468;

  corral_source_split_1468:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i171 == 1);
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $i172 := $add.i32($i164, 1);
    call {:si_unique_call 261} {:cexpr "i"} boogie_si_record_i32($i172);
    goto corral_source_split_1472;

  corral_source_split_1472:
    assume {:verifier.code 0} true;
    $i173 := $slt.i32($i172, $i73);
    goto corral_source_split_1473;

  corral_source_split_1473:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i173 == 1);
    goto corral_source_split_1475;

  corral_source_split_1475:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb54:
    assume $i173 == 1;
    assume {:verifier.code 0} true;
    $i164 := $i172;
    goto $bb54_dummy;

  $bb51:
    assume $i171 == 1;
    goto corral_source_split_1470;

  corral_source_split_1470:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 19);
    goto $bb7;

  $bb43:
    assume $i159 == 1;
    goto corral_source_split_1453;

  corral_source_split_1453:
    assume {:verifier.code 0} true;
    $p160 := $M.14;
    goto corral_source_split_1454;

  corral_source_split_1454:
    assume {:verifier.code 0} true;
    $p161 := $M.13;
    goto corral_source_split_1455;

  corral_source_split_1455:
    assume {:verifier.code 0} true;
    call {:si_unique_call 258} vslice_dummy_var_8 := printk.ref.ref.ref(.str.4, $p160, $p161);
    goto corral_source_split_1456;

  corral_source_split_1456:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 36);
    goto $bb7;

  $bb24:
    assume $i71 == 1;
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    $p74, $i75, $i76, $i77 := $p64, 0, 0, 3308;
    goto $bb27;

  $bb27:
    call $i78, $p82, $p83, $i84, $p86, $i87, $i88, $p89, $i90, $i91, $i99, $i100, $i101, $p106, $p107, $i108, $p109, $i110, $i111, $i112, $i113, $p115, $i116, $i117, $p119, $p120, $p121, $i122, $p127, $i128, $i129, $p132, $i133, $p134, $i135, $i136, $i137, $i138, $i139, $p95, $i96, $i97, $i98, $i140, $i141, $p142, $i92, $i93, $p94, $i143, $p144, $i145, $i146, $i147, $p148, $i149, $p150, $i151, $p153, $p154, $i155, $i156, $p74, $i75, $i76, $i77, $i157, $i158, cmdloc_dummy_var_0, cmdloc_dummy_var_1, cmdloc_dummy_var_2 := abituguru3_probe_loop_$bb27($p1, $p2, $p13, $p66, $i78, $p82, $p83, $i84, $p86, $i87, $i88, $p89, $i90, $i91, $i99, $i100, $i101, $p106, $p107, $i108, $p109, $i110, $i111, $i112, $i113, $p115, $i116, $i117, $p119, $p120, $p121, $i122, $p127, $i128, $i129, $p132, $i133, $p134, $i135, $i136, $i137, $i138, $i139, $p95, $i96, $i97, $i98, $i140, $i141, $p142, $i92, $i93, $p94, $i143, $p144, $i145, $i146, $i147, $p148, $i149, $p150, $i151, $p153, $p154, $i155, $i156, $p74, $i75, $i76, $i77, $i157, $i158, cmdloc_dummy_var_0, cmdloc_dummy_var_1, cmdloc_dummy_var_2);
    goto $bb27_last;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $i78 := $sgt.i32($i75, 25);
    goto corral_source_split_1376;

  corral_source_split_1376:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i78 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $p82 := $add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(18056, 1));
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $p83 := $load.ref($M.0, $p82);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $i84 := $sext.i32.i64($i75);
    goto corral_source_split_1385;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $p86 := $add.ref($add.ref($p83, $mul.ref($i84, 32)), $mul.ref(12, 1));
    goto corral_source_split_1387;

  corral_source_split_1387:
    assume {:verifier.code 0} true;
    $i87 := $load.i32($M.0, $p86);
    call {:si_unique_call 249} {:cexpr "type"} boogie_si_record_i32($i87);
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    $i88 := $sext.i32.i64($i87);
    goto corral_source_split_1389;

  corral_source_split_1389:
    assume {:verifier.code 0} true;
    $p89 := $add.ref($add.ref($p1, $mul.ref(0, 12)), $mul.ref($i88, 4));
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $i90 := $load.i32($M.10, $p89);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    $i91 := $sgt.i32($i90, 0);
    goto corral_source_split_1392;

  corral_source_split_1392:
    assume {:verifier.code 0} true;
    $i92, $i93, $p94 := $i77, $i76, $p74;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume !($i91 == 1);
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i143 := $sext.i32.i64($i87);
    goto corral_source_split_1433;

  corral_source_split_1433:
    assume {:verifier.code 0} true;
    $p144 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref($i143, 4));
    goto corral_source_split_1434;

  corral_source_split_1434:
    assume {:verifier.code 0} true;
    $i145 := $load.i32($M.11, $p144);
    goto corral_source_split_1435;

  corral_source_split_1435:
    assume {:verifier.code 0} true;
    $i146 := $add.i32($i145, 1);
    goto corral_source_split_1436;

  corral_source_split_1436:
    assume {:verifier.code 0} true;
    $i147 := $sext.i32.i64($i87);
    goto corral_source_split_1437;

  corral_source_split_1437:
    assume {:verifier.code 0} true;
    $p148 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref($i147, 4));
    goto corral_source_split_1438;

  corral_source_split_1438:
    assume {:verifier.code 0} true;
    $M.11 := $store.i32($M.11, $p148, $i146);
    goto corral_source_split_1439;

  corral_source_split_1439:
    assume {:verifier.code 0} true;
    $i149 := $add.i32($i75, 1);
    call {:si_unique_call 257} {:cexpr "i"} boogie_si_record_i32($i149);
    goto corral_source_split_1440;

  corral_source_split_1440:
    assume {:verifier.code 0} true;
    $p150 := $load.ref($M.0, $p66);
    goto corral_source_split_1441;

  corral_source_split_1441:
    assume {:verifier.code 0} true;
    $i151 := $sext.i32.i64($i149);
    goto corral_source_split_1442;

  corral_source_split_1442:
    assume {:verifier.code 0} true;
    goto corral_source_split_1443;

  corral_source_split_1443:
    assume {:verifier.code 0} true;
    $p153 := $add.ref($add.ref($p150, $mul.ref($i151, 32)), $mul.ref(0, 1));
    goto corral_source_split_1444;

  corral_source_split_1444:
    assume {:verifier.code 0} true;
    $p154 := $load.ref($M.0, $p153);
    goto corral_source_split_1445;

  corral_source_split_1445:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p154);
    goto corral_source_split_1446;

  corral_source_split_1446:
    assume {:verifier.code 0} true;
    $i156 := $ne.i64($i155, 0);
    goto corral_source_split_1447;

  corral_source_split_1447:
    assume {:verifier.code 0} true;
    $i157, $i158 := $i92, $i93;
    assume true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i156 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1449;

  corral_source_split_1449:
    assume {:verifier.code 0} true;
    $i72, $i73 := $i157, $i158;
    goto $bb26;

  $bb40:
    assume $i156 == 1;
    assume {:verifier.code 0} true;
    $p74, $i75, $i76, $i77 := $p94, $i149, $i93, $i92;
    goto $bb40_dummy;

  $bb32:
    assume $i91 == 1;
    goto corral_source_split_1394;

  corral_source_split_1394:
    assume {:verifier.code 0} true;
    $p95, $i96, $i97, $i98 := $p74, 0, $i76, $i77;
    goto $bb35;

  $bb35:
    call $i99, $i100, $i101, $p106, $p107, $i108, $p109, $i110, $i111, $i112, $i113, $p115, $i116, $i117, $p119, $p120, $p121, $i122, $p127, $i128, $i129, $p132, $i133, $p134, $i135, $i136, $i137, $i138, $i139, $p95, $i96, $i97, $i98, $i140, $i141, $p142, cmdloc_dummy_var_0, cmdloc_dummy_var_1, cmdloc_dummy_var_2 := abituguru3_probe_loop_$bb35($p2, $p13, $i87, $p89, $i99, $i100, $i101, $p106, $p107, $i108, $p109, $i110, $i111, $i112, $i113, $p115, $i116, $i117, $p119, $p120, $p121, $i122, $p127, $i128, $i129, $p132, $i133, $p134, $i135, $i136, $i137, $i138, $i139, $p95, $i96, $i97, $i98, $i140, $i141, $p142, $i75, cmdloc_dummy_var_0, cmdloc_dummy_var_1, cmdloc_dummy_var_2);
    goto $bb35_last;

  corral_source_split_1396:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i99 := $sext.i32.i64($i98);
    goto corral_source_split_1398;

  corral_source_split_1398:
    assume {:verifier.code 0} true;
    $i100 := $sext.i32.i64($i96);
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i101 := $sext.i32.i64($i87);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref($i101, 560)), $mul.ref($i100, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    $p107 := $load.ref($M.0, $p106);
    goto corral_source_split_1402;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    $i108 := $sext.i32.i64($i87);
    goto corral_source_split_1403;

  corral_source_split_1403:
    assume {:verifier.code 0} true;
    $p109 := $add.ref($add.ref($p2, $mul.ref(0, 12)), $mul.ref($i108, 4));
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i110 := $load.i32($M.11, $p109);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    call {:si_unique_call 250} $i111 := snprintf.ref.i64.ref.i32($p95, $i99, $p107, $i110);
    call {:si_unique_call 251} {:cexpr "tmp___2"} boogie_si_record_i32($i111);
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    $i112 := $add.i32($i111, 1);
    call {:si_unique_call 252} {:cexpr "used"} boogie_si_record_i32($i112);
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $i113 := $sext.i32.i64($i97);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    $p115 := $add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i113, 56));
    goto corral_source_split_1409;

  corral_source_split_1409:
    assume {:verifier.code 0} true;
    $i116 := $sext.i32.i64($i96);
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    $i117 := $sext.i32.i64($i87);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    $p119 := $add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref($i117, 560)), $mul.ref($i116, 56));
    goto corral_source_split_1412;

  corral_source_split_1412:
    assume {:verifier.code 0} true;
    $p120 := $bitcast.ref.ref($p115);
    goto corral_source_split_1413;

  corral_source_split_1413:
    assume {:verifier.code 0} true;
    $p121 := $bitcast.ref.ref($p119);
    goto corral_source_split_1414;

  corral_source_split_1414:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_0 := $M.0;
    cmdloc_dummy_var_1 := $M.0;
    call {:si_unique_call 253} cmdloc_dummy_var_2 := $memcpy.i8(cmdloc_dummy_var_0, cmdloc_dummy_var_1, $p120, $p121, 56, $zext.i32.i64(8), 0 == 1);
    $M.0 := cmdloc_dummy_var_2;
    goto corral_source_split_1415;

  corral_source_split_1415:
    assume {:verifier.code 0} true;
    $i122 := $sext.i32.i64($i97);
    goto corral_source_split_1416;

  corral_source_split_1416:
    assume {:verifier.code 0} true;
    $p127 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i122, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1417;

  corral_source_split_1417:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, $p127, $p95);
    goto corral_source_split_1418;

  corral_source_split_1418:
    assume {:verifier.code 0} true;
    $i128 := $trunc.i32.i8($i75);
    goto corral_source_split_1419;

  corral_source_split_1419:
    assume {:verifier.code 0} true;
    $i129 := $sext.i32.i64($i97);
    goto corral_source_split_1420;

  corral_source_split_1420:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($add.ref($add.ref($add.ref($p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i129, 56)), $mul.ref(48, 1));
    goto corral_source_split_1421;

  corral_source_split_1421:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, $p132, $i128);
    goto corral_source_split_1422;

  corral_source_split_1422:
    assume {:verifier.code 0} true;
    $i133 := $sext.i32.i64($i112);
    goto corral_source_split_1423;

  corral_source_split_1423:
    assume {:verifier.code 0} true;
    $p134 := $add.ref($p95, $mul.ref($i133, 1));
    goto corral_source_split_1424;

  corral_source_split_1424:
    assume {:verifier.code 0} true;
    $i135 := $sub.i32($i98, $i112);
    call {:si_unique_call 254} {:cexpr "sysfs_names_free"} boogie_si_record_i32($i135);
    goto corral_source_split_1425;

  corral_source_split_1425:
    assume {:verifier.code 0} true;
    $i136 := $add.i32($i97, 1);
    call {:si_unique_call 255} {:cexpr "sysfs_attr_i"} boogie_si_record_i32($i136);
    goto corral_source_split_1426;

  corral_source_split_1426:
    assume {:verifier.code 0} true;
    $i137 := $add.i32($i96, 1);
    call {:si_unique_call 256} {:cexpr "j"} boogie_si_record_i32($i137);
    goto corral_source_split_1427;

  corral_source_split_1427:
    assume {:verifier.code 0} true;
    $i138 := $load.i32($M.10, $p89);
    goto corral_source_split_1428;

  corral_source_split_1428:
    assume {:verifier.code 0} true;
    $i139 := $sgt.i32($i138, $i137);
    goto corral_source_split_1429;

  corral_source_split_1429:
    assume {:verifier.code 0} true;
    $i140, $i141, $p142 := $i135, $i136, $p134;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i139 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1431;

  corral_source_split_1431:
    assume {:verifier.code 0} true;
    $i92, $i93, $p94 := $i140, $i141, $p142;
    goto $bb34;

  $bb37:
    assume $i139 == 1;
    assume {:verifier.code 0} true;
    $p95, $i96, $i97, $i98 := $p134, $i137, $i136, $i135;
    goto $bb37_dummy;

  $bb29:
    assume $i78 == 1;
    goto corral_source_split_1378;

  corral_source_split_1378:
    assume {:verifier.code 0} true;
    $p79 := $M.14;
    goto corral_source_split_1379;

  corral_source_split_1379:
    assume {:verifier.code 0} true;
    $p80 := $M.13;
    goto corral_source_split_1380;

  corral_source_split_1380:
    assume {:verifier.code 0} true;
    call {:si_unique_call 248} vslice_dummy_var_7 := printk.ref.ref.ref(.str.3, $p79, $p80);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 36);
    goto $bb7;

  $bb21:
    assume $i53 == 1;
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $i54 := $zext.i16.i32($i43);
    goto corral_source_split_1352;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    $p55 := $M.13;
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    call {:si_unique_call 246} vslice_dummy_var_5 := printk.ref.i32.ref(.str.1, $i54, $p55);
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 19);
    goto $bb7;

  $bb137:
    assume {:verifier.code 0} true;
    assume $i246 == 1;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto corral_source_split_1339;

  corral_source_split_1339:
    assume {:verifier.code 0} true;
    $i47 := $i46;
    goto $bb17;

  $bb133:
    assume {:verifier.code 0} true;
    assume $i244 == 1;
    goto $bb15;

  $bb129:
    assume {:verifier.code 0} true;
    assume $i242 == 1;
    goto $bb15;

  $bb125:
    assume {:verifier.code 0} true;
    assume $i240 == 1;
    goto $bb15;

  $bb121:
    assume {:verifier.code 0} true;
    assume $i238 == 1;
    goto $bb15;

  $bb117:
    assume {:verifier.code 0} true;
    assume $i236 == 1;
    goto $bb15;

  $bb113:
    assume {:verifier.code 0} true;
    assume $i234 == 1;
    goto $bb15;

  $bb109:
    assume {:verifier.code 0} true;
    assume $i232 == 1;
    goto $bb15;

  $bb105:
    assume {:verifier.code 0} true;
    assume $i230 == 1;
    goto $bb15;

  $bb101:
    assume {:verifier.code 0} true;
    assume $i228 == 1;
    goto $bb15;

  $bb97:
    assume {:verifier.code 0} true;
    assume $i226 == 1;
    goto $bb15;

  $bb93:
    assume {:verifier.code 0} true;
    assume $i224 == 1;
    goto $bb15;

  $bb89:
    assume {:verifier.code 0} true;
    assume $i222 == 1;
    goto $bb15;

  $bb85:
    assume {:verifier.code 0} true;
    assume $i220 == 1;
    goto $bb15;

  $bb81:
    assume {:verifier.code 0} true;
    assume $i218 == 1;
    goto $bb15;

  $bb77:
    assume {:verifier.code 0} true;
    assume $i216 == 1;
    goto $bb15;

  $bb14:
    assume {:verifier.code 0} true;
    assume $i45 == 1;
    goto $bb15;

  $bb9:
    assume $i31 == 1;
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 19);
    goto $bb7;

  SeqInstr_22:
    assume !assertsPassed;
    return;

  $bb5:
    assume $i26 == 1;
    goto corral_source_split_1308;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    $i27 := $sub.i32(0, 19);
    goto $bb7;

  $bb1:
    assume $i15 == 1;
    goto corral_source_split_1290;

  corral_source_split_1290:
    assume {:verifier.code 0} true;
    $i16 := $sub.i32(0, 12);
    goto $bb3;

  $bb71_dummy:
    assume false;
    return;

  $bb69_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1503;

  $bb54_dummy:
    assume false;
    return;

  $bb49_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1462;

  $bb37_dummy:
    assume false;
    return;

  $bb35_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1396;

  $bb40_dummy:
    assume false;
    return;

  $bb27_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1374;
}



const abituguru3_remove: ref;

axiom abituguru3_remove == $sub.ref(0, 249691);

procedure abituguru3_remove($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation abituguru3_remove($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $p14: ref;
  var $i15: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i64;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $i13: i32;
  var $p28: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1564;

  corral_source_split_1564:
    assume {:verifier.code 0} true;
    call {:si_unique_call 273} $p1 := platform_get_drvdata($p0);
    goto corral_source_split_1565;

  corral_source_split_1565:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p1);
    goto corral_source_split_1566;

  corral_source_split_1566:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(0, 1));
    goto corral_source_split_1567;

  corral_source_split_1567:
    assume {:verifier.code 0} true;
    $p4 := $load.ref($M.0, $p3);
    goto corral_source_split_1568;

  corral_source_split_1568:
    assume {:verifier.code 0} true;
    call {:si_unique_call 274} hwmon_device_unregister($p4);
    goto corral_source_split_1569;

  corral_source_split_1569:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1570;

  corral_source_split_1570:
    assume {:verifier.code 0} true;
    $p10 := $load.ref($M.0, $p9);
    goto corral_source_split_1571;

  corral_source_split_1571:
    assume {:verifier.code 0} true;
    $i11 := $p2i.ref.i64($p10);
    goto corral_source_split_1572;

  corral_source_split_1572:
    assume {:verifier.code 0} true;
    $i12 := $ne.i64($i11, 0);
    goto corral_source_split_1573;

  corral_source_split_1573:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i12 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1591;

  corral_source_split_1591:
    assume {:verifier.code 0} true;
    call {:si_unique_call 277} device_remove_file($p28, abituguru3_sysfs_attr);
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  $bb1:
    assume $i12 == 1;
    goto corral_source_split_1575;

  corral_source_split_1575:
    assume {:verifier.code 0} true;
    $i13 := 0;
    goto $bb4;

  $bb4:
    call $p14, $i15, $p18, $i19, $i20, $p24, $p25, $i26, $i27, $i13 := abituguru3_remove_loop_$bb4($p0, $p2, $p14, $i15, $p18, $i19, $i20, $p24, $p25, $i26, $i27, $i13);
    goto $bb4_last;

  corral_source_split_1577:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $p14 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1579;

  corral_source_split_1579:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i13);
    goto corral_source_split_1580;

  corral_source_split_1580:
    assume {:verifier.code 0} true;
    $p18 := $add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i15, 56)), $mul.ref(0, 1));
    goto corral_source_split_1581;

  corral_source_split_1581:
    assume {:verifier.code 0} true;
    call {:si_unique_call 275} device_remove_file($p14, $p18);
    goto corral_source_split_1582;

  corral_source_split_1582:
    assume {:verifier.code 0} true;
    $i19 := $add.i32($i13, 1);
    call {:si_unique_call 276} {:cexpr "i"} boogie_si_record_i32($i19);
    goto corral_source_split_1583;

  corral_source_split_1583:
    assume {:verifier.code 0} true;
    $i20 := $sext.i32.i64($i19);
    $p24 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref($i20, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1584;

  corral_source_split_1584:
    assume {:verifier.code 0} true;
    $p25 := $load.ref($M.0, $p24);
    goto corral_source_split_1585;

  corral_source_split_1585:
    assume {:verifier.code 0} true;
    $i26 := $p2i.ref.i64($p25);
    goto corral_source_split_1586;

  corral_source_split_1586:
    assume {:verifier.code 0} true;
    $i27 := $ne.i64($i26, 0);
    goto corral_source_split_1587;

  corral_source_split_1587:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i27 == 1);
    goto corral_source_split_1589;

  corral_source_split_1589:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb6:
    assume $i27 == 1;
    assume {:verifier.code 0} true;
    $i13 := $i19;
    goto $bb6_dummy;

  $bb6_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1577;
}



const platform_get_drvdata: ref;

axiom platform_get_drvdata == $sub.ref(0, 250723);

procedure platform_get_drvdata($p0: ref) returns ($r: ref);
  free requires assertsPassed;



implementation platform_get_drvdata($p0: ref) returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1593;

  corral_source_split_1593:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1594;

  corral_source_split_1594:
    assume {:verifier.code 0} true;
    call {:si_unique_call 278} $p2 := dev_get_drvdata($p1);
    goto corral_source_split_1595;

  corral_source_split_1595:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const hwmon_device_unregister: ref;

axiom hwmon_device_unregister == $sub.ref(0, 251755);

procedure hwmon_device_unregister($p0: ref);
  free requires assertsPassed;



implementation hwmon_device_unregister($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1597;

  corral_source_split_1597:
    assume {:verifier.code 0} true;
    return;
}



const device_remove_file: ref;

axiom device_remove_file == $sub.ref(0, 252787);

procedure device_remove_file($p0: ref, $p1: ref);
  free requires assertsPassed;



implementation device_remove_file($p0: ref, $p1: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1599;

  corral_source_split_1599:
    assume {:verifier.code 0} true;
    return;
}



const devm_kzalloc: ref;

axiom devm_kzalloc == $sub.ref(0, 253819);

procedure devm_kzalloc($p0: ref, $i1: i64, $i2: i32) returns ($r: ref);
  free requires assertsPassed;



implementation devm_kzalloc($p0: ref, $i1: i64, $i2: i32) returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 279} {:cexpr "devm_kzalloc:arg:size"} boogie_si_record_i64($i1);
    call {:si_unique_call 280} {:cexpr "devm_kzalloc:arg:gfp"} boogie_si_record_i32($i2);
    goto corral_source_split_1601;

  corral_source_split_1601:
    assume {:verifier.code 0} true;
    $i3 := $or.i32($i2, 32768);
    goto corral_source_split_1602;

  corral_source_split_1602:
    assume {:verifier.code 0} true;
    call {:si_unique_call 281} $p4 := devm_kmalloc($p0, $i1, $i3);
    goto corral_source_split_1603;

  corral_source_split_1603:
    assume {:verifier.code 0} true;
    $r := $p4;
    return;
}



const platform_get_resource: ref;

axiom platform_get_resource == $sub.ref(0, 254851);

procedure platform_get_resource($p0: ref, $i1: i32, $i2: i32) returns ($r: ref);
  free requires assertsPassed;



implementation platform_get_resource($p0: ref, $i1: i32, $i2: i32) returns ($r: ref)
{
  var $p3: ref;
  var $p4: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 282} {:cexpr "platform_get_resource:arg:arg1"} boogie_si_record_i32($i1);
    call {:si_unique_call 283} {:cexpr "platform_get_resource:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_1605;

  corral_source_split_1605:
    assume {:verifier.code 0} true;
    call {:si_unique_call 284} $p3 := external_alloc();
    goto corral_source_split_1606;

  corral_source_split_1606:
    assume {:verifier.code 0} true;
    $p4 := $bitcast.ref.ref($p3);
    goto corral_source_split_1607;

  corral_source_split_1607:
    assume {:verifier.code 0} true;
    $r := $p4;
    return;
}



const __mutex_init: ref;

axiom __mutex_init == $sub.ref(0, 255883);

procedure __mutex_init($p0: ref, $p1: ref, $p2: ref);
  free requires assertsPassed;



implementation __mutex_init($p0: ref, $p1: ref, $p2: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1609;

  corral_source_split_1609:
    assume {:verifier.code 0} true;
    return;
}



const platform_set_drvdata: ref;

axiom platform_set_drvdata == $sub.ref(0, 256915);

procedure platform_set_drvdata($p0: ref, $p1: ref);
  free requires assertsPassed;
  modifies $M.1;



implementation platform_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1611;

  corral_source_split_1611:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1612;

  corral_source_split_1612:
    assume {:verifier.code 0} true;
    call {:si_unique_call 285} dev_set_drvdata($p2, $p1);
    goto corral_source_split_1613;

  corral_source_split_1613:
    assume {:verifier.code 0} true;
    return;
}



const printk: ref;

axiom printk == $sub.ref(0, 257947);

procedure printk.ref($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_1615;

  corral_source_split_1615:
    assume {:verifier.code 1} true;
    call {:si_unique_call 286} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 287} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1616;

  corral_source_split_1616:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb1:
    assume {:verifier.code 1} true;
    goto corral_source_split_1618;

  corral_source_split_1618:
    assume {:verifier.code 1} true;
    call {:si_unique_call 288} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 289} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1619;

  corral_source_split_1619:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.ref.ref($p0: ref, p.1: ref, p.2: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb2:
    assume {:verifier.code 1} true;
    goto corral_source_split_1621;

  corral_source_split_1621:
    assume {:verifier.code 1} true;
    call {:si_unique_call 290} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 291} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1622;

  corral_source_split_1622:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32.ref($p0: ref, p.1: i32, p.2: ref) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32.ref($p0: ref, p.1: i32, p.2: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_1624;

  corral_source_split_1624:
    assume {:verifier.code 1} true;
    call {:si_unique_call 292} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 293} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1625;

  corral_source_split_1625:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const snprintf: ref;

axiom snprintf == $sub.ref(0, 258979);

procedure snprintf.ref.i64.ref.i32($p0: ref, $i1: i64, $p2: ref, p.3: i32) returns ($r: i32);



const llvm.memcpy.p0i8.p0i8.i64: ref;

axiom llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 260011);

procedure llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);



const device_create_file: ref;

axiom device_create_file == $sub.ref(0, 261043);

procedure device_create_file($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;



implementation device_create_file($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_1627;

  corral_source_split_1627:
    assume {:verifier.code 1} true;
    call {:si_unique_call 294} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 295} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_1628;

  corral_source_split_1628:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const hwmon_device_register: ref;

axiom hwmon_device_register == $sub.ref(0, 262075);

procedure hwmon_device_register($p0: ref) returns ($r: ref);
  free requires assertsPassed;



implementation hwmon_device_register($p0: ref) returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1630;

  corral_source_split_1630:
    assume {:verifier.code 0} true;
    call {:si_unique_call 296} $p1 := external_alloc();
    goto corral_source_split_1631;

  corral_source_split_1631:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p1);
    goto corral_source_split_1632;

  corral_source_split_1632:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const IS_ERR: ref;

axiom IS_ERR == $sub.ref(0, 263107);

procedure IS_ERR($p0: ref) returns ($r: i1);
  free requires assertsPassed;



implementation IS_ERR($p0: ref) returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1634;

  corral_source_split_1634:
    assume {:verifier.code 0} true;
    call {:si_unique_call 297} $i1 := ldv_is_err($p0);
    goto corral_source_split_1635;

  corral_source_split_1635:
    assume {:verifier.code 0} true;
    $i2 := $zext.i1.i8($i1);
    call {:si_unique_call 298} {:cexpr "tmp"} boogie_si_record_i8($i2);
    goto corral_source_split_1636;

  corral_source_split_1636:
    assume {:verifier.code 0} true;
    $i3 := $trunc.i8.i1($i2);
    goto corral_source_split_1637;

  corral_source_split_1637:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;
}



const PTR_ERR: ref;

axiom PTR_ERR == $sub.ref(0, 264139);

procedure PTR_ERR($p0: ref) returns ($r: i64);
  free requires assertsPassed;



implementation PTR_ERR($p0: ref) returns ($r: i64)
{
  var $i1: i64;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1639;

  corral_source_split_1639:
    assume {:verifier.code 0} true;
    call {:si_unique_call 299} $i1 := ldv_ptr_err($p0);
    call {:si_unique_call 300} {:cexpr "tmp"} boogie_si_record_i64($i1);
    goto corral_source_split_1640;

  corral_source_split_1640:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const ldv_ptr_err: ref;

axiom ldv_ptr_err == $sub.ref(0, 265171);

procedure ldv_ptr_err($p0: ref) returns ($r: i64);
  free requires assertsPassed;



implementation ldv_ptr_err($p0: ref) returns ($r: i64)
{
  var $i1: i64;
  var $i2: i64;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1642;

  corral_source_split_1642:
    assume {:verifier.code 0} true;
    $i1 := $p2i.ref.i64($p0);
    goto corral_source_split_1643;

  corral_source_split_1643:
    assume {:verifier.code 0} true;
    $i2 := $sub.i64(2012, $i1);
    goto corral_source_split_1644;

  corral_source_split_1644:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const ldv_is_err: ref;

axiom ldv_is_err == $sub.ref(0, 266203);

procedure ldv_is_err($p0: ref) returns ($r: i1);
  free requires assertsPassed;



implementation ldv_is_err($p0: ref) returns ($r: i1)
{
  var $i1: i64;
  var $i2: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1646;

  corral_source_split_1646:
    assume {:verifier.code 0} true;
    $i1 := $p2i.ref.i64($p0);
    goto corral_source_split_1647;

  corral_source_split_1647:
    assume {:verifier.code 0} true;
    $i2 := $ugt.i64($i1, 2012);
    goto corral_source_split_1648;

  corral_source_split_1648:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const external_alloc: ref;

axiom external_alloc == $sub.ref(0, 267235);

procedure external_alloc() returns ($r: ref);
  free requires assertsPassed;



implementation external_alloc() returns ($r: ref)
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_1650;

  corral_source_split_1650:
    assume {:verifier.code 1} true;
    call {:si_unique_call 301} $p0 := __VERIFIER_nondet_pointer();
    call {:si_unique_call 302} {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
    goto corral_source_split_1651;

  corral_source_split_1651:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const dev_set_drvdata: ref;

axiom dev_set_drvdata == $sub.ref(0, 268267);

procedure dev_set_drvdata($p0: ref, $p1: ref);
  free requires assertsPassed;
  modifies $M.1;



implementation dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1653;

  corral_source_split_1653:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p0, $mul.ref(0, 1424)), $mul.ref(512, 1));
    goto corral_source_split_1654;

  corral_source_split_1654:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p2, $p1);
    goto corral_source_split_1655;

  corral_source_split_1655:
    assume {:verifier.code 0} true;
    return;
}



const devm_kmalloc: ref;

axiom devm_kmalloc == $sub.ref(0, 269299);

procedure devm_kmalloc($p0: ref, $i1: i64, $i2: i32) returns ($r: ref);
  free requires assertsPassed;



implementation devm_kmalloc($p0: ref, $i1: i64, $i2: i32) returns ($r: ref)
{
  var $p3: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 303} {:cexpr "devm_kmalloc:arg:arg1"} boogie_si_record_i64($i1);
    call {:si_unique_call 304} {:cexpr "devm_kmalloc:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_1657;

  corral_source_split_1657:
    assume {:verifier.code 0} true;
    call {:si_unique_call 305} $p3 := external_alloc();
    goto corral_source_split_1658;

  corral_source_split_1658:
    assume {:verifier.code 0} true;
    $r := $p3;
    return;
}



const abituguru3_suspend: ref;

axiom abituguru3_suspend == $sub.ref(0, 270331);

procedure abituguru3_suspend($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation abituguru3_suspend($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1660;

  corral_source_split_1660:
    assume {:verifier.code 0} true;
    call {:si_unique_call 306} $p1 := dev_get_drvdata($p0);
    goto corral_source_split_1661;

  corral_source_split_1661:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p1);
    goto corral_source_split_1662;

  corral_source_split_1662:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(8, 1));
    goto corral_source_split_1663;

  corral_source_split_1663:
    assume {:verifier.code 0} true;
    call {:si_unique_call 307} ldv_mutex_lock_12($p3);
    goto SeqInstr_25, SeqInstr_26;

  SeqInstr_26:
    assume assertsPassed;
    goto SeqInstr_27;

  SeqInstr_27:
    goto corral_source_split_1664;

  corral_source_split_1664:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  SeqInstr_25:
    assume !assertsPassed;
    return;
}



const abituguru3_resume: ref;

axiom abituguru3_resume == $sub.ref(0, 271363);

procedure abituguru3_resume($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation abituguru3_resume($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1666;

  corral_source_split_1666:
    assume {:verifier.code 0} true;
    call {:si_unique_call 308} $p1 := dev_get_drvdata($p0);
    goto corral_source_split_1667;

  corral_source_split_1667:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p1);
    goto corral_source_split_1668;

  corral_source_split_1668:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p2, $mul.ref(0, 18264)), $mul.ref(8, 1));
    goto corral_source_split_1669;

  corral_source_split_1669:
    assume {:verifier.code 0} true;
    call {:si_unique_call 309} ldv_mutex_unlock_13($p3);
    goto SeqInstr_28, SeqInstr_29;

  SeqInstr_29:
    assume assertsPassed;
    goto SeqInstr_30;

  SeqInstr_30:
    goto corral_source_split_1670;

  corral_source_split_1670:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  SeqInstr_28:
    assume !assertsPassed;
    return;
}



const ldv_mutex_unlock_13: ref;

axiom ldv_mutex_unlock_13 == $sub.ref(0, 272395);

procedure ldv_mutex_unlock_13($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_unlock_13($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1672;

  corral_source_split_1672:
    assume {:verifier.code 0} true;
    call {:si_unique_call 310} ldv_mutex_unlock_update_lock_of_abituguru3_data($p0);
    goto SeqInstr_31, SeqInstr_32;

  SeqInstr_32:
    assume assertsPassed;
    goto SeqInstr_33;

  SeqInstr_33:
    goto corral_source_split_1673;

  corral_source_split_1673:
    assume {:verifier.code 0} true;
    call {:si_unique_call 311} mutex_unlock($p0);
    goto corral_source_split_1674;

  corral_source_split_1674:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_31:
    assume !assertsPassed;
    return;
}



const ldv_mutex_lock_12: ref;

axiom ldv_mutex_lock_12 == $sub.ref(0, 273427);

procedure ldv_mutex_lock_12($p0: ref);
  free requires assertsPassed;
  modifies $M.9, assertsPassed;



implementation ldv_mutex_lock_12($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1676;

  corral_source_split_1676:
    assume {:verifier.code 0} true;
    call {:si_unique_call 312} ldv_mutex_lock_update_lock_of_abituguru3_data($p0);
    goto SeqInstr_34, SeqInstr_35;

  SeqInstr_35:
    assume assertsPassed;
    goto SeqInstr_36;

  SeqInstr_36:
    goto corral_source_split_1677;

  corral_source_split_1677:
    assume {:verifier.code 0} true;
    call {:si_unique_call 313} mutex_lock($p0);
    goto corral_source_split_1678;

  corral_source_split_1678:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_34:
    assume !assertsPassed;
    return;
}



const ldv_init_zalloc: ref;

axiom ldv_init_zalloc == $sub.ref(0, 274459);

procedure ldv_init_zalloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.1, $CurrAddr;



implementation ldv_init_zalloc($i0: i64) returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 314} {:cexpr "ldv_init_zalloc:arg:size"} boogie_si_record_i64($i0);
    goto corral_source_split_1680;

  corral_source_split_1680:
    assume {:verifier.code 0} true;
    call {:si_unique_call 315} $p1 := calloc(1, $i0);
    goto corral_source_split_1681;

  corral_source_split_1681:
    assume {:verifier.code 1} true;
    $i2 := $p2i.ref.i64($p1);
    goto corral_source_split_1682;

  corral_source_split_1682:
    assume {:verifier.code 1} true;
    $i3 := $ne.i64($i2, 0);
    goto corral_source_split_1683;

  corral_source_split_1683:
    assume {:verifier.code 1} true;
    $i4 := $zext.i1.i32($i3);
    goto corral_source_split_1684;

  corral_source_split_1684:
    assume {:verifier.code 1} true;
    call {:si_unique_call 316} __VERIFIER_assume($i4);
    goto corral_source_split_1685;

  corral_source_split_1685:
    assume {:verifier.code 0} true;
    $r := $p1;
    return;
}



const llvm.memset.p0i8.i64: ref;

axiom llvm.memset.p0i8.i64 == $sub.ref(0, 275491);

procedure llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);



const ldv_dev_pm_ops_2: ref;

axiom ldv_dev_pm_ops_2 == $sub.ref(0, 276523);

procedure ldv_dev_pm_ops_2();
  free requires assertsPassed;
  modifies $M.15, $M.1, $CurrAddr;



implementation ldv_dev_pm_ops_2()
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1687;

  corral_source_split_1687:
    assume {:verifier.code 0} true;
    call {:si_unique_call 317} $p0 := ldv_init_zalloc(1416);
    goto corral_source_split_1688;

  corral_source_split_1688:
    assume {:verifier.code 0} true;
    goto corral_source_split_1689;

  corral_source_split_1689:
    assume {:verifier.code 0} true;
    $M.15 := $p0;
    goto corral_source_split_1690;

  corral_source_split_1690:
    assume {:verifier.code 0} true;
    return;
}



const ldv_platform_driver_init_1: ref;

axiom ldv_platform_driver_init_1 == $sub.ref(0, 277555);

procedure ldv_platform_driver_init_1();
  free requires assertsPassed;
  modifies $M.16, $M.1, $CurrAddr;



implementation ldv_platform_driver_init_1()
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_1692;

  corral_source_split_1692:
    assume {:verifier.code 0} true;
    call {:si_unique_call 318} $p0 := ldv_init_zalloc(1472);
    goto corral_source_split_1693;

  corral_source_split_1693:
    assume {:verifier.code 0} true;
    goto corral_source_split_1694;

  corral_source_split_1694:
    assume {:verifier.code 0} true;
    $M.16 := $p0;
    goto corral_source_split_1695;

  corral_source_split_1695:
    assume {:verifier.code 0} true;
    return;
}



const main: ref;

axiom main == $sub.ref(0, 278587);

procedure main() returns ($r: i32);
  free requires assertsPassed;
  modifies $M.17, $M.18, $M.19, $M.20, $M.10, $M.11, $M.0, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.21, $M.22, $M.23, $M.24, $M.15, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.16, $M.9, $M.53, $M.52, $M.54, $M.44, $M.14, $M.13, $M.2, $M.102, $M.103, $M.104, $M.105, $M.106, $M.107, $M.108, $CurrAddr, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.1, assertsPassed;



implementation main() returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i1;
  var $i3: i1;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i1;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i32;
  var $i35: i32;
  var $i36: i1;
  var $i37: i32;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i32;
  var $i46: i1;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i1;
  var $i51: i32;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i1;
  var $i58: i32;
  var $i59: i1;
  var $i60: i1;
  var $i61: i1;
  var $i62: i1;
  var $i63: i1;
  var $i64: i1;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $i68: i1;
  var $i69: i1;
  var $i70: i1;
  var $i71: i1;
  var $i72: i1;
  var $i73: i1;
  var $i74: i1;
  var $i75: i1;
  var $i76: i1;
  var $i77: i1;
  var $i78: i1;
  var $i79: i1;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i32;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $i89: i32;
  var $i90: i32;
  var $i91: i1;
  var $i92: i32;
  var $i93: i1;
  var $p94: ref;
  var $i95: i32;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i1;
  var $p100: ref;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $i107: i32;
  var $i108: i32;
  var $i109: i1;
  var $i110: i32;
  var $i111: i1;
  var $p112: ref;
  var $i113: i32;
  var $i114: i32;
  var $i115: i1;
  var $i116: i32;
  var $i117: i1;
  var $i118: i32;
  var $i119: i32;
  var $i120: i1;
  var $i121: i32;
  var $i122: i1;
  var $i123: i32;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i32;
  var $i130: i1;
  var $i131: i32;
  var $i132: i1;
  var $i133: i32;
  var $i134: i32;
  var $i135: i1;
  var $i136: i32;
  var $i137: i1;
  var $i138: i32;
  var $i139: i32;
  var $i140: i1;
  var $i141: i32;
  var $i142: i1;
  var $i143: i32;
  var $i144: i32;
  var $i145: i1;
  var $i146: i32;
  var $i147: i1;
  var $i148: i32;
  var $i149: i32;
  var $i150: i1;
  var $i151: i32;
  var $i152: i32;
  var $i153: i32;
  var $i154: i1;
  var $i155: i32;
  var $i156: i32;
  var $i157: i1;
  var $i158: i32;
  var $i159: i1;
  var $i160: i32;
  var $i161: i32;
  var $i162: i1;
  var $i163: i32;
  var $i164: i1;
  var $i165: i32;
  var $i166: i32;
  var $i167: i1;
  var $i168: i32;
  var $i169: i1;
  var $i170: i32;
  var $i171: i32;
  var $i172: i1;
  var $i173: i32;
  var $i174: i1;
  var $i175: i32;
  var $i176: i32;
  var $i177: i1;
  var $i178: i32;
  var $i179: i1;
  var $i180: i32;
  var $i181: i32;
  var $i182: i1;
  var $i183: i32;
  var $i184: i1;
  var $i186: i32;
  var $i187: i32;
  var vslice_dummy_var_9: i32;

  $bb0:
    call {:si_unique_call 319} $initialize();
    goto corral_source_split_1697;

  corral_source_split_1697:
    assume {:verifier.code 0} true;
    call {:si_unique_call 320} {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
    goto corral_source_split_1698;

  corral_source_split_1698:
    assume {:verifier.code 0} true;
    call {:si_unique_call 321} ldv_initialize();
    goto corral_source_split_1699;

  corral_source_split_1699:
    assume {:verifier.code 0} true;
    $M.17 := 0;
    call {:si_unique_call 322} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    goto corral_source_split_1700;

  corral_source_split_1700:
    assume {:verifier.code 0} true;
    $M.18 := 0;
    call {:si_unique_call 323} {:cexpr "ref_cnt"} boogie_si_record_i32(0);
    goto corral_source_split_1701;

  corral_source_split_1701:
    assume {:verifier.code 0} true;
    $M.19 := 1;
    call {:si_unique_call 324} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
    goto corral_source_split_1702;

  corral_source_split_1702:
    assume {:verifier.code 0} true;
    $M.20 := 0;
    call {:si_unique_call 325} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
    goto corral_source_split_1703;

  corral_source_split_1703:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $p13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $p23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $p33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $p82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $i93, $p94, $i95, $i96, $i97, $i98, $i99, $p100, $i101, $i102, $i103, $i104, $i105, $p106, $i107, $i108, $i109, $i110, $i111, $p112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i186, $i187, vslice_dummy_var_9 := main_loop_$bb1($i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $p13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $p23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $p33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $p82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $i93, $p94, $i95, $i96, $i97, $i98, $i99, $p100, $i101, $i102, $i103, $i104, $i105, $p106, $i107, $i108, $i109, $i110, $i111, $p112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i186, $i187, vslice_dummy_var_9);
    goto $bb1_last;

  $bb2:
    assume {:verifier.code 0} true;
    $i1 := $slt.i32($i0, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i1 == 1);
    assume {:verifier.code 0} true;
    $i2 := $slt.i32($i0, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i2 == 1);
    assume {:verifier.code 0} true;
    $i3 := $eq.i32($i0, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7, $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    assume !($i3 == 1);
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb248;

  $bb248:
    assume {:verifier.code 0} true;
    call {:si_unique_call 426} ldv_stop();
    goto corral_source_split_2092;

  corral_source_split_2092:
    assume {:verifier.code 0} true;
    goto $bb249;

  $bb249:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb50_dummy;

  $bb7:
    assume $i3 == 1;
    goto corral_source_split_1709;

  corral_source_split_1709:
    assume {:verifier.code 0} true;
    $i56 := $M.20;
    goto corral_source_split_1710;

  corral_source_split_1710:
    assume {:verifier.code 0} true;
    $i57 := $ne.i32($i56, 0);
    goto corral_source_split_1711;

  corral_source_split_1711:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb81, $bb82;

  $bb82:
    assume !($i57 == 1);
    assume {:verifier.code 0} true;
    goto $bb247;

  $bb247:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb81:
    assume $i57 == 1;
    goto corral_source_split_1821;

  corral_source_split_1821:
    assume {:verifier.code 1} true;
    call {:si_unique_call 361} $i58 := __VERIFIER_nondet_int();
    call {:si_unique_call 362} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i58);
    call {:si_unique_call 363} {:cexpr "tmp___2"} boogie_si_record_i32($i58);
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    $i59 := $slt.i32($i58, 10);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i59 == 1);
    assume {:verifier.code 0} true;
    $i60 := $slt.i32($i58, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb86, $bb87;

  $bb87:
    assume !($i60 == 1);
    assume {:verifier.code 0} true;
    $i61 := $slt.i32($i58, 17);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    $i62 := $slt.i32($i58, 18);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb90, $bb91;

  $bb91:
    assume !($i62 == 1);
    assume {:verifier.code 0} true;
    $i63 := $slt.i32($i58, 19);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb92, $bb93;

  $bb93:
    assume !($i63 == 1);
    assume {:verifier.code 0} true;
    $i64 := $eq.i32($i58, 19);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb94, $bb95;

  $bb95:
    assume {:verifier.code 0} true;
    assume !($i64 == 1);
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    goto $bb245;

  $bb245:
    assume {:verifier.code 0} true;
    call {:si_unique_call 425} ldv_stop();
    goto corral_source_split_2090;

  corral_source_split_2090:
    assume {:verifier.code 0} true;
    goto $bb246;

  $bb246:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb133:
    assume {:verifier.code 0} true;
    goto $bb247;

  $bb94:
    assume $i64 == 1;
    goto corral_source_split_1831;

  corral_source_split_1831:
    assume {:verifier.code 0} true;
    $i183 := $M.20;
    goto corral_source_split_1832;

  corral_source_split_1832:
    assume {:verifier.code 0} true;
    $i184 := $eq.i32($i183, 15);
    goto corral_source_split_1833;

  corral_source_split_1833:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb242, $bb243;

  $bb243:
    assume !($i184 == 1);
    assume {:verifier.code 0} true;
    goto $bb244;

  $bb244:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb242:
    assume $i184 == 1;
    goto corral_source_split_2083;

  corral_source_split_2083:
    assume {:verifier.code 0} true;
    call {:si_unique_call 422} vslice_dummy_var_9 := ldv_complete_2();
    goto corral_source_split_2084;

  corral_source_split_2084:
    assume {:verifier.code 0} true;
    $M.20 := 1;
    call {:si_unique_call 423} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
    goto corral_source_split_2085;

  corral_source_split_2085:
    assume {:verifier.code 0} true;
    $i186 := $M.18;
    goto corral_source_split_2086;

  corral_source_split_2086:
    assume {:verifier.code 0} true;
    $i187 := $sub.i32($i186, 1);
    goto corral_source_split_2087;

  corral_source_split_2087:
    assume {:verifier.code 0} true;
    $M.18 := $i187;
    call {:si_unique_call 424} {:cexpr "ref_cnt"} boogie_si_record_i32($i187);
    goto corral_source_split_2088;

  corral_source_split_2088:
    assume {:verifier.code 0} true;
    goto $bb244;

  $bb92:
    assume $i63 == 1;
    goto corral_source_split_1827;

  corral_source_split_1827:
    assume {:verifier.code 0} true;
    $i178 := $M.20;
    goto corral_source_split_1828;

  corral_source_split_1828:
    assume {:verifier.code 0} true;
    $i179 := $eq.i32($i178, 5);
    goto corral_source_split_1829;

  corral_source_split_1829:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb236, $bb237;

  $bb237:
    assume !($i179 == 1);
    assume {:verifier.code 0} true;
    goto $bb241;

  $bb241:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb236:
    assume $i179 == 1;
    goto corral_source_split_2074;

  corral_source_split_2074:
    assume {:verifier.code 0} true;
    call {:si_unique_call 419} $i180 := ldv_suspend_noirq_2();
    goto corral_source_split_2075;

  corral_source_split_2075:
    assume {:verifier.code 0} true;
    $M.43 := $i180;
    call {:si_unique_call 420} {:cexpr "ldv_retval_3"} boogie_si_record_i32($i180);
    goto corral_source_split_2076;

  corral_source_split_2076:
    assume {:verifier.code 0} true;
    $i181 := $M.43;
    goto corral_source_split_2077;

  corral_source_split_2077:
    assume {:verifier.code 0} true;
    $i182 := $eq.i32($i181, 0);
    goto corral_source_split_2078;

  corral_source_split_2078:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb238, $bb239;

  $bb239:
    assume !($i182 == 1);
    assume {:verifier.code 0} true;
    goto $bb240;

  $bb240:
    assume {:verifier.code 0} true;
    goto $bb241;

  $bb238:
    assume $i182 == 1;
    goto corral_source_split_2080;

  corral_source_split_2080:
    assume {:verifier.code 0} true;
    $M.20 := 11;
    call {:si_unique_call 421} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(11);
    goto corral_source_split_2081;

  corral_source_split_2081:
    assume {:verifier.code 0} true;
    goto $bb240;

  $bb90:
    assume $i62 == 1;
    goto corral_source_split_1823;

  corral_source_split_1823:
    assume {:verifier.code 0} true;
    $i173 := $M.20;
    goto corral_source_split_1824;

  corral_source_split_1824:
    assume {:verifier.code 0} true;
    $i174 := $eq.i32($i173, 6);
    goto corral_source_split_1825;

  corral_source_split_1825:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb230, $bb231;

  $bb231:
    assume !($i174 == 1);
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb235:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb230:
    assume $i174 == 1;
    goto corral_source_split_2065;

  corral_source_split_2065:
    assume {:verifier.code 0} true;
    call {:si_unique_call 416} $i175 := ldv_restore_noirq_2();
    goto corral_source_split_2066;

  corral_source_split_2066:
    assume {:verifier.code 0} true;
    $M.42 := $i175;
    call {:si_unique_call 417} {:cexpr "ldv_retval_4"} boogie_si_record_i32($i175);
    goto corral_source_split_2067;

  corral_source_split_2067:
    assume {:verifier.code 0} true;
    $i176 := $M.42;
    goto corral_source_split_2068;

  corral_source_split_2068:
    assume {:verifier.code 0} true;
    $i177 := $eq.i32($i176, 0);
    goto corral_source_split_2069;

  corral_source_split_2069:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb232, $bb233;

  $bb233:
    assume !($i177 == 1);
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb234:
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb232:
    assume $i177 == 1;
    goto corral_source_split_2071;

  corral_source_split_2071:
    assume {:verifier.code 0} true;
    $M.20 := 12;
    call {:si_unique_call 418} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(12);
    goto corral_source_split_2072;

  corral_source_split_2072:
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb88:
    assume $i61 == 1;
    assume {:verifier.code 0} true;
    $i65 := $slt.i32($i58, 16);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i65 == 1);
    goto corral_source_split_1839;

  corral_source_split_1839:
    assume {:verifier.code 0} true;
    $i168 := $M.20;
    goto corral_source_split_1840;

  corral_source_split_1840:
    assume {:verifier.code 0} true;
    $i169 := $eq.i32($i168, 3);
    goto corral_source_split_1841;

  corral_source_split_1841:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb224, $bb225;

  $bb225:
    assume !($i169 == 1);
    assume {:verifier.code 0} true;
    goto $bb229;

  $bb229:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb224:
    assume $i169 == 1;
    goto corral_source_split_2056;

  corral_source_split_2056:
    assume {:verifier.code 0} true;
    call {:si_unique_call 413} $i170 := ldv_poweroff_late_2();
    goto corral_source_split_2057;

  corral_source_split_2057:
    assume {:verifier.code 0} true;
    $M.41 := $i170;
    call {:si_unique_call 414} {:cexpr "ldv_retval_5"} boogie_si_record_i32($i170);
    goto corral_source_split_2058;

  corral_source_split_2058:
    assume {:verifier.code 0} true;
    $i171 := $M.41;
    goto corral_source_split_2059;

  corral_source_split_2059:
    assume {:verifier.code 0} true;
    $i172 := $eq.i32($i171, 0);
    goto corral_source_split_2060;

  corral_source_split_2060:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb226, $bb227;

  $bb227:
    assume !($i172 == 1);
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb228:
    assume {:verifier.code 0} true;
    goto $bb229;

  $bb226:
    assume $i172 == 1;
    goto corral_source_split_2062;

  corral_source_split_2062:
    assume {:verifier.code 0} true;
    $M.20 := 7;
    call {:si_unique_call 415} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(7);
    goto corral_source_split_2063;

  corral_source_split_2063:
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb97:
    assume $i65 == 1;
    goto corral_source_split_1835;

  corral_source_split_1835:
    assume {:verifier.code 0} true;
    $i163 := $M.20;
    goto corral_source_split_1836;

  corral_source_split_1836:
    assume {:verifier.code 0} true;
    $i164 := $eq.i32($i163, 3);
    goto corral_source_split_1837;

  corral_source_split_1837:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb218, $bb219;

  $bb219:
    assume !($i164 == 1);
    assume {:verifier.code 0} true;
    goto $bb223;

  $bb223:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb218:
    assume $i164 == 1;
    goto corral_source_split_2047;

  corral_source_split_2047:
    assume {:verifier.code 0} true;
    call {:si_unique_call 410} $i165 := ldv_poweroff_noirq_2();
    goto corral_source_split_2048;

  corral_source_split_2048:
    assume {:verifier.code 0} true;
    $M.40 := $i165;
    call {:si_unique_call 411} {:cexpr "ldv_retval_6"} boogie_si_record_i32($i165);
    goto corral_source_split_2049;

  corral_source_split_2049:
    assume {:verifier.code 0} true;
    $i166 := $M.40;
    goto corral_source_split_2050;

  corral_source_split_2050:
    assume {:verifier.code 0} true;
    $i167 := $eq.i32($i166, 0);
    goto corral_source_split_2051;

  corral_source_split_2051:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb220, $bb221;

  $bb221:
    assume !($i167 == 1);
    assume {:verifier.code 0} true;
    goto $bb222;

  $bb222:
    assume {:verifier.code 0} true;
    goto $bb223;

  $bb220:
    assume $i167 == 1;
    goto corral_source_split_2053;

  corral_source_split_2053:
    assume {:verifier.code 0} true;
    $M.20 := 6;
    call {:si_unique_call 412} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(6);
    goto corral_source_split_2054;

  corral_source_split_2054:
    assume {:verifier.code 0} true;
    goto $bb222;

  $bb86:
    assume $i60 == 1;
    assume {:verifier.code 0} true;
    $i66 := $slt.i32($i58, 12);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb99, $bb100;

  $bb100:
    assume !($i66 == 1);
    assume {:verifier.code 0} true;
    $i67 := $slt.i32($i58, 13);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i67 == 1);
    assume {:verifier.code 0} true;
    $i68 := $slt.i32($i58, 14);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb103, $bb104;

  $bb104:
    assume !($i68 == 1);
    goto corral_source_split_1851;

  corral_source_split_1851:
    assume {:verifier.code 0} true;
    $i158 := $M.20;
    goto corral_source_split_1852;

  corral_source_split_1852:
    assume {:verifier.code 0} true;
    $i159 := $eq.i32($i158, 8);
    goto corral_source_split_1853;

  corral_source_split_1853:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb212, $bb213;

  $bb213:
    assume !($i159 == 1);
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb212:
    assume $i159 == 1;
    goto corral_source_split_2038;

  corral_source_split_2038:
    assume {:verifier.code 0} true;
    call {:si_unique_call 407} $i160 := ldv_thaw_noirq_2();
    goto corral_source_split_2039;

  corral_source_split_2039:
    assume {:verifier.code 0} true;
    $M.39 := $i160;
    call {:si_unique_call 408} {:cexpr "ldv_retval_7"} boogie_si_record_i32($i160);
    goto corral_source_split_2040;

  corral_source_split_2040:
    assume {:verifier.code 0} true;
    $i161 := $M.39;
    goto corral_source_split_2041;

  corral_source_split_2041:
    assume {:verifier.code 0} true;
    $i162 := $eq.i32($i161, 0);
    goto corral_source_split_2042;

  corral_source_split_2042:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb214, $bb215;

  $bb215:
    assume !($i162 == 1);
    assume {:verifier.code 0} true;
    goto $bb216;

  $bb216:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb214:
    assume $i162 == 1;
    goto corral_source_split_2044;

  corral_source_split_2044:
    assume {:verifier.code 0} true;
    $M.20 := 13;
    call {:si_unique_call 409} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(13);
    goto corral_source_split_2045;

  corral_source_split_2045:
    assume {:verifier.code 0} true;
    goto $bb216;

  $bb103:
    assume $i68 == 1;
    goto corral_source_split_1847;

  corral_source_split_1847:
    assume {:verifier.code 0} true;
    $i153 := $M.20;
    goto corral_source_split_1848;

  corral_source_split_1848:
    assume {:verifier.code 0} true;
    $i154 := $eq.i32($i153, 4);
    goto corral_source_split_1849;

  corral_source_split_1849:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb206, $bb207;

  $bb207:
    assume !($i154 == 1);
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb206:
    assume $i154 == 1;
    goto corral_source_split_2029;

  corral_source_split_2029:
    assume {:verifier.code 0} true;
    call {:si_unique_call 404} $i155 := ldv_freeze_late_2();
    goto corral_source_split_2030;

  corral_source_split_2030:
    assume {:verifier.code 0} true;
    $M.38 := $i155;
    call {:si_unique_call 405} {:cexpr "ldv_retval_8"} boogie_si_record_i32($i155);
    goto corral_source_split_2031;

  corral_source_split_2031:
    assume {:verifier.code 0} true;
    $i156 := $M.38;
    goto corral_source_split_2032;

  corral_source_split_2032:
    assume {:verifier.code 0} true;
    $i157 := $eq.i32($i156, 0);
    goto corral_source_split_2033;

  corral_source_split_2033:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb208, $bb209;

  $bb209:
    assume !($i157 == 1);
    assume {:verifier.code 0} true;
    goto $bb210;

  $bb210:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb208:
    assume $i157 == 1;
    goto corral_source_split_2035;

  corral_source_split_2035:
    assume {:verifier.code 0} true;
    $M.20 := 9;
    call {:si_unique_call 406} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(9);
    goto corral_source_split_2036;

  corral_source_split_2036:
    assume {:verifier.code 0} true;
    goto $bb210;

  $bb101:
    assume $i67 == 1;
    goto corral_source_split_1843;

  corral_source_split_1843:
    assume {:verifier.code 0} true;
    $i146 := $M.20;
    goto corral_source_split_1844;

  corral_source_split_1844:
    assume {:verifier.code 0} true;
    $i147 := $eq.i32($i146, 1);
    goto corral_source_split_1845;

  corral_source_split_1845:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb200, $bb201;

  $bb201:
    assume !($i147 == 1);
    assume {:verifier.code 0} true;
    goto $bb205;

  $bb205:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb200:
    assume $i147 == 1;
    goto corral_source_split_2017;

  corral_source_split_2017:
    assume {:verifier.code 0} true;
    call {:si_unique_call 400} $i148 := ldv_prepare_2();
    goto corral_source_split_2018;

  corral_source_split_2018:
    assume {:verifier.code 0} true;
    $M.37 := $i148;
    call {:si_unique_call 401} {:cexpr "ldv_retval_9"} boogie_si_record_i32($i148);
    goto corral_source_split_2019;

  corral_source_split_2019:
    assume {:verifier.code 0} true;
    $i149 := $M.37;
    goto corral_source_split_2020;

  corral_source_split_2020:
    assume {:verifier.code 0} true;
    $i150 := $eq.i32($i149, 0);
    goto corral_source_split_2021;

  corral_source_split_2021:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb202, $bb203;

  $bb203:
    assume !($i150 == 1);
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb204:
    assume {:verifier.code 0} true;
    goto $bb205;

  $bb202:
    assume $i150 == 1;
    goto corral_source_split_2023;

  corral_source_split_2023:
    assume {:verifier.code 0} true;
    $M.20 := 2;
    call {:si_unique_call 402} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
    goto corral_source_split_2024;

  corral_source_split_2024:
    assume {:verifier.code 0} true;
    $i151 := $M.18;
    goto corral_source_split_2025;

  corral_source_split_2025:
    assume {:verifier.code 0} true;
    $i152 := $add.i32($i151, 1);
    goto corral_source_split_2026;

  corral_source_split_2026:
    assume {:verifier.code 0} true;
    $M.18 := $i152;
    call {:si_unique_call 403} {:cexpr "ref_cnt"} boogie_si_record_i32($i152);
    goto corral_source_split_2027;

  corral_source_split_2027:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb99:
    assume $i66 == 1;
    assume {:verifier.code 0} true;
    $i69 := $slt.i32($i58, 11);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb105, $bb106;

  $bb106:
    assume !($i69 == 1);
    goto corral_source_split_1859;

  corral_source_split_1859:
    assume {:verifier.code 0} true;
    $i141 := $M.20;
    goto corral_source_split_1860;

  corral_source_split_1860:
    assume {:verifier.code 0} true;
    $i142 := $eq.i32($i141, 4);
    goto corral_source_split_1861;

  corral_source_split_1861:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb194, $bb195;

  $bb195:
    assume !($i142 == 1);
    assume {:verifier.code 0} true;
    goto $bb199;

  $bb199:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb194:
    assume $i142 == 1;
    goto corral_source_split_2008;

  corral_source_split_2008:
    assume {:verifier.code 0} true;
    call {:si_unique_call 397} $i143 := ldv_freeze_noirq_2();
    goto corral_source_split_2009;

  corral_source_split_2009:
    assume {:verifier.code 0} true;
    $M.36 := $i143;
    call {:si_unique_call 398} {:cexpr "ldv_retval_10"} boogie_si_record_i32($i143);
    goto corral_source_split_2010;

  corral_source_split_2010:
    assume {:verifier.code 0} true;
    $i144 := $M.36;
    goto corral_source_split_2011;

  corral_source_split_2011:
    assume {:verifier.code 0} true;
    $i145 := $eq.i32($i144, 0);
    goto corral_source_split_2012;

  corral_source_split_2012:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb196, $bb197;

  $bb197:
    assume !($i145 == 1);
    assume {:verifier.code 0} true;
    goto $bb198;

  $bb198:
    assume {:verifier.code 0} true;
    goto $bb199;

  $bb196:
    assume $i145 == 1;
    goto corral_source_split_2014;

  corral_source_split_2014:
    assume {:verifier.code 0} true;
    $M.20 := 8;
    call {:si_unique_call 399} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(8);
    goto corral_source_split_2015;

  corral_source_split_2015:
    assume {:verifier.code 0} true;
    goto $bb198;

  $bb105:
    assume $i69 == 1;
    goto corral_source_split_1855;

  corral_source_split_1855:
    assume {:verifier.code 0} true;
    $i136 := $M.20;
    goto corral_source_split_1856;

  corral_source_split_1856:
    assume {:verifier.code 0} true;
    $i137 := $eq.i32($i136, 11);
    goto corral_source_split_1857;

  corral_source_split_1857:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb188, $bb189;

  $bb189:
    assume !($i137 == 1);
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb193:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb188:
    assume $i137 == 1;
    goto corral_source_split_1999;

  corral_source_split_1999:
    assume {:verifier.code 0} true;
    call {:si_unique_call 394} $i138 := ldv_resume_noirq_2();
    goto corral_source_split_2000;

  corral_source_split_2000:
    assume {:verifier.code 0} true;
    $M.35 := $i138;
    call {:si_unique_call 395} {:cexpr "ldv_retval_11"} boogie_si_record_i32($i138);
    goto corral_source_split_2001;

  corral_source_split_2001:
    assume {:verifier.code 0} true;
    $i139 := $M.35;
    goto corral_source_split_2002;

  corral_source_split_2002:
    assume {:verifier.code 0} true;
    $i140 := $eq.i32($i139, 0);
    goto corral_source_split_2003;

  corral_source_split_2003:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb190, $bb191;

  $bb191:
    assume !($i140 == 1);
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb192:
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb190:
    assume $i140 == 1;
    goto corral_source_split_2005;

  corral_source_split_2005:
    assume {:verifier.code 0} true;
    $M.20 := 14;
    call {:si_unique_call 396} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(14);
    goto corral_source_split_2006;

  corral_source_split_2006:
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb84:
    assume $i59 == 1;
    assume {:verifier.code 0} true;
    $i70 := $slt.i32($i58, 5);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb107, $bb108;

  $bb108:
    assume !($i70 == 1);
    assume {:verifier.code 0} true;
    $i71 := $slt.i32($i58, 7);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i71 == 1);
    assume {:verifier.code 0} true;
    $i72 := $slt.i32($i58, 8);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb111, $bb112;

  $bb112:
    assume !($i72 == 1);
    assume {:verifier.code 0} true;
    $i73 := $slt.i32($i58, 9);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113, $bb114;

  $bb114:
    assume !($i73 == 1);
    goto corral_source_split_1871;

  corral_source_split_1871:
    assume {:verifier.code 0} true;
    $i131 := $M.20;
    goto corral_source_split_1872;

  corral_source_split_1872:
    assume {:verifier.code 0} true;
    $i132 := $eq.i32($i131, 9);
    goto corral_source_split_1873;

  corral_source_split_1873:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb182, $bb183;

  $bb183:
    assume !($i132 == 1);
    assume {:verifier.code 0} true;
    goto $bb187;

  $bb187:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb182:
    assume $i132 == 1;
    goto corral_source_split_1990;

  corral_source_split_1990:
    assume {:verifier.code 0} true;
    call {:si_unique_call 391} $i133 := ldv_thaw_early_2();
    goto corral_source_split_1991;

  corral_source_split_1991:
    assume {:verifier.code 0} true;
    $M.34 := $i133;
    call {:si_unique_call 392} {:cexpr "ldv_retval_12"} boogie_si_record_i32($i133);
    goto corral_source_split_1992;

  corral_source_split_1992:
    assume {:verifier.code 0} true;
    $i134 := $M.34;
    goto corral_source_split_1993;

  corral_source_split_1993:
    assume {:verifier.code 0} true;
    $i135 := $eq.i32($i134, 0);
    goto corral_source_split_1994;

  corral_source_split_1994:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb184, $bb185;

  $bb185:
    assume !($i135 == 1);
    assume {:verifier.code 0} true;
    goto $bb186;

  $bb186:
    assume {:verifier.code 0} true;
    goto $bb187;

  $bb184:
    assume $i135 == 1;
    goto corral_source_split_1996;

  corral_source_split_1996:
    assume {:verifier.code 0} true;
    $M.20 := 13;
    call {:si_unique_call 393} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(13);
    goto corral_source_split_1997;

  corral_source_split_1997:
    assume {:verifier.code 0} true;
    goto $bb186;

  $bb113:
    assume $i73 == 1;
    goto corral_source_split_1867;

  corral_source_split_1867:
    assume {:verifier.code 0} true;
    $i126 := $M.20;
    goto corral_source_split_1868;

  corral_source_split_1868:
    assume {:verifier.code 0} true;
    $i127 := $eq.i32($i126, 10);
    goto corral_source_split_1869;

  corral_source_split_1869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb176, $bb177;

  $bb177:
    assume !($i127 == 1);
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb181:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb176:
    assume $i127 == 1;
    goto corral_source_split_1981;

  corral_source_split_1981:
    assume {:verifier.code 0} true;
    call {:si_unique_call 388} $i128 := ldv_resume_early_2();
    goto corral_source_split_1982;

  corral_source_split_1982:
    assume {:verifier.code 0} true;
    $M.33 := $i128;
    call {:si_unique_call 389} {:cexpr "ldv_retval_13"} boogie_si_record_i32($i128);
    goto corral_source_split_1983;

  corral_source_split_1983:
    assume {:verifier.code 0} true;
    $i129 := $M.33;
    goto corral_source_split_1984;

  corral_source_split_1984:
    assume {:verifier.code 0} true;
    $i130 := $eq.i32($i129, 0);
    goto corral_source_split_1985;

  corral_source_split_1985:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb178, $bb179;

  $bb179:
    assume !($i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb180;

  $bb180:
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb178:
    assume $i130 == 1;
    goto corral_source_split_1987;

  corral_source_split_1987:
    assume {:verifier.code 0} true;
    $M.20 := 14;
    call {:si_unique_call 390} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(14);
    goto corral_source_split_1988;

  corral_source_split_1988:
    assume {:verifier.code 0} true;
    goto $bb180;

  $bb111:
    assume $i72 == 1;
    goto corral_source_split_1863;

  corral_source_split_1863:
    assume {:verifier.code 0} true;
    $i121 := $M.20;
    goto corral_source_split_1864;

  corral_source_split_1864:
    assume {:verifier.code 0} true;
    $i122 := $eq.i32($i121, 7);
    goto corral_source_split_1865;

  corral_source_split_1865:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb170, $bb171;

  $bb171:
    assume !($i122 == 1);
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb170:
    assume $i122 == 1;
    goto corral_source_split_1972;

  corral_source_split_1972:
    assume {:verifier.code 0} true;
    call {:si_unique_call 385} $i123 := ldv_restore_early_2();
    goto corral_source_split_1973;

  corral_source_split_1973:
    assume {:verifier.code 0} true;
    $M.32 := $i123;
    call {:si_unique_call 386} {:cexpr "ldv_retval_14"} boogie_si_record_i32($i123);
    goto corral_source_split_1974;

  corral_source_split_1974:
    assume {:verifier.code 0} true;
    $i124 := $M.32;
    goto corral_source_split_1975;

  corral_source_split_1975:
    assume {:verifier.code 0} true;
    $i125 := $eq.i32($i124, 0);
    goto corral_source_split_1976;

  corral_source_split_1976:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb172, $bb173;

  $bb173:
    assume !($i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb172:
    assume $i125 == 1;
    goto corral_source_split_1978;

  corral_source_split_1978:
    assume {:verifier.code 0} true;
    $M.20 := 12;
    call {:si_unique_call 387} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(12);
    goto corral_source_split_1979;

  corral_source_split_1979:
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb109:
    assume $i71 == 1;
    assume {:verifier.code 0} true;
    $i74 := $slt.i32($i58, 6);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb115, $bb116;

  $bb116:
    assume !($i74 == 1);
    goto corral_source_split_1879;

  corral_source_split_1879:
    assume {:verifier.code 0} true;
    $i116 := $M.20;
    goto corral_source_split_1880;

  corral_source_split_1880:
    assume {:verifier.code 0} true;
    $i117 := $eq.i32($i116, 5);
    goto corral_source_split_1881;

  corral_source_split_1881:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb164, $bb165;

  $bb165:
    assume !($i117 == 1);
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb169:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb164:
    assume $i117 == 1;
    goto corral_source_split_1963;

  corral_source_split_1963:
    assume {:verifier.code 0} true;
    call {:si_unique_call 382} $i118 := ldv_suspend_late_2();
    goto corral_source_split_1964;

  corral_source_split_1964:
    assume {:verifier.code 0} true;
    $M.31 := $i118;
    call {:si_unique_call 383} {:cexpr "ldv_retval_15"} boogie_si_record_i32($i118);
    goto corral_source_split_1965;

  corral_source_split_1965:
    assume {:verifier.code 0} true;
    $i119 := $M.31;
    goto corral_source_split_1966;

  corral_source_split_1966:
    assume {:verifier.code 0} true;
    $i120 := $eq.i32($i119, 0);
    goto corral_source_split_1967;

  corral_source_split_1967:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb166, $bb167;

  $bb167:
    assume !($i120 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb166:
    assume $i120 == 1;
    goto corral_source_split_1969;

  corral_source_split_1969:
    assume {:verifier.code 0} true;
    $M.20 := 10;
    call {:si_unique_call 384} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(10);
    goto corral_source_split_1970;

  corral_source_split_1970:
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb115:
    assume $i74 == 1;
    goto corral_source_split_1875;

  corral_source_split_1875:
    assume {:verifier.code 0} true;
    $i110 := $M.20;
    goto corral_source_split_1876;

  corral_source_split_1876:
    assume {:verifier.code 0} true;
    $i111 := $eq.i32($i110, 14);
    goto corral_source_split_1877;

  corral_source_split_1877:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb158, $bb159;

  $bb159:
    assume !($i111 == 1);
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb163:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb158:
    assume $i111 == 1;
    goto corral_source_split_1953;

  corral_source_split_1953:
    assume {:verifier.code 0} true;
    $p112 := $M.15;
    goto corral_source_split_1954;

  corral_source_split_1954:
    assume {:verifier.code 0} true;
    call {:si_unique_call 379} $i113 := abituguru3_resume($p112);
    goto SeqInstr_58, SeqInstr_59;

  SeqInstr_59:
    assume assertsPassed;
    goto SeqInstr_60;

  SeqInstr_60:
    goto corral_source_split_1955;

  corral_source_split_1955:
    assume {:verifier.code 0} true;
    $M.30 := $i113;
    call {:si_unique_call 380} {:cexpr "ldv_retval_16"} boogie_si_record_i32($i113);
    goto corral_source_split_1956;

  corral_source_split_1956:
    assume {:verifier.code 0} true;
    $i114 := $M.30;
    goto corral_source_split_1957;

  corral_source_split_1957:
    assume {:verifier.code 0} true;
    $i115 := $eq.i32($i114, 0);
    goto corral_source_split_1958;

  corral_source_split_1958:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb160, $bb161;

  $bb161:
    assume !($i115 == 1);
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb160:
    assume $i115 == 1;
    goto corral_source_split_1960;

  corral_source_split_1960:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 381} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1961;

  corral_source_split_1961:
    assume {:verifier.code 0} true;
    goto $bb162;

  SeqInstr_58:
    assume !assertsPassed;
    return;

  $bb107:
    assume $i70 == 1;
    assume {:verifier.code 0} true;
    $i75 := $slt.i32($i58, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb117, $bb118;

  $bb118:
    assume !($i75 == 1);
    assume {:verifier.code 0} true;
    $i76 := $slt.i32($i58, 3);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb119, $bb120;

  $bb120:
    assume !($i76 == 1);
    assume {:verifier.code 0} true;
    $i77 := $slt.i32($i58, 4);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb121, $bb122;

  $bb122:
    assume !($i77 == 1);
    goto corral_source_split_1891;

  corral_source_split_1891:
    assume {:verifier.code 0} true;
    $i104 := $M.20;
    goto corral_source_split_1892;

  corral_source_split_1892:
    assume {:verifier.code 0} true;
    $i105 := $eq.i32($i104, 2);
    goto corral_source_split_1893;

  corral_source_split_1893:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb152, $bb153;

  $bb153:
    assume !($i105 == 1);
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb157:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb152:
    assume $i105 == 1;
    goto corral_source_split_1943;

  corral_source_split_1943:
    assume {:verifier.code 0} true;
    $p106 := $M.15;
    goto corral_source_split_1944;

  corral_source_split_1944:
    assume {:verifier.code 0} true;
    call {:si_unique_call 376} $i107 := abituguru3_suspend($p106);
    goto SeqInstr_55, SeqInstr_56;

  SeqInstr_56:
    assume assertsPassed;
    goto SeqInstr_57;

  SeqInstr_57:
    goto corral_source_split_1945;

  corral_source_split_1945:
    assume {:verifier.code 0} true;
    $M.29 := $i107;
    call {:si_unique_call 377} {:cexpr "ldv_retval_17"} boogie_si_record_i32($i107);
    goto corral_source_split_1946;

  corral_source_split_1946:
    assume {:verifier.code 0} true;
    $i108 := $M.29;
    goto corral_source_split_1947;

  corral_source_split_1947:
    assume {:verifier.code 0} true;
    $i109 := $eq.i32($i108, 0);
    goto corral_source_split_1948;

  corral_source_split_1948:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  $bb155:
    assume !($i109 == 1);
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb154:
    assume $i109 == 1;
    goto corral_source_split_1950;

  corral_source_split_1950:
    assume {:verifier.code 0} true;
    $M.20 := 5;
    call {:si_unique_call 378} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(5);
    goto corral_source_split_1951;

  corral_source_split_1951:
    assume {:verifier.code 0} true;
    goto $bb156;

  SeqInstr_55:
    assume !assertsPassed;
    return;

  $bb121:
    assume $i77 == 1;
    goto corral_source_split_1887;

  corral_source_split_1887:
    assume {:verifier.code 0} true;
    $i98 := $M.20;
    goto corral_source_split_1888;

  corral_source_split_1888:
    assume {:verifier.code 0} true;
    $i99 := $eq.i32($i98, 2);
    goto corral_source_split_1889;

  corral_source_split_1889:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  $bb147:
    assume !($i99 == 1);
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb151:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb146:
    assume $i99 == 1;
    goto corral_source_split_1933;

  corral_source_split_1933:
    assume {:verifier.code 0} true;
    $p100 := $M.15;
    goto corral_source_split_1934;

  corral_source_split_1934:
    assume {:verifier.code 0} true;
    call {:si_unique_call 373} $i101 := abituguru3_suspend($p100);
    goto SeqInstr_52, SeqInstr_53;

  SeqInstr_53:
    assume assertsPassed;
    goto SeqInstr_54;

  SeqInstr_54:
    goto corral_source_split_1935;

  corral_source_split_1935:
    assume {:verifier.code 0} true;
    $M.28 := $i101;
    call {:si_unique_call 374} {:cexpr "ldv_retval_18"} boogie_si_record_i32($i101);
    goto corral_source_split_1936;

  corral_source_split_1936:
    assume {:verifier.code 0} true;
    $i102 := $M.28;
    goto corral_source_split_1937;

  corral_source_split_1937:
    assume {:verifier.code 0} true;
    $i103 := $eq.i32($i102, 0);
    goto corral_source_split_1938;

  corral_source_split_1938:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb148, $bb149;

  $bb149:
    assume !($i103 == 1);
    assume {:verifier.code 0} true;
    goto $bb150;

  $bb150:
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb148:
    assume $i103 == 1;
    goto corral_source_split_1940;

  corral_source_split_1940:
    assume {:verifier.code 0} true;
    $M.20 := 4;
    call {:si_unique_call 375} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(4);
    goto corral_source_split_1941;

  corral_source_split_1941:
    assume {:verifier.code 0} true;
    goto $bb150;

  SeqInstr_52:
    assume !assertsPassed;
    return;

  $bb119:
    assume $i76 == 1;
    goto corral_source_split_1883;

  corral_source_split_1883:
    assume {:verifier.code 0} true;
    $i92 := $M.20;
    goto corral_source_split_1884;

  corral_source_split_1884:
    assume {:verifier.code 0} true;
    $i93 := $eq.i32($i92, 2);
    goto corral_source_split_1885;

  corral_source_split_1885:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb140, $bb141;

  $bb141:
    assume !($i93 == 1);
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb140:
    assume $i93 == 1;
    goto corral_source_split_1923;

  corral_source_split_1923:
    assume {:verifier.code 0} true;
    $p94 := $M.15;
    goto corral_source_split_1924;

  corral_source_split_1924:
    assume {:verifier.code 0} true;
    call {:si_unique_call 370} $i95 := abituguru3_suspend($p94);
    goto SeqInstr_49, SeqInstr_50;

  SeqInstr_50:
    assume assertsPassed;
    goto SeqInstr_51;

  SeqInstr_51:
    goto corral_source_split_1925;

  corral_source_split_1925:
    assume {:verifier.code 0} true;
    $M.27 := $i95;
    call {:si_unique_call 371} {:cexpr "ldv_retval_19"} boogie_si_record_i32($i95);
    goto corral_source_split_1926;

  corral_source_split_1926:
    assume {:verifier.code 0} true;
    $i96 := $M.27;
    goto corral_source_split_1927;

  corral_source_split_1927:
    assume {:verifier.code 0} true;
    $i97 := $eq.i32($i96, 0);
    goto corral_source_split_1928;

  corral_source_split_1928:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb142, $bb143;

  $bb143:
    assume !($i97 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb142:
    assume $i97 == 1;
    goto corral_source_split_1930;

  corral_source_split_1930:
    assume {:verifier.code 0} true;
    $M.20 := 3;
    call {:si_unique_call 372} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(3);
    goto corral_source_split_1931;

  corral_source_split_1931:
    assume {:verifier.code 0} true;
    goto $bb144;

  SeqInstr_49:
    assume !assertsPassed;
    return;

  $bb117:
    assume $i75 == 1;
    assume {:verifier.code 0} true;
    $i78 := $slt.i32($i58, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb123, $bb124;

  $bb124:
    assume !($i78 == 1);
    goto corral_source_split_1895;

  corral_source_split_1895:
    assume {:verifier.code 0} true;
    $i86 := $M.20;
    goto corral_source_split_1896;

  corral_source_split_1896:
    assume {:verifier.code 0} true;
    $i87 := $eq.i32($i86, 13);
    goto corral_source_split_1897;

  corral_source_split_1897:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb134, $bb135;

  $bb135:
    assume !($i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb134:
    assume $i87 == 1;
    goto corral_source_split_1913;

  corral_source_split_1913:
    assume {:verifier.code 0} true;
    $p88 := $M.15;
    goto corral_source_split_1914;

  corral_source_split_1914:
    assume {:verifier.code 0} true;
    call {:si_unique_call 367} $i89 := abituguru3_resume($p88);
    goto SeqInstr_46, SeqInstr_47;

  SeqInstr_47:
    assume assertsPassed;
    goto SeqInstr_48;

  SeqInstr_48:
    goto corral_source_split_1915;

  corral_source_split_1915:
    assume {:verifier.code 0} true;
    $M.26 := $i89;
    call {:si_unique_call 368} {:cexpr "ldv_retval_20"} boogie_si_record_i32($i89);
    goto corral_source_split_1916;

  corral_source_split_1916:
    assume {:verifier.code 0} true;
    $i90 := $M.26;
    goto corral_source_split_1917;

  corral_source_split_1917:
    assume {:verifier.code 0} true;
    $i91 := $eq.i32($i90, 0);
    goto corral_source_split_1918;

  corral_source_split_1918:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb136, $bb137;

  $bb137:
    assume !($i91 == 1);
    assume {:verifier.code 0} true;
    goto $bb138;

  $bb138:
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb136:
    assume $i91 == 1;
    goto corral_source_split_1920;

  corral_source_split_1920:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 369} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1921;

  corral_source_split_1921:
    assume {:verifier.code 0} true;
    goto $bb138;

  SeqInstr_46:
    assume !assertsPassed;
    return;

  $bb123:
    assume $i78 == 1;
    assume {:verifier.code 0} true;
    $i79 := $eq.i32($i58, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb125, $bb126;

  $bb126:
    assume {:verifier.code 0} true;
    assume !($i79 == 1);
    goto $bb96;

  $bb125:
    assume $i79 == 1;
    goto corral_source_split_1899;

  corral_source_split_1899:
    assume {:verifier.code 0} true;
    $i80 := $M.20;
    goto corral_source_split_1900;

  corral_source_split_1900:
    assume {:verifier.code 0} true;
    $i81 := $eq.i32($i80, 12);
    goto corral_source_split_1901;

  corral_source_split_1901:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb127, $bb128;

  $bb128:
    assume !($i81 == 1);
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb132:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb127:
    assume $i81 == 1;
    goto corral_source_split_1903;

  corral_source_split_1903:
    assume {:verifier.code 0} true;
    $p82 := $M.15;
    goto corral_source_split_1904;

  corral_source_split_1904:
    assume {:verifier.code 0} true;
    call {:si_unique_call 364} $i83 := abituguru3_resume($p82);
    goto SeqInstr_43, SeqInstr_44;

  SeqInstr_44:
    assume assertsPassed;
    goto SeqInstr_45;

  SeqInstr_45:
    goto corral_source_split_1905;

  corral_source_split_1905:
    assume {:verifier.code 0} true;
    $M.25 := $i83;
    call {:si_unique_call 365} {:cexpr "ldv_retval_21"} boogie_si_record_i32($i83);
    goto corral_source_split_1906;

  corral_source_split_1906:
    assume {:verifier.code 0} true;
    $i84 := $M.25;
    goto corral_source_split_1907;

  corral_source_split_1907:
    assume {:verifier.code 0} true;
    $i85 := $eq.i32($i84, 0);
    goto corral_source_split_1908;

  corral_source_split_1908:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb129, $bb130;

  $bb130:
    assume !($i85 == 1);
    assume {:verifier.code 0} true;
    goto $bb131;

  $bb131:
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb129:
    assume $i85 == 1;
    goto corral_source_split_1910;

  corral_source_split_1910:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 366} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1911;

  corral_source_split_1911:
    assume {:verifier.code 0} true;
    goto $bb131;

  SeqInstr_43:
    assume !assertsPassed;
    return;

  $bb5:
    assume $i2 == 1;
    goto corral_source_split_1705;

  corral_source_split_1705:
    assume {:verifier.code 0} true;
    $i39 := $M.19;
    goto corral_source_split_1706;

  corral_source_split_1706:
    assume {:verifier.code 0} true;
    $i40 := $ne.i32($i39, 0);
    goto corral_source_split_1707;

  corral_source_split_1707:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i40 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb51:
    assume $i40 == 1;
    goto corral_source_split_1782;

  corral_source_split_1782:
    assume {:verifier.code 1} true;
    call {:si_unique_call 348} $i41 := __VERIFIER_nondet_int();
    call {:si_unique_call 349} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i41);
    call {:si_unique_call 350} {:cexpr "tmp___1"} boogie_si_record_i32($i41);
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $i42 := $slt.i32($i41, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i42 == 1);
    assume {:verifier.code 0} true;
    $i43 := $eq.i32($i41, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb56, $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    assume !($i43 == 1);
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    call {:si_unique_call 360} ldv_stop();
    goto corral_source_split_1819;

  corral_source_split_1819:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb56:
    assume $i43 == 1;
    goto corral_source_split_1784;

  corral_source_split_1784:
    assume {:verifier.code 0} true;
    $i49 := $M.19;
    goto corral_source_split_1785;

  corral_source_split_1785:
    assume {:verifier.code 0} true;
    $i50 := $eq.i32($i49, 1);
    goto corral_source_split_1786;

  corral_source_split_1786:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb69, $bb70;

  $bb70:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb69:
    assume $i50 == 1;
    goto corral_source_split_1802;

  corral_source_split_1802:
    assume {:verifier.code 0} true;
    call {:si_unique_call 354} $i51 := abituguru3_init();
    goto corral_source_split_1803;

  corral_source_split_1803:
    assume {:verifier.code 0} true;
    $M.24 := $i51;
    call {:si_unique_call 355} {:cexpr "ldv_retval_2"} boogie_si_record_i32($i51);
    goto corral_source_split_1804;

  corral_source_split_1804:
    assume {:verifier.code 0} true;
    $i52 := $M.24;
    goto corral_source_split_1805;

  corral_source_split_1805:
    assume {:verifier.code 0} true;
    $i53 := $ne.i32($i52, 0);
    goto corral_source_split_1806;

  corral_source_split_1806:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb71, $bb72;

  $bb72:
    assume !($i53 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    $i54 := $M.24;
    goto corral_source_split_1811;

  corral_source_split_1811:
    assume {:verifier.code 0} true;
    $i55 := $eq.i32($i54, 0);
    goto corral_source_split_1812;

  corral_source_split_1812:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb74, $bb75;

  $bb75:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb74:
    assume $i55 == 1;
    goto corral_source_split_1814;

  corral_source_split_1814:
    assume {:verifier.code 0} true;
    $M.19 := 2;
    call {:si_unique_call 357} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
    goto corral_source_split_1815;

  corral_source_split_1815:
    assume {:verifier.code 0} true;
    $M.20 := 1;
    call {:si_unique_call 358} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
    goto corral_source_split_1816;

  corral_source_split_1816:
    assume {:verifier.code 0} true;
    call {:si_unique_call 359} ldv_dev_pm_ops_2();
    goto corral_source_split_1817;

  corral_source_split_1817:
    assume {:verifier.code 0} true;
    goto $bb76;

  $bb71:
    assume $i53 == 1;
    goto corral_source_split_1808;

  corral_source_split_1808:
    assume {:verifier.code 0} true;
    $M.19 := 3;
    call {:si_unique_call 356} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
    goto corral_source_split_1809;

  corral_source_split_1809:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    call {:si_unique_call 353} ldv_check_final_state();
    goto SeqInstr_40, SeqInstr_41;

  SeqInstr_41:
    assume assertsPassed;
    goto SeqInstr_42;

  SeqInstr_42:
    goto corral_source_split_1800;

  corral_source_split_1800:
    assume {:verifier.code 0} true;
    $r := 0;
    return;

  SeqInstr_40:
    assume !assertsPassed;
    return;

  $bb54:
    assume $i42 == 1;
    assume {:verifier.code 0} true;
    $i44 := $eq.i32($i41, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb59, $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    assume !($i44 == 1);
    goto $bb58;

  $bb59:
    assume $i44 == 1;
    goto corral_source_split_1788;

  corral_source_split_1788:
    assume {:verifier.code 0} true;
    $i45 := $M.19;
    goto corral_source_split_1789;

  corral_source_split_1789:
    assume {:verifier.code 0} true;
    $i46 := $eq.i32($i45, 2);
    goto corral_source_split_1790;

  corral_source_split_1790:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61, $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    assume !($i46 == 1);
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb61:
    assume $i46 == 1;
    goto corral_source_split_1792;

  corral_source_split_1792:
    assume {:verifier.code 0} true;
    $i47 := $M.18;
    goto corral_source_split_1793;

  corral_source_split_1793:
    assume {:verifier.code 0} true;
    $i48 := $eq.i32($i47, 0);
    goto corral_source_split_1794;

  corral_source_split_1794:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb64, $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    assume !($i48 == 1);
    goto $bb63;

  $bb64:
    assume $i48 == 1;
    goto corral_source_split_1796;

  corral_source_split_1796:
    assume {:verifier.code 0} true;
    call {:si_unique_call 351} abituguru3_exit();
    goto corral_source_split_1797;

  corral_source_split_1797:
    assume {:verifier.code 0} true;
    $M.19 := 3;
    call {:si_unique_call 352} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
    goto corral_source_split_1798;

  corral_source_split_1798:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb3:
    assume $i1 == 1;
    assume {:verifier.code 0} true;
    $i4 := $eq.i32($i0, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    assume !($i4 == 1);
    goto $bb9;

  $bb10:
    assume $i4 == 1;
    goto corral_source_split_1713;

  corral_source_split_1713:
    assume {:verifier.code 0} true;
    $i5 := $M.17;
    goto corral_source_split_1714;

  corral_source_split_1714:
    assume {:verifier.code 0} true;
    $i6 := $ne.i32($i5, 0);
    goto corral_source_split_1715;

  corral_source_split_1715:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i6 == 1);
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb12:
    assume $i6 == 1;
    goto corral_source_split_1717;

  corral_source_split_1717:
    assume {:verifier.code 1} true;
    call {:si_unique_call 329} $i7 := __VERIFIER_nondet_int();
    call {:si_unique_call 330} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i7);
    call {:si_unique_call 331} {:cexpr "tmp___0"} boogie_si_record_i32($i7);
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i8 := $slt.i32($i7, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $eq.i32($i7, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume !($i9 == 1);
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    call {:si_unique_call 347} ldv_stop();
    goto corral_source_split_1780;

  corral_source_split_1780:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb17:
    assume $i9 == 1;
    goto corral_source_split_1719;

  corral_source_split_1719:
    assume {:verifier.code 0} true;
    $i19 := $M.17;
    goto corral_source_split_1720;

  corral_source_split_1720:
    assume {:verifier.code 0} true;
    $i20 := $eq.i32($i19, 1);
    goto corral_source_split_1721;

  corral_source_split_1721:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb29, $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    assume !($i20 == 1);
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i29 := $M.17;
    goto corral_source_split_1759;

  corral_source_split_1759:
    assume {:verifier.code 0} true;
    $i30 := $eq.i32($i29, 2);
    goto corral_source_split_1760;

  corral_source_split_1760:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    assume !($i30 == 1);
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb38:
    assume $i30 == 1;
    goto corral_source_split_1762;

  corral_source_split_1762:
    assume {:verifier.code 0} true;
    $i31 := $M.22;
    goto corral_source_split_1763;

  corral_source_split_1763:
    assume {:verifier.code 0} true;
    $i32 := $eq.i32($i31, 1);
    goto corral_source_split_1764;

  corral_source_split_1764:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    assume !($i32 == 1);
    goto $bb40;

  $bb41:
    assume $i32 == 1;
    goto corral_source_split_1766;

  corral_source_split_1766:
    assume {:verifier.code 0} true;
    $p33 := $M.16;
    goto corral_source_split_1767;

  corral_source_split_1767:
    assume {:verifier.code 0} true;
    call {:si_unique_call 342} $i34 := abituguru3_remove($p33);
    goto corral_source_split_1768;

  corral_source_split_1768:
    assume {:verifier.code 0} true;
    $M.23 := $i34;
    call {:si_unique_call 343} {:cexpr "ldv_retval_0"} boogie_si_record_i32($i34);
    goto corral_source_split_1769;

  corral_source_split_1769:
    assume {:verifier.code 0} true;
    $i35 := $M.23;
    goto corral_source_split_1770;

  corral_source_split_1770:
    assume {:verifier.code 0} true;
    $i36 := $eq.i32($i35, 0);
    goto corral_source_split_1771;

  corral_source_split_1771:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb43:
    assume $i36 == 1;
    goto corral_source_split_1773;

  corral_source_split_1773:
    assume {:verifier.code 0} true;
    $M.17 := 1;
    call {:si_unique_call 344} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_1774;

  corral_source_split_1774:
    assume {:verifier.code 0} true;
    $i37 := $M.18;
    goto corral_source_split_1775;

  corral_source_split_1775:
    assume {:verifier.code 0} true;
    $i38 := $sub.i32($i37, 1);
    goto corral_source_split_1776;

  corral_source_split_1776:
    assume {:verifier.code 0} true;
    $M.18 := $i38;
    call {:si_unique_call 345} {:cexpr "ref_cnt"} boogie_si_record_i32($i38);
    goto corral_source_split_1777;

  corral_source_split_1777:
    assume {:verifier.code 0} true;
    $M.22 := 0;
    call {:si_unique_call 346} {:cexpr "probed_1"} boogie_si_record_i32(0);
    goto corral_source_split_1778;

  corral_source_split_1778:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb29:
    assume $i20 == 1;
    goto corral_source_split_1741;

  corral_source_split_1741:
    assume {:verifier.code 0} true;
    $i21 := $M.22;
    goto corral_source_split_1742;

  corral_source_split_1742:
    assume {:verifier.code 0} true;
    $i22 := $eq.i32($i21, 1);
    goto corral_source_split_1743;

  corral_source_split_1743:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume !($i22 == 1);
    goto $bb31;

  $bb32:
    assume $i22 == 1;
    goto corral_source_split_1745;

  corral_source_split_1745:
    assume {:verifier.code 0} true;
    $p23 := $M.16;
    goto corral_source_split_1746;

  corral_source_split_1746:
    assume {:verifier.code 0} true;
    call {:si_unique_call 337} $i24 := abituguru3_remove($p23);
    goto corral_source_split_1747;

  corral_source_split_1747:
    assume {:verifier.code 0} true;
    $M.23 := $i24;
    call {:si_unique_call 338} {:cexpr "ldv_retval_0"} boogie_si_record_i32($i24);
    goto corral_source_split_1748;

  corral_source_split_1748:
    assume {:verifier.code 0} true;
    $i25 := $M.23;
    goto corral_source_split_1749;

  corral_source_split_1749:
    assume {:verifier.code 0} true;
    $i26 := $eq.i32($i25, 0);
    goto corral_source_split_1750;

  corral_source_split_1750:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb34:
    assume $i26 == 1;
    goto corral_source_split_1752;

  corral_source_split_1752:
    assume {:verifier.code 0} true;
    $M.17 := 1;
    call {:si_unique_call 339} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_1753;

  corral_source_split_1753:
    assume {:verifier.code 0} true;
    $i27 := $M.18;
    goto corral_source_split_1754;

  corral_source_split_1754:
    assume {:verifier.code 0} true;
    $i28 := $sub.i32($i27, 1);
    goto corral_source_split_1755;

  corral_source_split_1755:
    assume {:verifier.code 0} true;
    $M.18 := $i28;
    call {:si_unique_call 340} {:cexpr "ref_cnt"} boogie_si_record_i32($i28);
    goto corral_source_split_1756;

  corral_source_split_1756:
    assume {:verifier.code 0} true;
    $M.22 := 0;
    call {:si_unique_call 341} {:cexpr "probed_1"} boogie_si_record_i32(0);
    goto corral_source_split_1757;

  corral_source_split_1757:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb15:
    assume $i8 == 1;
    assume {:verifier.code 0} true;
    $i10 := $eq.i32($i7, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    assume !($i10 == 1);
    goto $bb19;

  $bb20:
    assume $i10 == 1;
    goto corral_source_split_1723;

  corral_source_split_1723:
    assume {:verifier.code 0} true;
    $i11 := $M.17;
    goto corral_source_split_1724;

  corral_source_split_1724:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i11, 1);
    goto corral_source_split_1725;

  corral_source_split_1725:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb22:
    assume $i12 == 1;
    goto corral_source_split_1727;

  corral_source_split_1727:
    assume {:verifier.code 0} true;
    $p13 := $M.16;
    goto corral_source_split_1728;

  corral_source_split_1728:
    assume {:verifier.code 0} true;
    call {:si_unique_call 332} $i14 := abituguru3_probe($p13);
    goto SeqInstr_37, SeqInstr_38;

  SeqInstr_38:
    assume assertsPassed;
    goto SeqInstr_39;

  SeqInstr_39:
    goto corral_source_split_1729;

  corral_source_split_1729:
    assume {:verifier.code 0} true;
    $M.21 := $i14;
    call {:si_unique_call 333} {:cexpr "ldv_retval_1"} boogie_si_record_i32($i14);
    goto corral_source_split_1730;

  corral_source_split_1730:
    assume {:verifier.code 0} true;
    $i15 := $M.21;
    goto corral_source_split_1731;

  corral_source_split_1731:
    assume {:verifier.code 0} true;
    $i16 := $eq.i32($i15, 0);
    goto corral_source_split_1732;

  corral_source_split_1732:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb24:
    assume $i16 == 1;
    goto corral_source_split_1734;

  corral_source_split_1734:
    assume {:verifier.code 0} true;
    $M.17 := 2;
    call {:si_unique_call 334} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_1735;

  corral_source_split_1735:
    assume {:verifier.code 0} true;
    $i17 := $M.18;
    goto corral_source_split_1736;

  corral_source_split_1736:
    assume {:verifier.code 0} true;
    $i18 := $add.i32($i17, 1);
    goto corral_source_split_1737;

  corral_source_split_1737:
    assume {:verifier.code 0} true;
    $M.18 := $i18;
    call {:si_unique_call 335} {:cexpr "ref_cnt"} boogie_si_record_i32($i18);
    goto corral_source_split_1738;

  corral_source_split_1738:
    assume {:verifier.code 0} true;
    $M.22 := 1;
    call {:si_unique_call 336} {:cexpr "probed_1"} boogie_si_record_i32(1);
    goto corral_source_split_1739;

  corral_source_split_1739:
    assume {:verifier.code 0} true;
    goto $bb26;

  SeqInstr_37:
    assume !assertsPassed;
    return;

  $bb50_dummy:
    assume false;
    return;

  $bb1_last:
    assume {:verifier.code 1} true;
    call {:si_unique_call 326} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 327} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    call {:si_unique_call 328} {:cexpr "tmp"} boogie_si_record_i32($i0);
    assume {:verifier.code 0} true;
    goto $bb2;
}



const ldv_initialize: ref;

axiom ldv_initialize == $sub.ref(0, 279619);

procedure ldv_initialize();
  free requires assertsPassed;



implementation ldv_initialize()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2094;

  corral_source_split_2094:
    assume {:verifier.code 0} true;
    return;
}



const ldv_stop: ref;

axiom ldv_stop == $sub.ref(0, 280651);

procedure ldv_stop();
  free requires assertsPassed;



implementation ldv_stop()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2096;

  corral_source_split_2096:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call ldv_stop_loop_$bb1();
    goto $bb1_last;

  $bb1_dummy:
    assume false;
    return;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto $bb1_dummy;
}



const abituguru3_exit: ref;

axiom abituguru3_exit == $sub.ref(0, 281683);

procedure abituguru3_exit();
  free requires assertsPassed;
  modifies $M.17;



implementation abituguru3_exit()
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2098;

  corral_source_split_2098:
    assume {:verifier.code 0} true;
    $p0 := $M.44;
    goto corral_source_split_2099;

  corral_source_split_2099:
    assume {:verifier.code 0} true;
    call {:si_unique_call 427} platform_device_unregister($p0);
    goto corral_source_split_2100;

  corral_source_split_2100:
    assume {:verifier.code 0} true;
    call {:si_unique_call 428} ldv_platform_driver_unregister_16(abituguru3_driver);
    goto corral_source_split_2101;

  corral_source_split_2101:
    assume {:verifier.code 0} true;
    return;
}



const abituguru3_init: ref;

axiom abituguru3_init == $sub.ref(0, 282715);

procedure abituguru3_init() returns ($r: i32);
  free requires assertsPassed;
  modifies $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.44, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.17, $M.16, $CurrAddr, $M.1;



implementation abituguru3_init() returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i15: i32;
  var $i16: i1;
  var $p18: ref;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $i31: i32;
  var $p36: ref;
  var $i23: i32;
  var $i17: i32;
  var $i10: i32;
  var vslice_dummy_var_10: i32;
  var vslice_dummy_var_11: i32;
  var vslice_dummy_var_12: i32;
  var vslice_dummy_var_13: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 429} $p0 := $alloc($mul.ref(56, $zext.i32.i64(1)));
    goto corral_source_split_2103;

  corral_source_split_2103:
    assume {:verifier.code 0} true;
    $p1 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(0, 1));
    goto corral_source_split_2104;

  corral_source_split_2104:
    assume {:verifier.code 0} true;
    $M.45 := $store.i64($M.45, $p1, 0);
    goto corral_source_split_2105;

  corral_source_split_2105:
    assume {:verifier.code 0} true;
    $p2 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(8, 1));
    goto corral_source_split_2106;

  corral_source_split_2106:
    assume {:verifier.code 0} true;
    $M.46 := $store.i64($M.46, $p2, 0);
    goto corral_source_split_2107;

  corral_source_split_2107:
    assume {:verifier.code 0} true;
    $p3 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(16, 1));
    goto corral_source_split_2108;

  corral_source_split_2108:
    assume {:verifier.code 0} true;
    $M.47 := $store.ref($M.47, $p3, $0.ref);
    goto corral_source_split_2109;

  corral_source_split_2109:
    assume {:verifier.code 0} true;
    $p4 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(24, 1));
    goto corral_source_split_2110;

  corral_source_split_2110:
    assume {:verifier.code 0} true;
    $M.48 := $store.i64($M.48, $p4, 256);
    goto corral_source_split_2111;

  corral_source_split_2111:
    assume {:verifier.code 0} true;
    $p5 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(32, 1));
    goto corral_source_split_2112;

  corral_source_split_2112:
    assume {:verifier.code 0} true;
    $M.49 := $store.ref($M.49, $p5, $0.ref);
    goto corral_source_split_2113;

  corral_source_split_2113:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(40, 1));
    goto corral_source_split_2114;

  corral_source_split_2114:
    assume {:verifier.code 0} true;
    $M.50 := $store.ref($M.50, $p6, $0.ref);
    goto corral_source_split_2115;

  corral_source_split_2115:
    assume {:verifier.code 0} true;
    $p7 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(48, 1));
    goto corral_source_split_2116;

  corral_source_split_2116:
    assume {:verifier.code 0} true;
    $M.51 := $store.ref($M.51, $p7, $0.ref);
    goto corral_source_split_2117;

  corral_source_split_2117:
    assume {:verifier.code 0} true;
    call {:si_unique_call 430} $i8 := abituguru3_dmi_detect();
    call {:si_unique_call 431} {:cexpr "err"} boogie_si_record_i32($i8);
    goto corral_source_split_2118;

  corral_source_split_2118:
    assume {:verifier.code 0} true;
    $i9 := $slt.i32($i8, 0);
    goto corral_source_split_2119;

  corral_source_split_2119:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i11 := $sgt.i32($i8, 0);
    goto corral_source_split_2125;

  corral_source_split_2125:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    call {:si_unique_call 435} $i15 := ldv___platform_driver_register_14(abituguru3_driver, __this_module);
    call {:si_unique_call 436} {:cexpr "err"} boogie_si_record_i32($i15);
    goto corral_source_split_2135;

  corral_source_split_2135:
    assume {:verifier.code 0} true;
    $i16 := $ne.i32($i15, 0);
    goto corral_source_split_2136;

  corral_source_split_2136:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    call {:si_unique_call 437} $p18 := platform_device_alloc(.str.5, 224);
    goto corral_source_split_2142;

  corral_source_split_2142:
    assume {:verifier.code 0} true;
    $M.44 := $p18;
    goto corral_source_split_2143;

  corral_source_split_2143:
    assume {:verifier.code 0} true;
    $p19 := $M.44;
    goto corral_source_split_2144;

  corral_source_split_2144:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p19);
    goto corral_source_split_2145;

  corral_source_split_2145:
    assume {:verifier.code 0} true;
    $i21 := $eq.i64($i20, 0);
    goto corral_source_split_2146;

  corral_source_split_2146:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i21 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $p24 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(0, 1));
    goto corral_source_split_2154;

  corral_source_split_2154:
    assume {:verifier.code 0} true;
    $M.45 := $store.i64($M.45, $p24, 224);
    goto corral_source_split_2155;

  corral_source_split_2155:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(8, 1));
    goto corral_source_split_2156;

  corral_source_split_2156:
    assume {:verifier.code 0} true;
    $M.46 := $store.i64($M.46, $p25, 228);
    goto corral_source_split_2157;

  corral_source_split_2157:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($add.ref($p0, $mul.ref(0, 56)), $mul.ref(16, 1));
    goto corral_source_split_2158;

  corral_source_split_2158:
    assume {:verifier.code 0} true;
    $M.47 := $store.ref($M.47, $p26, .str.5);
    goto corral_source_split_2159;

  corral_source_split_2159:
    assume {:verifier.code 0} true;
    $p27 := $M.44;
    goto corral_source_split_2160;

  corral_source_split_2160:
    assume {:verifier.code 0} true;
    call {:si_unique_call 440} $i28 := platform_device_add_resources($p27, $p0, 1);
    call {:si_unique_call 441} {:cexpr "err"} boogie_si_record_i32($i28);
    goto corral_source_split_2161;

  corral_source_split_2161:
    assume {:verifier.code 0} true;
    $i29 := $ne.i32($i28, 0);
    goto corral_source_split_2162;

  corral_source_split_2162:
    assume {:verifier.code 0} true;
    assume {:branchcond $i29} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i29 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $p32 := $M.44;
    goto corral_source_split_2171;

  corral_source_split_2171:
    assume {:verifier.code 0} true;
    call {:si_unique_call 444} $i33 := platform_device_add($p32);
    call {:si_unique_call 445} {:cexpr "err"} boogie_si_record_i32($i33);
    goto corral_source_split_2172;

  corral_source_split_2172:
    assume {:verifier.code 0} true;
    $i34 := $ne.i32($i33, 0);
    goto corral_source_split_2173;

  corral_source_split_2173:
    assume {:verifier.code 0} true;
    assume {:branchcond $i34} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i34 == 1);
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i10 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2123;

  corral_source_split_2123:
    assume {:verifier.code 0} true;
    $r := $i10;
    return;

  $bb23:
    assume $i34 == 1;
    goto corral_source_split_2175;

  corral_source_split_2175:
    assume {:verifier.code 0} true;
    call {:si_unique_call 446} vslice_dummy_var_13 := printk.ref.i32(.str.137, $i33);
    goto corral_source_split_2176;

  corral_source_split_2176:
    assume {:verifier.code 0} true;
    $i31 := $i33;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto corral_source_split_2167;

  corral_source_split_2167:
    assume {:verifier.code 0} true;
    $p36 := $M.44;
    goto corral_source_split_2168;

  corral_source_split_2168:
    assume {:verifier.code 0} true;
    call {:si_unique_call 443} platform_device_put($p36);
    goto corral_source_split_2169;

  corral_source_split_2169:
    assume {:verifier.code 0} true;
    $i23 := $i31;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto corral_source_split_2151;

  corral_source_split_2151:
    assume {:verifier.code 0} true;
    call {:si_unique_call 439} ldv_platform_driver_unregister_15(abituguru3_driver);
    goto corral_source_split_2152;

  corral_source_split_2152:
    assume {:verifier.code 0} true;
    $i17 := $i23;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto corral_source_split_2140;

  corral_source_split_2140:
    assume {:verifier.code 0} true;
    $i10 := $i17;
    goto $bb3;

  $bb19:
    assume $i29 == 1;
    goto corral_source_split_2164;

  corral_source_split_2164:
    assume {:verifier.code 0} true;
    call {:si_unique_call 442} vslice_dummy_var_12 := printk.ref.i32(.str.136, $i28);
    goto corral_source_split_2165;

  corral_source_split_2165:
    assume {:verifier.code 0} true;
    $i31 := $i28;
    goto $bb21;

  $bb15:
    assume $i21 == 1;
    goto corral_source_split_2148;

  corral_source_split_2148:
    assume {:verifier.code 0} true;
    call {:si_unique_call 438} vslice_dummy_var_11 := printk.ref(.str.135);
    goto corral_source_split_2149;

  corral_source_split_2149:
    assume {:verifier.code 0} true;
    $i23 := $sub.i32(0, 12);
    goto $bb17;

  $bb11:
    assume $i16 == 1;
    goto corral_source_split_2138;

  corral_source_split_2138:
    assume {:verifier.code 0} true;
    $i17 := $i15;
    goto $bb13;

  $bb5:
    assume $i11 == 1;
    goto corral_source_split_2127;

  corral_source_split_2127:
    assume {:verifier.code 0} true;
    call {:si_unique_call 432} $i12 := abituguru3_detect();
    call {:si_unique_call 433} {:cexpr "err"} boogie_si_record_i32($i12);
    goto corral_source_split_2128;

  corral_source_split_2128:
    assume {:verifier.code 0} true;
    $i13 := $ne.i32($i12, 0);
    goto corral_source_split_2129;

  corral_source_split_2129:
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i13 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    call {:si_unique_call 434} vslice_dummy_var_10 := printk.ref(.str.134);
    goto corral_source_split_2133;

  corral_source_split_2133:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb7:
    assume $i13 == 1;
    goto corral_source_split_2131;

  corral_source_split_2131:
    assume {:verifier.code 0} true;
    $i10 := $i12;
    goto $bb3;

  $bb1:
    assume $i9 == 1;
    goto corral_source_split_2121;

  corral_source_split_2121:
    assume {:verifier.code 0} true;
    $i10 := $i8;
    goto $bb3;
}



const ldv_suspend_late_2: ref;

axiom ldv_suspend_late_2 == $sub.ref(0, 283747);

procedure ldv_suspend_late_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_suspend_late_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2178;

  corral_source_split_2178:
    assume {:verifier.code 1} true;
    call {:si_unique_call 447} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 448} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2179;

  corral_source_split_2179:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_restore_early_2: ref;

axiom ldv_restore_early_2 == $sub.ref(0, 284779);

procedure ldv_restore_early_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_restore_early_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2181;

  corral_source_split_2181:
    assume {:verifier.code 1} true;
    call {:si_unique_call 449} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 450} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2182;

  corral_source_split_2182:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_resume_early_2: ref;

axiom ldv_resume_early_2 == $sub.ref(0, 285811);

procedure ldv_resume_early_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_resume_early_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2184;

  corral_source_split_2184:
    assume {:verifier.code 1} true;
    call {:si_unique_call 451} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 452} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2185;

  corral_source_split_2185:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_thaw_early_2: ref;

axiom ldv_thaw_early_2 == $sub.ref(0, 286843);

procedure ldv_thaw_early_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_thaw_early_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2187;

  corral_source_split_2187:
    assume {:verifier.code 1} true;
    call {:si_unique_call 453} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 454} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2188;

  corral_source_split_2188:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_resume_noirq_2: ref;

axiom ldv_resume_noirq_2 == $sub.ref(0, 287875);

procedure ldv_resume_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_resume_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2190;

  corral_source_split_2190:
    assume {:verifier.code 1} true;
    call {:si_unique_call 455} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 456} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2191;

  corral_source_split_2191:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_freeze_noirq_2: ref;

axiom ldv_freeze_noirq_2 == $sub.ref(0, 288907);

procedure ldv_freeze_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_freeze_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2193;

  corral_source_split_2193:
    assume {:verifier.code 1} true;
    call {:si_unique_call 457} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 458} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2194;

  corral_source_split_2194:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_prepare_2: ref;

axiom ldv_prepare_2 == $sub.ref(0, 289939);

procedure ldv_prepare_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_prepare_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2196;

  corral_source_split_2196:
    assume {:verifier.code 1} true;
    call {:si_unique_call 459} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 460} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2197;

  corral_source_split_2197:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_freeze_late_2: ref;

axiom ldv_freeze_late_2 == $sub.ref(0, 290971);

procedure ldv_freeze_late_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_freeze_late_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2199;

  corral_source_split_2199:
    assume {:verifier.code 1} true;
    call {:si_unique_call 461} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 462} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2200;

  corral_source_split_2200:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_thaw_noirq_2: ref;

axiom ldv_thaw_noirq_2 == $sub.ref(0, 292003);

procedure ldv_thaw_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_thaw_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2202;

  corral_source_split_2202:
    assume {:verifier.code 1} true;
    call {:si_unique_call 463} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 464} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2203;

  corral_source_split_2203:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_poweroff_noirq_2: ref;

axiom ldv_poweroff_noirq_2 == $sub.ref(0, 293035);

procedure ldv_poweroff_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_poweroff_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2205;

  corral_source_split_2205:
    assume {:verifier.code 1} true;
    call {:si_unique_call 465} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 466} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2206;

  corral_source_split_2206:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_poweroff_late_2: ref;

axiom ldv_poweroff_late_2 == $sub.ref(0, 294067);

procedure ldv_poweroff_late_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_poweroff_late_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2208;

  corral_source_split_2208:
    assume {:verifier.code 1} true;
    call {:si_unique_call 467} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 468} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2209;

  corral_source_split_2209:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_restore_noirq_2: ref;

axiom ldv_restore_noirq_2 == $sub.ref(0, 295099);

procedure ldv_restore_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_restore_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2211;

  corral_source_split_2211:
    assume {:verifier.code 1} true;
    call {:si_unique_call 469} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 470} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2212;

  corral_source_split_2212:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_suspend_noirq_2: ref;

axiom ldv_suspend_noirq_2 == $sub.ref(0, 296131);

procedure ldv_suspend_noirq_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_suspend_noirq_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2214;

  corral_source_split_2214:
    assume {:verifier.code 1} true;
    call {:si_unique_call 471} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 472} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2215;

  corral_source_split_2215:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_complete_2: ref;

axiom ldv_complete_2 == $sub.ref(0, 297163);

procedure ldv_complete_2() returns ($r: i32);
  free requires assertsPassed;



implementation ldv_complete_2() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2217;

  corral_source_split_2217:
    assume {:verifier.code 1} true;
    call {:si_unique_call 473} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 474} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_2218;

  corral_source_split_2218:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const ldv_check_final_state: ref;

axiom ldv_check_final_state == $sub.ref(0, 298195);

procedure ldv_check_final_state();
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2220;

  corral_source_split_2220:
    assume {:verifier.code 0} true;
    $i0 := $M.52;
    goto corral_source_split_2221;

  corral_source_split_2221:
    assume {:verifier.code 0} true;
    $i1 := $ne.i32($i0, 1);
    goto corral_source_split_2222;

  corral_source_split_2222:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i1 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i2 := $M.53;
    goto corral_source_split_2227;

  corral_source_split_2227:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i2, 1);
    goto corral_source_split_2228;

  corral_source_split_2228:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i3 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i4 := $M.9;
    goto corral_source_split_2233;

  corral_source_split_2233:
    assume {:verifier.code 0} true;
    $i5 := $ne.i32($i4, 1);
    goto corral_source_split_2234;

  corral_source_split_2234:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    return;

  $bb7:
    assume $i5 == 1;
    goto corral_source_split_2236;

  corral_source_split_2236:
    assume {:verifier.code 0} true;
    call {:si_unique_call 477} ldv_error();
    goto SeqInstr_67, SeqInstr_68;

  SeqInstr_68:
    assume assertsPassed;
    goto SeqInstr_69;

  SeqInstr_69:
    goto corral_source_split_2237;

  corral_source_split_2237:
    assume {:verifier.code 0} true;
    goto $bb9;

  SeqInstr_67:
    assume !assertsPassed;
    return;

  $bb4:
    assume $i3 == 1;
    goto corral_source_split_2230;

  corral_source_split_2230:
    assume {:verifier.code 0} true;
    call {:si_unique_call 476} ldv_error();
    goto SeqInstr_64, SeqInstr_65;

  SeqInstr_65:
    assume assertsPassed;
    goto SeqInstr_66;

  SeqInstr_66:
    goto corral_source_split_2231;

  corral_source_split_2231:
    assume {:verifier.code 0} true;
    goto $bb6;

  SeqInstr_64:
    assume !assertsPassed;
    return;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_2224;

  corral_source_split_2224:
    assume {:verifier.code 0} true;
    call {:si_unique_call 475} ldv_error();
    goto SeqInstr_61, SeqInstr_62;

  SeqInstr_62:
    assume assertsPassed;
    goto SeqInstr_63;

  SeqInstr_63:
    goto corral_source_split_2225;

  corral_source_split_2225:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_61:
    assume !assertsPassed;
    return;
}



const abituguru3_dmi_detect: ref;

axiom abituguru3_dmi_detect == $sub.ref(0, 299227);

procedure abituguru3_dmi_detect() returns ($r: i32);
  free requires assertsPassed;



implementation abituguru3_dmi_detect() returns ($r: i32)
{
  var $i0: i8;
  var $i1: i1;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i64;
  var $i13: i1;
  var $i16: i64;
  var $i17: i1;
  var $i15: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $i24: i64;
  var $i18: i64;
  var $i14: i64;
  var $i26: i64;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $i32: i1;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i1;
  var $p33: ref;
  var $i44: i32;
  var $i45: i64;
  var $p47: ref;
  var $i48: i16;
  var $i49: i32;
  var $i50: i1;
  var $i25: i32;
  var $i6: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2239;

  corral_source_split_2239:
    assume {:verifier.code 0} true;
    $i0 := $M.54;
    goto corral_source_split_2240;

  corral_source_split_2240:
    assume {:verifier.code 0} true;
    $i1 := $trunc.i8.i1($i0);
    goto corral_source_split_2241;

  corral_source_split_2241:
    assume {:verifier.code 0} true;
    $i2 := (if $i1 == 1 then 1 else $sub.i32(0, 19));
    call {:si_unique_call 478} {:cexpr "err"} boogie_si_record_i32($i2);
    goto corral_source_split_2242;

  corral_source_split_2242:
    assume {:verifier.code 0} true;
    call {:si_unique_call 479} $p3 := dmi_get_system_info(9);
    goto corral_source_split_2243;

  corral_source_split_2243:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p3);
    goto corral_source_split_2244;

  corral_source_split_2244:
    assume {:verifier.code 0} true;
    $i5 := $eq.i64($i4, 0);
    goto corral_source_split_2245;

  corral_source_split_2245:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_2249;

  corral_source_split_2249:
    assume {:verifier.code 0} true;
    call {:si_unique_call 480} $i7 := strcmp($p3, .str.138);
    call {:si_unique_call 481} {:cexpr "tmp"} boogie_si_record_i32($i7);
    goto corral_source_split_2250;

  corral_source_split_2250:
    assume {:verifier.code 0} true;
    $i8 := $ne.i32($i7, 0);
    goto corral_source_split_2251;

  corral_source_split_2251:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    call {:si_unique_call 482} $p9 := dmi_get_system_info(10);
    goto corral_source_split_2257;

  corral_source_split_2257:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p9);
    goto corral_source_split_2258;

  corral_source_split_2258:
    assume {:verifier.code 0} true;
    $i11 := $eq.i64($i10, 0);
    goto corral_source_split_2259;

  corral_source_split_2259:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    call {:si_unique_call 483} $i12 := strcspn($p9, .str.139);
    call {:si_unique_call 484} {:cexpr "sublen"} boogie_si_record_i64($i12);
    goto corral_source_split_2263;

  corral_source_split_2263:
    assume {:verifier.code 0} true;
    $i13 := $ne.i64($i12, 0);
    goto corral_source_split_2264;

  corral_source_split_2264:
    assume {:verifier.code 0} true;
    $i14 := $i12;
    assume {:branchcond $i13} true;
    goto $bb11, $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    assume !($i13 == 1);
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i25 := 0;
    goto $bb21;

  $bb21:
    call $i26, $p28, $p29, $p30, $i31, $i32, $p34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p33, $i44, $i45, $p47, $i48, $i49, $i50, $i25 := abituguru3_dmi_detect_loop_$bb21($p9, $i14, $i26, $p28, $p29, $p30, $i31, $i32, $p34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p33, $i44, $i45, $p47, $i48, $i49, $i50, $i25);
    goto $bb21_last;

  corral_source_split_2284:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i26 := $sext.i32.i64($i25);
    goto corral_source_split_2286;

  corral_source_split_2286:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref($i26, 896)), $mul.ref(8, 1));
    goto corral_source_split_2287;

  corral_source_split_2287:
    assume {:verifier.code 0} true;
    $p29 := $bitcast.ref.ref($p28);
    goto corral_source_split_2288;

  corral_source_split_2288:
    assume {:verifier.code 0} true;
    $p30 := $load.ref($M.0, $p29);
    goto corral_source_split_2289;

  corral_source_split_2289:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p30);
    goto corral_source_split_2290;

  corral_source_split_2290:
    assume {:verifier.code 0} true;
    $i32 := $ne.i64($i31, 0);
    goto corral_source_split_2291;

  corral_source_split_2291:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb23, $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    assume !($i32 == 1);
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i44 := $add.i32($i25, 1);
    call {:si_unique_call 490} {:cexpr "i"} boogie_si_record_i32($i44);
    goto corral_source_split_2316;

  corral_source_split_2316:
    assume {:verifier.code 0} true;
    $i45 := $sext.i32.i64($i44);
    goto corral_source_split_2317;

  corral_source_split_2317:
    assume {:verifier.code 0} true;
    $p47 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref($i45, 896)), $mul.ref(0, 1));
    goto corral_source_split_2318;

  corral_source_split_2318:
    assume {:verifier.code 0} true;
    $i48 := $load.i16($M.0, $p47);
    goto corral_source_split_2319;

  corral_source_split_2319:
    assume {:verifier.code 0} true;
    $i49 := $zext.i16.i32($i48);
    goto corral_source_split_2320;

  corral_source_split_2320:
    assume {:verifier.code 0} true;
    $i50 := $ne.i32($i49, 0);
    goto corral_source_split_2321;

  corral_source_split_2321:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i6 := 1;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2253;

  corral_source_split_2253:
    assume {:verifier.code 0} true;
    $r := $i6;
    return;

  $bb38:
    assume $i50 == 1;
    assume {:verifier.code 0} true;
    $i25 := $i44;
    goto $bb38_dummy;

  $bb23:
    assume $i32 == 1;
    goto corral_source_split_2293;

  corral_source_split_2293:
    assume {:verifier.code 0} true;
    $p33 := $p28;
    goto $bb26;

  $bb26:
    call $p34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p33 := abituguru3_dmi_detect_loop_$bb26($p9, $i14, $p34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p33);
    goto $bb26_last;

  corral_source_split_2295:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $p34 := $load.ref($M.0, $p33);
    goto corral_source_split_2297;

  corral_source_split_2297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 486} $i35 := strlen($p34);
    call {:si_unique_call 487} {:cexpr "tmp___0"} boogie_si_record_i64($i35);
    goto corral_source_split_2298;

  corral_source_split_2298:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, $i14);
    goto corral_source_split_2299;

  corral_source_split_2299:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $p37 := $load.ref($M.0, $p33);
    goto corral_source_split_2308;

  corral_source_split_2308:
    assume {:verifier.code 0} true;
    call {:si_unique_call 488} $i38 := strncasecmp($p9, $p37, $i14);
    call {:si_unique_call 489} {:cexpr "tmp___1"} boogie_si_record_i32($i38);
    goto corral_source_split_2309;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    $i39 := $eq.i32($i38, 0);
    goto corral_source_split_2310;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($p33, $mul.ref(1, 8));
    goto corral_source_split_2303;

  corral_source_split_2303:
    assume {:verifier.code 0} true;
    $p41 := $load.ref($M.0, $p40);
    goto corral_source_split_2304;

  corral_source_split_2304:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p41);
    goto corral_source_split_2305;

  corral_source_split_2305:
    assume {:verifier.code 0} true;
    $i43 := $ne.i64($i42, 0);
    goto corral_source_split_2306;

  corral_source_split_2306:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i43 == 1);
    goto corral_source_split_2314;

  corral_source_split_2314:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb35:
    assume $i43 == 1;
    assume {:verifier.code 0} true;
    $p33 := $p40;
    goto $bb35_dummy;

  $bb32:
    assume $i39 == 1;
    goto corral_source_split_2312;

  corral_source_split_2312:
    assume {:verifier.code 0} true;
    $i6 := 0;
    goto $bb3;

  $bb28:
    assume $i36 == 1;
    goto corral_source_split_2301;

  corral_source_split_2301:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb11:
    assume $i13 == 1;
    goto corral_source_split_2266;

  corral_source_split_2266:
    assume {:verifier.code 0} true;
    $i15 := $i12;
    goto $bb14;

  $bb14:
    call $i16, $i17, $i15, $i19, $p20, $i21, $i22, $i23, $i24, $i18 := abituguru3_dmi_detect_loop_$bb14($p9, $i16, $i17, $i15, $i19, $p20, $i21, $i22, $i23, $i24, $i18);
    goto $bb14_last;

  corral_source_split_2268:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i15, $sub.i64(0, 1));
    goto corral_source_split_2269;

  corral_source_split_2269:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($p9, $mul.ref($i19, 1));
    goto corral_source_split_2270;

  corral_source_split_2270:
    assume {:verifier.code 0} true;
    $i21 := $load.i8($M.0, $p20);
    goto corral_source_split_2271;

  corral_source_split_2271:
    assume {:verifier.code 0} true;
    $i22 := $sext.i8.i32($i21);
    goto corral_source_split_2272;

  corral_source_split_2272:
    assume {:verifier.code 0} true;
    $i23 := $eq.i32($i22, 32);
    goto corral_source_split_2273;

  corral_source_split_2273:
    assume {:verifier.code 0} true;
    $i24 := $i15;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i23 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2282;

  corral_source_split_2282:
    assume {:verifier.code 0} true;
    $i14 := $i24;
    goto $bb13;

  $bb18:
    assume $i23 == 1;
    goto corral_source_split_2280;

  corral_source_split_2280:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i16 := $sub.i64($i15, 1);
    call {:si_unique_call 485} {:cexpr "sublen"} boogie_si_record_i64($i16);
    goto corral_source_split_2275;

  corral_source_split_2275:
    assume {:verifier.code 0} true;
    $i17 := $ne.i64($i16, 0);
    goto corral_source_split_2276;

  corral_source_split_2276:
    assume {:verifier.code 0} true;
    $i18 := $i16;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i17 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2278;

  corral_source_split_2278:
    assume {:verifier.code 0} true;
    $i14 := $i18;
    goto $bb13;

  $bb16:
    assume $i17 == 1;
    assume {:verifier.code 0} true;
    $i15 := $i16;
    goto $bb16_dummy;

  $bb8:
    assume $i11 == 1;
    goto corral_source_split_2261;

  corral_source_split_2261:
    assume {:verifier.code 0} true;
    $i6 := $i2;
    goto $bb3;

  $bb4:
    assume $i8 == 1;
    goto corral_source_split_2255;

  corral_source_split_2255:
    assume {:verifier.code 0} true;
    $i6 := $i2;
    goto $bb3;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_2247;

  corral_source_split_2247:
    assume {:verifier.code 0} true;
    $i6 := $i2;
    goto $bb3;

  $bb35_dummy:
    assume false;
    return;

  $bb26_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2295;

  $bb38_dummy:
    assume false;
    return;

  $bb21_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2284;

  $bb16_dummy:
    assume false;
    return;

  $bb14_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2268;
}



const abituguru3_detect: ref;

axiom abituguru3_detect == $sub.ref(0, 300259);

procedure abituguru3_detect() returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $CurrAddr;



implementation abituguru3_detect() returns ($r: i32)
{
  var $p0: ref;
  var $i1: i8;
  var $i2: i8;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i14: i8;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i24;
  var $i23: i24;
  var $i24: i24;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $i34: i8;
  var $i35: i1;
  var $i13: i32;
  var vslice_dummy_var_14: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 491} $p0 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_2323;

  corral_source_split_2323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 492} $i1 := inb_p(228);
    call {:si_unique_call 493} {:cexpr "tmp"} boogie_si_record_i8($i1);
    goto corral_source_split_2324;

  corral_source_split_2324:
    assume {:verifier.code 0} true;
    call {:si_unique_call 494} $i2 := inb_p(224);
    call {:si_unique_call 495} {:cexpr "tmp___0"} boogie_si_record_i8($i2);
    goto corral_source_split_2325;

  corral_source_split_2325:
    assume {:verifier.code 0} true;
    $i3 := $zext.i8.i32($i1);
    goto corral_source_split_2326;

  corral_source_split_2326:
    assume {:verifier.code 0} true;
    $i4 := $eq.i32($i3, 0);
    goto corral_source_split_2327;

  corral_source_split_2327:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb3;

  $bb3:
    assume !($i4 == 1);
    goto corral_source_split_2332;

  corral_source_split_2332:
    assume {:verifier.code 0} true;
    $i5 := $zext.i8.i32($i1);
    goto corral_source_split_2333;

  corral_source_split_2333:
    assume {:verifier.code 0} true;
    $i6 := $eq.i32($i5, 8);
    goto corral_source_split_2334;

  corral_source_split_2334:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i6 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i14 := $M.2;
    goto corral_source_split_2346;

  corral_source_split_2346:
    assume {:verifier.code 0} true;
    $i15 := $trunc.i8.i1($i14);
    goto corral_source_split_2347;

  corral_source_split_2347:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i34 := $M.54;
    goto corral_source_split_2378;

  corral_source_split_2378:
    assume {:verifier.code 0} true;
    $i35 := $trunc.i8.i1($i34);
    goto corral_source_split_2379;

  corral_source_split_2379:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i13 := $sub.i32(0, 19);
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto corral_source_split_2344;

  corral_source_split_2344:
    assume {:verifier.code 0} true;
    $r := $i13;
    return;

  $bb22:
    assume $i35 == 1;
    goto corral_source_split_2381;

  corral_source_split_2381:
    assume {:verifier.code 0} true;
    call {:si_unique_call 499} vslice_dummy_var_14 := printk.ref(.str.143);
    goto corral_source_split_2382;

  corral_source_split_2382:
    assume {:verifier.code 0} true;
    $i13 := 0;
    goto $bb14;

  $bb16:
    assume $i15 == 1;
    goto corral_source_split_2349;

  corral_source_split_2349:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(0, 1));
    goto corral_source_split_2350;

  corral_source_split_2350:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p16, .str.5);
    goto corral_source_split_2351;

  corral_source_split_2351:
    assume {:verifier.code 0} true;
    $p17 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(8, 1));
    goto corral_source_split_2352;

  corral_source_split_2352:
    assume {:verifier.code 0} true;
    $M.4 := $store.ref($M.4, $p17, .str.140);
    goto corral_source_split_2353;

  corral_source_split_2353:
    assume {:verifier.code 0} true;
    $p18 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(16, 1));
    goto corral_source_split_2354;

  corral_source_split_2354:
    assume {:verifier.code 0} true;
    $M.5 := $store.ref($M.5, $p18, .str.7);
    goto corral_source_split_2355;

  corral_source_split_2355:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(24, 1));
    goto corral_source_split_2356;

  corral_source_split_2356:
    assume {:verifier.code 0} true;
    $M.6 := $store.ref($M.6, $p19, .str.141);
    goto corral_source_split_2357;

  corral_source_split_2357:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(32, 1));
    goto corral_source_split_2358;

  corral_source_split_2358:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p20);
    goto corral_source_split_2359;

  corral_source_split_2359:
    assume {:verifier.code 0} true;
    $i22 := $load.i24($M.7, $p21);
    goto corral_source_split_2360;

  corral_source_split_2360:
    assume {:verifier.code 0} true;
    $i23 := $and.i24($i22, $sub.i24(0, 262144));
    goto corral_source_split_2361;

  corral_source_split_2361:
    assume {:verifier.code 0} true;
    $i24 := $or.i24($i23, 1236);
    goto corral_source_split_2362;

  corral_source_split_2362:
    assume {:verifier.code 0} true;
    $M.7 := $store.i24($M.7, $p21, $i24);
    goto corral_source_split_2363;

  corral_source_split_2363:
    assume {:verifier.code 0} true;
    $p25 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_2364;

  corral_source_split_2364:
    assume {:verifier.code 0} true;
    $M.8 := $store.i8($M.8, $p25, 1);
    goto corral_source_split_2365;

  corral_source_split_2365:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($add.ref($p0, $mul.ref(0, 40)), $mul.ref(35, 1));
    goto corral_source_split_2366;

  corral_source_split_2366:
    assume {:verifier.code 0} true;
    $i27 := $load.i8($M.8, $p26);
    goto corral_source_split_2367;

  corral_source_split_2367:
    assume {:verifier.code 0} true;
    $i28 := $zext.i8.i64($i27);
    goto corral_source_split_2368;

  corral_source_split_2368:
    assume {:verifier.code 0} true;
    $i29 := $and.i64($i28, 1);
    goto corral_source_split_2369;

  corral_source_split_2369:
    assume {:verifier.code 0} true;
    call {:si_unique_call 496} $i30 := ldv__builtin_expect($i29, 0);
    call {:si_unique_call 497} {:cexpr "tmp___1"} boogie_si_record_i64($i30);
    goto corral_source_split_2370;

  corral_source_split_2370:
    assume {:verifier.code 0} true;
    $i31 := $ne.i64($i30, 0);
    goto corral_source_split_2371;

  corral_source_split_2371:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i31 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb18:
    assume $i31 == 1;
    goto corral_source_split_2373;

  corral_source_split_2373:
    assume {:verifier.code 0} true;
    $i32 := $zext.i8.i32($i1);
    goto corral_source_split_2374;

  corral_source_split_2374:
    assume {:verifier.code 0} true;
    $i33 := $zext.i8.i32($i2);
    goto corral_source_split_2375;

  corral_source_split_2375:
    assume {:verifier.code 0} true;
    call {:si_unique_call 498} __dynamic_pr_debug.ref.ref.i32.i32($p0, .str.142, $i32, $i33);
    goto corral_source_split_2376;

  corral_source_split_2376:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb4:
    assume {:verifier.code 0} true;
    assume $i6 == 1;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i7 := $zext.i8.i32($i2);
    goto corral_source_split_2329;

  corral_source_split_2329:
    assume {:verifier.code 0} true;
    $i8 := $eq.i32($i7, 172);
    goto corral_source_split_2330;

  corral_source_split_2330:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7, $bb9;

  $bb9:
    assume !($i8 == 1);
    goto corral_source_split_2336;

  corral_source_split_2336:
    assume {:verifier.code 0} true;
    $i9 := $zext.i8.i32($i2);
    goto corral_source_split_2337;

  corral_source_split_2337:
    assume {:verifier.code 0} true;
    $i10 := $eq.i32($i9, 5);
    goto corral_source_split_2338;

  corral_source_split_2338:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i10 == 1);
    goto corral_source_split_2340;

  corral_source_split_2340:
    assume {:verifier.code 0} true;
    $i11 := $zext.i8.i32($i2);
    goto corral_source_split_2341;

  corral_source_split_2341:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i11, 85);
    goto corral_source_split_2342;

  corral_source_split_2342:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    assume !($i12 == 1);
    goto $bb6;

  $bb12:
    assume {:verifier.code 0} true;
    assume $i12 == 1;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i13 := 0;
    goto $bb14;

  $bb10:
    assume {:verifier.code 0} true;
    assume $i10 == 1;
    goto $bb8;

  $bb7:
    assume {:verifier.code 0} true;
    assume $i8 == 1;
    goto $bb8;

  $bb1:
    assume {:verifier.code 0} true;
    assume $i4 == 1;
    goto $bb2;
}



const ldv___platform_driver_register_14: ref;

axiom ldv___platform_driver_register_14 == $sub.ref(0, 301291);

procedure ldv___platform_driver_register_14($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.17, $M.16, $M.1, $CurrAddr;



implementation ldv___platform_driver_register_14($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2384;

  corral_source_split_2384:
    assume {:verifier.code 0} true;
    call {:si_unique_call 500} $i2 := __platform_driver_register($p0, $p1);
    call {:si_unique_call 501} {:cexpr "tmp"} boogie_si_record_i32($i2);
    goto corral_source_split_2385;

  corral_source_split_2385:
    assume {:verifier.code 0} true;
    $M.17 := 1;
    call {:si_unique_call 502} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_2386;

  corral_source_split_2386:
    assume {:verifier.code 0} true;
    call {:si_unique_call 503} ldv_platform_driver_init_1();
    goto corral_source_split_2387;

  corral_source_split_2387:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const platform_device_alloc: ref;

axiom platform_device_alloc == $sub.ref(0, 302323);

procedure platform_device_alloc($p0: ref, $i1: i32) returns ($r: ref);
  free requires assertsPassed;



implementation platform_device_alloc($p0: ref, $i1: i32) returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 504} {:cexpr "platform_device_alloc:arg:arg1"} boogie_si_record_i32($i1);
    goto corral_source_split_2389;

  corral_source_split_2389:
    assume {:verifier.code 0} true;
    call {:si_unique_call 505} $p2 := external_alloc();
    goto corral_source_split_2390;

  corral_source_split_2390:
    assume {:verifier.code 0} true;
    $p3 := $bitcast.ref.ref($p2);
    goto corral_source_split_2391;

  corral_source_split_2391:
    assume {:verifier.code 0} true;
    $r := $p3;
    return;
}



const platform_device_add_resources: ref;

axiom platform_device_add_resources == $sub.ref(0, 303355);

procedure platform_device_add_resources($p0: ref, $p1: ref, $i2: i32) returns ($r: i32);
  free requires assertsPassed;



implementation platform_device_add_resources($p0: ref, $p1: ref, $i2: i32) returns ($r: i32)
{
  var $i3: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 506} {:cexpr "platform_device_add_resources:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_2393;

  corral_source_split_2393:
    assume {:verifier.code 1} true;
    call {:si_unique_call 507} $i3 := __VERIFIER_nondet_int();
    call {:si_unique_call 508} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
    goto corral_source_split_2394;

  corral_source_split_2394:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;
}



const platform_device_add: ref;

axiom platform_device_add == $sub.ref(0, 304387);

procedure platform_device_add($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation platform_device_add($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2396;

  corral_source_split_2396:
    assume {:verifier.code 1} true;
    call {:si_unique_call 509} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 510} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_2397;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const platform_device_put: ref;

axiom platform_device_put == $sub.ref(0, 305419);

procedure platform_device_put($p0: ref);
  free requires assertsPassed;



implementation platform_device_put($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2399;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    return;
}



const ldv_platform_driver_unregister_15: ref;

axiom ldv_platform_driver_unregister_15 == $sub.ref(0, 306451);

procedure ldv_platform_driver_unregister_15($p0: ref);
  free requires assertsPassed;
  modifies $M.17;



implementation ldv_platform_driver_unregister_15($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2401;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    call {:si_unique_call 511} platform_driver_unregister($p0);
    goto corral_source_split_2402;

  corral_source_split_2402:
    assume {:verifier.code 0} true;
    $M.17 := 0;
    call {:si_unique_call 512} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    goto corral_source_split_2403;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    return;
}



const platform_driver_unregister: ref;

axiom platform_driver_unregister == $sub.ref(0, 307483);

procedure platform_driver_unregister($p0: ref);
  free requires assertsPassed;



implementation platform_driver_unregister($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2405;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    return;
}



const __platform_driver_register: ref;

axiom __platform_driver_register == $sub.ref(0, 308515);

procedure __platform_driver_register($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;



implementation __platform_driver_register($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2407;

  corral_source_split_2407:
    assume {:verifier.code 1} true;
    call {:si_unique_call 513} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 514} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_2408;

  corral_source_split_2408:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const dmi_get_system_info: ref;

axiom dmi_get_system_info == $sub.ref(0, 309547);

procedure dmi_get_system_info($i0: i32) returns ($r: ref);
  free requires assertsPassed;



implementation dmi_get_system_info($i0: i32) returns ($r: ref)
{
  var $p1: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 515} {:cexpr "dmi_get_system_info:arg:arg0"} boogie_si_record_i32($i0);
    goto corral_source_split_2410;

  corral_source_split_2410:
    assume {:verifier.code 0} true;
    call {:si_unique_call 516} $p1 := external_alloc();
    goto corral_source_split_2411;

  corral_source_split_2411:
    assume {:verifier.code 0} true;
    $r := $p1;
    return;
}



const strcmp: ref;

axiom strcmp == $sub.ref(0, 310579);

procedure strcmp($p0: ref, $p1: ref) returns ($r: i32);



const strcspn: ref;

axiom strcspn == $sub.ref(0, 311611);

procedure strcspn($p0: ref, $p1: ref) returns ($r: i64);



const strlen: ref;

axiom strlen == $sub.ref(0, 312643);

procedure strlen($p0: ref) returns ($r: i64);



const strncasecmp: ref;

axiom strncasecmp == $sub.ref(0, 313675);

procedure strncasecmp($p0: ref, $p1: ref, $i2: i64) returns ($r: i32);
  free requires assertsPassed;



implementation strncasecmp($p0: ref, $p1: ref, $i2: i64) returns ($r: i32)
{
  var $i3: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 517} {:cexpr "strncasecmp:arg:arg2"} boogie_si_record_i64($i2);
    goto corral_source_split_2413;

  corral_source_split_2413:
    assume {:verifier.code 1} true;
    call {:si_unique_call 518} $i3 := __VERIFIER_nondet_int();
    call {:si_unique_call 519} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
    goto corral_source_split_2414;

  corral_source_split_2414:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;
}



const platform_device_unregister: ref;

axiom platform_device_unregister == $sub.ref(0, 314707);

procedure platform_device_unregister($p0: ref);
  free requires assertsPassed;



implementation platform_device_unregister($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2416;

  corral_source_split_2416:
    assume {:verifier.code 0} true;
    return;
}



const ldv_platform_driver_unregister_16: ref;

axiom ldv_platform_driver_unregister_16 == $sub.ref(0, 315739);

procedure ldv_platform_driver_unregister_16($p0: ref);
  free requires assertsPassed;
  modifies $M.17;



implementation ldv_platform_driver_unregister_16($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_2418;

  corral_source_split_2418:
    assume {:verifier.code 0} true;
    call {:si_unique_call 520} platform_driver_unregister($p0);
    goto corral_source_split_2419;

  corral_source_split_2419:
    assume {:verifier.code 0} true;
    $M.17 := 0;
    call {:si_unique_call 521} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    goto corral_source_split_2420;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    return;
}



const __VERIFIER_assume: ref;

axiom __VERIFIER_assume == $sub.ref(0, 316771);

procedure __VERIFIER_assume($i0: i32);
  free requires assertsPassed;



implementation __VERIFIER_assume($i0: i32)
{

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 522} {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
    goto corral_source_split_2422;

  corral_source_split_2422:
    assume {:verifier.code 1} true;
    goto corral_source_split_2423;

  corral_source_split_2423:
    assume {:verifier.code 1} true;
    assume $i0 != $0;
    goto corral_source_split_2424;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    return;
}



const __SMACK_code: ref;

axiom __SMACK_code == $sub.ref(0, 317803);

procedure __SMACK_code.ref($p0: ref);



procedure __SMACK_code.ref.i32($p0: ref, p.1: i32);



const __SMACK_dummy: ref;

axiom __SMACK_dummy == $sub.ref(0, 318835);

procedure __SMACK_dummy($i0: i32);



const __VERIFIER_error: ref;

axiom __VERIFIER_error == $sub.ref(0, 319867);

procedure __VERIFIER_error();
  free requires assertsPassed;
  modifies assertsPassed;



implementation __VERIFIER_error()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2426;

  corral_source_split_2426:
    assume {:verifier.code 1} true;
    goto assert_rewrite_dummy_block_0, assert_rewrite_dummy_block_1;

  assert_rewrite_dummy_block_1:
    assume false;
    return;

  assert_rewrite_dummy_block_0:
    assume {:corral_assert_pt} !false;
    assertsPassed := false;
    goto SeqInstr_70, SeqInstr_71;

  SeqInstr_71:
    assume assertsPassed;
    goto SeqInstr_72;

  SeqInstr_72:
    goto assert_rewrite_dummy_block_2;

  assert_rewrite_dummy_block_2:
    goto corral_source_split_2427;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_70:
    assume !assertsPassed;
    return;
}



const __SMACK_check_overflow: ref;

axiom __SMACK_check_overflow == $sub.ref(0, 320899);

procedure __SMACK_check_overflow($i0: i32);



const __SMACK_nondet_char: ref;

axiom __SMACK_nondet_char == $sub.ref(0, 321931);

procedure __SMACK_nondet_char() returns ($r: i8);



const __SMACK_nondet_signed_char: ref;

axiom __SMACK_nondet_signed_char == $sub.ref(0, 322963);

procedure __SMACK_nondet_signed_char() returns ($r: i8);



const __SMACK_nondet_unsigned_char: ref;

axiom __SMACK_nondet_unsigned_char == $sub.ref(0, 323995);

procedure __SMACK_nondet_unsigned_char() returns ($r: i8);



const __SMACK_nondet_short: ref;

axiom __SMACK_nondet_short == $sub.ref(0, 325027);

procedure __SMACK_nondet_short() returns ($r: i16);



const __SMACK_nondet_signed_short: ref;

axiom __SMACK_nondet_signed_short == $sub.ref(0, 326059);

procedure __SMACK_nondet_signed_short() returns ($r: i16);



const __SMACK_nondet_signed_short_int: ref;

axiom __SMACK_nondet_signed_short_int == $sub.ref(0, 327091);

procedure __SMACK_nondet_signed_short_int() returns ($r: i16);



const __SMACK_nondet_unsigned_short: ref;

axiom __SMACK_nondet_unsigned_short == $sub.ref(0, 328123);

procedure __SMACK_nondet_unsigned_short() returns ($r: i16);



const __SMACK_nondet_unsigned_short_int: ref;

axiom __SMACK_nondet_unsigned_short_int == $sub.ref(0, 329155);

procedure __SMACK_nondet_unsigned_short_int() returns ($r: i16);



const __VERIFIER_nondet_int: ref;

axiom __VERIFIER_nondet_int == $sub.ref(0, 330187);

procedure __VERIFIER_nondet_int() returns ($r: i32);
  free requires assertsPassed;



implementation __VERIFIER_nondet_int() returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2429;

  corral_source_split_2429:
    assume {:verifier.code 1} true;
    call {:si_unique_call 523} $i0 := __SMACK_nondet_int();
    call {:si_unique_call 524} {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
    call {:si_unique_call 525} {:cexpr "x"} boogie_si_record_i32($i0);
    goto corral_source_split_2430;

  corral_source_split_2430:
    assume {:verifier.code 0} true;
    $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
    goto corral_source_split_2431;

  corral_source_split_2431:
    assume {:verifier.code 0} true;
    $i2 := 0;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i1 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_2435;

  corral_source_split_2435:
    assume {:verifier.code 1} true;
    $i4 := $zext.i1.i32($i2);
    goto corral_source_split_2436;

  corral_source_split_2436:
    assume {:verifier.code 1} true;
    call {:si_unique_call 526} __VERIFIER_assume($i4);
    goto corral_source_split_2437;

  corral_source_split_2437:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_2433;

  corral_source_split_2433:
    assume {:verifier.code 1} true;
    $i3 := $sle.i32($i0, 2147483647);
    assume {:verifier.code 0} true;
    $i2 := $i3;
    goto $bb3;
}



const __SMACK_nondet_int: ref;

axiom __SMACK_nondet_int == $sub.ref(0, 331219);

procedure __SMACK_nondet_int() returns ($r: i32);



const __SMACK_nondet_signed_int: ref;

axiom __SMACK_nondet_signed_int == $sub.ref(0, 332251);

procedure __SMACK_nondet_signed_int() returns ($r: i32);



const __SMACK_nondet_unsigned: ref;

axiom __SMACK_nondet_unsigned == $sub.ref(0, 333283);

procedure __SMACK_nondet_unsigned() returns ($r: i32);



const __SMACK_nondet_unsigned_int: ref;

axiom __SMACK_nondet_unsigned_int == $sub.ref(0, 334315);

procedure __SMACK_nondet_unsigned_int() returns ($r: i32);



const __SMACK_nondet_long: ref;

axiom __SMACK_nondet_long == $sub.ref(0, 335347);

procedure __SMACK_nondet_long() returns ($r: i64);



const __SMACK_nondet_long_int: ref;

axiom __SMACK_nondet_long_int == $sub.ref(0, 336379);

procedure __SMACK_nondet_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long: ref;

axiom __SMACK_nondet_signed_long == $sub.ref(0, 337411);

procedure __SMACK_nondet_signed_long() returns ($r: i64);



const __SMACK_nondet_signed_long_int: ref;

axiom __SMACK_nondet_signed_long_int == $sub.ref(0, 338443);

procedure __SMACK_nondet_signed_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long: ref;

axiom __SMACK_nondet_unsigned_long == $sub.ref(0, 339475);

procedure __SMACK_nondet_unsigned_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_int: ref;

axiom __SMACK_nondet_unsigned_long_int == $sub.ref(0, 340507);

procedure __SMACK_nondet_unsigned_long_int() returns ($r: i64);



const __SMACK_nondet_long_long: ref;

axiom __SMACK_nondet_long_long == $sub.ref(0, 341539);

procedure __SMACK_nondet_long_long() returns ($r: i64);



const __SMACK_nondet_long_long_int: ref;

axiom __SMACK_nondet_long_long_int == $sub.ref(0, 342571);

procedure __SMACK_nondet_long_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long_long: ref;

axiom __SMACK_nondet_signed_long_long == $sub.ref(0, 343603);

procedure __SMACK_nondet_signed_long_long() returns ($r: i64);



const __SMACK_nondet_signed_long_long_int: ref;

axiom __SMACK_nondet_signed_long_long_int == $sub.ref(0, 344635);

procedure __SMACK_nondet_signed_long_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long: ref;

axiom __SMACK_nondet_unsigned_long_long == $sub.ref(0, 345667);

procedure __SMACK_nondet_unsigned_long_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long_int: ref;

axiom __SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 346699);

procedure __SMACK_nondet_unsigned_long_long_int() returns ($r: i64);



const __VERIFIER_nondet_pointer: ref;

axiom __VERIFIER_nondet_pointer == $sub.ref(0, 347731);

procedure __VERIFIER_nondet_pointer() returns ($r: ref);
  free requires assertsPassed;



implementation __VERIFIER_nondet_pointer() returns ($r: ref)
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2439;

  corral_source_split_2439:
    assume {:verifier.code 1} true;
    call {:si_unique_call 527} $p0 := __VERIFIER_nondet();
    call {:si_unique_call 528} {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
    goto corral_source_split_2440;

  corral_source_split_2440:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const __VERIFIER_nondet: ref;

axiom __VERIFIER_nondet == $sub.ref(0, 348763);

procedure __VERIFIER_nondet() returns ($r: ref);



const __SMACK_decls: ref;

axiom __SMACK_decls == $sub.ref(0, 349795);

function {:inline} $bitcast.ref.ref(i: ref) : ref
{
  i
}

function {:inline} $zext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 1bv8)
}

function {:inline} $zext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 1bv16)
}

function {:inline} $zext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 1bv24)
}

function {:inline} $zext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 1bv32)
}

function {:inline} $zext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1bv40)
}

function {:inline} $zext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 1bv48)
}

function {:inline} $zext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 1bv56)
}

function {:inline} $zext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 1bv64)
}

function {:inline} $zext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1bv80)
}

function {:inline} $zext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 1bv88)
}

function {:inline} $zext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 1bv96)
}

function {:inline} $zext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 1bv128)
}

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) : bv128;

function {:inline} $sext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 255bv8)
}

function {:inline} $sext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 65535bv16)
}

function {:inline} $sext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 16777215bv24)
}

function {:inline} $sext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 4294967295bv32)
}

function {:inline} $sext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1099511627775bv40)
}

function {:inline} $sext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 281474976710655bv48)
}

function {:inline} $sext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 72057594037927935bv56)
}

function {:inline} $sext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 18446744073709551615bv64)
}

function {:inline} $sext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1208925819614629174706175bv80)
}

function {:inline} $sext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88)
}

function {:inline} $sext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96)
}

function {:inline} $sext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128)
}

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) : bv56;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) : bv128;

function {:builtin "div"} $div(i1: int, i2: int) : int;

function {:builtin "mod"} $mod(i1: int, i2: int) : int;

function {:builtin "rem"} $rem(i1: int, i2: int) : int;

function {:inline} $min(i1: int, i2: int) : int
{
  (if i1 < i2 then i1 else i2)
}

function {:inline} $max(i1: int, i2: int) : int
{
  (if i1 > i2 then i1 else i2)
}

axiom $and.i1(0, 0) == 0;

axiom $and.i1(0, 1) == 0;

axiom $and.i1(1, 0) == 0;

axiom $and.i1(1, 1) == 1;

axiom $or.i1(0, 0) == 0;

axiom $or.i1(0, 1) == 1;

axiom $or.i1(1, 0) == 1;

axiom $or.i1(1, 1) == 1;

axiom $xor.i1(0, 0) == 0;

axiom $xor.i1(0, 1) == 1;

axiom $xor.i1(1, 0) == 1;

axiom $xor.i1(1, 1) == 0;

axiom $and.i32(32, 16) == 0;

function $fp(ipart: int, fpart: int, epart: int) : float;

function $fadd.float(i1: float, i2: float) : float;

function $fsub.float(i1: float, i2: float) : float;

function $fmul.float(i1: float, i2: float) : float;

function $fdiv.float(i1: float, i2: float) : float;

function $frem.float(i1: float, i2: float) : float;

function {:inline} $ffalse.float.bool(i1: float, i2: float) : bool
{
  false
}

function {:inline} $ftrue.float.bool(i1: float, i2: float) : bool
{
  true
}

function $foeq.float.bool(i1: float, i2: float) : bool;

function $foge.float.bool(i1: float, i2: float) : bool;

function $fogt.float.bool(i1: float, i2: float) : bool;

function $fole.float.bool(i1: float, i2: float) : bool;

function $folt.float.bool(i1: float, i2: float) : bool;

function $fone.float.bool(i1: float, i2: float) : bool;

function $ford.float.bool(i1: float, i2: float) : bool;

function $fueq.float.bool(i1: float, i2: float) : bool;

function $fuge.float.bool(i1: float, i2: float) : bool;

function $fugt.float.bool(i1: float, i2: float) : bool;

function $fule.float.bool(i1: float, i2: float) : bool;

function $fult.float.bool(i1: float, i2: float) : bool;

function $fune.float.bool(i1: float, i2: float) : bool;

function $funo.float.bool(i1: float, i2: float) : bool;

function $fp2si.float.i128(i: float) : i128;

function $fp2ui.float.i128(i: float) : i128;

function $fp2si.float.i96(i: float) : i96;

function $fp2ui.float.i96(i: float) : i96;

function $fp2si.float.i88(i: float) : i88;

function $fp2ui.float.i88(i: float) : i88;

function $fp2si.float.i80(i: float) : i80;

function $fp2ui.float.i80(i: float) : i80;

function $fp2si.float.i64(i: float) : i64;

function $fp2ui.float.i64(i: float) : i64;

function $fp2si.float.i56(i: float) : i56;

function $fp2ui.float.i56(i: float) : i56;

function $fp2si.float.i48(i: float) : i48;

function $fp2ui.float.i48(i: float) : i48;

function $fp2si.float.i40(i: float) : i40;

function $fp2ui.float.i40(i: float) : i40;

function $fp2si.float.i32(i: float) : i32;

function $fp2ui.float.i32(i: float) : i32;

function $fp2si.float.i24(i: float) : i24;

function $fp2ui.float.i24(i: float) : i24;

function $fp2si.float.i16(i: float) : i16;

function $fp2ui.float.i16(i: float) : i16;

function $fp2si.float.i8(i: float) : i8;

function $fp2ui.float.i8(i: float) : i8;

function $fp2si.float.i1(i: float) : i1;

function $fp2ui.float.i1(i: float) : i1;

function $si2fp.i128.float(i: i128) : float;

function $ui2fp.i128.float(i: i128) : float;

function $si2fp.i96.float(i: i96) : float;

function $ui2fp.i96.float(i: i96) : float;

function $si2fp.i88.float(i: i88) : float;

function $ui2fp.i88.float(i: i88) : float;

function $si2fp.i80.float(i: i80) : float;

function $ui2fp.i80.float(i: i80) : float;

function $si2fp.i64.float(i: i64) : float;

function $ui2fp.i64.float(i: i64) : float;

function $si2fp.i56.float(i: i56) : float;

function $ui2fp.i56.float(i: i56) : float;

function $si2fp.i48.float(i: i48) : float;

function $ui2fp.i48.float(i: i48) : float;

function $si2fp.i40.float(i: i40) : float;

function $ui2fp.i40.float(i: i40) : float;

function $si2fp.i32.float(i: i32) : float;

function $ui2fp.i32.float(i: i32) : float;

function $si2fp.i24.float(i: i24) : float;

function $ui2fp.i24.float(i: i24) : float;

function $si2fp.i16.float(i: i16) : float;

function $ui2fp.i16.float(i: i16) : float;

function $si2fp.i8.float(i: i8) : float;

function $ui2fp.i8.float(i: i8) : float;

function $si2fp.i1.float(i: i1) : float;

function $ui2fp.i1.float(i: i1) : float;

function $fp2si.float.bv128(i: float) : bv128;

function $fp2ui.float.bv128(i: float) : bv128;

function $fp2si.float.bv96(i: float) : bv96;

function $fp2ui.float.bv96(i: float) : bv96;

function $fp2si.float.bv88(i: float) : bv88;

function $fp2ui.float.bv88(i: float) : bv88;

function $fp2si.float.bv80(i: float) : bv80;

function $fp2ui.float.bv80(i: float) : bv80;

function $fp2si.float.bv64(i: float) : bv64;

function $fp2ui.float.bv64(i: float) : bv64;

function $fp2si.float.bv56(i: float) : bv56;

function $fp2ui.float.bv56(i: float) : bv56;

function $fp2si.float.bv48(i: float) : bv48;

function $fp2ui.float.bv48(i: float) : bv48;

function $fp2si.float.bv40(i: float) : bv40;

function $fp2ui.float.bv40(i: float) : bv40;

function $fp2si.float.bv32(i: float) : bv32;

function $fp2ui.float.bv32(i: float) : bv32;

function $fp2si.float.bv24(i: float) : bv24;

function $fp2ui.float.bv24(i: float) : bv24;

function $fp2si.float.bv16(i: float) : bv16;

function $fp2ui.float.bv16(i: float) : bv16;

function $fp2si.float.bv8(i: float) : bv8;

function $fp2ui.float.bv8(i: float) : bv8;

function $fp2si.float.bv1(i: float) : bv1;

function $fp2ui.float.bv1(i: float) : bv1;

function $si2fp.bv128.float(i: bv128) : float;

function $ui2fp.bv128.float(i: bv128) : float;

function $si2fp.bv96.float(i: bv96) : float;

function $ui2fp.bv96.float(i: bv96) : float;

function $si2fp.bv88.float(i: bv88) : float;

function $ui2fp.bv88.float(i: bv88) : float;

function $si2fp.bv80.float(i: bv80) : float;

function $ui2fp.bv80.float(i: bv80) : float;

function $si2fp.bv64.float(i: bv64) : float;

function $ui2fp.bv64.float(i: bv64) : float;

function $si2fp.bv56.float(i: bv56) : float;

function $ui2fp.bv56.float(i: bv56) : float;

function $si2fp.bv48.float(i: bv48) : float;

function $ui2fp.bv48.float(i: bv48) : float;

function $si2fp.bv40.float(i: bv40) : float;

function $ui2fp.bv40.float(i: bv40) : float;

function $si2fp.bv32.float(i: bv32) : float;

function $ui2fp.bv32.float(i: bv32) : float;

function $si2fp.bv24.float(i: bv24) : float;

function $ui2fp.bv24.float(i: bv24) : float;

function $si2fp.bv16.float(i: bv16) : float;

function $ui2fp.bv16.float(i: bv16) : float;

function $si2fp.bv8.float(i: bv8) : float;

function $ui2fp.bv8.float(i: bv8) : float;

function $si2fp.bv1.float(i: bv1) : float;

function $ui2fp.bv1.float(i: bv1) : float;

function $fptrunc.float.float(i: float) : float;

function $fpext.float.float(i: float) : float;

function $bitcast.float.i1(i: float) : i1;

function $bitcast.float.bv1(i: float) : bv1;

function $bitcast.i1.float(i: i1) : float;

function $bitcast.bv1.float(i: bv1) : float;

function $bitcast.float.i8(i: float) : i8;

function $bitcast.float.bv8(i: float) : bv8;

function $bitcast.i8.float(i: i8) : float;

function $bitcast.bv8.float(i: bv8) : float;

function $bitcast.float.i16(i: float) : i16;

function $bitcast.float.bv16(i: float) : bv16;

function $bitcast.i16.float(i: i16) : float;

function $bitcast.bv16.float(i: bv16) : float;

function $bitcast.float.i32(i: float) : i32;

function $bitcast.float.bv32(i: float) : bv32;

function $bitcast.i32.float(i: i32) : float;

function $bitcast.bv32.float(i: bv32) : float;

function $bitcast.float.i64(i: float) : i64;

function $bitcast.float.bv64(i: float) : bv64;

function $bitcast.i64.float(i: i64) : float;

function $bitcast.bv64.float(i: bv64) : float;

function $bitcast.float.i80(i: float) : i80;

function $bitcast.float.bv80(i: float) : bv80;

function $bitcast.i80.float(i: i80) : float;

function $bitcast.bv80.float(i: bv80) : float;

const $GLOBALS_BOTTOM: ref;

const $EXTERNS_BOTTOM: ref;

const $MALLOC_TOP: ref;

function {:inline} $isExternal(p: ref) : bool
{
  $slt.ref.bool(p, $EXTERNS_BOTTOM)
}

function {:inline} $load.bytes.bv16(M: [ref]bv8, p: ref) : bv16
{
  $load.bytes.bv8(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv24(M: [ref]bv8, p: ref) : bv24
{
  $load.bytes.bv16(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv32(M: [ref]bv8, p: ref) : bv32
{
  $load.bytes.bv24(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv40(M: [ref]bv8, p: ref) : bv40
{
  $load.bytes.bv32(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv48(M: [ref]bv8, p: ref) : bv48
{
  $load.bytes.bv40(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv56(M: [ref]bv8, p: ref) : bv56
{
  $load.bytes.bv48(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv64(M: [ref]bv8, p: ref) : bv64
{
  $load.bytes.bv56(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv72(M: [ref]bv8, p: ref) : bv72
{
  $load.bytes.bv64(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv80(M: [ref]bv8, p: ref) : bv80
{
  $load.bytes.bv72(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv88(M: [ref]bv8, p: ref) : bv88
{
  $load.bytes.bv80(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv96(M: [ref]bv8, p: ref) : bv96
{
  $load.bytes.bv88(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv104(M: [ref]bv8, p: ref) : bv104
{
  $load.bytes.bv96(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv112(M: [ref]bv8, p: ref) : bv112
{
  $load.bytes.bv104(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv120(M: [ref]bv8, p: ref) : bv120
{
  $load.bytes.bv112(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv128(M: [ref]bv8, p: ref) : bv128
{
  $load.bytes.bv120(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $load.bytes.bv1(M: [ref]bv8, p: ref) : bv1
{
  $trunc.bv8.bv1(M[p])
}

function {:inline} $store.bytes.bv16(M: [ref]bv8, p: ref, v: bv16) : [ref]bv8
{
  $store.bytes.bv8(M, $add.ref(p, $1.ref), v[16:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv24(M: [ref]bv8, p: ref, v: bv24) : [ref]bv8
{
  $store.bytes.bv16(M, $add.ref(p, $1.ref), v[24:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv32(M: [ref]bv8, p: ref, v: bv32) : [ref]bv8
{
  $store.bytes.bv24(M, $add.ref(p, $1.ref), v[32:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv40(M: [ref]bv8, p: ref, v: bv40) : [ref]bv8
{
  $store.bytes.bv32(M, $add.ref(p, $1.ref), v[40:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv48(M: [ref]bv8, p: ref, v: bv48) : [ref]bv8
{
  $store.bytes.bv40(M, $add.ref(p, $1.ref), v[48:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv56(M: [ref]bv8, p: ref, v: bv56) : [ref]bv8
{
  $store.bytes.bv48(M, $add.ref(p, $1.ref), v[56:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv64(M: [ref]bv8, p: ref, v: bv64) : [ref]bv8
{
  $store.bytes.bv56(M, $add.ref(p, $1.ref), v[64:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv72(M: [ref]bv8, p: ref, v: bv72) : [ref]bv8
{
  $store.bytes.bv64(M, $add.ref(p, $1.ref), v[72:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv80(M: [ref]bv8, p: ref, v: bv80) : [ref]bv8
{
  $store.bytes.bv72(M, $add.ref(p, $1.ref), v[80:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv88(M: [ref]bv8, p: ref, v: bv88) : [ref]bv8
{
  $store.bytes.bv80(M, $add.ref(p, $1.ref), v[88:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv96(M: [ref]bv8, p: ref, v: bv96) : [ref]bv8
{
  $store.bytes.bv88(M, $add.ref(p, $1.ref), v[96:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv104(M: [ref]bv8, p: ref, v: bv104) : [ref]bv8
{
  $store.bytes.bv96(M, $add.ref(p, $1.ref), v[104:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv112(M: [ref]bv8, p: ref, v: bv112) : [ref]bv8
{
  $store.bytes.bv104(M, $add.ref(p, $1.ref), v[112:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv120(M: [ref]bv8, p: ref, v: bv120) : [ref]bv8
{
  $store.bytes.bv112(M, $add.ref(p, $1.ref), v[120:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv128(M: [ref]bv8, p: ref, v: bv128) : [ref]bv8
{
  $store.bytes.bv120(M, $add.ref(p, $1.ref), v[128:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:inline} $store.bytes.bv1(M: [ref]bv8, p: ref, v: bv1) : [ref]bv8
{
  M[p := $zext.bv1.bv8(v)]
}

function {:inline} $load.ref(M: [ref]ref, p: ref) : ref
{
  M[p]
}

function {:inline} $store.ref(M: [ref]ref, p: ref, v: ref) : [ref]ref
{
  M[p := v]
}

function {:inline} $load.float(M: [ref]float, p: ref) : float
{
  M[p]
}

function {:inline} $load.unsafe.float(M: [ref]i8, p: ref) : float
{
  $bitcast.i8.float(M[p])
}

function {:inline} $store.float(M: [ref]float, p: ref, v: float) : [ref]float
{
  M[p := v]
}

function {:inline} $store.unsafe.float(M: [ref]i8, p: ref, v: float) : [ref]i8
{
  M[p := $bitcast.float.i8(v)]
}

function {:inline} $load.bytes.float(M: [ref]bv8, p: ref) : float
{
  $bitcast.bv8.float(M[p])
}

function {:inline} $store.bytes.float(M: [ref]bv8, p: ref, v: float) : [ref]bv8
{
  M[p := $bitcast.float.bv8(v)]
}

type $mop;

procedure boogie_si_record_mop(m: $mop);



const $MOP: $mop;

function $extractvalue(p: int, i: int) : int;

procedure $alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $alloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 529} p := $$alloc(n);
    return;
}



procedure $malloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $malloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 530} p := $$alloc(n);
    return;
}



procedure $$alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation {:ForceInline} $$alloc(n: ref) returns (p: ref)
{

  anon0:
    assume $sge.ref.bool(n, $0.ref);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} !$sgt.ref.bool(n, $0.ref);
    p := $0.ref;
    return;

  anon3_Then:
    assume {:partition} $sgt.ref.bool(n, $0.ref);
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
    return;
}



procedure $free(p: ref);



const __SMACK_top_decl: ref;

axiom __SMACK_top_decl == $sub.ref(0, 350827);

procedure __SMACK_top_decl.ref($p0: ref);



const __SMACK_init_func_memory_model: ref;

axiom __SMACK_init_func_memory_model == $sub.ref(0, 351859);

procedure __SMACK_init_func_memory_model();
  free requires assertsPassed;
  modifies $CurrAddr;



implementation __SMACK_init_func_memory_model()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_2442;

  corral_source_split_2442:
    assume {:verifier.code 1} true;
    $CurrAddr := $1024.ref;
    goto corral_source_split_2443;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    return;
}



const calloc: ref;

axiom calloc == $sub.ref(0, 352891);

procedure calloc($i0: i64, $i1: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $M.1, $CurrAddr;



implementation calloc($i0: i64, $i1: i64) returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
  var cmdloc_dummy_var_3: [ref]i8;
  var cmdloc_dummy_var_4: [ref]i8;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 531} {:cexpr "calloc:arg:num"} boogie_si_record_i64($i0);
    call {:si_unique_call 532} {:cexpr "calloc:arg:size"} boogie_si_record_i64($i1);
    goto corral_source_split_2445;

  corral_source_split_2445:
    assume {:verifier.code 1} true;
    call {:si_unique_call 533} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 534} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_2446;

  corral_source_split_2446:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i2, 0);
    goto corral_source_split_2447;

  corral_source_split_2447:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    goto corral_source_split_2451;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    $i5 := $mul.i64($i0, $i1);
    goto corral_source_split_2452;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    call {:si_unique_call 535} $p6 := malloc($i5);
    goto corral_source_split_2453;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    $i7 := $mul.i64($i0, $i1);
    goto corral_source_split_2454;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_3 := $M.1;
    call {:si_unique_call 536} cmdloc_dummy_var_4 := $memset.i8(cmdloc_dummy_var_3, $p6, 0, $i7, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_4;
    assume {:verifier.code 0} true;
    $p4 := $p6;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2456;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    $r := $p4;
    return;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_2449;

  corral_source_split_2449:
    assume {:verifier.code 0} true;
    $p4 := $0.ref;
    goto $bb3;
}



const llvm.dbg.value: ref;

axiom llvm.dbg.value == $sub.ref(0, 353923);

procedure llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);



const __SMACK_static_init: ref;

axiom __SMACK_static_init == $sub.ref(0, 354955);

procedure __SMACK_static_init();
  free requires assertsPassed;
  modifies $M.22, $M.16, $M.18, $M.15, $M.17, $M.19, $M.20, $M.21, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.9, $M.53, $M.52, $M.54, $M.44, $M.0, $M.14, $M.13, $M.2, $M.102, $M.103, $M.104, $M.105, $M.106, $M.107, $M.108;



implementation __SMACK_static_init()
{

  $bb0:
    call {:si_unique_call 537} {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
    $M.22 := 0;
    call {:si_unique_call 538} {:cexpr "probed_1"} boogie_si_record_i32(0);
    $M.16 := $0.ref;
    $M.18 := 0;
    call {:si_unique_call 539} {:cexpr "ref_cnt"} boogie_si_record_i32(0);
    $M.15 := $0.ref;
    $M.17 := 0;
    call {:si_unique_call 540} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
    $M.19 := 0;
    call {:si_unique_call 541} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
    $M.20 := 0;
    call {:si_unique_call 542} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
    $M.21 := 0;
    call {:si_unique_call 543} {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
    $M.23 := 0;
    call {:si_unique_call 544} {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
    $M.24 := 0;
    call {:si_unique_call 545} {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
    $M.25 := 0;
    call {:si_unique_call 546} {:cexpr "ldv_retval_21"} boogie_si_record_i32(0);
    $M.26 := 0;
    call {:si_unique_call 547} {:cexpr "ldv_retval_20"} boogie_si_record_i32(0);
    $M.27 := 0;
    call {:si_unique_call 548} {:cexpr "ldv_retval_19"} boogie_si_record_i32(0);
    $M.28 := 0;
    call {:si_unique_call 549} {:cexpr "ldv_retval_18"} boogie_si_record_i32(0);
    $M.29 := 0;
    call {:si_unique_call 550} {:cexpr "ldv_retval_17"} boogie_si_record_i32(0);
    $M.30 := 0;
    call {:si_unique_call 551} {:cexpr "ldv_retval_16"} boogie_si_record_i32(0);
    $M.31 := 0;
    call {:si_unique_call 552} {:cexpr "ldv_retval_15"} boogie_si_record_i32(0);
    $M.32 := 0;
    call {:si_unique_call 553} {:cexpr "ldv_retval_14"} boogie_si_record_i32(0);
    $M.33 := 0;
    call {:si_unique_call 554} {:cexpr "ldv_retval_13"} boogie_si_record_i32(0);
    $M.34 := 0;
    call {:si_unique_call 555} {:cexpr "ldv_retval_12"} boogie_si_record_i32(0);
    $M.35 := 0;
    call {:si_unique_call 556} {:cexpr "ldv_retval_11"} boogie_si_record_i32(0);
    $M.36 := 0;
    call {:si_unique_call 557} {:cexpr "ldv_retval_10"} boogie_si_record_i32(0);
    $M.37 := 0;
    call {:si_unique_call 558} {:cexpr "ldv_retval_9"} boogie_si_record_i32(0);
    $M.38 := 0;
    call {:si_unique_call 559} {:cexpr "ldv_retval_8"} boogie_si_record_i32(0);
    $M.39 := 0;
    call {:si_unique_call 560} {:cexpr "ldv_retval_7"} boogie_si_record_i32(0);
    $M.40 := 0;
    call {:si_unique_call 561} {:cexpr "ldv_retval_6"} boogie_si_record_i32(0);
    $M.41 := 0;
    call {:si_unique_call 562} {:cexpr "ldv_retval_5"} boogie_si_record_i32(0);
    $M.42 := 0;
    call {:si_unique_call 563} {:cexpr "ldv_retval_4"} boogie_si_record_i32(0);
    $M.43 := 0;
    call {:si_unique_call 564} {:cexpr "ldv_retval_3"} boogie_si_record_i32(0);
    $M.9 := 1;
    call {:si_unique_call 565} {:cexpr "ldv_mutex_update_lock_of_abituguru3_data"} boogie_si_record_i32(1);
    $M.53 := 1;
    call {:si_unique_call 566} {:cexpr "ldv_mutex_mutex_of_device"} boogie_si_record_i32(1);
    $M.52 := 1;
    call {:si_unique_call 567} {:cexpr "ldv_mutex_lock"} boogie_si_record_i32(1);
    $M.54 := 0;
    call {:si_unique_call 568} {:cexpr "force"} boogie_si_record_i8(0);
    $M.44 := $0.ref;
    $M.0 := $store.ref($M.0, abituguru3_sysfs_attr, .str.133);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_name);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref(abituguru3_sysfs_attr, $mul.ref(0, 56)), $mul.ref(0, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, abituguru3_sysfs_templ, .str.104);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(0, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.105);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(1, 56)), $mul.ref(49, 1)), 1);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.106);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(2, 56)), $mul.ref(49, 1)), 2);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.107);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_alarm);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(3, 56)), $mul.ref(49, 1)), 64);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.108);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_alarm);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(4, 56)), $mul.ref(49, 1)), 32);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.109);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(5, 56)), $mul.ref(49, 1)), 8);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.110);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(6, 56)), $mul.ref(49, 1)), $sub.i8(0, 128));
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.111);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(7, 56)), $mul.ref(49, 1)), 4);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.112);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(8, 56)), $mul.ref(49, 1)), 2);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.113);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_label);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(0, 560)), $mul.ref(9, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.114);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(0, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.115);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(1, 56)), $mul.ref(49, 1)), 1);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.116);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(2, 56)), $mul.ref(49, 1)), 2);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.117);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_alarm);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(3, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.118);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(4, 56)), $mul.ref(49, 1)), 8);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.119);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(5, 56)), $mul.ref(49, 1)), $sub.i8(0, 128));
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.120);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(6, 56)), $mul.ref(49, 1)), 1);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.121);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_label);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(7, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(8, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(1, 560)), $mul.ref(9, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.122);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(0, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.123);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_value);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(1, 56)), $mul.ref(49, 1)), 1);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.124);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_alarm);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(2, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.125);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(3, 56)), $mul.ref(49, 1)), 8);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.126);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(4, 56)), $mul.ref(49, 1)), $sub.i8(0, 128));
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.127);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_mask);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(5, 56)), $mul.ref(49, 1)), 1);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), .str.128);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 292);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), show_label);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(6, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(7, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(8, 56)), $mul.ref(49, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(10, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(16, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(1, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(2, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(3, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(4, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(5, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(6, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(24, 1)), $mul.ref(0, 1)), $mul.ref(7, 1)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(32, 1)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(0, 1)), $mul.ref(40, 1)), $0.ref);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(48, 1)), 0);
    $M.0 := $store.i8($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(2, 560)), $mul.ref(9, 56)), $mul.ref(49, 1)), 0);
    $M.14 := .str.103;
    $M.13 := .str.102;
    $M.0 := $store.i16($M.0, abituguru3_motherboards, 12);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.48);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(0, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(0, 1)), 13);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.50);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.51);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.52);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.53);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), .str.57);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), .str.58);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(1, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(0, 1)), 14);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(2, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(0, 1)), 15);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(3, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(0, 1)), 16);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.59);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.61);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.62);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(4, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(0, 1)), 17);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.63);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.64);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.65);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.66);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.67);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.68);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 12);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.69);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 13);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.70);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(5, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(0, 1)), 18);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.71);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.64);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.70);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.72);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.61);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(6, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(0, 1)), 19);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.50);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.51);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.52);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.53);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), .str.57);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), .str.58);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(7, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(0, 1)), 20);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.73);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), .str.74);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(8, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(0, 1)), 21);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.71);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.64);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.70);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.72);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.61);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(9, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(0, 1)), 22);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.75);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.50);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.51);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.52);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.53);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.47);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), .str.62);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(10, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(0, 1)), 23);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.71);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.64);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.65);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.78);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 13);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.79);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.68);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 12);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.80);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.81);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.82);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.48);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.83);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.84);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.85);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(11, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(0, 1)), 24);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.86);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.87);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.88);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.89);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.90);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.91);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.92);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.93);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.94);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(12, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(0, 1)), 25);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.95);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 13);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 14);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.87);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.69);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.71);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 12);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.39);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.80);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.81);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.90);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.91);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.92);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.93);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.94);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.82);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.48);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.83);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.84);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.85);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(13, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(0, 1)), 26);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.96);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), .str.97);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.88);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.89);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.98);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.45);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.91);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.92);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.93);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.94);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), .str.57);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(14, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(0, 1)), 27);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.99);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.100);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.87);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.88);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.89);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.98);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.90);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.91);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.92);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.93);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.94);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(15, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(0, 1)), 28);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), .str.101);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), .str.31);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), .str.76);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), .str.77);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), .str.87);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 3);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), .str.88);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 4);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), .str.89);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 5);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), .str.37);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 6);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), .str.38);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 7);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), .str.98);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 8);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), .str.40);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 9);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), .str.41);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 10);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 20);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), .str.42);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 11);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), .str.43);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 24);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), .str.44);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 25);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), .str.90);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 26);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), .str.91);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 27);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), .str.92);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 28);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), .str.93);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 29);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), .str.94);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 30);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), .str.46);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), .str.54);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 34);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), .str.49);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 33);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), .str.55);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 35);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), .str.56);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 36);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 2);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 60);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 1);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(16, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.i16($M.0, $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(0, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(8, 1)), $mul.ref(0, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(8, 1)), $mul.ref(1, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(8, 1)), $mul.ref(2, 8)), $0.ref);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(0, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(1, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(2, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(3, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(4, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(5, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(6, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(7, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(8, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(9, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(10, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(11, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(12, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(13, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(14, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(15, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(16, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(17, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(18, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(19, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(20, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(21, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(22, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(23, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(24, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(25, 32)), $mul.ref(24, 1)), 0);
    $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(0, 1)), $0.ref);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(20, 1)), 0);
    $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(17, 896)), $mul.ref(32, 1)), $mul.ref(26, 32)), $mul.ref(24, 1)), 0);
    $M.2 := 1;
    call {:si_unique_call 569} {:cexpr "verbose"} boogie_si_record_i8(1);
    $M.0 := $store.i8($M.0, .str.31, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(4, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(5, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(6, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(7, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.31, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.32, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.32, $mul.ref(0, 4)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.32, $mul.ref(0, 4)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.32, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.33, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(4, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(5, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(6, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.33, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.34, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(4, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(5, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(6, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(7, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(8, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(9, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(10, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(11, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.34, $mul.ref(0, 13)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, .str.35, 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(2, 1)), 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(4, 1)), 38);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(5, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(6, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(7, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(8, 1)), 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(9, 1)), 69);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(10, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(11, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(12, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(13, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(14, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.35, $mul.ref(0, 16)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, .str.36, 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(2, 1)), 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(4, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(5, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(6, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(7, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.36, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.37, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(2, 1)), 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(4, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(5, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(6, 1)), 48);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(7, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(8, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.37, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.38, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(4, 1)), 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(5, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(6, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(7, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(9, 1)), 40);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(10, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(11, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(12, 1)), 45);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(13, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(14, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(15, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(16, 1)), 41);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.38, $mul.ref(0, 18)), $mul.ref(17, 1)), 0);
    $M.0 := $store.i8($M.0, .str.39, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(4, 1)), 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(5, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(6, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(7, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(9, 1)), 40);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(10, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(11, 1)), 45);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(12, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(13, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(14, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(15, 1)), 41);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.39, $mul.ref(0, 17)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, .str.40, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(4, 1)), 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(5, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.40, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.41, 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.41, $mul.ref(0, 6)), $mul.ref(1, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.41, $mul.ref(0, 6)), $mul.ref(2, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.41, $mul.ref(0, 6)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.41, $mul.ref(0, 6)), $mul.ref(4, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.41, $mul.ref(0, 6)), $mul.ref(5, 1)), 0);
    $M.0 := $store.i8($M.0, .str.42, 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.42, $mul.ref(0, 5)), $mul.ref(1, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.42, $mul.ref(0, 5)), $mul.ref(2, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.42, $mul.ref(0, 5)), $mul.ref(3, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.42, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.43, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.43, $mul.ref(0, 4)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.43, $mul.ref(0, 4)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.43, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.44, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(1, 1)), 121);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(2, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(3, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(4, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.44, $mul.ref(0, 7)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, .str.45, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.45, $mul.ref(0, 4)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.45, $mul.ref(0, 4)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.45, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.46, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(4, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(5, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(6, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.46, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.47, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(3, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(4, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(5, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.47, $mul.ref(0, 7)), $mul.ref(6, 1)), 0);
    $M.0 := $store.i8($M.0, .str.48, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(1, 1)), 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(2, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(4, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(5, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(6, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.48, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.49, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.49, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.50, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.50, $mul.ref(0, 5)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.50, $mul.ref(0, 5)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.50, $mul.ref(0, 5)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.50, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.51, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.51, $mul.ref(0, 5)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.51, $mul.ref(0, 5)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.51, $mul.ref(0, 5)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.51, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.52, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.52, $mul.ref(0, 5)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.52, $mul.ref(0, 5)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.52, $mul.ref(0, 5)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.52, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.53, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.53, $mul.ref(0, 5)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.53, $mul.ref(0, 5)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.53, $mul.ref(0, 5)), $mul.ref(3, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.53, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.54, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(1, 1)), 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(2, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(4, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(5, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(6, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.54, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.55, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.55, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.56, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.56, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.57, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(3, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.57, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.58, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(3, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.58, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.59, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(5, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.59, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.60, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(5, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.60, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.61, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.61, $mul.ref(0, 4)), $mul.ref(1, 1)), 89);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.61, $mul.ref(0, 4)), $mul.ref(2, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.61, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.62, 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(2, 1)), 69);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(3, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(4, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(5, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(6, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(8, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.62, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.63, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(2, 1)), 56);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(4, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(5, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(6, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.63, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.64, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(4, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(5, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(6, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(7, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(9, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(10, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(11, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(12, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.64, $mul.ref(0, 14)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, .str.65, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(5, 1)), 56);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.65, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.66, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(5, 1)), 56);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(7, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(8, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(9, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(10, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(11, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.66, $mul.ref(0, 13)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, .str.67, 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(2, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(4, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(5, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(6, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.67, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.68, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(2, 1)), 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(3, 1)), 69);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(5, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(6, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(7, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(8, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.68, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.69, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(5, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.69, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.70, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.70, $mul.ref(0, 3)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.70, $mul.ref(0, 3)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, .str.71, 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(1, 1)), 121);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(2, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(3, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(4, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(5, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(6, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(8, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(9, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(10, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(11, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(12, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(13, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.71, $mul.ref(0, 15)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, .str.72, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.72, $mul.ref(0, 3)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.72, $mul.ref(0, 3)), $mul.ref(2, 1)), 0);
    $M.0 := $store.i8($M.0, .str.73, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.73, $mul.ref(0, 4)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.73, $mul.ref(0, 4)), $mul.ref(2, 1)), 57);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.73, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.74, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(2, 1)), 57);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(5, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(6, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.74, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.75, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(2, 1)), 57);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(3, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(4, 1)), 45);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(5, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(6, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(7, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.75, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.76, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.76, $mul.ref(0, 5)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.76, $mul.ref(0, 5)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.76, $mul.ref(0, 5)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.76, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.77, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(5, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(6, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(7, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.77, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.78, 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(5, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(7, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.78, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.79, 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(2, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(4, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(5, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(6, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.79, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.80, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(4, 1)), 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(5, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(6, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(7, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(8, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.80, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.81, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(4, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(5, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(6, 1)), 83);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(7, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.81, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.82, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(4, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(5, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(6, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.82, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.83, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(3, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(6, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(7, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.83, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.84, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(3, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(6, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(7, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.84, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.85, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(1, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(5, 1)), 70);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(6, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(7, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.85, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.86, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(1, 1)), 66);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(2, 1)), 57);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(4, 1)), 81);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(5, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(7, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(8, 1)), 71);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(9, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.86, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.87, 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(2, 1)), 85);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(4, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(5, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(6, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.87, $mul.ref(0, 8)), $mul.ref(7, 1)), 0);
    $M.0 := $store.i8($M.0, .str.88, 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(2, 1)), 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(4, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(5, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(6, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(7, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(8, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.88, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.89, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(1, 1)), 67);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(2, 1)), 72);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(3, 1)), 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(4, 1)), 79);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(5, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(6, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(7, 1)), 46);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(8, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(9, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.89, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.90, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(5, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(9, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.90, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.91, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(5, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(9, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.91, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.92, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(5, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(9, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.92, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.93, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(5, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(9, 1)), 52);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.93, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.94, 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(1, 1)), 87);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(2, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(4, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(5, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(9, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.94, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.95, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(1, 1)), 78);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(2, 1)), 57);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(4, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(5, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(6, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(7, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(8, 1)), 77);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(9, 1)), 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(10, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.95, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.96, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(2, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(3, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(5, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(6, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(7, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.96, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.97, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(1, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(2, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(3, 1)), 53);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(5, 1)), 80);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(6, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(7, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(9, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(10, 1)), 69);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.97, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.98, 65);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(1, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(2, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(3, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(4, 1)), 43);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(5, 1)), 49);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(6, 1)), 50);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(7, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(8, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(9, 1)), 40);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(10, 1)), 56);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(11, 1)), 45);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(12, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(13, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(14, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(15, 1)), 41);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.98, $mul.ref(0, 17)), $mul.ref(16, 1)), 0);
    $M.0 := $store.i8($M.0, .str.99, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.99, $mul.ref(0, 5)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.99, $mul.ref(0, 5)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.99, $mul.ref(0, 5)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.99, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.0 := $store.i8($M.0, .str.100, 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(1, 1)), 68);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(2, 1)), 82);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(3, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(5, 1)), 86);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(6, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(7, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.100, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.101, 73);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(1, 1)), 88);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(2, 1)), 51);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(3, 1)), 56);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(4, 1)), 32);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(5, 1)), 81);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(6, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(8, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(9, 1)), 71);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(10, 1)), 84);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.101, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.104, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(5, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(6, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(7, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(8, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(9, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.104, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.105, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(6, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.105, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.106, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(7, 1)), 120);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.106, $mul.ref(0, 9)), $mul.ref(8, 1)), 0);
    $M.0 := $store.i8($M.0, .str.107, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(6, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(8, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(10, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(11, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(12, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(13, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.107, $mul.ref(0, 15)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, .str.108, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(7, 1)), 120);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(8, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(10, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(11, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(12, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(13, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.108, $mul.ref(0, 15)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, .str.109, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(5, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(6, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(7, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(8, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.109, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.110, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(5, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(6, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(7, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(8, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(9, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(10, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(11, 1)), 119);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(12, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.110, $mul.ref(0, 14)), $mul.ref(13, 1)), 0);
    $M.0 := $store.i8($M.0, .str.111, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(6, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(8, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(10, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(11, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(12, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(13, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(14, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(15, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(16, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(17, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(18, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(19, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(20, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.111, $mul.ref(0, 22)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, .str.112, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(5, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(7, 1)), 120);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(8, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(10, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(11, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(12, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(13, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(14, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(15, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(16, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(17, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(18, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(19, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(20, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.112, $mul.ref(0, 22)), $mul.ref(21, 1)), 0);
    $M.0 := $store.i8($M.0, .str.113, 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(1, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(2, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(3, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(4, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(5, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(7, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(9, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.113, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.114, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(7, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(8, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(9, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(10, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(11, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.114, $mul.ref(0, 13)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, .str.115, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(7, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(8, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(9, 1)), 120);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.115, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.116, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(7, 1)), 99);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(8, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(9, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(10, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.116, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.117, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(8, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(10, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(11, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.117, $mul.ref(0, 13)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, .str.118, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(7, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(9, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(10, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.118, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.119, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(7, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(8, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(9, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(10, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(11, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(12, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(13, 1)), 119);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(14, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.119, $mul.ref(0, 16)), $mul.ref(15, 1)), 0);
    $M.0 := $store.i8($M.0, .str.120, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(8, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(9, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(10, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(11, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(12, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(13, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(14, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(15, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(16, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(17, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(18, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.120, $mul.ref(0, 20)), $mul.ref(19, 1)), 0);
    $M.0 := $store.i8($M.0, .str.121, 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(1, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(3, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(4, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(5, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(6, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(7, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(8, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(9, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(10, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(11, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.121, $mul.ref(0, 13)), $mul.ref(12, 1)), 0);
    $M.0 := $store.i8($M.0, .str.122, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(6, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(7, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(8, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(9, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(10, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.122, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.123, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(6, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(7, 1)), 105);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(8, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.123, $mul.ref(0, 10)), $mul.ref(9, 1)), 0);
    $M.0 := $store.i8($M.0, .str.124, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(7, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(8, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(9, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(10, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.124, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.0 := $store.i8($M.0, .str.125, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(6, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(7, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(8, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(9, 1)), 112);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.125, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.0 := $store.i8($M.0, .str.126, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(6, 1)), 115);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(7, 1)), 104);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(8, 1)), 117);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(9, 1)), 116);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(10, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(11, 1)), 111);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(12, 1)), 119);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(13, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.126, $mul.ref(0, 15)), $mul.ref(14, 1)), 0);
    $M.0 := $store.i8($M.0, .str.127, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(6, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(7, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(8, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(9, 1)), 114);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(10, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(11, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(12, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(13, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(14, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(15, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(16, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(17, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.127, $mul.ref(0, 19)), $mul.ref(18, 1)), 0);
    $M.0 := $store.i8($M.0, .str.128, 102);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(2, 1)), 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(3, 1)), 37);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(4, 1)), 100);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(5, 1)), 95);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(6, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(7, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(8, 1)), 98);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(9, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(10, 1)), 108);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.128, $mul.ref(0, 12)), $mul.ref(11, 1)), 0);
    $M.102 := $store.i8($M.102, .str.132, 37);
    $M.102 := $store.i8($M.102, $add.ref($add.ref(.str.132, $mul.ref(0, 4)), $mul.ref(1, 1)), 115);
    $M.102 := $store.i8($M.102, $add.ref($add.ref(.str.132, $mul.ref(0, 4)), $mul.ref(2, 1)), 10);
    $M.102 := $store.i8($M.102, $add.ref($add.ref(.str.132, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.103 := $store.i8($M.103, .str.130, 49);
    $M.103 := $store.i8($M.103, $add.ref($add.ref(.str.130, $mul.ref(0, 3)), $mul.ref(1, 1)), 10);
    $M.103 := $store.i8($M.103, $add.ref($add.ref(.str.130, $mul.ref(0, 3)), $mul.ref(2, 1)), 0);
    $M.104 := $store.i8($M.104, .str.131, 48);
    $M.104 := $store.i8($M.104, $add.ref($add.ref(.str.131, $mul.ref(0, 3)), $mul.ref(1, 1)), 10);
    $M.104 := $store.i8($M.104, $add.ref($add.ref(.str.131, $mul.ref(0, 3)), $mul.ref(2, 1)), 0);
    $M.105 := $store.i8($M.105, .str.5, 97);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(1, 1)), 98);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(2, 1)), 105);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(3, 1)), 116);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(4, 1)), 117);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(5, 1)), 103);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(6, 1)), 117);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(7, 1)), 114);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(8, 1)), 117);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(9, 1)), 51);
    $M.105 := $store.i8($M.105, $add.ref($add.ref(.str.5, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.106 := $store.i8($M.106, .str.129, 37);
    $M.106 := $store.i8($M.106, $add.ref($add.ref(.str.129, $mul.ref(0, 4)), $mul.ref(1, 1)), 100);
    $M.106 := $store.i8($M.106, $add.ref($add.ref(.str.129, $mul.ref(0, 4)), $mul.ref(2, 1)), 10);
    $M.106 := $store.i8($M.106, $add.ref($add.ref(.str.129, $mul.ref(0, 4)), $mul.ref(3, 1)), 0);
    $M.0 := $store.i8($M.0, .str.133, 110);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.133, $mul.ref(0, 5)), $mul.ref(1, 1)), 97);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.133, $mul.ref(0, 5)), $mul.ref(2, 1)), 109);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.133, $mul.ref(0, 5)), $mul.ref(3, 1)), 101);
    $M.0 := $store.i8($M.0, $add.ref($add.ref(.str.133, $mul.ref(0, 5)), $mul.ref(4, 1)), 0);
    $M.107 := $store.i8($M.107, .str.138, 104);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(1, 1)), 116);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(2, 1)), 116);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(3, 1)), 112);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(4, 1)), 58);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(5, 1)), 47);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(6, 1)), 47);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(7, 1)), 119);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(8, 1)), 119);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(9, 1)), 119);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(10, 1)), 46);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(11, 1)), 97);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(12, 1)), 98);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(13, 1)), 105);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(14, 1)), 116);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(15, 1)), 46);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(16, 1)), 99);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(17, 1)), 111);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(18, 1)), 109);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(19, 1)), 46);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(20, 1)), 116);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(21, 1)), 119);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(22, 1)), 47);
    $M.107 := $store.i8($M.107, $add.ref($add.ref(.str.138, $mul.ref(0, 24)), $mul.ref(23, 1)), 0);
    $M.108 := $store.i8($M.108, .str.139, 40);
    $M.108 := $store.i8($M.108, $add.ref($add.ref(.str.139, $mul.ref(0, 2)), $mul.ref(1, 1)), 0);
    call {:si_unique_call 570} {:cexpr "errno_global"} boogie_si_record_i32(0);
    return;
}



const devirtbounce: ref;

axiom devirtbounce == $sub.ref(0, 355987);

procedure devirtbounce(funcPtr: ref, arg: i8, arg1: i32);
  free requires assertsPassed;



implementation devirtbounce(funcPtr: ref, arg: i8, arg1: i32)
{

  $bb0:
    goto $bb1;

  $bb1:
    return;
}



const devirtbounce.1: ref;

axiom devirtbounce.1 == $sub.ref(0, 357019);

procedure devirtbounce.1(funcPtr: ref, arg: i32) returns ($r: i8);
  free requires assertsPassed;



implementation devirtbounce.1(funcPtr: ref, arg: i32) returns ($r: i8)
{

  $bb0:
    goto $bb1;

  $bb1:
    return;
}



const devirtbounce.2: ref;

axiom devirtbounce.2 == $sub.ref(0, 358051);

procedure devirtbounce.2(funcPtr: ref);
  free requires assertsPassed;



implementation devirtbounce.2(funcPtr: ref)
{

  $bb0:
    goto $bb1;

  $bb1:
    return;
}



procedure $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src, dst), x)]);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M.dst[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M.dst[x]);
    return;
}



procedure $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == val);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M[x]);
    return;
}



procedure boogie_si_record_i16(x: i16);



procedure boogie_si_record_i32(x: i32);



procedure boogie_si_record_i64(x: i64);



procedure boogie_si_record_i8(x: i8);



procedure boogie_si_record_ref(x: ref);



procedure $initialize();
  free requires assertsPassed;
  modifies $M.22, $M.16, $M.18, $M.15, $M.17, $M.19, $M.20, $M.21, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.9, $M.53, $M.52, $M.54, $M.44, $M.0, $M.14, $M.13, $M.2, $M.102, $M.103, $M.104, $M.105, $M.106, $M.107, $M.108, $CurrAddr;



implementation $initialize()
{

  anon0:
    call {:si_unique_call 571} __SMACK_static_init();
    call {:si_unique_call 572} __SMACK_init_func_memory_model();
    return;
}



function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $add.i1(i1: i1, i2: i1) : i1
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $sub.i1(i1: i1, i2: i1) : i1
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $mul.i1(i1: i1, i2: i1) : i1
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) : bv1;

function $shl.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) : bv1;

function $lshr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) : bv1;

function $ashr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) : bv1;

function $and.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) : bv1;

function $or.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) : bv1;

function $xor.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) : bv1;

function $nand.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ule.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ule.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $ule.i1(i1: i1, i2: i1) : i1
{
  (if $ule.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ult.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $ult.i1(i1: i1, i2: i1) : i1
{
  (if $ult.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $uge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $uge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $uge.i1(i1: i1, i2: i1) : i1
{
  (if $uge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ugt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $ugt.i1(i1: i1, i2: i1) : i1
{
  (if $ugt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sle.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sle.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $sle.i1(i1: i1, i2: i1) : i1
{
  (if $sle.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $slt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $slt.i1(i1: i1, i2: i1) : i1
{
  (if $slt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $sge.i1(i1: i1, i2: i1) : i1
{
  (if $sge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sgt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $sgt.i1(i1: i1, i2: i1) : i1
{
  (if $sgt.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 == i2
}

function {:inline} $eq.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $eq.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i1.bool(i1: i1, i2: i1) : bool
{
  i1 == i2
}

function {:inline} $eq.i1(i1: i1, i2: i1) : i1
{
  (if $eq.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 != i2
}

function {:inline} $ne.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ne.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i1.bool(i1: i1, i2: i1) : bool
{
  i1 != i2
}

function {:inline} $ne.i1(i1: i1, i2: i1) : i1
{
  (if $ne.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $smax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:inline} $umin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $umax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv1(i1: bv1) : bv1;

function $not.i1(i1: i1) : i1;

function {:inline} $load.i1(M: [ref]i1, p: ref) : i1
{
  M[p]
}

function {:inline} $load.bv1(M: [ref]bv1, p: ref) : bv1
{
  M[p]
}

function {:inline} $store.i1(M: [ref]i1, p: ref, v: i1) : [ref]i1
{
  M[p := v]
}

function {:inline} $store.bv1(M: [ref]bv1, p: ref, v: bv1) : [ref]bv1
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $add.i5(i1: i5, i2: i5) : i5
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $sub.i5(i1: i5, i2: i5) : i5
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $mul.i5(i1: i5, i2: i5) : i5
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsmod"} $smod.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsrem"} $srem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $srem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvudiv"} $udiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvurem"} $urem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $urem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvshl"} $shl.bv5(i1: bv5, i2: bv5) : bv5;

function $shl.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvlshr"} $lshr.bv5(i1: bv5, i2: bv5) : bv5;

function $lshr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvashr"} $ashr.bv5(i1: bv5, i2: bv5) : bv5;

function $ashr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvand"} $and.bv5(i1: bv5, i2: bv5) : bv5;

function $and.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvor"} $or.bv5(i1: bv5, i2: bv5) : bv5;

function $or.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvxor"} $xor.bv5(i1: bv5, i2: bv5) : bv5;

function $xor.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvnand"} $nand.bv5(i1: bv5, i2: bv5) : bv5;

function $nand.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvule"} $ule.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ule.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ule.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $ule.i5(i1: i5, i2: i5) : i1
{
  (if $ule.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ult.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ult.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $ult.i5(i1: i5, i2: i5) : i1
{
  (if $ult.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $uge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $uge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $uge.i5(i1: i5, i2: i5) : i1
{
  (if $uge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ugt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ugt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $ugt.i5(i1: i5, i2: i5) : i1
{
  (if $ugt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sle.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sle.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $sle.i5(i1: i5, i2: i5) : i1
{
  (if $sle.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $slt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $slt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $slt.i5(i1: i5, i2: i5) : i1
{
  (if $slt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $sge.i5(i1: i5, i2: i5) : i1
{
  (if $sge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sgt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sgt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $sgt.i5(i1: i5, i2: i5) : i1
{
  (if $sgt.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 == i2
}

function {:inline} $eq.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $eq.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i5.bool(i1: i5, i2: i5) : bool
{
  i1 == i2
}

function {:inline} $eq.i5(i1: i5, i2: i5) : i1
{
  (if $eq.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 != i2
}

function {:inline} $ne.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ne.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i5.bool(i1: i5, i2: i5) : bool
{
  i1 != i2
}

function {:inline} $ne.i5(i1: i5, i2: i5) : i1
{
  (if $ne.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $slt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $sgt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ult.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ugt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $smax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:inline} $umin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $umax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv5(i1: bv5) : bv5;

function $not.i5(i1: i5) : i5;

function {:inline} $load.i5(M: [ref]i5, p: ref) : i5
{
  M[p]
}

function {:inline} $load.bv5(M: [ref]bv5, p: ref) : bv5
{
  M[p]
}

function {:inline} $store.i5(M: [ref]i5, p: ref, v: i5) : [ref]i5
{
  M[p := v]
}

function {:inline} $store.bv5(M: [ref]bv5, p: ref, v: bv5) : [ref]bv5
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $add.i6(i1: i6, i2: i6) : i6
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $sub.i6(i1: i6, i2: i6) : i6
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $mul.i6(i1: i6, i2: i6) : i6
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsmod"} $smod.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsrem"} $srem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $srem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvudiv"} $udiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvurem"} $urem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $urem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvshl"} $shl.bv6(i1: bv6, i2: bv6) : bv6;

function $shl.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvlshr"} $lshr.bv6(i1: bv6, i2: bv6) : bv6;

function $lshr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvashr"} $ashr.bv6(i1: bv6, i2: bv6) : bv6;

function $ashr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvand"} $and.bv6(i1: bv6, i2: bv6) : bv6;

function $and.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvor"} $or.bv6(i1: bv6, i2: bv6) : bv6;

function $or.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvxor"} $xor.bv6(i1: bv6, i2: bv6) : bv6;

function $xor.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvnand"} $nand.bv6(i1: bv6, i2: bv6) : bv6;

function $nand.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvule"} $ule.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ule.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ule.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $ule.i6(i1: i6, i2: i6) : i1
{
  (if $ule.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ult.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ult.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $ult.i6(i1: i6, i2: i6) : i1
{
  (if $ult.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $uge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $uge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $uge.i6(i1: i6, i2: i6) : i1
{
  (if $uge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ugt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ugt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $ugt.i6(i1: i6, i2: i6) : i1
{
  (if $ugt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sle.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sle.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $sle.i6(i1: i6, i2: i6) : i1
{
  (if $sle.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $slt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $slt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $slt.i6(i1: i6, i2: i6) : i1
{
  (if $slt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $sge.i6(i1: i6, i2: i6) : i1
{
  (if $sge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sgt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sgt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $sgt.i6(i1: i6, i2: i6) : i1
{
  (if $sgt.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 == i2
}

function {:inline} $eq.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $eq.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i6.bool(i1: i6, i2: i6) : bool
{
  i1 == i2
}

function {:inline} $eq.i6(i1: i6, i2: i6) : i1
{
  (if $eq.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 != i2
}

function {:inline} $ne.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ne.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i6.bool(i1: i6, i2: i6) : bool
{
  i1 != i2
}

function {:inline} $ne.i6(i1: i6, i2: i6) : i1
{
  (if $ne.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $slt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $sgt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ult.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ugt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $smax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:inline} $umin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $umax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv6(i1: bv6) : bv6;

function $not.i6(i1: i6) : i6;

function {:inline} $load.i6(M: [ref]i6, p: ref) : i6
{
  M[p]
}

function {:inline} $load.bv6(M: [ref]bv6, p: ref) : bv6
{
  M[p]
}

function {:inline} $store.i6(M: [ref]i6, p: ref, v: i6) : [ref]i6
{
  M[p := v]
}

function {:inline} $store.bv6(M: [ref]bv6, p: ref, v: bv6) : [ref]bv6
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $add.i8(i1: i8, i2: i8) : i8
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $sub.i8(i1: i8, i2: i8) : i8
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $mul.i8(i1: i8, i2: i8) : i8
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) : bv8;

function $shl.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) : bv8;

function $lshr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) : bv8;

function $ashr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) : bv8;

function $and.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) : bv8;

function $or.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) : bv8;

function $xor.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) : bv8;

function $nand.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ule.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ule.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $ule.i8(i1: i8, i2: i8) : i1
{
  (if $ule.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ult.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ult.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $ult.i8(i1: i8, i2: i8) : i1
{
  (if $ult.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $uge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $uge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $uge.i8(i1: i8, i2: i8) : i1
{
  (if $uge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ugt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ugt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $ugt.i8(i1: i8, i2: i8) : i1
{
  (if $ugt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sle.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sle.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $sle.i8(i1: i8, i2: i8) : i1
{
  (if $sle.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $slt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $slt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $slt.i8(i1: i8, i2: i8) : i1
{
  (if $slt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $sge.i8(i1: i8, i2: i8) : i1
{
  (if $sge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sgt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sgt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $sgt.i8(i1: i8, i2: i8) : i1
{
  (if $sgt.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 == i2
}

function {:inline} $eq.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $eq.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i8.bool(i1: i8, i2: i8) : bool
{
  i1 == i2
}

function {:inline} $eq.i8(i1: i8, i2: i8) : i1
{
  (if $eq.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 != i2
}

function {:inline} $ne.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ne.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i8.bool(i1: i8, i2: i8) : bool
{
  i1 != i2
}

function {:inline} $ne.i8(i1: i8, i2: i8) : i1
{
  (if $ne.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $slt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $sgt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ult.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ugt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $smax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:inline} $umin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $umax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv8(i1: bv8) : bv8;

function $not.i8(i1: i8) : i8;

function {:inline} $load.i8(M: [ref]i8, p: ref) : i8
{
  M[p]
}

function {:inline} $load.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $store.i8(M: [ref]i8, p: ref, v: i8) : [ref]i8
{
  M[p := v]
}

function {:inline} $store.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $add.i16(i1: i16, i2: i16) : i16
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $sub.i16(i1: i16, i2: i16) : i16
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $mul.i16(i1: i16, i2: i16) : i16
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) : bv16;

function $shl.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) : bv16;

function $lshr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) : bv16;

function $ashr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) : bv16;

function $and.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) : bv16;

function $or.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) : bv16;

function $xor.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) : bv16;

function $nand.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ule.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ule.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $ule.i16(i1: i16, i2: i16) : i1
{
  (if $ule.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ult.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ult.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $ult.i16(i1: i16, i2: i16) : i1
{
  (if $ult.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $uge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $uge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $uge.i16(i1: i16, i2: i16) : i1
{
  (if $uge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ugt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ugt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $ugt.i16(i1: i16, i2: i16) : i1
{
  (if $ugt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sle.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sle.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $sle.i16(i1: i16, i2: i16) : i1
{
  (if $sle.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $slt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $slt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $slt.i16(i1: i16, i2: i16) : i1
{
  (if $slt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $sge.i16(i1: i16, i2: i16) : i1
{
  (if $sge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sgt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sgt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $sgt.i16(i1: i16, i2: i16) : i1
{
  (if $sgt.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 == i2
}

function {:inline} $eq.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $eq.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i16.bool(i1: i16, i2: i16) : bool
{
  i1 == i2
}

function {:inline} $eq.i16(i1: i16, i2: i16) : i1
{
  (if $eq.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 != i2
}

function {:inline} $ne.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ne.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i16.bool(i1: i16, i2: i16) : bool
{
  i1 != i2
}

function {:inline} $ne.i16(i1: i16, i2: i16) : i1
{
  (if $ne.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $slt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $sgt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ult.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ugt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $smax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:inline} $umin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $umax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv16(i1: bv16) : bv16;

function $not.i16(i1: i16) : i16;

function {:inline} $load.i16(M: [ref]i16, p: ref) : i16
{
  M[p]
}

function {:inline} $load.bv16(M: [ref]bv16, p: ref) : bv16
{
  M[p]
}

function {:inline} $store.i16(M: [ref]i16, p: ref, v: i16) : [ref]i16
{
  M[p := v]
}

function {:inline} $store.bv16(M: [ref]bv16, p: ref, v: bv16) : [ref]bv16
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $add.i24(i1: i24, i2: i24) : i24
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $sub.i24(i1: i24, i2: i24) : i24
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $mul.i24(i1: i24, i2: i24) : i24
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) : bv24;

function $shl.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) : bv24;

function $lshr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) : bv24;

function $ashr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) : bv24;

function $and.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) : bv24;

function $or.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) : bv24;

function $xor.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) : bv24;

function $nand.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ule.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ule.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $ule.i24(i1: i24, i2: i24) : i1
{
  (if $ule.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ult.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ult.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $ult.i24(i1: i24, i2: i24) : i1
{
  (if $ult.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $uge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $uge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $uge.i24(i1: i24, i2: i24) : i1
{
  (if $uge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ugt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ugt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $ugt.i24(i1: i24, i2: i24) : i1
{
  (if $ugt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sle.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sle.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $sle.i24(i1: i24, i2: i24) : i1
{
  (if $sle.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $slt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $slt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $slt.i24(i1: i24, i2: i24) : i1
{
  (if $slt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $sge.i24(i1: i24, i2: i24) : i1
{
  (if $sge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sgt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sgt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $sgt.i24(i1: i24, i2: i24) : i1
{
  (if $sgt.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 == i2
}

function {:inline} $eq.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $eq.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i24.bool(i1: i24, i2: i24) : bool
{
  i1 == i2
}

function {:inline} $eq.i24(i1: i24, i2: i24) : i1
{
  (if $eq.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 != i2
}

function {:inline} $ne.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ne.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i24.bool(i1: i24, i2: i24) : bool
{
  i1 != i2
}

function {:inline} $ne.i24(i1: i24, i2: i24) : i1
{
  (if $ne.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $slt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $sgt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ult.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ugt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $smax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:inline} $umin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $umax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv24(i1: bv24) : bv24;

function $not.i24(i1: i24) : i24;

function {:inline} $load.i24(M: [ref]i24, p: ref) : i24
{
  M[p]
}

function {:inline} $load.bv24(M: [ref]bv24, p: ref) : bv24
{
  M[p]
}

function {:inline} $store.i24(M: [ref]i24, p: ref, v: i24) : [ref]i24
{
  M[p := v]
}

function {:inline} $store.bv24(M: [ref]bv24, p: ref, v: bv24) : [ref]bv24
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $add.i32(i1: i32, i2: i32) : i32
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $sub.i32(i1: i32, i2: i32) : i32
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $mul.i32(i1: i32, i2: i32) : i32
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) : bv32;

function $shl.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) : bv32;

function $lshr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) : bv32;

function $ashr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) : bv32;

function $and.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) : bv32;

function $or.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) : bv32;

function $xor.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) : bv32;

function $nand.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ule.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ule.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $ule.i32(i1: i32, i2: i32) : i1
{
  (if $ule.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ult.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ult.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $ult.i32(i1: i32, i2: i32) : i1
{
  (if $ult.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $uge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $uge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $uge.i32(i1: i32, i2: i32) : i1
{
  (if $uge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ugt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ugt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $ugt.i32(i1: i32, i2: i32) : i1
{
  (if $ugt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sle.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sle.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $sle.i32(i1: i32, i2: i32) : i1
{
  (if $sle.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $slt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $slt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $slt.i32(i1: i32, i2: i32) : i1
{
  (if $slt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $sge.i32(i1: i32, i2: i32) : i1
{
  (if $sge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sgt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sgt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $sgt.i32(i1: i32, i2: i32) : i1
{
  (if $sgt.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 == i2
}

function {:inline} $eq.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $eq.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i32.bool(i1: i32, i2: i32) : bool
{
  i1 == i2
}

function {:inline} $eq.i32(i1: i32, i2: i32) : i1
{
  (if $eq.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 != i2
}

function {:inline} $ne.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ne.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i32.bool(i1: i32, i2: i32) : bool
{
  i1 != i2
}

function {:inline} $ne.i32(i1: i32, i2: i32) : i1
{
  (if $ne.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $slt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $sgt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ult.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ugt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $smax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:inline} $umin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $umax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv32(i1: bv32) : bv32;

function $not.i32(i1: i32) : i32;

function {:inline} $load.i32(M: [ref]i32, p: ref) : i32
{
  M[p]
}

function {:inline} $load.bv32(M: [ref]bv32, p: ref) : bv32
{
  M[p]
}

function {:inline} $store.i32(M: [ref]i32, p: ref, v: i32) : [ref]i32
{
  M[p := v]
}

function {:inline} $store.bv32(M: [ref]bv32, p: ref, v: bv32) : [ref]bv32
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $add.i40(i1: i40, i2: i40) : i40
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $sub.i40(i1: i40, i2: i40) : i40
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $mul.i40(i1: i40, i2: i40) : i40
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) : bv40;

function $shl.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) : bv40;

function $lshr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) : bv40;

function $ashr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) : bv40;

function $and.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) : bv40;

function $or.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) : bv40;

function $xor.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) : bv40;

function $nand.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ule.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ule.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $ule.i40(i1: i40, i2: i40) : i1
{
  (if $ule.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ult.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ult.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $ult.i40(i1: i40, i2: i40) : i1
{
  (if $ult.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $uge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $uge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $uge.i40(i1: i40, i2: i40) : i1
{
  (if $uge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ugt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ugt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $ugt.i40(i1: i40, i2: i40) : i1
{
  (if $ugt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sle.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sle.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $sle.i40(i1: i40, i2: i40) : i1
{
  (if $sle.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $slt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $slt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $slt.i40(i1: i40, i2: i40) : i1
{
  (if $slt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $sge.i40(i1: i40, i2: i40) : i1
{
  (if $sge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sgt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sgt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $sgt.i40(i1: i40, i2: i40) : i1
{
  (if $sgt.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 == i2
}

function {:inline} $eq.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $eq.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i40.bool(i1: i40, i2: i40) : bool
{
  i1 == i2
}

function {:inline} $eq.i40(i1: i40, i2: i40) : i1
{
  (if $eq.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 != i2
}

function {:inline} $ne.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ne.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i40.bool(i1: i40, i2: i40) : bool
{
  i1 != i2
}

function {:inline} $ne.i40(i1: i40, i2: i40) : i1
{
  (if $ne.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $slt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $sgt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ult.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ugt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $smax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:inline} $umin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $umax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv40(i1: bv40) : bv40;

function $not.i40(i1: i40) : i40;

function {:inline} $load.i40(M: [ref]i40, p: ref) : i40
{
  M[p]
}

function {:inline} $load.bv40(M: [ref]bv40, p: ref) : bv40
{
  M[p]
}

function {:inline} $store.i40(M: [ref]i40, p: ref, v: i40) : [ref]i40
{
  M[p := v]
}

function {:inline} $store.bv40(M: [ref]bv40, p: ref, v: bv40) : [ref]bv40
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $add.i48(i1: i48, i2: i48) : i48
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $sub.i48(i1: i48, i2: i48) : i48
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $mul.i48(i1: i48, i2: i48) : i48
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) : bv48;

function $shl.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) : bv48;

function $lshr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) : bv48;

function $ashr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) : bv48;

function $and.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) : bv48;

function $or.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) : bv48;

function $xor.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) : bv48;

function $nand.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ule.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ule.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $ule.i48(i1: i48, i2: i48) : i1
{
  (if $ule.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ult.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ult.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $ult.i48(i1: i48, i2: i48) : i1
{
  (if $ult.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $uge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $uge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $uge.i48(i1: i48, i2: i48) : i1
{
  (if $uge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ugt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ugt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $ugt.i48(i1: i48, i2: i48) : i1
{
  (if $ugt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sle.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sle.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $sle.i48(i1: i48, i2: i48) : i1
{
  (if $sle.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $slt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $slt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $slt.i48(i1: i48, i2: i48) : i1
{
  (if $slt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $sge.i48(i1: i48, i2: i48) : i1
{
  (if $sge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sgt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sgt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $sgt.i48(i1: i48, i2: i48) : i1
{
  (if $sgt.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 == i2
}

function {:inline} $eq.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $eq.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i48.bool(i1: i48, i2: i48) : bool
{
  i1 == i2
}

function {:inline} $eq.i48(i1: i48, i2: i48) : i1
{
  (if $eq.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 != i2
}

function {:inline} $ne.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ne.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i48.bool(i1: i48, i2: i48) : bool
{
  i1 != i2
}

function {:inline} $ne.i48(i1: i48, i2: i48) : i1
{
  (if $ne.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $slt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $sgt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ult.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ugt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $smax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:inline} $umin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $umax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv48(i1: bv48) : bv48;

function $not.i48(i1: i48) : i48;

function {:inline} $load.i48(M: [ref]i48, p: ref) : i48
{
  M[p]
}

function {:inline} $load.bv48(M: [ref]bv48, p: ref) : bv48
{
  M[p]
}

function {:inline} $store.i48(M: [ref]i48, p: ref, v: i48) : [ref]i48
{
  M[p := v]
}

function {:inline} $store.bv48(M: [ref]bv48, p: ref, v: bv48) : [ref]bv48
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $add.i56(i1: i56, i2: i56) : i56
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $sub.i56(i1: i56, i2: i56) : i56
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $mul.i56(i1: i56, i2: i56) : i56
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) : bv56;

function $shl.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) : bv56;

function $lshr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) : bv56;

function $ashr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) : bv56;

function $and.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) : bv56;

function $or.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) : bv56;

function $xor.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) : bv56;

function $nand.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ule.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ule.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $ule.i56(i1: i56, i2: i56) : i1
{
  (if $ule.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ult.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ult.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $ult.i56(i1: i56, i2: i56) : i1
{
  (if $ult.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $uge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $uge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $uge.i56(i1: i56, i2: i56) : i1
{
  (if $uge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ugt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ugt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $ugt.i56(i1: i56, i2: i56) : i1
{
  (if $ugt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sle.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sle.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $sle.i56(i1: i56, i2: i56) : i1
{
  (if $sle.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $slt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $slt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $slt.i56(i1: i56, i2: i56) : i1
{
  (if $slt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $sge.i56(i1: i56, i2: i56) : i1
{
  (if $sge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sgt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sgt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $sgt.i56(i1: i56, i2: i56) : i1
{
  (if $sgt.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 == i2
}

function {:inline} $eq.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $eq.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i56.bool(i1: i56, i2: i56) : bool
{
  i1 == i2
}

function {:inline} $eq.i56(i1: i56, i2: i56) : i1
{
  (if $eq.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 != i2
}

function {:inline} $ne.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ne.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i56.bool(i1: i56, i2: i56) : bool
{
  i1 != i2
}

function {:inline} $ne.i56(i1: i56, i2: i56) : i1
{
  (if $ne.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $slt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $sgt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ult.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ugt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $smax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:inline} $umin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $umax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv56(i1: bv56) : bv56;

function $not.i56(i1: i56) : i56;

function {:inline} $load.i56(M: [ref]i56, p: ref) : i56
{
  M[p]
}

function {:inline} $load.bv56(M: [ref]bv56, p: ref) : bv56
{
  M[p]
}

function {:inline} $store.i56(M: [ref]i56, p: ref, v: i56) : [ref]i56
{
  M[p := v]
}

function {:inline} $store.bv56(M: [ref]bv56, p: ref, v: bv56) : [ref]bv56
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $add.i64(i1: i64, i2: i64) : i64
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $sub.i64(i1: i64, i2: i64) : i64
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $mul.i64(i1: i64, i2: i64) : i64
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) : bv64;

function $shl.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) : bv64;

function $lshr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) : bv64;

function $ashr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) : bv64;

function $and.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) : bv64;

function $or.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) : bv64;

function $xor.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) : bv64;

function $nand.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ule.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ule.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $ule.i64(i1: i64, i2: i64) : i1
{
  (if $ule.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ult.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ult.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $ult.i64(i1: i64, i2: i64) : i1
{
  (if $ult.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $uge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $uge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $uge.i64(i1: i64, i2: i64) : i1
{
  (if $uge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ugt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ugt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $ugt.i64(i1: i64, i2: i64) : i1
{
  (if $ugt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sle.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sle.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $sle.i64(i1: i64, i2: i64) : i1
{
  (if $sle.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $slt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $slt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $slt.i64(i1: i64, i2: i64) : i1
{
  (if $slt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $sge.i64(i1: i64, i2: i64) : i1
{
  (if $sge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sgt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sgt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $sgt.i64(i1: i64, i2: i64) : i1
{
  (if $sgt.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 == i2
}

function {:inline} $eq.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $eq.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i64.bool(i1: i64, i2: i64) : bool
{
  i1 == i2
}

function {:inline} $eq.i64(i1: i64, i2: i64) : i1
{
  (if $eq.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 != i2
}

function {:inline} $ne.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ne.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i64.bool(i1: i64, i2: i64) : bool
{
  i1 != i2
}

function {:inline} $ne.i64(i1: i64, i2: i64) : i1
{
  (if $ne.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $slt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $sgt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ult.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ugt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $smax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:inline} $umin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $umax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv64(i1: bv64) : bv64;

function $not.i64(i1: i64) : i64;

function {:inline} $load.i64(M: [ref]i64, p: ref) : i64
{
  M[p]
}

function {:inline} $load.bv64(M: [ref]bv64, p: ref) : bv64
{
  M[p]
}

function {:inline} $store.i64(M: [ref]i64, p: ref, v: i64) : [ref]i64
{
  M[p := v]
}

function {:inline} $store.bv64(M: [ref]bv64, p: ref, v: bv64) : [ref]bv64
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $add.i80(i1: i80, i2: i80) : i80
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $sub.i80(i1: i80, i2: i80) : i80
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $mul.i80(i1: i80, i2: i80) : i80
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsmod"} $smod.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsrem"} $srem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $srem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvudiv"} $udiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvurem"} $urem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $urem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvshl"} $shl.bv80(i1: bv80, i2: bv80) : bv80;

function $shl.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvlshr"} $lshr.bv80(i1: bv80, i2: bv80) : bv80;

function $lshr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvashr"} $ashr.bv80(i1: bv80, i2: bv80) : bv80;

function $ashr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvand"} $and.bv80(i1: bv80, i2: bv80) : bv80;

function $and.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvor"} $or.bv80(i1: bv80, i2: bv80) : bv80;

function $or.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvxor"} $xor.bv80(i1: bv80, i2: bv80) : bv80;

function $xor.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvnand"} $nand.bv80(i1: bv80, i2: bv80) : bv80;

function $nand.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvule"} $ule.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ule.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ule.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $ule.i80(i1: i80, i2: i80) : i1
{
  (if $ule.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ult.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ult.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $ult.i80(i1: i80, i2: i80) : i1
{
  (if $ult.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $uge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $uge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $uge.i80(i1: i80, i2: i80) : i1
{
  (if $uge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ugt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ugt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $ugt.i80(i1: i80, i2: i80) : i1
{
  (if $ugt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sle.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sle.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $sle.i80(i1: i80, i2: i80) : i1
{
  (if $sle.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $slt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $slt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $slt.i80(i1: i80, i2: i80) : i1
{
  (if $slt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $sge.i80(i1: i80, i2: i80) : i1
{
  (if $sge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sgt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sgt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $sgt.i80(i1: i80, i2: i80) : i1
{
  (if $sgt.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 == i2
}

function {:inline} $eq.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $eq.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i80.bool(i1: i80, i2: i80) : bool
{
  i1 == i2
}

function {:inline} $eq.i80(i1: i80, i2: i80) : i1
{
  (if $eq.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 != i2
}

function {:inline} $ne.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ne.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i80.bool(i1: i80, i2: i80) : bool
{
  i1 != i2
}

function {:inline} $ne.i80(i1: i80, i2: i80) : i1
{
  (if $ne.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $slt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $sgt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ult.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ugt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $smax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:inline} $umin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $umax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv80(i1: bv80) : bv80;

function $not.i80(i1: i80) : i80;

function {:inline} $load.i80(M: [ref]i80, p: ref) : i80
{
  M[p]
}

function {:inline} $load.bv80(M: [ref]bv80, p: ref) : bv80
{
  M[p]
}

function {:inline} $store.i80(M: [ref]i80, p: ref, v: i80) : [ref]i80
{
  M[p := v]
}

function {:inline} $store.bv80(M: [ref]bv80, p: ref, v: bv80) : [ref]bv80
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $add.i88(i1: i88, i2: i88) : i88
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $sub.i88(i1: i88, i2: i88) : i88
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $mul.i88(i1: i88, i2: i88) : i88
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) : bv88;

function $shl.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) : bv88;

function $lshr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) : bv88;

function $ashr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) : bv88;

function $and.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) : bv88;

function $or.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) : bv88;

function $xor.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) : bv88;

function $nand.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ule.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ule.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $ule.i88(i1: i88, i2: i88) : i1
{
  (if $ule.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ult.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ult.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $ult.i88(i1: i88, i2: i88) : i1
{
  (if $ult.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $uge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $uge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $uge.i88(i1: i88, i2: i88) : i1
{
  (if $uge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ugt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ugt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $ugt.i88(i1: i88, i2: i88) : i1
{
  (if $ugt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sle.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sle.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $sle.i88(i1: i88, i2: i88) : i1
{
  (if $sle.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $slt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $slt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $slt.i88(i1: i88, i2: i88) : i1
{
  (if $slt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $sge.i88(i1: i88, i2: i88) : i1
{
  (if $sge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sgt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sgt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $sgt.i88(i1: i88, i2: i88) : i1
{
  (if $sgt.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 == i2
}

function {:inline} $eq.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $eq.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i88.bool(i1: i88, i2: i88) : bool
{
  i1 == i2
}

function {:inline} $eq.i88(i1: i88, i2: i88) : i1
{
  (if $eq.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 != i2
}

function {:inline} $ne.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ne.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i88.bool(i1: i88, i2: i88) : bool
{
  i1 != i2
}

function {:inline} $ne.i88(i1: i88, i2: i88) : i1
{
  (if $ne.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $slt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $sgt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ult.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ugt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $smax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:inline} $umin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $umax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv88(i1: bv88) : bv88;

function $not.i88(i1: i88) : i88;

function {:inline} $load.i88(M: [ref]i88, p: ref) : i88
{
  M[p]
}

function {:inline} $load.bv88(M: [ref]bv88, p: ref) : bv88
{
  M[p]
}

function {:inline} $store.i88(M: [ref]i88, p: ref, v: i88) : [ref]i88
{
  M[p := v]
}

function {:inline} $store.bv88(M: [ref]bv88, p: ref, v: bv88) : [ref]bv88
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $add.i96(i1: i96, i2: i96) : i96
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $sub.i96(i1: i96, i2: i96) : i96
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $mul.i96(i1: i96, i2: i96) : i96
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) : bv96;

function $shl.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) : bv96;

function $lshr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) : bv96;

function $ashr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) : bv96;

function $and.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) : bv96;

function $or.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) : bv96;

function $xor.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) : bv96;

function $nand.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ule.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ule.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $ule.i96(i1: i96, i2: i96) : i1
{
  (if $ule.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ult.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ult.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $ult.i96(i1: i96, i2: i96) : i1
{
  (if $ult.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $uge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $uge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $uge.i96(i1: i96, i2: i96) : i1
{
  (if $uge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ugt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ugt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $ugt.i96(i1: i96, i2: i96) : i1
{
  (if $ugt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sle.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sle.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $sle.i96(i1: i96, i2: i96) : i1
{
  (if $sle.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $slt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $slt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $slt.i96(i1: i96, i2: i96) : i1
{
  (if $slt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $sge.i96(i1: i96, i2: i96) : i1
{
  (if $sge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sgt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sgt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $sgt.i96(i1: i96, i2: i96) : i1
{
  (if $sgt.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 == i2
}

function {:inline} $eq.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $eq.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i96.bool(i1: i96, i2: i96) : bool
{
  i1 == i2
}

function {:inline} $eq.i96(i1: i96, i2: i96) : i1
{
  (if $eq.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 != i2
}

function {:inline} $ne.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ne.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i96.bool(i1: i96, i2: i96) : bool
{
  i1 != i2
}

function {:inline} $ne.i96(i1: i96, i2: i96) : i1
{
  (if $ne.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $slt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $sgt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ult.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ugt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $smax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:inline} $umin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $umax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv96(i1: bv96) : bv96;

function $not.i96(i1: i96) : i96;

function {:inline} $load.i96(M: [ref]i96, p: ref) : i96
{
  M[p]
}

function {:inline} $load.bv96(M: [ref]bv96, p: ref) : bv96
{
  M[p]
}

function {:inline} $store.i96(M: [ref]i96, p: ref, v: i96) : [ref]i96
{
  M[p := v]
}

function {:inline} $store.bv96(M: [ref]bv96, p: ref, v: bv96) : [ref]bv96
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $add.i128(i1: i128, i2: i128) : i128
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $sub.i128(i1: i128, i2: i128) : i128
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $mul.i128(i1: i128, i2: i128) : i128
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) : bv128;

function $shl.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) : bv128;

function $lshr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) : bv128;

function $ashr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) : bv128;

function $and.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) : bv128;

function $or.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) : bv128;

function $xor.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) : bv128;

function $nand.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ule.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ule.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $ule.i128(i1: i128, i2: i128) : i1
{
  (if $ule.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ult.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ult.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $ult.i128(i1: i128, i2: i128) : i1
{
  (if $ult.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $uge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $uge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $uge.i128(i1: i128, i2: i128) : i1
{
  (if $uge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ugt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ugt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $ugt.i128(i1: i128, i2: i128) : i1
{
  (if $ugt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sle.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sle.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $sle.i128(i1: i128, i2: i128) : i1
{
  (if $sle.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $slt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $slt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $slt.i128(i1: i128, i2: i128) : i1
{
  (if $slt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $sge.i128(i1: i128, i2: i128) : i1
{
  (if $sge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sgt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sgt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $sgt.i128(i1: i128, i2: i128) : i1
{
  (if $sgt.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 == i2
}

function {:inline} $eq.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $eq.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i128.bool(i1: i128, i2: i128) : bool
{
  i1 == i2
}

function {:inline} $eq.i128(i1: i128, i2: i128) : i1
{
  (if $eq.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 != i2
}

function {:inline} $ne.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ne.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i128.bool(i1: i128, i2: i128) : bool
{
  i1 != i2
}

function {:inline} $ne.i128(i1: i128, i2: i128) : i1
{
  (if $ne.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $slt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $sgt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ult.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ugt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $smax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:inline} $umin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $umax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv128(i1: bv128) : bv128;

function $not.i128(i1: i128) : i128;

function {:inline} $load.i128(M: [ref]i128, p: ref) : i128
{
  M[p]
}

function {:inline} $load.bv128(M: [ref]bv128, p: ref) : bv128
{
  M[p]
}

function {:inline} $store.i128(M: [ref]i128, p: ref, v: i128) : [ref]i128
{
  M[p := v]
}

function {:inline} $store.bv128(M: [ref]bv128, p: ref, v: bv128) : [ref]bv128
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $add.i160(i1: i160, i2: i160) : i160
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $sub.i160(i1: i160, i2: i160) : i160
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $mul.i160(i1: i160, i2: i160) : i160
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsmod"} $smod.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsrem"} $srem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $srem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvudiv"} $udiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvurem"} $urem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $urem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvshl"} $shl.bv160(i1: bv160, i2: bv160) : bv160;

function $shl.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvlshr"} $lshr.bv160(i1: bv160, i2: bv160) : bv160;

function $lshr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvashr"} $ashr.bv160(i1: bv160, i2: bv160) : bv160;

function $ashr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvand"} $and.bv160(i1: bv160, i2: bv160) : bv160;

function $and.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvor"} $or.bv160(i1: bv160, i2: bv160) : bv160;

function $or.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvxor"} $xor.bv160(i1: bv160, i2: bv160) : bv160;

function $xor.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvnand"} $nand.bv160(i1: bv160, i2: bv160) : bv160;

function $nand.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvule"} $ule.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ule.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ule.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $ule.i160(i1: i160, i2: i160) : i1
{
  (if $ule.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ult.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ult.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $ult.i160(i1: i160, i2: i160) : i1
{
  (if $ult.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $uge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $uge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $uge.i160(i1: i160, i2: i160) : i1
{
  (if $uge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ugt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ugt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $ugt.i160(i1: i160, i2: i160) : i1
{
  (if $ugt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sle.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sle.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $sle.i160(i1: i160, i2: i160) : i1
{
  (if $sle.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $slt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $slt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $slt.i160(i1: i160, i2: i160) : i1
{
  (if $slt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $sge.i160(i1: i160, i2: i160) : i1
{
  (if $sge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sgt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sgt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $sgt.i160(i1: i160, i2: i160) : i1
{
  (if $sgt.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 == i2
}

function {:inline} $eq.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $eq.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i160.bool(i1: i160, i2: i160) : bool
{
  i1 == i2
}

function {:inline} $eq.i160(i1: i160, i2: i160) : i1
{
  (if $eq.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 != i2
}

function {:inline} $ne.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ne.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i160.bool(i1: i160, i2: i160) : bool
{
  i1 != i2
}

function {:inline} $ne.i160(i1: i160, i2: i160) : i1
{
  (if $ne.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $slt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $sgt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ult.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ugt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $smax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:inline} $umin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $umax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv160(i1: bv160) : bv160;

function $not.i160(i1: i160) : i160;

function {:inline} $load.i160(M: [ref]i160, p: ref) : i160
{
  M[p]
}

function {:inline} $load.bv160(M: [ref]bv160, p: ref) : bv160
{
  M[p]
}

function {:inline} $store.i160(M: [ref]i160, p: ref, v: i160) : [ref]i160
{
  M[p := v]
}

function {:inline} $store.bv160(M: [ref]bv160, p: ref, v: bv160) : [ref]bv160
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $add.i256(i1: i256, i2: i256) : i256
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $sub.i256(i1: i256, i2: i256) : i256
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $mul.i256(i1: i256, i2: i256) : i256
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsmod"} $smod.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsrem"} $srem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $srem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvudiv"} $udiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvurem"} $urem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $urem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvshl"} $shl.bv256(i1: bv256, i2: bv256) : bv256;

function $shl.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvlshr"} $lshr.bv256(i1: bv256, i2: bv256) : bv256;

function $lshr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvashr"} $ashr.bv256(i1: bv256, i2: bv256) : bv256;

function $ashr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvand"} $and.bv256(i1: bv256, i2: bv256) : bv256;

function $and.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvor"} $or.bv256(i1: bv256, i2: bv256) : bv256;

function $or.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvxor"} $xor.bv256(i1: bv256, i2: bv256) : bv256;

function $xor.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvnand"} $nand.bv256(i1: bv256, i2: bv256) : bv256;

function $nand.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvule"} $ule.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ule.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ule.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $ule.i256(i1: i256, i2: i256) : i1
{
  (if $ule.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ult.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ult.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $ult.i256(i1: i256, i2: i256) : i1
{
  (if $ult.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $uge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $uge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $uge.i256(i1: i256, i2: i256) : i1
{
  (if $uge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ugt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ugt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $ugt.i256(i1: i256, i2: i256) : i1
{
  (if $ugt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sle.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sle.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $sle.i256(i1: i256, i2: i256) : i1
{
  (if $sle.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $slt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $slt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $slt.i256(i1: i256, i2: i256) : i1
{
  (if $slt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $sge.i256(i1: i256, i2: i256) : i1
{
  (if $sge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sgt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sgt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $sgt.i256(i1: i256, i2: i256) : i1
{
  (if $sgt.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 == i2
}

function {:inline} $eq.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $eq.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i256.bool(i1: i256, i2: i256) : bool
{
  i1 == i2
}

function {:inline} $eq.i256(i1: i256, i2: i256) : i1
{
  (if $eq.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 != i2
}

function {:inline} $ne.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ne.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i256.bool(i1: i256, i2: i256) : bool
{
  i1 != i2
}

function {:inline} $ne.i256(i1: i256, i2: i256) : i1
{
  (if $ne.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $slt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $sgt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ult.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ugt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $smax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:inline} $umin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $umax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv256(i1: bv256) : bv256;

function $not.i256(i1: i256) : i256;

function {:inline} $load.i256(M: [ref]i256, p: ref) : i256
{
  M[p]
}

function {:inline} $load.bv256(M: [ref]bv256, p: ref) : bv256
{
  M[p]
}

function {:inline} $store.i256(M: [ref]i256, p: ref, v: i256) : [ref]i256
{
  M[p := v]
}

function {:inline} $store.bv256(M: [ref]bv256, p: ref, v: bv256) : [ref]bv256
{
  M[p := v]
}

function {:inline} $trunc.bv5.bv1(i1: bv5) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i5.i1(i1: i5) : i1
{
  i1
}

function {:inline} $zext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $sext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $trunc.bv6.bv1(i1: bv6) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i6.i1(i1: i6) : i1
{
  i1
}

function {:inline} $zext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $sext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv1(i1: bv8) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i8.i1(i1: i8) : i1
{
  i1
}

function {:inline} $zext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $sext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv1(i1: bv16) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i16.i1(i1: i16) : i1
{
  i1
}

function {:inline} $zext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $sext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv1(i1: bv24) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i24.i1(i1: i24) : i1
{
  i1
}

function {:inline} $zext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $sext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv1(i1: bv32) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i32.i1(i1: i32) : i1
{
  i1
}

function {:inline} $zext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $sext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv1(i1: bv40) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i40.i1(i1: i40) : i1
{
  i1
}

function {:inline} $zext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $sext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv1(i1: bv48) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i48.i1(i1: i48) : i1
{
  i1
}

function {:inline} $zext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $sext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv1(i1: bv56) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i56.i1(i1: i56) : i1
{
  i1
}

function {:inline} $zext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $sext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv1(i1: bv64) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i64.i1(i1: i64) : i1
{
  i1
}

function {:inline} $zext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $sext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv1(i1: bv80) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i80.i1(i1: i80) : i1
{
  i1
}

function {:inline} $zext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $sext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv1(i1: bv88) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i88.i1(i1: i88) : i1
{
  i1
}

function {:inline} $zext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $sext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv1(i1: bv96) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i96.i1(i1: i96) : i1
{
  i1
}

function {:inline} $zext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $sext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv1(i1: bv128) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i128.i1(i1: i128) : i1
{
  i1
}

function {:inline} $zext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $sext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv1(i1: bv160) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i160.i1(i1: i160) : i1
{
  i1
}

function {:inline} $zext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $sext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv1(i1: bv256) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i256.i1(i1: i256) : i1
{
  i1
}

function {:inline} $zext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $sext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $trunc.bv6.bv5(i1: bv6) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i6.i5(i1: i6) : i5
{
  i1
}

function {:inline} $zext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $sext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv5(i1: bv8) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i8.i5(i1: i8) : i5
{
  i1
}

function {:inline} $zext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $sext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv5(i1: bv16) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i16.i5(i1: i16) : i5
{
  i1
}

function {:inline} $zext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $sext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv5(i1: bv24) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i24.i5(i1: i24) : i5
{
  i1
}

function {:inline} $zext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $sext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv5(i1: bv32) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i32.i5(i1: i32) : i5
{
  i1
}

function {:inline} $zext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $sext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv5(i1: bv40) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i40.i5(i1: i40) : i5
{
  i1
}

function {:inline} $zext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $sext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv5(i1: bv48) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i48.i5(i1: i48) : i5
{
  i1
}

function {:inline} $zext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $sext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv5(i1: bv56) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i56.i5(i1: i56) : i5
{
  i1
}

function {:inline} $zext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $sext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv5(i1: bv64) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i64.i5(i1: i64) : i5
{
  i1
}

function {:inline} $zext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $sext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv5(i1: bv80) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i80.i5(i1: i80) : i5
{
  i1
}

function {:inline} $zext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $sext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv5(i1: bv88) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i88.i5(i1: i88) : i5
{
  i1
}

function {:inline} $zext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $sext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv5(i1: bv96) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i96.i5(i1: i96) : i5
{
  i1
}

function {:inline} $zext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $sext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv5(i1: bv128) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i128.i5(i1: i128) : i5
{
  i1
}

function {:inline} $zext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $sext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv5(i1: bv160) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i160.i5(i1: i160) : i5
{
  i1
}

function {:inline} $zext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $sext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv5(i1: bv256) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i256.i5(i1: i256) : i5
{
  i1
}

function {:inline} $zext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $sext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $trunc.bv8.bv6(i1: bv8) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i8.i6(i1: i8) : i6
{
  i1
}

function {:inline} $zext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $sext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv6(i1: bv16) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i16.i6(i1: i16) : i6
{
  i1
}

function {:inline} $zext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $sext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv6(i1: bv24) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i24.i6(i1: i24) : i6
{
  i1
}

function {:inline} $zext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $sext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv6(i1: bv32) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i32.i6(i1: i32) : i6
{
  i1
}

function {:inline} $zext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $sext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv6(i1: bv40) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i40.i6(i1: i40) : i6
{
  i1
}

function {:inline} $zext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $sext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv6(i1: bv48) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i48.i6(i1: i48) : i6
{
  i1
}

function {:inline} $zext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $sext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv6(i1: bv56) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i56.i6(i1: i56) : i6
{
  i1
}

function {:inline} $zext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $sext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv6(i1: bv64) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i64.i6(i1: i64) : i6
{
  i1
}

function {:inline} $zext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $sext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv6(i1: bv80) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i80.i6(i1: i80) : i6
{
  i1
}

function {:inline} $zext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $sext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv6(i1: bv88) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i88.i6(i1: i88) : i6
{
  i1
}

function {:inline} $zext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $sext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv6(i1: bv96) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i96.i6(i1: i96) : i6
{
  i1
}

function {:inline} $zext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $sext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv6(i1: bv128) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i128.i6(i1: i128) : i6
{
  i1
}

function {:inline} $zext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $sext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv6(i1: bv160) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i160.i6(i1: i160) : i6
{
  i1
}

function {:inline} $zext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $sext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv6(i1: bv256) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i256.i6(i1: i256) : i6
{
  i1
}

function {:inline} $zext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $sext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $trunc.bv16.bv8(i1: bv16) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i16.i8(i1: i16) : i8
{
  i1
}

function {:inline} $zext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $sext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv8(i1: bv24) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i24.i8(i1: i24) : i8
{
  i1
}

function {:inline} $zext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $sext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv8(i1: bv32) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i32.i8(i1: i32) : i8
{
  i1
}

function {:inline} $zext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $sext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv8(i1: bv40) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i40.i8(i1: i40) : i8
{
  i1
}

function {:inline} $zext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $sext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv8(i1: bv48) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i48.i8(i1: i48) : i8
{
  i1
}

function {:inline} $zext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $sext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv8(i1: bv56) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i56.i8(i1: i56) : i8
{
  i1
}

function {:inline} $zext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $sext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv8(i1: bv64) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i64.i8(i1: i64) : i8
{
  i1
}

function {:inline} $zext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $sext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv8(i1: bv80) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i80.i8(i1: i80) : i8
{
  i1
}

function {:inline} $zext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $sext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv8(i1: bv88) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i88.i8(i1: i88) : i8
{
  i1
}

function {:inline} $zext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $sext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv8(i1: bv96) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i96.i8(i1: i96) : i8
{
  i1
}

function {:inline} $zext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $sext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv8(i1: bv128) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i128.i8(i1: i128) : i8
{
  i1
}

function {:inline} $zext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $sext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv8(i1: bv160) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i160.i8(i1: i160) : i8
{
  i1
}

function {:inline} $zext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $sext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv8(i1: bv256) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i256.i8(i1: i256) : i8
{
  i1
}

function {:inline} $zext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $sext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $trunc.bv24.bv16(i1: bv24) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i24.i16(i1: i24) : i16
{
  i1
}

function {:inline} $zext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $sext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv16(i1: bv32) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i32.i16(i1: i32) : i16
{
  i1
}

function {:inline} $zext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $sext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv16(i1: bv40) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i40.i16(i1: i40) : i16
{
  i1
}

function {:inline} $zext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $sext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv16(i1: bv48) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i48.i16(i1: i48) : i16
{
  i1
}

function {:inline} $zext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $sext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv16(i1: bv56) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i56.i16(i1: i56) : i16
{
  i1
}

function {:inline} $zext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $sext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv16(i1: bv64) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i64.i16(i1: i64) : i16
{
  i1
}

function {:inline} $zext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $sext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv16(i1: bv80) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i80.i16(i1: i80) : i16
{
  i1
}

function {:inline} $zext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $sext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv16(i1: bv88) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i88.i16(i1: i88) : i16
{
  i1
}

function {:inline} $zext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $sext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv16(i1: bv96) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i96.i16(i1: i96) : i16
{
  i1
}

function {:inline} $zext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $sext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv16(i1: bv128) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i128.i16(i1: i128) : i16
{
  i1
}

function {:inline} $zext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $sext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv16(i1: bv160) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i160.i16(i1: i160) : i16
{
  i1
}

function {:inline} $zext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $sext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv16(i1: bv256) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i256.i16(i1: i256) : i16
{
  i1
}

function {:inline} $zext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $sext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $trunc.bv32.bv24(i1: bv32) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i32.i24(i1: i32) : i24
{
  i1
}

function {:inline} $zext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $sext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv24(i1: bv40) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i40.i24(i1: i40) : i24
{
  i1
}

function {:inline} $zext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $sext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv24(i1: bv48) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i48.i24(i1: i48) : i24
{
  i1
}

function {:inline} $zext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $sext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv24(i1: bv56) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i56.i24(i1: i56) : i24
{
  i1
}

function {:inline} $zext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $sext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv24(i1: bv64) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i64.i24(i1: i64) : i24
{
  i1
}

function {:inline} $zext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $sext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv24(i1: bv80) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i80.i24(i1: i80) : i24
{
  i1
}

function {:inline} $zext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $sext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv24(i1: bv88) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i88.i24(i1: i88) : i24
{
  i1
}

function {:inline} $zext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $sext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv24(i1: bv96) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i96.i24(i1: i96) : i24
{
  i1
}

function {:inline} $zext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $sext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv24(i1: bv128) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i128.i24(i1: i128) : i24
{
  i1
}

function {:inline} $zext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $sext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv24(i1: bv160) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i160.i24(i1: i160) : i24
{
  i1
}

function {:inline} $zext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $sext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv24(i1: bv256) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i256.i24(i1: i256) : i24
{
  i1
}

function {:inline} $zext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $sext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $trunc.bv40.bv32(i1: bv40) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i40.i32(i1: i40) : i32
{
  i1
}

function {:inline} $zext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $sext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv32(i1: bv48) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i48.i32(i1: i48) : i32
{
  i1
}

function {:inline} $zext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $sext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv32(i1: bv56) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i56.i32(i1: i56) : i32
{
  i1
}

function {:inline} $zext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $sext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv32(i1: bv64) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i64.i32(i1: i64) : i32
{
  i1
}

function {:inline} $zext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $sext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv32(i1: bv80) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i80.i32(i1: i80) : i32
{
  i1
}

function {:inline} $zext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $sext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv32(i1: bv88) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i88.i32(i1: i88) : i32
{
  i1
}

function {:inline} $zext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $sext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv32(i1: bv96) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i96.i32(i1: i96) : i32
{
  i1
}

function {:inline} $zext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $sext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv32(i1: bv128) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i128.i32(i1: i128) : i32
{
  i1
}

function {:inline} $zext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $sext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv32(i1: bv160) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i160.i32(i1: i160) : i32
{
  i1
}

function {:inline} $zext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $sext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv32(i1: bv256) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i256.i32(i1: i256) : i32
{
  i1
}

function {:inline} $zext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $sext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $trunc.bv48.bv40(i1: bv48) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i48.i40(i1: i48) : i40
{
  i1
}

function {:inline} $zext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $sext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv40(i1: bv56) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i56.i40(i1: i56) : i40
{
  i1
}

function {:inline} $zext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $sext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv40(i1: bv64) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i64.i40(i1: i64) : i40
{
  i1
}

function {:inline} $zext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $sext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv40(i1: bv80) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i80.i40(i1: i80) : i40
{
  i1
}

function {:inline} $zext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $sext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv40(i1: bv88) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i88.i40(i1: i88) : i40
{
  i1
}

function {:inline} $zext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $sext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv40(i1: bv96) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i96.i40(i1: i96) : i40
{
  i1
}

function {:inline} $zext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $sext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv40(i1: bv128) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i128.i40(i1: i128) : i40
{
  i1
}

function {:inline} $zext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $sext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv40(i1: bv160) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i160.i40(i1: i160) : i40
{
  i1
}

function {:inline} $zext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $sext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv40(i1: bv256) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i256.i40(i1: i256) : i40
{
  i1
}

function {:inline} $zext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $sext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $trunc.bv56.bv48(i1: bv56) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i56.i48(i1: i56) : i48
{
  i1
}

function {:inline} $zext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $sext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv48(i1: bv64) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i64.i48(i1: i64) : i48
{
  i1
}

function {:inline} $zext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $sext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv48(i1: bv80) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i80.i48(i1: i80) : i48
{
  i1
}

function {:inline} $zext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $sext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv48(i1: bv88) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i88.i48(i1: i88) : i48
{
  i1
}

function {:inline} $zext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $sext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv48(i1: bv96) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i96.i48(i1: i96) : i48
{
  i1
}

function {:inline} $zext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $sext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv48(i1: bv128) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i128.i48(i1: i128) : i48
{
  i1
}

function {:inline} $zext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $sext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv48(i1: bv160) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i160.i48(i1: i160) : i48
{
  i1
}

function {:inline} $zext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $sext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv48(i1: bv256) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i256.i48(i1: i256) : i48
{
  i1
}

function {:inline} $zext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $sext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $trunc.bv64.bv56(i1: bv64) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i64.i56(i1: i64) : i56
{
  i1
}

function {:inline} $zext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $sext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv56(i1: bv80) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i80.i56(i1: i80) : i56
{
  i1
}

function {:inline} $zext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $sext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv56(i1: bv88) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i88.i56(i1: i88) : i56
{
  i1
}

function {:inline} $zext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $sext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv56(i1: bv96) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i96.i56(i1: i96) : i56
{
  i1
}

function {:inline} $zext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $sext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv56(i1: bv128) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i128.i56(i1: i128) : i56
{
  i1
}

function {:inline} $zext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $sext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv56(i1: bv160) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i160.i56(i1: i160) : i56
{
  i1
}

function {:inline} $zext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $sext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv56(i1: bv256) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i256.i56(i1: i256) : i56
{
  i1
}

function {:inline} $zext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $sext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $trunc.bv80.bv64(i1: bv80) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i80.i64(i1: i80) : i64
{
  i1
}

function {:inline} $zext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $sext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv64(i1: bv88) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i88.i64(i1: i88) : i64
{
  i1
}

function {:inline} $zext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $sext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv64(i1: bv96) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i96.i64(i1: i96) : i64
{
  i1
}

function {:inline} $zext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $sext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv64(i1: bv128) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i128.i64(i1: i128) : i64
{
  i1
}

function {:inline} $zext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $sext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv64(i1: bv160) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i160.i64(i1: i160) : i64
{
  i1
}

function {:inline} $zext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $sext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv64(i1: bv256) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i256.i64(i1: i256) : i64
{
  i1
}

function {:inline} $zext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $sext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $trunc.bv88.bv80(i1: bv88) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i88.i80(i1: i88) : i80
{
  i1
}

function {:inline} $zext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $sext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv80(i1: bv96) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i96.i80(i1: i96) : i80
{
  i1
}

function {:inline} $zext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $sext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv80(i1: bv128) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i128.i80(i1: i128) : i80
{
  i1
}

function {:inline} $zext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $sext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv80(i1: bv160) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i160.i80(i1: i160) : i80
{
  i1
}

function {:inline} $zext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $sext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv80(i1: bv256) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i256.i80(i1: i256) : i80
{
  i1
}

function {:inline} $zext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $sext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $trunc.bv96.bv88(i1: bv96) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i96.i88(i1: i96) : i88
{
  i1
}

function {:inline} $zext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $sext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv88(i1: bv128) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i128.i88(i1: i128) : i88
{
  i1
}

function {:inline} $zext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $sext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv88(i1: bv160) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i160.i88(i1: i160) : i88
{
  i1
}

function {:inline} $zext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $sext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv88(i1: bv256) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i256.i88(i1: i256) : i88
{
  i1
}

function {:inline} $zext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $sext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $trunc.bv128.bv96(i1: bv128) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i128.i96(i1: i128) : i96
{
  i1
}

function {:inline} $zext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $sext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv96(i1: bv160) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i160.i96(i1: i160) : i96
{
  i1
}

function {:inline} $zext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $sext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv96(i1: bv256) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i256.i96(i1: i256) : i96
{
  i1
}

function {:inline} $zext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $sext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $trunc.bv160.bv128(i1: bv160) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i160.i128(i1: i160) : i128
{
  i1
}

function {:inline} $zext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $sext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv128(i1: bv256) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i256.i128(i1: i256) : i128
{
  i1
}

function {:inline} $zext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $sext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $trunc.bv256.bv160(i1: bv256) : bv160
{
  i1[160:0]
}

function {:inline} $trunc.i256.i160(i1: i256) : i160
{
  i1
}

function {:inline} $zext.i160.i256(i1: i160) : i256
{
  i1
}

function {:inline} $sext.i160.i256(i1: i160) : i256
{
  i1
}

procedure corral_assert_not_reachable();



procedure {:entrypoint} main_SeqInstr() returns ($r: i32);
  free requires assertsPassed;
  modifies assertsPassed, $M.17, $M.18, $M.19, $M.20, $M.10, $M.11, $M.0, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.21, $M.22, $M.23, $M.24, $M.15, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.16, $M.9, $M.53, $M.52, $M.54, $M.44, $M.14, $M.13, $M.2, $M.102, $M.103, $M.104, $M.105, $M.106, $M.107, $M.108, $CurrAddr, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.1;



implementation {:entrypoint} main_SeqInstr() returns ($r: i32)
{

  start:
    assertsPassed := true;
    call $r := main();
    assume {:OldAssert} !assertsPassed;
    return;
}



implementation abituguru3_read_increment_offset_loop_$bb4(in_$p0: ref, in_$i1: i8, in_$i2: i8, in_$i3: i8, in_$p4: ref, in_$i5: i32, in_$i9: i32, in_$i10: i8, in_$i11: i8, in_$i12: i32, in_$i13: i32, in_$i14: i32, in_$i15: i8, in_$i16: i32, in_$i17: i8, in_$i18: i32, in_$i19: i32, in_$i20: i64, in_$p21: ref, in_$i22: i32, in_$i23: i32, in_$i24: i1, in_$i25: i32, in_$i26: i32, in_$i32: i32, in_$i33: i1, in_$i8: i32, in_$i34: i32) returns (out_$i9: i32, out_$i10: i8, out_$i11: i8, out_$i12: i32, out_$i13: i32, out_$i14: i32, out_$i15: i8, out_$i16: i32, out_$i17: i8, out_$i18: i32, out_$i19: i32, out_$i20: i64, out_$p21: ref, out_$i22: i32, out_$i23: i32, out_$i24: i1, out_$i25: i32, out_$i26: i32, out_$i32: i32, out_$i33: i1, out_$i8: i32, out_$i34: i32)
{

  entry:
    out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$p21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i32, out_$i33, out_$i8, out_$i34 := in_$i9, in_$i10, in_$i11, in_$i12, in_$i13, in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$p21, in_$i22, in_$i23, in_$i24, in_$i25, in_$i26, in_$i32, in_$i33, in_$i8, in_$i34;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    goto corral_source_split_634;

  $bb13:
    assume out_$i33 == 1;
    assume {:verifier.code 0} true;
    out_$i8 := out_$i32;
    goto $bb13_dummy;

  corral_source_split_665:
    assume {:verifier.code 0} true;
    out_$i34 := out_$i32;
    assume true;
    goto $bb13;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    out_$i33 := $slt.i32(out_$i32, in_$i5);
    goto corral_source_split_665;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i32 := $add.i32(out_$i8, 1);
    call {:si_unique_call 114} {:cexpr "i"} boogie_si_record_i32(out_$i32);
    goto corral_source_split_664;

  $bb7:
    assume !(out_$i24 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    out_$i25, out_$i26 := out_$i8, out_$i22;
    assume true;
    goto $bb7;

  corral_source_split_650:
    assume {:verifier.code 0} true;
    out_$i24 := $ne.i32(out_$i23, out_$i22);
    goto corral_source_split_651;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    out_$i23 := $zext.i8.i32(in_$i3);
    goto corral_source_split_650;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    call {:si_unique_call 112} out_$i22 := abituguru3_read(in_$p0, out_$i10, out_$i15, out_$i17, out_$p21);
    call {:si_unique_call 113} {:cexpr "x"} boogie_si_record_i32(out_$i22);
    goto corral_source_split_649;

  corral_source_split_647:
    assume {:verifier.code 0} true;
    out_$p21 := $add.ref(in_$p4, $mul.ref(out_$i20, 1));
    goto corral_source_split_648;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    out_$i20 := $sext.i32.i64(out_$i19);
    goto corral_source_split_647;

  corral_source_split_645:
    assume {:verifier.code 0} true;
    out_$i19 := $mul.i32(out_$i18, out_$i8);
    goto corral_source_split_646;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    out_$i18 := $zext.i8.i32(in_$i3);
    goto corral_source_split_645;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    out_$i17 := $trunc.i32.i8(out_$i16);
    goto corral_source_split_644;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    out_$i16 := $zext.i8.i32(in_$i3);
    goto corral_source_split_643;

  corral_source_split_641:
    assume {:verifier.code 0} true;
    out_$i15 := $trunc.i32.i8(out_$i14);
    goto corral_source_split_642;

  corral_source_split_640:
    assume {:verifier.code 0} true;
    out_$i14 := $add.i32(out_$i12, out_$i13);
    goto corral_source_split_641;

  corral_source_split_639:
    assume {:verifier.code 0} true;
    out_$i13 := $zext.i8.i32(in_$i2);
    goto corral_source_split_640;

  corral_source_split_638:
    assume {:verifier.code 0} true;
    out_$i12 := $zext.i8.i32(out_$i11);
    goto corral_source_split_639;

  corral_source_split_637:
    assume {:verifier.code 0} true;
    out_$i11 := $trunc.i32.i8(out_$i8);
    goto corral_source_split_638;

  corral_source_split_636:
    assume {:verifier.code 0} true;
    out_$i10 := $trunc.i32.i8(out_$i9);
    goto corral_source_split_637;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i9 := $zext.i8.i32(in_$i1);
    goto corral_source_split_636;

  corral_source_split_634:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb13_dummy:
    call {:si_unique_call 1} out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$p21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i32, out_$i33, out_$i8, out_$i34 := abituguru3_read_increment_offset_loop_$bb4(in_$p0, in_$i1, in_$i2, in_$i3, in_$p4, in_$i5, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$p21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i32, out_$i33, out_$i8, out_$i34);
    return;

  exit:
    return;
}



procedure abituguru3_read_increment_offset_loop_$bb4(in_$p0: ref, in_$i1: i8, in_$i2: i8, in_$i3: i8, in_$p4: ref, in_$i5: i32, in_$i9: i32, in_$i10: i8, in_$i11: i8, in_$i12: i32, in_$i13: i32, in_$i14: i32, in_$i15: i8, in_$i16: i32, in_$i17: i8, in_$i18: i32, in_$i19: i32, in_$i20: i64, in_$p21: ref, in_$i22: i32, in_$i23: i32, in_$i24: i1, in_$i25: i32, in_$i26: i32, in_$i32: i32, in_$i33: i1, in_$i8: i32, in_$i34: i32) returns (out_$i9: i32, out_$i10: i8, out_$i11: i8, out_$i12: i32, out_$i13: i32, out_$i14: i32, out_$i15: i8, out_$i16: i32, out_$i17: i8, out_$i18: i32, out_$i19: i32, out_$i20: i64, out_$p21: ref, out_$i22: i32, out_$i23: i32, out_$i24: i1, out_$i25: i32, out_$i26: i32, out_$i32: i32, out_$i33: i1, out_$i8: i32, out_$i34: i32);
  modifies $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.0, $CurrAddr;



implementation abituguru3_read_loop_$bb44(in_$p0: ref, in_$p4: ref, in_$i120: i32, in_$i124: i32, in_$i125: i1, in_$i126: i32, in_$i127: i32, in_$p149: ref, in_$i150: i16, in_$i151: i32, in_$i152: i8, in_$i153: i64, in_$p154: ref, in_$i155: i32, in_$i156: i1, in_$i123: i32, in_$i157: i32) returns (out_$i124: i32, out_$i125: i1, out_$i126: i32, out_$i127: i32, out_$p149: ref, out_$i150: i16, out_$i151: i32, out_$i152: i8, out_$i153: i64, out_$p154: ref, out_$i155: i32, out_$i156: i1, out_$i123: i32, out_$i157: i32)
{

  entry:
    out_$i124, out_$i125, out_$i126, out_$i127, out_$p149, out_$i150, out_$i151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i123, out_$i157 := in_$i124, in_$i125, in_$i126, in_$i127, in_$p149, in_$i150, in_$i151, in_$i152, in_$i153, in_$p154, in_$i155, in_$i156, in_$i123, in_$i157;
    goto $bb44, exit;

  $bb44:
    assume {:verifier.code 0} true;
    goto corral_source_split_852;

  $bb56:
    assume out_$i156 == 1;
    assume {:verifier.code 0} true;
    out_$i123 := out_$i155;
    goto $bb56_dummy;

  corral_source_split_900:
    assume {:verifier.code 0} true;
    out_$i157 := out_$i155;
    assume true;
    goto $bb56;

  corral_source_split_899:
    assume {:verifier.code 0} true;
    out_$i156 := $sgt.i32(in_$i120, out_$i155);
    goto corral_source_split_900;

  corral_source_split_898:
    assume {:verifier.code 0} true;
    out_$i155 := $add.i32(out_$i123, 1);
    call {:si_unique_call 155} {:cexpr "i"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_899;

  corral_source_split_897:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, out_$p154, out_$i152);
    goto corral_source_split_898;

  corral_source_split_896:
    assume {:verifier.code 0} true;
    out_$p154 := $add.ref(in_$p4, $mul.ref(out_$i153, 1));
    goto corral_source_split_897;

  corral_source_split_895:
    assume {:verifier.code 0} true;
    out_$i153 := $sext.i32.i64(out_$i123);
    goto corral_source_split_896;

  corral_source_split_894:
    assume {:verifier.code 0} true;
    call {:si_unique_call 154} out_$i152 := inb(out_$i151);
    goto corral_source_split_895;

  corral_source_split_893:
    assume {:verifier.code 0} true;
    out_$i151 := $zext.i16.i32(out_$i150);
    goto corral_source_split_894;

  corral_source_split_892:
    assume {:verifier.code 0} true;
    out_$i150 := $load.i16($M.0, out_$p149);
    goto corral_source_split_893;

  $bb55:
    assume {:verifier.code 0} true;
    out_$p149 := $add.ref($add.ref(in_$p0, $mul.ref(0, 18264)), $mul.ref(168, 1));
    goto corral_source_split_892;

  $bb47:
    assume !(out_$i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb55;

  corral_source_split_855:
    assume {:verifier.code 0} true;
    out_$i126, out_$i127 := out_$i123, out_$i124;
    assume true;
    goto $bb47;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    out_$i125 := $ne.i32(out_$i124, $sub.i32(0, 1));
    goto corral_source_split_855;

  $bb45:
    assume {:verifier.code 0} true;
    call {:si_unique_call 149} out_$i124 := abituguru3_wait_for_read(in_$p0);
    call {:si_unique_call 150} {:cexpr "x"} boogie_si_record_i32(out_$i124);
    goto corral_source_split_854;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb56_dummy:
    call {:si_unique_call 1} out_$i124, out_$i125, out_$i126, out_$i127, out_$p149, out_$i150, out_$i151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i123, out_$i157 := abituguru3_read_loop_$bb44(in_$p0, in_$p4, in_$i120, out_$i124, out_$i125, out_$i126, out_$i127, out_$p149, out_$i150, out_$i151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i123, out_$i157);
    return;

  exit:
    return;
}



procedure abituguru3_read_loop_$bb44(in_$p0: ref, in_$p4: ref, in_$i120: i32, in_$i124: i32, in_$i125: i1, in_$i126: i32, in_$i127: i32, in_$p149: ref, in_$i150: i16, in_$i151: i32, in_$i152: i8, in_$i153: i64, in_$p154: ref, in_$i155: i32, in_$i156: i1, in_$i123: i32, in_$i157: i32) returns (out_$i124: i32, out_$i125: i1, out_$i126: i32, out_$i127: i32, out_$p149: ref, out_$i150: i16, out_$i151: i32, out_$i152: i8, out_$i153: i64, out_$p154: ref, out_$i155: i32, out_$i156: i1, out_$i123: i32, out_$i157: i32);
  modifies $M.0;



implementation abituguru3_synchronize_loop_$bb50(in_$p118: ref, in_$i126: i32, in_$i127: i1, in_$i128: i32, in_$i147: i16, in_$i148: i32, in_$i149: i8, in_$i150: i32, in_$i151: i1, in_$i124: i32, in_$i125: i32) returns (out_$i126: i32, out_$i127: i1, out_$i128: i32, out_$i147: i16, out_$i148: i32, out_$i149: i8, out_$i150: i32, out_$i151: i1, out_$i124: i32, out_$i125: i32)
{

  entry:
    out_$i126, out_$i127, out_$i128, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i124, out_$i125 := in_$i126, in_$i127, in_$i128, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i124, in_$i125;
    goto $bb50, exit;

  $bb50:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1118;

  $bb61:
    assume out_$i151 == 1;
    assume {:verifier.code 0} true;
    out_$i124, out_$i125 := out_$i150, out_$i126;
    goto $bb61_dummy;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61;

  corral_source_split_1158:
    assume {:verifier.code 0} true;
    out_$i151 := $ne.i32(out_$i150, 172);
    goto corral_source_split_1159;

  corral_source_split_1157:
    assume {:verifier.code 0} true;
    out_$i150 := $zext.i8.i32(out_$i149);
    call {:si_unique_call 205} {:cexpr "x"} boogie_si_record_i32(out_$i150);
    goto corral_source_split_1158;

  corral_source_split_1156:
    assume {:verifier.code 0} true;
    call {:si_unique_call 203} out_$i149 := inb(out_$i148);
    call {:si_unique_call 204} {:cexpr "tmp___5"} boogie_si_record_i8(out_$i149);
    goto corral_source_split_1157;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    out_$i148 := $zext.i16.i32(out_$i147);
    goto corral_source_split_1156;

  corral_source_split_1154:
    assume {:verifier.code 0} true;
    out_$i147 := $load.i16($M.0, in_$p118);
    goto corral_source_split_1155;

  $bb60:
    assume {:verifier.code 0} true;
    call {:si_unique_call 202} msleep(1);
    goto corral_source_split_1154;

  $bb53:
    assume !(out_$i127 == 1);
    assume {:verifier.code 0} true;
    goto $bb60;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    out_$i128 := out_$i124;
    assume true;
    goto $bb53;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    out_$i127 := $eq.i32(out_$i126, 0);
    goto corral_source_split_1121;

  $bb51:
    assume {:verifier.code 0} true;
    out_$i126 := $sub.i32(out_$i125, 1);
    call {:si_unique_call 198} {:cexpr "timeout"} boogie_si_record_i32(out_$i126);
    goto corral_source_split_1120;

  corral_source_split_1118:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb61_dummy:
    call {:si_unique_call 1} out_$i126, out_$i127, out_$i128, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i124, out_$i125 := abituguru3_synchronize_loop_$bb50(in_$p118, out_$i126, out_$i127, out_$i128, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i124, out_$i125);
    return;

  exit:
    return;
}



procedure abituguru3_synchronize_loop_$bb50(in_$p118: ref, in_$i126: i32, in_$i127: i1, in_$i128: i32, in_$i147: i16, in_$i148: i32, in_$i149: i8, in_$i150: i32, in_$i151: i1, in_$i124: i32, in_$i125: i32) returns (out_$i126: i32, out_$i127: i1, out_$i128: i32, out_$i147: i16, out_$i148: i32, out_$i149: i8, out_$i150: i32, out_$i151: i1, out_$i124: i32, out_$i125: i32);



implementation abituguru3_wait_while_busy_loop_$bb4(in_$p1: ref, in_$i11: i32, in_$i12: i1, in_$i13: i8, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i8, in_$i21: i32, in_$i22: i32, in_$i23: i1, in_$i9: i8, in_$i10: i32) returns (out_$i11: i32, out_$i12: i1, out_$i13: i8, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i8, out_$i21: i32, out_$i22: i32, out_$i23: i1, out_$i9: i8, out_$i10: i32)
{

  entry:
    out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10 := in_$i11, in_$i12, in_$i13, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21, in_$i22, in_$i23, in_$i9, in_$i10;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1177;

  $bb13:
    assume out_$i23 == 1;
    assume {:verifier.code 0} true;
    out_$i9, out_$i10 := out_$i20, out_$i11;
    goto $bb13_dummy;

  corral_source_split_1198:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    out_$i23 := $ne.i32(out_$i22, 0);
    goto corral_source_split_1198;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    out_$i22 := $and.i32(out_$i21, 2);
    goto corral_source_split_1197;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    out_$i21 := $zext.i8.i32(out_$i20);
    goto corral_source_split_1196;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    call {:si_unique_call 213} out_$i20 := inb_p(out_$i19);
    call {:si_unique_call 214} {:cexpr "x"} boogie_si_record_i8(out_$i20);
    goto corral_source_split_1195;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    out_$i19 := $add.i32(out_$i18, 4);
    goto corral_source_split_1194;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    out_$i18 := $zext.i16.i32(out_$i17);
    goto corral_source_split_1193;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i17 := $load.i16($M.0, in_$p1);
    goto corral_source_split_1192;

  $bb11:
    assume !(out_$i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    call {:si_unique_call 212} msleep(1);
    goto corral_source_split_1190;

  $bb10:
    assume out_$i16 == 1;
    goto corral_source_split_1189;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i16 := $eq.i32(out_$i11, 1);
    goto corral_source_split_1187;

  $bb7:
    assume !(out_$i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    out_$i13 := out_$i9;
    assume true;
    goto $bb7;

  corral_source_split_1179:
    assume {:verifier.code 0} true;
    out_$i12 := $eq.i32(out_$i11, 0);
    goto corral_source_split_1180;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i11 := $sub.i32(out_$i10, 1);
    call {:si_unique_call 211} {:cexpr "timeout"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_1179;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb13_dummy:
    call {:si_unique_call 1} out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10 := abituguru3_wait_while_busy_loop_$bb4(in_$p1, out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10);
    return;

  exit:
    return;
}



procedure abituguru3_wait_while_busy_loop_$bb4(in_$p1: ref, in_$i11: i32, in_$i12: i1, in_$i13: i8, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i8, in_$i21: i32, in_$i22: i32, in_$i23: i1, in_$i9: i8, in_$i10: i32) returns (out_$i11: i32, out_$i12: i1, out_$i13: i8, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i8, out_$i21: i32, out_$i22: i32, out_$i23: i1, out_$i9: i8, out_$i10: i32);



implementation abituguru3_wait_for_read_loop_$bb4(in_$p1: ref, in_$i11: i32, in_$i12: i1, in_$i13: i8, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i8, in_$i21: i32, in_$i22: i32, in_$i23: i1, in_$i9: i8, in_$i10: i32) returns (out_$i11: i32, out_$i12: i1, out_$i13: i8, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i8, out_$i21: i32, out_$i22: i32, out_$i23: i1, out_$i9: i8, out_$i10: i32)
{

  entry:
    out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10 := in_$i11, in_$i12, in_$i13, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21, in_$i22, in_$i23, in_$i9, in_$i10;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1224;

  $bb13:
    assume out_$i23 == 1;
    assume {:verifier.code 0} true;
    out_$i9, out_$i10 := out_$i20, out_$i11;
    goto $bb13_dummy;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13;

  corral_source_split_1244:
    assume {:verifier.code 0} true;
    out_$i23 := $eq.i32(out_$i22, 0);
    goto corral_source_split_1245;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    out_$i22 := $and.i32(out_$i21, 1);
    goto corral_source_split_1244;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    out_$i21 := $zext.i8.i32(out_$i20);
    goto corral_source_split_1243;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    call {:si_unique_call 221} out_$i20 := inb_p(out_$i19);
    call {:si_unique_call 222} {:cexpr "x"} boogie_si_record_i8(out_$i20);
    goto corral_source_split_1242;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    out_$i19 := $add.i32(out_$i18, 4);
    goto corral_source_split_1241;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    out_$i18 := $zext.i16.i32(out_$i17);
    goto corral_source_split_1240;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i17 := $load.i16($M.0, in_$p1);
    goto corral_source_split_1239;

  $bb11:
    assume !(out_$i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    call {:si_unique_call 220} msleep(1);
    goto corral_source_split_1237;

  $bb10:
    assume out_$i16 == 1;
    goto corral_source_split_1236;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i16 := $eq.i32(out_$i11, 1);
    goto corral_source_split_1234;

  $bb7:
    assume !(out_$i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    out_$i13 := out_$i9;
    assume true;
    goto $bb7;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    out_$i12 := $eq.i32(out_$i11, 0);
    goto corral_source_split_1227;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i11 := $sub.i32(out_$i10, 1);
    call {:si_unique_call 219} {:cexpr "timeout"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_1226;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb13_dummy:
    call {:si_unique_call 1} out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10 := abituguru3_wait_for_read_loop_$bb4(in_$p1, out_$i11, out_$i12, out_$i13, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i9, out_$i10);
    return;

  exit:
    return;
}



procedure abituguru3_wait_for_read_loop_$bb4(in_$p1: ref, in_$i11: i32, in_$i12: i1, in_$i13: i8, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i8, in_$i21: i32, in_$i22: i32, in_$i23: i1, in_$i9: i8, in_$i10: i32) returns (out_$i11: i32, out_$i12: i1, out_$i13: i8, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i8, out_$i21: i32, out_$i22: i32, out_$i23: i1, out_$i9: i8, out_$i10: i32);



implementation abituguru3_probe_loop_$bb69(in_$p0: ref, in_$p13: ref, in_$p200: ref, in_$i201: i64, in_$p204: ref, in_$i205: i32, in_$i206: i64, in_$p210: ref, in_$p211: ref, in_$i212: i64, in_$i213: i1, in_$i199: i32) returns (out_$p200: ref, out_$i201: i64, out_$p204: ref, out_$i205: i32, out_$i206: i64, out_$p210: ref, out_$p211: ref, out_$i212: i64, out_$i213: i1, out_$i199: i32)
{

  entry:
    out_$p200, out_$i201, out_$p204, out_$i205, out_$i206, out_$p210, out_$p211, out_$i212, out_$i213, out_$i199 := in_$p200, in_$i201, in_$p204, in_$i205, in_$i206, in_$p210, in_$p211, in_$i212, in_$i213, in_$i199;
    goto $bb69, exit;

  $bb69:
    assume {:verifier.code 0} true;
    goto corral_source_split_1503;

  $bb71:
    assume out_$i213 == 1;
    assume {:verifier.code 0} true;
    out_$i199 := out_$i205;
    goto $bb71_dummy;

  corral_source_split_1513:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb71;

  corral_source_split_1512:
    assume {:verifier.code 0} true;
    out_$i213 := $ne.i64(out_$i212, 0);
    goto corral_source_split_1513;

  corral_source_split_1511:
    assume {:verifier.code 0} true;
    out_$i212 := $p2i.ref.i64(out_$p211);
    goto corral_source_split_1512;

  corral_source_split_1510:
    assume {:verifier.code 0} true;
    out_$p211 := $load.ref($M.0, out_$p210);
    goto corral_source_split_1511;

  corral_source_split_1509:
    assume {:verifier.code 0} true;
    out_$i206 := $sext.i32.i64(out_$i205);
    out_$p210 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i206, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1510;

  corral_source_split_1508:
    assume {:verifier.code 0} true;
    out_$i205 := $add.i32(out_$i199, 1);
    call {:si_unique_call 271} {:cexpr "i"} boogie_si_record_i32(out_$i205);
    goto corral_source_split_1509;

  corral_source_split_1507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 270} device_remove_file(out_$p200, out_$p204);
    goto corral_source_split_1508;

  corral_source_split_1506:
    assume {:verifier.code 0} true;
    out_$p204 := $add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i201, 56)), $mul.ref(0, 1));
    goto corral_source_split_1507;

  corral_source_split_1505:
    assume {:verifier.code 0} true;
    out_$i201 := $sext.i32.i64(out_$i199);
    goto corral_source_split_1506;

  $bb70:
    assume {:verifier.code 0} true;
    out_$p200 := $add.ref($add.ref(in_$p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1505;

  corral_source_split_1503:
    assume {:verifier.code 0} true;
    goto $bb70;

  $bb71_dummy:
    call {:si_unique_call 1} out_$p200, out_$i201, out_$p204, out_$i205, out_$i206, out_$p210, out_$p211, out_$i212, out_$i213, out_$i199 := abituguru3_probe_loop_$bb69(in_$p0, in_$p13, out_$p200, out_$i201, out_$p204, out_$i205, out_$i206, out_$p210, out_$p211, out_$i212, out_$i213, out_$i199);
    return;

  exit:
    return;
}



procedure abituguru3_probe_loop_$bb69(in_$p0: ref, in_$p13: ref, in_$p200: ref, in_$i201: i64, in_$p204: ref, in_$i205: i32, in_$i206: i64, in_$p210: ref, in_$p211: ref, in_$i212: i64, in_$i213: i1, in_$i199: i32) returns (out_$p200: ref, out_$i201: i64, out_$p204: ref, out_$i205: i32, out_$i206: i64, out_$p210: ref, out_$p211: ref, out_$i212: i64, out_$i213: i1, out_$i199: i32);



implementation abituguru3_probe_loop_$bb49(in_$p0: ref, in_$p13: ref, in_$i73: i32, in_$p165: ref, in_$i166: i64, in_$p169: ref, in_$i170: i32, in_$i171: i1, in_$i172: i32, in_$i173: i1, in_$i164: i32) returns (out_$p165: ref, out_$i166: i64, out_$p169: ref, out_$i170: i32, out_$i171: i1, out_$i172: i32, out_$i173: i1, out_$i164: i32)
{

  entry:
    out_$p165, out_$i166, out_$p169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i164 := in_$p165, in_$i166, in_$p169, in_$i170, in_$i171, in_$i172, in_$i173, in_$i164;
    goto $bb49, exit;

  $bb49:
    assume {:verifier.code 0} true;
    goto corral_source_split_1462;

  $bb54:
    assume out_$i173 == 1;
    assume {:verifier.code 0} true;
    out_$i164 := out_$i172;
    goto $bb54_dummy;

  corral_source_split_1473:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54;

  corral_source_split_1472:
    assume {:verifier.code 0} true;
    out_$i173 := $slt.i32(out_$i172, in_$i73);
    goto corral_source_split_1473;

  $bb53:
    assume {:verifier.code 0} true;
    out_$i172 := $add.i32(out_$i164, 1);
    call {:si_unique_call 261} {:cexpr "i"} boogie_si_record_i32(out_$i172);
    goto corral_source_split_1472;

  $bb52:
    assume !(out_$i171 == 1);
    assume {:verifier.code 0} true;
    goto $bb53;

  corral_source_split_1468:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb52;

  corral_source_split_1467:
    assume {:verifier.code 0} true;
    out_$i171 := $ne.i32(out_$i170, 0);
    goto corral_source_split_1468;

  corral_source_split_1466:
    assume {:verifier.code 0} true;
    call {:si_unique_call 259} out_$i170 := device_create_file(out_$p165, out_$p169);
    call {:si_unique_call 260} {:cexpr "tmp___3"} boogie_si_record_i32(out_$i170);
    goto corral_source_split_1467;

  corral_source_split_1465:
    assume {:verifier.code 0} true;
    out_$p169 := $add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i166, 56)), $mul.ref(0, 1));
    goto corral_source_split_1466;

  corral_source_split_1464:
    assume {:verifier.code 0} true;
    out_$i166 := $sext.i32.i64(out_$i164);
    goto corral_source_split_1465;

  $bb50:
    assume {:verifier.code 0} true;
    out_$p165 := $add.ref($add.ref(in_$p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1464;

  corral_source_split_1462:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb54_dummy:
    call {:si_unique_call 1} out_$p165, out_$i166, out_$p169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i164 := abituguru3_probe_loop_$bb49(in_$p0, in_$p13, in_$i73, out_$p165, out_$i166, out_$p169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i164);
    return;

  exit:
    return;
}



procedure abituguru3_probe_loop_$bb49(in_$p0: ref, in_$p13: ref, in_$i73: i32, in_$p165: ref, in_$i166: i64, in_$p169: ref, in_$i170: i32, in_$i171: i1, in_$i172: i32, in_$i173: i1, in_$i164: i32) returns (out_$p165: ref, out_$i166: i64, out_$p169: ref, out_$i170: i32, out_$i171: i1, out_$i172: i32, out_$i173: i1, out_$i164: i32);



implementation abituguru3_probe_loop_$bb35(in_$p2: ref, in_$p13: ref, in_$i87: i32, in_$p89: ref, in_$i99: i64, in_$i100: i64, in_$i101: i64, in_$p106: ref, in_$p107: ref, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i32, in_$i112: i32, in_$i113: i64, in_$p115: ref, in_$i116: i64, in_$i117: i64, in_$p119: ref, in_$p120: ref, in_$p121: ref, in_$i122: i64, in_$p127: ref, in_$i128: i8, in_$i129: i64, in_$p132: ref, in_$i133: i64, in_$p134: ref, in_$i135: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i139: i1, in_$p95: ref, in_$i96: i32, in_$i97: i32, in_$i98: i32, in_$i140: i32, in_$i141: i32, in_$p142: ref, in_$i75: i32, in_cmdloc_dummy_var_0: [ref]i8, in_cmdloc_dummy_var_1: [ref]i8, in_cmdloc_dummy_var_2: [ref]i8) returns (out_$i99: i64, out_$i100: i64, out_$i101: i64, out_$p106: ref, out_$p107: ref, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i32, out_$i112: i32, out_$i113: i64, out_$p115: ref, out_$i116: i64, out_$i117: i64, out_$p119: ref, out_$p120: ref, out_$p121: ref, out_$i122: i64, out_$p127: ref, out_$i128: i8, out_$i129: i64, out_$p132: ref, out_$i133: i64, out_$p134: ref, out_$i135: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i139: i1, out_$p95: ref, out_$i96: i32, out_$i97: i32, out_$i98: i32, out_$i140: i32, out_$i141: i32, out_$p142: ref, out_cmdloc_dummy_var_0: [ref]i8, out_cmdloc_dummy_var_1: [ref]i8, out_cmdloc_dummy_var_2: [ref]i8)
{

  entry:
    out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2 := in_$i99, in_$i100, in_$i101, in_$p106, in_$p107, in_$i108, in_$p109, in_$i110, in_$i111, in_$i112, in_$i113, in_$p115, in_$i116, in_$i117, in_$p119, in_$p120, in_$p121, in_$i122, in_$p127, in_$i128, in_$i129, in_$p132, in_$i133, in_$p134, in_$i135, in_$i136, in_$i137, in_$i138, in_$i139, in_$p95, in_$i96, in_$i97, in_$i98, in_$i140, in_$i141, in_$p142, in_cmdloc_dummy_var_0, in_cmdloc_dummy_var_1, in_cmdloc_dummy_var_2;
    goto $bb35, exit;

  $bb35:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1396;

  $bb37:
    assume out_$i139 == 1;
    assume {:verifier.code 0} true;
    out_$p95, out_$i96, out_$i97, out_$i98 := out_$p134, out_$i137, out_$i136, out_$i135;
    goto $bb37_dummy;

  corral_source_split_1429:
    assume {:verifier.code 0} true;
    out_$i140, out_$i141, out_$p142 := out_$i135, out_$i136, out_$p134;
    assume true;
    goto $bb37;

  corral_source_split_1428:
    assume {:verifier.code 0} true;
    out_$i139 := $sgt.i32(out_$i138, out_$i137);
    goto corral_source_split_1429;

  corral_source_split_1427:
    assume {:verifier.code 0} true;
    out_$i138 := $load.i32($M.10, in_$p89);
    goto corral_source_split_1428;

  corral_source_split_1426:
    assume {:verifier.code 0} true;
    out_$i137 := $add.i32(out_$i96, 1);
    call {:si_unique_call 256} {:cexpr "j"} boogie_si_record_i32(out_$i137);
    goto corral_source_split_1427;

  corral_source_split_1425:
    assume {:verifier.code 0} true;
    out_$i136 := $add.i32(out_$i97, 1);
    call {:si_unique_call 255} {:cexpr "sysfs_attr_i"} boogie_si_record_i32(out_$i136);
    goto corral_source_split_1426;

  corral_source_split_1424:
    assume {:verifier.code 0} true;
    out_$i135 := $sub.i32(out_$i98, out_$i112);
    call {:si_unique_call 254} {:cexpr "sysfs_names_free"} boogie_si_record_i32(out_$i135);
    goto corral_source_split_1425;

  corral_source_split_1423:
    assume {:verifier.code 0} true;
    out_$p134 := $add.ref(out_$p95, $mul.ref(out_$i133, 1));
    goto corral_source_split_1424;

  corral_source_split_1422:
    assume {:verifier.code 0} true;
    out_$i133 := $sext.i32.i64(out_$i112);
    goto corral_source_split_1423;

  corral_source_split_1421:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, out_$p132, out_$i128);
    goto corral_source_split_1422;

  corral_source_split_1420:
    assume {:verifier.code 0} true;
    out_$p132 := $add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i129, 56)), $mul.ref(48, 1));
    goto corral_source_split_1421;

  corral_source_split_1419:
    assume {:verifier.code 0} true;
    out_$i129 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1420;

  corral_source_split_1418:
    assume {:verifier.code 0} true;
    out_$i128 := $trunc.i32.i8(in_$i75);
    goto corral_source_split_1419;

  corral_source_split_1417:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, out_$p127, out_$p95);
    goto corral_source_split_1418;

  corral_source_split_1416:
    assume {:verifier.code 0} true;
    out_$p127 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i122, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1417;

  corral_source_split_1415:
    assume {:verifier.code 0} true;
    out_$i122 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1416;

  corral_source_split_1414:
    assume {:verifier.code 0} true;
    out_cmdloc_dummy_var_0 := $M.0;
    out_cmdloc_dummy_var_1 := $M.0;
    call {:si_unique_call 253} out_cmdloc_dummy_var_2 := $memcpy.i8(out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_$p120, out_$p121, 56, $zext.i32.i64(8), 0 == 1);
    $M.0 := out_cmdloc_dummy_var_2;
    goto corral_source_split_1415;

  corral_source_split_1413:
    assume {:verifier.code 0} true;
    out_$p121 := $bitcast.ref.ref(out_$p119);
    goto corral_source_split_1414;

  corral_source_split_1412:
    assume {:verifier.code 0} true;
    out_$p120 := $bitcast.ref.ref(out_$p115);
    goto corral_source_split_1413;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    out_$p119 := $add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(out_$i117, 560)), $mul.ref(out_$i116, 56));
    goto corral_source_split_1412;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    out_$i117 := $sext.i32.i64(in_$i87);
    goto corral_source_split_1411;

  corral_source_split_1409:
    assume {:verifier.code 0} true;
    out_$i116 := $sext.i32.i64(out_$i96);
    goto corral_source_split_1410;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    out_$p115 := $add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i113, 56));
    goto corral_source_split_1409;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    out_$i113 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1408;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    out_$i112 := $add.i32(out_$i111, 1);
    call {:si_unique_call 252} {:cexpr "used"} boogie_si_record_i32(out_$i112);
    goto corral_source_split_1407;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    call {:si_unique_call 250} out_$i111 := snprintf.ref.i64.ref.i32(out_$p95, out_$i99, out_$p107, out_$i110);
    call {:si_unique_call 251} {:cexpr "tmp___2"} boogie_si_record_i32(out_$i111);
    goto corral_source_split_1406;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    out_$i110 := $load.i32($M.11, out_$p109);
    goto corral_source_split_1405;

  corral_source_split_1403:
    assume {:verifier.code 0} true;
    out_$p109 := $add.ref($add.ref(in_$p2, $mul.ref(0, 12)), $mul.ref(out_$i108, 4));
    goto corral_source_split_1404;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    out_$i108 := $sext.i32.i64(in_$i87);
    goto corral_source_split_1403;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    out_$p107 := $load.ref($M.0, out_$p106);
    goto corral_source_split_1402;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    out_$p106 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(out_$i101, 560)), $mul.ref(out_$i100, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1401;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    out_$i101 := $sext.i32.i64(in_$i87);
    goto corral_source_split_1400;

  corral_source_split_1398:
    assume {:verifier.code 0} true;
    out_$i100 := $sext.i32.i64(out_$i96);
    goto corral_source_split_1399;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i99 := $sext.i32.i64(out_$i98);
    goto corral_source_split_1398;

  corral_source_split_1396:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb37_dummy:
    call {:si_unique_call 1} out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2 := abituguru3_probe_loop_$bb35(in_$p2, in_$p13, in_$i87, in_$p89, out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, in_$i75, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2);
    return;

  exit:
    return;
}



procedure abituguru3_probe_loop_$bb35(in_$p2: ref, in_$p13: ref, in_$i87: i32, in_$p89: ref, in_$i99: i64, in_$i100: i64, in_$i101: i64, in_$p106: ref, in_$p107: ref, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i32, in_$i112: i32, in_$i113: i64, in_$p115: ref, in_$i116: i64, in_$i117: i64, in_$p119: ref, in_$p120: ref, in_$p121: ref, in_$i122: i64, in_$p127: ref, in_$i128: i8, in_$i129: i64, in_$p132: ref, in_$i133: i64, in_$p134: ref, in_$i135: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i139: i1, in_$p95: ref, in_$i96: i32, in_$i97: i32, in_$i98: i32, in_$i140: i32, in_$i141: i32, in_$p142: ref, in_$i75: i32, in_cmdloc_dummy_var_0: [ref]i8, in_cmdloc_dummy_var_1: [ref]i8, in_cmdloc_dummy_var_2: [ref]i8) returns (out_$i99: i64, out_$i100: i64, out_$i101: i64, out_$p106: ref, out_$p107: ref, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i32, out_$i112: i32, out_$i113: i64, out_$p115: ref, out_$i116: i64, out_$i117: i64, out_$p119: ref, out_$p120: ref, out_$p121: ref, out_$i122: i64, out_$p127: ref, out_$i128: i8, out_$i129: i64, out_$p132: ref, out_$i133: i64, out_$p134: ref, out_$i135: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i139: i1, out_$p95: ref, out_$i96: i32, out_$i97: i32, out_$i98: i32, out_$i140: i32, out_$i141: i32, out_$p142: ref, out_cmdloc_dummy_var_0: [ref]i8, out_cmdloc_dummy_var_1: [ref]i8, out_cmdloc_dummy_var_2: [ref]i8);
  modifies $M.0;



implementation abituguru3_probe_loop_$bb27(in_$p1: ref, in_$p2: ref, in_$p13: ref, in_$p66: ref, in_$i78: i1, in_$p82: ref, in_$p83: ref, in_$i84: i64, in_$p86: ref, in_$i87: i32, in_$i88: i64, in_$p89: ref, in_$i90: i32, in_$i91: i1, in_$i99: i64, in_$i100: i64, in_$i101: i64, in_$p106: ref, in_$p107: ref, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i32, in_$i112: i32, in_$i113: i64, in_$p115: ref, in_$i116: i64, in_$i117: i64, in_$p119: ref, in_$p120: ref, in_$p121: ref, in_$i122: i64, in_$p127: ref, in_$i128: i8, in_$i129: i64, in_$p132: ref, in_$i133: i64, in_$p134: ref, in_$i135: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i139: i1, in_$p95: ref, in_$i96: i32, in_$i97: i32, in_$i98: i32, in_$i140: i32, in_$i141: i32, in_$p142: ref, in_$i92: i32, in_$i93: i32, in_$p94: ref, in_$i143: i64, in_$p144: ref, in_$i145: i32, in_$i146: i32, in_$i147: i64, in_$p148: ref, in_$i149: i32, in_$p150: ref, in_$i151: i64, in_$p153: ref, in_$p154: ref, in_$i155: i64, in_$i156: i1, in_$p74: ref, in_$i75: i32, in_$i76: i32, in_$i77: i32, in_$i157: i32, in_$i158: i32, in_cmdloc_dummy_var_0: [ref]i8, in_cmdloc_dummy_var_1: [ref]i8, in_cmdloc_dummy_var_2: [ref]i8) returns (out_$i78: i1, out_$p82: ref, out_$p83: ref, out_$i84: i64, out_$p86: ref, out_$i87: i32, out_$i88: i64, out_$p89: ref, out_$i90: i32, out_$i91: i1, out_$i99: i64, out_$i100: i64, out_$i101: i64, out_$p106: ref, out_$p107: ref, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i32, out_$i112: i32, out_$i113: i64, out_$p115: ref, out_$i116: i64, out_$i117: i64, out_$p119: ref, out_$p120: ref, out_$p121: ref, out_$i122: i64, out_$p127: ref, out_$i128: i8, out_$i129: i64, out_$p132: ref, out_$i133: i64, out_$p134: ref, out_$i135: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i139: i1, out_$p95: ref, out_$i96: i32, out_$i97: i32, out_$i98: i32, out_$i140: i32, out_$i141: i32, out_$p142: ref, out_$i92: i32, out_$i93: i32, out_$p94: ref, out_$i143: i64, out_$p144: ref, out_$i145: i32, out_$i146: i32, out_$i147: i64, out_$p148: ref, out_$i149: i32, out_$p150: ref, out_$i151: i64, out_$p153: ref, out_$p154: ref, out_$i155: i64, out_$i156: i1, out_$p74: ref, out_$i75: i32, out_$i76: i32, out_$i77: i32, out_$i157: i32, out_$i158: i32, out_cmdloc_dummy_var_0: [ref]i8, out_cmdloc_dummy_var_1: [ref]i8, out_cmdloc_dummy_var_2: [ref]i8)
{

  entry:
    out_$i78, out_$p82, out_$p83, out_$i84, out_$p86, out_$i87, out_$i88, out_$p89, out_$i90, out_$i91, out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_$i92, out_$i93, out_$p94, out_$i143, out_$p144, out_$i145, out_$i146, out_$i147, out_$p148, out_$i149, out_$p150, out_$i151, out_$p153, out_$p154, out_$i155, out_$i156, out_$p74, out_$i75, out_$i76, out_$i77, out_$i157, out_$i158, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2 := in_$i78, in_$p82, in_$p83, in_$i84, in_$p86, in_$i87, in_$i88, in_$p89, in_$i90, in_$i91, in_$i99, in_$i100, in_$i101, in_$p106, in_$p107, in_$i108, in_$p109, in_$i110, in_$i111, in_$i112, in_$i113, in_$p115, in_$i116, in_$i117, in_$p119, in_$p120, in_$p121, in_$i122, in_$p127, in_$i128, in_$i129, in_$p132, in_$i133, in_$p134, in_$i135, in_$i136, in_$i137, in_$i138, in_$i139, in_$p95, in_$i96, in_$i97, in_$i98, in_$i140, in_$i141, in_$p142, in_$i92, in_$i93, in_$p94, in_$i143, in_$p144, in_$i145, in_$i146, in_$i147, in_$p148, in_$i149, in_$p150, in_$i151, in_$p153, in_$p154, in_$i155, in_$i156, in_$p74, in_$i75, in_$i76, in_$i77, in_$i157, in_$i158, in_cmdloc_dummy_var_0, in_cmdloc_dummy_var_1, in_cmdloc_dummy_var_2;
    goto $bb27, exit;

  $bb27:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1374;

  $bb40:
    assume out_$i156 == 1;
    assume {:verifier.code 0} true;
    out_$p74, out_$i75, out_$i76, out_$i77 := out_$p94, out_$i149, out_$i93, out_$i92;
    goto $bb40_dummy;

  corral_source_split_1447:
    assume {:verifier.code 0} true;
    out_$i157, out_$i158 := out_$i92, out_$i93;
    assume true;
    goto $bb40;

  corral_source_split_1446:
    assume {:verifier.code 0} true;
    out_$i156 := $ne.i64(out_$i155, 0);
    goto corral_source_split_1447;

  corral_source_split_1445:
    assume {:verifier.code 0} true;
    out_$i155 := $p2i.ref.i64(out_$p154);
    goto corral_source_split_1446;

  corral_source_split_1444:
    assume {:verifier.code 0} true;
    out_$p154 := $load.ref($M.0, out_$p153);
    goto corral_source_split_1445;

  corral_source_split_1443:
    assume {:verifier.code 0} true;
    out_$p153 := $add.ref($add.ref(out_$p150, $mul.ref(out_$i151, 32)), $mul.ref(0, 1));
    goto corral_source_split_1444;

  corral_source_split_1442:
    assume {:verifier.code 0} true;
    goto corral_source_split_1443;

  corral_source_split_1441:
    assume {:verifier.code 0} true;
    out_$i151 := $sext.i32.i64(out_$i149);
    goto corral_source_split_1442;

  corral_source_split_1440:
    assume {:verifier.code 0} true;
    out_$p150 := $load.ref($M.0, in_$p66);
    goto corral_source_split_1441;

  corral_source_split_1439:
    assume {:verifier.code 0} true;
    out_$i149 := $add.i32(out_$i75, 1);
    call {:si_unique_call 257} {:cexpr "i"} boogie_si_record_i32(out_$i149);
    goto corral_source_split_1440;

  corral_source_split_1438:
    assume {:verifier.code 0} true;
    $M.11 := $store.i32($M.11, out_$p148, out_$i146);
    goto corral_source_split_1439;

  corral_source_split_1437:
    assume {:verifier.code 0} true;
    out_$p148 := $add.ref($add.ref(in_$p2, $mul.ref(0, 12)), $mul.ref(out_$i147, 4));
    goto corral_source_split_1438;

  corral_source_split_1436:
    assume {:verifier.code 0} true;
    out_$i147 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1437;

  corral_source_split_1435:
    assume {:verifier.code 0} true;
    out_$i146 := $add.i32(out_$i145, 1);
    goto corral_source_split_1436;

  corral_source_split_1434:
    assume {:verifier.code 0} true;
    out_$i145 := $load.i32($M.11, out_$p144);
    goto corral_source_split_1435;

  corral_source_split_1433:
    assume {:verifier.code 0} true;
    out_$p144 := $add.ref($add.ref(in_$p2, $mul.ref(0, 12)), $mul.ref(out_$i143, 4));
    goto corral_source_split_1434;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i143 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1433;

  $bb34:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb33:
    assume {:verifier.code 0} true;
    assume !(out_$i91 == 1);
    goto $bb34;

  corral_source_split_1431:
    assume {:verifier.code 0} true;
    out_$i92, out_$i93, out_$p94 := out_$i140, out_$i141, out_$p142;
    goto $bb34;

  $bb38:
    assume !(out_$i139 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1431;

  corral_source_split_1429:
    assume {:verifier.code 0} true;
    out_$i140, out_$i141, out_$p142 := out_$i135, out_$i136, out_$p134;
    assume true;
    goto $bb37, $bb38;

  corral_source_split_1428:
    assume {:verifier.code 0} true;
    out_$i139 := $sgt.i32(out_$i138, out_$i137);
    goto corral_source_split_1429;

  corral_source_split_1427:
    assume {:verifier.code 0} true;
    out_$i138 := $load.i32($M.10, out_$p89);
    goto corral_source_split_1428;

  corral_source_split_1426:
    assume {:verifier.code 0} true;
    out_$i137 := $add.i32(out_$i96, 1);
    call {:si_unique_call 256} {:cexpr "j"} boogie_si_record_i32(out_$i137);
    goto corral_source_split_1427;

  corral_source_split_1425:
    assume {:verifier.code 0} true;
    out_$i136 := $add.i32(out_$i97, 1);
    call {:si_unique_call 255} {:cexpr "sysfs_attr_i"} boogie_si_record_i32(out_$i136);
    goto corral_source_split_1426;

  corral_source_split_1424:
    assume {:verifier.code 0} true;
    out_$i135 := $sub.i32(out_$i98, out_$i112);
    call {:si_unique_call 254} {:cexpr "sysfs_names_free"} boogie_si_record_i32(out_$i135);
    goto corral_source_split_1425;

  corral_source_split_1423:
    assume {:verifier.code 0} true;
    out_$p134 := $add.ref(out_$p95, $mul.ref(out_$i133, 1));
    goto corral_source_split_1424;

  corral_source_split_1422:
    assume {:verifier.code 0} true;
    out_$i133 := $sext.i32.i64(out_$i112);
    goto corral_source_split_1423;

  corral_source_split_1421:
    assume {:verifier.code 0} true;
    $M.0 := $store.i8($M.0, out_$p132, out_$i128);
    goto corral_source_split_1422;

  corral_source_split_1420:
    assume {:verifier.code 0} true;
    out_$p132 := $add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i129, 56)), $mul.ref(48, 1));
    goto corral_source_split_1421;

  corral_source_split_1419:
    assume {:verifier.code 0} true;
    out_$i129 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1420;

  corral_source_split_1418:
    assume {:verifier.code 0} true;
    out_$i128 := $trunc.i32.i8(out_$i75);
    goto corral_source_split_1419;

  corral_source_split_1417:
    assume {:verifier.code 0} true;
    $M.0 := $store.ref($M.0, out_$p127, out_$p95);
    goto corral_source_split_1418;

  corral_source_split_1416:
    assume {:verifier.code 0} true;
    out_$p127 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i122, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1417;

  corral_source_split_1415:
    assume {:verifier.code 0} true;
    out_$i122 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1416;

  corral_source_split_1414:
    assume {:verifier.code 0} true;
    out_cmdloc_dummy_var_0 := $M.0;
    out_cmdloc_dummy_var_1 := $M.0;
    call {:si_unique_call 253} out_cmdloc_dummy_var_2 := $memcpy.i8(out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_$p120, out_$p121, 56, $zext.i32.i64(8), 0 == 1);
    $M.0 := out_cmdloc_dummy_var_2;
    goto corral_source_split_1415;

  corral_source_split_1413:
    assume {:verifier.code 0} true;
    out_$p121 := $bitcast.ref.ref(out_$p119);
    goto corral_source_split_1414;

  corral_source_split_1412:
    assume {:verifier.code 0} true;
    out_$p120 := $bitcast.ref.ref(out_$p115);
    goto corral_source_split_1413;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    out_$p119 := $add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(out_$i117, 560)), $mul.ref(out_$i116, 56));
    goto corral_source_split_1412;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    out_$i117 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1411;

  corral_source_split_1409:
    assume {:verifier.code 0} true;
    out_$i116 := $sext.i32.i64(out_$i96);
    goto corral_source_split_1410;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    out_$p115 := $add.ref($add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i113, 56));
    goto corral_source_split_1409;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    out_$i113 := $sext.i32.i64(out_$i97);
    goto corral_source_split_1408;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    out_$i112 := $add.i32(out_$i111, 1);
    call {:si_unique_call 252} {:cexpr "used"} boogie_si_record_i32(out_$i112);
    goto corral_source_split_1407;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    call {:si_unique_call 250} out_$i111 := snprintf.ref.i64.ref.i32(out_$p95, out_$i99, out_$p107, out_$i110);
    call {:si_unique_call 251} {:cexpr "tmp___2"} boogie_si_record_i32(out_$i111);
    goto corral_source_split_1406;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    out_$i110 := $load.i32($M.11, out_$p109);
    goto corral_source_split_1405;

  corral_source_split_1403:
    assume {:verifier.code 0} true;
    out_$p109 := $add.ref($add.ref(in_$p2, $mul.ref(0, 12)), $mul.ref(out_$i108, 4));
    goto corral_source_split_1404;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    out_$i108 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1403;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    out_$p107 := $load.ref($M.0, out_$p106);
    goto corral_source_split_1402;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    out_$p106 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(abituguru3_sysfs_templ, $mul.ref(0, 1680)), $mul.ref(out_$i101, 560)), $mul.ref(out_$i100, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1401;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    out_$i101 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1400;

  corral_source_split_1398:
    assume {:verifier.code 0} true;
    out_$i100 := $sext.i32.i64(out_$i96);
    goto corral_source_split_1399;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i99 := $sext.i32.i64(out_$i98);
    goto corral_source_split_1398;

  corral_source_split_1396:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb35:
    call out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2 := abituguru3_probe_loop_$bb35(in_$p2, in_$p13, out_$i87, out_$p89, out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_$i75, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2);
    goto $bb35_last;

  $bb35_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1396;

  corral_source_split_1394:
    assume {:verifier.code 0} true;
    out_$p95, out_$i96, out_$i97, out_$i98 := out_$p74, 0, out_$i76, out_$i77;
    goto $bb35;

  $bb37:
    assume out_$i139 == 1;
    assume {:verifier.code 0} true;
    out_$p95, out_$i96, out_$i97, out_$i98 := out_$p134, out_$i137, out_$i136, out_$i135;
    assume false;
    return;

  $bb32:
    assume out_$i91 == 1;
    goto corral_source_split_1394;

  corral_source_split_1392:
    assume {:verifier.code 0} true;
    out_$i92, out_$i93, out_$p94 := out_$i77, out_$i76, out_$p74;
    assume true;
    goto $bb32, $bb33;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    out_$i91 := $sgt.i32(out_$i90, 0);
    goto corral_source_split_1392;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    out_$i90 := $load.i32($M.10, out_$p89);
    goto corral_source_split_1391;

  corral_source_split_1389:
    assume {:verifier.code 0} true;
    out_$p89 := $add.ref($add.ref(in_$p1, $mul.ref(0, 12)), $mul.ref(out_$i88, 4));
    goto corral_source_split_1390;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    out_$i88 := $sext.i32.i64(out_$i87);
    goto corral_source_split_1389;

  corral_source_split_1387:
    assume {:verifier.code 0} true;
    out_$i87 := $load.i32($M.0, out_$p86);
    call {:si_unique_call 249} {:cexpr "type"} boogie_si_record_i32(out_$i87);
    goto corral_source_split_1388;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    out_$p86 := $add.ref($add.ref(out_$p83, $mul.ref(out_$i84, 32)), $mul.ref(12, 1));
    goto corral_source_split_1387;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    goto corral_source_split_1386;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    out_$i84 := $sext.i32.i64(out_$i75);
    goto corral_source_split_1385;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    out_$p83 := $load.ref($M.0, out_$p82);
    goto corral_source_split_1384;

  $bb31:
    assume {:verifier.code 0} true;
    out_$p82 := $add.ref($add.ref(in_$p13, $mul.ref(0, 18264)), $mul.ref(18056, 1));
    goto corral_source_split_1383;

  $bb30:
    assume !(out_$i78 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  corral_source_split_1376:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb30;

  $bb28:
    assume {:verifier.code 0} true;
    out_$i78 := $sgt.i32(out_$i75, 25);
    goto corral_source_split_1376;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb40_dummy:
    call {:si_unique_call 1} out_$i78, out_$p82, out_$p83, out_$i84, out_$p86, out_$i87, out_$i88, out_$p89, out_$i90, out_$i91, out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_$i92, out_$i93, out_$p94, out_$i143, out_$p144, out_$i145, out_$i146, out_$i147, out_$p148, out_$i149, out_$p150, out_$i151, out_$p153, out_$p154, out_$i155, out_$i156, out_$p74, out_$i75, out_$i76, out_$i77, out_$i157, out_$i158, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2 := abituguru3_probe_loop_$bb27(in_$p1, in_$p2, in_$p13, in_$p66, out_$i78, out_$p82, out_$p83, out_$i84, out_$p86, out_$i87, out_$i88, out_$p89, out_$i90, out_$i91, out_$i99, out_$i100, out_$i101, out_$p106, out_$p107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p115, out_$i116, out_$i117, out_$p119, out_$p120, out_$p121, out_$i122, out_$p127, out_$i128, out_$i129, out_$p132, out_$i133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$p95, out_$i96, out_$i97, out_$i98, out_$i140, out_$i141, out_$p142, out_$i92, out_$i93, out_$p94, out_$i143, out_$p144, out_$i145, out_$i146, out_$i147, out_$p148, out_$i149, out_$p150, out_$i151, out_$p153, out_$p154, out_$i155, out_$i156, out_$p74, out_$i75, out_$i76, out_$i77, out_$i157, out_$i158, out_cmdloc_dummy_var_0, out_cmdloc_dummy_var_1, out_cmdloc_dummy_var_2);
    return;

  exit:
    return;
}



procedure abituguru3_probe_loop_$bb27(in_$p1: ref, in_$p2: ref, in_$p13: ref, in_$p66: ref, in_$i78: i1, in_$p82: ref, in_$p83: ref, in_$i84: i64, in_$p86: ref, in_$i87: i32, in_$i88: i64, in_$p89: ref, in_$i90: i32, in_$i91: i1, in_$i99: i64, in_$i100: i64, in_$i101: i64, in_$p106: ref, in_$p107: ref, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i32, in_$i112: i32, in_$i113: i64, in_$p115: ref, in_$i116: i64, in_$i117: i64, in_$p119: ref, in_$p120: ref, in_$p121: ref, in_$i122: i64, in_$p127: ref, in_$i128: i8, in_$i129: i64, in_$p132: ref, in_$i133: i64, in_$p134: ref, in_$i135: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i139: i1, in_$p95: ref, in_$i96: i32, in_$i97: i32, in_$i98: i32, in_$i140: i32, in_$i141: i32, in_$p142: ref, in_$i92: i32, in_$i93: i32, in_$p94: ref, in_$i143: i64, in_$p144: ref, in_$i145: i32, in_$i146: i32, in_$i147: i64, in_$p148: ref, in_$i149: i32, in_$p150: ref, in_$i151: i64, in_$p153: ref, in_$p154: ref, in_$i155: i64, in_$i156: i1, in_$p74: ref, in_$i75: i32, in_$i76: i32, in_$i77: i32, in_$i157: i32, in_$i158: i32, in_cmdloc_dummy_var_0: [ref]i8, in_cmdloc_dummy_var_1: [ref]i8, in_cmdloc_dummy_var_2: [ref]i8) returns (out_$i78: i1, out_$p82: ref, out_$p83: ref, out_$i84: i64, out_$p86: ref, out_$i87: i32, out_$i88: i64, out_$p89: ref, out_$i90: i32, out_$i91: i1, out_$i99: i64, out_$i100: i64, out_$i101: i64, out_$p106: ref, out_$p107: ref, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i32, out_$i112: i32, out_$i113: i64, out_$p115: ref, out_$i116: i64, out_$i117: i64, out_$p119: ref, out_$p120: ref, out_$p121: ref, out_$i122: i64, out_$p127: ref, out_$i128: i8, out_$i129: i64, out_$p132: ref, out_$i133: i64, out_$p134: ref, out_$i135: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i139: i1, out_$p95: ref, out_$i96: i32, out_$i97: i32, out_$i98: i32, out_$i140: i32, out_$i141: i32, out_$p142: ref, out_$i92: i32, out_$i93: i32, out_$p94: ref, out_$i143: i64, out_$p144: ref, out_$i145: i32, out_$i146: i32, out_$i147: i64, out_$p148: ref, out_$i149: i32, out_$p150: ref, out_$i151: i64, out_$p153: ref, out_$p154: ref, out_$i155: i64, out_$i156: i1, out_$p74: ref, out_$i75: i32, out_$i76: i32, out_$i77: i32, out_$i157: i32, out_$i158: i32, out_cmdloc_dummy_var_0: [ref]i8, out_cmdloc_dummy_var_1: [ref]i8, out_cmdloc_dummy_var_2: [ref]i8);
  modifies $M.11, $M.0;



implementation abituguru3_remove_loop_$bb4(in_$p0: ref, in_$p2: ref, in_$p14: ref, in_$i15: i64, in_$p18: ref, in_$i19: i32, in_$i20: i64, in_$p24: ref, in_$p25: ref, in_$i26: i64, in_$i27: i1, in_$i13: i32) returns (out_$p14: ref, out_$i15: i64, out_$p18: ref, out_$i19: i32, out_$i20: i64, out_$p24: ref, out_$p25: ref, out_$i26: i64, out_$i27: i1, out_$i13: i32)
{

  entry:
    out_$p14, out_$i15, out_$p18, out_$i19, out_$i20, out_$p24, out_$p25, out_$i26, out_$i27, out_$i13 := in_$p14, in_$i15, in_$p18, in_$i19, in_$i20, in_$p24, in_$p25, in_$i26, in_$i27, in_$i13;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    goto corral_source_split_1577;

  $bb6:
    assume out_$i27 == 1;
    assume {:verifier.code 0} true;
    out_$i13 := out_$i19;
    goto $bb6_dummy;

  corral_source_split_1587:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb6;

  corral_source_split_1586:
    assume {:verifier.code 0} true;
    out_$i27 := $ne.i64(out_$i26, 0);
    goto corral_source_split_1587;

  corral_source_split_1585:
    assume {:verifier.code 0} true;
    out_$i26 := $p2i.ref.i64(out_$p25);
    goto corral_source_split_1586;

  corral_source_split_1584:
    assume {:verifier.code 0} true;
    out_$p25 := $load.ref($M.0, out_$p24);
    goto corral_source_split_1585;

  corral_source_split_1583:
    assume {:verifier.code 0} true;
    out_$i20 := $sext.i32.i64(out_$i19);
    out_$p24 := $add.ref($add.ref($add.ref($add.ref($add.ref($add.ref(in_$p2, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i20, 56)), $mul.ref(0, 1)), $mul.ref(0, 1)), $mul.ref(0, 1));
    goto corral_source_split_1584;

  corral_source_split_1582:
    assume {:verifier.code 0} true;
    out_$i19 := $add.i32(out_$i13, 1);
    call {:si_unique_call 276} {:cexpr "i"} boogie_si_record_i32(out_$i19);
    goto corral_source_split_1583;

  corral_source_split_1581:
    assume {:verifier.code 0} true;
    call {:si_unique_call 275} device_remove_file(out_$p14, out_$p18);
    goto corral_source_split_1582;

  corral_source_split_1580:
    assume {:verifier.code 0} true;
    out_$p18 := $add.ref($add.ref($add.ref($add.ref(in_$p2, $mul.ref(0, 18264)), $mul.ref(184, 1)), $mul.ref(out_$i15, 56)), $mul.ref(0, 1));
    goto corral_source_split_1581;

  corral_source_split_1579:
    assume {:verifier.code 0} true;
    out_$i15 := $sext.i32.i64(out_$i13);
    goto corral_source_split_1580;

  $bb5:
    assume {:verifier.code 0} true;
    out_$p14 := $add.ref($add.ref(in_$p0, $mul.ref(0, 1480)), $mul.ref(16, 1));
    goto corral_source_split_1579;

  corral_source_split_1577:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb6_dummy:
    call {:si_unique_call 1} out_$p14, out_$i15, out_$p18, out_$i19, out_$i20, out_$p24, out_$p25, out_$i26, out_$i27, out_$i13 := abituguru3_remove_loop_$bb4(in_$p0, in_$p2, out_$p14, out_$i15, out_$p18, out_$i19, out_$i20, out_$p24, out_$p25, out_$i26, out_$i27, out_$i13);
    return;

  exit:
    return;
}



procedure abituguru3_remove_loop_$bb4(in_$p0: ref, in_$p2: ref, in_$p14: ref, in_$i15: i64, in_$p18: ref, in_$i19: i32, in_$i20: i64, in_$p24: ref, in_$p25: ref, in_$i26: i64, in_$i27: i1, in_$i13: i32) returns (out_$p14: ref, out_$i15: i64, out_$p18: ref, out_$i19: i32, out_$i20: i64, out_$p24: ref, out_$p25: ref, out_$i26: i64, out_$i27: i1, out_$i13: i32);



implementation main_loop_$bb1(in_$i0: i32, in_$i1: i1, in_$i2: i1, in_$i3: i1, in_$i4: i1, in_$i5: i32, in_$i6: i1, in_$i7: i32, in_$i8: i1, in_$i9: i1, in_$i10: i1, in_$i11: i32, in_$i12: i1, in_$p13: ref, in_$i14: i32, in_$i15: i32, in_$i16: i1, in_$i17: i32, in_$i18: i32, in_$i19: i32, in_$i20: i1, in_$i21: i32, in_$i22: i1, in_$p23: ref, in_$i24: i32, in_$i25: i32, in_$i26: i1, in_$i27: i32, in_$i28: i32, in_$i29: i32, in_$i30: i1, in_$i31: i32, in_$i32: i1, in_$p33: ref, in_$i34: i32, in_$i35: i32, in_$i36: i1, in_$i37: i32, in_$i38: i32, in_$i39: i32, in_$i40: i1, in_$i41: i32, in_$i42: i1, in_$i43: i1, in_$i44: i1, in_$i45: i32, in_$i46: i1, in_$i47: i32, in_$i48: i1, in_$i49: i32, in_$i50: i1, in_$i51: i32, in_$i52: i32, in_$i53: i1, in_$i54: i32, in_$i55: i1, in_$i56: i32, in_$i57: i1, in_$i58: i32, in_$i59: i1, in_$i60: i1, in_$i61: i1, in_$i62: i1, in_$i63: i1, in_$i64: i1, in_$i65: i1, in_$i66: i1, in_$i67: i1, in_$i68: i1, in_$i69: i1, in_$i70: i1, in_$i71: i1, in_$i72: i1, in_$i73: i1, in_$i74: i1, in_$i75: i1, in_$i76: i1, in_$i77: i1, in_$i78: i1, in_$i79: i1, in_$i80: i32, in_$i81: i1, in_$p82: ref, in_$i83: i32, in_$i84: i32, in_$i85: i1, in_$i86: i32, in_$i87: i1, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i1, in_$i92: i32, in_$i93: i1, in_$p94: ref, in_$i95: i32, in_$i96: i32, in_$i97: i1, in_$i98: i32, in_$i99: i1, in_$p100: ref, in_$i101: i32, in_$i102: i32, in_$i103: i1, in_$i104: i32, in_$i105: i1, in_$p106: ref, in_$i107: i32, in_$i108: i32, in_$i109: i1, in_$i110: i32, in_$i111: i1, in_$p112: ref, in_$i113: i32, in_$i114: i32, in_$i115: i1, in_$i116: i32, in_$i117: i1, in_$i118: i32, in_$i119: i32, in_$i120: i1, in_$i121: i32, in_$i122: i1, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i32, in_$i127: i1, in_$i128: i32, in_$i129: i32, in_$i130: i1, in_$i131: i32, in_$i132: i1, in_$i133: i32, in_$i134: i32, in_$i135: i1, in_$i136: i32, in_$i137: i1, in_$i138: i32, in_$i139: i32, in_$i140: i1, in_$i141: i32, in_$i142: i1, in_$i143: i32, in_$i144: i32, in_$i145: i1, in_$i146: i32, in_$i147: i1, in_$i148: i32, in_$i149: i32, in_$i150: i1, in_$i151: i32, in_$i152: i32, in_$i153: i32, in_$i154: i1, in_$i155: i32, in_$i156: i32, in_$i157: i1, in_$i158: i32, in_$i159: i1, in_$i160: i32, in_$i161: i32, in_$i162: i1, in_$i163: i32, in_$i164: i1, in_$i165: i32, in_$i166: i32, in_$i167: i1, in_$i168: i32, in_$i169: i1, in_$i170: i32, in_$i171: i32, in_$i172: i1, in_$i173: i32, in_$i174: i1, in_$i175: i32, in_$i176: i32, in_$i177: i1, in_$i178: i32, in_$i179: i1, in_$i180: i32, in_$i181: i32, in_$i182: i1, in_$i183: i32, in_$i184: i1, in_$i186: i32, in_$i187: i32, in_vslice_dummy_var_9: i32) returns (out_$i0: i32, out_$i1: i1, out_$i2: i1, out_$i3: i1, out_$i4: i1, out_$i5: i32, out_$i6: i1, out_$i7: i32, out_$i8: i1, out_$i9: i1, out_$i10: i1, out_$i11: i32, out_$i12: i1, out_$p13: ref, out_$i14: i32, out_$i15: i32, out_$i16: i1, out_$i17: i32, out_$i18: i32, out_$i19: i32, out_$i20: i1, out_$i21: i32, out_$i22: i1, out_$p23: ref, out_$i24: i32, out_$i25: i32, out_$i26: i1, out_$i27: i32, out_$i28: i32, out_$i29: i32, out_$i30: i1, out_$i31: i32, out_$i32: i1, out_$p33: ref, out_$i34: i32, out_$i35: i32, out_$i36: i1, out_$i37: i32, out_$i38: i32, out_$i39: i32, out_$i40: i1, out_$i41: i32, out_$i42: i1, out_$i43: i1, out_$i44: i1, out_$i45: i32, out_$i46: i1, out_$i47: i32, out_$i48: i1, out_$i49: i32, out_$i50: i1, out_$i51: i32, out_$i52: i32, out_$i53: i1, out_$i54: i32, out_$i55: i1, out_$i56: i32, out_$i57: i1, out_$i58: i32, out_$i59: i1, out_$i60: i1, out_$i61: i1, out_$i62: i1, out_$i63: i1, out_$i64: i1, out_$i65: i1, out_$i66: i1, out_$i67: i1, out_$i68: i1, out_$i69: i1, out_$i70: i1, out_$i71: i1, out_$i72: i1, out_$i73: i1, out_$i74: i1, out_$i75: i1, out_$i76: i1, out_$i77: i1, out_$i78: i1, out_$i79: i1, out_$i80: i32, out_$i81: i1, out_$p82: ref, out_$i83: i32, out_$i84: i32, out_$i85: i1, out_$i86: i32, out_$i87: i1, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i1, out_$i92: i32, out_$i93: i1, out_$p94: ref, out_$i95: i32, out_$i96: i32, out_$i97: i1, out_$i98: i32, out_$i99: i1, out_$p100: ref, out_$i101: i32, out_$i102: i32, out_$i103: i1, out_$i104: i32, out_$i105: i1, out_$p106: ref, out_$i107: i32, out_$i108: i32, out_$i109: i1, out_$i110: i32, out_$i111: i1, out_$p112: ref, out_$i113: i32, out_$i114: i32, out_$i115: i1, out_$i116: i32, out_$i117: i1, out_$i118: i32, out_$i119: i32, out_$i120: i1, out_$i121: i32, out_$i122: i1, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i32, out_$i127: i1, out_$i128: i32, out_$i129: i32, out_$i130: i1, out_$i131: i32, out_$i132: i1, out_$i133: i32, out_$i134: i32, out_$i135: i1, out_$i136: i32, out_$i137: i1, out_$i138: i32, out_$i139: i32, out_$i140: i1, out_$i141: i32, out_$i142: i1, out_$i143: i32, out_$i144: i32, out_$i145: i1, out_$i146: i32, out_$i147: i1, out_$i148: i32, out_$i149: i32, out_$i150: i1, out_$i151: i32, out_$i152: i32, out_$i153: i32, out_$i154: i1, out_$i155: i32, out_$i156: i32, out_$i157: i1, out_$i158: i32, out_$i159: i1, out_$i160: i32, out_$i161: i32, out_$i162: i1, out_$i163: i32, out_$i164: i1, out_$i165: i32, out_$i166: i32, out_$i167: i1, out_$i168: i32, out_$i169: i1, out_$i170: i32, out_$i171: i32, out_$i172: i1, out_$i173: i32, out_$i174: i1, out_$i175: i32, out_$i176: i32, out_$i177: i1, out_$i178: i32, out_$i179: i1, out_$i180: i32, out_$i181: i32, out_$i182: i1, out_$i183: i32, out_$i184: i1, out_$i186: i32, out_$i187: i32, out_vslice_dummy_var_9: i32)
{

  entry:
    out_$i0, out_$i1, out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$p13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$p23, out_$i24, out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$p33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$p100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i162, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i186, out_$i187, out_vslice_dummy_var_9 := in_$i0, in_$i1, in_$i2, in_$i3, in_$i4, in_$i5, in_$i6, in_$i7, in_$i8, in_$i9, in_$i10, in_$i11, in_$i12, in_$p13, in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21, in_$i22, in_$p23, in_$i24, in_$i25, in_$i26, in_$i27, in_$i28, in_$i29, in_$i30, in_$i31, in_$i32, in_$p33, in_$i34, in_$i35, in_$i36, in_$i37, in_$i38, in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45, in_$i46, in_$i47, in_$i48, in_$i49, in_$i50, in_$i51, in_$i52, in_$i53, in_$i54, in_$i55, in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$i62, in_$i63, in_$i64, in_$i65, in_$i66, in_$i67, in_$i68, in_$i69, in_$i70, in_$i71, in_$i72, in_$i73, in_$i74, in_$i75, in_$i76, in_$i77, in_$i78, in_$i79, in_$i80, in_$i81, in_$p82, in_$i83, in_$i84, in_$i85, in_$i86, in_$i87, in_$p88, in_$i89, in_$i90, in_$i91, in_$i92, in_$i93, in_$p94, in_$i95, in_$i96, in_$i97, in_$i98, in_$i99, in_$p100, in_$i101, in_$i102, in_$i103, in_$i104, in_$i105, in_$p106, in_$i107, in_$i108, in_$i109, in_$i110, in_$i111, in_$p112, in_$i113, in_$i114, in_$i115, in_$i116, in_$i117, in_$i118, in_$i119, in_$i120, in_$i121, in_$i122, in_$i123, in_$i124, in_$i125, in_$i126, in_$i127, in_$i128, in_$i129, in_$i130, in_$i131, in_$i132, in_$i133, in_$i134, in_$i135, in_$i136, in_$i137, in_$i138, in_$i139, in_$i140, in_$i141, in_$i142, in_$i143, in_$i144, in_$i145, in_$i146, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i152, in_$i153, in_$i154, in_$i155, in_$i156, in_$i157, in_$i158, in_$i159, in_$i160, in_$i161, in_$i162, in_$i163, in_$i164, in_$i165, in_$i166, in_$i167, in_$i168, in_$i169, in_$i170, in_$i171, in_$i172, in_$i173, in_$i174, in_$i175, in_$i176, in_$i177, in_$i178, in_$i179, in_$i180, in_$i181, in_$i182, in_$i183, in_$i184, in_$i186, in_$i187, in_vslice_dummy_var_9;
    goto $bb1, exit;

  $bb1:
    assume {:verifier.code 1} true;
    call {:si_unique_call 326} out_$i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 327} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i0);
    call {:si_unique_call 328} {:cexpr "tmp"} boogie_si_record_i32(out_$i0);
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb50_dummy;

  $bb249:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb247:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb13:
    assume !(out_$i6 == 1);
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb28:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb27:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb23:
    assume !(out_$i12 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb26:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb25:
    assume !(out_$i16 == 1);
    assume {:verifier.code 0} true;
    goto $bb26;

  corral_source_split_1739:
    assume {:verifier.code 0} true;
    goto $bb26;

  corral_source_split_1738:
    assume {:verifier.code 0} true;
    $M.22 := 1;
    call {:si_unique_call 336} {:cexpr "probed_1"} boogie_si_record_i32(1);
    goto corral_source_split_1739;

  corral_source_split_1737:
    assume {:verifier.code 0} true;
    $M.18 := out_$i18;
    call {:si_unique_call 335} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i18);
    goto corral_source_split_1738;

  corral_source_split_1736:
    assume {:verifier.code 0} true;
    out_$i18 := $add.i32(out_$i17, 1);
    goto corral_source_split_1737;

  corral_source_split_1735:
    assume {:verifier.code 0} true;
    out_$i17 := $M.18;
    goto corral_source_split_1736;

  corral_source_split_1734:
    assume {:verifier.code 0} true;
    $M.17 := 2;
    call {:si_unique_call 334} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
    goto corral_source_split_1735;

  $bb24:
    assume out_$i16 == 1;
    goto corral_source_split_1734;

  corral_source_split_1732:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  corral_source_split_1731:
    assume {:verifier.code 0} true;
    out_$i16 := $eq.i32(out_$i15, 0);
    goto corral_source_split_1732;

  corral_source_split_1730:
    assume {:verifier.code 0} true;
    out_$i15 := $M.21;
    goto corral_source_split_1731;

  corral_source_split_1729:
    assume {:verifier.code 0} true;
    $M.21 := out_$i14;
    call {:si_unique_call 333} {:cexpr "ldv_retval_1"} boogie_si_record_i32(out_$i14);
    goto corral_source_split_1730;

  SeqInstr_39:
    goto corral_source_split_1729;

  SeqInstr_38:
    assume assertsPassed;
    goto SeqInstr_39;

  corral_source_split_1728:
    assume {:verifier.code 0} true;
    call {:si_unique_call 332} out_$i14 := abituguru3_probe(out_$p13);
    goto SeqInstr_38;

  corral_source_split_1727:
    assume {:verifier.code 0} true;
    out_$p13 := $M.16;
    goto corral_source_split_1728;

  $bb22:
    assume out_$i12 == 1;
    goto corral_source_split_1727;

  corral_source_split_1725:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  corral_source_split_1724:
    assume {:verifier.code 0} true;
    out_$i12 := $eq.i32(out_$i11, 1);
    goto corral_source_split_1725;

  corral_source_split_1723:
    assume {:verifier.code 0} true;
    out_$i11 := $M.17;
    goto corral_source_split_1724;

  $bb20:
    assume out_$i10 == 1;
    goto corral_source_split_1723;

  $bb15:
    assume out_$i8 == 1;
    assume {:verifier.code 0} true;
    out_$i10 := $eq.i32(out_$i7, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i8 := $slt.i32(out_$i7, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  corral_source_split_1717:
    assume {:verifier.code 1} true;
    call {:si_unique_call 329} out_$i7 := __VERIFIER_nondet_int();
    call {:si_unique_call 330} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i7);
    call {:si_unique_call 331} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i7);
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb12:
    assume out_$i6 == 1;
    goto corral_source_split_1717;

  corral_source_split_1715:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  corral_source_split_1714:
    assume {:verifier.code 0} true;
    out_$i6 := $ne.i32(out_$i5, 0);
    goto corral_source_split_1715;

  corral_source_split_1713:
    assume {:verifier.code 0} true;
    out_$i5 := $M.17;
    goto corral_source_split_1714;

  $bb10:
    assume out_$i4 == 1;
    goto corral_source_split_1713;

  $bb3:
    assume out_$i1 == 1;
    assume {:verifier.code 0} true;
    out_$i4 := $eq.i32(out_$i0, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i1 := $slt.i32(out_$i0, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb40:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb44:
    assume !(out_$i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb45;

  corral_source_split_1778:
    assume {:verifier.code 0} true;
    goto $bb45;

  corral_source_split_1777:
    assume {:verifier.code 0} true;
    $M.22 := 0;
    call {:si_unique_call 346} {:cexpr "probed_1"} boogie_si_record_i32(0);
    goto corral_source_split_1778;

  corral_source_split_1776:
    assume {:verifier.code 0} true;
    $M.18 := out_$i38;
    call {:si_unique_call 345} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i38);
    goto corral_source_split_1777;

  corral_source_split_1775:
    assume {:verifier.code 0} true;
    out_$i38 := $sub.i32(out_$i37, 1);
    goto corral_source_split_1776;

  corral_source_split_1774:
    assume {:verifier.code 0} true;
    out_$i37 := $M.18;
    goto corral_source_split_1775;

  corral_source_split_1773:
    assume {:verifier.code 0} true;
    $M.17 := 1;
    call {:si_unique_call 344} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_1774;

  $bb43:
    assume out_$i36 == 1;
    goto corral_source_split_1773;

  corral_source_split_1771:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb43, $bb44;

  corral_source_split_1770:
    assume {:verifier.code 0} true;
    out_$i36 := $eq.i32(out_$i35, 0);
    goto corral_source_split_1771;

  corral_source_split_1769:
    assume {:verifier.code 0} true;
    out_$i35 := $M.23;
    goto corral_source_split_1770;

  corral_source_split_1768:
    assume {:verifier.code 0} true;
    $M.23 := out_$i34;
    call {:si_unique_call 343} {:cexpr "ldv_retval_0"} boogie_si_record_i32(out_$i34);
    goto corral_source_split_1769;

  corral_source_split_1767:
    assume {:verifier.code 0} true;
    call {:si_unique_call 342} out_$i34 := abituguru3_remove(out_$p33);
    goto corral_source_split_1768;

  corral_source_split_1766:
    assume {:verifier.code 0} true;
    out_$p33 := $M.16;
    goto corral_source_split_1767;

  $bb41:
    assume out_$i32 == 1;
    goto corral_source_split_1766;

  corral_source_split_1764:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41, $bb42;

  corral_source_split_1763:
    assume {:verifier.code 0} true;
    out_$i32 := $eq.i32(out_$i31, 1);
    goto corral_source_split_1764;

  corral_source_split_1762:
    assume {:verifier.code 0} true;
    out_$i31 := $M.22;
    goto corral_source_split_1763;

  $bb38:
    assume out_$i30 == 1;
    goto corral_source_split_1762;

  corral_source_split_1760:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  corral_source_split_1759:
    assume {:verifier.code 0} true;
    out_$i30 := $eq.i32(out_$i29, 2);
    goto corral_source_split_1760;

  $bb37:
    assume {:verifier.code 0} true;
    out_$i29 := $M.17;
    goto corral_source_split_1759;

  $bb31:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb36:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb35:
    assume !(out_$i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  corral_source_split_1757:
    assume {:verifier.code 0} true;
    goto $bb36;

  corral_source_split_1756:
    assume {:verifier.code 0} true;
    $M.22 := 0;
    call {:si_unique_call 341} {:cexpr "probed_1"} boogie_si_record_i32(0);
    goto corral_source_split_1757;

  corral_source_split_1755:
    assume {:verifier.code 0} true;
    $M.18 := out_$i28;
    call {:si_unique_call 340} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i28);
    goto corral_source_split_1756;

  corral_source_split_1754:
    assume {:verifier.code 0} true;
    out_$i28 := $sub.i32(out_$i27, 1);
    goto corral_source_split_1755;

  corral_source_split_1753:
    assume {:verifier.code 0} true;
    out_$i27 := $M.18;
    goto corral_source_split_1754;

  corral_source_split_1752:
    assume {:verifier.code 0} true;
    $M.17 := 1;
    call {:si_unique_call 339} {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
    goto corral_source_split_1753;

  $bb34:
    assume out_$i26 == 1;
    goto corral_source_split_1752;

  corral_source_split_1750:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_1749:
    assume {:verifier.code 0} true;
    out_$i26 := $eq.i32(out_$i25, 0);
    goto corral_source_split_1750;

  corral_source_split_1748:
    assume {:verifier.code 0} true;
    out_$i25 := $M.23;
    goto corral_source_split_1749;

  corral_source_split_1747:
    assume {:verifier.code 0} true;
    $M.23 := out_$i24;
    call {:si_unique_call 338} {:cexpr "ldv_retval_0"} boogie_si_record_i32(out_$i24);
    goto corral_source_split_1748;

  corral_source_split_1746:
    assume {:verifier.code 0} true;
    call {:si_unique_call 337} out_$i24 := abituguru3_remove(out_$p23);
    goto corral_source_split_1747;

  corral_source_split_1745:
    assume {:verifier.code 0} true;
    out_$p23 := $M.16;
    goto corral_source_split_1746;

  $bb32:
    assume out_$i22 == 1;
    goto corral_source_split_1745;

  corral_source_split_1743:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  corral_source_split_1742:
    assume {:verifier.code 0} true;
    out_$i22 := $eq.i32(out_$i21, 1);
    goto corral_source_split_1743;

  corral_source_split_1741:
    assume {:verifier.code 0} true;
    out_$i21 := $M.22;
    goto corral_source_split_1742;

  $bb29:
    assume out_$i20 == 1;
    goto corral_source_split_1741;

  corral_source_split_1721:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb29, $bb30;

  corral_source_split_1720:
    assume {:verifier.code 0} true;
    out_$i20 := $eq.i32(out_$i19, 1);
    goto corral_source_split_1721;

  corral_source_split_1719:
    assume {:verifier.code 0} true;
    out_$i19 := $M.17;
    goto corral_source_split_1720;

  $bb17:
    assume out_$i9 == 1;
    goto corral_source_split_1719;

  $bb16:
    assume !(out_$i8 == 1);
    assume {:verifier.code 0} true;
    out_$i9 := $eq.i32(out_$i7, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb30:
    assume {:verifier.code 0} true;
    assume !(out_$i20 == 1);
    goto $bb31;

  $bb33:
    assume {:verifier.code 0} true;
    assume !(out_$i22 == 1);
    goto $bb31;

  $bb39:
    assume {:verifier.code 0} true;
    assume !(out_$i30 == 1);
    goto $bb40;

  $bb42:
    assume {:verifier.code 0} true;
    assume !(out_$i32 == 1);
    goto $bb40;

  corral_source_split_1780:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb47:
    assume {:verifier.code 0} true;
    call {:si_unique_call 347} ldv_stop();
    goto corral_source_split_1780;

  $bb19:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb18:
    assume {:verifier.code 0} true;
    assume !(out_$i9 == 1);
    goto $bb19;

  $bb21:
    assume {:verifier.code 0} true;
    assume !(out_$i10 == 1);
    goto $bb19;

  $bb52:
    assume !(out_$i40 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb68:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb77:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb67:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb63:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb62:
    assume {:verifier.code 0} true;
    assume !(out_$i46 == 1);
    goto $bb63;

  $bb65:
    assume {:verifier.code 0} true;
    assume !(out_$i48 == 1);
    goto $bb63;

  corral_source_split_1794:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb65;

  corral_source_split_1793:
    assume {:verifier.code 0} true;
    out_$i48 := $eq.i32(out_$i47, 0);
    goto corral_source_split_1794;

  corral_source_split_1792:
    assume {:verifier.code 0} true;
    out_$i47 := $M.18;
    goto corral_source_split_1793;

  $bb61:
    assume out_$i46 == 1;
    goto corral_source_split_1792;

  corral_source_split_1790:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb61, $bb62;

  corral_source_split_1789:
    assume {:verifier.code 0} true;
    out_$i46 := $eq.i32(out_$i45, 2);
    goto corral_source_split_1790;

  corral_source_split_1788:
    assume {:verifier.code 0} true;
    out_$i45 := $M.19;
    goto corral_source_split_1789;

  $bb59:
    assume out_$i44 == 1;
    goto corral_source_split_1788;

  $bb54:
    assume out_$i42 == 1;
    assume {:verifier.code 0} true;
    out_$i44 := $eq.i32(out_$i41, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb59, $bb60;

  $bb53:
    assume {:verifier.code 0} true;
    out_$i42 := $slt.i32(out_$i41, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  corral_source_split_1782:
    assume {:verifier.code 1} true;
    call {:si_unique_call 348} out_$i41 := __VERIFIER_nondet_int();
    call {:si_unique_call 349} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i41);
    call {:si_unique_call 350} {:cexpr "tmp___1"} boogie_si_record_i32(out_$i41);
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb51:
    assume out_$i40 == 1;
    goto corral_source_split_1782;

  corral_source_split_1707:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  corral_source_split_1706:
    assume {:verifier.code 0} true;
    out_$i40 := $ne.i32(out_$i39, 0);
    goto corral_source_split_1707;

  corral_source_split_1705:
    assume {:verifier.code 0} true;
    out_$i39 := $M.19;
    goto corral_source_split_1706;

  $bb5:
    assume out_$i2 == 1;
    goto corral_source_split_1705;

  $bb4:
    assume !(out_$i1 == 1);
    assume {:verifier.code 0} true;
    out_$i2 := $slt.i32(out_$i0, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb70:
    assume !(out_$i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb76:
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb75:
    assume !(out_$i55 == 1);
    assume {:verifier.code 0} true;
    goto $bb76;

  corral_source_split_1817:
    assume {:verifier.code 0} true;
    goto $bb76;

  corral_source_split_1816:
    assume {:verifier.code 0} true;
    call {:si_unique_call 359} ldv_dev_pm_ops_2();
    goto corral_source_split_1817;

  corral_source_split_1815:
    assume {:verifier.code 0} true;
    $M.20 := 1;
    call {:si_unique_call 358} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
    goto corral_source_split_1816;

  corral_source_split_1814:
    assume {:verifier.code 0} true;
    $M.19 := 2;
    call {:si_unique_call 357} {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
    goto corral_source_split_1815;

  $bb74:
    assume out_$i55 == 1;
    goto corral_source_split_1814;

  corral_source_split_1812:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb74, $bb75;

  corral_source_split_1811:
    assume {:verifier.code 0} true;
    out_$i55 := $eq.i32(out_$i54, 0);
    goto corral_source_split_1812;

  $bb73:
    assume {:verifier.code 0} true;
    out_$i54 := $M.24;
    goto corral_source_split_1811;

  $bb72:
    assume !(out_$i53 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  corral_source_split_1806:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb72;

  corral_source_split_1805:
    assume {:verifier.code 0} true;
    out_$i53 := $ne.i32(out_$i52, 0);
    goto corral_source_split_1806;

  corral_source_split_1804:
    assume {:verifier.code 0} true;
    out_$i52 := $M.24;
    goto corral_source_split_1805;

  corral_source_split_1803:
    assume {:verifier.code 0} true;
    $M.24 := out_$i51;
    call {:si_unique_call 355} {:cexpr "ldv_retval_2"} boogie_si_record_i32(out_$i51);
    goto corral_source_split_1804;

  corral_source_split_1802:
    assume {:verifier.code 0} true;
    call {:si_unique_call 354} out_$i51 := abituguru3_init();
    goto corral_source_split_1803;

  $bb69:
    assume out_$i50 == 1;
    goto corral_source_split_1802;

  corral_source_split_1786:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb69, $bb70;

  corral_source_split_1785:
    assume {:verifier.code 0} true;
    out_$i50 := $eq.i32(out_$i49, 1);
    goto corral_source_split_1786;

  corral_source_split_1784:
    assume {:verifier.code 0} true;
    out_$i49 := $M.19;
    goto corral_source_split_1785;

  $bb56:
    assume out_$i43 == 1;
    goto corral_source_split_1784;

  $bb55:
    assume !(out_$i42 == 1);
    assume {:verifier.code 0} true;
    out_$i43 := $eq.i32(out_$i41, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb56, $bb57;

  corral_source_split_1819:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb78:
    assume {:verifier.code 0} true;
    call {:si_unique_call 360} ldv_stop();
    goto corral_source_split_1819;

  $bb58:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb57:
    assume {:verifier.code 0} true;
    assume !(out_$i43 == 1);
    goto $bb58;

  $bb60:
    assume {:verifier.code 0} true;
    assume !(out_$i44 == 1);
    goto $bb58;

  $bb82:
    assume !(out_$i57 == 1);
    assume {:verifier.code 0} true;
    goto $bb247;

  $bb133:
    assume {:verifier.code 0} true;
    goto $bb247;

  $bb246:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb244:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb241:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb235:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb229:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb223:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb217:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb211:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb205:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb199:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb193:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb187:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb181:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb175:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb169:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb163:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb157:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb151:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb145:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb139:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb132:
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb128:
    assume !(out_$i81 == 1);
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb131:
    assume {:verifier.code 0} true;
    goto $bb132;

  $bb130:
    assume !(out_$i85 == 1);
    assume {:verifier.code 0} true;
    goto $bb131;

  corral_source_split_1911:
    assume {:verifier.code 0} true;
    goto $bb131;

  corral_source_split_1910:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 366} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1911;

  $bb129:
    assume out_$i85 == 1;
    goto corral_source_split_1910;

  corral_source_split_1908:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb129, $bb130;

  corral_source_split_1907:
    assume {:verifier.code 0} true;
    out_$i85 := $eq.i32(out_$i84, 0);
    goto corral_source_split_1908;

  corral_source_split_1906:
    assume {:verifier.code 0} true;
    out_$i84 := $M.25;
    goto corral_source_split_1907;

  corral_source_split_1905:
    assume {:verifier.code 0} true;
    $M.25 := out_$i83;
    call {:si_unique_call 365} {:cexpr "ldv_retval_21"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_1906;

  SeqInstr_45:
    goto corral_source_split_1905;

  SeqInstr_44:
    assume assertsPassed;
    goto SeqInstr_45;

  corral_source_split_1904:
    assume {:verifier.code 0} true;
    call {:si_unique_call 364} out_$i83 := abituguru3_resume(out_$p82);
    goto SeqInstr_44;

  corral_source_split_1903:
    assume {:verifier.code 0} true;
    out_$p82 := $M.15;
    goto corral_source_split_1904;

  $bb127:
    assume out_$i81 == 1;
    goto corral_source_split_1903;

  corral_source_split_1901:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb127, $bb128;

  corral_source_split_1900:
    assume {:verifier.code 0} true;
    out_$i81 := $eq.i32(out_$i80, 12);
    goto corral_source_split_1901;

  corral_source_split_1899:
    assume {:verifier.code 0} true;
    out_$i80 := $M.20;
    goto corral_source_split_1900;

  $bb125:
    assume out_$i79 == 1;
    goto corral_source_split_1899;

  $bb123:
    assume out_$i78 == 1;
    assume {:verifier.code 0} true;
    out_$i79 := $eq.i32(out_$i58, 0);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb125, $bb126;

  $bb117:
    assume out_$i75 == 1;
    assume {:verifier.code 0} true;
    out_$i78 := $slt.i32(out_$i58, 1);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb123, $bb124;

  $bb107:
    assume out_$i70 == 1;
    assume {:verifier.code 0} true;
    out_$i75 := $slt.i32(out_$i58, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb117, $bb118;

  $bb84:
    assume out_$i59 == 1;
    assume {:verifier.code 0} true;
    out_$i70 := $slt.i32(out_$i58, 5);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb107, $bb108;

  $bb83:
    assume {:verifier.code 0} true;
    out_$i59 := $slt.i32(out_$i58, 10);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb84, $bb85;

  corral_source_split_1821:
    assume {:verifier.code 1} true;
    call {:si_unique_call 361} out_$i58 := __VERIFIER_nondet_int();
    call {:si_unique_call 362} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i58);
    call {:si_unique_call 363} {:cexpr "tmp___2"} boogie_si_record_i32(out_$i58);
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb81:
    assume out_$i57 == 1;
    goto corral_source_split_1821;

  corral_source_split_1711:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb81, $bb82;

  corral_source_split_1710:
    assume {:verifier.code 0} true;
    out_$i57 := $ne.i32(out_$i56, 0);
    goto corral_source_split_1711;

  corral_source_split_1709:
    assume {:verifier.code 0} true;
    out_$i56 := $M.20;
    goto corral_source_split_1710;

  $bb7:
    assume out_$i3 == 1;
    goto corral_source_split_1709;

  $bb6:
    assume !(out_$i2 == 1);
    assume {:verifier.code 0} true;
    out_$i3 := $eq.i32(out_$i0, 2);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7, $bb8;

  $bb135:
    assume !(out_$i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb138:
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb137:
    assume !(out_$i91 == 1);
    assume {:verifier.code 0} true;
    goto $bb138;

  corral_source_split_1921:
    assume {:verifier.code 0} true;
    goto $bb138;

  corral_source_split_1920:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 369} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1921;

  $bb136:
    assume out_$i91 == 1;
    goto corral_source_split_1920;

  corral_source_split_1918:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb136, $bb137;

  corral_source_split_1917:
    assume {:verifier.code 0} true;
    out_$i91 := $eq.i32(out_$i90, 0);
    goto corral_source_split_1918;

  corral_source_split_1916:
    assume {:verifier.code 0} true;
    out_$i90 := $M.26;
    goto corral_source_split_1917;

  corral_source_split_1915:
    assume {:verifier.code 0} true;
    $M.26 := out_$i89;
    call {:si_unique_call 368} {:cexpr "ldv_retval_20"} boogie_si_record_i32(out_$i89);
    goto corral_source_split_1916;

  SeqInstr_48:
    goto corral_source_split_1915;

  SeqInstr_47:
    assume assertsPassed;
    goto SeqInstr_48;

  corral_source_split_1914:
    assume {:verifier.code 0} true;
    call {:si_unique_call 367} out_$i89 := abituguru3_resume(out_$p88);
    goto SeqInstr_47;

  corral_source_split_1913:
    assume {:verifier.code 0} true;
    out_$p88 := $M.15;
    goto corral_source_split_1914;

  $bb134:
    assume out_$i87 == 1;
    goto corral_source_split_1913;

  corral_source_split_1897:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb134, $bb135;

  corral_source_split_1896:
    assume {:verifier.code 0} true;
    out_$i87 := $eq.i32(out_$i86, 13);
    goto corral_source_split_1897;

  corral_source_split_1895:
    assume {:verifier.code 0} true;
    out_$i86 := $M.20;
    goto corral_source_split_1896;

  $bb124:
    assume !(out_$i78 == 1);
    goto corral_source_split_1895;

  $bb141:
    assume !(out_$i93 == 1);
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb143:
    assume !(out_$i97 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  corral_source_split_1931:
    assume {:verifier.code 0} true;
    goto $bb144;

  corral_source_split_1930:
    assume {:verifier.code 0} true;
    $M.20 := 3;
    call {:si_unique_call 372} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(3);
    goto corral_source_split_1931;

  $bb142:
    assume out_$i97 == 1;
    goto corral_source_split_1930;

  corral_source_split_1928:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb142, $bb143;

  corral_source_split_1927:
    assume {:verifier.code 0} true;
    out_$i97 := $eq.i32(out_$i96, 0);
    goto corral_source_split_1928;

  corral_source_split_1926:
    assume {:verifier.code 0} true;
    out_$i96 := $M.27;
    goto corral_source_split_1927;

  corral_source_split_1925:
    assume {:verifier.code 0} true;
    $M.27 := out_$i95;
    call {:si_unique_call 371} {:cexpr "ldv_retval_19"} boogie_si_record_i32(out_$i95);
    goto corral_source_split_1926;

  SeqInstr_51:
    goto corral_source_split_1925;

  SeqInstr_50:
    assume assertsPassed;
    goto SeqInstr_51;

  corral_source_split_1924:
    assume {:verifier.code 0} true;
    call {:si_unique_call 370} out_$i95 := abituguru3_suspend(out_$p94);
    goto SeqInstr_50;

  corral_source_split_1923:
    assume {:verifier.code 0} true;
    out_$p94 := $M.15;
    goto corral_source_split_1924;

  $bb140:
    assume out_$i93 == 1;
    goto corral_source_split_1923;

  corral_source_split_1885:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb140, $bb141;

  corral_source_split_1884:
    assume {:verifier.code 0} true;
    out_$i93 := $eq.i32(out_$i92, 2);
    goto corral_source_split_1885;

  corral_source_split_1883:
    assume {:verifier.code 0} true;
    out_$i92 := $M.20;
    goto corral_source_split_1884;

  $bb119:
    assume out_$i76 == 1;
    goto corral_source_split_1883;

  $bb118:
    assume !(out_$i75 == 1);
    assume {:verifier.code 0} true;
    out_$i76 := $slt.i32(out_$i58, 3);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb119, $bb120;

  $bb147:
    assume !(out_$i99 == 1);
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb150:
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb149:
    assume !(out_$i103 == 1);
    assume {:verifier.code 0} true;
    goto $bb150;

  corral_source_split_1941:
    assume {:verifier.code 0} true;
    goto $bb150;

  corral_source_split_1940:
    assume {:verifier.code 0} true;
    $M.20 := 4;
    call {:si_unique_call 375} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(4);
    goto corral_source_split_1941;

  $bb148:
    assume out_$i103 == 1;
    goto corral_source_split_1940;

  corral_source_split_1938:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb148, $bb149;

  corral_source_split_1937:
    assume {:verifier.code 0} true;
    out_$i103 := $eq.i32(out_$i102, 0);
    goto corral_source_split_1938;

  corral_source_split_1936:
    assume {:verifier.code 0} true;
    out_$i102 := $M.28;
    goto corral_source_split_1937;

  corral_source_split_1935:
    assume {:verifier.code 0} true;
    $M.28 := out_$i101;
    call {:si_unique_call 374} {:cexpr "ldv_retval_18"} boogie_si_record_i32(out_$i101);
    goto corral_source_split_1936;

  SeqInstr_54:
    goto corral_source_split_1935;

  SeqInstr_53:
    assume assertsPassed;
    goto SeqInstr_54;

  corral_source_split_1934:
    assume {:verifier.code 0} true;
    call {:si_unique_call 373} out_$i101 := abituguru3_suspend(out_$p100);
    goto SeqInstr_53;

  corral_source_split_1933:
    assume {:verifier.code 0} true;
    out_$p100 := $M.15;
    goto corral_source_split_1934;

  $bb146:
    assume out_$i99 == 1;
    goto corral_source_split_1933;

  corral_source_split_1889:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  corral_source_split_1888:
    assume {:verifier.code 0} true;
    out_$i99 := $eq.i32(out_$i98, 2);
    goto corral_source_split_1889;

  corral_source_split_1887:
    assume {:verifier.code 0} true;
    out_$i98 := $M.20;
    goto corral_source_split_1888;

  $bb121:
    assume out_$i77 == 1;
    goto corral_source_split_1887;

  $bb120:
    assume !(out_$i76 == 1);
    assume {:verifier.code 0} true;
    out_$i77 := $slt.i32(out_$i58, 4);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb121, $bb122;

  $bb153:
    assume !(out_$i105 == 1);
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb156:
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb155:
    assume !(out_$i109 == 1);
    assume {:verifier.code 0} true;
    goto $bb156;

  corral_source_split_1951:
    assume {:verifier.code 0} true;
    goto $bb156;

  corral_source_split_1950:
    assume {:verifier.code 0} true;
    $M.20 := 5;
    call {:si_unique_call 378} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(5);
    goto corral_source_split_1951;

  $bb154:
    assume out_$i109 == 1;
    goto corral_source_split_1950;

  corral_source_split_1948:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  corral_source_split_1947:
    assume {:verifier.code 0} true;
    out_$i109 := $eq.i32(out_$i108, 0);
    goto corral_source_split_1948;

  corral_source_split_1946:
    assume {:verifier.code 0} true;
    out_$i108 := $M.29;
    goto corral_source_split_1947;

  corral_source_split_1945:
    assume {:verifier.code 0} true;
    $M.29 := out_$i107;
    call {:si_unique_call 377} {:cexpr "ldv_retval_17"} boogie_si_record_i32(out_$i107);
    goto corral_source_split_1946;

  SeqInstr_57:
    goto corral_source_split_1945;

  SeqInstr_56:
    assume assertsPassed;
    goto SeqInstr_57;

  corral_source_split_1944:
    assume {:verifier.code 0} true;
    call {:si_unique_call 376} out_$i107 := abituguru3_suspend(out_$p106);
    goto SeqInstr_56;

  corral_source_split_1943:
    assume {:verifier.code 0} true;
    out_$p106 := $M.15;
    goto corral_source_split_1944;

  $bb152:
    assume out_$i105 == 1;
    goto corral_source_split_1943;

  corral_source_split_1893:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb152, $bb153;

  corral_source_split_1892:
    assume {:verifier.code 0} true;
    out_$i105 := $eq.i32(out_$i104, 2);
    goto corral_source_split_1893;

  corral_source_split_1891:
    assume {:verifier.code 0} true;
    out_$i104 := $M.20;
    goto corral_source_split_1892;

  $bb122:
    assume !(out_$i77 == 1);
    goto corral_source_split_1891;

  $bb159:
    assume !(out_$i111 == 1);
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb161:
    assume !(out_$i115 == 1);
    assume {:verifier.code 0} true;
    goto $bb162;

  corral_source_split_1961:
    assume {:verifier.code 0} true;
    goto $bb162;

  corral_source_split_1960:
    assume {:verifier.code 0} true;
    $M.20 := 15;
    call {:si_unique_call 381} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(15);
    goto corral_source_split_1961;

  $bb160:
    assume out_$i115 == 1;
    goto corral_source_split_1960;

  corral_source_split_1958:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb160, $bb161;

  corral_source_split_1957:
    assume {:verifier.code 0} true;
    out_$i115 := $eq.i32(out_$i114, 0);
    goto corral_source_split_1958;

  corral_source_split_1956:
    assume {:verifier.code 0} true;
    out_$i114 := $M.30;
    goto corral_source_split_1957;

  corral_source_split_1955:
    assume {:verifier.code 0} true;
    $M.30 := out_$i113;
    call {:si_unique_call 380} {:cexpr "ldv_retval_16"} boogie_si_record_i32(out_$i113);
    goto corral_source_split_1956;

  SeqInstr_60:
    goto corral_source_split_1955;

  SeqInstr_59:
    assume assertsPassed;
    goto SeqInstr_60;

  corral_source_split_1954:
    assume {:verifier.code 0} true;
    call {:si_unique_call 379} out_$i113 := abituguru3_resume(out_$p112);
    goto SeqInstr_59;

  corral_source_split_1953:
    assume {:verifier.code 0} true;
    out_$p112 := $M.15;
    goto corral_source_split_1954;

  $bb158:
    assume out_$i111 == 1;
    goto corral_source_split_1953;

  corral_source_split_1877:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb158, $bb159;

  corral_source_split_1876:
    assume {:verifier.code 0} true;
    out_$i111 := $eq.i32(out_$i110, 14);
    goto corral_source_split_1877;

  corral_source_split_1875:
    assume {:verifier.code 0} true;
    out_$i110 := $M.20;
    goto corral_source_split_1876;

  $bb115:
    assume out_$i74 == 1;
    goto corral_source_split_1875;

  $bb109:
    assume out_$i71 == 1;
    assume {:verifier.code 0} true;
    out_$i74 := $slt.i32(out_$i58, 6);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb115, $bb116;

  $bb108:
    assume !(out_$i70 == 1);
    assume {:verifier.code 0} true;
    out_$i71 := $slt.i32(out_$i58, 7);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  $bb165:
    assume !(out_$i117 == 1);
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb168:
    assume {:verifier.code 0} true;
    goto $bb169;

  $bb167:
    assume !(out_$i120 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  corral_source_split_1970:
    assume {:verifier.code 0} true;
    goto $bb168;

  corral_source_split_1969:
    assume {:verifier.code 0} true;
    $M.20 := 10;
    call {:si_unique_call 384} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(10);
    goto corral_source_split_1970;

  $bb166:
    assume out_$i120 == 1;
    goto corral_source_split_1969;

  corral_source_split_1967:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb166, $bb167;

  corral_source_split_1966:
    assume {:verifier.code 0} true;
    out_$i120 := $eq.i32(out_$i119, 0);
    goto corral_source_split_1967;

  corral_source_split_1965:
    assume {:verifier.code 0} true;
    out_$i119 := $M.31;
    goto corral_source_split_1966;

  corral_source_split_1964:
    assume {:verifier.code 0} true;
    $M.31 := out_$i118;
    call {:si_unique_call 383} {:cexpr "ldv_retval_15"} boogie_si_record_i32(out_$i118);
    goto corral_source_split_1965;

  corral_source_split_1963:
    assume {:verifier.code 0} true;
    call {:si_unique_call 382} out_$i118 := ldv_suspend_late_2();
    goto corral_source_split_1964;

  $bb164:
    assume out_$i117 == 1;
    goto corral_source_split_1963;

  corral_source_split_1881:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb164, $bb165;

  corral_source_split_1880:
    assume {:verifier.code 0} true;
    out_$i117 := $eq.i32(out_$i116, 5);
    goto corral_source_split_1881;

  corral_source_split_1879:
    assume {:verifier.code 0} true;
    out_$i116 := $M.20;
    goto corral_source_split_1880;

  $bb116:
    assume !(out_$i74 == 1);
    goto corral_source_split_1879;

  $bb171:
    assume !(out_$i122 == 1);
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb173:
    assume !(out_$i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb174;

  corral_source_split_1979:
    assume {:verifier.code 0} true;
    goto $bb174;

  corral_source_split_1978:
    assume {:verifier.code 0} true;
    $M.20 := 12;
    call {:si_unique_call 387} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(12);
    goto corral_source_split_1979;

  $bb172:
    assume out_$i125 == 1;
    goto corral_source_split_1978;

  corral_source_split_1976:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb172, $bb173;

  corral_source_split_1975:
    assume {:verifier.code 0} true;
    out_$i125 := $eq.i32(out_$i124, 0);
    goto corral_source_split_1976;

  corral_source_split_1974:
    assume {:verifier.code 0} true;
    out_$i124 := $M.32;
    goto corral_source_split_1975;

  corral_source_split_1973:
    assume {:verifier.code 0} true;
    $M.32 := out_$i123;
    call {:si_unique_call 386} {:cexpr "ldv_retval_14"} boogie_si_record_i32(out_$i123);
    goto corral_source_split_1974;

  corral_source_split_1972:
    assume {:verifier.code 0} true;
    call {:si_unique_call 385} out_$i123 := ldv_restore_early_2();
    goto corral_source_split_1973;

  $bb170:
    assume out_$i122 == 1;
    goto corral_source_split_1972;

  corral_source_split_1865:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb170, $bb171;

  corral_source_split_1864:
    assume {:verifier.code 0} true;
    out_$i122 := $eq.i32(out_$i121, 7);
    goto corral_source_split_1865;

  corral_source_split_1863:
    assume {:verifier.code 0} true;
    out_$i121 := $M.20;
    goto corral_source_split_1864;

  $bb111:
    assume out_$i72 == 1;
    goto corral_source_split_1863;

  $bb110:
    assume !(out_$i71 == 1);
    assume {:verifier.code 0} true;
    out_$i72 := $slt.i32(out_$i58, 8);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb111, $bb112;

  $bb177:
    assume !(out_$i127 == 1);
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb180:
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb179:
    assume !(out_$i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb180;

  corral_source_split_1988:
    assume {:verifier.code 0} true;
    goto $bb180;

  corral_source_split_1987:
    assume {:verifier.code 0} true;
    $M.20 := 14;
    call {:si_unique_call 390} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(14);
    goto corral_source_split_1988;

  $bb178:
    assume out_$i130 == 1;
    goto corral_source_split_1987;

  corral_source_split_1985:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb178, $bb179;

  corral_source_split_1984:
    assume {:verifier.code 0} true;
    out_$i130 := $eq.i32(out_$i129, 0);
    goto corral_source_split_1985;

  corral_source_split_1983:
    assume {:verifier.code 0} true;
    out_$i129 := $M.33;
    goto corral_source_split_1984;

  corral_source_split_1982:
    assume {:verifier.code 0} true;
    $M.33 := out_$i128;
    call {:si_unique_call 389} {:cexpr "ldv_retval_13"} boogie_si_record_i32(out_$i128);
    goto corral_source_split_1983;

  corral_source_split_1981:
    assume {:verifier.code 0} true;
    call {:si_unique_call 388} out_$i128 := ldv_resume_early_2();
    goto corral_source_split_1982;

  $bb176:
    assume out_$i127 == 1;
    goto corral_source_split_1981;

  corral_source_split_1869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb176, $bb177;

  corral_source_split_1868:
    assume {:verifier.code 0} true;
    out_$i127 := $eq.i32(out_$i126, 10);
    goto corral_source_split_1869;

  corral_source_split_1867:
    assume {:verifier.code 0} true;
    out_$i126 := $M.20;
    goto corral_source_split_1868;

  $bb113:
    assume out_$i73 == 1;
    goto corral_source_split_1867;

  $bb112:
    assume !(out_$i72 == 1);
    assume {:verifier.code 0} true;
    out_$i73 := $slt.i32(out_$i58, 9);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113, $bb114;

  $bb183:
    assume !(out_$i132 == 1);
    assume {:verifier.code 0} true;
    goto $bb187;

  $bb186:
    assume {:verifier.code 0} true;
    goto $bb187;

  $bb185:
    assume !(out_$i135 == 1);
    assume {:verifier.code 0} true;
    goto $bb186;

  corral_source_split_1997:
    assume {:verifier.code 0} true;
    goto $bb186;

  corral_source_split_1996:
    assume {:verifier.code 0} true;
    $M.20 := 13;
    call {:si_unique_call 393} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(13);
    goto corral_source_split_1997;

  $bb184:
    assume out_$i135 == 1;
    goto corral_source_split_1996;

  corral_source_split_1994:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb184, $bb185;

  corral_source_split_1993:
    assume {:verifier.code 0} true;
    out_$i135 := $eq.i32(out_$i134, 0);
    goto corral_source_split_1994;

  corral_source_split_1992:
    assume {:verifier.code 0} true;
    out_$i134 := $M.34;
    goto corral_source_split_1993;

  corral_source_split_1991:
    assume {:verifier.code 0} true;
    $M.34 := out_$i133;
    call {:si_unique_call 392} {:cexpr "ldv_retval_12"} boogie_si_record_i32(out_$i133);
    goto corral_source_split_1992;

  corral_source_split_1990:
    assume {:verifier.code 0} true;
    call {:si_unique_call 391} out_$i133 := ldv_thaw_early_2();
    goto corral_source_split_1991;

  $bb182:
    assume out_$i132 == 1;
    goto corral_source_split_1990;

  corral_source_split_1873:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb182, $bb183;

  corral_source_split_1872:
    assume {:verifier.code 0} true;
    out_$i132 := $eq.i32(out_$i131, 9);
    goto corral_source_split_1873;

  corral_source_split_1871:
    assume {:verifier.code 0} true;
    out_$i131 := $M.20;
    goto corral_source_split_1872;

  $bb114:
    assume !(out_$i73 == 1);
    goto corral_source_split_1871;

  $bb189:
    assume !(out_$i137 == 1);
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb192:
    assume {:verifier.code 0} true;
    goto $bb193;

  $bb191:
    assume !(out_$i140 == 1);
    assume {:verifier.code 0} true;
    goto $bb192;

  corral_source_split_2006:
    assume {:verifier.code 0} true;
    goto $bb192;

  corral_source_split_2005:
    assume {:verifier.code 0} true;
    $M.20 := 14;
    call {:si_unique_call 396} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(14);
    goto corral_source_split_2006;

  $bb190:
    assume out_$i140 == 1;
    goto corral_source_split_2005;

  corral_source_split_2003:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb190, $bb191;

  corral_source_split_2002:
    assume {:verifier.code 0} true;
    out_$i140 := $eq.i32(out_$i139, 0);
    goto corral_source_split_2003;

  corral_source_split_2001:
    assume {:verifier.code 0} true;
    out_$i139 := $M.35;
    goto corral_source_split_2002;

  corral_source_split_2000:
    assume {:verifier.code 0} true;
    $M.35 := out_$i138;
    call {:si_unique_call 395} {:cexpr "ldv_retval_11"} boogie_si_record_i32(out_$i138);
    goto corral_source_split_2001;

  corral_source_split_1999:
    assume {:verifier.code 0} true;
    call {:si_unique_call 394} out_$i138 := ldv_resume_noirq_2();
    goto corral_source_split_2000;

  $bb188:
    assume out_$i137 == 1;
    goto corral_source_split_1999;

  corral_source_split_1857:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb188, $bb189;

  corral_source_split_1856:
    assume {:verifier.code 0} true;
    out_$i137 := $eq.i32(out_$i136, 11);
    goto corral_source_split_1857;

  corral_source_split_1855:
    assume {:verifier.code 0} true;
    out_$i136 := $M.20;
    goto corral_source_split_1856;

  $bb105:
    assume out_$i69 == 1;
    goto corral_source_split_1855;

  $bb99:
    assume out_$i66 == 1;
    assume {:verifier.code 0} true;
    out_$i69 := $slt.i32(out_$i58, 11);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb105, $bb106;

  $bb86:
    assume out_$i60 == 1;
    assume {:verifier.code 0} true;
    out_$i66 := $slt.i32(out_$i58, 12);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb99, $bb100;

  $bb85:
    assume !(out_$i59 == 1);
    assume {:verifier.code 0} true;
    out_$i60 := $slt.i32(out_$i58, 15);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb86, $bb87;

  $bb195:
    assume !(out_$i142 == 1);
    assume {:verifier.code 0} true;
    goto $bb199;

  $bb198:
    assume {:verifier.code 0} true;
    goto $bb199;

  $bb197:
    assume !(out_$i145 == 1);
    assume {:verifier.code 0} true;
    goto $bb198;

  corral_source_split_2015:
    assume {:verifier.code 0} true;
    goto $bb198;

  corral_source_split_2014:
    assume {:verifier.code 0} true;
    $M.20 := 8;
    call {:si_unique_call 399} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(8);
    goto corral_source_split_2015;

  $bb196:
    assume out_$i145 == 1;
    goto corral_source_split_2014;

  corral_source_split_2012:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb196, $bb197;

  corral_source_split_2011:
    assume {:verifier.code 0} true;
    out_$i145 := $eq.i32(out_$i144, 0);
    goto corral_source_split_2012;

  corral_source_split_2010:
    assume {:verifier.code 0} true;
    out_$i144 := $M.36;
    goto corral_source_split_2011;

  corral_source_split_2009:
    assume {:verifier.code 0} true;
    $M.36 := out_$i143;
    call {:si_unique_call 398} {:cexpr "ldv_retval_10"} boogie_si_record_i32(out_$i143);
    goto corral_source_split_2010;

  corral_source_split_2008:
    assume {:verifier.code 0} true;
    call {:si_unique_call 397} out_$i143 := ldv_freeze_noirq_2();
    goto corral_source_split_2009;

  $bb194:
    assume out_$i142 == 1;
    goto corral_source_split_2008;

  corral_source_split_1861:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb194, $bb195;

  corral_source_split_1860:
    assume {:verifier.code 0} true;
    out_$i142 := $eq.i32(out_$i141, 4);
    goto corral_source_split_1861;

  corral_source_split_1859:
    assume {:verifier.code 0} true;
    out_$i141 := $M.20;
    goto corral_source_split_1860;

  $bb106:
    assume !(out_$i69 == 1);
    goto corral_source_split_1859;

  $bb201:
    assume !(out_$i147 == 1);
    assume {:verifier.code 0} true;
    goto $bb205;

  $bb204:
    assume {:verifier.code 0} true;
    goto $bb205;

  $bb203:
    assume !(out_$i150 == 1);
    assume {:verifier.code 0} true;
    goto $bb204;

  corral_source_split_2027:
    assume {:verifier.code 0} true;
    goto $bb204;

  corral_source_split_2026:
    assume {:verifier.code 0} true;
    $M.18 := out_$i152;
    call {:si_unique_call 403} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i152);
    goto corral_source_split_2027;

  corral_source_split_2025:
    assume {:verifier.code 0} true;
    out_$i152 := $add.i32(out_$i151, 1);
    goto corral_source_split_2026;

  corral_source_split_2024:
    assume {:verifier.code 0} true;
    out_$i151 := $M.18;
    goto corral_source_split_2025;

  corral_source_split_2023:
    assume {:verifier.code 0} true;
    $M.20 := 2;
    call {:si_unique_call 402} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
    goto corral_source_split_2024;

  $bb202:
    assume out_$i150 == 1;
    goto corral_source_split_2023;

  corral_source_split_2021:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb202, $bb203;

  corral_source_split_2020:
    assume {:verifier.code 0} true;
    out_$i150 := $eq.i32(out_$i149, 0);
    goto corral_source_split_2021;

  corral_source_split_2019:
    assume {:verifier.code 0} true;
    out_$i149 := $M.37;
    goto corral_source_split_2020;

  corral_source_split_2018:
    assume {:verifier.code 0} true;
    $M.37 := out_$i148;
    call {:si_unique_call 401} {:cexpr "ldv_retval_9"} boogie_si_record_i32(out_$i148);
    goto corral_source_split_2019;

  corral_source_split_2017:
    assume {:verifier.code 0} true;
    call {:si_unique_call 400} out_$i148 := ldv_prepare_2();
    goto corral_source_split_2018;

  $bb200:
    assume out_$i147 == 1;
    goto corral_source_split_2017;

  corral_source_split_1845:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb200, $bb201;

  corral_source_split_1844:
    assume {:verifier.code 0} true;
    out_$i147 := $eq.i32(out_$i146, 1);
    goto corral_source_split_1845;

  corral_source_split_1843:
    assume {:verifier.code 0} true;
    out_$i146 := $M.20;
    goto corral_source_split_1844;

  $bb101:
    assume out_$i67 == 1;
    goto corral_source_split_1843;

  $bb100:
    assume !(out_$i66 == 1);
    assume {:verifier.code 0} true;
    out_$i67 := $slt.i32(out_$i58, 13);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb101, $bb102;

  $bb207:
    assume !(out_$i154 == 1);
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb210:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb209:
    assume !(out_$i157 == 1);
    assume {:verifier.code 0} true;
    goto $bb210;

  corral_source_split_2036:
    assume {:verifier.code 0} true;
    goto $bb210;

  corral_source_split_2035:
    assume {:verifier.code 0} true;
    $M.20 := 9;
    call {:si_unique_call 406} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(9);
    goto corral_source_split_2036;

  $bb208:
    assume out_$i157 == 1;
    goto corral_source_split_2035;

  corral_source_split_2033:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb208, $bb209;

  corral_source_split_2032:
    assume {:verifier.code 0} true;
    out_$i157 := $eq.i32(out_$i156, 0);
    goto corral_source_split_2033;

  corral_source_split_2031:
    assume {:verifier.code 0} true;
    out_$i156 := $M.38;
    goto corral_source_split_2032;

  corral_source_split_2030:
    assume {:verifier.code 0} true;
    $M.38 := out_$i155;
    call {:si_unique_call 405} {:cexpr "ldv_retval_8"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_2031;

  corral_source_split_2029:
    assume {:verifier.code 0} true;
    call {:si_unique_call 404} out_$i155 := ldv_freeze_late_2();
    goto corral_source_split_2030;

  $bb206:
    assume out_$i154 == 1;
    goto corral_source_split_2029;

  corral_source_split_1849:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb206, $bb207;

  corral_source_split_1848:
    assume {:verifier.code 0} true;
    out_$i154 := $eq.i32(out_$i153, 4);
    goto corral_source_split_1849;

  corral_source_split_1847:
    assume {:verifier.code 0} true;
    out_$i153 := $M.20;
    goto corral_source_split_1848;

  $bb103:
    assume out_$i68 == 1;
    goto corral_source_split_1847;

  $bb102:
    assume !(out_$i67 == 1);
    assume {:verifier.code 0} true;
    out_$i68 := $slt.i32(out_$i58, 14);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb103, $bb104;

  $bb213:
    assume !(out_$i159 == 1);
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb216:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb215:
    assume !(out_$i162 == 1);
    assume {:verifier.code 0} true;
    goto $bb216;

  corral_source_split_2045:
    assume {:verifier.code 0} true;
    goto $bb216;

  corral_source_split_2044:
    assume {:verifier.code 0} true;
    $M.20 := 13;
    call {:si_unique_call 409} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(13);
    goto corral_source_split_2045;

  $bb214:
    assume out_$i162 == 1;
    goto corral_source_split_2044;

  corral_source_split_2042:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb214, $bb215;

  corral_source_split_2041:
    assume {:verifier.code 0} true;
    out_$i162 := $eq.i32(out_$i161, 0);
    goto corral_source_split_2042;

  corral_source_split_2040:
    assume {:verifier.code 0} true;
    out_$i161 := $M.39;
    goto corral_source_split_2041;

  corral_source_split_2039:
    assume {:verifier.code 0} true;
    $M.39 := out_$i160;
    call {:si_unique_call 408} {:cexpr "ldv_retval_7"} boogie_si_record_i32(out_$i160);
    goto corral_source_split_2040;

  corral_source_split_2038:
    assume {:verifier.code 0} true;
    call {:si_unique_call 407} out_$i160 := ldv_thaw_noirq_2();
    goto corral_source_split_2039;

  $bb212:
    assume out_$i159 == 1;
    goto corral_source_split_2038;

  corral_source_split_1853:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb212, $bb213;

  corral_source_split_1852:
    assume {:verifier.code 0} true;
    out_$i159 := $eq.i32(out_$i158, 8);
    goto corral_source_split_1853;

  corral_source_split_1851:
    assume {:verifier.code 0} true;
    out_$i158 := $M.20;
    goto corral_source_split_1852;

  $bb104:
    assume !(out_$i68 == 1);
    goto corral_source_split_1851;

  $bb219:
    assume !(out_$i164 == 1);
    assume {:verifier.code 0} true;
    goto $bb223;

  $bb222:
    assume {:verifier.code 0} true;
    goto $bb223;

  $bb221:
    assume !(out_$i167 == 1);
    assume {:verifier.code 0} true;
    goto $bb222;

  corral_source_split_2054:
    assume {:verifier.code 0} true;
    goto $bb222;

  corral_source_split_2053:
    assume {:verifier.code 0} true;
    $M.20 := 6;
    call {:si_unique_call 412} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(6);
    goto corral_source_split_2054;

  $bb220:
    assume out_$i167 == 1;
    goto corral_source_split_2053;

  corral_source_split_2051:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb220, $bb221;

  corral_source_split_2050:
    assume {:verifier.code 0} true;
    out_$i167 := $eq.i32(out_$i166, 0);
    goto corral_source_split_2051;

  corral_source_split_2049:
    assume {:verifier.code 0} true;
    out_$i166 := $M.40;
    goto corral_source_split_2050;

  corral_source_split_2048:
    assume {:verifier.code 0} true;
    $M.40 := out_$i165;
    call {:si_unique_call 411} {:cexpr "ldv_retval_6"} boogie_si_record_i32(out_$i165);
    goto corral_source_split_2049;

  corral_source_split_2047:
    assume {:verifier.code 0} true;
    call {:si_unique_call 410} out_$i165 := ldv_poweroff_noirq_2();
    goto corral_source_split_2048;

  $bb218:
    assume out_$i164 == 1;
    goto corral_source_split_2047;

  corral_source_split_1837:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb218, $bb219;

  corral_source_split_1836:
    assume {:verifier.code 0} true;
    out_$i164 := $eq.i32(out_$i163, 3);
    goto corral_source_split_1837;

  corral_source_split_1835:
    assume {:verifier.code 0} true;
    out_$i163 := $M.20;
    goto corral_source_split_1836;

  $bb97:
    assume out_$i65 == 1;
    goto corral_source_split_1835;

  $bb88:
    assume out_$i61 == 1;
    assume {:verifier.code 0} true;
    out_$i65 := $slt.i32(out_$i58, 16);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  $bb87:
    assume !(out_$i60 == 1);
    assume {:verifier.code 0} true;
    out_$i61 := $slt.i32(out_$i58, 17);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  $bb225:
    assume !(out_$i169 == 1);
    assume {:verifier.code 0} true;
    goto $bb229;

  $bb228:
    assume {:verifier.code 0} true;
    goto $bb229;

  $bb227:
    assume !(out_$i172 == 1);
    assume {:verifier.code 0} true;
    goto $bb228;

  corral_source_split_2063:
    assume {:verifier.code 0} true;
    goto $bb228;

  corral_source_split_2062:
    assume {:verifier.code 0} true;
    $M.20 := 7;
    call {:si_unique_call 415} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(7);
    goto corral_source_split_2063;

  $bb226:
    assume out_$i172 == 1;
    goto corral_source_split_2062;

  corral_source_split_2060:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb226, $bb227;

  corral_source_split_2059:
    assume {:verifier.code 0} true;
    out_$i172 := $eq.i32(out_$i171, 0);
    goto corral_source_split_2060;

  corral_source_split_2058:
    assume {:verifier.code 0} true;
    out_$i171 := $M.41;
    goto corral_source_split_2059;

  corral_source_split_2057:
    assume {:verifier.code 0} true;
    $M.41 := out_$i170;
    call {:si_unique_call 414} {:cexpr "ldv_retval_5"} boogie_si_record_i32(out_$i170);
    goto corral_source_split_2058;

  corral_source_split_2056:
    assume {:verifier.code 0} true;
    call {:si_unique_call 413} out_$i170 := ldv_poweroff_late_2();
    goto corral_source_split_2057;

  $bb224:
    assume out_$i169 == 1;
    goto corral_source_split_2056;

  corral_source_split_1841:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb224, $bb225;

  corral_source_split_1840:
    assume {:verifier.code 0} true;
    out_$i169 := $eq.i32(out_$i168, 3);
    goto corral_source_split_1841;

  corral_source_split_1839:
    assume {:verifier.code 0} true;
    out_$i168 := $M.20;
    goto corral_source_split_1840;

  $bb98:
    assume !(out_$i65 == 1);
    goto corral_source_split_1839;

  $bb231:
    assume !(out_$i174 == 1);
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb234:
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb233:
    assume !(out_$i177 == 1);
    assume {:verifier.code 0} true;
    goto $bb234;

  corral_source_split_2072:
    assume {:verifier.code 0} true;
    goto $bb234;

  corral_source_split_2071:
    assume {:verifier.code 0} true;
    $M.20 := 12;
    call {:si_unique_call 418} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(12);
    goto corral_source_split_2072;

  $bb232:
    assume out_$i177 == 1;
    goto corral_source_split_2071;

  corral_source_split_2069:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb232, $bb233;

  corral_source_split_2068:
    assume {:verifier.code 0} true;
    out_$i177 := $eq.i32(out_$i176, 0);
    goto corral_source_split_2069;

  corral_source_split_2067:
    assume {:verifier.code 0} true;
    out_$i176 := $M.42;
    goto corral_source_split_2068;

  corral_source_split_2066:
    assume {:verifier.code 0} true;
    $M.42 := out_$i175;
    call {:si_unique_call 417} {:cexpr "ldv_retval_4"} boogie_si_record_i32(out_$i175);
    goto corral_source_split_2067;

  corral_source_split_2065:
    assume {:verifier.code 0} true;
    call {:si_unique_call 416} out_$i175 := ldv_restore_noirq_2();
    goto corral_source_split_2066;

  $bb230:
    assume out_$i174 == 1;
    goto corral_source_split_2065;

  corral_source_split_1825:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb230, $bb231;

  corral_source_split_1824:
    assume {:verifier.code 0} true;
    out_$i174 := $eq.i32(out_$i173, 6);
    goto corral_source_split_1825;

  corral_source_split_1823:
    assume {:verifier.code 0} true;
    out_$i173 := $M.20;
    goto corral_source_split_1824;

  $bb90:
    assume out_$i62 == 1;
    goto corral_source_split_1823;

  $bb89:
    assume !(out_$i61 == 1);
    assume {:verifier.code 0} true;
    out_$i62 := $slt.i32(out_$i58, 18);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb90, $bb91;

  $bb237:
    assume !(out_$i179 == 1);
    assume {:verifier.code 0} true;
    goto $bb241;

  $bb240:
    assume {:verifier.code 0} true;
    goto $bb241;

  $bb239:
    assume !(out_$i182 == 1);
    assume {:verifier.code 0} true;
    goto $bb240;

  corral_source_split_2081:
    assume {:verifier.code 0} true;
    goto $bb240;

  corral_source_split_2080:
    assume {:verifier.code 0} true;
    $M.20 := 11;
    call {:si_unique_call 421} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(11);
    goto corral_source_split_2081;

  $bb238:
    assume out_$i182 == 1;
    goto corral_source_split_2080;

  corral_source_split_2078:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb238, $bb239;

  corral_source_split_2077:
    assume {:verifier.code 0} true;
    out_$i182 := $eq.i32(out_$i181, 0);
    goto corral_source_split_2078;

  corral_source_split_2076:
    assume {:verifier.code 0} true;
    out_$i181 := $M.43;
    goto corral_source_split_2077;

  corral_source_split_2075:
    assume {:verifier.code 0} true;
    $M.43 := out_$i180;
    call {:si_unique_call 420} {:cexpr "ldv_retval_3"} boogie_si_record_i32(out_$i180);
    goto corral_source_split_2076;

  corral_source_split_2074:
    assume {:verifier.code 0} true;
    call {:si_unique_call 419} out_$i180 := ldv_suspend_noirq_2();
    goto corral_source_split_2075;

  $bb236:
    assume out_$i179 == 1;
    goto corral_source_split_2074;

  corral_source_split_1829:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb236, $bb237;

  corral_source_split_1828:
    assume {:verifier.code 0} true;
    out_$i179 := $eq.i32(out_$i178, 5);
    goto corral_source_split_1829;

  corral_source_split_1827:
    assume {:verifier.code 0} true;
    out_$i178 := $M.20;
    goto corral_source_split_1828;

  $bb92:
    assume out_$i63 == 1;
    goto corral_source_split_1827;

  $bb91:
    assume !(out_$i62 == 1);
    assume {:verifier.code 0} true;
    out_$i63 := $slt.i32(out_$i58, 19);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb92, $bb93;

  $bb243:
    assume !(out_$i184 == 1);
    assume {:verifier.code 0} true;
    goto $bb244;

  corral_source_split_2088:
    assume {:verifier.code 0} true;
    goto $bb244;

  corral_source_split_2087:
    assume {:verifier.code 0} true;
    $M.18 := out_$i187;
    call {:si_unique_call 424} {:cexpr "ref_cnt"} boogie_si_record_i32(out_$i187);
    goto corral_source_split_2088;

  corral_source_split_2086:
    assume {:verifier.code 0} true;
    out_$i187 := $sub.i32(out_$i186, 1);
    goto corral_source_split_2087;

  corral_source_split_2085:
    assume {:verifier.code 0} true;
    out_$i186 := $M.18;
    goto corral_source_split_2086;

  corral_source_split_2084:
    assume {:verifier.code 0} true;
    $M.20 := 1;
    call {:si_unique_call 423} {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
    goto corral_source_split_2085;

  corral_source_split_2083:
    assume {:verifier.code 0} true;
    call {:si_unique_call 422} out_vslice_dummy_var_9 := ldv_complete_2();
    goto corral_source_split_2084;

  $bb242:
    assume out_$i184 == 1;
    goto corral_source_split_2083;

  corral_source_split_1833:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb242, $bb243;

  corral_source_split_1832:
    assume {:verifier.code 0} true;
    out_$i184 := $eq.i32(out_$i183, 15);
    goto corral_source_split_1833;

  corral_source_split_1831:
    assume {:verifier.code 0} true;
    out_$i183 := $M.20;
    goto corral_source_split_1832;

  $bb94:
    assume out_$i64 == 1;
    goto corral_source_split_1831;

  $bb93:
    assume !(out_$i63 == 1);
    assume {:verifier.code 0} true;
    out_$i64 := $eq.i32(out_$i58, 19);
    assume {:verifier.code 0} true;
    assume true;
    goto $bb94, $bb95;

  corral_source_split_2090:
    assume {:verifier.code 0} true;
    goto $bb246;

  $bb245:
    assume {:verifier.code 0} true;
    call {:si_unique_call 425} ldv_stop();
    goto corral_source_split_2090;

  $bb96:
    assume {:verifier.code 0} true;
    goto $bb245;

  $bb95:
    assume {:verifier.code 0} true;
    assume !(out_$i64 == 1);
    goto $bb96;

  $bb126:
    assume {:verifier.code 0} true;
    assume !(out_$i79 == 1);
    goto $bb96;

  corral_source_split_2092:
    assume {:verifier.code 0} true;
    goto $bb249;

  $bb248:
    assume {:verifier.code 0} true;
    call {:si_unique_call 426} ldv_stop();
    goto corral_source_split_2092;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb248;

  $bb8:
    assume {:verifier.code 0} true;
    assume !(out_$i3 == 1);
    goto $bb9;

  $bb11:
    assume {:verifier.code 0} true;
    assume !(out_$i4 == 1);
    goto $bb9;

  $bb50_dummy:
    call {:si_unique_call 1} out_$i0, out_$i1, out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$p13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$p23, out_$i24, out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$p33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$p100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i162, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i186, out_$i187, out_vslice_dummy_var_9 := main_loop_$bb1(out_$i0, out_$i1, out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$p13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$p23, out_$i24, out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$p33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i71, out_$i72, out_$i73, out_$i74, out_$i75, out_$i76, out_$i77, out_$i78, out_$i79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$p100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$i130, out_$i131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i153, out_$i154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i162, out_$i163, out_$i164, out_$i165, out_$i166, out_$i167, out_$i168, out_$i169, out_$i170, out_$i171, out_$i172, out_$i173, out_$i174, out_$i175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i182, out_$i183, out_$i184, out_$i186, out_$i187, out_vslice_dummy_var_9);
    return;

  exit:
    return;
}



procedure main_loop_$bb1(in_$i0: i32, in_$i1: i1, in_$i2: i1, in_$i3: i1, in_$i4: i1, in_$i5: i32, in_$i6: i1, in_$i7: i32, in_$i8: i1, in_$i9: i1, in_$i10: i1, in_$i11: i32, in_$i12: i1, in_$p13: ref, in_$i14: i32, in_$i15: i32, in_$i16: i1, in_$i17: i32, in_$i18: i32, in_$i19: i32, in_$i20: i1, in_$i21: i32, in_$i22: i1, in_$p23: ref, in_$i24: i32, in_$i25: i32, in_$i26: i1, in_$i27: i32, in_$i28: i32, in_$i29: i32, in_$i30: i1, in_$i31: i32, in_$i32: i1, in_$p33: ref, in_$i34: i32, in_$i35: i32, in_$i36: i1, in_$i37: i32, in_$i38: i32, in_$i39: i32, in_$i40: i1, in_$i41: i32, in_$i42: i1, in_$i43: i1, in_$i44: i1, in_$i45: i32, in_$i46: i1, in_$i47: i32, in_$i48: i1, in_$i49: i32, in_$i50: i1, in_$i51: i32, in_$i52: i32, in_$i53: i1, in_$i54: i32, in_$i55: i1, in_$i56: i32, in_$i57: i1, in_$i58: i32, in_$i59: i1, in_$i60: i1, in_$i61: i1, in_$i62: i1, in_$i63: i1, in_$i64: i1, in_$i65: i1, in_$i66: i1, in_$i67: i1, in_$i68: i1, in_$i69: i1, in_$i70: i1, in_$i71: i1, in_$i72: i1, in_$i73: i1, in_$i74: i1, in_$i75: i1, in_$i76: i1, in_$i77: i1, in_$i78: i1, in_$i79: i1, in_$i80: i32, in_$i81: i1, in_$p82: ref, in_$i83: i32, in_$i84: i32, in_$i85: i1, in_$i86: i32, in_$i87: i1, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i1, in_$i92: i32, in_$i93: i1, in_$p94: ref, in_$i95: i32, in_$i96: i32, in_$i97: i1, in_$i98: i32, in_$i99: i1, in_$p100: ref, in_$i101: i32, in_$i102: i32, in_$i103: i1, in_$i104: i32, in_$i105: i1, in_$p106: ref, in_$i107: i32, in_$i108: i32, in_$i109: i1, in_$i110: i32, in_$i111: i1, in_$p112: ref, in_$i113: i32, in_$i114: i32, in_$i115: i1, in_$i116: i32, in_$i117: i1, in_$i118: i32, in_$i119: i32, in_$i120: i1, in_$i121: i32, in_$i122: i1, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i32, in_$i127: i1, in_$i128: i32, in_$i129: i32, in_$i130: i1, in_$i131: i32, in_$i132: i1, in_$i133: i32, in_$i134: i32, in_$i135: i1, in_$i136: i32, in_$i137: i1, in_$i138: i32, in_$i139: i32, in_$i140: i1, in_$i141: i32, in_$i142: i1, in_$i143: i32, in_$i144: i32, in_$i145: i1, in_$i146: i32, in_$i147: i1, in_$i148: i32, in_$i149: i32, in_$i150: i1, in_$i151: i32, in_$i152: i32, in_$i153: i32, in_$i154: i1, in_$i155: i32, in_$i156: i32, in_$i157: i1, in_$i158: i32, in_$i159: i1, in_$i160: i32, in_$i161: i32, in_$i162: i1, in_$i163: i32, in_$i164: i1, in_$i165: i32, in_$i166: i32, in_$i167: i1, in_$i168: i32, in_$i169: i1, in_$i170: i32, in_$i171: i32, in_$i172: i1, in_$i173: i32, in_$i174: i1, in_$i175: i32, in_$i176: i32, in_$i177: i1, in_$i178: i32, in_$i179: i1, in_$i180: i32, in_$i181: i32, in_$i182: i1, in_$i183: i32, in_$i184: i1, in_$i186: i32, in_$i187: i32, in_vslice_dummy_var_9: i32) returns (out_$i0: i32, out_$i1: i1, out_$i2: i1, out_$i3: i1, out_$i4: i1, out_$i5: i32, out_$i6: i1, out_$i7: i32, out_$i8: i1, out_$i9: i1, out_$i10: i1, out_$i11: i32, out_$i12: i1, out_$p13: ref, out_$i14: i32, out_$i15: i32, out_$i16: i1, out_$i17: i32, out_$i18: i32, out_$i19: i32, out_$i20: i1, out_$i21: i32, out_$i22: i1, out_$p23: ref, out_$i24: i32, out_$i25: i32, out_$i26: i1, out_$i27: i32, out_$i28: i32, out_$i29: i32, out_$i30: i1, out_$i31: i32, out_$i32: i1, out_$p33: ref, out_$i34: i32, out_$i35: i32, out_$i36: i1, out_$i37: i32, out_$i38: i32, out_$i39: i32, out_$i40: i1, out_$i41: i32, out_$i42: i1, out_$i43: i1, out_$i44: i1, out_$i45: i32, out_$i46: i1, out_$i47: i32, out_$i48: i1, out_$i49: i32, out_$i50: i1, out_$i51: i32, out_$i52: i32, out_$i53: i1, out_$i54: i32, out_$i55: i1, out_$i56: i32, out_$i57: i1, out_$i58: i32, out_$i59: i1, out_$i60: i1, out_$i61: i1, out_$i62: i1, out_$i63: i1, out_$i64: i1, out_$i65: i1, out_$i66: i1, out_$i67: i1, out_$i68: i1, out_$i69: i1, out_$i70: i1, out_$i71: i1, out_$i72: i1, out_$i73: i1, out_$i74: i1, out_$i75: i1, out_$i76: i1, out_$i77: i1, out_$i78: i1, out_$i79: i1, out_$i80: i32, out_$i81: i1, out_$p82: ref, out_$i83: i32, out_$i84: i32, out_$i85: i1, out_$i86: i32, out_$i87: i1, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i1, out_$i92: i32, out_$i93: i1, out_$p94: ref, out_$i95: i32, out_$i96: i32, out_$i97: i1, out_$i98: i32, out_$i99: i1, out_$p100: ref, out_$i101: i32, out_$i102: i32, out_$i103: i1, out_$i104: i32, out_$i105: i1, out_$p106: ref, out_$i107: i32, out_$i108: i32, out_$i109: i1, out_$i110: i32, out_$i111: i1, out_$p112: ref, out_$i113: i32, out_$i114: i32, out_$i115: i1, out_$i116: i32, out_$i117: i1, out_$i118: i32, out_$i119: i32, out_$i120: i1, out_$i121: i32, out_$i122: i1, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i32, out_$i127: i1, out_$i128: i32, out_$i129: i32, out_$i130: i1, out_$i131: i32, out_$i132: i1, out_$i133: i32, out_$i134: i32, out_$i135: i1, out_$i136: i32, out_$i137: i1, out_$i138: i32, out_$i139: i32, out_$i140: i1, out_$i141: i32, out_$i142: i1, out_$i143: i32, out_$i144: i32, out_$i145: i1, out_$i146: i32, out_$i147: i1, out_$i148: i32, out_$i149: i32, out_$i150: i1, out_$i151: i32, out_$i152: i32, out_$i153: i32, out_$i154: i1, out_$i155: i32, out_$i156: i32, out_$i157: i1, out_$i158: i32, out_$i159: i1, out_$i160: i32, out_$i161: i32, out_$i162: i1, out_$i163: i32, out_$i164: i1, out_$i165: i32, out_$i166: i32, out_$i167: i1, out_$i168: i32, out_$i169: i1, out_$i170: i32, out_$i171: i32, out_$i172: i1, out_$i173: i32, out_$i174: i1, out_$i175: i32, out_$i176: i32, out_$i177: i1, out_$i178: i32, out_$i179: i1, out_$i180: i32, out_$i181: i32, out_$i182: i1, out_$i183: i32, out_$i184: i1, out_$i186: i32, out_$i187: i32, out_vslice_dummy_var_9: i32);
  modifies $M.22, $M.18, $M.17, $M.21, $M.10, $M.11, $M.0, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $CurrAddr, $M.1, $M.9, assertsPassed, $M.23, $M.15, $M.20, $M.19, $M.24, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.44, $M.16, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43;



implementation ldv_stop_loop_$bb1()
{

  entry:
    goto $bb1, exit;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb1_dummy;

  $bb1_dummy:
    call {:si_unique_call 1} ldv_stop_loop_$bb1();
    return;

  exit:
    return;
}



procedure ldv_stop_loop_$bb1();



implementation abituguru3_dmi_detect_loop_$bb26(in_$p9: ref, in_$i14: i64, in_$p34: ref, in_$i35: i64, in_$i36: i1, in_$p37: ref, in_$i38: i32, in_$i39: i1, in_$p40: ref, in_$p41: ref, in_$i42: i64, in_$i43: i1, in_$p33: ref) returns (out_$p34: ref, out_$i35: i64, out_$i36: i1, out_$p37: ref, out_$i38: i32, out_$i39: i1, out_$p40: ref, out_$p41: ref, out_$i42: i64, out_$i43: i1, out_$p33: ref)
{

  entry:
    out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33 := in_$p34, in_$i35, in_$i36, in_$p37, in_$i38, in_$i39, in_$p40, in_$p41, in_$i42, in_$i43, in_$p33;
    goto $bb26, exit;

  $bb26:
    assume {:verifier.code 0} true;
    goto corral_source_split_2295;

  $bb35:
    assume out_$i43 == 1;
    assume {:verifier.code 0} true;
    out_$p33 := out_$p40;
    goto $bb35_dummy;

  corral_source_split_2306:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35;

  corral_source_split_2305:
    assume {:verifier.code 0} true;
    out_$i43 := $ne.i64(out_$i42, 0);
    goto corral_source_split_2306;

  corral_source_split_2304:
    assume {:verifier.code 0} true;
    out_$i42 := $p2i.ref.i64(out_$p41);
    goto corral_source_split_2305;

  corral_source_split_2303:
    assume {:verifier.code 0} true;
    out_$p41 := $load.ref($M.0, out_$p40);
    goto corral_source_split_2304;

  $bb30:
    assume {:verifier.code 0} true;
    out_$p40 := $add.ref(out_$p33, $mul.ref(1, 8));
    goto corral_source_split_2303;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_2301:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i36 == 1;
    goto corral_source_split_2301;

  corral_source_split_2299:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_2298:
    assume {:verifier.code 0} true;
    out_$i36 := $ne.i64(out_$i35, in_$i14);
    goto corral_source_split_2299;

  corral_source_split_2297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 486} out_$i35 := strlen(out_$p34);
    call {:si_unique_call 487} {:cexpr "tmp___0"} boogie_si_record_i64(out_$i35);
    goto corral_source_split_2298;

  $bb27:
    assume {:verifier.code 0} true;
    out_$p34 := $load.ref($M.0, out_$p33);
    goto corral_source_split_2297;

  corral_source_split_2295:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb33:
    assume !(out_$i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb33;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    out_$i39 := $eq.i32(out_$i38, 0);
    goto corral_source_split_2310;

  corral_source_split_2308:
    assume {:verifier.code 0} true;
    call {:si_unique_call 488} out_$i38 := strncasecmp(in_$p9, out_$p37, in_$i14);
    call {:si_unique_call 489} {:cexpr "tmp___1"} boogie_si_record_i32(out_$i38);
    goto corral_source_split_2309;

  $bb31:
    assume {:verifier.code 0} true;
    out_$p37 := $load.ref($M.0, out_$p33);
    goto corral_source_split_2308;

  $bb29:
    assume !(out_$i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb35_dummy:
    call {:si_unique_call 1} out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33 := abituguru3_dmi_detect_loop_$bb26(in_$p9, in_$i14, out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33);
    return;

  exit:
    return;
}



procedure abituguru3_dmi_detect_loop_$bb26(in_$p9: ref, in_$i14: i64, in_$p34: ref, in_$i35: i64, in_$i36: i1, in_$p37: ref, in_$i38: i32, in_$i39: i1, in_$p40: ref, in_$p41: ref, in_$i42: i64, in_$i43: i1, in_$p33: ref) returns (out_$p34: ref, out_$i35: i64, out_$i36: i1, out_$p37: ref, out_$i38: i32, out_$i39: i1, out_$p40: ref, out_$p41: ref, out_$i42: i64, out_$i43: i1, out_$p33: ref);



implementation abituguru3_dmi_detect_loop_$bb21(in_$p9: ref, in_$i14: i64, in_$i26: i64, in_$p28: ref, in_$p29: ref, in_$p30: ref, in_$i31: i64, in_$i32: i1, in_$p34: ref, in_$i35: i64, in_$i36: i1, in_$p37: ref, in_$i38: i32, in_$i39: i1, in_$p40: ref, in_$p41: ref, in_$i42: i64, in_$i43: i1, in_$p33: ref, in_$i44: i32, in_$i45: i64, in_$p47: ref, in_$i48: i16, in_$i49: i32, in_$i50: i1, in_$i25: i32) returns (out_$i26: i64, out_$p28: ref, out_$p29: ref, out_$p30: ref, out_$i31: i64, out_$i32: i1, out_$p34: ref, out_$i35: i64, out_$i36: i1, out_$p37: ref, out_$i38: i32, out_$i39: i1, out_$p40: ref, out_$p41: ref, out_$i42: i64, out_$i43: i1, out_$p33: ref, out_$i44: i32, out_$i45: i64, out_$p47: ref, out_$i48: i16, out_$i49: i32, out_$i50: i1, out_$i25: i32)
{

  entry:
    out_$i26, out_$p28, out_$p29, out_$p30, out_$i31, out_$i32, out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33, out_$i44, out_$i45, out_$p47, out_$i48, out_$i49, out_$i50, out_$i25 := in_$i26, in_$p28, in_$p29, in_$p30, in_$i31, in_$i32, in_$p34, in_$i35, in_$i36, in_$p37, in_$i38, in_$i39, in_$p40, in_$p41, in_$i42, in_$i43, in_$p33, in_$i44, in_$i45, in_$p47, in_$i48, in_$i49, in_$i50, in_$i25;
    goto $bb21, exit;

  $bb21:
    assume {:verifier.code 0} true;
    goto corral_source_split_2284;

  $bb38:
    assume out_$i50 == 1;
    assume {:verifier.code 0} true;
    out_$i25 := out_$i44;
    goto $bb38_dummy;

  corral_source_split_2321:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38;

  corral_source_split_2320:
    assume {:verifier.code 0} true;
    out_$i50 := $ne.i32(out_$i49, 0);
    goto corral_source_split_2321;

  corral_source_split_2319:
    assume {:verifier.code 0} true;
    out_$i49 := $zext.i16.i32(out_$i48);
    goto corral_source_split_2320;

  corral_source_split_2318:
    assume {:verifier.code 0} true;
    out_$i48 := $load.i16($M.0, out_$p47);
    goto corral_source_split_2319;

  corral_source_split_2317:
    assume {:verifier.code 0} true;
    out_$p47 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(out_$i45, 896)), $mul.ref(0, 1));
    goto corral_source_split_2318;

  corral_source_split_2316:
    assume {:verifier.code 0} true;
    out_$i45 := $sext.i32.i64(out_$i44);
    goto corral_source_split_2317;

  $bb37:
    assume {:verifier.code 0} true;
    out_$i44 := $add.i32(out_$i25, 1);
    call {:si_unique_call 490} {:cexpr "i"} boogie_si_record_i32(out_$i44);
    goto corral_source_split_2316;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb24:
    assume {:verifier.code 0} true;
    assume !(out_$i32 == 1);
    goto $bb25;

  corral_source_split_2314:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb36:
    assume !(out_$i43 == 1);
    goto corral_source_split_2314;

  corral_source_split_2306:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35, $bb36;

  corral_source_split_2305:
    assume {:verifier.code 0} true;
    out_$i43 := $ne.i64(out_$i42, 0);
    goto corral_source_split_2306;

  corral_source_split_2304:
    assume {:verifier.code 0} true;
    out_$i42 := $p2i.ref.i64(out_$p41);
    goto corral_source_split_2305;

  corral_source_split_2303:
    assume {:verifier.code 0} true;
    out_$p41 := $load.ref($M.0, out_$p40);
    goto corral_source_split_2304;

  $bb30:
    assume {:verifier.code 0} true;
    out_$p40 := $add.ref(out_$p33, $mul.ref(1, 8));
    goto corral_source_split_2303;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_2301:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i36 == 1;
    goto corral_source_split_2301;

  corral_source_split_2299:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_2298:
    assume {:verifier.code 0} true;
    out_$i36 := $ne.i64(out_$i35, in_$i14);
    goto corral_source_split_2299;

  corral_source_split_2297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 486} out_$i35 := strlen(out_$p34);
    call {:si_unique_call 487} {:cexpr "tmp___0"} boogie_si_record_i64(out_$i35);
    goto corral_source_split_2298;

  $bb27:
    assume {:verifier.code 0} true;
    out_$p34 := $load.ref($M.0, out_$p33);
    goto corral_source_split_2297;

  corral_source_split_2295:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb26:
    call out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33 := abituguru3_dmi_detect_loop_$bb26(in_$p9, in_$i14, out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33);
    goto $bb26_last;

  $bb26_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2295;

  corral_source_split_2293:
    assume {:verifier.code 0} true;
    out_$p33 := out_$p28;
    goto $bb26;

  $bb35:
    assume out_$i43 == 1;
    assume {:verifier.code 0} true;
    out_$p33 := out_$p40;
    assume false;
    return;

  $bb23:
    assume out_$i32 == 1;
    goto corral_source_split_2293;

  corral_source_split_2291:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb23, $bb24;

  corral_source_split_2290:
    assume {:verifier.code 0} true;
    out_$i32 := $ne.i64(out_$i31, 0);
    goto corral_source_split_2291;

  corral_source_split_2289:
    assume {:verifier.code 0} true;
    out_$i31 := $p2i.ref.i64(out_$p30);
    goto corral_source_split_2290;

  corral_source_split_2288:
    assume {:verifier.code 0} true;
    out_$p30 := $load.ref($M.0, out_$p29);
    goto corral_source_split_2289;

  corral_source_split_2287:
    assume {:verifier.code 0} true;
    out_$p29 := $bitcast.ref.ref(out_$p28);
    goto corral_source_split_2288;

  corral_source_split_2286:
    assume {:verifier.code 0} true;
    out_$p28 := $add.ref($add.ref($add.ref(abituguru3_motherboards, $mul.ref(0, 16128)), $mul.ref(out_$i26, 896)), $mul.ref(8, 1));
    goto corral_source_split_2287;

  $bb22:
    assume {:verifier.code 0} true;
    out_$i26 := $sext.i32.i64(out_$i25);
    goto corral_source_split_2286;

  corral_source_split_2284:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb33:
    assume !(out_$i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb33;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    out_$i39 := $eq.i32(out_$i38, 0);
    goto corral_source_split_2310;

  corral_source_split_2308:
    assume {:verifier.code 0} true;
    call {:si_unique_call 488} out_$i38 := strncasecmp(in_$p9, out_$p37, in_$i14);
    call {:si_unique_call 489} {:cexpr "tmp___1"} boogie_si_record_i32(out_$i38);
    goto corral_source_split_2309;

  $bb31:
    assume {:verifier.code 0} true;
    out_$p37 := $load.ref($M.0, out_$p33);
    goto corral_source_split_2308;

  $bb29:
    assume !(out_$i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb38_dummy:
    call {:si_unique_call 1} out_$i26, out_$p28, out_$p29, out_$p30, out_$i31, out_$i32, out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33, out_$i44, out_$i45, out_$p47, out_$i48, out_$i49, out_$i50, out_$i25 := abituguru3_dmi_detect_loop_$bb21(in_$p9, in_$i14, out_$i26, out_$p28, out_$p29, out_$p30, out_$i31, out_$i32, out_$p34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p33, out_$i44, out_$i45, out_$p47, out_$i48, out_$i49, out_$i50, out_$i25);
    return;

  exit:
    return;
}



procedure abituguru3_dmi_detect_loop_$bb21(in_$p9: ref, in_$i14: i64, in_$i26: i64, in_$p28: ref, in_$p29: ref, in_$p30: ref, in_$i31: i64, in_$i32: i1, in_$p34: ref, in_$i35: i64, in_$i36: i1, in_$p37: ref, in_$i38: i32, in_$i39: i1, in_$p40: ref, in_$p41: ref, in_$i42: i64, in_$i43: i1, in_$p33: ref, in_$i44: i32, in_$i45: i64, in_$p47: ref, in_$i48: i16, in_$i49: i32, in_$i50: i1, in_$i25: i32) returns (out_$i26: i64, out_$p28: ref, out_$p29: ref, out_$p30: ref, out_$i31: i64, out_$i32: i1, out_$p34: ref, out_$i35: i64, out_$i36: i1, out_$p37: ref, out_$i38: i32, out_$i39: i1, out_$p40: ref, out_$p41: ref, out_$i42: i64, out_$i43: i1, out_$p33: ref, out_$i44: i32, out_$i45: i64, out_$p47: ref, out_$i48: i16, out_$i49: i32, out_$i50: i1, out_$i25: i32);



implementation abituguru3_dmi_detect_loop_$bb14(in_$p9: ref, in_$i16: i64, in_$i17: i1, in_$i15: i64, in_$i19: i64, in_$p20: ref, in_$i21: i8, in_$i22: i32, in_$i23: i1, in_$i24: i64, in_$i18: i64) returns (out_$i16: i64, out_$i17: i1, out_$i15: i64, out_$i19: i64, out_$p20: ref, out_$i21: i8, out_$i22: i32, out_$i23: i1, out_$i24: i64, out_$i18: i64)
{

  entry:
    out_$i16, out_$i17, out_$i15, out_$i19, out_$p20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i18 := in_$i16, in_$i17, in_$i15, in_$i19, in_$p20, in_$i21, in_$i22, in_$i23, in_$i24, in_$i18;
    goto $bb14, exit;

  $bb14:
    assume {:verifier.code 0} true;
    goto corral_source_split_2268;

  $bb16:
    assume out_$i17 == 1;
    assume {:verifier.code 0} true;
    out_$i15 := out_$i16;
    goto $bb16_dummy;

  corral_source_split_2276:
    assume {:verifier.code 0} true;
    out_$i18 := out_$i16;
    assume true;
    goto $bb16;

  corral_source_split_2275:
    assume {:verifier.code 0} true;
    out_$i17 := $ne.i64(out_$i16, 0);
    goto corral_source_split_2276;

  $bb15:
    assume {:verifier.code 0} true;
    out_$i16 := $sub.i64(out_$i15, 1);
    call {:si_unique_call 485} {:cexpr "sublen"} boogie_si_record_i64(out_$i16);
    goto corral_source_split_2275;

  corral_source_split_2280:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb18:
    assume out_$i23 == 1;
    goto corral_source_split_2280;

  corral_source_split_2273:
    assume {:verifier.code 0} true;
    out_$i24 := out_$i15;
    assume true;
    goto $bb18;

  corral_source_split_2272:
    assume {:verifier.code 0} true;
    out_$i23 := $eq.i32(out_$i22, 32);
    goto corral_source_split_2273;

  corral_source_split_2271:
    assume {:verifier.code 0} true;
    out_$i22 := $sext.i8.i32(out_$i21);
    goto corral_source_split_2272;

  corral_source_split_2270:
    assume {:verifier.code 0} true;
    out_$i21 := $load.i8($M.0, out_$p20);
    goto corral_source_split_2271;

  corral_source_split_2269:
    assume {:verifier.code 0} true;
    out_$p20 := $add.ref(in_$p9, $mul.ref(out_$i19, 1));
    goto corral_source_split_2270;

  corral_source_split_2268:
    assume {:verifier.code 0} true;
    out_$i19 := $add.i64(out_$i15, $sub.i64(0, 1));
    goto corral_source_split_2269;

  $bb16_dummy:
    call {:si_unique_call 1} out_$i16, out_$i17, out_$i15, out_$i19, out_$p20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i18 := abituguru3_dmi_detect_loop_$bb14(in_$p9, out_$i16, out_$i17, out_$i15, out_$i19, out_$p20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i18);
    return;

  exit:
    return;
}



procedure abituguru3_dmi_detect_loop_$bb14(in_$p9: ref, in_$i16: i64, in_$i17: i1, in_$i15: i64, in_$i19: i64, in_$p20: ref, in_$i21: i8, in_$i22: i32, in_$i23: i1, in_$i24: i64, in_$i18: i64) returns (out_$i16: i64, out_$i17: i1, out_$i15: i64, out_$i19: i64, out_$p20: ref, out_$i21: i8, out_$i22: i32, out_$i23: i1, out_$i24: i64, out_$i18: i64);


