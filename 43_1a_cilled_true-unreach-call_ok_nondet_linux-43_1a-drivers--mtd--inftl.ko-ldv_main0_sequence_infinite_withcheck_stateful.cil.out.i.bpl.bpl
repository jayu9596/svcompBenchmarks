var $M.0: [ref]i32;

var $M.1: [ref]i8;

var $M.2: [ref]i64;

var $M.3: [ref]ref;

var $M.4: [ref]i8;

var $M.6: i32;

var $M.7: [ref]i8;

var $M.8: [ref]i8;

var $M.9: [ref]i8;

var $M.10: [ref]i8;

var $M.32: [ref]i8;

var $M.33: [ref]i8;

var $CurrAddr: ref;

var assertsPassed: bool;

type i1 = int;

type i5 = int;

type i6 = int;

type i8 = int;

type i16 = int;

type i24 = int;

type i32 = int;

type i40 = int;

type i48 = int;

type i56 = int;

type i64 = int;

type i80 = int;

type i88 = int;

type i96 = int;

type i128 = int;

type i160 = int;

type i256 = int;

type ref = i64;

type float;

const $0: i32;

axiom $0 == 0;

const $1: i32;

axiom $1 == 1;

const $0.ref: ref;

axiom $0.ref == 0;

const $1.ref: ref;

axiom $1.ref == 1;

const $2.ref: ref;

axiom $2.ref == 2;

const $3.ref: ref;

axiom $3.ref == 3;

const $4.ref: ref;

axiom $4.ref == 4;

const $5.ref: ref;

axiom $5.ref == 5;

const $6.ref: ref;

axiom $6.ref == 6;

const $7.ref: ref;

axiom $7.ref == 7;

const $8.ref: ref;

axiom $8.ref == 8;

const $9.ref: ref;

axiom $9.ref == 9;

const $10.ref: ref;

axiom $10.ref == 10;

const $11.ref: ref;

axiom $11.ref == 11;

const $12.ref: ref;

axiom $12.ref == 12;

const $13.ref: ref;

axiom $13.ref == 13;

const $14.ref: ref;

axiom $14.ref == 14;

const $1024.ref: ref;

axiom $1024.ref == 1024;

axiom $GLOBALS_BOTTOM == $sub.ref(0, 219201);

axiom $EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776));

axiom $MALLOC_TOP == 9223372036854775807;

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) : bv64;

function {:builtin "bv2int"} $bv2int.64(i: bv64) : i64;

function {:inline} $p2i.ref.i8(p: ref) : i8
{
  $trunc.i64.i8(p)
}

function {:inline} $i2p.i8.ref(i: i8) : ref
{
  $zext.i8.i64(i)
}

function {:inline} $p2i.ref.i16(p: ref) : i16
{
  $trunc.i64.i16(p)
}

function {:inline} $i2p.i16.ref(i: i16) : ref
{
  $zext.i16.i64(i)
}

function {:inline} $p2i.ref.i32(p: ref) : i32
{
  $trunc.i64.i32(p)
}

function {:inline} $i2p.i32.ref(i: i32) : ref
{
  $zext.i32.i64(i)
}

function {:inline} $p2i.ref.i64(p: ref) : i64
{
  p
}

function {:inline} $i2p.i64.ref(i: i64) : ref
{
  i
}

function {:inline} $eq.ref(p1: ref, p2: ref) : i1
{
  (if $eq.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $eq.ref.bool(p1: ref, p2: ref) : bool
{
  $eq.i64.bool(p1, p2)
}

function {:inline} $ne.ref(p1: ref, p2: ref) : i1
{
  (if $ne.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ne.ref.bool(p1: ref, p2: ref) : bool
{
  $ne.i64.bool(p1, p2)
}

function {:inline} $ugt.ref(p1: ref, p2: ref) : i1
{
  (if $ugt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ugt.ref.bool(p1: ref, p2: ref) : bool
{
  $ugt.i64.bool(p1, p2)
}

function {:inline} $uge.ref(p1: ref, p2: ref) : i1
{
  (if $uge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $uge.ref.bool(p1: ref, p2: ref) : bool
{
  $uge.i64.bool(p1, p2)
}

function {:inline} $ult.ref(p1: ref, p2: ref) : i1
{
  (if $ult.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ult.ref.bool(p1: ref, p2: ref) : bool
{
  $ult.i64.bool(p1, p2)
}

function {:inline} $ule.ref(p1: ref, p2: ref) : i1
{
  (if $ule.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ule.ref.bool(p1: ref, p2: ref) : bool
{
  $ule.i64.bool(p1, p2)
}

function {:inline} $sgt.ref(p1: ref, p2: ref) : i1
{
  (if $sgt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sgt.ref.bool(p1: ref, p2: ref) : bool
{
  $sgt.i64.bool(p1, p2)
}

function {:inline} $sge.ref(p1: ref, p2: ref) : i1
{
  (if $sge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sge.ref.bool(p1: ref, p2: ref) : bool
{
  $sge.i64.bool(p1, p2)
}

function {:inline} $slt.ref(p1: ref, p2: ref) : i1
{
  (if $slt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $slt.ref.bool(p1: ref, p2: ref) : bool
{
  $slt.i64.bool(p1, p2)
}

function {:inline} $sle.ref(p1: ref, p2: ref) : i1
{
  (if $sle.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sle.ref.bool(p1: ref, p2: ref) : bool
{
  $sle.i64.bool(p1, p2)
}

function {:inline} $add.ref(p1: ref, p2: ref) : ref
{
  $add.i64(p1, p2)
}

function {:inline} $sub.ref(p1: ref, p2: ref) : ref
{
  $sub.i64(p1, p2)
}

function {:inline} $mul.ref(p1: ref, p2: ref) : ref
{
  $mul.i64(p1, p2)
}

const LDV_IN_INTERRUPT: ref;

axiom LDV_IN_INTERRUPT == $sub.ref(0, 1028);

const ldv_spin: ref;

axiom ldv_spin == $sub.ref(0, 2056);

const inftl_tr: ref;

axiom inftl_tr == $sub.ref(0, 3224);

const .str: ref;

axiom .str == $sub.ref(0, 4254);

const __this_module: ref;

axiom __this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776));

const {:count 17} .str.76: ref;

axiom .str.76 == $sub.ref(0, 5295);

const {:count 176} .str.31: ref;

axiom .str.31 == $sub.ref(0, 6495);

const {:count 26} .str.77: ref;

axiom .str.77 == $sub.ref(0, 7545);

const {:count 11} .str.69: ref;

axiom .str.69 == $sub.ref(0, 8580);

const {:count 140} .str.70: ref;

axiom .str.70 == $sub.ref(0, 9744);

const {:count 14} .str.71: ref;

axiom .str.71 == $sub.ref(0, 10782);

const {:count 23} .str.72: ref;

axiom .str.72 == $sub.ref(0, 11829);

const {:count 34} .str.73: ref;

axiom .str.73 == $sub.ref(0, 12887);

const {:count 63} .str.74: ref;

axiom .str.74 == $sub.ref(0, 13974);

const {:count 49} .str.75: ref;

axiom .str.75 == $sub.ref(0, 15047);

const {:count 12} .str.18: ref;

axiom .str.18 == $sub.ref(0, 16083);

const {:count 177} .str.2: ref;

axiom .str.2 == $sub.ref(0, 17284);

const {:count 30} .str.19: ref;

axiom .str.19 == $sub.ref(0, 18338);

const {:count 45} .str.20: ref;

axiom .str.20 == $sub.ref(0, 19407);

const {:count 54} .str.21: ref;

axiom .str.21 == $sub.ref(0, 20485);

const {:count 34} .str.22: ref;

axiom .str.22 == $sub.ref(0, 21543);

const {:count 75} .str.23: ref;

axiom .str.23 == $sub.ref(0, 22642);

const {:count 41} .str.24: ref;

axiom .str.24 == $sub.ref(0, 23707);

const {:count 50} .str.25: ref;

axiom .str.25 == $sub.ref(0, 24781);

const {:count 40} .str.26: ref;

axiom .str.26 == $sub.ref(0, 25845);

const {:count 48} .str.27: ref;

axiom .str.27 == $sub.ref(0, 26917);

const {:count 37} .str.28: ref;

axiom .str.28 == $sub.ref(0, 27978);

const {:count 45} .str.29: ref;

axiom .str.29 == $sub.ref(0, 29047);

const {:count 18} .str.1: ref;

axiom .str.1 == $sub.ref(0, 30089);

const {:count 45} .str.3: ref;

axiom .str.3 == $sub.ref(0, 31158);

const {:count 43} .str.4: ref;

axiom .str.4 == $sub.ref(0, 32225);

const {:count 19} .str.13: ref;

axiom .str.13 == $sub.ref(0, 33268);

const {:count 79} .str.6: ref;

axiom .str.6 == $sub.ref(0, 34371);

const {:count 28} .str.14: ref;

axiom .str.14 == $sub.ref(0, 35423);

const {:count 21} .str.15: ref;

axiom .str.15 == $sub.ref(0, 36468);

const {:count 4} .str.16: ref;

axiom .str.16 == $sub.ref(0, 37496);

const {:count 2} .str.17: ref;

axiom .str.17 == $sub.ref(0, 38522);

const {:count 17} .str.5: ref;

axiom .str.5 == $sub.ref(0, 39563);

const {:count 15} .str.7: ref;

axiom .str.7 == $sub.ref(0, 40602);

const {:count 8} .str.8: ref;

axiom .str.8 == $sub.ref(0, 41634);

const {:count 6} .str.9: ref;

axiom .str.9 == $sub.ref(0, 42664);

const {:count 80} .str.10: ref;

axiom .str.10 == $sub.ref(0, 43768);

const {:count 21} .str.11: ref;

axiom .str.11 == $sub.ref(0, 44813);

const {:count 222} .str.12: ref;

axiom .str.12 == $sub.ref(0, 46059);

const {:count 40} .str.98: ref;

axiom .str.98 == $sub.ref(0, 47123);

const {:count 31} .str.99: ref;

axiom .str.99 == $sub.ref(0, 48178);

const {:count 17} .str.78: ref;

axiom .str.78 == $sub.ref(0, 49219);

const {:count 35} .str.79: ref;

axiom .str.79 == $sub.ref(0, 50278);

const {:count 50} .str.80: ref;

axiom .str.80 == $sub.ref(0, 51352);

const {:count 63} .str.81: ref;

axiom .str.81 == $sub.ref(0, 52439);

const {:count 6} .str.82: ref;

axiom .str.82 == $sub.ref(0, 53469);

const {:count 82} .str.83: ref;

axiom .str.83 == $sub.ref(0, 54575);

const {:count 45} .str.84: ref;

axiom .str.84 == $sub.ref(0, 55644);

const {:count 53} .str.85: ref;

axiom .str.85 == $sub.ref(0, 56721);

const {:count 274} .str.86: ref;

axiom .str.86 == $sub.ref(0, 58019);

const {:count 94} .str.87: ref;

axiom .str.87 == $sub.ref(0, 59137);

const {:count 90} .str.88: ref;

axiom .str.88 == $sub.ref(0, 60251);

const {:count 57} .str.89: ref;

axiom .str.89 == $sub.ref(0, 61332);

const {:count 72} .str.90: ref;

axiom .str.90 == $sub.ref(0, 62428);

const {:count 169} .str.91: ref;

axiom .str.91 == $sub.ref(0, 63621);

const {:count 108} .str.92: ref;

axiom .str.92 == $sub.ref(0, 64753);

const {:count 76} .str.93: ref;

axiom .str.93 == $sub.ref(0, 65853);

const {:count 100} .str.94: ref;

axiom .str.94 == $sub.ref(0, 66977);

const {:count 110} .str.95: ref;

axiom .str.95 == $sub.ref(0, 68111);

const {:count 52} .str.96: ref;

axiom .str.96 == $sub.ref(0, 69187);

const {:count 52} .str.97: ref;

axiom .str.97 == $sub.ref(0, 70263);

const {:count 17} .str.35: ref;

axiom .str.35 == $sub.ref(0, 71304);

const {:count 55} .str.36: ref;

axiom .str.36 == $sub.ref(0, 72383);

const {:count 54} .str.37: ref;

axiom .str.37 == $sub.ref(0, 73461);

const {:count 18} .str.60: ref;

axiom .str.60 == $sub.ref(0, 74503);

const {:count 45} .str.61: ref;

axiom .str.61 == $sub.ref(0, 75572);

const {:count 55} .str.62: ref;

axiom .str.62 == $sub.ref(0, 76651);

const {:count 52} .str.41: ref;

axiom .str.41 == $sub.ref(0, 77727);

const {:count 21} .str.63: ref;

axiom .str.63 == $sub.ref(0, 78772);

const {:count 50} .str.64: ref;

axiom .str.64 == $sub.ref(0, 79846);

const {:count 64} .str.65: ref;

axiom .str.65 == $sub.ref(0, 80934);

const {:count 30} .str.66: ref;

axiom .str.66 == $sub.ref(0, 81988);

const {:count 53} .str.67: ref;

axiom .str.67 == $sub.ref(0, 83065);

const {:count 29} .str.68: ref;

axiom .str.68 == $sub.ref(0, 84118);

const {:count 20} .str.38: ref;

axiom .str.38 == $sub.ref(0, 85162);

const {:count 47} .str.39: ref;

axiom .str.39 == $sub.ref(0, 86233);

const {:count 43} .str.40: ref;

axiom .str.40 == $sub.ref(0, 87300);

const {:count 75} .str.42: ref;

axiom .str.42 == $sub.ref(0, 88399);

const {:count 35} .str.43: ref;

axiom .str.43 == $sub.ref(0, 89458);

const {:count 66} .str.44: ref;

axiom .str.44 == $sub.ref(0, 90548);

const {:count 20} .str.49: ref;

axiom .str.49 == $sub.ref(0, 91592);

const {:count 49} .str.50: ref;

axiom .str.50 == $sub.ref(0, 92665);

const {:count 53} .str.51: ref;

axiom .str.51 == $sub.ref(0, 93742);

const {:count 73} .str.52: ref;

axiom .str.52 == $sub.ref(0, 94839);

const {:count 16} .str.53: ref;

axiom .str.53 == $sub.ref(0, 95879);

const {:count 56} .str.54: ref;

axiom .str.54 == $sub.ref(0, 96959);

const {:count 62} .str.55: ref;

axiom .str.55 == $sub.ref(0, 98045);

const {:count 53} .str.56: ref;

axiom .str.56 == $sub.ref(0, 99122);

const {:count 38} .str.57: ref;

axiom .str.57 == $sub.ref(0, 100184);

const {:count 34} .str.58: ref;

axiom .str.58 == $sub.ref(0, 101242);

const {:count 39} .str.59: ref;

axiom .str.59 == $sub.ref(0, 102305);

const {:count 20} .str.45: ref;

axiom .str.45 == $sub.ref(0, 103349);

const {:count 51} .str.46: ref;

axiom .str.46 == $sub.ref(0, 104424);

const {:count 41} .str.47: ref;

axiom .str.47 == $sub.ref(0, 105489);

const {:count 54} .str.48: ref;

axiom .str.48 == $sub.ref(0, 106567);

const {:count 16} .str.30: ref;

axiom .str.30 == $sub.ref(0, 107607);

const {:count 54} .str.32: ref;

axiom .str.32 == $sub.ref(0, 108685);

const {:count 58} .str.33: ref;

axiom .str.33 == $sub.ref(0, 109767);

const {:count 53} .str.34: ref;

axiom .str.34 == $sub.ref(0, 110844);

const env_value_str: ref;

axiom env_value_str == $sub.ref(0, 111876);

const {:count 3} .str.1.206: ref;

axiom .str.1.206 == $sub.ref(0, 112903);

const {:count 14} .str.388: ref;

axiom .str.388 == $sub.ref(0, 113941);

const errno_global: ref;

axiom errno_global == $sub.ref(0, 114969);

const inftl_read_oob: ref;

axiom inftl_read_oob == $sub.ref(0, 116001);

procedure inftl_read_oob($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation inftl_read_oob($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i64;
  var $i32: i64;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 0} $p5 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    call {:si_unique_call 1} {:cexpr "inftl_read_oob:arg:offs"} boogie_si_record_i64($i1);
    call {:si_unique_call 2} {:cexpr "inftl_read_oob:arg:len"} boogie_si_record_i64($i2);
    goto corral_source_split_1;

  corral_source_split_1:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_2;

  corral_source_split_2:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p6, 0);
    goto corral_source_split_3;

  corral_source_split_3:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p5);
    goto corral_source_split_4;

  corral_source_split_4:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 40);
    call {:si_unique_call 3} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
    goto corral_source_split_5;

  corral_source_split_5:
    assume {:verifier.code 0} true;
    $i9 := $trunc.i64.i32($i1);
    call {:si_unique_call 4} {:cexpr "__cil_tmp10"} boogie_si_record_i32($i9);
    goto corral_source_split_6;

  corral_source_split_6:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 5} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
    goto corral_source_split_7;

  corral_source_split_7:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 20);
    call {:si_unique_call 6} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
    goto corral_source_split_8;

  corral_source_split_8:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_9;

  corral_source_split_9:
    assume {:verifier.code 0} true;
    $i13 := $load.i32($M.1, $p12);
    call {:si_unique_call 7} {:cexpr "__cil_tmp13"} boogie_si_record_i32($i13);
    goto corral_source_split_10;

  corral_source_split_10:
    assume {:verifier.code 0} true;
    $i14 := $sub.i32($i13, 1);
    call {:si_unique_call 8} {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
    goto corral_source_split_11;

  corral_source_split_11:
    assume {:verifier.code 0} true;
    $i15 := $and.i32($i14, $i9);
    call {:si_unique_call 9} {:cexpr "__cil_tmp16"} boogie_si_record_i32($i15);
    goto corral_source_split_12;

  corral_source_split_12:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i8);
    goto corral_source_split_13;

  corral_source_split_13:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p16, $i15);
    goto corral_source_split_14;

  corral_source_split_14:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p5);
    goto corral_source_split_15;

  corral_source_split_15:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 24);
    call {:si_unique_call 10} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
    goto corral_source_split_16;

  corral_source_split_16:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_17;

  corral_source_split_17:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p19, $i2);
    goto corral_source_split_18;

  corral_source_split_18:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p5);
    goto corral_source_split_19;

  corral_source_split_19:
    assume {:verifier.code 0} true;
    $i21 := $add.i64($i20, 56);
    call {:si_unique_call 11} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i21);
    goto corral_source_split_20;

  corral_source_split_20:
    assume {:verifier.code 0} true;
    $p22 := $i2p.i64.ref($i21);
    goto corral_source_split_21;

  corral_source_split_21:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p22, $p4);
    goto corral_source_split_22;

  corral_source_split_22:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p5);
    goto corral_source_split_23;

  corral_source_split_23:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 48);
    call {:si_unique_call 12} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i24);
    goto corral_source_split_24;

  corral_source_split_24:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_25;

  corral_source_split_25:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p25, $0.ref);
    goto corral_source_split_26;

  corral_source_split_26:
    assume {:verifier.code 0} true;
    $i26 := $p2i.ref.i64($p0);
    call {:si_unique_call 13} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i26);
    goto corral_source_split_27;

  corral_source_split_27:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($i26, 20);
    call {:si_unique_call 14} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i27);
    goto corral_source_split_28;

  corral_source_split_28:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_29;

  corral_source_split_29:
    assume {:verifier.code 0} true;
    $i29 := $load.i32($M.1, $p28);
    call {:si_unique_call 15} {:cexpr "__cil_tmp22"} boogie_si_record_i32($i29);
    goto corral_source_split_30;

  corral_source_split_30:
    assume {:verifier.code 0} true;
    $i30 := $sub.i32(0, $i29);
    call {:si_unique_call 16} {:cexpr "__cil_tmp23"} boogie_si_record_i32($i30);
    goto corral_source_split_31;

  corral_source_split_31:
    assume {:verifier.code 0} true;
    $i31 := $zext.i32.i64($i30);
    call {:si_unique_call 17} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i31);
    goto corral_source_split_32;

  corral_source_split_32:
    assume {:verifier.code 0} true;
    $i32 := $and.i64($i31, $i1);
    call {:si_unique_call 18} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i32);
    goto corral_source_split_33;

  corral_source_split_33:
    assume {:verifier.code 0} true;
    call {:si_unique_call 19} $i33 := mtd_read_oob($p0, $i32, $p5);
    call {:si_unique_call 20} {:cexpr "res"} boogie_si_record_i32($i33);
    goto corral_source_split_34;

  corral_source_split_34:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p5);
    goto corral_source_split_35;

  corral_source_split_35:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 32);
    call {:si_unique_call 21} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i35);
    goto corral_source_split_36;

  corral_source_split_36:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_37;

  corral_source_split_37:
    assume {:verifier.code 0} true;
    $i37 := $load.i64($M.1, $p36);
    goto corral_source_split_38;

  corral_source_split_38:
    assume {:verifier.code 0} true;
    $M.2 := $store.i64($M.2, $p3, $i37);
    goto corral_source_split_39;

  corral_source_split_39:
    assume {:verifier.code 0} true;
    $r := $i33;
    return;
}



const llvm.dbg.declare: ref;

axiom llvm.dbg.declare == $sub.ref(0, 117033);

procedure llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);



const mtd_read_oob: ref;

axiom mtd_read_oob == $sub.ref(0, 118065);

procedure mtd_read_oob($p0: ref, $i1: i64, $p2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation mtd_read_oob($p0: ref, $i1: i64, $p2: ref) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i16: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 22} {:cexpr "mtd_read_oob:arg:from"} boogie_si_record_i64($i1);
    goto corral_source_split_41;

  corral_source_split_41:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    call {:si_unique_call 23} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
    goto corral_source_split_42;

  corral_source_split_42:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 32);
    call {:si_unique_call 24} {:cexpr "__cil_tmp7"} boogie_si_record_i64($i4);
    goto corral_source_split_43;

  corral_source_split_43:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_44;

  corral_source_split_44:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p5, 0);
    goto corral_source_split_45;

  corral_source_split_45:
    assume {:verifier.code 0} true;
    $i6 := $p2i.ref.i64($p2);
    call {:si_unique_call 25} {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
    goto corral_source_split_46;

  corral_source_split_46:
    assume {:verifier.code 0} true;
    $i7 := $add.i64($i6, 16);
    call {:si_unique_call 26} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i7);
    goto corral_source_split_47;

  corral_source_split_47:
    assume {:verifier.code 0} true;
    $p8 := $i2p.i64.ref($i7);
    goto corral_source_split_48;

  corral_source_split_48:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p8, 0);
    goto corral_source_split_49;

  corral_source_split_49:
    assume {:verifier.code 0} true;
    $i9 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 27} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
    goto corral_source_split_50;

  corral_source_split_50:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 28} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i10);
    goto corral_source_split_51;

  corral_source_split_51:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 152);
    call {:si_unique_call 29} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i11);
    goto corral_source_split_52;

  corral_source_split_52:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_53;

  corral_source_split_53:
    assume {:verifier.code 0} true;
    $p13 := $load.ref($M.1, $p12);
    goto corral_source_split_54;

  corral_source_split_54:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p13);
    call {:si_unique_call 30} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
    goto corral_source_split_55;

  corral_source_split_55:
    assume {:verifier.code 0} true;
    $i15 := $eq.i64($i14, $i9);
    goto corral_source_split_56;

  corral_source_split_56:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p0);
    call {:si_unique_call 31} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i17);
    goto corral_source_split_62;

  corral_source_split_62:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 152);
    call {:si_unique_call 32} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
    goto corral_source_split_63;

  corral_source_split_63:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_64;

  corral_source_split_64:
    assume {:verifier.code 0} true;
    $p20 := $load.ref($M.1, $p19);
    call {:si_unique_call 33} $i21 := devirtbounce($p20, $p0, $i1, $p2);
    call {:si_unique_call 34} {:cexpr "tmp___0"} boogie_si_record_i32($i21);
    goto corral_source_split_65;

  corral_source_split_65:
    assume {:verifier.code 0} true;
    $i16 := $i21;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_60;

  corral_source_split_60:
    assume {:verifier.code 0} true;
    $r := $i16;
    return;

  $bb1:
    assume $i15 == 1;
    goto corral_source_split_58;

  corral_source_split_58:
    assume {:verifier.code 0} true;
    $i16 := $sub.i32(0, 95);
    goto $bb3;
}



const inftl_readblock: ref;

axiom inftl_readblock == $sub.ref(0, 119097);

procedure inftl_readblock($p0: ref, $i1: i64, $p2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation inftl_readblock($p0: ref, $i1: i64, $p2: ref) returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i16;
  var $i21: i32;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $i56: i32;
  var $i57: i64;
  var $i58: i1;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $i63: i32;
  var $i64: i1;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i78: i32;
  var $i90: i1;
  var $i91: i1;
  var $i92: i32;
  var $i93: i1;
  var $i94: i1;
  var $i97: i32;
  var $i98: i1;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i64;
  var $i105: i64;
  var $i108: i64;
  var $i109: i64;
  var $i110: i64;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i16;
  var $i115: i32;
  var $i116: i32;
  var $i117: i1;
  var $i66: i32;
  var $i67: i32;
  var $i118: i32;
  var $i65: i32;
  var $i95: i32;
  var $i119: i1;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $i123: i32;
  var $i124: i32;
  var $i125: i64;
  var $i126: i64;
  var $i127: i32;
  var $i128: i1;
  var $i129: i32;
  var $i130: i1;
  var $i107: i32;
  var cmdloc_dummy_var_0: [ref]i8;
  var cmdloc_dummy_var_1: [ref]i8;
  var vslice_dummy_var_22: i32;
  var vslice_dummy_var_23: i32;
  var vslice_dummy_var_24: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 35} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 36} $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 37} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 38} $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    call {:si_unique_call 39} {:cexpr "inftl_readblock:arg:block"} boogie_si_record_i64($i1);
    goto corral_source_split_67;

  corral_source_split_67:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p0);
    goto corral_source_split_68;

  corral_source_split_68:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p7);
    call {:si_unique_call 40} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i8);
    goto corral_source_split_69;

  corral_source_split_69:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 356);
    call {:si_unique_call 41} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i9);
    goto corral_source_split_70;

  corral_source_split_70:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_71;

  corral_source_split_71:
    assume {:verifier.code 0} true;
    $i11 := $load.i32($M.1, $p10);
    call {:si_unique_call 42} {:cexpr "__cil_tmp23"} boogie_si_record_i32($i11);
    goto corral_source_split_72;

  corral_source_split_72:
    assume {:verifier.code 0} true;
    $i12 := $udiv.i32($i11, 512);
    call {:si_unique_call 43} {:cexpr "__cil_tmp24"} boogie_si_record_i32($i12);
    goto corral_source_split_73;

  corral_source_split_73:
    assume {:verifier.code 0} true;
    $i13 := $zext.i32.i64($i12);
    call {:si_unique_call 44} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i13);
    goto corral_source_split_74;

  corral_source_split_74:
    assume {:verifier.code 0} true;
    $i14 := $udiv.i64($i1, $i13);
    call {:si_unique_call 45} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i14);
    goto corral_source_split_75;

  corral_source_split_75:
    assume {:verifier.code 0} true;
    $i15 := $p2i.ref.i64($p7);
    call {:si_unique_call 46} {:cexpr "__cil_tmp27"} boogie_si_record_i64($i15);
    goto corral_source_split_76;

  corral_source_split_76:
    assume {:verifier.code 0} true;
    $i16 := $add.i64($i15, 552);
    call {:si_unique_call 47} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i16);
    goto corral_source_split_77;

  corral_source_split_77:
    assume {:verifier.code 0} true;
    $p17 := $i2p.i64.ref($i16);
    goto corral_source_split_78;

  corral_source_split_78:
    assume {:verifier.code 0} true;
    $p18 := $load.ref($M.1, $p17);
    goto corral_source_split_79;

  corral_source_split_79:
    assume {:verifier.code 0} true;
    $p19 := $add.ref($p18, $mul.ref($i14, 2));
    goto corral_source_split_80;

  corral_source_split_80:
    assume {:verifier.code 0} true;
    $i20 := $load.i16($M.1, $p19);
    call {:si_unique_call 48} {:cexpr "__cil_tmp31"} boogie_si_record_i16($i20);
    goto corral_source_split_81;

  corral_source_split_81:
    assume {:verifier.code 0} true;
    $i21 := $zext.i16.i32($i20);
    call {:si_unique_call 49} {:cexpr "thisEUN"} boogie_si_record_i32($i21);
    goto corral_source_split_82;

  corral_source_split_82:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p7);
    call {:si_unique_call 50} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i22);
    goto corral_source_split_83;

  corral_source_split_83:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 356);
    call {:si_unique_call 51} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i23);
    goto corral_source_split_84;

  corral_source_split_84:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_85;

  corral_source_split_85:
    assume {:verifier.code 0} true;
    $i25 := $load.i32($M.1, $p24);
    call {:si_unique_call 52} {:cexpr "__cil_tmp34"} boogie_si_record_i32($i25);
    goto corral_source_split_86;

  corral_source_split_86:
    assume {:verifier.code 0} true;
    $i26 := $sub.i32($i25, 1);
    call {:si_unique_call 53} {:cexpr "__cil_tmp35"} boogie_si_record_i32($i26);
    goto corral_source_split_87;

  corral_source_split_87:
    assume {:verifier.code 0} true;
    $i27 := $zext.i32.i64($i26);
    call {:si_unique_call 54} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i27);
    goto corral_source_split_88;

  corral_source_split_88:
    assume {:verifier.code 0} true;
    $i28 := $mul.i64($i1, 512);
    call {:si_unique_call 55} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i28);
    goto corral_source_split_89;

  corral_source_split_89:
    assume {:verifier.code 0} true;
    $i29 := $and.i64($i28, $i27);
    call {:si_unique_call 56} {:cexpr "blockofs"} boogie_si_record_i64($i29);
    goto corral_source_split_90;

  corral_source_split_90:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p7);
    call {:si_unique_call 57} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i30);
    goto corral_source_split_91;

  corral_source_split_91:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 24);
    call {:si_unique_call 58} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i31);
    goto corral_source_split_92;

  corral_source_split_92:
    assume {:verifier.code 0} true;
    $p32 := $i2p.i64.ref($i31);
    goto corral_source_split_93;

  corral_source_split_93:
    assume {:verifier.code 0} true;
    $p33 := $load.ref($M.1, $p32);
    goto corral_source_split_94;

  corral_source_split_94:
    assume {:verifier.code 0} true;
    $p34 := $bitcast.ref.ref($p5);
    goto corral_source_split_95;

  corral_source_split_95:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p34, .str);
    goto corral_source_split_96;

  corral_source_split_96:
    assume {:verifier.code 0} true;
    $i35 := $p2i.ref.i64($p5);
    goto corral_source_split_97;

  corral_source_split_97:
    assume {:verifier.code 0} true;
    $i36 := $add.i64($i35, 8);
    call {:si_unique_call 59} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i36);
    goto corral_source_split_98;

  corral_source_split_98:
    assume {:verifier.code 0} true;
    $p37 := $i2p.i64.ref($i36);
    goto corral_source_split_99;

  corral_source_split_99:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p37, .str.30);
    goto corral_source_split_100;

  corral_source_split_100:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p5);
    goto corral_source_split_101;

  corral_source_split_101:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 16);
    call {:si_unique_call 60} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i39);
    goto corral_source_split_102;

  corral_source_split_102:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_103;

  corral_source_split_103:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p40, .str.31);
    goto corral_source_split_104;

  corral_source_split_104:
    assume {:verifier.code 0} true;
    $i41 := $p2i.ref.i64($p5);
    goto corral_source_split_105;

  corral_source_split_105:
    assume {:verifier.code 0} true;
    $i42 := $add.i64($i41, 24);
    call {:si_unique_call 61} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i42);
    goto corral_source_split_106;

  corral_source_split_106:
    assume {:verifier.code 0} true;
    $p43 := $i2p.i64.ref($i42);
    goto corral_source_split_107;

  corral_source_split_107:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p43, .str.32);
    goto corral_source_split_108;

  corral_source_split_108:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p5);
    goto corral_source_split_109;

  corral_source_split_109:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 32);
    call {:si_unique_call 62} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i45);
    goto corral_source_split_110;

  corral_source_split_110:
    assume {:verifier.code 0} true;
    $p46 := $i2p.i64.ref($i45);
    goto corral_source_split_111;

  corral_source_split_111:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p46, 893);
    goto corral_source_split_112;

  corral_source_split_112:
    assume {:verifier.code 0} true;
    $i47 := $p2i.ref.i64($p5);
    goto corral_source_split_113;

  corral_source_split_113:
    assume {:verifier.code 0} true;
    $i48 := $add.i64($i47, 35);
    call {:si_unique_call 63} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i48);
    goto corral_source_split_114;

  corral_source_split_114:
    assume {:verifier.code 0} true;
    $p49 := $i2p.i64.ref($i48);
    goto corral_source_split_115;

  corral_source_split_115:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p49, 0);
    goto corral_source_split_116;

  corral_source_split_116:
    assume {:verifier.code 0} true;
    $i50 := $p2i.ref.i64($p5);
    goto corral_source_split_117;

  corral_source_split_117:
    assume {:verifier.code 0} true;
    $i51 := $add.i64($i50, 35);
    call {:si_unique_call 64} {:cexpr "__cil_tmp47"} boogie_si_record_i64($i51);
    goto corral_source_split_118;

  corral_source_split_118:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i51);
    goto corral_source_split_119;

  corral_source_split_119:
    assume {:verifier.code 0} true;
    $i53 := $load.i8($M.1, $p52);
    call {:si_unique_call 65} {:cexpr "__cil_tmp48"} boogie_si_record_i8($i53);
    goto corral_source_split_120;

  corral_source_split_120:
    assume {:verifier.code 0} true;
    $i54 := $zext.i8.i64($i53);
    call {:si_unique_call 66} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i54);
    goto corral_source_split_121;

  corral_source_split_121:
    assume {:verifier.code 0} true;
    $i55 := $and.i64($i54, 1);
    call {:si_unique_call 67} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i55);
    goto corral_source_split_122;

  corral_source_split_122:
    assume {:verifier.code 0} true;
    call {:si_unique_call 68} $i56 := __builtinx_expect.i64.i64($i55, 0);
    goto corral_source_split_123;

  corral_source_split_123:
    assume {:verifier.code 0} true;
    $i57 := $sext.i32.i64($i56);
    call {:si_unique_call 69} {:cexpr "tmp"} boogie_si_record_i64($i57);
    goto corral_source_split_124;

  corral_source_split_124:
    assume {:verifier.code 0} true;
    $i58 := $ne.i64($i57, 0);
    goto corral_source_split_125;

  corral_source_split_125:
    assume {:verifier.code 0} true;
    assume {:branchcond $i58} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i58 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i60 := $p2i.ref.i64($p7);
    call {:si_unique_call 71} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i60);
    goto corral_source_split_130;

  corral_source_split_130:
    assume {:verifier.code 0} true;
    $i61 := $add.i64($i60, 560);
    call {:si_unique_call 72} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i61);
    goto corral_source_split_131;

  corral_source_split_131:
    assume {:verifier.code 0} true;
    $p62 := $i2p.i64.ref($i61);
    goto corral_source_split_132;

  corral_source_split_132:
    assume {:verifier.code 0} true;
    $i63 := $load.i32($M.1, $p62);
    call {:si_unique_call 73} {:cexpr "__cil_tmp80"} boogie_si_record_i32($i63);
    goto corral_source_split_133;

  corral_source_split_133:
    assume {:verifier.code 0} true;
    $i64 := $ugt.i32($i63, $i21);
    goto corral_source_split_134;

  corral_source_split_134:
    assume {:verifier.code 0} true;
    $i65 := $i21;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i64 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_138;

  corral_source_split_138:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $i95 := $i65;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    goto corral_source_split_195;

  corral_source_split_195:
    assume {:verifier.code 0} true;
    $i119 := $eq.i32($i95, 65535);
    goto corral_source_split_196;

  corral_source_split_196:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i119 == 1);
    goto corral_source_split_229;

  corral_source_split_229:
    assume {:verifier.code 0} true;
    $i120 := $p2i.ref.i64($p7);
    call {:si_unique_call 105} {:cexpr "__cil_tmp82"} boogie_si_record_i64($i120);
    goto corral_source_split_230;

  corral_source_split_230:
    assume {:verifier.code 0} true;
    $i121 := $add.i64($i120, 356);
    call {:si_unique_call 106} {:cexpr "__cil_tmp83"} boogie_si_record_i64($i121);
    goto corral_source_split_231;

  corral_source_split_231:
    assume {:verifier.code 0} true;
    $p122 := $i2p.i64.ref($i121);
    goto corral_source_split_232;

  corral_source_split_232:
    assume {:verifier.code 0} true;
    $i123 := $load.i32($M.1, $p122);
    call {:si_unique_call 107} {:cexpr "__cil_tmp84"} boogie_si_record_i32($i123);
    goto corral_source_split_233;

  corral_source_split_233:
    assume {:verifier.code 0} true;
    $i124 := $mul.i32($i123, $i95);
    call {:si_unique_call 108} {:cexpr "__cil_tmp85"} boogie_si_record_i32($i124);
    goto corral_source_split_234;

  corral_source_split_234:
    assume {:verifier.code 0} true;
    $i125 := $zext.i32.i64($i124);
    call {:si_unique_call 109} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i125);
    goto corral_source_split_235;

  corral_source_split_235:
    assume {:verifier.code 0} true;
    $i126 := $add.i64($i125, $i29);
    call {:si_unique_call 110} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i126);
    goto corral_source_split_236;

  corral_source_split_236:
    assume {:verifier.code 0} true;
    call {:si_unique_call 111} $i127 := mtd_read($p33, $i126, 512, $p6, $p2);
    call {:si_unique_call 112} {:cexpr "tmp___2"} boogie_si_record_i32($i127);
    goto corral_source_split_237;

  corral_source_split_237:
    assume {:verifier.code 0} true;
    $i128 := $slt.i32($i127, 0);
    goto corral_source_split_238;

  corral_source_split_238:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb46, $bb47;

  $bb47:
    assume !($i128 == 1);
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $i107 := 0;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    goto corral_source_split_211;

  corral_source_split_211:
    assume {:verifier.code 0} true;
    $r := $i107;
    return;

  $bb46:
    assume $i128 == 1;
    goto corral_source_split_240;

  corral_source_split_240:
    assume {:verifier.code 0} true;
    call {:si_unique_call 113} $i129 := mtd_is_bitflip($i127);
    call {:si_unique_call 114} {:cexpr "tmp___3"} boogie_si_record_i32($i129);
    goto corral_source_split_241;

  corral_source_split_241:
    assume {:verifier.code 0} true;
    $i130 := $eq.i32($i129, 0);
    goto corral_source_split_242;

  corral_source_split_242:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb48:
    assume $i130 == 1;
    goto corral_source_split_244;

  corral_source_split_244:
    assume {:verifier.code 0} true;
    $i107 := $sub.i32(0, 5);
    goto $bb38;

  $bb43:
    assume $i119 == 1;
    goto corral_source_split_226;

  corral_source_split_226:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_0 := $M.1;
    call {:si_unique_call 104} cmdloc_dummy_var_1 := $memset.i8(cmdloc_dummy_var_0, $p2, 0, 512, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_1;
    goto corral_source_split_227;

  corral_source_split_227:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb4:
    assume $i64 == 1;
    goto corral_source_split_136;

  corral_source_split_136:
    assume {:verifier.code 0} true;
    $i66, $i67 := 10000, $i21;
    goto $bb7;

  $bb7:
    call $i68, $i69, $p70, $i71, $i72, $i73, $i74, $p75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $p86, $i87, $i88, $i89, $i78, $i90, $i91, $i92, $i93, $i94, $i97, $i98, $i108, $i109, $i110, $p111, $p112, $p113, $i114, $i115, $i116, $i117, $i66, $i67, $i118, vslice_dummy_var_23 := inftl_readblock_loop_$bb7($i1, $p3, $p4, $p7, $i29, $p33, $p62, $i68, $i69, $p70, $i71, $i72, $i73, $i74, $p75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $p86, $i87, $i88, $i89, $i78, $i90, $i91, $i92, $i93, $i94, $i97, $i98, $i108, $i109, $i110, $p111, $p112, $p113, $i114, $i115, $i116, $i117, $i66, $i67, $i118, vslice_dummy_var_23);
    goto $bb7_last;

  corral_source_split_140:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p7);
    call {:si_unique_call 74} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i68);
    goto corral_source_split_142;

  corral_source_split_142:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 356);
    call {:si_unique_call 75} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i69);
    goto corral_source_split_143;

  corral_source_split_143:
    assume {:verifier.code 0} true;
    $p70 := $i2p.i64.ref($i69);
    goto corral_source_split_144;

  corral_source_split_144:
    assume {:verifier.code 0} true;
    $i71 := $load.i32($M.1, $p70);
    call {:si_unique_call 76} {:cexpr "__cil_tmp53"} boogie_si_record_i32($i71);
    goto corral_source_split_145;

  corral_source_split_145:
    assume {:verifier.code 0} true;
    $i72 := $mul.i32($i71, $i67);
    call {:si_unique_call 77} {:cexpr "__cil_tmp54"} boogie_si_record_i32($i72);
    goto corral_source_split_146;

  corral_source_split_146:
    assume {:verifier.code 0} true;
    $i73 := $zext.i32.i64($i72);
    call {:si_unique_call 78} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i73);
    goto corral_source_split_147;

  corral_source_split_147:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, $i29);
    call {:si_unique_call 79} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i74);
    goto corral_source_split_148;

  corral_source_split_148:
    assume {:verifier.code 0} true;
    $p75 := $bitcast.ref.ref($p3);
    goto corral_source_split_149;

  corral_source_split_149:
    assume {:verifier.code 0} true;
    call {:si_unique_call 80} $i76 := inftl_read_oob($p33, $i74, 8, $p4, $p75);
    call {:si_unique_call 81} {:cexpr "tmp___0"} boogie_si_record_i32($i76);
    goto corral_source_split_150;

  corral_source_split_150:
    assume {:verifier.code 0} true;
    $i77 := $slt.i32($i76, 0);
    goto corral_source_split_151;

  corral_source_split_151:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i77 == 1);
    goto corral_source_split_155;

  corral_source_split_155:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p3);
    goto corral_source_split_156;

  corral_source_split_156:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 7);
    call {:si_unique_call 82} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i80);
    goto corral_source_split_157;

  corral_source_split_157:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_158;

  corral_source_split_158:
    assume {:verifier.code 0} true;
    $i82 := $load.i8($M.1, $p81);
    call {:si_unique_call 83} {:cexpr "__cil_tmp60"} boogie_si_record_i8($i82);
    goto corral_source_split_159;

  corral_source_split_159:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 84} {:cexpr "__cil_tmp61"} boogie_si_record_i32($i83);
    goto corral_source_split_160;

  corral_source_split_160:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p3);
    goto corral_source_split_161;

  corral_source_split_161:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 6);
    call {:si_unique_call 85} {:cexpr "__cil_tmp62"} boogie_si_record_i64($i85);
    goto corral_source_split_162;

  corral_source_split_162:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_163;

  corral_source_split_163:
    assume {:verifier.code 0} true;
    $i87 := $load.i8($M.1, $p86);
    call {:si_unique_call 86} {:cexpr "__cil_tmp63"} boogie_si_record_i8($i87);
    goto corral_source_split_164;

  corral_source_split_164:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 87} {:cexpr "__cil_tmp64"} boogie_si_record_i32($i88);
    goto corral_source_split_165;

  corral_source_split_165:
    assume {:verifier.code 0} true;
    $i89 := $or.i32($i88, $i83);
    call {:si_unique_call 88} {:cexpr "__cil_tmp65"} boogie_si_record_i32($i89);
    assume {:verifier.code 0} true;
    $i78 := $i89;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_167;

  corral_source_split_167:
    assume {:verifier.code 0} true;
    $i90 := $eq.i32($i78, 0);
    goto corral_source_split_168;

  corral_source_split_168:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i90 == 1);
    goto corral_source_split_172;

  corral_source_split_172:
    assume {:verifier.code 0} true;
    $i91 := $eq.i32($i78, 85);
    goto corral_source_split_173;

  corral_source_split_173:
    assume {:verifier.code 0} true;
    $i92 := $i67;
    assume true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i91 == 1);
    goto corral_source_split_177;

  corral_source_split_177:
    assume {:verifier.code 0} true;
    $i93 := $eq.i32($i78, 255);
    goto corral_source_split_178;

  corral_source_split_178:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i93 == 1);
    goto corral_source_split_182;

  corral_source_split_182:
    assume {:verifier.code 0} true;
    $i94 := $eq.i32($i78, 17);
    goto corral_source_split_183;

  corral_source_split_183:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i94 == 1);
    goto corral_source_split_187;

  corral_source_split_187:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 89} vslice_dummy_var_23 := printk.ref.i64.i32.i32(.str.33, $i1, $i67, $i78);
    goto corral_source_split_189;

  corral_source_split_189:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i97 := $sub.i32($i66, 1);
    call {:si_unique_call 90} {:cexpr "silly"} boogie_si_record_i32($i97);
    goto corral_source_split_198;

  corral_source_split_198:
    assume {:verifier.code 0} true;
    $i98 := $eq.i32($i66, 0);
    goto corral_source_split_199;

  corral_source_split_199:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i98 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i108 := $zext.i32.i64($i67);
    call {:si_unique_call 98} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i108);
    goto corral_source_split_213;

  corral_source_split_213:
    assume {:verifier.code 0} true;
    $i109 := $p2i.ref.i64($p7);
    call {:si_unique_call 99} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i109);
    goto corral_source_split_214;

  corral_source_split_214:
    assume {:verifier.code 0} true;
    $i110 := $add.i64($i109, 544);
    call {:si_unique_call 100} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i110);
    goto corral_source_split_215;

  corral_source_split_215:
    assume {:verifier.code 0} true;
    $p111 := $i2p.i64.ref($i110);
    goto corral_source_split_216;

  corral_source_split_216:
    assume {:verifier.code 0} true;
    $p112 := $load.ref($M.1, $p111);
    goto corral_source_split_217;

  corral_source_split_217:
    assume {:verifier.code 0} true;
    $p113 := $add.ref($p112, $mul.ref($i108, 2));
    goto corral_source_split_218;

  corral_source_split_218:
    assume {:verifier.code 0} true;
    $i114 := $load.i16($M.1, $p113);
    call {:si_unique_call 101} {:cexpr "__cil_tmp77"} boogie_si_record_i16($i114);
    goto corral_source_split_219;

  corral_source_split_219:
    assume {:verifier.code 0} true;
    $i115 := $zext.i16.i32($i114);
    call {:si_unique_call 102} {:cexpr "thisEUN"} boogie_si_record_i32($i115);
    goto corral_source_split_220;

  corral_source_split_220:
    assume {:verifier.code 0} true;
    $i116 := $load.i32($M.1, $p62);
    call {:si_unique_call 103} {:cexpr "__cil_tmp80"} boogie_si_record_i32($i116);
    goto corral_source_split_221;

  corral_source_split_221:
    assume {:verifier.code 0} true;
    $i117 := $ugt.i32($i116, $i115);
    goto corral_source_split_222;

  corral_source_split_222:
    assume {:verifier.code 0} true;
    $i118 := $i115;
    assume true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i117 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_224;

  corral_source_split_224:
    assume {:verifier.code 0} true;
    $i65 := $i118;
    goto $bb6;

  $bb40:
    assume $i117 == 1;
    assume {:verifier.code 0} true;
    $i66, $i67 := $i97, $i115;
    goto $bb40_dummy;

  $bb36:
    assume $i98 == 1;
    goto corral_source_split_201;

  corral_source_split_201:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p7);
    call {:si_unique_call 91} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i99);
    goto corral_source_split_202;

  corral_source_split_202:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 356);
    call {:si_unique_call 92} {:cexpr "__cil_tmp67"} boogie_si_record_i64($i100);
    goto corral_source_split_203;

  corral_source_split_203:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_204;

  corral_source_split_204:
    assume {:verifier.code 0} true;
    $i102 := $load.i32($M.1, $p101);
    call {:si_unique_call 93} {:cexpr "__cil_tmp68"} boogie_si_record_i32($i102);
    goto corral_source_split_205;

  corral_source_split_205:
    assume {:verifier.code 0} true;
    $i103 := $udiv.i32($i102, 512);
    call {:si_unique_call 94} {:cexpr "__cil_tmp69"} boogie_si_record_i32($i103);
    goto corral_source_split_206;

  corral_source_split_206:
    assume {:verifier.code 0} true;
    $i104 := $zext.i32.i64($i103);
    call {:si_unique_call 95} {:cexpr "__cil_tmp70"} boogie_si_record_i64($i104);
    goto corral_source_split_207;

  corral_source_split_207:
    assume {:verifier.code 0} true;
    $i105 := $udiv.i64($i1, $i104);
    call {:si_unique_call 96} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i105);
    goto corral_source_split_208;

  corral_source_split_208:
    assume {:verifier.code 0} true;
    call {:si_unique_call 97} vslice_dummy_var_24 := printk.ref.i64(.str.34, $i105);
    goto corral_source_split_209;

  corral_source_split_209:
    assume {:verifier.code 0} true;
    $i107 := 1;
    goto $bb38;

  $bb21:
    assume $i94 == 1;
    goto corral_source_split_185;

  corral_source_split_185:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb18:
    assume $i93 == 1;
    goto corral_source_split_180;

  corral_source_split_180:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb15:
    assume $i91 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_175;

  corral_source_split_175:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i95 := $i92;
    goto $bb28;

  $bb12:
    assume $i90 == 1;
    goto corral_source_split_170;

  corral_source_split_170:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i95 := 65535;
    goto $bb28;

  $bb9:
    assume $i77 == 1;
    goto corral_source_split_153;

  corral_source_split_153:
    assume {:verifier.code 0} true;
    $i78 := 17;
    goto $bb11;

  $bb1:
    assume $i58 == 1;
    goto corral_source_split_127;

  corral_source_split_127:
    assume {:verifier.code 0} true;
    call {:si_unique_call 70} vslice_dummy_var_22 := __dynamic_pr_debug.ref.ref.ref.i64.ref($p5, .str.32, $p7, $i1, $p2);
    goto corral_source_split_128;

  corral_source_split_128:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb40_dummy:
    assume false;
    return;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_140;
}



const inftl_writeblock: ref;

axiom inftl_writeblock == $sub.ref(0, 120129);

procedure inftl_writeblock($p0: ref, $i1: i64, $p2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation inftl_writeblock($p0: ref, $i1: i64, $p2: ref) returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i8;
  var $i35: i64;
  var $i36: i64;
  var $i37: i32;
  var $i38: i64;
  var $i39: i1;
  var $p41: ref;
  var $i42: i64;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $p43: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p47: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $i55: i1;
  var $i56: i32;
  var $i57: i16;
  var $i58: i32;
  var $i59: i1;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $i71: i8;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i86: i32;
  var $i61: i32;
  var cmdloc_dummy_var_2: [ref]i8;
  var cmdloc_dummy_var_3: [ref]i8;
  var vslice_dummy_var_25: i32;
  var vslice_dummy_var_26: i32;
  var vslice_dummy_var_27: i32;
  var vslice_dummy_var_28: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 115} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 116} $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 117} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 118} {:cexpr "inftl_writeblock:arg:block"} boogie_si_record_i64($i1);
    goto corral_source_split_246;

  corral_source_split_246:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p0);
    goto corral_source_split_247;

  corral_source_split_247:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p6);
    call {:si_unique_call 119} {:cexpr "__cil_tmp14"} boogie_si_record_i64($i7);
    goto corral_source_split_248;

  corral_source_split_248:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 356);
    call {:si_unique_call 120} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i8);
    goto corral_source_split_249;

  corral_source_split_249:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_250;

  corral_source_split_250:
    assume {:verifier.code 0} true;
    $i10 := $load.i32($M.1, $p9);
    call {:si_unique_call 121} {:cexpr "__cil_tmp16"} boogie_si_record_i32($i10);
    goto corral_source_split_251;

  corral_source_split_251:
    assume {:verifier.code 0} true;
    $i11 := $sub.i32($i10, 1);
    call {:si_unique_call 122} {:cexpr "__cil_tmp17"} boogie_si_record_i32($i11);
    goto corral_source_split_252;

  corral_source_split_252:
    assume {:verifier.code 0} true;
    $i12 := $zext.i32.i64($i11);
    call {:si_unique_call 123} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i12);
    goto corral_source_split_253;

  corral_source_split_253:
    assume {:verifier.code 0} true;
    $i13 := $mul.i64($i1, 512);
    call {:si_unique_call 124} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i13);
    goto corral_source_split_254;

  corral_source_split_254:
    assume {:verifier.code 0} true;
    $i14 := $and.i64($i13, $i12);
    call {:si_unique_call 125} {:cexpr "blockofs"} boogie_si_record_i64($i14);
    goto corral_source_split_255;

  corral_source_split_255:
    assume {:verifier.code 0} true;
    $p15 := $bitcast.ref.ref($p5);
    goto corral_source_split_256;

  corral_source_split_256:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p15, .str);
    goto corral_source_split_257;

  corral_source_split_257:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p5);
    goto corral_source_split_258;

  corral_source_split_258:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 8);
    call {:si_unique_call 126} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i17);
    goto corral_source_split_259;

  corral_source_split_259:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_260;

  corral_source_split_260:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p18, .str.35);
    goto corral_source_split_261;

  corral_source_split_261:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p5);
    goto corral_source_split_262;

  corral_source_split_262:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 16);
    call {:si_unique_call 127} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i20);
    goto corral_source_split_263;

  corral_source_split_263:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_264;

  corral_source_split_264:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p21, .str.31);
    goto corral_source_split_265;

  corral_source_split_265:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p5);
    goto corral_source_split_266;

  corral_source_split_266:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 24);
    call {:si_unique_call 128} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i23);
    goto corral_source_split_267;

  corral_source_split_267:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_268;

  corral_source_split_268:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p24, .str.36);
    goto corral_source_split_269;

  corral_source_split_269:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p5);
    goto corral_source_split_270;

  corral_source_split_270:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 32);
    call {:si_unique_call 129} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i26);
    goto corral_source_split_271;

  corral_source_split_271:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_272;

  corral_source_split_272:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p27, 843);
    goto corral_source_split_273;

  corral_source_split_273:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p5);
    goto corral_source_split_274;

  corral_source_split_274:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 35);
    call {:si_unique_call 130} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i29);
    goto corral_source_split_275;

  corral_source_split_275:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_276;

  corral_source_split_276:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p30, 0);
    goto corral_source_split_277;

  corral_source_split_277:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p5);
    goto corral_source_split_278;

  corral_source_split_278:
    assume {:verifier.code 0} true;
    $i32 := $add.i64($i31, 35);
    call {:si_unique_call 131} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i32);
    goto corral_source_split_279;

  corral_source_split_279:
    assume {:verifier.code 0} true;
    $p33 := $i2p.i64.ref($i32);
    goto corral_source_split_280;

  corral_source_split_280:
    assume {:verifier.code 0} true;
    $i34 := $load.i8($M.1, $p33);
    call {:si_unique_call 132} {:cexpr "__cil_tmp27"} boogie_si_record_i8($i34);
    goto corral_source_split_281;

  corral_source_split_281:
    assume {:verifier.code 0} true;
    $i35 := $zext.i8.i64($i34);
    call {:si_unique_call 133} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i35);
    goto corral_source_split_282;

  corral_source_split_282:
    assume {:verifier.code 0} true;
    $i36 := $and.i64($i35, 1);
    call {:si_unique_call 134} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i36);
    goto corral_source_split_283;

  corral_source_split_283:
    assume {:verifier.code 0} true;
    call {:si_unique_call 135} $i37 := __builtinx_expect.i64.i64($i36, 0);
    goto corral_source_split_284;

  corral_source_split_284:
    assume {:verifier.code 0} true;
    $i38 := $sext.i32.i64($i37);
    call {:si_unique_call 136} {:cexpr "tmp"} boogie_si_record_i64($i38);
    goto corral_source_split_285;

  corral_source_split_285:
    assume {:verifier.code 0} true;
    $i39 := $ne.i64($i38, 0);
    goto corral_source_split_286;

  corral_source_split_286:
    assume {:verifier.code 0} true;
    assume {:branchcond $i39} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($p2, $mul.ref(512, 1));
    goto corral_source_split_291;

  corral_source_split_291:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p41);
    call {:si_unique_call 138} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i42);
    goto corral_source_split_292;

  corral_source_split_292:
    assume {:verifier.code 0} true;
    $p43 := $p2;
    goto $bb4;

  $bb4:
    call $p44, $i45, $i46, $p43, $i48, $i49, $i50, $p51, $p47 := inftl_writeblock_loop_$bb4($i42, $p44, $i45, $i46, $p43, $i48, $i49, $i50, $p51, $p47);
    goto $bb4_last;

  corral_source_split_294:
    assume {:verifier.code 0} true;
    $i48 := $load.i8($M.1, $p43);
    call {:si_unique_call 139} {:cexpr "__cil_tmp32"} boogie_si_record_i8($i48);
    goto corral_source_split_295;

  corral_source_split_295:
    assume {:verifier.code 0} true;
    $i49 := $sext.i8.i32($i48);
    call {:si_unique_call 140} {:cexpr "__cil_tmp34"} boogie_si_record_i32($i49);
    goto corral_source_split_296;

  corral_source_split_296:
    assume {:verifier.code 0} true;
    $i50 := $eq.i32($i49, 0);
    goto corral_source_split_297;

  corral_source_split_297:
    assume {:verifier.code 0} true;
    $p51 := $p43;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_307;

  corral_source_split_307:
    assume {:verifier.code 0} true;
    $p52 := $p51;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto corral_source_split_309;

  corral_source_split_309:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p41);
    call {:si_unique_call 142} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i53);
    goto corral_source_split_310;

  corral_source_split_310:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p52);
    call {:si_unique_call 143} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i54);
    goto corral_source_split_311;

  corral_source_split_311:
    assume {:verifier.code 0} true;
    $i55 := $ult.i64($i54, $i53);
    goto corral_source_split_312;

  corral_source_split_312:
    assume {:verifier.code 0} true;
    assume {:branchcond $i55} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i55 == 1);
    goto corral_source_split_320;

  corral_source_split_320:
    assume {:verifier.code 0} true;
    $i86 := $trunc.i64.i32($i1);
    call {:si_unique_call 148} {:cexpr "__cil_tmp58"} boogie_si_record_i32($i86);
    goto corral_source_split_321;

  corral_source_split_321:
    assume {:verifier.code 0} true;
    call {:si_unique_call 149} vslice_dummy_var_26 := INFTL_deleteblock($p6, $i86);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i61 := 0;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto corral_source_split_326;

  corral_source_split_326:
    assume {:verifier.code 0} true;
    $r := $i61;
    return;

  $bb11:
    assume $i55 == 1;
    goto corral_source_split_314;

  corral_source_split_314:
    assume {:verifier.code 0} true;
    $i56 := $trunc.i64.i32($i1);
    call {:si_unique_call 144} {:cexpr "__cil_tmp37"} boogie_si_record_i32($i56);
    goto corral_source_split_315;

  corral_source_split_315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 145} $i57 := INFTL_findwriteunit($p6, $i56);
    call {:si_unique_call 146} {:cexpr "tmp___0"} boogie_si_record_i16($i57);
    goto corral_source_split_316;

  corral_source_split_316:
    assume {:verifier.code 0} true;
    $i58 := $zext.i16.i32($i57);
    call {:si_unique_call 147} {:cexpr "writeEUN"} boogie_si_record_i32($i58);
    goto corral_source_split_317;

  corral_source_split_317:
    assume {:verifier.code 0} true;
    $i59 := $eq.i32($i58, 65535);
    goto corral_source_split_318;

  corral_source_split_318:
    assume {:verifier.code 0} true;
    assume {:branchcond $i59} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i59 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    $p62 := $bitcast.ref.ref($p4);
    goto corral_source_split_328;

  corral_source_split_328:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_2 := $M.1;
    call {:si_unique_call 151} cmdloc_dummy_var_3 := $memset.i8(cmdloc_dummy_var_2, $p62, $sub.i8(0, 1), 16, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_3;
    goto corral_source_split_329;

  corral_source_split_329:
    assume {:verifier.code 0} true;
    $i63 := $p2i.ref.i64($p4);
    goto corral_source_split_330;

  corral_source_split_330:
    assume {:verifier.code 0} true;
    $i64 := $add.i64($i63, 7);
    call {:si_unique_call 152} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i64);
    goto corral_source_split_331;

  corral_source_split_331:
    assume {:verifier.code 0} true;
    $p65 := $i2p.i64.ref($i64);
    goto corral_source_split_332;

  corral_source_split_332:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p65, 85);
    goto corral_source_split_333;

  corral_source_split_333:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p4);
    goto corral_source_split_334;

  corral_source_split_334:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 6);
    call {:si_unique_call 153} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i67);
    goto corral_source_split_335;

  corral_source_split_335:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p4);
    goto corral_source_split_336;

  corral_source_split_336:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 7);
    call {:si_unique_call 154} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i69);
    goto corral_source_split_337;

  corral_source_split_337:
    assume {:verifier.code 0} true;
    $p70 := $i2p.i64.ref($i69);
    goto corral_source_split_338;

  corral_source_split_338:
    assume {:verifier.code 0} true;
    $i71 := $load.i8($M.1, $p70);
    goto corral_source_split_339;

  corral_source_split_339:
    assume {:verifier.code 0} true;
    $p72 := $i2p.i64.ref($i67);
    goto corral_source_split_340;

  corral_source_split_340:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p72, $i71);
    goto corral_source_split_341;

  corral_source_split_341:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p6);
    call {:si_unique_call 155} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i73);
    goto corral_source_split_342;

  corral_source_split_342:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 24);
    call {:si_unique_call 156} {:cexpr "__cil_tmp47"} boogie_si_record_i64($i74);
    goto corral_source_split_343;

  corral_source_split_343:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_344;

  corral_source_split_344:
    assume {:verifier.code 0} true;
    $p76 := $load.ref($M.1, $p75);
    goto corral_source_split_345;

  corral_source_split_345:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p6);
    call {:si_unique_call 157} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i77);
    goto corral_source_split_346;

  corral_source_split_346:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 356);
    call {:si_unique_call 158} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i78);
    goto corral_source_split_347;

  corral_source_split_347:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_348;

  corral_source_split_348:
    assume {:verifier.code 0} true;
    $i80 := $load.i32($M.1, $p79);
    call {:si_unique_call 159} {:cexpr "__cil_tmp51"} boogie_si_record_i32($i80);
    goto corral_source_split_349;

  corral_source_split_349:
    assume {:verifier.code 0} true;
    $i81 := $mul.i32($i80, $i58);
    call {:si_unique_call 160} {:cexpr "__cil_tmp52"} boogie_si_record_i32($i81);
    goto corral_source_split_350;

  corral_source_split_350:
    assume {:verifier.code 0} true;
    $i82 := $zext.i32.i64($i81);
    call {:si_unique_call 161} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i82);
    goto corral_source_split_351;

  corral_source_split_351:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, $i14);
    call {:si_unique_call 162} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i83);
    goto corral_source_split_352;

  corral_source_split_352:
    assume {:verifier.code 0} true;
    $p84 := $bitcast.ref.ref($p4);
    goto corral_source_split_353;

  corral_source_split_353:
    assume {:verifier.code 0} true;
    call {:si_unique_call 163} vslice_dummy_var_28 := inftl_write($p76, $i83, 512, $p3, $p2, $p84);
    goto corral_source_split_354;

  corral_source_split_354:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb13:
    assume $i59 == 1;
    goto corral_source_split_323;

  corral_source_split_323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 150} vslice_dummy_var_27 := printk.ref(.str.37);
    goto corral_source_split_324;

  corral_source_split_324:
    assume {:verifier.code 0} true;
    $i61 := 1;
    goto $bb15;

  $bb8:
    assume $i50 == 1;
    goto corral_source_split_305;

  corral_source_split_305:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($p43, $mul.ref(1, 1));
    goto corral_source_split_299;

  corral_source_split_299:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p44);
    call {:si_unique_call 141} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i45);
    goto corral_source_split_300;

  corral_source_split_300:
    assume {:verifier.code 0} true;
    $i46 := $ult.i64($i45, $i42);
    goto corral_source_split_301;

  corral_source_split_301:
    assume {:verifier.code 0} true;
    $p47 := $p44;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i46 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_303;

  corral_source_split_303:
    assume {:verifier.code 0} true;
    $p52 := $p47;
    goto $bb10;

  $bb6:
    assume $i46 == 1;
    assume {:verifier.code 0} true;
    $p43 := $p44;
    goto $bb6_dummy;

  $bb1:
    assume $i39 == 1;
    goto corral_source_split_288;

  corral_source_split_288:
    assume {:verifier.code 0} true;
    call {:si_unique_call 137} vslice_dummy_var_25 := __dynamic_pr_debug.ref.ref.ref.i64.ref($p5, .str.36, $p6, $i1, $p2);
    goto corral_source_split_289;

  corral_source_split_289:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb6_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_294;
}



const inftl_getgeo: ref;

axiom inftl_getgeo == $sub.ref(0, 121161);

procedure inftl_getgeo($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.4, $M.1;



implementation inftl_getgeo($p0: ref, $p1: ref) returns ($r: i32)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i8;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i16;
  var $p21: ref;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_356;

  corral_source_split_356:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p0);
    goto corral_source_split_357;

  corral_source_split_357:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    call {:si_unique_call 164} {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
    goto corral_source_split_358;

  corral_source_split_358:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 512);
    call {:si_unique_call 165} {:cexpr "__cil_tmp5"} boogie_si_record_i64($i4);
    goto corral_source_split_359;

  corral_source_split_359:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_360;

  corral_source_split_360:
    assume {:verifier.code 0} true;
    $i6 := $load.i8($M.1, $p5);
    goto corral_source_split_361;

  corral_source_split_361:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p1);
    goto corral_source_split_362;

  corral_source_split_362:
    assume {:verifier.code 0} true;
    $M.4 := $store.i8($M.4, $p7, $i6);
    goto corral_source_split_363;

  corral_source_split_363:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p1);
    call {:si_unique_call 166} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i8);
    goto corral_source_split_364;

  corral_source_split_364:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 1);
    call {:si_unique_call 167} {:cexpr "__cil_tmp7"} boogie_si_record_i64($i9);
    goto corral_source_split_365;

  corral_source_split_365:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p2);
    call {:si_unique_call 168} {:cexpr "__cil_tmp8"} boogie_si_record_i64($i10);
    goto corral_source_split_366;

  corral_source_split_366:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 513);
    call {:si_unique_call 169} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i11);
    goto corral_source_split_367;

  corral_source_split_367:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_368;

  corral_source_split_368:
    assume {:verifier.code 0} true;
    $i13 := $load.i8($M.1, $p12);
    goto corral_source_split_369;

  corral_source_split_369:
    assume {:verifier.code 0} true;
    $p14 := $i2p.i64.ref($i9);
    goto corral_source_split_370;

  corral_source_split_370:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p14, $i13);
    goto corral_source_split_371;

  corral_source_split_371:
    assume {:verifier.code 0} true;
    $i15 := $p2i.ref.i64($p1);
    call {:si_unique_call 170} {:cexpr "__cil_tmp10"} boogie_si_record_i64($i15);
    goto corral_source_split_372;

  corral_source_split_372:
    assume {:verifier.code 0} true;
    $i16 := $add.i64($i15, 2);
    call {:si_unique_call 171} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i16);
    goto corral_source_split_373;

  corral_source_split_373:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p2);
    call {:si_unique_call 172} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i17);
    goto corral_source_split_374;

  corral_source_split_374:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 514);
    call {:si_unique_call 173} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i18);
    goto corral_source_split_375;

  corral_source_split_375:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_376;

  corral_source_split_376:
    assume {:verifier.code 0} true;
    $i20 := $load.i16($M.1, $p19);
    goto corral_source_split_377;

  corral_source_split_377:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i16);
    goto corral_source_split_378;

  corral_source_split_378:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p21, $i20);
    goto corral_source_split_379;

  corral_source_split_379:
    assume {:verifier.code 0} true;
    $r := 0;
    return;
}



const inftl_add_mtd: ref;

axiom inftl_add_mtd == $sub.ref(0, 122193);

procedure inftl_add_mtd($p0: ref, $p1: ref);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, assertsPassed, $M.7, $M.8, $M.9, $M.10;



implementation inftl_add_mtd($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i1;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i8;
  var $i46: i64;
  var $i47: i64;
  var $i48: i32;
  var $i49: i64;
  var $i50: i1;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $p54: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i64;
  var $i59: i64;
  var $i60: i1;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i16;
  var $i87: i32;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i64;
  var $i96: i64;
  var $i97: i8;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $i104: i1;
  var $i105: i64;
  var $i106: i64;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i8;
  var $i111: i32;
  var $i112: i32;
  var $i113: i8;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i8;
  var $i119: i32;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $i123: i16;
  var $i124: i32;
  var $i125: i32;
  var $i126: i64;
  var $i127: i64;
  var $i128: i64;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i64;
  var $i133: i64;
  var $i134: i8;
  var $p135: ref;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $i139: i64;
  var $i140: i64;
  var $i141: i1;
  var $i142: i64;
  var $i143: i64;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i8;
  var $i148: i32;
  var $i149: i32;
  var $i150: i8;
  var $p151: ref;
  var $i152: i64;
  var $i153: i64;
  var $p154: ref;
  var $i155: i8;
  var $i156: i32;
  var $i157: i64;
  var $i158: i64;
  var $p159: ref;
  var $i160: i8;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i64;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i64;
  var $i170: i64;
  var $i171: i16;
  var $p172: ref;
  var $i173: i64;
  var $i174: i64;
  var $p175: ref;
  var $i176: i8;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $p180: ref;
  var $i181: i16;
  var $i182: i32;
  var $i183: i64;
  var $i184: i64;
  var $p185: ref;
  var $i186: i8;
  var $i187: i32;
  var $i188: i32;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $i192: i64;
  var $p193: ref;
  var $i194: i64;
  var $i195: i1;
  var $i196: i64;
  var $i197: i64;
  var $p198: ref;
  var $i199: i64;
  var $i201: i64;
  var $i202: i64;
  var $p203: ref;
  var $i204: i16;
  var $i205: i32;
  var $i206: i64;
  var $i207: i64;
  var $p208: ref;
  var $i209: i8;
  var $i210: i32;
  var $i211: i64;
  var $i212: i64;
  var $p213: ref;
  var $i214: i8;
  var $i215: i32;
  var $i216: i64;
  var $i217: i64;
  var $p218: ref;
  var $i219: i8;
  var $i220: i64;
  var $i221: i64;
  var $i222: i64;
  var $p223: ref;
  var $i224: i8;
  var $i225: i64;
  var $i226: i64;
  var $i227: i64;
  var $p228: ref;
  var $i229: i16;
  var $i230: i64;
  var $i231: i64;
  var $i232: i64;
  var $p234: ref;
  var $i235: i32;
  var $i236: i1;
  var $i237: i64;
  var $i238: i64;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $i242: i64;
  var $i243: i64;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var vslice_dummy_var_29: i32;
  var vslice_dummy_var_30: i32;
  var vslice_dummy_var_31: i32;
  var vslice_dummy_var_32: i32;
  var vslice_dummy_var_33: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 174} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_381;

  corral_source_split_381:
    assume {:verifier.code 0} true;
    $p3 := $bitcast.ref.ref($p1);
    goto corral_source_split_382;

  corral_source_split_382:
    assume {:verifier.code 0} true;
    $i4 := $load.i8($M.1, $p3);
    call {:si_unique_call 175} {:cexpr "__cil_tmp11"} boogie_si_record_i8($i4);
    goto corral_source_split_383;

  corral_source_split_383:
    assume {:verifier.code 0} true;
    $i5 := $zext.i8.i32($i4);
    call {:si_unique_call 176} {:cexpr "__cil_tmp12"} boogie_si_record_i32($i5);
    goto corral_source_split_384;

  corral_source_split_384:
    assume {:verifier.code 0} true;
    $i6 := $ne.i32($i5, 4);
    goto corral_source_split_385;

  corral_source_split_385:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i6 == 1);
    goto corral_source_split_389;

  corral_source_split_389:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p1);
    call {:si_unique_call 177} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i7);
    goto corral_source_split_390;

  corral_source_split_390:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 8);
    call {:si_unique_call 178} {:cexpr "__cil_tmp14"} boogie_si_record_i64($i8);
    goto corral_source_split_391;

  corral_source_split_391:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_392;

  corral_source_split_392:
    assume {:verifier.code 0} true;
    $i10 := $load.i64($M.1, $p9);
    call {:si_unique_call 179} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i10);
    goto corral_source_split_393;

  corral_source_split_393:
    assume {:verifier.code 0} true;
    $i11 := $ugt.i64($i10, 4294967295);
    goto corral_source_split_394;

  corral_source_split_394:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i12 := $p2i.ref.i64($p1);
    call {:si_unique_call 180} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i12);
    goto corral_source_split_398;

  corral_source_split_398:
    assume {:verifier.code 0} true;
    $i13 := $add.i64($i12, 56);
    call {:si_unique_call 181} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i13);
    goto corral_source_split_399;

  corral_source_split_399:
    assume {:verifier.code 0} true;
    $p14 := $i2p.i64.ref($i13);
    goto corral_source_split_400;

  corral_source_split_400:
    assume {:verifier.code 0} true;
    $p15 := $load.ref($M.1, $p14);
    goto corral_source_split_401;

  corral_source_split_401:
    assume {:verifier.code 0} true;
    call {:si_unique_call 182} $i16 := memcmp($p15, .str.69, 10);
    call {:si_unique_call 183} {:cexpr "tmp"} boogie_si_record_i32($i16);
    goto corral_source_split_402;

  corral_source_split_402:
    assume {:verifier.code 0} true;
    $i17 := $ne.i32($i16, 0);
    goto corral_source_split_403;

  corral_source_split_403:
    assume {:verifier.code 0} true;
    assume {:branchcond $i17} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i17 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 184} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i18);
    goto corral_source_split_407;

  corral_source_split_407:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p1);
    call {:si_unique_call 185} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i19);
    goto corral_source_split_408;

  corral_source_split_408:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 256);
    call {:si_unique_call 186} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i20);
    goto corral_source_split_409;

  corral_source_split_409:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_410;

  corral_source_split_410:
    assume {:verifier.code 0} true;
    $p22 := $load.ref($M.1, $p21);
    goto corral_source_split_411;

  corral_source_split_411:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p22);
    call {:si_unique_call 187} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i23);
    goto corral_source_split_412;

  corral_source_split_412:
    assume {:verifier.code 0} true;
    $i24 := $eq.i64($i23, $i18);
    goto corral_source_split_413;

  corral_source_split_413:
    assume {:verifier.code 0} true;
    assume {:branchcond $i24} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i24 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $p26 := $bitcast.ref.ref($p2);
    goto corral_source_split_418;

  corral_source_split_418:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p26, .str);
    goto corral_source_split_419;

  corral_source_split_419:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p2);
    goto corral_source_split_420;

  corral_source_split_420:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 8);
    call {:si_unique_call 189} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i28);
    goto corral_source_split_421;

  corral_source_split_421:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_422;

  corral_source_split_422:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p29, .str.71);
    goto corral_source_split_423;

  corral_source_split_423:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p2);
    goto corral_source_split_424;

  corral_source_split_424:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 16);
    call {:si_unique_call 190} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i31);
    goto corral_source_split_425;

  corral_source_split_425:
    assume {:verifier.code 0} true;
    $p32 := $i2p.i64.ref($i31);
    goto corral_source_split_426;

  corral_source_split_426:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p32, .str.31);
    goto corral_source_split_427;

  corral_source_split_427:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p2);
    goto corral_source_split_428;

  corral_source_split_428:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 24);
    call {:si_unique_call 191} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
    goto corral_source_split_429;

  corral_source_split_429:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_430;

  corral_source_split_430:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p35, .str.72);
    goto corral_source_split_431;

  corral_source_split_431:
    assume {:verifier.code 0} true;
    $i36 := $p2i.ref.i64($p2);
    goto corral_source_split_432;

  corral_source_split_432:
    assume {:verifier.code 0} true;
    $i37 := $add.i64($i36, 32);
    call {:si_unique_call 192} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i37);
    goto corral_source_split_433;

  corral_source_split_433:
    assume {:verifier.code 0} true;
    $p38 := $i2p.i64.ref($i37);
    goto corral_source_split_434;

  corral_source_split_434:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p38, 81);
    goto corral_source_split_435;

  corral_source_split_435:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p2);
    goto corral_source_split_436;

  corral_source_split_436:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 35);
    call {:si_unique_call 193} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i40);
    goto corral_source_split_437;

  corral_source_split_437:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_438;

  corral_source_split_438:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p41, 0);
    goto corral_source_split_439;

  corral_source_split_439:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p2);
    goto corral_source_split_440;

  corral_source_split_440:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 35);
    call {:si_unique_call 194} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i43);
    goto corral_source_split_441;

  corral_source_split_441:
    assume {:verifier.code 0} true;
    $p44 := $i2p.i64.ref($i43);
    goto corral_source_split_442;

  corral_source_split_442:
    assume {:verifier.code 0} true;
    $i45 := $load.i8($M.1, $p44);
    call {:si_unique_call 195} {:cexpr "__cil_tmp34"} boogie_si_record_i8($i45);
    goto corral_source_split_443;

  corral_source_split_443:
    assume {:verifier.code 0} true;
    $i46 := $zext.i8.i64($i45);
    call {:si_unique_call 196} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i46);
    goto corral_source_split_444;

  corral_source_split_444:
    assume {:verifier.code 0} true;
    $i47 := $and.i64($i46, 1);
    call {:si_unique_call 197} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i47);
    goto corral_source_split_445;

  corral_source_split_445:
    assume {:verifier.code 0} true;
    call {:si_unique_call 198} $i48 := __builtinx_expect.i64.i64($i47, 0);
    goto corral_source_split_446;

  corral_source_split_446:
    assume {:verifier.code 0} true;
    $i49 := $sext.i32.i64($i48);
    call {:si_unique_call 199} {:cexpr "tmp___0"} boogie_si_record_i64($i49);
    goto corral_source_split_447;

  corral_source_split_447:
    assume {:verifier.code 0} true;
    $i50 := $ne.i64($i49, 0);
    goto corral_source_split_448;

  corral_source_split_448:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    call {:si_unique_call 203} $p56 := kzalloc(2712, 208);
    goto SeqInstr_1, SeqInstr_2;

  SeqInstr_2:
    assume assertsPassed;
    goto SeqInstr_3;

  SeqInstr_3:
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $p57 := $bitcast.ref.ref($p56);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $i58 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 204} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i58);
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $i59 := $p2i.ref.i64($p57);
    call {:si_unique_call 205} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i59);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    $i60 := $eq.i64($i59, $i58);
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    assume {:branchcond $i60} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i60 == 1);
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p57);
    call {:si_unique_call 206} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i61);
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 24);
    call {:si_unique_call 207} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i62);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p63, $p1);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i64 := $p2i.ref.i64($p57);
    call {:si_unique_call 208} {:cexpr "__cil_tmp47"} boogie_si_record_i64($i64);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    $i65 := $add.i64($i64, 200);
    call {:si_unique_call 209} {:cexpr "__cil_tmp48"} boogie_si_record_i64($i65);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    $p66 := $i2p.i64.ref($i65);
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p66, $sub.i32(0, 1));
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $p67 := $bitcast.ref.ref($p57);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p67, $p0);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 210} $i68 := INFTL_mount($p57);
    goto SeqInstr_4, SeqInstr_5;

  SeqInstr_5:
    assume assertsPassed;
    goto SeqInstr_6;

  SeqInstr_6:
    call {:si_unique_call 211} {:cexpr "tmp___2"} boogie_si_record_i32($i68);
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $i69 := $slt.i32($i68, 0);
    goto corral_source_split_476;

  corral_source_split_476:
    assume {:verifier.code 0} true;
    assume {:branchcond $i69} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i69 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p57);
    call {:si_unique_call 214} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i72);
    goto corral_source_split_483;

  corral_source_split_483:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 514);
    call {:si_unique_call 215} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i73);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_485;

  corral_source_split_485:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p74, 1024);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i75 := $p2i.ref.i64($p57);
    call {:si_unique_call 216} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i75);
    goto corral_source_split_487;

  corral_source_split_487:
    assume {:verifier.code 0} true;
    $i76 := $add.i64($i75, 512);
    call {:si_unique_call 217} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i76);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    $p77 := $i2p.i64.ref($i76);
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p77, 16);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i78 := $p2i.ref.i64($p57);
    call {:si_unique_call 218} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i78);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $i79 := $add.i64($i78, 512);
    call {:si_unique_call 219} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i79);
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    $p80 := $i2p.i64.ref($i79);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i81 := $load.i8($M.1, $p80);
    call {:si_unique_call 220} {:cexpr "__cil_tmp56"} boogie_si_record_i8($i81);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i82 := $zext.i8.i32($i81);
    call {:si_unique_call 221} {:cexpr "__cil_tmp57"} boogie_si_record_i32($i82);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    $i83 := $p2i.ref.i64($p57);
    call {:si_unique_call 222} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i83);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    $i84 := $add.i64($i83, 514);
    call {:si_unique_call 223} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i84);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $p85 := $i2p.i64.ref($i84);
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $i86 := $load.i16($M.1, $p85);
    call {:si_unique_call 224} {:cexpr "__cil_tmp60"} boogie_si_record_i16($i86);
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    $i87 := $zext.i16.i32($i86);
    call {:si_unique_call 225} {:cexpr "__cil_tmp61"} boogie_si_record_i32($i87);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    $i88 := $mul.i32($i87, $i82);
    call {:si_unique_call 226} {:cexpr "__cil_tmp62"} boogie_si_record_i32($i88);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i89 := $sext.i32.i64($i88);
    call {:si_unique_call 227} {:cexpr "temp"} boogie_si_record_i64($i89);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i90 := $p2i.ref.i64($p57);
    call {:si_unique_call 228} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i90);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    $i91 := $add.i64($i90, 513);
    call {:si_unique_call 229} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i91);
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    $i92 := $p2i.ref.i64($p57);
    call {:si_unique_call 230} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i92);
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $i93 := $add.i64($i92, 208);
    call {:si_unique_call 231} {:cexpr "__cil_tmp67"} boogie_si_record_i64($i93);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $p94 := $i2p.i64.ref($i93);
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    $i95 := $load.i64($M.1, $p94);
    call {:si_unique_call 232} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i95);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    $i96 := $udiv.i64($i95, $i89);
    call {:si_unique_call 233} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i96);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    $i97 := $trunc.i64.i8($i96);
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    $p98 := $i2p.i64.ref($i91);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p98, $i97);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p57);
    call {:si_unique_call 234} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i99);
    goto corral_source_split_513;

  corral_source_split_513:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 208);
    call {:si_unique_call 235} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i100);
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_515;

  corral_source_split_515:
    assume {:verifier.code 0} true;
    $i102 := $load.i64($M.1, $p101);
    call {:si_unique_call 236} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i102);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    $i103 := $urem.i64($i102, $i89);
    call {:si_unique_call 237} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i103);
    goto corral_source_split_517;

  corral_source_split_517:
    assume {:verifier.code 0} true;
    $i104 := $ne.i64($i103, 0);
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i104 == 1);
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $i173 := $p2i.ref.i64($p57);
    call {:si_unique_call 288} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i173);
    goto corral_source_split_596;

  corral_source_split_596:
    assume {:verifier.code 0} true;
    $i174 := $add.i64($i173, 513);
    call {:si_unique_call 289} {:cexpr "__cil_tmp127"} boogie_si_record_i64($i174);
    goto corral_source_split_597;

  corral_source_split_597:
    assume {:verifier.code 0} true;
    $p175 := $i2p.i64.ref($i174);
    goto corral_source_split_598;

  corral_source_split_598:
    assume {:verifier.code 0} true;
    $i176 := $load.i8($M.1, $p175);
    call {:si_unique_call 290} {:cexpr "__cil_tmp128"} boogie_si_record_i8($i176);
    goto corral_source_split_599;

  corral_source_split_599:
    assume {:verifier.code 0} true;
    $i177 := $zext.i8.i32($i176);
    call {:si_unique_call 291} {:cexpr "__cil_tmp129"} boogie_si_record_i32($i177);
    goto corral_source_split_600;

  corral_source_split_600:
    assume {:verifier.code 0} true;
    $i178 := $p2i.ref.i64($p57);
    call {:si_unique_call 292} {:cexpr "__cil_tmp130"} boogie_si_record_i64($i178);
    goto corral_source_split_601;

  corral_source_split_601:
    assume {:verifier.code 0} true;
    $i179 := $add.i64($i178, 514);
    call {:si_unique_call 293} {:cexpr "__cil_tmp131"} boogie_si_record_i64($i179);
    goto corral_source_split_602;

  corral_source_split_602:
    assume {:verifier.code 0} true;
    $p180 := $i2p.i64.ref($i179);
    goto corral_source_split_603;

  corral_source_split_603:
    assume {:verifier.code 0} true;
    $i181 := $load.i16($M.1, $p180);
    call {:si_unique_call 294} {:cexpr "__cil_tmp132"} boogie_si_record_i16($i181);
    goto corral_source_split_604;

  corral_source_split_604:
    assume {:verifier.code 0} true;
    $i182 := $zext.i16.i32($i181);
    call {:si_unique_call 295} {:cexpr "__cil_tmp133"} boogie_si_record_i32($i182);
    goto corral_source_split_605;

  corral_source_split_605:
    assume {:verifier.code 0} true;
    $i183 := $p2i.ref.i64($p57);
    call {:si_unique_call 296} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i183);
    goto corral_source_split_606;

  corral_source_split_606:
    assume {:verifier.code 0} true;
    $i184 := $add.i64($i183, 512);
    call {:si_unique_call 297} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i184);
    goto corral_source_split_607;

  corral_source_split_607:
    assume {:verifier.code 0} true;
    $p185 := $i2p.i64.ref($i184);
    goto corral_source_split_608;

  corral_source_split_608:
    assume {:verifier.code 0} true;
    $i186 := $load.i8($M.1, $p185);
    call {:si_unique_call 298} {:cexpr "__cil_tmp136"} boogie_si_record_i8($i186);
    goto corral_source_split_609;

  corral_source_split_609:
    assume {:verifier.code 0} true;
    $i187 := $zext.i8.i32($i186);
    call {:si_unique_call 299} {:cexpr "__cil_tmp137"} boogie_si_record_i32($i187);
    goto corral_source_split_610;

  corral_source_split_610:
    assume {:verifier.code 0} true;
    $i188 := $mul.i32($i187, $i182);
    call {:si_unique_call 300} {:cexpr "__cil_tmp138"} boogie_si_record_i32($i188);
    goto corral_source_split_611;

  corral_source_split_611:
    assume {:verifier.code 0} true;
    $i189 := $mul.i32($i188, $i177);
    call {:si_unique_call 301} {:cexpr "__cil_tmp139"} boogie_si_record_i32($i189);
    goto corral_source_split_612;

  corral_source_split_612:
    assume {:verifier.code 0} true;
    $i190 := $sext.i32.i64($i189);
    call {:si_unique_call 302} {:cexpr "__cil_tmp140"} boogie_si_record_i64($i190);
    goto corral_source_split_613;

  corral_source_split_613:
    assume {:verifier.code 0} true;
    $i191 := $p2i.ref.i64($p57);
    call {:si_unique_call 303} {:cexpr "__cil_tmp142"} boogie_si_record_i64($i191);
    goto corral_source_split_614;

  corral_source_split_614:
    assume {:verifier.code 0} true;
    $i192 := $add.i64($i191, 208);
    call {:si_unique_call 304} {:cexpr "__cil_tmp143"} boogie_si_record_i64($i192);
    goto corral_source_split_615;

  corral_source_split_615:
    assume {:verifier.code 0} true;
    $p193 := $i2p.i64.ref($i192);
    goto corral_source_split_616;

  corral_source_split_616:
    assume {:verifier.code 0} true;
    $i194 := $load.i64($M.1, $p193);
    call {:si_unique_call 305} {:cexpr "__cil_tmp144"} boogie_si_record_i64($i194);
    goto corral_source_split_617;

  corral_source_split_617:
    assume {:verifier.code 0} true;
    $i195 := $ne.i64($i194, $i190);
    goto corral_source_split_618;

  corral_source_split_618:
    assume {:verifier.code 0} true;
    assume {:branchcond $i195} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i195 == 1);
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $p234 := $bitcast.ref.ref($p57);
    goto corral_source_split_660;

  corral_source_split_660:
    assume {:verifier.code 0} true;
    call {:si_unique_call 337} $i235 := add_mtd_blktrans_dev($p234);
    call {:si_unique_call 338} {:cexpr "tmp___3"} boogie_si_record_i32($i235);
    goto corral_source_split_661;

  corral_source_split_661:
    assume {:verifier.code 0} true;
    $i236 := $ne.i32($i235, 0);
    goto corral_source_split_662;

  corral_source_split_662:
    assume {:verifier.code 0} true;
    assume {:branchcond $i236} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i236 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    return;

  $bb32:
    assume $i236 == 1;
    goto corral_source_split_664;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    $i237 := $p2i.ref.i64($p57);
    call {:si_unique_call 339} {:cexpr "__cil_tmp176"} boogie_si_record_i64($i237);
    goto corral_source_split_665;

  corral_source_split_665:
    assume {:verifier.code 0} true;
    $i238 := $add.i64($i237, 544);
    call {:si_unique_call 340} {:cexpr "__cil_tmp177"} boogie_si_record_i64($i238);
    goto corral_source_split_666;

  corral_source_split_666:
    assume {:verifier.code 0} true;
    $p239 := $i2p.i64.ref($i238);
    goto corral_source_split_667;

  corral_source_split_667:
    assume {:verifier.code 0} true;
    $p240 := $load.ref($M.1, $p239);
    goto corral_source_split_668;

  corral_source_split_668:
    assume {:verifier.code 0} true;
    $p241 := $bitcast.ref.ref($p240);
    goto corral_source_split_669;

  corral_source_split_669:
    assume {:verifier.code 0} true;
    call {:si_unique_call 341} kfree($p241);
    goto corral_source_split_670;

  corral_source_split_670:
    assume {:verifier.code 0} true;
    $i242 := $p2i.ref.i64($p57);
    call {:si_unique_call 342} {:cexpr "__cil_tmp180"} boogie_si_record_i64($i242);
    goto corral_source_split_671;

  corral_source_split_671:
    assume {:verifier.code 0} true;
    $i243 := $add.i64($i242, 552);
    call {:si_unique_call 343} {:cexpr "__cil_tmp181"} boogie_si_record_i64($i243);
    goto corral_source_split_672;

  corral_source_split_672:
    assume {:verifier.code 0} true;
    $p244 := $i2p.i64.ref($i243);
    goto corral_source_split_673;

  corral_source_split_673:
    assume {:verifier.code 0} true;
    $p245 := $load.ref($M.1, $p244);
    goto corral_source_split_674;

  corral_source_split_674:
    assume {:verifier.code 0} true;
    $p246 := $bitcast.ref.ref($p245);
    goto corral_source_split_675;

  corral_source_split_675:
    assume {:verifier.code 0} true;
    call {:si_unique_call 344} kfree($p246);
    goto corral_source_split_676;

  corral_source_split_676:
    assume {:verifier.code 0} true;
    $p247 := $bitcast.ref.ref($p57);
    goto corral_source_split_677;

  corral_source_split_677:
    assume {:verifier.code 0} true;
    call {:si_unique_call 345} kfree($p247);
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb29:
    assume $i195 == 1;
    goto corral_source_split_620;

  corral_source_split_620:
    assume {:verifier.code 0} true;
    $i196 := $p2i.ref.i64($p57);
    call {:si_unique_call 306} {:cexpr "__cil_tmp146"} boogie_si_record_i64($i196);
    goto corral_source_split_621;

  corral_source_split_621:
    assume {:verifier.code 0} true;
    $i197 := $add.i64($i196, 208);
    call {:si_unique_call 307} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i197);
    goto corral_source_split_622;

  corral_source_split_622:
    assume {:verifier.code 0} true;
    $p198 := $i2p.i64.ref($i197);
    goto corral_source_split_623;

  corral_source_split_623:
    assume {:verifier.code 0} true;
    $i199 := $load.i64($M.1, $p198);
    call {:si_unique_call 308} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i199);
    goto corral_source_split_624;

  corral_source_split_624:
    assume {:verifier.code 0} true;
    call {:si_unique_call 309} vslice_dummy_var_32 := printk.ref.i64(.str.74, $i199);
    goto corral_source_split_625;

  corral_source_split_625:
    assume {:verifier.code 0} true;
    $i201 := $p2i.ref.i64($p57);
    call {:si_unique_call 310} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i201);
    goto corral_source_split_626;

  corral_source_split_626:
    assume {:verifier.code 0} true;
    $i202 := $add.i64($i201, 514);
    call {:si_unique_call 311} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i202);
    goto corral_source_split_627;

  corral_source_split_627:
    assume {:verifier.code 0} true;
    $p203 := $i2p.i64.ref($i202);
    goto corral_source_split_628;

  corral_source_split_628:
    assume {:verifier.code 0} true;
    $i204 := $load.i16($M.1, $p203);
    call {:si_unique_call 312} {:cexpr "__cil_tmp151"} boogie_si_record_i16($i204);
    goto corral_source_split_629;

  corral_source_split_629:
    assume {:verifier.code 0} true;
    $i205 := $zext.i16.i32($i204);
    call {:si_unique_call 313} {:cexpr "__cil_tmp152"} boogie_si_record_i32($i205);
    goto corral_source_split_630;

  corral_source_split_630:
    assume {:verifier.code 0} true;
    $i206 := $p2i.ref.i64($p57);
    call {:si_unique_call 314} {:cexpr "__cil_tmp153"} boogie_si_record_i64($i206);
    goto corral_source_split_631;

  corral_source_split_631:
    assume {:verifier.code 0} true;
    $i207 := $add.i64($i206, 512);
    call {:si_unique_call 315} {:cexpr "__cil_tmp154"} boogie_si_record_i64($i207);
    goto corral_source_split_632;

  corral_source_split_632:
    assume {:verifier.code 0} true;
    $p208 := $i2p.i64.ref($i207);
    goto corral_source_split_633;

  corral_source_split_633:
    assume {:verifier.code 0} true;
    $i209 := $load.i8($M.1, $p208);
    call {:si_unique_call 316} {:cexpr "__cil_tmp155"} boogie_si_record_i8($i209);
    goto corral_source_split_634;

  corral_source_split_634:
    assume {:verifier.code 0} true;
    $i210 := $zext.i8.i32($i209);
    call {:si_unique_call 317} {:cexpr "__cil_tmp156"} boogie_si_record_i32($i210);
    goto corral_source_split_635;

  corral_source_split_635:
    assume {:verifier.code 0} true;
    $i211 := $p2i.ref.i64($p57);
    call {:si_unique_call 318} {:cexpr "__cil_tmp157"} boogie_si_record_i64($i211);
    goto corral_source_split_636;

  corral_source_split_636:
    assume {:verifier.code 0} true;
    $i212 := $add.i64($i211, 513);
    call {:si_unique_call 319} {:cexpr "__cil_tmp158"} boogie_si_record_i64($i212);
    goto corral_source_split_637;

  corral_source_split_637:
    assume {:verifier.code 0} true;
    $p213 := $i2p.i64.ref($i212);
    goto corral_source_split_638;

  corral_source_split_638:
    assume {:verifier.code 0} true;
    $i214 := $load.i8($M.1, $p213);
    call {:si_unique_call 320} {:cexpr "__cil_tmp159"} boogie_si_record_i8($i214);
    goto corral_source_split_639;

  corral_source_split_639:
    assume {:verifier.code 0} true;
    $i215 := $zext.i8.i32($i214);
    call {:si_unique_call 321} {:cexpr "__cil_tmp160"} boogie_si_record_i32($i215);
    goto corral_source_split_640;

  corral_source_split_640:
    assume {:verifier.code 0} true;
    $i216 := $p2i.ref.i64($p57);
    call {:si_unique_call 322} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i216);
    goto corral_source_split_641;

  corral_source_split_641:
    assume {:verifier.code 0} true;
    $i217 := $add.i64($i216, 513);
    call {:si_unique_call 323} {:cexpr "__cil_tmp162"} boogie_si_record_i64($i217);
    goto corral_source_split_642;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    $p218 := $i2p.i64.ref($i217);
    goto corral_source_split_643;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    $i219 := $load.i8($M.1, $p218);
    call {:si_unique_call 324} {:cexpr "__cil_tmp163"} boogie_si_record_i8($i219);
    goto corral_source_split_644;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    $i220 := $zext.i8.i64($i219);
    call {:si_unique_call 325} {:cexpr "__cil_tmp164"} boogie_si_record_i64($i220);
    goto corral_source_split_645;

  corral_source_split_645:
    assume {:verifier.code 0} true;
    $i221 := $p2i.ref.i64($p57);
    call {:si_unique_call 326} {:cexpr "__cil_tmp165"} boogie_si_record_i64($i221);
    goto corral_source_split_646;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    $i222 := $add.i64($i221, 512);
    call {:si_unique_call 327} {:cexpr "__cil_tmp166"} boogie_si_record_i64($i222);
    goto corral_source_split_647;

  corral_source_split_647:
    assume {:verifier.code 0} true;
    $p223 := $i2p.i64.ref($i222);
    goto corral_source_split_648;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    $i224 := $load.i8($M.1, $p223);
    call {:si_unique_call 328} {:cexpr "__cil_tmp167"} boogie_si_record_i8($i224);
    goto corral_source_split_649;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    $i225 := $zext.i8.i64($i224);
    call {:si_unique_call 329} {:cexpr "__cil_tmp168"} boogie_si_record_i64($i225);
    goto corral_source_split_650;

  corral_source_split_650:
    assume {:verifier.code 0} true;
    $i226 := $p2i.ref.i64($p57);
    call {:si_unique_call 330} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i226);
    goto corral_source_split_651;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    $i227 := $add.i64($i226, 514);
    call {:si_unique_call 331} {:cexpr "__cil_tmp170"} boogie_si_record_i64($i227);
    goto corral_source_split_652;

  corral_source_split_652:
    assume {:verifier.code 0} true;
    $p228 := $i2p.i64.ref($i227);
    goto corral_source_split_653;

  corral_source_split_653:
    assume {:verifier.code 0} true;
    $i229 := $load.i16($M.1, $p228);
    call {:si_unique_call 332} {:cexpr "__cil_tmp171"} boogie_si_record_i16($i229);
    goto corral_source_split_654;

  corral_source_split_654:
    assume {:verifier.code 0} true;
    $i230 := $zext.i16.i64($i229);
    call {:si_unique_call 333} {:cexpr "__cil_tmp172"} boogie_si_record_i64($i230);
    goto corral_source_split_655;

  corral_source_split_655:
    assume {:verifier.code 0} true;
    $i231 := $mul.i64($i230, $i225);
    call {:si_unique_call 334} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i231);
    goto corral_source_split_656;

  corral_source_split_656:
    assume {:verifier.code 0} true;
    $i232 := $mul.i64($i231, $i220);
    call {:si_unique_call 335} {:cexpr "__cil_tmp174"} boogie_si_record_i64($i232);
    goto corral_source_split_657;

  corral_source_split_657:
    assume {:verifier.code 0} true;
    call {:si_unique_call 336} vslice_dummy_var_33 := printk.ref.i32.i32.i32.i64(.str.75, $i205, $i210, $i215, $i232);
    goto corral_source_split_658;

  corral_source_split_658:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb23:
    assume $i104 == 1;
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    $i105 := $p2i.ref.i64($p57);
    call {:si_unique_call 238} {:cexpr "__cil_tmp75"} boogie_si_record_i64($i105);
    goto corral_source_split_521;

  corral_source_split_521:
    assume {:verifier.code 0} true;
    $i106 := $add.i64($i105, 513);
    call {:si_unique_call 239} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i106);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p57);
    call {:si_unique_call 240} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i107);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 513);
    call {:si_unique_call 241} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i108);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i110 := $load.i8($M.1, $p109);
    call {:si_unique_call 242} {:cexpr "__cil_tmp79"} boogie_si_record_i8($i110);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i111 := $zext.i8.i32($i110);
    call {:si_unique_call 243} {:cexpr "__cil_tmp80"} boogie_si_record_i32($i111);
    goto corral_source_split_527;

  corral_source_split_527:
    assume {:verifier.code 0} true;
    $i112 := $add.i32($i111, 1);
    call {:si_unique_call 244} {:cexpr "__cil_tmp81"} boogie_si_record_i32($i112);
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    $i113 := $trunc.i32.i8($i112);
    goto corral_source_split_529;

  corral_source_split_529:
    assume {:verifier.code 0} true;
    $p114 := $i2p.i64.ref($i106);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p114, $i113);
    goto corral_source_split_531;

  corral_source_split_531:
    assume {:verifier.code 0} true;
    $i115 := $p2i.ref.i64($p57);
    call {:si_unique_call 245} {:cexpr "__cil_tmp82"} boogie_si_record_i64($i115);
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    $i116 := $add.i64($i115, 513);
    call {:si_unique_call 246} {:cexpr "__cil_tmp83"} boogie_si_record_i64($i116);
    goto corral_source_split_533;

  corral_source_split_533:
    assume {:verifier.code 0} true;
    $p117 := $i2p.i64.ref($i116);
    goto corral_source_split_534;

  corral_source_split_534:
    assume {:verifier.code 0} true;
    $i118 := $load.i8($M.1, $p117);
    call {:si_unique_call 247} {:cexpr "__cil_tmp84"} boogie_si_record_i8($i118);
    goto corral_source_split_535;

  corral_source_split_535:
    assume {:verifier.code 0} true;
    $i119 := $zext.i8.i32($i118);
    call {:si_unique_call 248} {:cexpr "__cil_tmp85"} boogie_si_record_i32($i119);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i120 := $p2i.ref.i64($p57);
    call {:si_unique_call 249} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i120);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    $i121 := $add.i64($i120, 514);
    call {:si_unique_call 250} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i121);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $p122 := $i2p.i64.ref($i121);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i123 := $load.i16($M.1, $p122);
    call {:si_unique_call 251} {:cexpr "__cil_tmp88"} boogie_si_record_i16($i123);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i124 := $zext.i16.i32($i123);
    call {:si_unique_call 252} {:cexpr "__cil_tmp89"} boogie_si_record_i32($i124);
    goto corral_source_split_541;

  corral_source_split_541:
    assume {:verifier.code 0} true;
    $i125 := $mul.i32($i124, $i119);
    call {:si_unique_call 253} {:cexpr "__cil_tmp90"} boogie_si_record_i32($i125);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    $i126 := $sext.i32.i64($i125);
    call {:si_unique_call 254} {:cexpr "temp"} boogie_si_record_i64($i126);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    $i127 := $p2i.ref.i64($p57);
    call {:si_unique_call 255} {:cexpr "__cil_tmp91"} boogie_si_record_i64($i127);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i128 := $add.i64($i127, 512);
    call {:si_unique_call 256} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i128);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p57);
    call {:si_unique_call 257} {:cexpr "__cil_tmp94"} boogie_si_record_i64($i129);
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 208);
    call {:si_unique_call 258} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i130);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i132 := $load.i64($M.1, $p131);
    call {:si_unique_call 259} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i132);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    $i133 := $udiv.i64($i132, $i126);
    call {:si_unique_call 260} {:cexpr "__cil_tmp97"} boogie_si_record_i64($i133);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i134 := $trunc.i64.i8($i133);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $p135 := $i2p.i64.ref($i128);
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p135, $i134);
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    $i136 := $p2i.ref.i64($p57);
    call {:si_unique_call 261} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i136);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i137 := $add.i64($i136, 208);
    call {:si_unique_call 262} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i137);
    goto corral_source_split_555;

  corral_source_split_555:
    assume {:verifier.code 0} true;
    $p138 := $i2p.i64.ref($i137);
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    $i139 := $load.i64($M.1, $p138);
    call {:si_unique_call 263} {:cexpr "__cil_tmp101"} boogie_si_record_i64($i139);
    goto corral_source_split_557;

  corral_source_split_557:
    assume {:verifier.code 0} true;
    $i140 := $urem.i64($i139, $i126);
    call {:si_unique_call 264} {:cexpr "__cil_tmp102"} boogie_si_record_i64($i140);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i141 := $ne.i64($i140, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i141 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb25:
    assume $i141 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    $i142 := $p2i.ref.i64($p57);
    call {:si_unique_call 265} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i142);
    goto corral_source_split_562;

  corral_source_split_562:
    assume {:verifier.code 0} true;
    $i143 := $add.i64($i142, 512);
    call {:si_unique_call 266} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i143);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    $i144 := $p2i.ref.i64($p57);
    call {:si_unique_call 267} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i144);
    goto corral_source_split_564;

  corral_source_split_564:
    assume {:verifier.code 0} true;
    $i145 := $add.i64($i144, 512);
    call {:si_unique_call 268} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i145);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $p146 := $i2p.i64.ref($i145);
    goto corral_source_split_566;

  corral_source_split_566:
    assume {:verifier.code 0} true;
    $i147 := $load.i8($M.1, $p146);
    call {:si_unique_call 269} {:cexpr "__cil_tmp107"} boogie_si_record_i8($i147);
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $i148 := $zext.i8.i32($i147);
    call {:si_unique_call 270} {:cexpr "__cil_tmp108"} boogie_si_record_i32($i148);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $i149 := $add.i32($i148, 1);
    call {:si_unique_call 271} {:cexpr "__cil_tmp109"} boogie_si_record_i32($i149);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    $i150 := $trunc.i32.i8($i149);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $p151 := $i2p.i64.ref($i143);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p151, $i150);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i152 := $p2i.ref.i64($p57);
    call {:si_unique_call 272} {:cexpr "__cil_tmp110"} boogie_si_record_i64($i152);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i153 := $add.i64($i152, 513);
    call {:si_unique_call 273} {:cexpr "__cil_tmp111"} boogie_si_record_i64($i153);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $p154 := $i2p.i64.ref($i153);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    $i155 := $load.i8($M.1, $p154);
    call {:si_unique_call 274} {:cexpr "__cil_tmp112"} boogie_si_record_i8($i155);
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $i156 := $zext.i8.i32($i155);
    call {:si_unique_call 275} {:cexpr "__cil_tmp113"} boogie_si_record_i32($i156);
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $i157 := $p2i.ref.i64($p57);
    call {:si_unique_call 276} {:cexpr "__cil_tmp114"} boogie_si_record_i64($i157);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $i158 := $add.i64($i157, 512);
    call {:si_unique_call 277} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i158);
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    $p159 := $i2p.i64.ref($i158);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    $i160 := $load.i8($M.1, $p159);
    call {:si_unique_call 278} {:cexpr "__cil_tmp116"} boogie_si_record_i8($i160);
    goto corral_source_split_581;

  corral_source_split_581:
    assume {:verifier.code 0} true;
    $i161 := $zext.i8.i32($i160);
    call {:si_unique_call 279} {:cexpr "__cil_tmp117"} boogie_si_record_i32($i161);
    goto corral_source_split_582;

  corral_source_split_582:
    assume {:verifier.code 0} true;
    $i162 := $mul.i32($i161, $i156);
    call {:si_unique_call 280} {:cexpr "__cil_tmp118"} boogie_si_record_i32($i162);
    goto corral_source_split_583;

  corral_source_split_583:
    assume {:verifier.code 0} true;
    $i163 := $sext.i32.i64($i162);
    call {:si_unique_call 281} {:cexpr "temp"} boogie_si_record_i64($i163);
    goto corral_source_split_584;

  corral_source_split_584:
    assume {:verifier.code 0} true;
    $i164 := $p2i.ref.i64($p57);
    call {:si_unique_call 282} {:cexpr "__cil_tmp119"} boogie_si_record_i64($i164);
    goto corral_source_split_585;

  corral_source_split_585:
    assume {:verifier.code 0} true;
    $i165 := $add.i64($i164, 514);
    call {:si_unique_call 283} {:cexpr "__cil_tmp120"} boogie_si_record_i64($i165);
    goto corral_source_split_586;

  corral_source_split_586:
    assume {:verifier.code 0} true;
    $i166 := $p2i.ref.i64($p57);
    call {:si_unique_call 284} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i166);
    goto corral_source_split_587;

  corral_source_split_587:
    assume {:verifier.code 0} true;
    $i167 := $add.i64($i166, 208);
    call {:si_unique_call 285} {:cexpr "__cil_tmp123"} boogie_si_record_i64($i167);
    goto corral_source_split_588;

  corral_source_split_588:
    assume {:verifier.code 0} true;
    $p168 := $i2p.i64.ref($i167);
    goto corral_source_split_589;

  corral_source_split_589:
    assume {:verifier.code 0} true;
    $i169 := $load.i64($M.1, $p168);
    call {:si_unique_call 286} {:cexpr "__cil_tmp124"} boogie_si_record_i64($i169);
    goto corral_source_split_590;

  corral_source_split_590:
    assume {:verifier.code 0} true;
    $i170 := $udiv.i64($i169, $i163);
    call {:si_unique_call 287} {:cexpr "__cil_tmp125"} boogie_si_record_i64($i170);
    goto corral_source_split_591;

  corral_source_split_591:
    assume {:verifier.code 0} true;
    $i171 := $trunc.i64.i16($i170);
    goto corral_source_split_592;

  corral_source_split_592:
    assume {:verifier.code 0} true;
    $p172 := $i2p.i64.ref($i165);
    goto corral_source_split_593;

  corral_source_split_593:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p172, $i171);
    goto corral_source_split_594;

  corral_source_split_594:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb20:
    assume $i69 == 1;
    goto corral_source_split_478;

  corral_source_split_478:
    assume {:verifier.code 0} true;
    call {:si_unique_call 212} vslice_dummy_var_31 := printk.ref(.str.73);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $p71 := $bitcast.ref.ref($p57);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    call {:si_unique_call 213} kfree($p71);
    goto corral_source_split_481;

  corral_source_split_481:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_4:
    assume !assertsPassed;
    return;

  $bb17:
    assume $i60 == 1;
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    goto $bb3;

  SeqInstr_1:
    assume !assertsPassed;
    return;

  $bb14:
    assume $i50 == 1;
    goto corral_source_split_450;

  corral_source_split_450:
    assume {:verifier.code 0} true;
    $i51 := $p2i.ref.i64($p1);
    call {:si_unique_call 200} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i51);
    goto corral_source_split_451;

  corral_source_split_451:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 56);
    call {:si_unique_call 201} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i52);
    goto corral_source_split_452;

  corral_source_split_452:
    assume {:verifier.code 0} true;
    $p53 := $i2p.i64.ref($i52);
    goto corral_source_split_453;

  corral_source_split_453:
    assume {:verifier.code 0} true;
    $p54 := $load.ref($M.1, $p53);
    goto corral_source_split_454;

  corral_source_split_454:
    assume {:verifier.code 0} true;
    call {:si_unique_call 202} vslice_dummy_var_30 := __dynamic_pr_debug.ref.ref.ref($p2, .str.72, $p54);
    goto corral_source_split_455;

  corral_source_split_455:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb11:
    assume $i24 == 1;
    goto corral_source_split_415;

  corral_source_split_415:
    assume {:verifier.code 0} true;
    call {:si_unique_call 188} vslice_dummy_var_29 := printk.ref(.str.70);
    goto corral_source_split_416;

  corral_source_split_416:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb8:
    assume $i17 == 1;
    goto corral_source_split_405;

  corral_source_split_405:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb4:
    assume $i11 == 1;
    goto corral_source_split_396;

  corral_source_split_396:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb1:
    assume $i6 == 1;
    goto corral_source_split_387;

  corral_source_split_387:
    assume {:verifier.code 0} true;
    goto $bb3;
}



const inftl_remove_dev: ref;

axiom inftl_remove_dev == $sub.ref(0, 123225);

procedure inftl_remove_dev($p0: ref);
  free requires assertsPassed;
  modifies $M.3, $M.1, $CurrAddr;



implementation inftl_remove_dev($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i64;
  var $i24: i64;
  var $i25: i32;
  var $i26: i64;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var vslice_dummy_var_34: i32;
  var vslice_dummy_var_35: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 346} $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    $p2 := $bitcast.ref.ref($p0);
    goto corral_source_split_681;

  corral_source_split_681:
    assume {:verifier.code 0} true;
    $p3 := $bitcast.ref.ref($p1);
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p3, .str);
    goto corral_source_split_683;

  corral_source_split_683:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p1);
    goto corral_source_split_684;

  corral_source_split_684:
    assume {:verifier.code 0} true;
    $i5 := $add.i64($i4, 8);
    call {:si_unique_call 347} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i5);
    goto corral_source_split_685;

  corral_source_split_685:
    assume {:verifier.code 0} true;
    $p6 := $i2p.i64.ref($i5);
    goto corral_source_split_686;

  corral_source_split_686:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p6, .str.76);
    goto corral_source_split_687;

  corral_source_split_687:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p1);
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 16);
    call {:si_unique_call 348} {:cexpr "__cil_tmp7"} boogie_si_record_i64($i8);
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_690;

  corral_source_split_690:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p9, .str.31);
    goto corral_source_split_691;

  corral_source_split_691:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p1);
    goto corral_source_split_692;

  corral_source_split_692:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 24);
    call {:si_unique_call 349} {:cexpr "__cil_tmp8"} boogie_si_record_i64($i11);
    goto corral_source_split_693;

  corral_source_split_693:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_694;

  corral_source_split_694:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p12, .str.77);
    goto corral_source_split_695;

  corral_source_split_695:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p1);
    goto corral_source_split_696;

  corral_source_split_696:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 32);
    call {:si_unique_call 350} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i14);
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_698;

  corral_source_split_698:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p15, 149);
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p1);
    goto corral_source_split_700;

  corral_source_split_700:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 35);
    call {:si_unique_call 351} {:cexpr "__cil_tmp10"} boogie_si_record_i64($i17);
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p18, 0);
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p1);
    goto corral_source_split_704;

  corral_source_split_704:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 35);
    call {:si_unique_call 352} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i20);
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    $i22 := $load.i8($M.1, $p21);
    call {:si_unique_call 353} {:cexpr "__cil_tmp12"} boogie_si_record_i8($i22);
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i64($i22);
    call {:si_unique_call 354} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i23);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    $i24 := $and.i64($i23, 1);
    call {:si_unique_call 355} {:cexpr "__cil_tmp14"} boogie_si_record_i64($i24);
    goto corral_source_split_709;

  corral_source_split_709:
    assume {:verifier.code 0} true;
    call {:si_unique_call 356} $i25 := __builtinx_expect.i64.i64($i24, 0);
    goto corral_source_split_710;

  corral_source_split_710:
    assume {:verifier.code 0} true;
    $i26 := $sext.i32.i64($i25);
    call {:si_unique_call 357} {:cexpr "tmp"} boogie_si_record_i64($i26);
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    $i27 := $ne.i64($i26, 0);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i27 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    call {:si_unique_call 362} vslice_dummy_var_35 := del_mtd_blktrans_dev($p0);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p2);
    call {:si_unique_call 363} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i34);
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 544);
    call {:si_unique_call 364} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i35);
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_724;

  corral_source_split_724:
    assume {:verifier.code 0} true;
    $p37 := $load.ref($M.1, $p36);
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    $p38 := $bitcast.ref.ref($p37);
    goto corral_source_split_726;

  corral_source_split_726:
    assume {:verifier.code 0} true;
    call {:si_unique_call 365} kfree($p38);
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p2);
    call {:si_unique_call 366} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i39);
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 552);
    call {:si_unique_call 367} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i40);
    goto corral_source_split_729;

  corral_source_split_729:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    $p42 := $load.ref($M.1, $p41);
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    $p43 := $bitcast.ref.ref($p42);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    call {:si_unique_call 368} kfree($p43);
    goto corral_source_split_733;

  corral_source_split_733:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i27 == 1;
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p0);
    call {:si_unique_call 358} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i28);
    goto corral_source_split_715;

  corral_source_split_715:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 200);
    call {:si_unique_call 359} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i29);
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    $i31 := $load.i32($M.1, $p30);
    call {:si_unique_call 360} {:cexpr "__cil_tmp17"} boogie_si_record_i32($i31);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    call {:si_unique_call 361} vslice_dummy_var_34 := __dynamic_pr_debug.ref.ref.i32($p1, .str.77, $i31);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    goto $bb3;
}



const __builtinx_expect: ref;

axiom __builtinx_expect == $sub.ref(0, 124257);

procedure __builtinx_expect.i64.i64(p.0: i64, p.1: i64) returns ($r: i32);



const __dynamic_pr_debug: ref;

axiom __dynamic_pr_debug == $sub.ref(0, 125289);

procedure __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 1} true;
    call {:si_unique_call 369} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 370} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_736;

  corral_source_split_736:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.ref.i64.ref($p0: ref, $p1: ref, p.2: ref, p.3: i64, p.4: ref) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.ref.i64.ref($p0: ref, $p1: ref, p.2: ref, p.3: i64, p.4: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb1:
    assume {:verifier.code 1} true;
    goto corral_source_split_738;

  corral_source_split_738:
    assume {:verifier.code 1} true;
    call {:si_unique_call 371} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 372} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_739;

  corral_source_split_739:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb2:
    assume {:verifier.code 1} true;
    goto corral_source_split_741;

  corral_source_split_741:
    assume {:verifier.code 1} true;
    call {:si_unique_call 373} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 374} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_742;

  corral_source_split_742:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.ref.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.ref.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_744;

  corral_source_split_744:
    assume {:verifier.code 1} true;
    call {:si_unique_call 375} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 376} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_745;

  corral_source_split_745:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb4:
    assume {:verifier.code 1} true;
    goto corral_source_split_747;

  corral_source_split_747:
    assume {:verifier.code 1} true;
    call {:si_unique_call 377} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 378} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_748;

  corral_source_split_748:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb5:
    assume {:verifier.code 1} true;
    goto corral_source_split_750;

  corral_source_split_750:
    assume {:verifier.code 1} true;
    call {:si_unique_call 379} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 380} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_751;

  corral_source_split_751:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32, p.4: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.ref.i32.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32, p.4: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb6:
    assume {:verifier.code 1} true;
    goto corral_source_split_753;

  corral_source_split_753:
    assume {:verifier.code 1} true;
    call {:si_unique_call 381} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 382} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_754;

  corral_source_split_754:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb7:
    assume {:verifier.code 1} true;
    goto corral_source_split_756;

  corral_source_split_756:
    assume {:verifier.code 1} true;
    call {:si_unique_call 383} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 384} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_757;

  corral_source_split_757:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: ref, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb8:
    assume {:verifier.code 1} true;
    goto corral_source_split_759;

  corral_source_split_759:
    assume {:verifier.code 1} true;
    call {:si_unique_call 385} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 386} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_760;

  corral_source_split_760:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.ref($p0: ref, $p1: ref, p.2: ref) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.ref($p0: ref, $p1: ref, p.2: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb9:
    assume {:verifier.code 1} true;
    goto corral_source_split_762;

  corral_source_split_762:
    assume {:verifier.code 1} true;
    call {:si_unique_call 387} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 388} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_763;

  corral_source_split_763:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



procedure __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32, p.10: i32, p.11: i32, p.12: i32) returns ($r: i32);
  free requires assertsPassed;



implementation __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32, p.10: i32, p.11: i32, p.12: i32) returns ($r: i32)
{
  var $i2: i32;

  $bb10:
    assume {:verifier.code 1} true;
    goto corral_source_split_765;

  corral_source_split_765:
    assume {:verifier.code 1} true;
    call {:si_unique_call 389} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 390} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_766;

  corral_source_split_766:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const del_mtd_blktrans_dev: ref;

axiom del_mtd_blktrans_dev == $sub.ref(0, 126321);

procedure del_mtd_blktrans_dev($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation del_mtd_blktrans_dev($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_768;

  corral_source_split_768:
    assume {:verifier.code 1} true;
    call {:si_unique_call 391} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 392} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_769;

  corral_source_split_769:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const kfree: ref;

axiom kfree == $sub.ref(0, 127353);

procedure kfree($p0: ref);
  free requires assertsPassed;



implementation kfree($p0: ref)
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_771;

  corral_source_split_771:
    assume {:verifier.code 0} true;
    call {:si_unique_call 393} free_($p0);
    goto corral_source_split_772;

  corral_source_split_772:
    assume {:verifier.code 0} true;
    return;
}



const free_: ref;

axiom free_ == $sub.ref(0, 128385);

procedure free_($p0: ref);
  free requires assertsPassed;



implementation free_($p0: ref)
{

  anon0:
    call {:si_unique_call 394} $free($p0);
    return;
}



const memcmp: ref;

axiom memcmp == $sub.ref(0, 129417);

procedure memcmp($p0: ref, $p1: ref, $i2: i64) returns ($r: i32);



const printk: ref;

axiom printk == $sub.ref(0, 130449);

procedure printk.ref.i64($p0: ref, p.1: i64) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i64($p0: ref, p.1: i64) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_774;

  corral_source_split_774:
    assume {:verifier.code 1} true;
    call {:si_unique_call 395} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 396} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_775;

  corral_source_split_775:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i64.i32.i32($p0: ref, p.1: i64, p.2: i32, p.3: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i64.i32.i32($p0: ref, p.1: i64, p.2: i32, p.3: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb1:
    assume {:verifier.code 1} true;
    goto corral_source_split_777;

  corral_source_split_777:
    assume {:verifier.code 1} true;
    call {:si_unique_call 397} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 398} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_778;

  corral_source_split_778:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb2:
    assume {:verifier.code 1} true;
    goto corral_source_split_780;

  corral_source_split_780:
    assume {:verifier.code 1} true;
    call {:si_unique_call 399} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 400} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_781;

  corral_source_split_781:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_783;

  corral_source_split_783:
    assume {:verifier.code 1} true;
    call {:si_unique_call 401} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 402} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_784;

  corral_source_split_784:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb4:
    assume {:verifier.code 1} true;
    goto corral_source_split_786;

  corral_source_split_786:
    assume {:verifier.code 1} true;
    call {:si_unique_call 403} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 404} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_787;

  corral_source_split_787:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb5:
    assume {:verifier.code 1} true;
    goto corral_source_split_789;

  corral_source_split_789:
    assume {:verifier.code 1} true;
    call {:si_unique_call 405} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 406} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_790;

  corral_source_split_790:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i32) returns ($r: i32)
{
  var $i1: i32;

  $bb6:
    assume {:verifier.code 1} true;
    goto corral_source_split_792;

  corral_source_split_792:
    assume {:verifier.code 1} true;
    call {:si_unique_call 407} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 408} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_793;

  corral_source_split_793:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



procedure printk.ref.i32.i32.i32.i64($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i64) returns ($r: i32);
  free requires assertsPassed;



implementation printk.ref.i32.i32.i32.i64($p0: ref, p.1: i32, p.2: i32, p.3: i32, p.4: i64) returns ($r: i32)
{
  var $i1: i32;

  $bb7:
    assume {:verifier.code 1} true;
    goto corral_source_split_795;

  corral_source_split_795:
    assume {:verifier.code 1} true;
    call {:si_unique_call 409} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 410} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_796;

  corral_source_split_796:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const kzalloc: ref;

axiom kzalloc == $sub.ref(0, 131481);

procedure kzalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies assertsPassed;



implementation kzalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 411} {:cexpr "kzalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 412} {:cexpr "kzalloc:arg:flags"} boogie_si_record_i32($i1);
    goto corral_source_split_798;

  corral_source_split_798:
    assume {:verifier.code 0} true;
    call {:si_unique_call 413} ldv_check_alloc_flags($i1);
    goto SeqInstr_7, SeqInstr_8;

  SeqInstr_8:
    assume assertsPassed;
    goto SeqInstr_9;

  SeqInstr_9:
    goto corral_source_split_799;

  corral_source_split_799:
    assume {:verifier.code 1} true;
    call {:si_unique_call 414} $p2 := __VERIFIER_nondet_pointer();
    call {:si_unique_call 415} {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p2);
    goto corral_source_split_800;

  corral_source_split_800:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;

  SeqInstr_7:
    assume !assertsPassed;
    return;
}



const INFTL_mount: ref;

axiom INFTL_mount == $sub.ref(0, 132513);

procedure INFTL_mount($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, assertsPassed, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_mount($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i8;
  var $i32: i64;
  var $i33: i64;
  var $i34: i32;
  var $i35: i64;
  var $i36: i1;
  var $i38: i32;
  var $i39: i1;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i32;
  var $i56: i1;
  var $i47: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i32;
  var $i61: i64;
  var $p62: ref;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i32;
  var $i70: i64;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i8;
  var $i92: i64;
  var $i93: i64;
  var $i94: i32;
  var $i95: i64;
  var $i96: i1;
  var $i98: i64;
  var $i99: i64;
  var $p100: ref;
  var $i101: i16;
  var $i102: i32;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i16;
  var $i107: i32;
  var $i108: i1;
  var $i111: i64;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i16;
  var $i118: i32;
  var $i119: i1;
  var $i121: i32;
  var $i122: i32;
  var $i123: i32;
  var $i124: i32;
  var $i125: i1;
  var $i126: i64;
  var $i127: i64;
  var $i128: i64;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i16;
  var $i133: i32;
  var $i134: i1;
  var $i135: i32;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i145: i64;
  var $p146: ref;
  var $i147: i32;
  var $i148: i1;
  var $i149: i32;
  var $i150: i32;
  var $i151: i64;
  var $i152: i64;
  var $p153: ref;
  var $i154: i32;
  var $i155: i32;
  var $i156: i32;
  var $i157: i64;
  var $p158: ref;
  var $i159: i32;
  var $i160: i1;
  var $i161: i32;
  var $i162: i32;
  var $p163: ref;
  var $i164: i16;
  var $i165: i32;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i16;
  var $i170: i32;
  var $i171: i64;
  var $i172: i64;
  var $p173: ref;
  var $i174: i16;
  var $i175: i32;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $i179: i16;
  var $i180: i32;
  var $i181: i32;
  var $i182: i64;
  var $p183: ref;
  var $i184: i64;
  var $i185: i64;
  var $p186: ref;
  var $i187: i8;
  var $i188: i64;
  var $i189: i64;
  var $p190: ref;
  var $i191: i32;
  var $i192: i1;
  var $i193: i64;
  var $i194: i64;
  var $p195: ref;
  var $i196: i16;
  var $i197: i32;
  var $i198: i32;
  var $i199: i32;
  var $i200: i64;
  var $i201: i64;
  var $i202: i64;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $i206: i16;
  var $i207: i32;
  var $i208: i1;
  var $i209: i32;
  var $i210: i32;
  var $i211: i32;
  var $i212: i32;
  var $i213: i1;
  var $i214: i1;
  var $i215: i64;
  var $i216: i64;
  var $i217: i64;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $i221: i16;
  var $i222: i1;
  var $i223: i32;
  var $i224: i32;
  var $i225: i32;
  var $i226: i32;
  var $i228: i1;
  var $i229: i32;
  var $i230: i32;
  var $i231: i1;
  var $i232: i32;
  var $i233: i32;
  var $i234: i64;
  var $i235: i64;
  var $i236: i64;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $i240: i1;
  var $i241: i32;
  var $i242: i32;
  var $i243: i64;
  var $i244: i64;
  var $i245: i64;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $i249: i64;
  var $i250: i64;
  var $p251: ref;
  var $i252: i32;
  var $i253: i1;
  var $i254: i32;
  var $i255: i32;
  var $i256: i32;
  var $i260: i64;
  var $i261: i64;
  var $p262: ref;
  var $i263: i32;
  var $i264: i1;
  var $i265: i1;
  var $i266: i32;
  var $i267: i32;
  var $i268: i32;
  var $i257: i32;
  var $i258: i32;
  var $i259: i32;
  var $i269: i1;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $i275: i1;
  var $i276: i32;
  var $i274: i32;
  var $i277: i64;
  var $i278: i64;
  var $i279: i64;
  var $p280: ref;
  var $p281: ref;
  var $p282: ref;
  var $i283: i1;
  var $i284: i64;
  var $i285: i64;
  var $i286: i64;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $i290: i16;
  var $i291: i1;
  var $i292: i32;
  var $i293: i64;
  var $i294: i64;
  var $p295: ref;
  var $i296: i16;
  var $i297: i32;
  var $i298: i1;
  var $i299: i32;
  var $i300: i32;
  var $i302: i32;
  var $i303: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i304: i1;
  var $i305: i64;
  var $i306: i64;
  var $i307: i64;
  var $p308: ref;
  var $p309: ref;
  var $p310: ref;
  var $i311: i16;
  var $i120: i32;
  var $i312: i32;
  var $i313: i16;
  var $i314: i32;
  var $i315: i1;
  var $i110: i32;
  var $i316: i32;
  var $i109: i32;
  var $p317: ref;
  var $i318: i64;
  var $i319: i64;
  var $p320: ref;
  var $i321: i64;
  var $i322: i64;
  var $p323: ref;
  var $i324: i64;
  var $i325: i64;
  var $p326: ref;
  var $i327: i64;
  var $i328: i64;
  var $p329: ref;
  var $i330: i64;
  var $i331: i64;
  var $p332: ref;
  var $i333: i64;
  var $i334: i64;
  var $p335: ref;
  var $i336: i8;
  var $i337: i64;
  var $i338: i64;
  var $i339: i32;
  var $i340: i64;
  var $i341: i1;
  var $i343: i64;
  var $i344: i64;
  var $p345: ref;
  var $i346: i16;
  var $i347: i32;
  var $i348: i1;
  var $i350: i64;
  var $i351: i64;
  var $i352: i64;
  var $p353: ref;
  var $p354: ref;
  var $p355: ref;
  var $i356: i16;
  var $i357: i32;
  var $i358: i1;
  var $i360: i64;
  var $p361: ref;
  var $i362: i8;
  var $i363: i64;
  var $i364: i64;
  var $p365: ref;
  var $i366: i16;
  var $i367: i32;
  var $i368: i1;
  var $i375: i64;
  var $i376: i64;
  var $i377: i64;
  var $p378: ref;
  var $p379: ref;
  var $p380: ref;
  var $i381: i16;
  var $i382: i32;
  var $i383: i1;
  var $i384: i32;
  var $i387: i64;
  var $i388: i64;
  var $p389: ref;
  var $i390: i16;
  var $i391: i32;
  var $i392: i64;
  var $i393: i64;
  var $i394: i64;
  var $p395: ref;
  var $p396: ref;
  var $p397: ref;
  var $i398: i16;
  var $i399: i32;
  var $i400: i1;
  var $i401: i64;
  var $i402: i64;
  var $i403: i64;
  var $p404: ref;
  var $p405: ref;
  var $p406: ref;
  var $i407: i16;
  var $i408: i32;
  var $i410: i64;
  var $i411: i64;
  var $i412: i64;
  var $p413: ref;
  var $p414: ref;
  var $p415: ref;
  var $i416: i32;
  var $i417: i64;
  var $p418: ref;
  var $i419: i8;
  var $i420: i32;
  var $i421: i1;
  var $i422: i32;
  var $i423: i32;
  var $i424: i32;
  var $i425: i64;
  var $i426: i64;
  var $i427: i64;
  var $p428: ref;
  var $p429: ref;
  var $p430: ref;
  var $i431: i16;
  var $i432: i64;
  var $i433: i64;
  var $i434: i64;
  var $p435: ref;
  var $p436: ref;
  var $p437: ref;
  var $i438: i32;
  var $i439: i32;
  var $i440: i8;
  var $i441: i64;
  var $i442: i64;
  var $i443: i64;
  var $p444: ref;
  var $p445: ref;
  var $p446: ref;
  var $i447: i16;
  var $i448: i32;
  var $i449: i32;
  var $i450: i16;
  var $i451: i32;
  var $i452: i1;
  var $i371: i8;
  var $i372: i32;
  var $i373: i32;
  var $i374: i32;
  var $i453: i32;
  var $i369: i32;
  var $i370: i32;
  var $i385: i32;
  var $i386: i32;
  var $i454: i64;
  var $i455: i64;
  var $p456: ref;
  var $i457: i32;
  var $i458: i1;
  var $i359: i32;
  var $i459: i32;
  var $i460: i16;
  var $i461: i32;
  var $i462: i1;
  var $i349: i32;
  var $i463: i64;
  var $i464: i64;
  var $p465: ref;
  var $i466: i64;
  var $i467: i64;
  var $p468: ref;
  var $p469: ref;
  var $i470: i64;
  var $i471: i64;
  var $p472: ref;
  var $i473: i64;
  var $i474: i64;
  var $p475: ref;
  var $i476: i64;
  var $i477: i64;
  var $p478: ref;
  var $i479: i64;
  var $i480: i64;
  var $p481: ref;
  var $i482: i64;
  var $i483: i64;
  var $p484: ref;
  var $i485: i64;
  var $i486: i64;
  var $p487: ref;
  var $i488: i8;
  var $i489: i64;
  var $i490: i64;
  var $i491: i32;
  var $i492: i64;
  var $i493: i1;
  var $i495: i64;
  var $i496: i64;
  var $p497: ref;
  var $i498: i16;
  var $i499: i32;
  var $i500: i64;
  var $i501: i64;
  var $p502: ref;
  var $i503: i16;
  var $i504: i32;
  var $i505: i1;
  var $i507: i64;
  var $i508: i64;
  var $i509: i64;
  var $p510: ref;
  var $p511: ref;
  var $p512: ref;
  var $i513: i16;
  var $i514: i32;
  var $i515: i1;
  var $i517: i32;
  var $i518: i1;
  var $i519: i64;
  var $i520: i64;
  var $i521: i64;
  var $p522: ref;
  var $p523: ref;
  var $p524: ref;
  var $i525: i64;
  var $i526: i64;
  var $i527: i64;
  var $p528: ref;
  var $p529: ref;
  var $p530: ref;
  var $i531: i64;
  var $i532: i64;
  var $i533: i64;
  var $p534: ref;
  var $p535: ref;
  var $p536: ref;
  var $i537: i16;
  var $i538: i32;
  var $i539: i1;
  var $i540: i64;
  var $i541: i64;
  var $i542: i64;
  var $i543: i64;
  var $p544: ref;
  var $i545: i16;
  var $i546: i32;
  var $i547: i32;
  var $i548: i16;
  var $p549: ref;
  var $i550: i64;
  var $i551: i64;
  var $p552: ref;
  var $i553: i16;
  var $i554: i32;
  var $i555: i1;
  var $i556: i64;
  var $i557: i64;
  var $i558: i16;
  var $p559: ref;
  var $i560: i32;
  var $i561: i16;
  var $i562: i32;
  var $i563: i1;
  var $i506: i32;
  var $i41: i32;
  var vslice_dummy_var_36: i32;
  var vslice_dummy_var_37: i32;
  var vslice_dummy_var_38: i32;
  var vslice_dummy_var_39: i32;
  var vslice_dummy_var_40: i32;
  var vslice_dummy_var_41: i32;
  var vslice_dummy_var_42: i32;
  var vslice_dummy_var_43: i32;
  var vslice_dummy_var_44: i32;
  var vslice_dummy_var_45: i32;
  var vslice_dummy_var_46: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 416} $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 417} $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 418} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 419} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 420} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 421} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 422} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_802;

  corral_source_split_802:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p0);
    call {:si_unique_call 423} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i8);
    goto corral_source_split_803;

  corral_source_split_803:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 24);
    call {:si_unique_call 424} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i9);
    goto corral_source_split_804;

  corral_source_split_804:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_805;

  corral_source_split_805:
    assume {:verifier.code 0} true;
    $p11 := $load.ref($M.1, $p10);
    goto corral_source_split_806;

  corral_source_split_806:
    assume {:verifier.code 0} true;
    $p12 := $bitcast.ref.ref($p4);
    goto corral_source_split_807;

  corral_source_split_807:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p12, .str);
    goto corral_source_split_808;

  corral_source_split_808:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p4);
    goto corral_source_split_809;

  corral_source_split_809:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 8);
    call {:si_unique_call 425} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i14);
    goto corral_source_split_810;

  corral_source_split_810:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_811;

  corral_source_split_811:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p15, .str.18);
    goto corral_source_split_812;

  corral_source_split_812:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p4);
    goto corral_source_split_813;

  corral_source_split_813:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 16);
    call {:si_unique_call 426} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i17);
    goto corral_source_split_814;

  corral_source_split_814:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_815;

  corral_source_split_815:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p18, .str.2);
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p4);
    goto corral_source_split_817;

  corral_source_split_817:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 24);
    call {:si_unique_call 427} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i20);
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_819;

  corral_source_split_819:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p21, .str.19);
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p4);
    goto corral_source_split_821;

  corral_source_split_821:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 32);
    call {:si_unique_call 428} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i23);
    goto corral_source_split_822;

  corral_source_split_822:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_823;

  corral_source_split_823:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p24, 564);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p4);
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 35);
    call {:si_unique_call 429} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i26);
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p27, 0);
    goto corral_source_split_828;

  corral_source_split_828:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p4);
    goto corral_source_split_829;

  corral_source_split_829:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 35);
    call {:si_unique_call 430} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i29);
    goto corral_source_split_830;

  corral_source_split_830:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_831;

  corral_source_split_831:
    assume {:verifier.code 0} true;
    $i31 := $load.i8($M.1, $p30);
    call {:si_unique_call 431} {:cexpr "__cil_tmp41"} boogie_si_record_i8($i31);
    goto corral_source_split_832;

  corral_source_split_832:
    assume {:verifier.code 0} true;
    $i32 := $zext.i8.i64($i31);
    call {:si_unique_call 432} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i32);
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    $i33 := $and.i64($i32, 1);
    call {:si_unique_call 433} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i33);
    goto corral_source_split_834;

  corral_source_split_834:
    assume {:verifier.code 0} true;
    call {:si_unique_call 434} $i34 := __builtinx_expect.i64.i64($i33, 0);
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    $i35 := $sext.i32.i64($i34);
    call {:si_unique_call 435} {:cexpr "tmp"} boogie_si_record_i64($i35);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, 0);
    goto corral_source_split_837;

  corral_source_split_837:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    call {:si_unique_call 437} $i38 := find_boot_record($p0);
    goto SeqInstr_10, SeqInstr_11;

  SeqInstr_11:
    assume assertsPassed;
    goto SeqInstr_12;

  SeqInstr_12:
    call {:si_unique_call 438} {:cexpr "tmp___0"} boogie_si_record_i32($i38);
    goto corral_source_split_842;

  corral_source_split_842:
    assume {:verifier.code 0} true;
    $i39 := $slt.i32($i38, 0);
    goto corral_source_split_843;

  corral_source_split_843:
    assume {:verifier.code 0} true;
    assume {:branchcond $i39} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p0);
    call {:si_unique_call 440} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i42);
    goto corral_source_split_850;

  corral_source_split_850:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 560);
    call {:si_unique_call 441} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i43);
    goto corral_source_split_851;

  corral_source_split_851:
    assume {:verifier.code 0} true;
    $p44 := $i2p.i64.ref($i43);
    goto corral_source_split_852;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    $i45 := $load.i32($M.1, $p44);
    call {:si_unique_call 442} {:cexpr "__cil_tmp51"} boogie_si_record_i32($i45);
    goto corral_source_split_853;

  corral_source_split_853:
    assume {:verifier.code 0} true;
    $i46 := $ult.i32(0, $i45);
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume !($i46 == 1);
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p0);
    call {:si_unique_call 448} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i57);
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 560);
    call {:si_unique_call 449} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i58);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_875;

  corral_source_split_875:
    assume {:verifier.code 0} true;
    $i60 := $load.i32($M.1, $p59);
    call {:si_unique_call 450} {:cexpr "__cil_tmp55"} boogie_si_record_i32($i60);
    goto corral_source_split_876;

  corral_source_split_876:
    assume {:verifier.code 0} true;
    $i61 := $zext.i32.i64($i60);
    call {:si_unique_call 451} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i61);
    goto corral_source_split_877;

  corral_source_split_877:
    assume {:verifier.code 0} true;
    call {:si_unique_call 452} $p62 := kcalloc($i61, 1, 208);
    goto SeqInstr_13, SeqInstr_14;

  SeqInstr_14:
    assume assertsPassed;
    goto SeqInstr_15;

  SeqInstr_15:
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    $i63 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 453} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i63);
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    $i64 := $p2i.ref.i64($p62);
    call {:si_unique_call 454} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i64);
    goto corral_source_split_880;

  corral_source_split_880:
    assume {:verifier.code 0} true;
    $i65 := $eq.i64($i64, $i63);
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    assume {:branchcond $i65} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i65 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $p72 := $bitcast.ref.ref($p5);
    goto corral_source_split_891;

  corral_source_split_891:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p72, .str);
    goto corral_source_split_892;

  corral_source_split_892:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p5);
    goto corral_source_split_893;

  corral_source_split_893:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 8);
    call {:si_unique_call 460} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i74);
    goto corral_source_split_894;

  corral_source_split_894:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_895;

  corral_source_split_895:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p75, .str.18);
    goto corral_source_split_896;

  corral_source_split_896:
    assume {:verifier.code 0} true;
    $i76 := $p2i.ref.i64($p5);
    goto corral_source_split_897;

  corral_source_split_897:
    assume {:verifier.code 0} true;
    $i77 := $add.i64($i76, 16);
    call {:si_unique_call 461} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i77);
    goto corral_source_split_898;

  corral_source_split_898:
    assume {:verifier.code 0} true;
    $p78 := $i2p.i64.ref($i77);
    goto corral_source_split_899;

  corral_source_split_899:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p78, .str.2);
    goto corral_source_split_900;

  corral_source_split_900:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p5);
    goto corral_source_split_901;

  corral_source_split_901:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 24);
    call {:si_unique_call 462} {:cexpr "__cil_tmp67"} boogie_si_record_i64($i80);
    goto corral_source_split_902;

  corral_source_split_902:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_903;

  corral_source_split_903:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p81, .str.22);
    goto corral_source_split_904;

  corral_source_split_904:
    assume {:verifier.code 0} true;
    $i82 := $p2i.ref.i64($p5);
    goto corral_source_split_905;

  corral_source_split_905:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, 32);
    call {:si_unique_call 463} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i83);
    goto corral_source_split_906;

  corral_source_split_906:
    assume {:verifier.code 0} true;
    $p84 := $i2p.i64.ref($i83);
    goto corral_source_split_907;

  corral_source_split_907:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p84, 594);
    goto corral_source_split_908;

  corral_source_split_908:
    assume {:verifier.code 0} true;
    $i85 := $p2i.ref.i64($p5);
    goto corral_source_split_909;

  corral_source_split_909:
    assume {:verifier.code 0} true;
    $i86 := $add.i64($i85, 35);
    call {:si_unique_call 464} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i86);
    goto corral_source_split_910;

  corral_source_split_910:
    assume {:verifier.code 0} true;
    $p87 := $i2p.i64.ref($i86);
    goto corral_source_split_911;

  corral_source_split_911:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p87, 0);
    goto corral_source_split_912;

  corral_source_split_912:
    assume {:verifier.code 0} true;
    $i88 := $p2i.ref.i64($p5);
    goto corral_source_split_913;

  corral_source_split_913:
    assume {:verifier.code 0} true;
    $i89 := $add.i64($i88, 35);
    call {:si_unique_call 465} {:cexpr "__cil_tmp70"} boogie_si_record_i64($i89);
    goto corral_source_split_914;

  corral_source_split_914:
    assume {:verifier.code 0} true;
    $p90 := $i2p.i64.ref($i89);
    goto corral_source_split_915;

  corral_source_split_915:
    assume {:verifier.code 0} true;
    $i91 := $load.i8($M.1, $p90);
    call {:si_unique_call 466} {:cexpr "__cil_tmp71"} boogie_si_record_i8($i91);
    goto corral_source_split_916;

  corral_source_split_916:
    assume {:verifier.code 0} true;
    $i92 := $zext.i8.i64($i91);
    call {:si_unique_call 467} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i92);
    goto corral_source_split_917;

  corral_source_split_917:
    assume {:verifier.code 0} true;
    $i93 := $and.i64($i92, 1);
    call {:si_unique_call 468} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i93);
    goto corral_source_split_918;

  corral_source_split_918:
    assume {:verifier.code 0} true;
    call {:si_unique_call 469} $i94 := __builtinx_expect.i64.i64($i93, 0);
    goto corral_source_split_919;

  corral_source_split_919:
    assume {:verifier.code 0} true;
    $i95 := $sext.i32.i64($i94);
    call {:si_unique_call 470} {:cexpr "tmp___2"} boogie_si_record_i64($i95);
    goto corral_source_split_920;

  corral_source_split_920:
    assume {:verifier.code 0} true;
    $i96 := $ne.i64($i95, 0);
    goto corral_source_split_921;

  corral_source_split_921:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i96 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i98 := $p2i.ref.i64($p0);
    call {:si_unique_call 472} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i98);
    goto corral_source_split_926;

  corral_source_split_926:
    assume {:verifier.code 0} true;
    $i99 := $add.i64($i98, 518);
    call {:si_unique_call 473} {:cexpr "__cil_tmp75"} boogie_si_record_i64($i99);
    goto corral_source_split_927;

  corral_source_split_927:
    assume {:verifier.code 0} true;
    $p100 := $i2p.i64.ref($i99);
    goto corral_source_split_928;

  corral_source_split_928:
    assume {:verifier.code 0} true;
    $i101 := $load.i16($M.1, $p100);
    call {:si_unique_call 474} {:cexpr "__cil_tmp76"} boogie_si_record_i16($i101);
    goto corral_source_split_929;

  corral_source_split_929:
    assume {:verifier.code 0} true;
    $i102 := $zext.i16.i32($i101);
    call {:si_unique_call 475} {:cexpr "first_block"} boogie_si_record_i32($i102);
    goto corral_source_split_930;

  corral_source_split_930:
    assume {:verifier.code 0} true;
    $i103 := $p2i.ref.i64($p0);
    call {:si_unique_call 476} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i103);
    goto corral_source_split_931;

  corral_source_split_931:
    assume {:verifier.code 0} true;
    $i104 := $add.i64($i103, 520);
    call {:si_unique_call 477} {:cexpr "__cil_tmp174"} boogie_si_record_i64($i104);
    goto corral_source_split_932;

  corral_source_split_932:
    assume {:verifier.code 0} true;
    $p105 := $i2p.i64.ref($i104);
    goto corral_source_split_933;

  corral_source_split_933:
    assume {:verifier.code 0} true;
    $i106 := $load.i16($M.1, $p105);
    call {:si_unique_call 478} {:cexpr "__cil_tmp175"} boogie_si_record_i16($i106);
    goto corral_source_split_934;

  corral_source_split_934:
    assume {:verifier.code 0} true;
    $i107 := $zext.i16.i32($i106);
    call {:si_unique_call 479} {:cexpr "__cil_tmp176"} boogie_si_record_i32($i107);
    goto corral_source_split_935;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    $i108 := $uge.i32($i107, $i102);
    goto corral_source_split_936;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    $i109 := $i102;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume !($i108 == 1);
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_940;

  corral_source_split_940:
    assume {:verifier.code 0} true;
    goto $bb102;

  $bb102:
    assume {:verifier.code 0} true;
    call {:si_unique_call 574} INFTL_dumptables($p0);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    $p317 := $bitcast.ref.ref($p6);
    goto corral_source_split_1201;

  corral_source_split_1201:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p317, .str);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    $i318 := $p2i.ref.i64($p6);
    goto corral_source_split_1203;

  corral_source_split_1203:
    assume {:verifier.code 0} true;
    $i319 := $add.i64($i318, 8);
    call {:si_unique_call 575} {:cexpr "__cil_tmp178"} boogie_si_record_i64($i319);
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    $p320 := $i2p.i64.ref($i319);
    goto corral_source_split_1205;

  corral_source_split_1205:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p320, .str.18);
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    $i321 := $p2i.ref.i64($p6);
    goto corral_source_split_1207;

  corral_source_split_1207:
    assume {:verifier.code 0} true;
    $i322 := $add.i64($i321, 16);
    call {:si_unique_call 576} {:cexpr "__cil_tmp179"} boogie_si_record_i64($i322);
    goto corral_source_split_1208;

  corral_source_split_1208:
    assume {:verifier.code 0} true;
    $p323 := $i2p.i64.ref($i322);
    goto corral_source_split_1209;

  corral_source_split_1209:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p323, .str.2);
    goto corral_source_split_1210;

  corral_source_split_1210:
    assume {:verifier.code 0} true;
    $i324 := $p2i.ref.i64($p6);
    goto corral_source_split_1211;

  corral_source_split_1211:
    assume {:verifier.code 0} true;
    $i325 := $add.i64($i324, 24);
    call {:si_unique_call 577} {:cexpr "__cil_tmp180"} boogie_si_record_i64($i325);
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    $p326 := $i2p.i64.ref($i325);
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p326, .str.26);
    goto corral_source_split_1214;

  corral_source_split_1214:
    assume {:verifier.code 0} true;
    $i327 := $p2i.ref.i64($p6);
    goto corral_source_split_1215;

  corral_source_split_1215:
    assume {:verifier.code 0} true;
    $i328 := $add.i64($i327, 32);
    call {:si_unique_call 578} {:cexpr "__cil_tmp181"} boogie_si_record_i64($i328);
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    $p329 := $i2p.i64.ref($i328);
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p329, 733);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    $i330 := $p2i.ref.i64($p6);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i331 := $add.i64($i330, 35);
    call {:si_unique_call 579} {:cexpr "__cil_tmp182"} boogie_si_record_i64($i331);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    $p332 := $i2p.i64.ref($i331);
    goto corral_source_split_1221;

  corral_source_split_1221:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p332, 0);
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    $i333 := $p2i.ref.i64($p6);
    goto corral_source_split_1223;

  corral_source_split_1223:
    assume {:verifier.code 0} true;
    $i334 := $add.i64($i333, 35);
    call {:si_unique_call 580} {:cexpr "__cil_tmp183"} boogie_si_record_i64($i334);
    goto corral_source_split_1224;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    $p335 := $i2p.i64.ref($i334);
    goto corral_source_split_1225;

  corral_source_split_1225:
    assume {:verifier.code 0} true;
    $i336 := $load.i8($M.1, $p335);
    call {:si_unique_call 581} {:cexpr "__cil_tmp184"} boogie_si_record_i8($i336);
    goto corral_source_split_1226;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    $i337 := $zext.i8.i64($i336);
    call {:si_unique_call 582} {:cexpr "__cil_tmp185"} boogie_si_record_i64($i337);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $i338 := $and.i64($i337, 1);
    call {:si_unique_call 583} {:cexpr "__cil_tmp186"} boogie_si_record_i64($i338);
    goto corral_source_split_1228;

  corral_source_split_1228:
    assume {:verifier.code 0} true;
    call {:si_unique_call 584} $i339 := __builtinx_expect.i64.i64($i338, 0);
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i340 := $sext.i32.i64($i339);
    call {:si_unique_call 585} {:cexpr "tmp___5"} boogie_si_record_i64($i340);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i341 := $ne.i64($i340, 0);
    goto corral_source_split_1231;

  corral_source_split_1231:
    assume {:verifier.code 0} true;
    assume {:branchcond $i341} true;
    goto $bb103, $bb104;

  $bb104:
    assume !($i341 == 1);
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    $i343 := $p2i.ref.i64($p0);
    call {:si_unique_call 587} {:cexpr "__cil_tmp256"} boogie_si_record_i64($i343);
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    $i344 := $add.i64($i343, 516);
    call {:si_unique_call 588} {:cexpr "__cil_tmp257"} boogie_si_record_i64($i344);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    $p345 := $i2p.i64.ref($i344);
    goto corral_source_split_1238;

  corral_source_split_1238:
    assume {:verifier.code 0} true;
    $i346 := $load.i16($M.1, $p345);
    call {:si_unique_call 589} {:cexpr "__cil_tmp258"} boogie_si_record_i16($i346);
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $i347 := $zext.i16.i32($i346);
    call {:si_unique_call 590} {:cexpr "__cil_tmp259"} boogie_si_record_i32($i347);
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i348 := $ugt.i32($i347, 0);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    assume {:branchcond $i348} true;
    goto $bb106, $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    assume !($i348 == 1);
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    goto $bb137;

  $bb137:
    assume {:verifier.code 0} true;
    call {:si_unique_call 653} INFTL_dumptables($p0);
    goto corral_source_split_1380;

  corral_source_split_1380:
    assume {:verifier.code 0} true;
    call {:si_unique_call 654} INFTL_dumpVUchains($p0);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    $i463 := $p2i.ref.i64($p0);
    call {:si_unique_call 655} {:cexpr "__cil_tmp260"} boogie_si_record_i64($i463);
    goto corral_source_split_1382;

  corral_source_split_1382:
    assume {:verifier.code 0} true;
    $i464 := $add.i64($i463, 522);
    call {:si_unique_call 656} {:cexpr "__cil_tmp261"} boogie_si_record_i64($i464);
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $p465 := $i2p.i64.ref($i464);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p465, 0);
    goto corral_source_split_1385;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    $i466 := $p2i.ref.i64($p0);
    call {:si_unique_call 657} {:cexpr "__cil_tmp262"} boogie_si_record_i64($i466);
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $i467 := $add.i64($i466, 524);
    call {:si_unique_call 658} {:cexpr "__cil_tmp263"} boogie_si_record_i64($i467);
    goto corral_source_split_1387;

  corral_source_split_1387:
    assume {:verifier.code 0} true;
    $p468 := $i2p.i64.ref($i467);
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p468, $sub.i16(0, 1));
    goto corral_source_split_1389;

  corral_source_split_1389:
    assume {:verifier.code 0} true;
    $p469 := $bitcast.ref.ref($p7);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p469, .str);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    $i470 := $p2i.ref.i64($p7);
    goto corral_source_split_1392;

  corral_source_split_1392:
    assume {:verifier.code 0} true;
    $i471 := $add.i64($i470, 8);
    call {:si_unique_call 659} {:cexpr "__cil_tmp265"} boogie_si_record_i64($i471);
    goto corral_source_split_1393;

  corral_source_split_1393:
    assume {:verifier.code 0} true;
    $p472 := $i2p.i64.ref($i471);
    goto corral_source_split_1394;

  corral_source_split_1394:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p472, .str.18);
    goto corral_source_split_1395;

  corral_source_split_1395:
    assume {:verifier.code 0} true;
    $i473 := $p2i.ref.i64($p7);
    goto corral_source_split_1396;

  corral_source_split_1396:
    assume {:verifier.code 0} true;
    $i474 := $add.i64($i473, 16);
    call {:si_unique_call 660} {:cexpr "__cil_tmp266"} boogie_si_record_i64($i474);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    $p475 := $i2p.i64.ref($i474);
    goto corral_source_split_1398;

  corral_source_split_1398:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p475, .str.2);
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i476 := $p2i.ref.i64($p7);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $i477 := $add.i64($i476, 24);
    call {:si_unique_call 661} {:cexpr "__cil_tmp267"} boogie_si_record_i64($i477);
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    $p478 := $i2p.i64.ref($i477);
    goto corral_source_split_1402;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p478, .str.28);
    goto corral_source_split_1403;

  corral_source_split_1403:
    assume {:verifier.code 0} true;
    $i479 := $p2i.ref.i64($p7);
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i480 := $add.i64($i479, 32);
    call {:si_unique_call 662} {:cexpr "__cil_tmp268"} boogie_si_record_i64($i480);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    $p481 := $i2p.i64.ref($i480);
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p481, 787);
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $i482 := $p2i.ref.i64($p7);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    $i483 := $add.i64($i482, 35);
    call {:si_unique_call 663} {:cexpr "__cil_tmp269"} boogie_si_record_i64($i483);
    goto corral_source_split_1409;

  corral_source_split_1409:
    assume {:verifier.code 0} true;
    $p484 := $i2p.i64.ref($i483);
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p484, 0);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    $i485 := $p2i.ref.i64($p7);
    goto corral_source_split_1412;

  corral_source_split_1412:
    assume {:verifier.code 0} true;
    $i486 := $add.i64($i485, 35);
    call {:si_unique_call 664} {:cexpr "__cil_tmp270"} boogie_si_record_i64($i486);
    goto corral_source_split_1413;

  corral_source_split_1413:
    assume {:verifier.code 0} true;
    $p487 := $i2p.i64.ref($i486);
    goto corral_source_split_1414;

  corral_source_split_1414:
    assume {:verifier.code 0} true;
    $i488 := $load.i8($M.1, $p487);
    call {:si_unique_call 665} {:cexpr "__cil_tmp271"} boogie_si_record_i8($i488);
    goto corral_source_split_1415;

  corral_source_split_1415:
    assume {:verifier.code 0} true;
    $i489 := $zext.i8.i64($i488);
    call {:si_unique_call 666} {:cexpr "__cil_tmp272"} boogie_si_record_i64($i489);
    goto corral_source_split_1416;

  corral_source_split_1416:
    assume {:verifier.code 0} true;
    $i490 := $and.i64($i489, 1);
    call {:si_unique_call 667} {:cexpr "__cil_tmp273"} boogie_si_record_i64($i490);
    goto corral_source_split_1417;

  corral_source_split_1417:
    assume {:verifier.code 0} true;
    call {:si_unique_call 668} $i491 := __builtinx_expect.i64.i64($i490, 0);
    goto corral_source_split_1418;

  corral_source_split_1418:
    assume {:verifier.code 0} true;
    $i492 := $sext.i32.i64($i491);
    call {:si_unique_call 669} {:cexpr "tmp___6"} boogie_si_record_i64($i492);
    goto corral_source_split_1419;

  corral_source_split_1419:
    assume {:verifier.code 0} true;
    $i493 := $ne.i64($i492, 0);
    goto corral_source_split_1420;

  corral_source_split_1420:
    assume {:verifier.code 0} true;
    assume {:branchcond $i493} true;
    goto $bb138, $bb139;

  $bb139:
    assume !($i493 == 1);
    assume {:verifier.code 0} true;
    goto $bb140;

  $bb140:
    assume {:verifier.code 0} true;
    $i495 := $p2i.ref.i64($p0);
    call {:si_unique_call 671} {:cexpr "__cil_tmp274"} boogie_si_record_i64($i495);
    goto corral_source_split_1425;

  corral_source_split_1425:
    assume {:verifier.code 0} true;
    $i496 := $add.i64($i495, 518);
    call {:si_unique_call 672} {:cexpr "__cil_tmp275"} boogie_si_record_i64($i496);
    goto corral_source_split_1426;

  corral_source_split_1426:
    assume {:verifier.code 0} true;
    $p497 := $i2p.i64.ref($i496);
    goto corral_source_split_1427;

  corral_source_split_1427:
    assume {:verifier.code 0} true;
    $i498 := $load.i16($M.1, $p497);
    call {:si_unique_call 673} {:cexpr "__cil_tmp276"} boogie_si_record_i16($i498);
    goto corral_source_split_1428;

  corral_source_split_1428:
    assume {:verifier.code 0} true;
    $i499 := $zext.i16.i32($i498);
    call {:si_unique_call 674} {:cexpr "block"} boogie_si_record_i32($i499);
    goto corral_source_split_1429;

  corral_source_split_1429:
    assume {:verifier.code 0} true;
    $i500 := $p2i.ref.i64($p0);
    call {:si_unique_call 675} {:cexpr "__cil_tmp315"} boogie_si_record_i64($i500);
    goto corral_source_split_1430;

  corral_source_split_1430:
    assume {:verifier.code 0} true;
    $i501 := $add.i64($i500, 520);
    call {:si_unique_call 676} {:cexpr "__cil_tmp316"} boogie_si_record_i64($i501);
    goto corral_source_split_1431;

  corral_source_split_1431:
    assume {:verifier.code 0} true;
    $p502 := $i2p.i64.ref($i501);
    goto corral_source_split_1432;

  corral_source_split_1432:
    assume {:verifier.code 0} true;
    $i503 := $load.i16($M.1, $p502);
    call {:si_unique_call 677} {:cexpr "__cil_tmp317"} boogie_si_record_i16($i503);
    goto corral_source_split_1433;

  corral_source_split_1433:
    assume {:verifier.code 0} true;
    $i504 := $zext.i16.i32($i503);
    call {:si_unique_call 678} {:cexpr "__cil_tmp318"} boogie_si_record_i32($i504);
    goto corral_source_split_1434;

  corral_source_split_1434:
    assume {:verifier.code 0} true;
    $i505 := $uge.i32($i504, $i499);
    goto corral_source_split_1435;

  corral_source_split_1435:
    assume {:verifier.code 0} true;
    assume {:branchcond $i505} true;
    goto $bb141, $bb142;

  $bb142:
    assume {:verifier.code 0} true;
    assume !($i505 == 1);
    goto $bb143;

  $bb143:
    assume {:verifier.code 0} true;
    goto $bb160;

  $bb160:
    assume {:verifier.code 0} true;
    call {:si_unique_call 714} kfree($p62);
    goto corral_source_split_1516;

  corral_source_split_1516:
    assume {:verifier.code 0} true;
    $i41 := 0;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_848;

  corral_source_split_848:
    assume {:verifier.code 0} true;
    $r := $i41;
    return;

  $bb141:
    assume $i505 == 1;
    goto corral_source_split_1437;

  corral_source_split_1437:
    assume {:verifier.code 0} true;
    $i506 := $i499;
    goto $bb144;

  $bb144:
    call $i507, $i508, $i509, $p510, $p511, $p512, $i513, $i514, $i515, $i517, $i518, $i519, $i520, $i521, $p522, $p523, $p524, $i525, $i526, $i527, $p528, $p529, $p530, $i531, $i532, $i533, $p534, $p535, $p536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $p544, $i545, $i546, $i547, $i548, $p549, $i550, $i551, $p552, $i553, $i554, $i555, $i556, $i557, $i558, $p559, $i560, $i561, $i562, $i563, $i506, vslice_dummy_var_46 := INFTL_mount_loop_$bb144($p0, $p502, $i507, $i508, $i509, $p510, $p511, $p512, $i513, $i514, $i515, $i517, $i518, $i519, $i520, $i521, $p522, $p523, $p524, $i525, $i526, $i527, $p528, $p529, $p530, $i531, $i532, $i533, $p534, $p535, $p536, $i537, $i538, $i539, $i540, $i541, $i542, $i543, $p544, $i545, $i546, $i547, $i548, $p549, $i550, $i551, $p552, $i553, $i554, $i555, $i556, $i557, $i558, $p559, $i560, $i561, $i562, $i563, $i506, vslice_dummy_var_46);
    goto $bb144_last;

  corral_source_split_1439:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    $i507 := $zext.i32.i64($i506);
    call {:si_unique_call 679} {:cexpr "__cil_tmp277"} boogie_si_record_i64($i507);
    goto corral_source_split_1441;

  corral_source_split_1441:
    assume {:verifier.code 0} true;
    $i508 := $p2i.ref.i64($p0);
    call {:si_unique_call 680} {:cexpr "__cil_tmp278"} boogie_si_record_i64($i508);
    goto corral_source_split_1442;

  corral_source_split_1442:
    assume {:verifier.code 0} true;
    $i509 := $add.i64($i508, 544);
    call {:si_unique_call 681} {:cexpr "__cil_tmp279"} boogie_si_record_i64($i509);
    goto corral_source_split_1443;

  corral_source_split_1443:
    assume {:verifier.code 0} true;
    $p510 := $i2p.i64.ref($i509);
    goto corral_source_split_1444;

  corral_source_split_1444:
    assume {:verifier.code 0} true;
    $p511 := $load.ref($M.1, $p510);
    goto corral_source_split_1445;

  corral_source_split_1445:
    assume {:verifier.code 0} true;
    $p512 := $add.ref($p511, $mul.ref($i507, 2));
    goto corral_source_split_1446;

  corral_source_split_1446:
    assume {:verifier.code 0} true;
    $i513 := $load.i16($M.1, $p512);
    call {:si_unique_call 682} {:cexpr "__cil_tmp282"} boogie_si_record_i16($i513);
    goto corral_source_split_1447;

  corral_source_split_1447:
    assume {:verifier.code 0} true;
    $i514 := $zext.i16.i32($i513);
    call {:si_unique_call 683} {:cexpr "__cil_tmp283"} boogie_si_record_i32($i514);
    goto corral_source_split_1448;

  corral_source_split_1448:
    assume {:verifier.code 0} true;
    $i515 := $eq.i32($i514, 65533);
    goto corral_source_split_1449;

  corral_source_split_1449:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  $bb147:
    assume !($i515 == 1);
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb151:
    assume {:verifier.code 0} true;
    $i531 := $zext.i32.i64($i506);
    call {:si_unique_call 693} {:cexpr "__cil_tmp295"} boogie_si_record_i64($i531);
    goto corral_source_split_1473;

  corral_source_split_1473:
    assume {:verifier.code 0} true;
    $i532 := $p2i.ref.i64($p0);
    call {:si_unique_call 694} {:cexpr "__cil_tmp296"} boogie_si_record_i64($i532);
    goto corral_source_split_1474;

  corral_source_split_1474:
    assume {:verifier.code 0} true;
    $i533 := $add.i64($i532, 544);
    call {:si_unique_call 695} {:cexpr "__cil_tmp297"} boogie_si_record_i64($i533);
    goto corral_source_split_1475;

  corral_source_split_1475:
    assume {:verifier.code 0} true;
    $p534 := $i2p.i64.ref($i533);
    goto corral_source_split_1476;

  corral_source_split_1476:
    assume {:verifier.code 0} true;
    $p535 := $load.ref($M.1, $p534);
    goto corral_source_split_1477;

  corral_source_split_1477:
    assume {:verifier.code 0} true;
    $p536 := $add.ref($p535, $mul.ref($i531, 2));
    goto corral_source_split_1478;

  corral_source_split_1478:
    assume {:verifier.code 0} true;
    $i537 := $load.i16($M.1, $p536);
    call {:si_unique_call 696} {:cexpr "__cil_tmp300"} boogie_si_record_i16($i537);
    goto corral_source_split_1479;

  corral_source_split_1479:
    assume {:verifier.code 0} true;
    $i538 := $zext.i16.i32($i537);
    call {:si_unique_call 697} {:cexpr "__cil_tmp301"} boogie_si_record_i32($i538);
    goto corral_source_split_1480;

  corral_source_split_1480:
    assume {:verifier.code 0} true;
    $i539 := $eq.i32($i538, 65534);
    goto corral_source_split_1481;

  corral_source_split_1481:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb152, $bb153;

  $bb153:
    assume !($i539 == 1);
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb157:
    assume {:verifier.code 0} true;
    $i560 := $add.i32($i506, 1);
    call {:si_unique_call 711} {:cexpr "block"} boogie_si_record_i32($i560);
    goto corral_source_split_1509;

  corral_source_split_1509:
    assume {:verifier.code 0} true;
    $i561 := $load.i16($M.1, $p502);
    call {:si_unique_call 712} {:cexpr "__cil_tmp317"} boogie_si_record_i16($i561);
    goto corral_source_split_1510;

  corral_source_split_1510:
    assume {:verifier.code 0} true;
    $i562 := $zext.i16.i32($i561);
    call {:si_unique_call 713} {:cexpr "__cil_tmp318"} boogie_si_record_i32($i562);
    goto corral_source_split_1511;

  corral_source_split_1511:
    assume {:verifier.code 0} true;
    $i563 := $uge.i32($i562, $i560);
    goto corral_source_split_1512;

  corral_source_split_1512:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb158, $bb159;

  $bb159:
    assume !($i563 == 1);
    goto corral_source_split_1514;

  corral_source_split_1514:
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb158:
    assume $i563 == 1;
    assume {:verifier.code 0} true;
    $i506 := $i560;
    goto $bb158_dummy;

  $bb152:
    assume $i539 == 1;
    goto corral_source_split_1483;

  corral_source_split_1483:
    assume {:verifier.code 0} true;
    $i540 := $p2i.ref.i64($p0);
    call {:si_unique_call 698} {:cexpr "__cil_tmp302"} boogie_si_record_i64($i540);
    goto corral_source_split_1484;

  corral_source_split_1484:
    assume {:verifier.code 0} true;
    $i541 := $add.i64($i540, 522);
    call {:si_unique_call 699} {:cexpr "__cil_tmp303"} boogie_si_record_i64($i541);
    goto corral_source_split_1485;

  corral_source_split_1485:
    assume {:verifier.code 0} true;
    $i542 := $p2i.ref.i64($p0);
    call {:si_unique_call 700} {:cexpr "__cil_tmp304"} boogie_si_record_i64($i542);
    goto corral_source_split_1486;

  corral_source_split_1486:
    assume {:verifier.code 0} true;
    $i543 := $add.i64($i542, 522);
    call {:si_unique_call 701} {:cexpr "__cil_tmp305"} boogie_si_record_i64($i543);
    goto corral_source_split_1487;

  corral_source_split_1487:
    assume {:verifier.code 0} true;
    $p544 := $i2p.i64.ref($i543);
    goto corral_source_split_1488;

  corral_source_split_1488:
    assume {:verifier.code 0} true;
    $i545 := $load.i16($M.1, $p544);
    call {:si_unique_call 702} {:cexpr "__cil_tmp306"} boogie_si_record_i16($i545);
    goto corral_source_split_1489;

  corral_source_split_1489:
    assume {:verifier.code 0} true;
    $i546 := $zext.i16.i32($i545);
    call {:si_unique_call 703} {:cexpr "__cil_tmp307"} boogie_si_record_i32($i546);
    goto corral_source_split_1490;

  corral_source_split_1490:
    assume {:verifier.code 0} true;
    $i547 := $add.i32($i546, 1);
    call {:si_unique_call 704} {:cexpr "__cil_tmp308"} boogie_si_record_i32($i547);
    goto corral_source_split_1491;

  corral_source_split_1491:
    assume {:verifier.code 0} true;
    $i548 := $trunc.i32.i16($i547);
    goto corral_source_split_1492;

  corral_source_split_1492:
    assume {:verifier.code 0} true;
    $p549 := $i2p.i64.ref($i541);
    goto corral_source_split_1493;

  corral_source_split_1493:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p549, $i548);
    goto corral_source_split_1494;

  corral_source_split_1494:
    assume {:verifier.code 0} true;
    $i550 := $p2i.ref.i64($p0);
    call {:si_unique_call 705} {:cexpr "__cil_tmp309"} boogie_si_record_i64($i550);
    goto corral_source_split_1495;

  corral_source_split_1495:
    assume {:verifier.code 0} true;
    $i551 := $add.i64($i550, 524);
    call {:si_unique_call 706} {:cexpr "__cil_tmp310"} boogie_si_record_i64($i551);
    goto corral_source_split_1496;

  corral_source_split_1496:
    assume {:verifier.code 0} true;
    $p552 := $i2p.i64.ref($i551);
    goto corral_source_split_1497;

  corral_source_split_1497:
    assume {:verifier.code 0} true;
    $i553 := $load.i16($M.1, $p552);
    call {:si_unique_call 707} {:cexpr "__cil_tmp311"} boogie_si_record_i16($i553);
    goto corral_source_split_1498;

  corral_source_split_1498:
    assume {:verifier.code 0} true;
    $i554 := $zext.i16.i32($i553);
    call {:si_unique_call 708} {:cexpr "__cil_tmp312"} boogie_si_record_i32($i554);
    goto corral_source_split_1499;

  corral_source_split_1499:
    assume {:verifier.code 0} true;
    $i555 := $eq.i32($i554, 65535);
    goto corral_source_split_1500;

  corral_source_split_1500:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  $bb155:
    assume !($i555 == 1);
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb154:
    assume $i555 == 1;
    goto corral_source_split_1502;

  corral_source_split_1502:
    assume {:verifier.code 0} true;
    $i556 := $p2i.ref.i64($p0);
    call {:si_unique_call 709} {:cexpr "__cil_tmp313"} boogie_si_record_i64($i556);
    goto corral_source_split_1503;

  corral_source_split_1503:
    assume {:verifier.code 0} true;
    $i557 := $add.i64($i556, 524);
    call {:si_unique_call 710} {:cexpr "__cil_tmp314"} boogie_si_record_i64($i557);
    goto corral_source_split_1504;

  corral_source_split_1504:
    assume {:verifier.code 0} true;
    $i558 := $trunc.i32.i16($i506);
    goto corral_source_split_1505;

  corral_source_split_1505:
    assume {:verifier.code 0} true;
    $p559 := $i2p.i64.ref($i557);
    goto corral_source_split_1506;

  corral_source_split_1506:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p559, $i558);
    goto corral_source_split_1507;

  corral_source_split_1507:
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb146:
    assume $i515 == 1;
    goto corral_source_split_1451;

  corral_source_split_1451:
    assume {:verifier.code 0} true;
    call {:si_unique_call 684} vslice_dummy_var_46 := printk.ref.i32(.str.29, $i506);
    goto corral_source_split_1452;

  corral_source_split_1452:
    assume {:verifier.code 0} true;
    call {:si_unique_call 685} $i517 := INFTL_formatblock($p0, $i506);
    call {:si_unique_call 686} {:cexpr "tmp___7"} boogie_si_record_i32($i517);
    goto corral_source_split_1453;

  corral_source_split_1453:
    assume {:verifier.code 0} true;
    $i518 := $slt.i32($i517, 0);
    goto corral_source_split_1454;

  corral_source_split_1454:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb148, $bb149;

  $bb149:
    assume !($i518 == 1);
    goto corral_source_split_1465;

  corral_source_split_1465:
    assume {:verifier.code 0} true;
    $i525 := $zext.i32.i64($i506);
    call {:si_unique_call 690} {:cexpr "__cil_tmp290"} boogie_si_record_i64($i525);
    goto corral_source_split_1466;

  corral_source_split_1466:
    assume {:verifier.code 0} true;
    $i526 := $p2i.ref.i64($p0);
    call {:si_unique_call 691} {:cexpr "__cil_tmp291"} boogie_si_record_i64($i526);
    goto corral_source_split_1467;

  corral_source_split_1467:
    assume {:verifier.code 0} true;
    $i527 := $add.i64($i526, 544);
    call {:si_unique_call 692} {:cexpr "__cil_tmp292"} boogie_si_record_i64($i527);
    goto corral_source_split_1468;

  corral_source_split_1468:
    assume {:verifier.code 0} true;
    $p528 := $i2p.i64.ref($i527);
    goto corral_source_split_1469;

  corral_source_split_1469:
    assume {:verifier.code 0} true;
    $p529 := $load.ref($M.1, $p528);
    goto corral_source_split_1470;

  corral_source_split_1470:
    assume {:verifier.code 0} true;
    $p530 := $add.ref($p529, $mul.ref($i525, 2));
    goto corral_source_split_1471;

  corral_source_split_1471:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p530, $sub.i16(0, 2));
    assume {:verifier.code 0} true;
    goto $bb150;

  $bb150:
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb148:
    assume $i518 == 1;
    goto corral_source_split_1456;

  corral_source_split_1456:
    assume {:verifier.code 0} true;
    $i519 := $zext.i32.i64($i506);
    call {:si_unique_call 687} {:cexpr "__cil_tmp285"} boogie_si_record_i64($i519);
    goto corral_source_split_1457;

  corral_source_split_1457:
    assume {:verifier.code 0} true;
    $i520 := $p2i.ref.i64($p0);
    call {:si_unique_call 688} {:cexpr "__cil_tmp286"} boogie_si_record_i64($i520);
    goto corral_source_split_1458;

  corral_source_split_1458:
    assume {:verifier.code 0} true;
    $i521 := $add.i64($i520, 544);
    call {:si_unique_call 689} {:cexpr "__cil_tmp287"} boogie_si_record_i64($i521);
    goto corral_source_split_1459;

  corral_source_split_1459:
    assume {:verifier.code 0} true;
    $p522 := $i2p.i64.ref($i521);
    goto corral_source_split_1460;

  corral_source_split_1460:
    assume {:verifier.code 0} true;
    $p523 := $load.ref($M.1, $p522);
    goto corral_source_split_1461;

  corral_source_split_1461:
    assume {:verifier.code 0} true;
    $p524 := $add.ref($p523, $mul.ref($i519, 2));
    goto corral_source_split_1462;

  corral_source_split_1462:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p524, $sub.i16(0, 4));
    goto corral_source_split_1463;

  corral_source_split_1463:
    assume {:verifier.code 0} true;
    goto $bb150;

  $bb138:
    assume $i493 == 1;
    goto corral_source_split_1422;

  corral_source_split_1422:
    assume {:verifier.code 0} true;
    call {:si_unique_call 670} vslice_dummy_var_45 := __dynamic_pr_debug.ref.ref($p7, .str.28);
    goto corral_source_split_1423;

  corral_source_split_1423:
    assume {:verifier.code 0} true;
    goto $bb140;

  $bb106:
    assume $i348 == 1;
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    $i349 := 0;
    goto $bb109;

  $bb109:
    call $i350, $i351, $i352, $p353, $p354, $p355, $i356, $i357, $i358, $i360, $p361, $i362, $i363, $i364, $p365, $i366, $i367, $i368, $i375, $i376, $i377, $p378, $p379, $p380, $i381, $i382, $i383, $i384, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $i394, $p395, $p396, $p397, $i398, $i399, $i400, $i401, $i402, $i403, $p404, $p405, $p406, $i407, $i408, $i410, $i411, $i412, $p413, $p414, $p415, $i416, $i417, $p418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $p428, $p429, $p430, $i431, $i432, $i433, $i434, $p435, $p436, $p437, $i438, $i439, $i440, $i441, $i442, $i443, $p444, $p445, $p446, $i447, $i448, $i449, $i450, $i451, $i452, $i371, $i372, $i373, $i374, $i453, $i369, $i370, $i385, $i386, $i454, $i455, $p456, $i457, $i458, $i359, $i459, $i460, $i461, $i462, $i349, vslice_dummy_var_44 := INFTL_mount_loop_$bb109($p0, $p62, $i109, $p345, $i350, $i351, $i352, $p353, $p354, $p355, $i356, $i357, $i358, $i360, $p361, $i362, $i363, $i364, $p365, $i366, $i367, $i368, $i375, $i376, $i377, $p378, $p379, $p380, $i381, $i382, $i383, $i384, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $i394, $p395, $p396, $p397, $i398, $i399, $i400, $i401, $i402, $i403, $p404, $p405, $p406, $i407, $i408, $i410, $i411, $i412, $p413, $p414, $p415, $i416, $i417, $p418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $p428, $p429, $p430, $i431, $i432, $i433, $i434, $p435, $p436, $p437, $i438, $i439, $i440, $i441, $i442, $i443, $p444, $p445, $p446, $i447, $i448, $i449, $i450, $i451, $i452, $i371, $i372, $i373, $i374, $i453, $i369, $i370, $i385, $i386, $i454, $i455, $p456, $i457, $i458, $i359, $i459, $i460, $i461, $i462, $i349, vslice_dummy_var_44);
    goto $bb109_last;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    $i350 := $zext.i32.i64($i349);
    call {:si_unique_call 591} {:cexpr "__cil_tmp187"} boogie_si_record_i64($i350);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    $i351 := $p2i.ref.i64($p0);
    call {:si_unique_call 592} {:cexpr "__cil_tmp188"} boogie_si_record_i64($i351);
    goto corral_source_split_1248;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    $i352 := $add.i64($i351, 552);
    call {:si_unique_call 593} {:cexpr "__cil_tmp189"} boogie_si_record_i64($i352);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    $p353 := $i2p.i64.ref($i352);
    goto corral_source_split_1250;

  corral_source_split_1250:
    assume {:verifier.code 0} true;
    $p354 := $load.ref($M.1, $p353);
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    $p355 := $add.ref($p354, $mul.ref($i350, 2));
    goto corral_source_split_1252;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    $i356 := $load.i16($M.1, $p355);
    call {:si_unique_call 594} {:cexpr "__cil_tmp192"} boogie_si_record_i16($i356);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    $i357 := $zext.i16.i32($i356);
    call {:si_unique_call 595} {:cexpr "block"} boogie_si_record_i32($i357);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    $i358 := $ugt.i32($i357, 65531);
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb111, $bb112;

  $bb112:
    assume !($i358 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    $i360 := $zext.i32.i64($i357);
    call {:si_unique_call 599} {:cexpr "__cil_tmp193"} boogie_si_record_i64($i360);
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    $p361 := $add.ref($p62, $mul.ref($i360, 1));
    goto corral_source_split_1266;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    $i362 := $load.i8($M.1, $p361);
    call {:si_unique_call 600} {:cexpr "ANAC"} boogie_si_record_i8($i362);
    goto corral_source_split_1267;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    $i363 := $p2i.ref.i64($p0);
    call {:si_unique_call 601} {:cexpr "__cil_tmp248"} boogie_si_record_i64($i363);
    goto corral_source_split_1268;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    $i364 := $add.i64($i363, 516);
    call {:si_unique_call 602} {:cexpr "__cil_tmp249"} boogie_si_record_i64($i364);
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    $p365 := $i2p.i64.ref($i364);
    goto corral_source_split_1270;

  corral_source_split_1270:
    assume {:verifier.code 0} true;
    $i366 := $load.i16($M.1, $p365);
    call {:si_unique_call 603} {:cexpr "__cil_tmp250"} boogie_si_record_i16($i366);
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $i367 := $zext.i16.i32($i366);
    call {:si_unique_call 604} {:cexpr "__cil_tmp251"} boogie_si_record_i32($i367);
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $i368 := $sgt.i32($i367, 0);
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $i369, $i370 := $i349, 0;
    assume true;
    goto $bb115, $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    assume !($i368 == 1);
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    $i385, $i386 := $i369, $i370;
    goto $bb122;

  $bb122:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1293;

  corral_source_split_1293:
    assume {:verifier.code 0} true;
    $i454 := $p2i.ref.i64($p0);
    call {:si_unique_call 610} {:cexpr "__cil_tmp252"} boogie_si_record_i64($i454);
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    $i455 := $add.i64($i454, 560);
    call {:si_unique_call 611} {:cexpr "__cil_tmp253"} boogie_si_record_i64($i455);
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $p456 := $i2p.i64.ref($i455);
    goto corral_source_split_1296;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    $i457 := $load.i32($M.1, $p456);
    call {:si_unique_call 612} {:cexpr "__cil_tmp254"} boogie_si_record_i32($i457);
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $i458 := $uge.i32($i386, $i457);
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb132, $bb133;

  $bb133:
    assume !($i458 == 1);
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb134:
    assume {:verifier.code 0} true;
    $i359 := $i385;
    goto $bb113;

  $bb113:
    assume {:verifier.code 0} true;
    goto corral_source_split_1259;

  corral_source_split_1259:
    assume {:verifier.code 0} true;
    $i459 := $add.i32($i359, 1);
    call {:si_unique_call 596} {:cexpr "logical_block"} boogie_si_record_i32($i459);
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $i460 := $load.i16($M.1, $p345);
    call {:si_unique_call 597} {:cexpr "__cil_tmp258"} boogie_si_record_i16($i460);
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    $i461 := $zext.i16.i32($i460);
    call {:si_unique_call 598} {:cexpr "__cil_tmp259"} boogie_si_record_i32($i461);
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    $i462 := $ugt.i32($i461, $i459);
    goto corral_source_split_1263;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb135, $bb136;

  $bb136:
    assume !($i462 == 1);
    goto corral_source_split_1378;

  corral_source_split_1378:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb135:
    assume $i462 == 1;
    assume {:verifier.code 0} true;
    $i349 := $i459;
    goto $bb135_dummy;

  $bb132:
    assume $i458 == 1;
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    call {:si_unique_call 652} format_chain($p0, $i109);
    goto corral_source_split_1376;

  corral_source_split_1376:
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb115:
    assume $i368 == 1;
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $i371, $i372, $i373, $i374 := $i362, 0, $i357, 65535;
    goto $bb118;

  $bb118:
    call $i375, $i376, $i377, $p378, $p379, $p380, $i381, $i382, $i383, $i384, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $i394, $p395, $p396, $p397, $i398, $i399, $i400, $i401, $i402, $i403, $p404, $p405, $p406, $i407, $i408, $i410, $i411, $i412, $p413, $p414, $p415, $i416, $i417, $p418, $i419, $i420, $i421, $i422, $i423, $i424, $i438, $i439, $i440, $i441, $i442, $i443, $p444, $p445, $p446, $i447, $i448, $i449, $i450, $i451, $i452, $i371, $i372, $i373, $i374, $i453, vslice_dummy_var_44 := INFTL_mount_loop_$bb118($p0, $p62, $p365, $i375, $i376, $i377, $p378, $p379, $p380, $i381, $i382, $i383, $i384, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $i394, $p395, $p396, $p397, $i398, $i399, $i400, $i401, $i402, $i403, $p404, $p405, $p406, $i407, $i408, $i410, $i411, $i412, $p413, $p414, $p415, $i416, $i417, $p418, $i419, $i420, $i421, $i422, $i423, $i424, $i438, $i439, $i440, $i441, $i442, $i443, $p444, $p445, $p446, $i447, $i448, $i449, $i450, $i451, $i452, $i371, $i372, $i373, $i374, $i453, $i349, vslice_dummy_var_44);
    goto $bb118_last;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    goto $bb119;

  $bb119:
    assume {:verifier.code 0} true;
    $i375 := $zext.i32.i64($i373);
    call {:si_unique_call 605} {:cexpr "__cil_tmp195"} boogie_si_record_i64($i375);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    $i376 := $p2i.ref.i64($p0);
    call {:si_unique_call 606} {:cexpr "__cil_tmp196"} boogie_si_record_i64($i376);
    goto corral_source_split_1282;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    $i377 := $add.i64($i376, 544);
    call {:si_unique_call 607} {:cexpr "__cil_tmp197"} boogie_si_record_i64($i377);
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $p378 := $i2p.i64.ref($i377);
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    $p379 := $load.ref($M.1, $p378);
    goto corral_source_split_1285;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    $p380 := $add.ref($p379, $mul.ref($i375, 2));
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i381 := $load.i16($M.1, $p380);
    call {:si_unique_call 608} {:cexpr "__cil_tmp200"} boogie_si_record_i16($i381);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i382 := $zext.i16.i32($i381);
    call {:si_unique_call 609} {:cexpr "__cil_tmp201"} boogie_si_record_i32($i382);
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    $i383 := $eq.i32($i382, 65535);
    goto corral_source_split_1289;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    $i384 := $i372;
    assume true;
    goto $bb120, $bb121;

  $bb121:
    assume !($i383 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    $i387 := $p2i.ref.i64($p0);
    call {:si_unique_call 613} {:cexpr "__cil_tmp202"} boogie_si_record_i64($i387);
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    $i388 := $add.i64($i387, 520);
    call {:si_unique_call 614} {:cexpr "__cil_tmp203"} boogie_si_record_i64($i388);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $p389 := $i2p.i64.ref($i388);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    $i390 := $load.i16($M.1, $p389);
    call {:si_unique_call 615} {:cexpr "__cil_tmp204"} boogie_si_record_i16($i390);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    $i391 := $zext.i16.i32($i390);
    call {:si_unique_call 616} {:cexpr "__cil_tmp205"} boogie_si_record_i32($i391);
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    $i392 := $zext.i32.i64($i373);
    call {:si_unique_call 617} {:cexpr "__cil_tmp206"} boogie_si_record_i64($i392);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i393 := $p2i.ref.i64($p0);
    call {:si_unique_call 618} {:cexpr "__cil_tmp207"} boogie_si_record_i64($i393);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    $i394 := $add.i64($i393, 544);
    call {:si_unique_call 619} {:cexpr "__cil_tmp208"} boogie_si_record_i64($i394);
    goto corral_source_split_1307;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    $p395 := $i2p.i64.ref($i394);
    goto corral_source_split_1308;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    $p396 := $load.ref($M.1, $p395);
    goto corral_source_split_1309;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    $p397 := $add.ref($p396, $mul.ref($i392, 2));
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    $i398 := $load.i16($M.1, $p397);
    call {:si_unique_call 620} {:cexpr "__cil_tmp211"} boogie_si_record_i16($i398);
    goto corral_source_split_1311;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    $i399 := $zext.i16.i32($i398);
    call {:si_unique_call 621} {:cexpr "__cil_tmp212"} boogie_si_record_i32($i399);
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i400 := $sgt.i32($i399, $i391);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb124, $bb125;

  $bb125:
    assume !($i400 == 1);
    assume {:verifier.code 0} true;
    goto $bb126;

  $bb126:
    assume {:verifier.code 0} true;
    $i416 := $zext.i8.i32($i371);
    call {:si_unique_call 631} {:cexpr "__cil_tmp225"} boogie_si_record_i32($i416);
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    $i417 := $zext.i32.i64($i373);
    call {:si_unique_call 632} {:cexpr "__cil_tmp226"} boogie_si_record_i64($i417);
    goto corral_source_split_1334;

  corral_source_split_1334:
    assume {:verifier.code 0} true;
    $p418 := $add.ref($p62, $mul.ref($i417, 1));
    goto corral_source_split_1335;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    $i419 := $load.i8($M.1, $p418);
    call {:si_unique_call 633} {:cexpr "__cil_tmp228"} boogie_si_record_i8($i419);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i420 := $zext.i8.i32($i419);
    call {:si_unique_call 634} {:cexpr "__cil_tmp229"} boogie_si_record_i32($i420);
    goto corral_source_split_1337;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    $i421 := $ne.i32($i420, $i416);
    goto corral_source_split_1338;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    $i422, $i423, $i424 := $i374, $i373, $i372;
    assume true;
    goto $bb127, $bb128;

  $bb128:
    assume !($i421 == 1);
    assume {:verifier.code 0} true;
    goto $bb129;

  $bb129:
    assume {:verifier.code 0} true;
    $i438 := $zext.i8.i32($i371);
    call {:si_unique_call 641} {:cexpr "__cil_tmp240"} boogie_si_record_i32($i438);
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    $i439 := $sub.i32($i438, 1);
    call {:si_unique_call 642} {:cexpr "__cil_tmp241"} boogie_si_record_i32($i439);
    goto corral_source_split_1358;

  corral_source_split_1358:
    assume {:verifier.code 0} true;
    $i440 := $trunc.i32.i8($i439);
    call {:si_unique_call 643} {:cexpr "ANAC"} boogie_si_record_i8($i440);
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    $i441 := $zext.i32.i64($i373);
    call {:si_unique_call 644} {:cexpr "__cil_tmp242"} boogie_si_record_i64($i441);
    goto corral_source_split_1360;

  corral_source_split_1360:
    assume {:verifier.code 0} true;
    $i442 := $p2i.ref.i64($p0);
    call {:si_unique_call 645} {:cexpr "__cil_tmp243"} boogie_si_record_i64($i442);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    $i443 := $add.i64($i442, 544);
    call {:si_unique_call 646} {:cexpr "__cil_tmp244"} boogie_si_record_i64($i443);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    $p444 := $i2p.i64.ref($i443);
    goto corral_source_split_1363;

  corral_source_split_1363:
    assume {:verifier.code 0} true;
    $p445 := $load.ref($M.1, $p444);
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    $p446 := $add.ref($p445, $mul.ref($i441, 2));
    goto corral_source_split_1365;

  corral_source_split_1365:
    assume {:verifier.code 0} true;
    $i447 := $load.i16($M.1, $p446);
    call {:si_unique_call 647} {:cexpr "__cil_tmp247"} boogie_si_record_i16($i447);
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    $i448 := $zext.i16.i32($i447);
    call {:si_unique_call 648} {:cexpr "block"} boogie_si_record_i32($i448);
    goto corral_source_split_1367;

  corral_source_split_1367:
    assume {:verifier.code 0} true;
    $i449 := $add.i32($i372, 1);
    call {:si_unique_call 649} {:cexpr "i"} boogie_si_record_i32($i449);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i450 := $load.i16($M.1, $p365);
    call {:si_unique_call 650} {:cexpr "__cil_tmp250"} boogie_si_record_i16($i450);
    goto corral_source_split_1369;

  corral_source_split_1369:
    assume {:verifier.code 0} true;
    $i451 := $zext.i16.i32($i450);
    call {:si_unique_call 651} {:cexpr "__cil_tmp251"} boogie_si_record_i32($i451);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $i452 := $sgt.i32($i451, $i449);
    goto corral_source_split_1371;

  corral_source_split_1371:
    assume {:verifier.code 0} true;
    $i453 := $i449;
    assume true;
    goto $bb130, $bb131;

  $bb131:
    assume !($i452 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1373;

  corral_source_split_1373:
    assume {:verifier.code 0} true;
    $i369, $i370 := $i349, $i453;
    goto $bb117;

  $bb130:
    assume $i452 == 1;
    assume {:verifier.code 0} true;
    $i371, $i372, $i373, $i374 := $i440, $i449, $i448, $i373;
    goto $bb130_dummy;

  $bb127:
    assume $i421 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1340;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    $i425 := $zext.i32.i64($i349);
    call {:si_unique_call 635} {:cexpr "__cil_tmp230"} boogie_si_record_i64($i425);
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    $i426 := $p2i.ref.i64($p0);
    call {:si_unique_call 636} {:cexpr "__cil_tmp231"} boogie_si_record_i64($i426);
    goto corral_source_split_1342;

  corral_source_split_1342:
    assume {:verifier.code 0} true;
    $i427 := $add.i64($i426, 552);
    call {:si_unique_call 637} {:cexpr "__cil_tmp232"} boogie_si_record_i64($i427);
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    $p428 := $i2p.i64.ref($i427);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    $p429 := $load.ref($M.1, $p428);
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $p430 := $add.ref($p429, $mul.ref($i425, 2));
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    $i431 := $trunc.i32.i16($i423);
    goto corral_source_split_1347;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p430, $i431);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    $i432 := $zext.i32.i64($i422);
    call {:si_unique_call 638} {:cexpr "__cil_tmp235"} boogie_si_record_i64($i432);
    goto corral_source_split_1349;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    $i433 := $p2i.ref.i64($p0);
    call {:si_unique_call 639} {:cexpr "__cil_tmp236"} boogie_si_record_i64($i433);
    goto corral_source_split_1350;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    $i434 := $add.i64($i433, 544);
    call {:si_unique_call 640} {:cexpr "__cil_tmp237"} boogie_si_record_i64($i434);
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $p435 := $i2p.i64.ref($i434);
    goto corral_source_split_1352;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    $p436 := $load.ref($M.1, $p435);
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    $p437 := $add.ref($p436, $mul.ref($i432, 2));
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p437, $sub.i16(0, 1));
    goto corral_source_split_1355;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    $i385, $i386 := $i349, $i424;
    goto $bb122;

  $bb124:
    assume $i400 == 1;
    goto corral_source_split_1315;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    $i401 := $zext.i32.i64($i373);
    call {:si_unique_call 622} {:cexpr "__cil_tmp213"} boogie_si_record_i64($i401);
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    $i402 := $p2i.ref.i64($p0);
    call {:si_unique_call 623} {:cexpr "__cil_tmp214"} boogie_si_record_i64($i402);
    goto corral_source_split_1317;

  corral_source_split_1317:
    assume {:verifier.code 0} true;
    $i403 := $add.i64($i402, 544);
    call {:si_unique_call 624} {:cexpr "__cil_tmp215"} boogie_si_record_i64($i403);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    $p404 := $i2p.i64.ref($i403);
    goto corral_source_split_1319;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    $p405 := $load.ref($M.1, $p404);
    goto corral_source_split_1320;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    $p406 := $add.ref($p405, $mul.ref($i401, 2));
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i407 := $load.i16($M.1, $p406);
    call {:si_unique_call 625} {:cexpr "__cil_tmp218"} boogie_si_record_i16($i407);
    goto corral_source_split_1322;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    $i408 := $zext.i16.i32($i407);
    call {:si_unique_call 626} {:cexpr "__cil_tmp219"} boogie_si_record_i32($i408);
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 627} vslice_dummy_var_44 := printk.ref.i32.i32(.str.27, $i408, $i349);
    goto corral_source_split_1324;

  corral_source_split_1324:
    assume {:verifier.code 0} true;
    $i410 := $zext.i32.i64($i373);
    call {:si_unique_call 628} {:cexpr "__cil_tmp220"} boogie_si_record_i64($i410);
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i411 := $p2i.ref.i64($p0);
    call {:si_unique_call 629} {:cexpr "__cil_tmp221"} boogie_si_record_i64($i411);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i412 := $add.i64($i411, 544);
    call {:si_unique_call 630} {:cexpr "__cil_tmp222"} boogie_si_record_i64($i412);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $p413 := $i2p.i64.ref($i412);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    $p414 := $load.ref($M.1, $p413);
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $p415 := $add.ref($p414, $mul.ref($i410, 2));
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p415, $sub.i16(0, 1));
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    goto $bb126;

  $bb120:
    assume $i383 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1291;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    $i385, $i386 := $i349, $i384;
    goto $bb122;

  $bb111:
    assume $i358 == 1;
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $i359 := $i349;
    goto $bb113;

  $bb103:
    assume $i341 == 1;
    goto corral_source_split_1233;

  corral_source_split_1233:
    assume {:verifier.code 0} true;
    call {:si_unique_call 586} vslice_dummy_var_43 := __dynamic_pr_debug.ref.ref($p6, .str.26);
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb22:
    assume $i108 == 1;
    goto corral_source_split_938;

  corral_source_split_938:
    assume {:verifier.code 0} true;
    $i110 := $i102;
    goto $bb25;

  $bb25:
    call $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $p129, $p130, $p131, $i132, $i133, $i134, $i135, $i139, $i140, $p141, $i142, $i143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $p153, $i154, $i155, $i156, $i157, $p158, $i159, $i160, $i161, $i162, $p163, $i164, $i165, $i166, $i167, $p168, $i169, $i170, $i171, $i172, $p173, $i174, $i175, $i176, $i177, $p178, $i179, $i180, $i181, $i182, $p183, $i184, $i185, $p186, $i187, $i188, $i189, $p190, $i191, $i192, $i193, $i194, $p195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $p203, $p204, $p205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $p218, $p219, $p220, $i221, $i222, $i223, $i224, $i225, $i226, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $p237, $p238, $p239, $i240, $i241, $i242, $i243, $i244, $i245, $p246, $p247, $p248, $i249, $i250, $p251, $i252, $i253, $i254, $i255, $i256, $i260, $i261, $p262, $i263, $i264, $i265, $i266, $i267, $i268, $i257, $i258, $i259, $i269, $i271, $i272, $i273, $i275, $i276, $i274, $i277, $i278, $i279, $p280, $p281, $p282, $i283, $i284, $i285, $i286, $p287, $p288, $p289, $i290, $i291, $i292, $i293, $i294, $p295, $i296, $i297, $i298, $i299, $i300, $i302, $i303, $i136, $i137, $i138, $i304, $i305, $i306, $i307, $p308, $p309, $p310, $i311, $i120, $i312, $i313, $i314, $i315, $i110, $i316, vslice_dummy_var_40, vslice_dummy_var_41, vslice_dummy_var_42 := INFTL_mount_loop_$bb25($p0, $p1, $p2, $p3, $p11, $p62, $p105, $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $p129, $p130, $p131, $i132, $i133, $i134, $i135, $i139, $i140, $p141, $i142, $i143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $p153, $i154, $i155, $i156, $i157, $p158, $i159, $i160, $i161, $i162, $p163, $i164, $i165, $i166, $i167, $p168, $i169, $i170, $i171, $i172, $p173, $i174, $i175, $i176, $i177, $p178, $i179, $i180, $i181, $i182, $p183, $i184, $i185, $p186, $i187, $i188, $i189, $p190, $i191, $i192, $i193, $i194, $p195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $p203, $p204, $p205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $p218, $p219, $p220, $i221, $i222, $i223, $i224, $i225, $i226, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $p237, $p238, $p239, $i240, $i241, $i242, $i243, $i244, $i245, $p246, $p247, $p248, $i249, $i250, $p251, $i252, $i253, $i254, $i255, $i256, $i260, $i261, $p262, $i263, $i264, $i265, $i266, $i267, $i268, $i257, $i258, $i259, $i269, $i271, $i272, $i273, $i275, $i276, $i274, $i277, $i278, $i279, $p280, $p281, $p282, $i283, $i284, $i285, $i286, $p287, $p288, $p289, $i290, $i291, $i292, $i293, $i294, $p295, $i296, $i297, $i298, $i299, $i300, $i302, $i303, $i136, $i137, $i138, $i304, $i305, $i306, $i307, $p308, $p309, $p310, $i311, $i120, $i312, $i313, $i314, $i315, $i110, $i316, vslice_dummy_var_40, vslice_dummy_var_41, vslice_dummy_var_42);
    goto $bb25_last;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i111 := $zext.i32.i64($i110);
    call {:si_unique_call 480} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i111);
    goto corral_source_split_944;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    $i112 := $p2i.ref.i64($p0);
    call {:si_unique_call 481} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i112);
    goto corral_source_split_945;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    $i113 := $add.i64($i112, 544);
    call {:si_unique_call 482} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i113);
    goto corral_source_split_946;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    $p114 := $i2p.i64.ref($i113);
    goto corral_source_split_947;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    $p115 := $load.ref($M.1, $p114);
    goto corral_source_split_948;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    $p116 := $add.ref($p115, $mul.ref($i111, 2));
    goto corral_source_split_949;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    $i117 := $load.i16($M.1, $p116);
    call {:si_unique_call 483} {:cexpr "__cil_tmp82"} boogie_si_record_i16($i117);
    goto corral_source_split_950;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    $i118 := $zext.i16.i32($i117);
    call {:si_unique_call 484} {:cexpr "__cil_tmp83"} boogie_si_record_i32($i118);
    goto corral_source_split_951;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    $i119 := $ne.i32($i118, 65533);
    goto corral_source_split_952;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i121, $i122, $i123, $i124 := 0, 65535, 65535, $i110;
    goto $bb31;

  $bb31:
    call $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $p129, $p130, $p131, $i132, $i133, $i134, $i135, $i139, $i140, $p141, $i142, $i143, $i144, $i145, $p146, $i147, $i148, $i149, $i151, $i152, $p153, $i154, $i155, $i156, $i157, $p158, $i159, $i160, $i161, $p163, $i164, $i165, $i166, $i167, $p168, $i169, $i170, $i171, $i172, $p173, $i174, $i175, $i176, $i177, $p178, $i179, $i180, $i181, $i182, $p183, $i184, $i185, $p186, $i187, $i188, $i189, $p190, $i191, $i192, $i193, $i194, $p195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $p203, $p204, $p205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i222, $i223, $i224, $i225, $i226, $i231, $i232, $i233, $i240, $i241, $i242, $i249, $i250, $p251, $i252, $i253, $i254, $i255, $i256, $i260, $i261, $p262, $i263, $i264, $i265, $i266, $i267, $i268, $i273, $i275, $i276, $i274, $i277, $i278, $i279, $p280, $p281, $p282, $i283, $i284, $i285, $i286, $p287, $p288, $p289, $i290, $i291, $i292, $i293, $i294, $p295, $i296, $i297, $i298, $i299, $i300, $i303 := INFTL_mount_loop_$bb31($p0, $p1, $p2, $p3, $p11, $p62, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $p129, $p130, $p131, $i132, $i133, $i134, $i135, $i139, $i140, $p141, $i142, $i143, $i144, $i145, $p146, $i147, $i148, $i149, $i151, $i152, $p153, $i154, $i155, $i156, $i157, $p158, $i159, $i160, $i161, $p163, $i164, $i165, $i166, $i167, $p168, $i169, $i170, $i171, $i172, $p173, $i174, $i175, $i176, $i177, $p178, $i179, $i180, $i181, $i182, $p183, $i184, $i185, $p186, $i187, $i188, $i189, $p190, $i191, $i192, $i193, $i194, $p195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $p203, $p204, $p205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i222, $i223, $i224, $i225, $i226, $i231, $i232, $i233, $i240, $i241, $i242, $i249, $i250, $p251, $i252, $i253, $i254, $i255, $i256, $i260, $i261, $p262, $i263, $i264, $i265, $i266, $i267, $i268, $i273, $i275, $i276, $i274, $i277, $i278, $i279, $p280, $p281, $p282, $i283, $i284, $i285, $i286, $p287, $p288, $p289, $i290, $i291, $i292, $i293, $i294, $p295, $i296, $i297, $i298, $i299, $i300, $i303);
    goto $bb31_last;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    $i125 := $eq.i32($i121, 0);
    goto corral_source_split_963;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    $i139 := $p2i.ref.i64($p0);
    call {:si_unique_call 493} {:cexpr "__cil_tmp91"} boogie_si_record_i64($i139);
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    $i140 := $add.i64($i139, 356);
    call {:si_unique_call 494} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i140);
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    $p141 := $i2p.i64.ref($i140);
    goto corral_source_split_983;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    $i142 := $load.i32($M.1, $p141);
    call {:si_unique_call 495} {:cexpr "__cil_tmp93"} boogie_si_record_i32($i142);
    goto corral_source_split_984;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    $i143 := $mul.i32($i142, $i124);
    call {:si_unique_call 496} {:cexpr "__cil_tmp94"} boogie_si_record_i32($i143);
    goto corral_source_split_985;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    $i144 := $add.i32($i143, 8);
    call {:si_unique_call 497} {:cexpr "__cil_tmp95"} boogie_si_record_i32($i144);
    goto corral_source_split_986;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    $i145 := $zext.i32.i64($i144);
    call {:si_unique_call 498} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i145);
    goto corral_source_split_987;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    $p146 := $bitcast.ref.ref($p1);
    goto corral_source_split_988;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    call {:si_unique_call 499} $i147 := inftl_read_oob($p11, $i145, 8, $p3, $p146);
    call {:si_unique_call 500} {:cexpr "tmp___3"} boogie_si_record_i32($i147);
    goto corral_source_split_989;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    $i148 := $slt.i32($i147, 0);
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    $i149 := $i122;
    assume true;
    goto $bb39, $bb40;

  $bb40:
    assume !($i148 == 1);
    goto corral_source_split_995;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    $i151 := $p2i.ref.i64($p0);
    call {:si_unique_call 502} {:cexpr "__cil_tmp98"} boogie_si_record_i64($i151);
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    $i152 := $add.i64($i151, 356);
    call {:si_unique_call 503} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i152);
    goto corral_source_split_997;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    $p153 := $i2p.i64.ref($i152);
    goto corral_source_split_998;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    $i154 := $load.i32($M.1, $p153);
    call {:si_unique_call 504} {:cexpr "__cil_tmp100"} boogie_si_record_i32($i154);
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    $i155 := $mul.i32($i154, $i124);
    call {:si_unique_call 505} {:cexpr "__cil_tmp101"} boogie_si_record_i32($i155);
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    $i156 := $add.i32($i155, 1032);
    call {:si_unique_call 506} {:cexpr "__cil_tmp102"} boogie_si_record_i32($i156);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    $i157 := $zext.i32.i64($i156);
    call {:si_unique_call 507} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i157);
    goto corral_source_split_1002;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    $p158 := $bitcast.ref.ref($p2);
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    call {:si_unique_call 508} $i159 := inftl_read_oob($p11, $i157, 8, $p3, $p158);
    call {:si_unique_call 509} {:cexpr "tmp___4"} boogie_si_record_i32($i159);
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    $i160 := $slt.i32($i159, 0);
    goto corral_source_split_1005;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    $i161 := $i122;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i160 == 1);
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $p163 := $bitcast.ref.ref($p1);
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    $i164 := $load.i16($M.1, $p163);
    call {:si_unique_call 511} {:cexpr "__cil_tmp106"} boogie_si_record_i16($i164);
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    $i165 := $zext.i16.i32($i164);
    call {:si_unique_call 512} {:cexpr "logical_block"} boogie_si_record_i32($i165);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    $i166 := $p2i.ref.i64($p1);
    goto corral_source_split_1013;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    $i167 := $add.i64($i166, 2);
    call {:si_unique_call 513} {:cexpr "__cil_tmp107"} boogie_si_record_i64($i167);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    $p168 := $i2p.i64.ref($i167);
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    $i169 := $load.i16($M.1, $p168);
    call {:si_unique_call 514} {:cexpr "__cil_tmp108"} boogie_si_record_i16($i169);
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    $i170 := $zext.i16.i32($i169);
    call {:si_unique_call 515} {:cexpr "prev_block"} boogie_si_record_i32($i170);
    goto corral_source_split_1017;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    $i171 := $p2i.ref.i64($p2);
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    $i172 := $add.i64($i171, 6);
    call {:si_unique_call 516} {:cexpr "__cil_tmp109"} boogie_si_record_i64($i172);
    goto corral_source_split_1019;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    $p173 := $i2p.i64.ref($i172);
    goto corral_source_split_1020;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    $i174 := $load.i16($M.1, $p173);
    call {:si_unique_call 517} {:cexpr "__cil_tmp110"} boogie_si_record_i16($i174);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    $i175 := $zext.i16.i32($i174);
    call {:si_unique_call 518} {:cexpr "__cil_tmp111"} boogie_si_record_i32($i175);
    goto corral_source_split_1022;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    $i176 := $p2i.ref.i64($p2);
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    $i177 := $add.i64($i176, 4);
    call {:si_unique_call 519} {:cexpr "__cil_tmp112"} boogie_si_record_i64($i177);
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    $p178 := $i2p.i64.ref($i177);
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    $i179 := $load.i16($M.1, $p178);
    call {:si_unique_call 520} {:cexpr "__cil_tmp113"} boogie_si_record_i16($i179);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    $i180 := $zext.i16.i32($i179);
    call {:si_unique_call 521} {:cexpr "__cil_tmp114"} boogie_si_record_i32($i180);
    goto corral_source_split_1027;

  corral_source_split_1027:
    assume {:verifier.code 0} true;
    $i181 := $or.i32($i180, $i175);
    call {:si_unique_call 522} {:cexpr "__cil_tmp115"} boogie_si_record_i32($i181);
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    $i182 := $zext.i32.i64($i124);
    call {:si_unique_call 523} {:cexpr "__cil_tmp116"} boogie_si_record_i64($i182);
    goto corral_source_split_1029;

  corral_source_split_1029:
    assume {:verifier.code 0} true;
    $p183 := $add.ref($p62, $mul.ref($i182, 1));
    goto corral_source_split_1030;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    $i184 := $p2i.ref.i64($p1);
    goto corral_source_split_1031;

  corral_source_split_1031:
    assume {:verifier.code 0} true;
    $i185 := $add.i64($i184, 4);
    call {:si_unique_call 524} {:cexpr "__cil_tmp118"} boogie_si_record_i64($i185);
    goto corral_source_split_1032;

  corral_source_split_1032:
    assume {:verifier.code 0} true;
    $p186 := $i2p.i64.ref($i185);
    goto corral_source_split_1033;

  corral_source_split_1033:
    assume {:verifier.code 0} true;
    $i187 := $load.i8($M.1, $p186);
    goto corral_source_split_1034;

  corral_source_split_1034:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p183, $i187);
    goto corral_source_split_1035;

  corral_source_split_1035:
    assume {:verifier.code 0} true;
    $i188 := $p2i.ref.i64($p0);
    call {:si_unique_call 525} {:cexpr "__cil_tmp119"} boogie_si_record_i64($i188);
    goto corral_source_split_1036;

  corral_source_split_1036:
    assume {:verifier.code 0} true;
    $i189 := $add.i64($i188, 560);
    call {:si_unique_call 526} {:cexpr "__cil_tmp120"} boogie_si_record_i64($i189);
    goto corral_source_split_1037;

  corral_source_split_1037:
    assume {:verifier.code 0} true;
    $p190 := $i2p.i64.ref($i189);
    goto corral_source_split_1038;

  corral_source_split_1038:
    assume {:verifier.code 0} true;
    $i191 := $load.i32($M.1, $p190);
    call {:si_unique_call 527} {:cexpr "__cil_tmp121"} boogie_si_record_i32($i191);
    goto corral_source_split_1039;

  corral_source_split_1039:
    assume {:verifier.code 0} true;
    $i192 := $ugt.i32($i191, $i170);
    goto corral_source_split_1040;

  corral_source_split_1040:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb45, $bb46;

  $bb46:
    assume !($i192 == 1);
    assume {:verifier.code 0} true;
    $i199 := $i170;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto corral_source_split_1050;

  corral_source_split_1050:
    assume {:verifier.code 0} true;
    $i200 := $zext.i32.i64($i124);
    call {:si_unique_call 533} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i200);
    goto corral_source_split_1051;

  corral_source_split_1051:
    assume {:verifier.code 0} true;
    $i201 := $p2i.ref.i64($p0);
    call {:si_unique_call 534} {:cexpr "__cil_tmp127"} boogie_si_record_i64($i201);
    goto corral_source_split_1052;

  corral_source_split_1052:
    assume {:verifier.code 0} true;
    $i202 := $add.i64($i201, 544);
    call {:si_unique_call 535} {:cexpr "__cil_tmp128"} boogie_si_record_i64($i202);
    goto corral_source_split_1053;

  corral_source_split_1053:
    assume {:verifier.code 0} true;
    $p203 := $i2p.i64.ref($i202);
    goto corral_source_split_1054;

  corral_source_split_1054:
    assume {:verifier.code 0} true;
    $p204 := $load.ref($M.1, $p203);
    goto corral_source_split_1055;

  corral_source_split_1055:
    assume {:verifier.code 0} true;
    $p205 := $add.ref($p204, $mul.ref($i200, 2));
    goto corral_source_split_1056;

  corral_source_split_1056:
    assume {:verifier.code 0} true;
    $i206 := $load.i16($M.1, $p205);
    call {:si_unique_call 536} {:cexpr "__cil_tmp131"} boogie_si_record_i16($i206);
    goto corral_source_split_1057;

  corral_source_split_1057:
    assume {:verifier.code 0} true;
    $i207 := $zext.i16.i32($i206);
    call {:si_unique_call 537} {:cexpr "__cil_tmp132"} boogie_si_record_i32($i207);
    goto corral_source_split_1058;

  corral_source_split_1058:
    assume {:verifier.code 0} true;
    $i208 := $ne.i32($i207, 65533);
    goto corral_source_split_1059;

  corral_source_split_1059:
    assume {:verifier.code 0} true;
    $i209, $i210, $i211, $i212 := $i122, $i123, $i124, $i165;
    assume true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i208 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    $i222 := $ne.i32($i181, 15465);
    goto corral_source_split_1077;

  corral_source_split_1077:
    assume {:verifier.code 0} true;
    $i223, $i224, $i225, $i226 := $i121, $i122, $i124, $i181;
    assume true;
    goto $bb57, $bb58;

  $bb58:
    assume !($i222 == 1);
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $i231 := $eq.i32($i165, 65534);
    goto corral_source_split_1088;

  corral_source_split_1088:
    assume {:verifier.code 0} true;
    $i232, $i233 := $i122, $i124;
    assume true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i231 == 1);
    goto corral_source_split_1099;

  corral_source_split_1099:
    assume {:verifier.code 0} true;
    $i240 := $eq.i32($i165, 65535);
    goto corral_source_split_1100;

  corral_source_split_1100:
    assume {:verifier.code 0} true;
    $i241, $i242 := $i122, $i124;
    assume true;
    goto $bb65, $bb66;

  $bb66:
    assume !($i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    $i249 := $p2i.ref.i64($p0);
    call {:si_unique_call 549} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i249);
    goto corral_source_split_1111;

  corral_source_split_1111:
    assume {:verifier.code 0} true;
    $i250 := $add.i64($i249, 560);
    call {:si_unique_call 550} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i250);
    goto corral_source_split_1112;

  corral_source_split_1112:
    assume {:verifier.code 0} true;
    $p251 := $i2p.i64.ref($i250);
    goto corral_source_split_1113;

  corral_source_split_1113:
    assume {:verifier.code 0} true;
    $i252 := $load.i32($M.1, $p251);
    call {:si_unique_call 551} {:cexpr "__cil_tmp150"} boogie_si_record_i32($i252);
    goto corral_source_split_1114;

  corral_source_split_1114:
    assume {:verifier.code 0} true;
    $i253 := $ule.i32($i252, $i165);
    goto corral_source_split_1115;

  corral_source_split_1115:
    assume {:verifier.code 0} true;
    $i254, $i255, $i256 := $i121, $i122, $i124;
    assume true;
    goto $bb69, $bb70;

  $bb70:
    assume !($i253 == 1);
    goto corral_source_split_1119;

  corral_source_split_1119:
    assume {:verifier.code 0} true;
    $i260 := $p2i.ref.i64($p0);
    call {:si_unique_call 552} {:cexpr "__cil_tmp151"} boogie_si_record_i64($i260);
    goto corral_source_split_1120;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    $i261 := $add.i64($i260, 560);
    call {:si_unique_call 553} {:cexpr "__cil_tmp152"} boogie_si_record_i64($i261);
    goto corral_source_split_1121;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    $p262 := $i2p.i64.ref($i261);
    goto corral_source_split_1122;

  corral_source_split_1122:
    assume {:verifier.code 0} true;
    $i263 := $load.i32($M.1, $p262);
    call {:si_unique_call 554} {:cexpr "__cil_tmp153"} boogie_si_record_i32($i263);
    goto corral_source_split_1123;

  corral_source_split_1123:
    assume {:verifier.code 0} true;
    $i264 := $ule.i32($i263, $i199);
    goto corral_source_split_1124;

  corral_source_split_1124:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i264 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    $i273 := $eq.i32($i122, 65535);
    goto corral_source_split_1140;

  corral_source_split_1140:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i273 == 1);
    goto corral_source_split_1144;

  corral_source_split_1144:
    assume {:verifier.code 0} true;
    $i275 := $ne.i32($i122, $i165);
    goto corral_source_split_1145;

  corral_source_split_1145:
    assume {:verifier.code 0} true;
    $i276 := $i122;
    assume true;
    goto $bb85, $bb86;

  $bb86:
    assume !($i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    $i274 := $i122;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    goto corral_source_split_1147;

  corral_source_split_1147:
    assume {:verifier.code 0} true;
    $i277 := $zext.i32.i64($i124);
    call {:si_unique_call 557} {:cexpr "__cil_tmp154"} boogie_si_record_i64($i277);
    goto corral_source_split_1148;

  corral_source_split_1148:
    assume {:verifier.code 0} true;
    $i278 := $p2i.ref.i64($p0);
    call {:si_unique_call 558} {:cexpr "__cil_tmp155"} boogie_si_record_i64($i278);
    goto corral_source_split_1149;

  corral_source_split_1149:
    assume {:verifier.code 0} true;
    $i279 := $add.i64($i278, 544);
    call {:si_unique_call 559} {:cexpr "__cil_tmp156"} boogie_si_record_i64($i279);
    goto corral_source_split_1150;

  corral_source_split_1150:
    assume {:verifier.code 0} true;
    $p280 := $i2p.i64.ref($i279);
    goto corral_source_split_1151;

  corral_source_split_1151:
    assume {:verifier.code 0} true;
    $p281 := $load.ref($M.1, $p280);
    goto corral_source_split_1152;

  corral_source_split_1152:
    assume {:verifier.code 0} true;
    $p282 := $add.ref($p281, $mul.ref($i277, 2));
    goto corral_source_split_1153;

  corral_source_split_1153:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p282, $sub.i16(0, 1));
    goto corral_source_split_1154;

  corral_source_split_1154:
    assume {:verifier.code 0} true;
    $i283 := $ne.i32($i123, 65535);
    goto corral_source_split_1155;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i283 == 1);
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $i291 := $eq.i32($i199, 65535);
    goto corral_source_split_1169;

  corral_source_split_1169:
    assume {:verifier.code 0} true;
    $i292 := $i274;
    assume true;
    goto $bb91, $bb92;

  $bb92:
    assume !($i291 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    $i293 := $p2i.ref.i64($p0);
    call {:si_unique_call 563} {:cexpr "__cil_tmp164"} boogie_si_record_i64($i293);
    goto corral_source_split_1173;

  corral_source_split_1173:
    assume {:verifier.code 0} true;
    $i294 := $add.i64($i293, 520);
    call {:si_unique_call 564} {:cexpr "__cil_tmp165"} boogie_si_record_i64($i294);
    goto corral_source_split_1174;

  corral_source_split_1174:
    assume {:verifier.code 0} true;
    $p295 := $i2p.i64.ref($i294);
    goto corral_source_split_1175;

  corral_source_split_1175:
    assume {:verifier.code 0} true;
    $i296 := $load.i16($M.1, $p295);
    call {:si_unique_call 565} {:cexpr "__cil_tmp166"} boogie_si_record_i16($i296);
    goto corral_source_split_1176;

  corral_source_split_1176:
    assume {:verifier.code 0} true;
    $i297 := $zext.i16.i32($i296);
    call {:si_unique_call 566} {:cexpr "__cil_tmp167"} boogie_si_record_i32($i297);
    goto corral_source_split_1177;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    $i298 := $ult.i32($i297, $i199);
    goto corral_source_split_1178;

  corral_source_split_1178:
    assume {:verifier.code 0} true;
    $i299, $i300 := $i199, $i274;
    assume true;
    goto $bb94, $bb95;

  $bb95:
    assume !($i298 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    $i303 := $add.i32($i121, 1);
    call {:si_unique_call 569} {:cexpr "chain_length"} boogie_si_record_i32($i303);
    goto corral_source_split_1184;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    $i121, $i122, $i123, $i124 := $i303, $i274, $i124, $i199;
    goto corral_source_split_1184_dummy;

  $bb94:
    assume $i298 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    call {:si_unique_call 567} vslice_dummy_var_42 := printk.ref.i32.i32(.str.25, $i299, $i110);
    goto corral_source_split_1181;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    $i302 := $add.i32(0, 1);
    call {:si_unique_call 568} {:cexpr "do_format_chain"} boogie_si_record_i32($i302);
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, $i302, $i300;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_978;

  corral_source_split_978:
    assume {:verifier.code 0} true;
    $i304 := $ne.i32($i137, 0);
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i304 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    $i305 := $zext.i32.i64($i138);
    call {:si_unique_call 571} {:cexpr "__cil_tmp168"} boogie_si_record_i64($i305);
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    $i306 := $p2i.ref.i64($p0);
    call {:si_unique_call 572} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i306);
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    $i307 := $add.i64($i306, 552);
    call {:si_unique_call 573} {:cexpr "__cil_tmp170"} boogie_si_record_i64($i307);
    goto corral_source_split_1191;

  corral_source_split_1191:
    assume {:verifier.code 0} true;
    $p308 := $i2p.i64.ref($i307);
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    $p309 := $load.ref($M.1, $p308);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    $p310 := $add.ref($p309, $mul.ref($i305, 2));
    goto corral_source_split_1194;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    $i311 := $trunc.i32.i16($i136);
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p310, $i311);
    goto corral_source_split_1196;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    $i120 := $i136;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_956;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    $i312 := $add.i32($i120, 1);
    call {:si_unique_call 485} {:cexpr "first_block"} boogie_si_record_i32($i312);
    goto corral_source_split_957;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    $i313 := $load.i16($M.1, $p105);
    call {:si_unique_call 486} {:cexpr "__cil_tmp175"} boogie_si_record_i16($i313);
    goto corral_source_split_958;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    $i314 := $zext.i16.i32($i313);
    call {:si_unique_call 487} {:cexpr "__cil_tmp176"} boogie_si_record_i32($i314);
    goto corral_source_split_959;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    $i315 := $uge.i32($i314, $i312);
    goto corral_source_split_960;

  corral_source_split_960:
    assume {:verifier.code 0} true;
    $i316 := $i312;
    assume true;
    goto $bb100, $bb101;

  $bb101:
    assume !($i315 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1198;

  corral_source_split_1198:
    assume {:verifier.code 0} true;
    $i109 := $i316;
    goto $bb24;

  $bb100:
    assume $i315 == 1;
    assume {:verifier.code 0} true;
    $i110 := $i312;
    goto $bb100_dummy;

  $bb97:
    assume $i304 == 1;
    goto corral_source_split_1186;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    call {:si_unique_call 570} format_chain($p0, $i136);
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    $i120 := $i136;
    goto $bb29;

  $bb91:
    assume $i291 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1171;

  corral_source_split_1171:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i292;
    goto $bb36;

  $bb88:
    assume $i283 == 1;
    goto corral_source_split_1159;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    $i284 := $zext.i32.i64($i123);
    call {:si_unique_call 560} {:cexpr "__cil_tmp159"} boogie_si_record_i64($i284);
    goto corral_source_split_1160;

  corral_source_split_1160:
    assume {:verifier.code 0} true;
    $i285 := $p2i.ref.i64($p0);
    call {:si_unique_call 561} {:cexpr "__cil_tmp160"} boogie_si_record_i64($i285);
    goto corral_source_split_1161;

  corral_source_split_1161:
    assume {:verifier.code 0} true;
    $i286 := $add.i64($i285, 544);
    call {:si_unique_call 562} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i286);
    goto corral_source_split_1162;

  corral_source_split_1162:
    assume {:verifier.code 0} true;
    $p287 := $i2p.i64.ref($i286);
    goto corral_source_split_1163;

  corral_source_split_1163:
    assume {:verifier.code 0} true;
    $p288 := $load.ref($M.1, $p287);
    goto corral_source_split_1164;

  corral_source_split_1164:
    assume {:verifier.code 0} true;
    $p289 := $add.ref($p288, $mul.ref($i284, 2));
    goto corral_source_split_1165;

  corral_source_split_1165:
    assume {:verifier.code 0} true;
    $i290 := $trunc.i32.i16($i124);
    goto corral_source_split_1166;

  corral_source_split_1166:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p289, $i290);
    goto corral_source_split_1167;

  corral_source_split_1167:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb85:
    assume $i275 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1157;

  corral_source_split_1157:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i276;
    goto $bb36;

  $bb82:
    assume $i273 == 1;
    goto corral_source_split_1142;

  corral_source_split_1142:
    assume {:verifier.code 0} true;
    $i274 := $i165;
    goto $bb84;

  $bb72:
    assume $i264 == 1;
    goto corral_source_split_1129;

  corral_source_split_1129:
    assume {:verifier.code 0} true;
    $i265 := $ne.i32($i199, 65535);
    goto corral_source_split_1130;

  corral_source_split_1130:
    assume {:verifier.code 0} true;
    $i266, $i267, $i268 := $i121, $i122, $i124;
    assume true;
    goto $bb74, $bb75;

  $bb75:
    assume !($i265 == 1);
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb74:
    assume $i265 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1132;

  corral_source_split_1132:
    assume {:verifier.code 0} true;
    $i257, $i258, $i259 := $i266, $i267, $i268;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1126;

  corral_source_split_1126:
    assume {:verifier.code 0} true;
    $i269 := $sgt.i32($i257, 0);
    goto corral_source_split_1127;

  corral_source_split_1127:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76, $bb77;

  $bb77:
    assume !($i269 == 1);
    assume {:verifier.code 0} true;
    $i272 := 0;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto corral_source_split_1138;

  corral_source_split_1138:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, $i272, $i258;
    goto $bb36;

  $bb76:
    assume $i269 == 1;
    goto corral_source_split_1134;

  corral_source_split_1134:
    assume {:verifier.code 0} true;
    call {:si_unique_call 555} vslice_dummy_var_41 := printk.ref.i32.i32(.str.24, $i259, $i110);
    goto corral_source_split_1135;

  corral_source_split_1135:
    assume {:verifier.code 0} true;
    $i271 := $add.i32(0, 1);
    call {:si_unique_call 556} {:cexpr "do_format_chain"} boogie_si_record_i32($i271);
    goto corral_source_split_1136;

  corral_source_split_1136:
    assume {:verifier.code 0} true;
    $i272 := $i271;
    goto $bb78;

  $bb69:
    assume $i253 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1117;

  corral_source_split_1117:
    assume {:verifier.code 0} true;
    $i257, $i258, $i259 := $i254, $i255, $i256;
    goto $bb71;

  $bb65:
    assume $i240 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1102;

  corral_source_split_1102:
    assume {:verifier.code 0} true;
    $i243 := $zext.i32.i64($i242);
    call {:si_unique_call 546} {:cexpr "__cil_tmp143"} boogie_si_record_i64($i243);
    goto corral_source_split_1103;

  corral_source_split_1103:
    assume {:verifier.code 0} true;
    $i244 := $p2i.ref.i64($p0);
    call {:si_unique_call 547} {:cexpr "__cil_tmp144"} boogie_si_record_i64($i244);
    goto corral_source_split_1104;

  corral_source_split_1104:
    assume {:verifier.code 0} true;
    $i245 := $add.i64($i244, 544);
    call {:si_unique_call 548} {:cexpr "__cil_tmp145"} boogie_si_record_i64($i245);
    goto corral_source_split_1105;

  corral_source_split_1105:
    assume {:verifier.code 0} true;
    $p246 := $i2p.i64.ref($i245);
    goto corral_source_split_1106;

  corral_source_split_1106:
    assume {:verifier.code 0} true;
    $p247 := $load.ref($M.1, $p246);
    goto corral_source_split_1107;

  corral_source_split_1107:
    assume {:verifier.code 0} true;
    $p248 := $add.ref($p247, $mul.ref($i243, 2));
    goto corral_source_split_1108;

  corral_source_split_1108:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p248, $sub.i16(0, 2));
    goto corral_source_split_1109;

  corral_source_split_1109:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i241;
    goto $bb36;

  $bb63:
    assume $i231 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1090;

  corral_source_split_1090:
    assume {:verifier.code 0} true;
    $i234 := $zext.i32.i64($i233);
    call {:si_unique_call 543} {:cexpr "__cil_tmp138"} boogie_si_record_i64($i234);
    goto corral_source_split_1091;

  corral_source_split_1091:
    assume {:verifier.code 0} true;
    $i235 := $p2i.ref.i64($p0);
    call {:si_unique_call 544} {:cexpr "__cil_tmp139"} boogie_si_record_i64($i235);
    goto corral_source_split_1092;

  corral_source_split_1092:
    assume {:verifier.code 0} true;
    $i236 := $add.i64($i235, 544);
    call {:si_unique_call 545} {:cexpr "__cil_tmp140"} boogie_si_record_i64($i236);
    goto corral_source_split_1093;

  corral_source_split_1093:
    assume {:verifier.code 0} true;
    $p237 := $i2p.i64.ref($i236);
    goto corral_source_split_1094;

  corral_source_split_1094:
    assume {:verifier.code 0} true;
    $p238 := $load.ref($M.1, $p237);
    goto corral_source_split_1095;

  corral_source_split_1095:
    assume {:verifier.code 0} true;
    $p239 := $add.ref($p238, $mul.ref($i234, 2));
    goto corral_source_split_1096;

  corral_source_split_1096:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p239, $sub.i16(0, 2));
    goto corral_source_split_1097;

  corral_source_split_1097:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i232;
    goto $bb36;

  $bb57:
    assume $i222 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1079;

  corral_source_split_1079:
    assume {:verifier.code 0} true;
    call {:si_unique_call 541} vslice_dummy_var_40 := printk.ref.i32.i32.i32.i32(.str.23, $i225, $i110, $i223, $i226);
    goto corral_source_split_1080;

  corral_source_split_1080:
    assume {:verifier.code 0} true;
    $i228 := $eq.i32($i223, 0);
    goto corral_source_split_1081;

  corral_source_split_1081:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb59, $bb60;

  $bb60:
    assume !($i228 == 1);
    assume {:verifier.code 0} true;
    $i230 := 0;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    goto corral_source_split_1086;

  corral_source_split_1086:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, $i230, $i224;
    goto $bb36;

  $bb59:
    assume $i228 == 1;
    goto corral_source_split_1083;

  corral_source_split_1083:
    assume {:verifier.code 0} true;
    $i229 := $add.i32(0, 1);
    call {:si_unique_call 542} {:cexpr "do_format_chain"} boogie_si_record_i32($i229);
    goto corral_source_split_1084;

  corral_source_split_1084:
    assume {:verifier.code 0} true;
    $i230 := $i229;
    goto $bb61;

  $bb48:
    assume $i208 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1061;

  corral_source_split_1061:
    assume {:verifier.code 0} true;
    $i213 := $eq.i32($i212, $i209);
    goto corral_source_split_1062;

  corral_source_split_1062:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb50, $bb51;

  $bb51:
    assume !($i213 == 1);
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i209;
    goto $bb36;

  $bb50:
    assume $i213 == 1;
    goto corral_source_split_1064;

  corral_source_split_1064:
    assume {:verifier.code 0} true;
    $i214 := $ne.i32($i210, 65535);
    goto corral_source_split_1065;

  corral_source_split_1065:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i214 == 1);
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb52:
    assume $i214 == 1;
    goto corral_source_split_1067;

  corral_source_split_1067:
    assume {:verifier.code 0} true;
    $i215 := $zext.i32.i64($i210);
    call {:si_unique_call 538} {:cexpr "__cil_tmp133"} boogie_si_record_i64($i215);
    goto corral_source_split_1068;

  corral_source_split_1068:
    assume {:verifier.code 0} true;
    $i216 := $p2i.ref.i64($p0);
    call {:si_unique_call 539} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i216);
    goto corral_source_split_1069;

  corral_source_split_1069:
    assume {:verifier.code 0} true;
    $i217 := $add.i64($i216, 544);
    call {:si_unique_call 540} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i217);
    goto corral_source_split_1070;

  corral_source_split_1070:
    assume {:verifier.code 0} true;
    $p218 := $i2p.i64.ref($i217);
    goto corral_source_split_1071;

  corral_source_split_1071:
    assume {:verifier.code 0} true;
    $p219 := $load.ref($M.1, $p218);
    goto corral_source_split_1072;

  corral_source_split_1072:
    assume {:verifier.code 0} true;
    $p220 := $add.ref($p219, $mul.ref($i215, 2));
    goto corral_source_split_1073;

  corral_source_split_1073:
    assume {:verifier.code 0} true;
    $i221 := $trunc.i32.i16($i211);
    goto corral_source_split_1074;

  corral_source_split_1074:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p220, $i221);
    goto corral_source_split_1075;

  corral_source_split_1075:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb45:
    assume $i192 == 1;
    goto corral_source_split_1042;

  corral_source_split_1042:
    assume {:verifier.code 0} true;
    $i193 := $p2i.ref.i64($p0);
    call {:si_unique_call 528} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i193);
    goto corral_source_split_1043;

  corral_source_split_1043:
    assume {:verifier.code 0} true;
    $i194 := $add.i64($i193, 518);
    call {:si_unique_call 529} {:cexpr "__cil_tmp123"} boogie_si_record_i64($i194);
    goto corral_source_split_1044;

  corral_source_split_1044:
    assume {:verifier.code 0} true;
    $p195 := $i2p.i64.ref($i194);
    goto corral_source_split_1045;

  corral_source_split_1045:
    assume {:verifier.code 0} true;
    $i196 := $load.i16($M.1, $p195);
    call {:si_unique_call 530} {:cexpr "__cil_tmp124"} boogie_si_record_i16($i196);
    goto corral_source_split_1046;

  corral_source_split_1046:
    assume {:verifier.code 0} true;
    $i197 := $zext.i16.i32($i196);
    call {:si_unique_call 531} {:cexpr "__cil_tmp125"} boogie_si_record_i32($i197);
    goto corral_source_split_1047;

  corral_source_split_1047:
    assume {:verifier.code 0} true;
    $i198 := $add.i32($i197, $i170);
    call {:si_unique_call 532} {:cexpr "prev_block"} boogie_si_record_i32($i198);
    goto corral_source_split_1048;

  corral_source_split_1048:
    assume {:verifier.code 0} true;
    $i199 := $i198;
    goto $bb47;

  $bb41:
    assume $i160 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    $i162 := $add.i32(0, 1);
    call {:si_unique_call 510} {:cexpr "do_format_chain"} boogie_si_record_i32($i162);
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, $i162, $i161;
    goto $bb36;

  $bb39:
    assume $i148 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    $i150 := $add.i32(0, 1);
    call {:si_unique_call 501} {:cexpr "do_format_chain"} boogie_si_record_i32($i150);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, $i150, $i149;
    goto $bb36;

  $bb32:
    assume $i125 == 1;
    goto corral_source_split_965;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    $i126 := $zext.i32.i64($i124);
    call {:si_unique_call 488} {:cexpr "__cil_tmp84"} boogie_si_record_i64($i126);
    goto corral_source_split_966;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    $i127 := $p2i.ref.i64($p0);
    call {:si_unique_call 489} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i127);
    goto corral_source_split_967;

  corral_source_split_967:
    assume {:verifier.code 0} true;
    $i128 := $add.i64($i127, 544);
    call {:si_unique_call 490} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i128);
    goto corral_source_split_968;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    $p129 := $i2p.i64.ref($i128);
    goto corral_source_split_969;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    $p130 := $load.ref($M.1, $p129);
    goto corral_source_split_970;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    $p131 := $add.ref($p130, $mul.ref($i126, 2));
    goto corral_source_split_971;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    $i132 := $load.i16($M.1, $p131);
    call {:si_unique_call 491} {:cexpr "__cil_tmp89"} boogie_si_record_i16($i132);
    goto corral_source_split_972;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    $i133 := $zext.i16.i32($i132);
    call {:si_unique_call 492} {:cexpr "__cil_tmp90"} boogie_si_record_i32($i133);
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    $i134 := $ne.i32($i133, 65533);
    goto corral_source_split_974;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    $i135 := $i122;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb34:
    assume $i134 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_976;

  corral_source_split_976:
    assume {:verifier.code 0} true;
    $i136, $i137, $i138 := $i110, 0, $i135;
    goto $bb36;

  $bb27:
    assume $i119 == 1;
    goto corral_source_split_954;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    $i120 := $i110;
    goto $bb29;

  $bb19:
    assume $i96 == 1;
    goto corral_source_split_923;

  corral_source_split_923:
    assume {:verifier.code 0} true;
    call {:si_unique_call 471} vslice_dummy_var_39 := __dynamic_pr_debug.ref.ref($p5, .str.22);
    goto corral_source_split_924;

  corral_source_split_924:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb16:
    assume $i65 == 1;
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p0);
    call {:si_unique_call 455} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i66);
    goto corral_source_split_884;

  corral_source_split_884:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 560);
    call {:si_unique_call 456} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i67);
    goto corral_source_split_885;

  corral_source_split_885:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    $i69 := $load.i32($M.1, $p68);
    call {:si_unique_call 457} {:cexpr "__cil_tmp62"} boogie_si_record_i32($i69);
    goto corral_source_split_887;

  corral_source_split_887:
    assume {:verifier.code 0} true;
    $i70 := $zext.i32.i64($i69);
    call {:si_unique_call 458} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i70);
    goto corral_source_split_888;

  corral_source_split_888:
    assume {:verifier.code 0} true;
    call {:si_unique_call 459} vslice_dummy_var_38 := printk.ref.i64(.str.21, $i70);
    goto corral_source_split_889;

  corral_source_split_889:
    assume {:verifier.code 0} true;
    $i41 := $sub.i32(0, 12);
    goto $bb6;

  SeqInstr_13:
    assume !assertsPassed;
    return;

  $bb8:
    assume $i46 == 1;
    goto corral_source_split_856;

  corral_source_split_856:
    assume {:verifier.code 0} true;
    $i47 := 0;
    goto $bb11;

  $bb11:
    call $i48, $i49, $i50, $p51, $p52, $p53, $i54, $i55, $i56, $i47 := INFTL_mount_loop_$bb11($p0, $p44, $i48, $i49, $i50, $p51, $p52, $p53, $i54, $i55, $i56, $i47);
    goto $bb11_last;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i48 := $sext.i32.i64($i47);
    call {:si_unique_call 443} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i48);
    goto corral_source_split_860;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p0);
    call {:si_unique_call 444} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i49);
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 552);
    call {:si_unique_call 445} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i50);
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    $p52 := $load.ref($M.1, $p51);
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    $p53 := $add.ref($p52, $mul.ref($i48, 2));
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p53, $sub.i16(0, 1));
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    $i54 := $add.i32($i47, 1);
    call {:si_unique_call 446} {:cexpr "i"} boogie_si_record_i32($i54);
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    $i55 := $load.i32($M.1, $p44);
    call {:si_unique_call 447} {:cexpr "__cil_tmp51"} boogie_si_record_i32($i55);
    goto corral_source_split_868;

  corral_source_split_868:
    assume {:verifier.code 0} true;
    $i56 := $ult.i32($i54, $i55);
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i56 == 1);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb13:
    assume $i56 == 1;
    assume {:verifier.code 0} true;
    $i47 := $i54;
    goto $bb13_dummy;

  $bb4:
    assume $i39 == 1;
    goto corral_source_split_845;

  corral_source_split_845:
    assume {:verifier.code 0} true;
    call {:si_unique_call 439} vslice_dummy_var_37 := printk.ref(.str.20);
    goto corral_source_split_846;

  corral_source_split_846:
    assume {:verifier.code 0} true;
    $i41 := $sub.i32(0, 6);
    goto $bb6;

  SeqInstr_10:
    assume !assertsPassed;
    return;

  $bb1:
    assume $i36 == 1;
    goto corral_source_split_839;

  corral_source_split_839:
    assume {:verifier.code 0} true;
    call {:si_unique_call 436} vslice_dummy_var_36 := __dynamic_pr_debug.ref.ref.ref($p4, .str.19, $p0);
    goto corral_source_split_840;

  corral_source_split_840:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb158_dummy:
    assume false;
    return;

  $bb144_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1439;

  $bb130_dummy:
    assume false;
    return;

  $bb118_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1279;

  $bb135_dummy:
    assume false;
    return;

  $bb109_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1245;

  corral_source_split_1184_dummy:
    assume false;
    return;

  $bb31_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_962;

  $bb100_dummy:
    assume false;
    return;

  $bb25_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_942;

  $bb13_dummy:
    assume false;
    return;

  $bb11_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_858;
}



const add_mtd_blktrans_dev: ref;

axiom add_mtd_blktrans_dev == $sub.ref(0, 133545);

procedure add_mtd_blktrans_dev($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation add_mtd_blktrans_dev($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_1518;

  corral_source_split_1518:
    assume {:verifier.code 1} true;
    call {:si_unique_call 715} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 716} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_1519;

  corral_source_split_1519:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const find_boot_record: ref;

axiom find_boot_record == $sub.ref(0, 134577);

procedure find_boot_record($p0: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, assertsPassed, $M.7, $M.8, $M.9, $M.10;



implementation find_boot_record($p0: ref) returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i8;
  var $i34: i64;
  var $i35: i64;
  var $i36: i32;
  var $i37: i64;
  var $i38: i1;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i32;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $i56: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i64;
  var $i65: i32;
  var $i66: i32;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i64;
  var $p83: ref;
  var $i84: i32;
  var $i85: i64;
  var $i86: i1;
  var $i87: i1;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i32;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $p96: ref;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $i100: i32;
  var $i102: i32;
  var $i103: i1;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $i108: i32;
  var $i109: i1;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i32;
  var $i114: i32;
  var $i115: i32;
  var $i116: i64;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $p129: ref;
  var $i130: i64;
  var $i131: i64;
  var $p132: ref;
  var $i133: i32;
  var $i120: i32;
  var $i135: i1;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i64;
  var $p147: ref;
  var $i149: i64;
  var $i150: i1;
  var $p153: ref;
  var $p154: ref;
  var $i155: i32;
  var $i156: i1;
  var $i158: i64;
  var $i159: i64;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $p164: ref;
  var $i165: i64;
  var $i166: i64;
  var $i167: i64;
  var $i168: i64;
  var $p169: ref;
  var $i170: i32;
  var $p171: ref;
  var $i172: i64;
  var $i173: i64;
  var $i174: i64;
  var $i175: i64;
  var $p176: ref;
  var $i177: i32;
  var $p178: ref;
  var $i179: i64;
  var $i180: i64;
  var $i181: i64;
  var $i182: i64;
  var $p183: ref;
  var $i184: i32;
  var $p185: ref;
  var $i186: i64;
  var $i187: i64;
  var $i188: i64;
  var $i189: i64;
  var $p190: ref;
  var $i191: i32;
  var $p192: ref;
  var $i193: i64;
  var $i194: i64;
  var $i195: i64;
  var $i196: i64;
  var $p197: ref;
  var $i198: i32;
  var $p199: ref;
  var $p200: ref;
  var $i201: i64;
  var $i202: i64;
  var $p203: ref;
  var $i204: i64;
  var $i205: i64;
  var $p206: ref;
  var $i207: i64;
  var $i208: i64;
  var $p209: ref;
  var $i210: i64;
  var $i211: i64;
  var $p212: ref;
  var $i213: i64;
  var $i214: i64;
  var $p215: ref;
  var $i216: i64;
  var $i217: i64;
  var $p218: ref;
  var $i219: i8;
  var $i220: i64;
  var $i221: i64;
  var $i222: i32;
  var $i223: i64;
  var $i224: i1;
  var $p225: ref;
  var $p226: ref;
  var $i227: i64;
  var $i228: i64;
  var $p229: ref;
  var $i230: i32;
  var $i231: i64;
  var $i232: i64;
  var $p233: ref;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $p237: ref;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $p241: ref;
  var $i242: i32;
  var $i243: i64;
  var $i244: i64;
  var $p245: ref;
  var $i246: i32;
  var $i247: i64;
  var $i248: i64;
  var $p249: ref;
  var $i250: i32;
  var $i251: i64;
  var $i252: i64;
  var $p253: ref;
  var $i254: i32;
  var $i256: i64;
  var $i257: i64;
  var $p258: ref;
  var $i259: i32;
  var $i260: i1;
  var $i261: i64;
  var $i262: i64;
  var $p263: ref;
  var $i264: i32;
  var $i266: i64;
  var $i267: i64;
  var $p268: ref;
  var $i269: i32;
  var $i270: i64;
  var $i271: i64;
  var $p272: ref;
  var $i273: i32;
  var $i274: i32;
  var $i275: i1;
  var $i276: i64;
  var $i277: i64;
  var $p278: ref;
  var $i279: i32;
  var $i280: i64;
  var $i281: i64;
  var $p282: ref;
  var $i283: i32;
  var $i284: i32;
  var $i285: i64;
  var $i286: i64;
  var $p287: ref;
  var $i288: i32;
  var $i289: i64;
  var $i290: i64;
  var $p291: ref;
  var $i292: i32;
  var $i294: i64;
  var $i295: i64;
  var $p296: ref;
  var $i297: i32;
  var $i298: i1;
  var $i299: i64;
  var $i300: i64;
  var $p301: ref;
  var $i302: i32;
  var $i304: i64;
  var $i305: i64;
  var $p306: ref;
  var $i307: i32;
  var $i308: i1;
  var $i309: i64;
  var $i310: i64;
  var $p311: ref;
  var $i312: i32;
  var $i314: i64;
  var $i315: i64;
  var $i316: i64;
  var $i317: i64;
  var $p318: ref;
  var $i319: i32;
  var $i320: i64;
  var $i321: i64;
  var $p322: ref;
  var $p323: ref;
  var $i324: i64;
  var $i325: i64;
  var $p326: ref;
  var $i327: i32;
  var $i328: i32;
  var $p329: ref;
  var $i330: i64;
  var $i331: i64;
  var $i332: i64;
  var $i333: i64;
  var $p334: ref;
  var $i335: i32;
  var $i336: i64;
  var $i337: i64;
  var $p338: ref;
  var $p339: ref;
  var $i340: i64;
  var $i341: i64;
  var $p342: ref;
  var $i343: i64;
  var $i344: i32;
  var $i345: i32;
  var $p346: ref;
  var $i347: i64;
  var $i348: i64;
  var $p349: ref;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i64;
  var $i354: i64;
  var $p355: ref;
  var $p356: ref;
  var $p357: ref;
  var $i358: i32;
  var $p359: ref;
  var $i360: i64;
  var $i361: i64;
  var $i362: i64;
  var $i363: i64;
  var $p364: ref;
  var $i365: i32;
  var $p366: ref;
  var $i367: i64;
  var $i368: i64;
  var $i369: i64;
  var $i370: i64;
  var $p371: ref;
  var $i372: i32;
  var $p373: ref;
  var $i374: i64;
  var $i375: i64;
  var $i376: i64;
  var $i377: i64;
  var $p378: ref;
  var $i379: i32;
  var $p380: ref;
  var $i381: i64;
  var $i382: i64;
  var $i383: i64;
  var $i384: i64;
  var $p385: ref;
  var $i386: i32;
  var $p387: ref;
  var $i388: i64;
  var $i389: i64;
  var $i390: i64;
  var $i391: i64;
  var $p392: ref;
  var $i393: i32;
  var $p394: ref;
  var $p395: ref;
  var $i396: i64;
  var $i397: i64;
  var $p398: ref;
  var $i399: i64;
  var $i400: i64;
  var $p401: ref;
  var $i402: i64;
  var $i403: i64;
  var $p404: ref;
  var $i405: i64;
  var $i406: i64;
  var $p407: ref;
  var $i408: i64;
  var $i409: i64;
  var $p410: ref;
  var $i411: i64;
  var $i412: i64;
  var $p413: ref;
  var $i414: i8;
  var $i415: i64;
  var $i416: i64;
  var $i417: i32;
  var $i418: i64;
  var $i419: i1;
  var $p420: ref;
  var $i421: i32;
  var $i422: i64;
  var $i423: i64;
  var $p424: ref;
  var $i425: i32;
  var $i426: i64;
  var $i427: i64;
  var $p428: ref;
  var $i429: i32;
  var $i430: i64;
  var $i431: i64;
  var $p432: ref;
  var $i433: i32;
  var $i434: i64;
  var $i435: i64;
  var $p436: ref;
  var $i437: i32;
  var $i439: i64;
  var $i440: i64;
  var $p441: ref;
  var $i442: i32;
  var $i443: i64;
  var $i444: i64;
  var $p445: ref;
  var $i446: i32;
  var $i447: i1;
  var $i448: i64;
  var $i449: i64;
  var $p450: ref;
  var $i451: i64;
  var $i452: i64;
  var $p453: ref;
  var $p454: ref;
  var $p455: ref;
  var $i456: i64;
  var $i457: i64;
  var $i458: i64;
  var $i459: i64;
  var $p460: ref;
  var $i461: i32;
  var $i462: i64;
  var $i463: i64;
  var $p464: ref;
  var $i465: i32;
  var $i466: i32;
  var $i467: i64;
  var $p468: ref;
  var $i469: i64;
  var $i470: i64;
  var $i471: i64;
  var $i472: i64;
  var $p473: ref;
  var $i474: i32;
  var $i475: i64;
  var $p476: ref;
  var $p478: ref;
  var $i479: i32;
  var $i480: i64;
  var $i481: i64;
  var $p482: ref;
  var $i483: i32;
  var $i484: i64;
  var $i485: i64;
  var $p486: ref;
  var $i487: i32;
  var $i488: i32;
  var $i489: i32;
  var $i490: i1;
  var $i491: i32;
  var $p492: ref;
  var $i493: i64;
  var $i494: i64;
  var $p495: ref;
  var $i496: i32;
  var $i497: i64;
  var $i498: i64;
  var $p499: ref;
  var $i500: i32;
  var $i501: i64;
  var $i502: i64;
  var $p503: ref;
  var $i504: i32;
  var $i506: i64;
  var $i507: i64;
  var $p508: ref;
  var $i509: i32;
  var $i510: i1;
  var $i511: i32;
  var $p512: ref;
  var $i513: i64;
  var $i514: i64;
  var $p515: ref;
  var $i516: i32;
  var $i518: i64;
  var $i519: i64;
  var $p520: ref;
  var $i521: i32;
  var $i522: i32;
  var $i523: i1;
  var $i524: i32;
  var $p525: ref;
  var $i526: i32;
  var $p527: ref;
  var $i528: i1;
  var $i530: i64;
  var $i531: i64;
  var $i532: i64;
  var $i533: i64;
  var $p534: ref;
  var $i535: i32;
  var $p536: ref;
  var $i537: i64;
  var $i538: i64;
  var $p539: ref;
  var $i540: i32;
  var $i541: i16;
  var $p542: ref;
  var $i543: i64;
  var $i544: i64;
  var $p545: ref;
  var $i546: i32;
  var $i547: i64;
  var $i548: i64;
  var $p549: ref;
  var $i550: i32;
  var $i551: i32;
  var $i552: i32;
  var $i553: i64;
  var $i554: i64;
  var $p555: ref;
  var $i556: i16;
  var $i557: i32;
  var $i558: i1;
  var $i559: i64;
  var $i560: i64;
  var $p561: ref;
  var $i562: i16;
  var $i563: i32;
  var $i564: i64;
  var $i565: i64;
  var $p566: ref;
  var $i567: i32;
  var $i568: i64;
  var $i569: i64;
  var $p570: ref;
  var $i571: i32;
  var $i573: i64;
  var $i574: i64;
  var $i575: i64;
  var $i576: i64;
  var $p577: ref;
  var $i578: i32;
  var $i579: i32;
  var $i580: i64;
  var $i581: i64;
  var $p582: ref;
  var $i583: i16;
  var $i584: i32;
  var $i585: i32;
  var $i586: i64;
  var $p587: ref;
  var $i588: i64;
  var $i589: i64;
  var $i590: i64;
  var $i591: i64;
  var $p592: ref;
  var $i593: i32;
  var $i594: i16;
  var $p595: ref;
  var $i596: i64;
  var $i597: i64;
  var $i598: i64;
  var $i599: i64;
  var $p600: ref;
  var $i601: i32;
  var $i602: i16;
  var $p603: ref;
  var $i604: i64;
  var $i605: i64;
  var $i606: i64;
  var $i607: i64;
  var $p608: ref;
  var $i609: i32;
  var $i610: i32;
  var $p611: ref;
  var $i612: i64;
  var $i613: i64;
  var $p614: ref;
  var $i615: i32;
  var $i616: i64;
  var $i617: i64;
  var $p618: ref;
  var $i619: i64;
  var $i620: i64;
  var $p622: ref;
  var $i623: i64;
  var $i624: i64;
  var $i625: i64;
  var $p626: ref;
  var $p627: ref;
  var $i628: i64;
  var $i629: i1;
  var $i630: i64;
  var $i631: i64;
  var $p632: ref;
  var $i633: i32;
  var $i634: i64;
  var $i635: i64;
  var $i637: i64;
  var $i638: i64;
  var $p639: ref;
  var $i640: i32;
  var $i641: i64;
  var $i642: i64;
  var $p643: ref;
  var $i644: i64;
  var $i645: i64;
  var $p647: ref;
  var $i648: i64;
  var $i649: i64;
  var $i650: i64;
  var $p651: ref;
  var $p652: ref;
  var $i653: i64;
  var $i654: i1;
  var $i655: i64;
  var $i656: i64;
  var $p657: ref;
  var $p658: ref;
  var $p659: ref;
  var $i660: i64;
  var $i661: i64;
  var $p662: ref;
  var $i663: i32;
  var $i664: i64;
  var $i665: i64;
  var $i667: i64;
  var $i668: i64;
  var $p669: ref;
  var $i670: i32;
  var $i671: i1;
  var $i674: i64;
  var $i675: i64;
  var $i676: i64;
  var $p677: ref;
  var $p678: ref;
  var $p679: ref;
  var $i680: i32;
  var $i681: i32;
  var $i682: i1;
  var $i673: i32;
  var $i683: i32;
  var $i672: i32;
  var $i684: i64;
  var $i685: i64;
  var $p686: ref;
  var $i687: i32;
  var $i688: i1;
  var $i690: i64;
  var $i691: i64;
  var $i692: i64;
  var $p693: ref;
  var $p694: ref;
  var $p695: ref;
  var $i696: i32;
  var $i697: i32;
  var $i698: i1;
  var $i689: i32;
  var $i699: i64;
  var $i700: i64;
  var $i701: i64;
  var $p702: ref;
  var $p703: ref;
  var $p704: ref;
  var $i705: i64;
  var $i706: i64;
  var $p707: ref;
  var $i708: i32;
  var $i709: i1;
  var $i711: i64;
  var $i712: i64;
  var $p713: ref;
  var $i714: i32;
  var $i715: i1;
  var $i717: i64;
  var $i718: i64;
  var $p719: ref;
  var $p720: ref;
  var $i721: i64;
  var $i722: i64;
  var $p723: ref;
  var $i724: i32;
  var $i725: i32;
  var $i726: i32;
  var $i727: i64;
  var $i728: i32;
  var $i729: i1;
  var $i730: i64;
  var $i731: i64;
  var $i732: i64;
  var $p733: ref;
  var $p734: ref;
  var $p735: ref;
  var $i736: i64;
  var $i737: i64;
  var $p738: ref;
  var $p739: ref;
  var $i740: i64;
  var $i741: i64;
  var $p742: ref;
  var $i743: i32;
  var $i744: i32;
  var $i745: i32;
  var $i746: i1;
  var $i716: i32;
  var $i747: i32;
  var $i748: i32;
  var $i749: i1;
  var $i710: i32;
  var $i750: i64;
  var $i751: i64;
  var $i752: i16;
  var $p753: ref;
  var $i754: i32;
  var $i755: i32;
  var $i756: i1;
  var $i76: i32;
  var $i152: i32;
  var $i757: i64;
  var $i758: i64;
  var $p759: ref;
  var $p760: ref;
  var $p761: ref;
  var $p762: ref;
  var $i763: i32;
  var $p764: ref;
  var $i765: i64;
  var $i766: i64;
  var $i767: i64;
  var $i768: i64;
  var $p769: ref;
  var $i770: i32;
  var $p771: ref;
  var $i772: i64;
  var $i773: i64;
  var $i774: i64;
  var $i775: i64;
  var $p776: ref;
  var $i777: i32;
  var $p778: ref;
  var $i779: i64;
  var $i780: i64;
  var $i781: i64;
  var $i782: i64;
  var $p783: ref;
  var $i784: i32;
  var $p785: ref;
  var $i786: i64;
  var $i787: i64;
  var $i788: i64;
  var $i789: i64;
  var $p790: ref;
  var $i791: i32;
  var $p792: ref;
  var $i793: i64;
  var $i794: i64;
  var $i795: i64;
  var $i796: i64;
  var $p797: ref;
  var $i798: i32;
  var $p799: ref;
  var $p800: ref;
  var $i801: i64;
  var $i802: i64;
  var $p803: ref;
  var $i804: i64;
  var $i805: i64;
  var $p806: ref;
  var $i807: i64;
  var $i808: i64;
  var $p809: ref;
  var $i810: i64;
  var $i811: i64;
  var $p812: ref;
  var $i813: i64;
  var $i814: i64;
  var $p815: ref;
  var $i816: i64;
  var $i817: i64;
  var $p818: ref;
  var $i819: i8;
  var $i820: i64;
  var $i821: i64;
  var $i822: i32;
  var $i823: i64;
  var $i824: i1;
  var $p825: ref;
  var $i826: i32;
  var $i827: i64;
  var $i828: i64;
  var $p829: ref;
  var $i830: i32;
  var $i831: i64;
  var $i832: i64;
  var $p833: ref;
  var $i834: i32;
  var $i835: i64;
  var $i836: i64;
  var $p837: ref;
  var $i838: i32;
  var $i839: i64;
  var $i840: i64;
  var $p841: ref;
  var $i842: i32;
  var $i844: i64;
  var $i845: i64;
  var $p846: ref;
  var $i847: i32;
  var $i848: i64;
  var $i849: i64;
  var $p850: ref;
  var $i851: i32;
  var $i852: i1;
  var $i853: i64;
  var $i854: i64;
  var $p855: ref;
  var $i856: i64;
  var $i857: i64;
  var $p858: ref;
  var $p859: ref;
  var $p860: ref;
  var $i861: i64;
  var $i862: i64;
  var $i863: i64;
  var $i864: i64;
  var $p865: ref;
  var $i866: i32;
  var $i867: i64;
  var $i868: i64;
  var $p869: ref;
  var $i870: i32;
  var $i871: i32;
  var $i872: i64;
  var $p873: ref;
  var $i874: i64;
  var $i875: i64;
  var $i876: i64;
  var $i877: i64;
  var $p878: ref;
  var $i879: i32;
  var $i880: i64;
  var $p881: ref;
  var $p883: ref;
  var $i884: i32;
  var $i885: i64;
  var $i886: i64;
  var $p887: ref;
  var $i888: i32;
  var $i889: i64;
  var $i890: i64;
  var $p891: ref;
  var $i892: i32;
  var $i893: i32;
  var $i894: i32;
  var $i895: i1;
  var $i896: i64;
  var $i897: i64;
  var $p898: ref;
  var $i899: i32;
  var $i900: i1;
  var $i901: i64;
  var $i902: i64;
  var $p903: ref;
  var $i904: i32;
  var $i905: i32;
  var $i906: i1;
  var $i907: i64;
  var $i908: i64;
  var $p909: ref;
  var $p910: ref;
  var $p911: ref;
  var $p912: ref;
  var $i913: i32;
  var $p914: ref;
  var $i915: i64;
  var $i916: i64;
  var $i917: i64;
  var $i918: i64;
  var $p919: ref;
  var $i920: i32;
  var $p921: ref;
  var $i922: i64;
  var $i923: i64;
  var $i924: i64;
  var $i925: i64;
  var $p926: ref;
  var $i927: i32;
  var $p928: ref;
  var $i929: i64;
  var $i930: i64;
  var $i931: i64;
  var $i932: i64;
  var $p933: ref;
  var $i934: i32;
  var $p935: ref;
  var $i936: i64;
  var $i937: i64;
  var $i938: i64;
  var $i939: i64;
  var $p940: ref;
  var $i941: i32;
  var $p942: ref;
  var $i943: i64;
  var $i944: i64;
  var $i945: i64;
  var $i946: i64;
  var $p947: ref;
  var $i948: i32;
  var $p949: ref;
  var $p950: ref;
  var $i951: i64;
  var $i952: i64;
  var $p953: ref;
  var $i954: i64;
  var $i955: i64;
  var $p956: ref;
  var $i957: i64;
  var $i958: i64;
  var $p959: ref;
  var $i960: i64;
  var $i961: i64;
  var $p962: ref;
  var $i963: i64;
  var $i964: i64;
  var $p965: ref;
  var $i966: i64;
  var $i967: i64;
  var $p968: ref;
  var $i969: i8;
  var $i970: i64;
  var $i971: i64;
  var $i972: i32;
  var $i973: i64;
  var $i974: i1;
  var $p975: ref;
  var $i976: i32;
  var $i977: i64;
  var $i978: i64;
  var $p979: ref;
  var $i980: i32;
  var $i981: i64;
  var $i982: i64;
  var $p983: ref;
  var $i984: i32;
  var $i985: i64;
  var $i986: i64;
  var $p987: ref;
  var $i988: i32;
  var $i989: i64;
  var $i990: i64;
  var $p991: ref;
  var $i992: i32;
  var $i994: i64;
  var $i995: i64;
  var $p996: ref;
  var $i997: i32;
  var $i998: i64;
  var $i999: i64;
  var $p1000: ref;
  var $i1001: i32;
  var $i1002: i1;
  var $i1003: i64;
  var $i1004: i64;
  var $p1005: ref;
  var $i1006: i64;
  var $i1007: i64;
  var $p1008: ref;
  var $p1009: ref;
  var $p1010: ref;
  var $i1011: i64;
  var $i1012: i64;
  var $i1013: i64;
  var $i1014: i64;
  var $p1015: ref;
  var $i1016: i32;
  var $i1017: i64;
  var $i1018: i64;
  var $p1019: ref;
  var $i1020: i32;
  var $i1021: i32;
  var $i1022: i64;
  var $p1023: ref;
  var $i1024: i64;
  var $i1025: i64;
  var $i1026: i64;
  var $i1027: i64;
  var $p1028: ref;
  var $i1029: i32;
  var $i1030: i64;
  var $p1031: ref;
  var $p1033: ref;
  var $i1034: i32;
  var $i1035: i64;
  var $i1036: i64;
  var $p1037: ref;
  var $i1038: i32;
  var $i1039: i64;
  var $i1040: i64;
  var $p1041: ref;
  var $i1042: i32;
  var $i1043: i32;
  var $i1044: i32;
  var $i1045: i1;
  var $i1046: i64;
  var $i1047: i64;
  var $p1048: ref;
  var $i1049: i32;
  var $i1050: i1;
  var $i1051: i64;
  var $i1052: i64;
  var $p1053: ref;
  var $i1054: i32;
  var $i1055: i32;
  var $i1056: i1;
  var $i1057: i64;
  var $i1058: i64;
  var $p1059: ref;
  var $p1060: ref;
  var $p1061: ref;
  var $p1062: ref;
  var $i1063: i32;
  var $p1064: ref;
  var $i1065: i64;
  var $i1066: i64;
  var $i1067: i64;
  var $i1068: i64;
  var $p1069: ref;
  var $i1070: i32;
  var $p1071: ref;
  var $i1072: i64;
  var $i1073: i64;
  var $i1074: i64;
  var $i1075: i64;
  var $p1076: ref;
  var $i1077: i32;
  var $p1078: ref;
  var $i1079: i64;
  var $i1080: i64;
  var $i1081: i64;
  var $i1082: i64;
  var $p1083: ref;
  var $i1084: i32;
  var $p1085: ref;
  var $i1086: i64;
  var $i1087: i64;
  var $i1088: i64;
  var $i1089: i64;
  var $p1090: ref;
  var $i1091: i32;
  var $p1092: ref;
  var $i1093: i64;
  var $i1094: i64;
  var $i1095: i64;
  var $i1096: i64;
  var $p1097: ref;
  var $i1098: i32;
  var $p1099: ref;
  var $p1100: ref;
  var $i1101: i64;
  var $i1102: i64;
  var $p1103: ref;
  var $i1104: i64;
  var $i1105: i64;
  var $p1106: ref;
  var $i1107: i64;
  var $i1108: i64;
  var $p1109: ref;
  var $i1110: i64;
  var $i1111: i64;
  var $p1112: ref;
  var $i1113: i64;
  var $i1114: i64;
  var $p1115: ref;
  var $i1116: i64;
  var $i1117: i64;
  var $p1118: ref;
  var $i1119: i8;
  var $i1120: i64;
  var $i1121: i64;
  var $i1122: i32;
  var $i1123: i64;
  var $i1124: i1;
  var $p1125: ref;
  var $i1126: i32;
  var $i1127: i64;
  var $i1128: i64;
  var $p1129: ref;
  var $i1130: i32;
  var $i1131: i64;
  var $i1132: i64;
  var $p1133: ref;
  var $i1134: i32;
  var $i1135: i64;
  var $i1136: i64;
  var $p1137: ref;
  var $i1138: i32;
  var $i1139: i64;
  var $i1140: i64;
  var $p1141: ref;
  var $i1142: i32;
  var $i1144: i64;
  var $i1145: i64;
  var $p1146: ref;
  var $i1147: i32;
  var $i1148: i64;
  var $i1149: i64;
  var $p1150: ref;
  var $i1151: i32;
  var $i1152: i1;
  var $i1153: i64;
  var $i1154: i64;
  var $p1155: ref;
  var $i1156: i64;
  var $i1157: i64;
  var $p1158: ref;
  var $p1159: ref;
  var $p1160: ref;
  var $i1161: i64;
  var $i1162: i64;
  var $i1163: i64;
  var $i1164: i64;
  var $p1165: ref;
  var $i1166: i32;
  var $i1167: i64;
  var $i1168: i64;
  var $p1169: ref;
  var $i1170: i32;
  var $i1171: i32;
  var $i1172: i64;
  var $p1173: ref;
  var $i1174: i64;
  var $i1175: i64;
  var $i1176: i64;
  var $i1177: i64;
  var $p1178: ref;
  var $i1179: i32;
  var $i1180: i64;
  var $p1181: ref;
  var $p1183: ref;
  var $i1184: i32;
  var $i1185: i64;
  var $i1186: i64;
  var $p1187: ref;
  var $i1188: i32;
  var $i1189: i64;
  var $i1190: i64;
  var $p1191: ref;
  var $i1192: i32;
  var $i1193: i32;
  var $i1194: i32;
  var $i1195: i1;
  var $i1196: i64;
  var $i1197: i64;
  var $p1198: ref;
  var $i1199: i32;
  var $i1200: i1;
  var $i1201: i64;
  var $i1202: i64;
  var $p1203: ref;
  var $i1204: i32;
  var $i1205: i32;
  var $i1206: i1;
  var cmdloc_dummy_var_4: [ref]i8;
  var cmdloc_dummy_var_5: [ref]i8;
  var cmdloc_dummy_var_6: [ref]i8;
  var cmdloc_dummy_var_7: [ref]i8;
  var cmdloc_dummy_var_8: [ref]i8;
  var cmdloc_dummy_var_9: [ref]i8;
  var vslice_dummy_var_47: i32;
  var vslice_dummy_var_48: i32;
  var vslice_dummy_var_49: i32;
  var vslice_dummy_var_50: i32;
  var vslice_dummy_var_51: i32;
  var vslice_dummy_var_52: i32;
  var vslice_dummy_var_53: i32;
  var vslice_dummy_var_54: i32;
  var vslice_dummy_var_55: i32;
  var vslice_dummy_var_56: i32;
  var vslice_dummy_var_57: i32;
  var vslice_dummy_var_58: i32;
  var vslice_dummy_var_59: i32;
  var vslice_dummy_var_60: i32;
  var vslice_dummy_var_61: i32;
  var vslice_dummy_var_62: i32;
  var vslice_dummy_var_63: i32;
  var vslice_dummy_var_64: i32;
  var vslice_dummy_var_65: i32;
  var vslice_dummy_var_66: i32;
  var vslice_dummy_var_67: i32;
  var vslice_dummy_var_68: i32;
  var vslice_dummy_var_69: i32;
  var vslice_dummy_var_70: i32;
  var vslice_dummy_var_71: i32;
  var vslice_dummy_var_72: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 717} $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 718} $p2 := $alloc($mul.ref(512, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 719} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 720} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 721} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 722} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_1521;

  corral_source_split_1521:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p0);
    call {:si_unique_call 723} {:cexpr "__cil_tmp27"} boogie_si_record_i64($i7);
    goto corral_source_split_1522;

  corral_source_split_1522:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 360);
    call {:si_unique_call 724} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i8);
    goto corral_source_split_1523;

  corral_source_split_1523:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_1524;

  corral_source_split_1524:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 725} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i10);
    goto corral_source_split_1525;

  corral_source_split_1525:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 24);
    call {:si_unique_call 726} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i11);
    goto corral_source_split_1526;

  corral_source_split_1526:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_1527;

  corral_source_split_1527:
    assume {:verifier.code 0} true;
    $p13 := $load.ref($M.1, $p12);
    goto corral_source_split_1528;

  corral_source_split_1528:
    assume {:verifier.code 0} true;
    $p14 := $bitcast.ref.ref($p4);
    goto corral_source_split_1529;

  corral_source_split_1529:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p14, .str);
    goto corral_source_split_1530;

  corral_source_split_1530:
    assume {:verifier.code 0} true;
    $i15 := $p2i.ref.i64($p4);
    goto corral_source_split_1531;

  corral_source_split_1531:
    assume {:verifier.code 0} true;
    $i16 := $add.i64($i15, 8);
    call {:si_unique_call 727} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i16);
    goto corral_source_split_1532;

  corral_source_split_1532:
    assume {:verifier.code 0} true;
    $p17 := $i2p.i64.ref($i16);
    goto corral_source_split_1533;

  corral_source_split_1533:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p17, .str.78);
    goto corral_source_split_1534;

  corral_source_split_1534:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p4);
    goto corral_source_split_1535;

  corral_source_split_1535:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 16);
    call {:si_unique_call 728} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i19);
    goto corral_source_split_1536;

  corral_source_split_1536:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_1537;

  corral_source_split_1537:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p20, .str.2);
    goto corral_source_split_1538;

  corral_source_split_1538:
    assume {:verifier.code 0} true;
    $i21 := $p2i.ref.i64($p4);
    goto corral_source_split_1539;

  corral_source_split_1539:
    assume {:verifier.code 0} true;
    $i22 := $add.i64($i21, 24);
    call {:si_unique_call 729} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i22);
    goto corral_source_split_1540;

  corral_source_split_1540:
    assume {:verifier.code 0} true;
    $p23 := $i2p.i64.ref($i22);
    goto corral_source_split_1541;

  corral_source_split_1541:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p23, .str.79);
    goto corral_source_split_1542;

  corral_source_split_1542:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p4);
    goto corral_source_split_1543;

  corral_source_split_1543:
    assume {:verifier.code 0} true;
    $i25 := $add.i64($i24, 32);
    call {:si_unique_call 730} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i25);
    goto corral_source_split_1544;

  corral_source_split_1544:
    assume {:verifier.code 0} true;
    $p26 := $i2p.i64.ref($i25);
    goto corral_source_split_1545;

  corral_source_split_1545:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p26, 70);
    goto corral_source_split_1546;

  corral_source_split_1546:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p4);
    goto corral_source_split_1547;

  corral_source_split_1547:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 35);
    call {:si_unique_call 731} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i28);
    goto corral_source_split_1548;

  corral_source_split_1548:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_1549;

  corral_source_split_1549:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p29, 0);
    goto corral_source_split_1550;

  corral_source_split_1550:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p4);
    goto corral_source_split_1551;

  corral_source_split_1551:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 35);
    call {:si_unique_call 732} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i31);
    goto corral_source_split_1552;

  corral_source_split_1552:
    assume {:verifier.code 0} true;
    $p32 := $i2p.i64.ref($i31);
    goto corral_source_split_1553;

  corral_source_split_1553:
    assume {:verifier.code 0} true;
    $i33 := $load.i8($M.1, $p32);
    call {:si_unique_call 733} {:cexpr "__cil_tmp39"} boogie_si_record_i8($i33);
    goto corral_source_split_1554;

  corral_source_split_1554:
    assume {:verifier.code 0} true;
    $i34 := $zext.i8.i64($i33);
    call {:si_unique_call 734} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i34);
    goto corral_source_split_1555;

  corral_source_split_1555:
    assume {:verifier.code 0} true;
    $i35 := $and.i64($i34, 1);
    call {:si_unique_call 735} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i35);
    goto corral_source_split_1556;

  corral_source_split_1556:
    assume {:verifier.code 0} true;
    call {:si_unique_call 736} $i36 := __builtinx_expect.i64.i64($i35, 0);
    goto corral_source_split_1557;

  corral_source_split_1557:
    assume {:verifier.code 0} true;
    $i37 := $sext.i32.i64($i36);
    call {:si_unique_call 737} {:cexpr "tmp"} boogie_si_record_i64($i37);
    goto corral_source_split_1558;

  corral_source_split_1558:
    assume {:verifier.code 0} true;
    $i38 := $ne.i64($i37, 0);
    goto corral_source_split_1559;

  corral_source_split_1559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i40 := $p2i.ref.i64($p0);
    call {:si_unique_call 739} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i40);
    goto corral_source_split_1564;

  corral_source_split_1564:
    assume {:verifier.code 0} true;
    $i41 := $add.i64($i40, 356);
    call {:si_unique_call 740} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i41);
    goto corral_source_split_1565;

  corral_source_split_1565:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p0);
    call {:si_unique_call 741} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i42);
    goto corral_source_split_1566;

  corral_source_split_1566:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 24);
    call {:si_unique_call 742} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i43);
    goto corral_source_split_1567;

  corral_source_split_1567:
    assume {:verifier.code 0} true;
    $p44 := $i2p.i64.ref($i43);
    goto corral_source_split_1568;

  corral_source_split_1568:
    assume {:verifier.code 0} true;
    $p45 := $load.ref($M.1, $p44);
    goto corral_source_split_1569;

  corral_source_split_1569:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p45);
    call {:si_unique_call 743} {:cexpr "__cil_tmp48"} boogie_si_record_i64($i46);
    goto corral_source_split_1570;

  corral_source_split_1570:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, 16);
    call {:si_unique_call 744} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i47);
    goto corral_source_split_1571;

  corral_source_split_1571:
    assume {:verifier.code 0} true;
    $p48 := $i2p.i64.ref($i47);
    goto corral_source_split_1572;

  corral_source_split_1572:
    assume {:verifier.code 0} true;
    $i49 := $load.i32($M.1, $p48);
    goto corral_source_split_1573;

  corral_source_split_1573:
    assume {:verifier.code 0} true;
    $p50 := $i2p.i64.ref($i41);
    goto corral_source_split_1574;

  corral_source_split_1574:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p50, $i49);
    goto corral_source_split_1575;

  corral_source_split_1575:
    assume {:verifier.code 0} true;
    $i51 := $p2i.ref.i64($p0);
    call {:si_unique_call 745} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i51);
    goto corral_source_split_1576;

  corral_source_split_1576:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 560);
    call {:si_unique_call 746} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i52);
    goto corral_source_split_1577;

  corral_source_split_1577:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p0);
    call {:si_unique_call 747} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i53);
    goto corral_source_split_1578;

  corral_source_split_1578:
    assume {:verifier.code 0} true;
    $i54 := $add.i64($i53, 356);
    call {:si_unique_call 748} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i54);
    goto corral_source_split_1579;

  corral_source_split_1579:
    assume {:verifier.code 0} true;
    $p55 := $i2p.i64.ref($i54);
    goto corral_source_split_1580;

  corral_source_split_1580:
    assume {:verifier.code 0} true;
    $i56 := $load.i32($M.1, $p55);
    call {:si_unique_call 749} {:cexpr "__cil_tmp54"} boogie_si_record_i32($i56);
    goto corral_source_split_1581;

  corral_source_split_1581:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p0);
    call {:si_unique_call 750} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i57);
    goto corral_source_split_1582;

  corral_source_split_1582:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 24);
    call {:si_unique_call 751} {:cexpr "__cil_tmp57"} boogie_si_record_i64($i58);
    goto corral_source_split_1583;

  corral_source_split_1583:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_1584;

  corral_source_split_1584:
    assume {:verifier.code 0} true;
    $p60 := $load.ref($M.1, $p59);
    goto corral_source_split_1585;

  corral_source_split_1585:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p60);
    call {:si_unique_call 752} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i61);
    goto corral_source_split_1586;

  corral_source_split_1586:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 8);
    call {:si_unique_call 753} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i62);
    goto corral_source_split_1587;

  corral_source_split_1587:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_1588;

  corral_source_split_1588:
    assume {:verifier.code 0} true;
    $i64 := $load.i64($M.1, $p63);
    call {:si_unique_call 754} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i64);
    goto corral_source_split_1589;

  corral_source_split_1589:
    assume {:verifier.code 0} true;
    $i65 := $trunc.i64.i32($i64);
    call {:si_unique_call 755} {:cexpr "__cil_tmp62"} boogie_si_record_i32($i65);
    goto corral_source_split_1590;

  corral_source_split_1590:
    assume {:verifier.code 0} true;
    $i66 := $udiv.i32($i65, $i56);
    goto corral_source_split_1591;

  corral_source_split_1591:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i52);
    goto corral_source_split_1592;

  corral_source_split_1592:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p67, $i66);
    goto corral_source_split_1593;

  corral_source_split_1593:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p0);
    call {:si_unique_call 756} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i68);
    goto corral_source_split_1594;

  corral_source_split_1594:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 352);
    call {:si_unique_call 757} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i69);
    goto corral_source_split_1595;

  corral_source_split_1595:
    assume {:verifier.code 0} true;
    $p70 := $i2p.i64.ref($i69);
    goto corral_source_split_1596;

  corral_source_split_1596:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p70, $sub.i16(0, 1));
    goto corral_source_split_1597;

  corral_source_split_1597:
    assume {:verifier.code 0} true;
    $i71 := $p2i.ref.i64($p0);
    call {:si_unique_call 758} {:cexpr "__cil_tmp498"} boogie_si_record_i64($i71);
    goto corral_source_split_1598;

  corral_source_split_1598:
    assume {:verifier.code 0} true;
    $i72 := $add.i64($i71, 560);
    call {:si_unique_call 759} {:cexpr "__cil_tmp499"} boogie_si_record_i64($i72);
    goto corral_source_split_1599;

  corral_source_split_1599:
    assume {:verifier.code 0} true;
    $p73 := $i2p.i64.ref($i72);
    goto corral_source_split_1600;

  corral_source_split_1600:
    assume {:verifier.code 0} true;
    $i74 := $load.i32($M.1, $p73);
    call {:si_unique_call 760} {:cexpr "__cil_tmp500"} boogie_si_record_i32($i74);
    goto corral_source_split_1601;

  corral_source_split_1601:
    assume {:verifier.code 0} true;
    $i75 := $ugt.i32($i74, 0);
    goto corral_source_split_1602;

  corral_source_split_1602:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i75 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto corral_source_split_1712;

  corral_source_split_1712:
    assume {:verifier.code 0} true;
    $r := $i152;
    return;

  $bb4:
    assume $i75 == 1;
    goto corral_source_split_1604;

  corral_source_split_1604:
    assume {:verifier.code 0} true;
    $i76 := 0;
    goto $bb7;

  $bb7:
    call $i77, $i78, $p79, $i80, $i81, $i82, $p83, $i84, $i85, $i86, $i87, $i88, $i89, $p90, $i91, $i92, $i93, $i94, $p95, $p96, $i97, $i98, $p99, $i100, $i102, $i103, $i105, $i106, $p107, $i108, $i109, $i110, $i111, $p112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i121, $i122, $p123, $i124, $i125, $i126, $i127, $p128, $p129, $i130, $i131, $p132, $i133, $i120, $i754, $i755, $i756, $i76, vslice_dummy_var_48, vslice_dummy_var_49, vslice_dummy_var_50 := find_boot_record_loop_$bb7($p0, $p1, $p2, $p3, $p13, $p73, $i77, $i78, $p79, $i80, $i81, $i82, $p83, $i84, $i85, $i86, $i87, $i88, $i89, $p90, $i91, $i92, $i93, $i94, $p95, $p96, $i97, $i98, $p99, $i100, $i102, $i103, $i105, $i106, $p107, $i108, $i109, $i110, $i111, $p112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i121, $i122, $p123, $i124, $i125, $i126, $i127, $p128, $p129, $i130, $i131, $p132, $i133, $i120, $i754, $i755, $i756, $i76, vslice_dummy_var_48, vslice_dummy_var_49, vslice_dummy_var_50);
    goto $bb7_last;

  corral_source_split_1606:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p0);
    call {:si_unique_call 761} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i77);
    goto corral_source_split_1608;

  corral_source_split_1608:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 356);
    call {:si_unique_call 762} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i78);
    goto corral_source_split_1609;

  corral_source_split_1609:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_1610;

  corral_source_split_1610:
    assume {:verifier.code 0} true;
    $i80 := $load.i32($M.1, $p79);
    call {:si_unique_call 763} {:cexpr "__cil_tmp67"} boogie_si_record_i32($i80);
    goto corral_source_split_1611;

  corral_source_split_1611:
    assume {:verifier.code 0} true;
    $i81 := $mul.i32($i80, $i76);
    call {:si_unique_call 764} {:cexpr "__cil_tmp68"} boogie_si_record_i32($i81);
    goto corral_source_split_1612;

  corral_source_split_1612:
    assume {:verifier.code 0} true;
    $i82 := $zext.i32.i64($i81);
    call {:si_unique_call 765} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i82);
    goto corral_source_split_1613;

  corral_source_split_1613:
    assume {:verifier.code 0} true;
    $p83 := $bitcast.ref.ref($p2);
    goto corral_source_split_1614;

  corral_source_split_1614:
    assume {:verifier.code 0} true;
    call {:si_unique_call 766} $i84 := mtd_read($p13, $i82, 512, $p3, $p83);
    call {:si_unique_call 767} {:cexpr "ret"} boogie_si_record_i32($i84);
    goto corral_source_split_1615;

  corral_source_split_1615:
    assume {:verifier.code 0} true;
    $i85 := $load.i64($M.2, $p3);
    call {:si_unique_call 768} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i85);
    goto corral_source_split_1616;

  corral_source_split_1616:
    assume {:verifier.code 0} true;
    $i86 := $ne.i64($i85, 512);
    goto corral_source_split_1617;

  corral_source_split_1617:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i86 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i105 := $load.i64($M.2, $p3);
    call {:si_unique_call 783} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i105);
    goto corral_source_split_1647;

  corral_source_split_1647:
    assume {:verifier.code 0} true;
    $i106 := $ule.i64($i105, 5);
    goto corral_source_split_1648;

  corral_source_split_1648:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i106 == 1);
    goto corral_source_split_1652;

  corral_source_split_1652:
    assume {:verifier.code 0} true;
    $p107 := $bitcast.ref.ref($p2);
    goto corral_source_split_1653;

  corral_source_split_1653:
    assume {:verifier.code 0} true;
    call {:si_unique_call 784} $i108 := memcmp($p107, .str.82, 6);
    call {:si_unique_call 785} {:cexpr "tmp___0"} boogie_si_record_i32($i108);
    goto corral_source_split_1654;

  corral_source_split_1654:
    assume {:verifier.code 0} true;
    $i109 := $ne.i32($i108, 0);
    goto corral_source_split_1655;

  corral_source_split_1655:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i109 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p0);
    call {:si_unique_call 786} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i110);
    goto corral_source_split_1659;

  corral_source_split_1659:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 356);
    call {:si_unique_call 787} {:cexpr "__cil_tmp89"} boogie_si_record_i64($i111);
    goto corral_source_split_1660;

  corral_source_split_1660:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_1661;

  corral_source_split_1661:
    assume {:verifier.code 0} true;
    $i113 := $load.i32($M.1, $p112);
    call {:si_unique_call 788} {:cexpr "__cil_tmp90"} boogie_si_record_i32($i113);
    goto corral_source_split_1662;

  corral_source_split_1662:
    assume {:verifier.code 0} true;
    $i114 := $mul.i32($i113, $i76);
    call {:si_unique_call 789} {:cexpr "__cil_tmp91"} boogie_si_record_i32($i114);
    goto corral_source_split_1663;

  corral_source_split_1663:
    assume {:verifier.code 0} true;
    $i115 := $add.i32($i114, 520);
    call {:si_unique_call 790} {:cexpr "__cil_tmp92"} boogie_si_record_i32($i115);
    goto corral_source_split_1664;

  corral_source_split_1664:
    assume {:verifier.code 0} true;
    $i116 := $zext.i32.i64($i115);
    call {:si_unique_call 791} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i116);
    goto corral_source_split_1665;

  corral_source_split_1665:
    assume {:verifier.code 0} true;
    $p117 := $bitcast.ref.ref($p1);
    goto corral_source_split_1666;

  corral_source_split_1666:
    assume {:verifier.code 0} true;
    call {:si_unique_call 792} $i118 := inftl_read_oob($p13, $i116, 8, $p3, $p117);
    call {:si_unique_call 793} {:cexpr "ret"} boogie_si_record_i32($i118);
    goto corral_source_split_1667;

  corral_source_split_1667:
    assume {:verifier.code 0} true;
    $i119 := $slt.i32($i118, 0);
    goto corral_source_split_1668;

  corral_source_split_1668:
    assume {:verifier.code 0} true;
    $i120 := $i76;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i119 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i135 := $ugt.i64(148, 63);
    goto corral_source_split_1686;

  corral_source_split_1686:
    assume {:verifier.code 0} true;
    assume {:branchcond $i135} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i135 == 1);
    goto corral_source_split_1693;

  corral_source_split_1693:
    assume {:verifier.code 0} true;
    $p138 := $bitcast.ref.ref($p9);
    goto corral_source_split_1694;

  corral_source_split_1694:
    assume {:verifier.code 0} true;
    $p139 := $bitcast.ref.ref($p2);
    goto corral_source_split_1695;

  corral_source_split_1695:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_7 := $M.1;
    cmdloc_dummy_var_8 := $M.1;
    call {:si_unique_call 805} cmdloc_dummy_var_9 := $memcpy.i8(cmdloc_dummy_var_7, cmdloc_dummy_var_8, $p138, $p139, 148, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_9;
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p0);
    call {:si_unique_call 806} {:cexpr "__cil_tmp110"} boogie_si_record_i64($i140);
    goto corral_source_split_1697;

  corral_source_split_1697:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, 356);
    call {:si_unique_call 807} {:cexpr "__cil_tmp111"} boogie_si_record_i64($i141);
    goto corral_source_split_1698;

  corral_source_split_1698:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_1699;

  corral_source_split_1699:
    assume {:verifier.code 0} true;
    $i143 := $load.i32($M.1, $p142);
    call {:si_unique_call 808} {:cexpr "__cil_tmp112"} boogie_si_record_i32($i143);
    goto corral_source_split_1700;

  corral_source_split_1700:
    assume {:verifier.code 0} true;
    $i144 := $mul.i32($i143, $i120);
    call {:si_unique_call 809} {:cexpr "__cil_tmp113"} boogie_si_record_i32($i144);
    goto corral_source_split_1701;

  corral_source_split_1701:
    assume {:verifier.code 0} true;
    $i145 := $add.i32($i144, 4096);
    call {:si_unique_call 810} {:cexpr "__cil_tmp114"} boogie_si_record_i32($i145);
    goto corral_source_split_1702;

  corral_source_split_1702:
    assume {:verifier.code 0} true;
    $i146 := $zext.i32.i64($i145);
    call {:si_unique_call 811} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i146);
    goto corral_source_split_1703;

  corral_source_split_1703:
    assume {:verifier.code 0} true;
    $p147 := $bitcast.ref.ref($p2);
    goto corral_source_split_1704;

  corral_source_split_1704:
    assume {:verifier.code 0} true;
    call {:si_unique_call 812} vslice_dummy_var_51 := mtd_read($p13, $i146, 512, $p3, $p147);
    goto corral_source_split_1705;

  corral_source_split_1705:
    assume {:verifier.code 0} true;
    $i149 := $load.i64($M.2, $p3);
    call {:si_unique_call 813} {:cexpr "__cil_tmp118"} boogie_si_record_i64($i149);
    goto corral_source_split_1706;

  corral_source_split_1706:
    assume {:verifier.code 0} true;
    $i150 := $ne.i64($i149, 512);
    goto corral_source_split_1707;

  corral_source_split_1707:
    assume {:verifier.code 0} true;
    assume {:branchcond $i150} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i150 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $p153 := $bitcast.ref.ref($p9);
    goto corral_source_split_1714;

  corral_source_split_1714:
    assume {:verifier.code 0} true;
    $p154 := $bitcast.ref.ref($p2);
    goto corral_source_split_1715;

  corral_source_split_1715:
    assume {:verifier.code 0} true;
    call {:si_unique_call 815} $i155 := memcmp($p153, $p154, 148);
    call {:si_unique_call 816} {:cexpr "tmp___1"} boogie_si_record_i32($i155);
    goto corral_source_split_1716;

  corral_source_split_1716:
    assume {:verifier.code 0} true;
    $i156 := $ne.i32($i155, 0);
    goto corral_source_split_1717;

  corral_source_split_1717:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i156 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i158 := $p2i.ref.i64($p9);
    call {:si_unique_call 818} {:cexpr "__cil_tmp121"} boogie_si_record_i64($i158);
    goto corral_source_split_1722;

  corral_source_split_1722:
    assume {:verifier.code 0} true;
    $i159 := $add.i64($i158, 8);
    call {:si_unique_call 819} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i159);
    goto corral_source_split_1723;

  corral_source_split_1723:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p9);
    call {:si_unique_call 820} {:cexpr "__cil_tmp123"} boogie_si_record_i64($i160);
    goto corral_source_split_1724;

  corral_source_split_1724:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 8);
    call {:si_unique_call 821} {:cexpr "__cil_tmp124"} boogie_si_record_i64($i161);
    goto corral_source_split_1725;

  corral_source_split_1725:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_1726;

  corral_source_split_1726:
    assume {:verifier.code 0} true;
    $i163 := $load.i32($M.1, $p162);
    goto corral_source_split_1727;

  corral_source_split_1727:
    assume {:verifier.code 0} true;
    $p164 := $i2p.i64.ref($i159);
    goto corral_source_split_1728;

  corral_source_split_1728:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p164, $i163);
    goto corral_source_split_1729;

  corral_source_split_1729:
    assume {:verifier.code 0} true;
    $i165 := $p2i.ref.i64($p9);
    call {:si_unique_call 822} {:cexpr "__cil_tmp125"} boogie_si_record_i64($i165);
    goto corral_source_split_1730;

  corral_source_split_1730:
    assume {:verifier.code 0} true;
    $i166 := $add.i64($i165, 12);
    call {:si_unique_call 823} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i166);
    goto corral_source_split_1731;

  corral_source_split_1731:
    assume {:verifier.code 0} true;
    $i167 := $p2i.ref.i64($p9);
    call {:si_unique_call 824} {:cexpr "__cil_tmp127"} boogie_si_record_i64($i167);
    goto corral_source_split_1732;

  corral_source_split_1732:
    assume {:verifier.code 0} true;
    $i168 := $add.i64($i167, 12);
    call {:si_unique_call 825} {:cexpr "__cil_tmp128"} boogie_si_record_i64($i168);
    goto corral_source_split_1733;

  corral_source_split_1733:
    assume {:verifier.code 0} true;
    $p169 := $i2p.i64.ref($i168);
    goto corral_source_split_1734;

  corral_source_split_1734:
    assume {:verifier.code 0} true;
    $i170 := $load.i32($M.1, $p169);
    goto corral_source_split_1735;

  corral_source_split_1735:
    assume {:verifier.code 0} true;
    $p171 := $i2p.i64.ref($i166);
    goto corral_source_split_1736;

  corral_source_split_1736:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p171, $i170);
    goto corral_source_split_1737;

  corral_source_split_1737:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p9);
    call {:si_unique_call 826} {:cexpr "__cil_tmp129"} boogie_si_record_i64($i172);
    goto corral_source_split_1738;

  corral_source_split_1738:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 16);
    call {:si_unique_call 827} {:cexpr "__cil_tmp130"} boogie_si_record_i64($i173);
    goto corral_source_split_1739;

  corral_source_split_1739:
    assume {:verifier.code 0} true;
    $i174 := $p2i.ref.i64($p9);
    call {:si_unique_call 828} {:cexpr "__cil_tmp131"} boogie_si_record_i64($i174);
    goto corral_source_split_1740;

  corral_source_split_1740:
    assume {:verifier.code 0} true;
    $i175 := $add.i64($i174, 16);
    call {:si_unique_call 829} {:cexpr "__cil_tmp132"} boogie_si_record_i64($i175);
    goto corral_source_split_1741;

  corral_source_split_1741:
    assume {:verifier.code 0} true;
    $p176 := $i2p.i64.ref($i175);
    goto corral_source_split_1742;

  corral_source_split_1742:
    assume {:verifier.code 0} true;
    $i177 := $load.i32($M.1, $p176);
    goto corral_source_split_1743;

  corral_source_split_1743:
    assume {:verifier.code 0} true;
    $p178 := $i2p.i64.ref($i173);
    goto corral_source_split_1744;

  corral_source_split_1744:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p178, $i177);
    goto corral_source_split_1745;

  corral_source_split_1745:
    assume {:verifier.code 0} true;
    $i179 := $p2i.ref.i64($p9);
    call {:si_unique_call 830} {:cexpr "__cil_tmp133"} boogie_si_record_i64($i179);
    goto corral_source_split_1746;

  corral_source_split_1746:
    assume {:verifier.code 0} true;
    $i180 := $add.i64($i179, 20);
    call {:si_unique_call 831} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i180);
    goto corral_source_split_1747;

  corral_source_split_1747:
    assume {:verifier.code 0} true;
    $i181 := $p2i.ref.i64($p9);
    call {:si_unique_call 832} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i181);
    goto corral_source_split_1748;

  corral_source_split_1748:
    assume {:verifier.code 0} true;
    $i182 := $add.i64($i181, 20);
    call {:si_unique_call 833} {:cexpr "__cil_tmp136"} boogie_si_record_i64($i182);
    goto corral_source_split_1749;

  corral_source_split_1749:
    assume {:verifier.code 0} true;
    $p183 := $i2p.i64.ref($i182);
    goto corral_source_split_1750;

  corral_source_split_1750:
    assume {:verifier.code 0} true;
    $i184 := $load.i32($M.1, $p183);
    goto corral_source_split_1751;

  corral_source_split_1751:
    assume {:verifier.code 0} true;
    $p185 := $i2p.i64.ref($i180);
    goto corral_source_split_1752;

  corral_source_split_1752:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p185, $i184);
    goto corral_source_split_1753;

  corral_source_split_1753:
    assume {:verifier.code 0} true;
    $i186 := $p2i.ref.i64($p9);
    call {:si_unique_call 834} {:cexpr "__cil_tmp137"} boogie_si_record_i64($i186);
    goto corral_source_split_1754;

  corral_source_split_1754:
    assume {:verifier.code 0} true;
    $i187 := $add.i64($i186, 24);
    call {:si_unique_call 835} {:cexpr "__cil_tmp138"} boogie_si_record_i64($i187);
    goto corral_source_split_1755;

  corral_source_split_1755:
    assume {:verifier.code 0} true;
    $i188 := $p2i.ref.i64($p9);
    call {:si_unique_call 836} {:cexpr "__cil_tmp139"} boogie_si_record_i64($i188);
    goto corral_source_split_1756;

  corral_source_split_1756:
    assume {:verifier.code 0} true;
    $i189 := $add.i64($i188, 24);
    call {:si_unique_call 837} {:cexpr "__cil_tmp140"} boogie_si_record_i64($i189);
    goto corral_source_split_1757;

  corral_source_split_1757:
    assume {:verifier.code 0} true;
    $p190 := $i2p.i64.ref($i189);
    goto corral_source_split_1758;

  corral_source_split_1758:
    assume {:verifier.code 0} true;
    $i191 := $load.i32($M.1, $p190);
    goto corral_source_split_1759;

  corral_source_split_1759:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i187);
    goto corral_source_split_1760;

  corral_source_split_1760:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p192, $i191);
    goto corral_source_split_1761;

  corral_source_split_1761:
    assume {:verifier.code 0} true;
    $i193 := $p2i.ref.i64($p9);
    call {:si_unique_call 838} {:cexpr "__cil_tmp141"} boogie_si_record_i64($i193);
    goto corral_source_split_1762;

  corral_source_split_1762:
    assume {:verifier.code 0} true;
    $i194 := $add.i64($i193, 32);
    call {:si_unique_call 839} {:cexpr "__cil_tmp142"} boogie_si_record_i64($i194);
    goto corral_source_split_1763;

  corral_source_split_1763:
    assume {:verifier.code 0} true;
    $i195 := $p2i.ref.i64($p9);
    call {:si_unique_call 840} {:cexpr "__cil_tmp143"} boogie_si_record_i64($i195);
    goto corral_source_split_1764;

  corral_source_split_1764:
    assume {:verifier.code 0} true;
    $i196 := $add.i64($i195, 32);
    call {:si_unique_call 841} {:cexpr "__cil_tmp144"} boogie_si_record_i64($i196);
    goto corral_source_split_1765;

  corral_source_split_1765:
    assume {:verifier.code 0} true;
    $p197 := $i2p.i64.ref($i196);
    goto corral_source_split_1766;

  corral_source_split_1766:
    assume {:verifier.code 0} true;
    $i198 := $load.i32($M.1, $p197);
    goto corral_source_split_1767;

  corral_source_split_1767:
    assume {:verifier.code 0} true;
    $p199 := $i2p.i64.ref($i194);
    goto corral_source_split_1768;

  corral_source_split_1768:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p199, $i198);
    goto corral_source_split_1769;

  corral_source_split_1769:
    assume {:verifier.code 0} true;
    $p200 := $bitcast.ref.ref($p5);
    goto corral_source_split_1770;

  corral_source_split_1770:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p200, .str);
    goto corral_source_split_1771;

  corral_source_split_1771:
    assume {:verifier.code 0} true;
    $i201 := $p2i.ref.i64($p5);
    goto corral_source_split_1772;

  corral_source_split_1772:
    assume {:verifier.code 0} true;
    $i202 := $add.i64($i201, 8);
    call {:si_unique_call 842} {:cexpr "__cil_tmp146"} boogie_si_record_i64($i202);
    goto corral_source_split_1773;

  corral_source_split_1773:
    assume {:verifier.code 0} true;
    $p203 := $i2p.i64.ref($i202);
    goto corral_source_split_1774;

  corral_source_split_1774:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p203, .str.78);
    goto corral_source_split_1775;

  corral_source_split_1775:
    assume {:verifier.code 0} true;
    $i204 := $p2i.ref.i64($p5);
    goto corral_source_split_1776;

  corral_source_split_1776:
    assume {:verifier.code 0} true;
    $i205 := $add.i64($i204, 16);
    call {:si_unique_call 843} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i205);
    goto corral_source_split_1777;

  corral_source_split_1777:
    assume {:verifier.code 0} true;
    $p206 := $i2p.i64.ref($i205);
    goto corral_source_split_1778;

  corral_source_split_1778:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p206, .str.2);
    goto corral_source_split_1779;

  corral_source_split_1779:
    assume {:verifier.code 0} true;
    $i207 := $p2i.ref.i64($p5);
    goto corral_source_split_1780;

  corral_source_split_1780:
    assume {:verifier.code 0} true;
    $i208 := $add.i64($i207, 24);
    call {:si_unique_call 844} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i208);
    goto corral_source_split_1781;

  corral_source_split_1781:
    assume {:verifier.code 0} true;
    $p209 := $i2p.i64.ref($i208);
    goto corral_source_split_1782;

  corral_source_split_1782:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p209, .str.86);
    goto corral_source_split_1783;

  corral_source_split_1783:
    assume {:verifier.code 0} true;
    $i210 := $p2i.ref.i64($p5);
    goto corral_source_split_1784;

  corral_source_split_1784:
    assume {:verifier.code 0} true;
    $i211 := $add.i64($i210, 32);
    call {:si_unique_call 845} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i211);
    goto corral_source_split_1785;

  corral_source_split_1785:
    assume {:verifier.code 0} true;
    $p212 := $i2p.i64.ref($i211);
    goto corral_source_split_1786;

  corral_source_split_1786:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p212, 169);
    goto corral_source_split_1787;

  corral_source_split_1787:
    assume {:verifier.code 0} true;
    $i213 := $p2i.ref.i64($p5);
    goto corral_source_split_1788;

  corral_source_split_1788:
    assume {:verifier.code 0} true;
    $i214 := $add.i64($i213, 35);
    call {:si_unique_call 846} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i214);
    goto corral_source_split_1789;

  corral_source_split_1789:
    assume {:verifier.code 0} true;
    $p215 := $i2p.i64.ref($i214);
    goto corral_source_split_1790;

  corral_source_split_1790:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p215, 0);
    goto corral_source_split_1791;

  corral_source_split_1791:
    assume {:verifier.code 0} true;
    $i216 := $p2i.ref.i64($p5);
    goto corral_source_split_1792;

  corral_source_split_1792:
    assume {:verifier.code 0} true;
    $i217 := $add.i64($i216, 35);
    call {:si_unique_call 847} {:cexpr "__cil_tmp151"} boogie_si_record_i64($i217);
    goto corral_source_split_1793;

  corral_source_split_1793:
    assume {:verifier.code 0} true;
    $p218 := $i2p.i64.ref($i217);
    goto corral_source_split_1794;

  corral_source_split_1794:
    assume {:verifier.code 0} true;
    $i219 := $load.i8($M.1, $p218);
    call {:si_unique_call 848} {:cexpr "__cil_tmp152"} boogie_si_record_i8($i219);
    goto corral_source_split_1795;

  corral_source_split_1795:
    assume {:verifier.code 0} true;
    $i220 := $zext.i8.i64($i219);
    call {:si_unique_call 849} {:cexpr "__cil_tmp153"} boogie_si_record_i64($i220);
    goto corral_source_split_1796;

  corral_source_split_1796:
    assume {:verifier.code 0} true;
    $i221 := $and.i64($i220, 1);
    call {:si_unique_call 850} {:cexpr "__cil_tmp154"} boogie_si_record_i64($i221);
    goto corral_source_split_1797;

  corral_source_split_1797:
    assume {:verifier.code 0} true;
    call {:si_unique_call 851} $i222 := __builtinx_expect.i64.i64($i221, 0);
    goto corral_source_split_1798;

  corral_source_split_1798:
    assume {:verifier.code 0} true;
    $i223 := $sext.i32.i64($i222);
    call {:si_unique_call 852} {:cexpr "tmp___2"} boogie_si_record_i64($i223);
    goto corral_source_split_1799;

  corral_source_split_1799:
    assume {:verifier.code 0} true;
    $i224 := $ne.i64($i223, 0);
    goto corral_source_split_1800;

  corral_source_split_1800:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i256 := $p2i.ref.i64($p9);
    call {:si_unique_call 875} {:cexpr "__cil_tmp178"} boogie_si_record_i64($i256);
    goto corral_source_split_1835;

  corral_source_split_1835:
    assume {:verifier.code 0} true;
    $i257 := $add.i64($i256, 16);
    call {:si_unique_call 876} {:cexpr "__cil_tmp179"} boogie_si_record_i64($i257);
    goto corral_source_split_1836;

  corral_source_split_1836:
    assume {:verifier.code 0} true;
    $p258 := $i2p.i64.ref($i257);
    goto corral_source_split_1837;

  corral_source_split_1837:
    assume {:verifier.code 0} true;
    $i259 := $load.i32($M.1, $p258);
    call {:si_unique_call 877} {:cexpr "__cil_tmp180"} boogie_si_record_i32($i259);
    goto corral_source_split_1838;

  corral_source_split_1838:
    assume {:verifier.code 0} true;
    $i260 := $eq.i32($i259, 0);
    goto corral_source_split_1839;

  corral_source_split_1839:
    assume {:verifier.code 0} true;
    assume {:branchcond $i260} true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i260 == 1);
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $i266 := $p2i.ref.i64($p9);
    call {:si_unique_call 882} {:cexpr "__cil_tmp184"} boogie_si_record_i64($i266);
    goto corral_source_split_1848;

  corral_source_split_1848:
    assume {:verifier.code 0} true;
    $i267 := $add.i64($i266, 12);
    call {:si_unique_call 883} {:cexpr "__cil_tmp185"} boogie_si_record_i64($i267);
    goto corral_source_split_1849;

  corral_source_split_1849:
    assume {:verifier.code 0} true;
    $p268 := $i2p.i64.ref($i267);
    goto corral_source_split_1850;

  corral_source_split_1850:
    assume {:verifier.code 0} true;
    $i269 := $load.i32($M.1, $p268);
    call {:si_unique_call 884} {:cexpr "__cil_tmp186"} boogie_si_record_i32($i269);
    goto corral_source_split_1851;

  corral_source_split_1851:
    assume {:verifier.code 0} true;
    $i270 := $p2i.ref.i64($p9);
    call {:si_unique_call 885} {:cexpr "__cil_tmp187"} boogie_si_record_i64($i270);
    goto corral_source_split_1852;

  corral_source_split_1852:
    assume {:verifier.code 0} true;
    $i271 := $add.i64($i270, 16);
    call {:si_unique_call 886} {:cexpr "__cil_tmp188"} boogie_si_record_i64($i271);
    goto corral_source_split_1853;

  corral_source_split_1853:
    assume {:verifier.code 0} true;
    $p272 := $i2p.i64.ref($i271);
    goto corral_source_split_1854;

  corral_source_split_1854:
    assume {:verifier.code 0} true;
    $i273 := $load.i32($M.1, $p272);
    call {:si_unique_call 887} {:cexpr "__cil_tmp189"} boogie_si_record_i32($i273);
    goto corral_source_split_1855;

  corral_source_split_1855:
    assume {:verifier.code 0} true;
    $i274 := $add.i32($i273, $i269);
    call {:si_unique_call 888} {:cexpr "__cil_tmp190"} boogie_si_record_i32($i274);
    goto corral_source_split_1856;

  corral_source_split_1856:
    assume {:verifier.code 0} true;
    $i275 := $ugt.i32($i274, 4);
    goto corral_source_split_1857;

  corral_source_split_1857:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $i294 := $p2i.ref.i64($p9);
    call {:si_unique_call 903} {:cexpr "__cil_tmp204"} boogie_si_record_i64($i294);
    goto corral_source_split_1879;

  corral_source_split_1879:
    assume {:verifier.code 0} true;
    $i295 := $add.i64($i294, 20);
    call {:si_unique_call 904} {:cexpr "__cil_tmp205"} boogie_si_record_i64($i295);
    goto corral_source_split_1880;

  corral_source_split_1880:
    assume {:verifier.code 0} true;
    $p296 := $i2p.i64.ref($i295);
    goto corral_source_split_1881;

  corral_source_split_1881:
    assume {:verifier.code 0} true;
    $i297 := $load.i32($M.1, $p296);
    call {:si_unique_call 905} {:cexpr "__cil_tmp206"} boogie_si_record_i32($i297);
    goto corral_source_split_1882;

  corral_source_split_1882:
    assume {:verifier.code 0} true;
    $i298 := $ugt.i32($i297, 1);
    goto corral_source_split_1883;

  corral_source_split_1883:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i298 == 1);
    goto corral_source_split_1892;

  corral_source_split_1892:
    assume {:verifier.code 0} true;
    $i304 := $p2i.ref.i64($p9);
    call {:si_unique_call 910} {:cexpr "__cil_tmp210"} boogie_si_record_i64($i304);
    goto corral_source_split_1893;

  corral_source_split_1893:
    assume {:verifier.code 0} true;
    $i305 := $add.i64($i304, 20);
    call {:si_unique_call 911} {:cexpr "__cil_tmp211"} boogie_si_record_i64($i305);
    goto corral_source_split_1894;

  corral_source_split_1894:
    assume {:verifier.code 0} true;
    $p306 := $i2p.i64.ref($i305);
    goto corral_source_split_1895;

  corral_source_split_1895:
    assume {:verifier.code 0} true;
    $i307 := $load.i32($M.1, $p306);
    call {:si_unique_call 912} {:cexpr "__cil_tmp212"} boogie_si_record_i32($i307);
    goto corral_source_split_1896;

  corral_source_split_1896:
    assume {:verifier.code 0} true;
    $i308 := $eq.i32($i307, 1);
    goto corral_source_split_1897;

  corral_source_split_1897:
    assume {:verifier.code 0} true;
    assume {:branchcond $i308} true;
    goto $bb49, $bb50;

  $bb50:
    assume !($i308 == 1);
    assume {:verifier.code 0} true;
    $i352 := $i120;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    $i353 := $p2i.ref.i64($p9);
    call {:si_unique_call 942} {:cexpr "__cil_tmp247"} boogie_si_record_i64($i353);
    goto corral_source_split_1946;

  corral_source_split_1946:
    assume {:verifier.code 0} true;
    $i354 := $add.i64($i353, 36);
    call {:si_unique_call 943} {:cexpr "__cil_tmp248"} boogie_si_record_i64($i354);
    goto corral_source_split_1947;

  corral_source_split_1947:
    assume {:verifier.code 0} true;
    $p355 := $i2p.i64.ref($i354);
    goto corral_source_split_1948;

  corral_source_split_1948:
    assume {:verifier.code 0} true;
    $p356 := $bitcast.ref.ref($p355);
    goto corral_source_split_1949;

  corral_source_split_1949:
    assume {:verifier.code 0} true;
    $p357 := $bitcast.ref.ref($p356);
    goto corral_source_split_1950;

  corral_source_split_1950:
    assume {:verifier.code 0} true;
    $i358 := $load.i32($M.1, $p357);
    goto corral_source_split_1951;

  corral_source_split_1951:
    assume {:verifier.code 0} true;
    $p359 := $bitcast.ref.ref($p356);
    goto corral_source_split_1952;

  corral_source_split_1952:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p359, $i358);
    goto corral_source_split_1953;

  corral_source_split_1953:
    assume {:verifier.code 0} true;
    $i360 := $p2i.ref.i64($p356);
    call {:si_unique_call 944} {:cexpr "__cil_tmp251"} boogie_si_record_i64($i360);
    goto corral_source_split_1954;

  corral_source_split_1954:
    assume {:verifier.code 0} true;
    $i361 := $add.i64($i360, 4);
    call {:si_unique_call 945} {:cexpr "__cil_tmp252"} boogie_si_record_i64($i361);
    goto corral_source_split_1955;

  corral_source_split_1955:
    assume {:verifier.code 0} true;
    $i362 := $p2i.ref.i64($p356);
    call {:si_unique_call 946} {:cexpr "__cil_tmp253"} boogie_si_record_i64($i362);
    goto corral_source_split_1956;

  corral_source_split_1956:
    assume {:verifier.code 0} true;
    $i363 := $add.i64($i362, 4);
    call {:si_unique_call 947} {:cexpr "__cil_tmp254"} boogie_si_record_i64($i363);
    goto corral_source_split_1957;

  corral_source_split_1957:
    assume {:verifier.code 0} true;
    $p364 := $i2p.i64.ref($i363);
    goto corral_source_split_1958;

  corral_source_split_1958:
    assume {:verifier.code 0} true;
    $i365 := $load.i32($M.1, $p364);
    goto corral_source_split_1959;

  corral_source_split_1959:
    assume {:verifier.code 0} true;
    $p366 := $i2p.i64.ref($i361);
    goto corral_source_split_1960;

  corral_source_split_1960:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p366, $i365);
    goto corral_source_split_1961;

  corral_source_split_1961:
    assume {:verifier.code 0} true;
    $i367 := $p2i.ref.i64($p356);
    call {:si_unique_call 948} {:cexpr "__cil_tmp255"} boogie_si_record_i64($i367);
    goto corral_source_split_1962;

  corral_source_split_1962:
    assume {:verifier.code 0} true;
    $i368 := $add.i64($i367, 8);
    call {:si_unique_call 949} {:cexpr "__cil_tmp256"} boogie_si_record_i64($i368);
    goto corral_source_split_1963;

  corral_source_split_1963:
    assume {:verifier.code 0} true;
    $i369 := $p2i.ref.i64($p356);
    call {:si_unique_call 950} {:cexpr "__cil_tmp257"} boogie_si_record_i64($i369);
    goto corral_source_split_1964;

  corral_source_split_1964:
    assume {:verifier.code 0} true;
    $i370 := $add.i64($i369, 8);
    call {:si_unique_call 951} {:cexpr "__cil_tmp258"} boogie_si_record_i64($i370);
    goto corral_source_split_1965;

  corral_source_split_1965:
    assume {:verifier.code 0} true;
    $p371 := $i2p.i64.ref($i370);
    goto corral_source_split_1966;

  corral_source_split_1966:
    assume {:verifier.code 0} true;
    $i372 := $load.i32($M.1, $p371);
    goto corral_source_split_1967;

  corral_source_split_1967:
    assume {:verifier.code 0} true;
    $p373 := $i2p.i64.ref($i368);
    goto corral_source_split_1968;

  corral_source_split_1968:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p373, $i372);
    goto corral_source_split_1969;

  corral_source_split_1969:
    assume {:verifier.code 0} true;
    $i374 := $p2i.ref.i64($p356);
    call {:si_unique_call 952} {:cexpr "__cil_tmp259"} boogie_si_record_i64($i374);
    goto corral_source_split_1970;

  corral_source_split_1970:
    assume {:verifier.code 0} true;
    $i375 := $add.i64($i374, 12);
    call {:si_unique_call 953} {:cexpr "__cil_tmp260"} boogie_si_record_i64($i375);
    goto corral_source_split_1971;

  corral_source_split_1971:
    assume {:verifier.code 0} true;
    $i376 := $p2i.ref.i64($p356);
    call {:si_unique_call 954} {:cexpr "__cil_tmp261"} boogie_si_record_i64($i376);
    goto corral_source_split_1972;

  corral_source_split_1972:
    assume {:verifier.code 0} true;
    $i377 := $add.i64($i376, 12);
    call {:si_unique_call 955} {:cexpr "__cil_tmp262"} boogie_si_record_i64($i377);
    goto corral_source_split_1973;

  corral_source_split_1973:
    assume {:verifier.code 0} true;
    $p378 := $i2p.i64.ref($i377);
    goto corral_source_split_1974;

  corral_source_split_1974:
    assume {:verifier.code 0} true;
    $i379 := $load.i32($M.1, $p378);
    goto corral_source_split_1975;

  corral_source_split_1975:
    assume {:verifier.code 0} true;
    $p380 := $i2p.i64.ref($i375);
    goto corral_source_split_1976;

  corral_source_split_1976:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p380, $i379);
    goto corral_source_split_1977;

  corral_source_split_1977:
    assume {:verifier.code 0} true;
    $i381 := $p2i.ref.i64($p356);
    call {:si_unique_call 956} {:cexpr "__cil_tmp263"} boogie_si_record_i64($i381);
    goto corral_source_split_1978;

  corral_source_split_1978:
    assume {:verifier.code 0} true;
    $i382 := $add.i64($i381, 16);
    call {:si_unique_call 957} {:cexpr "__cil_tmp264"} boogie_si_record_i64($i382);
    goto corral_source_split_1979;

  corral_source_split_1979:
    assume {:verifier.code 0} true;
    $i383 := $p2i.ref.i64($p356);
    call {:si_unique_call 958} {:cexpr "__cil_tmp265"} boogie_si_record_i64($i383);
    goto corral_source_split_1980;

  corral_source_split_1980:
    assume {:verifier.code 0} true;
    $i384 := $add.i64($i383, 16);
    call {:si_unique_call 959} {:cexpr "__cil_tmp266"} boogie_si_record_i64($i384);
    goto corral_source_split_1981;

  corral_source_split_1981:
    assume {:verifier.code 0} true;
    $p385 := $i2p.i64.ref($i384);
    goto corral_source_split_1982;

  corral_source_split_1982:
    assume {:verifier.code 0} true;
    $i386 := $load.i32($M.1, $p385);
    goto corral_source_split_1983;

  corral_source_split_1983:
    assume {:verifier.code 0} true;
    $p387 := $i2p.i64.ref($i382);
    goto corral_source_split_1984;

  corral_source_split_1984:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p387, $i386);
    goto corral_source_split_1985;

  corral_source_split_1985:
    assume {:verifier.code 0} true;
    $i388 := $p2i.ref.i64($p356);
    call {:si_unique_call 960} {:cexpr "__cil_tmp267"} boogie_si_record_i64($i388);
    goto corral_source_split_1986;

  corral_source_split_1986:
    assume {:verifier.code 0} true;
    $i389 := $add.i64($i388, 20);
    call {:si_unique_call 961} {:cexpr "__cil_tmp268"} boogie_si_record_i64($i389);
    goto corral_source_split_1987;

  corral_source_split_1987:
    assume {:verifier.code 0} true;
    $i390 := $p2i.ref.i64($p356);
    call {:si_unique_call 962} {:cexpr "__cil_tmp269"} boogie_si_record_i64($i390);
    goto corral_source_split_1988;

  corral_source_split_1988:
    assume {:verifier.code 0} true;
    $i391 := $add.i64($i390, 20);
    call {:si_unique_call 963} {:cexpr "__cil_tmp270"} boogie_si_record_i64($i391);
    goto corral_source_split_1989;

  corral_source_split_1989:
    assume {:verifier.code 0} true;
    $p392 := $i2p.i64.ref($i391);
    goto corral_source_split_1990;

  corral_source_split_1990:
    assume {:verifier.code 0} true;
    $i393 := $load.i32($M.1, $p392);
    goto corral_source_split_1991;

  corral_source_split_1991:
    assume {:verifier.code 0} true;
    $p394 := $i2p.i64.ref($i389);
    goto corral_source_split_1992;

  corral_source_split_1992:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p394, $i393);
    goto corral_source_split_1993;

  corral_source_split_1993:
    assume {:verifier.code 0} true;
    $p395 := $bitcast.ref.ref($p6);
    goto corral_source_split_1994;

  corral_source_split_1994:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p395, .str);
    goto corral_source_split_1995;

  corral_source_split_1995:
    assume {:verifier.code 0} true;
    $i396 := $p2i.ref.i64($p6);
    goto corral_source_split_1996;

  corral_source_split_1996:
    assume {:verifier.code 0} true;
    $i397 := $add.i64($i396, 8);
    call {:si_unique_call 964} {:cexpr "__cil_tmp272"} boogie_si_record_i64($i397);
    goto corral_source_split_1997;

  corral_source_split_1997:
    assume {:verifier.code 0} true;
    $p398 := $i2p.i64.ref($i397);
    goto corral_source_split_1998;

  corral_source_split_1998:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p398, .str.78);
    goto corral_source_split_1999;

  corral_source_split_1999:
    assume {:verifier.code 0} true;
    $i399 := $p2i.ref.i64($p6);
    goto corral_source_split_2000;

  corral_source_split_2000:
    assume {:verifier.code 0} true;
    $i400 := $add.i64($i399, 16);
    call {:si_unique_call 965} {:cexpr "__cil_tmp273"} boogie_si_record_i64($i400);
    goto corral_source_split_2001;

  corral_source_split_2001:
    assume {:verifier.code 0} true;
    $p401 := $i2p.i64.ref($i400);
    goto corral_source_split_2002;

  corral_source_split_2002:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p401, .str.2);
    goto corral_source_split_2003;

  corral_source_split_2003:
    assume {:verifier.code 0} true;
    $i402 := $p2i.ref.i64($p6);
    goto corral_source_split_2004;

  corral_source_split_2004:
    assume {:verifier.code 0} true;
    $i403 := $add.i64($i402, 24);
    call {:si_unique_call 966} {:cexpr "__cil_tmp274"} boogie_si_record_i64($i403);
    goto corral_source_split_2005;

  corral_source_split_2005:
    assume {:verifier.code 0} true;
    $p404 := $i2p.i64.ref($i403);
    goto corral_source_split_2006;

  corral_source_split_2006:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p404, .str.91);
    goto corral_source_split_2007;

  corral_source_split_2007:
    assume {:verifier.code 0} true;
    $i405 := $p2i.ref.i64($p6);
    goto corral_source_split_2008;

  corral_source_split_2008:
    assume {:verifier.code 0} true;
    $i406 := $add.i64($i405, 32);
    call {:si_unique_call 967} {:cexpr "__cil_tmp275"} boogie_si_record_i64($i406);
    goto corral_source_split_2009;

  corral_source_split_2009:
    assume {:verifier.code 0} true;
    $p407 := $i2p.i64.ref($i406);
    goto corral_source_split_2010;

  corral_source_split_2010:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p407, 221);
    goto corral_source_split_2011;

  corral_source_split_2011:
    assume {:verifier.code 0} true;
    $i408 := $p2i.ref.i64($p6);
    goto corral_source_split_2012;

  corral_source_split_2012:
    assume {:verifier.code 0} true;
    $i409 := $add.i64($i408, 35);
    call {:si_unique_call 968} {:cexpr "__cil_tmp276"} boogie_si_record_i64($i409);
    goto corral_source_split_2013;

  corral_source_split_2013:
    assume {:verifier.code 0} true;
    $p410 := $i2p.i64.ref($i409);
    goto corral_source_split_2014;

  corral_source_split_2014:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p410, 0);
    goto corral_source_split_2015;

  corral_source_split_2015:
    assume {:verifier.code 0} true;
    $i411 := $p2i.ref.i64($p6);
    goto corral_source_split_2016;

  corral_source_split_2016:
    assume {:verifier.code 0} true;
    $i412 := $add.i64($i411, 35);
    call {:si_unique_call 969} {:cexpr "__cil_tmp277"} boogie_si_record_i64($i412);
    goto corral_source_split_2017;

  corral_source_split_2017:
    assume {:verifier.code 0} true;
    $p413 := $i2p.i64.ref($i412);
    goto corral_source_split_2018;

  corral_source_split_2018:
    assume {:verifier.code 0} true;
    $i414 := $load.i8($M.1, $p413);
    call {:si_unique_call 970} {:cexpr "__cil_tmp278"} boogie_si_record_i8($i414);
    goto corral_source_split_2019;

  corral_source_split_2019:
    assume {:verifier.code 0} true;
    $i415 := $zext.i8.i64($i414);
    call {:si_unique_call 971} {:cexpr "__cil_tmp279"} boogie_si_record_i64($i415);
    goto corral_source_split_2020;

  corral_source_split_2020:
    assume {:verifier.code 0} true;
    $i416 := $and.i64($i415, 1);
    call {:si_unique_call 972} {:cexpr "__cil_tmp280"} boogie_si_record_i64($i416);
    goto corral_source_split_2021;

  corral_source_split_2021:
    assume {:verifier.code 0} true;
    call {:si_unique_call 973} $i417 := __builtinx_expect.i64.i64($i416, 0);
    goto corral_source_split_2022;

  corral_source_split_2022:
    assume {:verifier.code 0} true;
    $i418 := $sext.i32.i64($i417);
    call {:si_unique_call 974} {:cexpr "tmp___3"} boogie_si_record_i64($i418);
    goto corral_source_split_2023;

  corral_source_split_2023:
    assume {:verifier.code 0} true;
    $i419 := $ne.i64($i418, 0);
    goto corral_source_split_2024;

  corral_source_split_2024:
    assume {:verifier.code 0} true;
    assume {:branchcond $i419} true;
    goto $bb55, $bb56;

  $bb56:
    assume !($i419 == 1);
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    $i439 := $p2i.ref.i64($p356);
    call {:si_unique_call 989} {:cexpr "__cil_tmp294"} boogie_si_record_i64($i439);
    goto corral_source_split_2047;

  corral_source_split_2047:
    assume {:verifier.code 0} true;
    $i440 := $add.i64($i439, 4);
    call {:si_unique_call 990} {:cexpr "__cil_tmp295"} boogie_si_record_i64($i440);
    goto corral_source_split_2048;

  corral_source_split_2048:
    assume {:verifier.code 0} true;
    $p441 := $i2p.i64.ref($i440);
    goto corral_source_split_2049;

  corral_source_split_2049:
    assume {:verifier.code 0} true;
    $i442 := $load.i32($M.1, $p441);
    call {:si_unique_call 991} {:cexpr "__cil_tmp296"} boogie_si_record_i32($i442);
    goto corral_source_split_2050;

  corral_source_split_2050:
    assume {:verifier.code 0} true;
    $i443 := $p2i.ref.i64($p356);
    call {:si_unique_call 992} {:cexpr "__cil_tmp297"} boogie_si_record_i64($i443);
    goto corral_source_split_2051;

  corral_source_split_2051:
    assume {:verifier.code 0} true;
    $i444 := $add.i64($i443, 20);
    call {:si_unique_call 993} {:cexpr "__cil_tmp298"} boogie_si_record_i64($i444);
    goto corral_source_split_2052;

  corral_source_split_2052:
    assume {:verifier.code 0} true;
    $p445 := $i2p.i64.ref($i444);
    goto corral_source_split_2053;

  corral_source_split_2053:
    assume {:verifier.code 0} true;
    $i446 := $load.i32($M.1, $p445);
    call {:si_unique_call 994} {:cexpr "__cil_tmp299"} boogie_si_record_i32($i446);
    goto corral_source_split_2054;

  corral_source_split_2054:
    assume {:verifier.code 0} true;
    $i447 := $ne.i32($i446, $i442);
    goto corral_source_split_2055;

  corral_source_split_2055:
    assume {:verifier.code 0} true;
    assume {:branchcond $i447} true;
    goto $bb58, $bb59;

  $bb59:
    assume !($i447 == 1);
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    $p478 := $bitcast.ref.ref($p356);
    goto corral_source_split_2092;

  corral_source_split_2092:
    assume {:verifier.code 0} true;
    $i479 := $load.i32($M.1, $p478);
    call {:si_unique_call 1014} {:cexpr "__cil_tmp319"} boogie_si_record_i32($i479);
    goto corral_source_split_2093;

  corral_source_split_2093:
    assume {:verifier.code 0} true;
    $i480 := $p2i.ref.i64($p356);
    call {:si_unique_call 1015} {:cexpr "__cil_tmp320"} boogie_si_record_i64($i480);
    goto corral_source_split_2094;

  corral_source_split_2094:
    assume {:verifier.code 0} true;
    $i481 := $add.i64($i480, 4);
    call {:si_unique_call 1016} {:cexpr "__cil_tmp321"} boogie_si_record_i64($i481);
    goto corral_source_split_2095;

  corral_source_split_2095:
    assume {:verifier.code 0} true;
    $p482 := $i2p.i64.ref($i481);
    goto corral_source_split_2096;

  corral_source_split_2096:
    assume {:verifier.code 0} true;
    $i483 := $load.i32($M.1, $p482);
    call {:si_unique_call 1017} {:cexpr "__cil_tmp322"} boogie_si_record_i32($i483);
    goto corral_source_split_2097;

  corral_source_split_2097:
    assume {:verifier.code 0} true;
    $i484 := $p2i.ref.i64($p356);
    call {:si_unique_call 1018} {:cexpr "__cil_tmp323"} boogie_si_record_i64($i484);
    goto corral_source_split_2098;

  corral_source_split_2098:
    assume {:verifier.code 0} true;
    $i485 := $add.i64($i484, 8);
    call {:si_unique_call 1019} {:cexpr "__cil_tmp324"} boogie_si_record_i64($i485);
    goto corral_source_split_2099;

  corral_source_split_2099:
    assume {:verifier.code 0} true;
    $p486 := $i2p.i64.ref($i485);
    goto corral_source_split_2100;

  corral_source_split_2100:
    assume {:verifier.code 0} true;
    $i487 := $load.i32($M.1, $p486);
    call {:si_unique_call 1020} {:cexpr "__cil_tmp325"} boogie_si_record_i32($i487);
    goto corral_source_split_2101;

  corral_source_split_2101:
    assume {:verifier.code 0} true;
    $i488 := $sub.i32($i487, $i483);
    call {:si_unique_call 1021} {:cexpr "__cil_tmp326"} boogie_si_record_i32($i488);
    goto corral_source_split_2102;

  corral_source_split_2102:
    assume {:verifier.code 0} true;
    $i489 := $add.i32($i488, 1);
    call {:si_unique_call 1022} {:cexpr "__cil_tmp327"} boogie_si_record_i32($i489);
    goto corral_source_split_2103;

  corral_source_split_2103:
    assume {:verifier.code 0} true;
    $i490 := $ult.i32($i489, $i479);
    goto corral_source_split_2104;

  corral_source_split_2104:
    assume {:verifier.code 0} true;
    $i491, $p492 := 0, $p355;
    assume {:branchcond $i490} true;
    goto $bb61, $bb63;

  $bb63:
    assume !($i490 == 1);
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    $i506 := $p2i.ref.i64($p356);
    call {:si_unique_call 1033} {:cexpr "__cil_tmp337"} boogie_si_record_i64($i506);
    goto corral_source_split_2121;

  corral_source_split_2121:
    assume {:verifier.code 0} true;
    $i507 := $add.i64($i506, 24);
    call {:si_unique_call 1034} {:cexpr "__cil_tmp338"} boogie_si_record_i64($i507);
    goto corral_source_split_2122;

  corral_source_split_2122:
    assume {:verifier.code 0} true;
    $p508 := $i2p.i64.ref($i507);
    goto corral_source_split_2123;

  corral_source_split_2123:
    assume {:verifier.code 0} true;
    $i509 := $load.i32($M.1, $p508);
    call {:si_unique_call 1035} {:cexpr "__cil_tmp339"} boogie_si_record_i32($i509);
    goto corral_source_split_2124;

  corral_source_split_2124:
    assume {:verifier.code 0} true;
    $i510 := $ne.i32($i509, 0);
    goto corral_source_split_2125;

  corral_source_split_2125:
    assume {:verifier.code 0} true;
    $i511, $p512 := 0, $p355;
    assume {:branchcond $i510} true;
    goto $bb65, $bb67;

  $bb67:
    assume !($i510 == 1);
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    $i518 := $p2i.ref.i64($p356);
    call {:si_unique_call 1040} {:cexpr "__cil_tmp343"} boogie_si_record_i64($i518);
    goto corral_source_split_2134;

  corral_source_split_2134:
    assume {:verifier.code 0} true;
    $i519 := $add.i64($i518, 12);
    call {:si_unique_call 1041} {:cexpr "__cil_tmp344"} boogie_si_record_i64($i519);
    goto corral_source_split_2135;

  corral_source_split_2135:
    assume {:verifier.code 0} true;
    $p520 := $i2p.i64.ref($i519);
    goto corral_source_split_2136;

  corral_source_split_2136:
    assume {:verifier.code 0} true;
    $i521 := $load.i32($M.1, $p520);
    call {:si_unique_call 1042} {:cexpr "__cil_tmp345"} boogie_si_record_i32($i521);
    goto corral_source_split_2137;

  corral_source_split_2137:
    assume {:verifier.code 0} true;
    $i522 := $and.i32($i521, 1073741824);
    call {:si_unique_call 1043} {:cexpr "__cil_tmp346"} boogie_si_record_i32($i522);
    goto corral_source_split_2138;

  corral_source_split_2138:
    assume {:verifier.code 0} true;
    $i523 := $ne.i32($i522, 0);
    goto corral_source_split_2139;

  corral_source_split_2139:
    assume {:verifier.code 0} true;
    $i524, $p525 := 0, $p355;
    assume {:branchcond $i523} true;
    goto $bb69, $bb71;

  $bb71:
    assume !($i523 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    $i757 := $p2i.ref.i64($p9);
    goto corral_source_split_2146;

  corral_source_split_2146:
    assume {:verifier.code 0} true;
    $i758 := $add.i64($i757, 36);
    goto corral_source_split_2147;

  corral_source_split_2147:
    assume {:verifier.code 0} true;
    $p759 := $i2p.i64.ref($i758);
    goto corral_source_split_2148;

  corral_source_split_2148:
    assume {:verifier.code 0} true;
    $p760 := $bitcast.ref.ref($p759);
    goto corral_source_split_2149;

  corral_source_split_2149:
    assume {:verifier.code 0} true;
    $p761 := $add.ref($p760, $mul.ref(1, 28));
    goto corral_source_split_2150;

  corral_source_split_2150:
    assume {:verifier.code 0} true;
    $p762 := $bitcast.ref.ref($p761);
    goto corral_source_split_2151;

  corral_source_split_2151:
    assume {:verifier.code 0} true;
    $i763 := $load.i32($M.1, $p762);
    goto corral_source_split_2152;

  corral_source_split_2152:
    assume {:verifier.code 0} true;
    $p764 := $bitcast.ref.ref($p761);
    goto corral_source_split_2153;

  corral_source_split_2153:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p764, $i763);
    goto corral_source_split_2154;

  corral_source_split_2154:
    assume {:verifier.code 0} true;
    $i765 := $p2i.ref.i64($p761);
    goto corral_source_split_2155;

  corral_source_split_2155:
    assume {:verifier.code 0} true;
    $i766 := $add.i64($i765, 4);
    goto corral_source_split_2156;

  corral_source_split_2156:
    assume {:verifier.code 0} true;
    $i767 := $p2i.ref.i64($p761);
    goto corral_source_split_2157;

  corral_source_split_2157:
    assume {:verifier.code 0} true;
    $i768 := $add.i64($i767, 4);
    goto corral_source_split_2158;

  corral_source_split_2158:
    assume {:verifier.code 0} true;
    $p769 := $i2p.i64.ref($i768);
    goto corral_source_split_2159;

  corral_source_split_2159:
    assume {:verifier.code 0} true;
    $i770 := $load.i32($M.1, $p769);
    goto corral_source_split_2160;

  corral_source_split_2160:
    assume {:verifier.code 0} true;
    $p771 := $i2p.i64.ref($i766);
    goto corral_source_split_2161;

  corral_source_split_2161:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p771, $i770);
    goto corral_source_split_2162;

  corral_source_split_2162:
    assume {:verifier.code 0} true;
    $i772 := $p2i.ref.i64($p761);
    goto corral_source_split_2163;

  corral_source_split_2163:
    assume {:verifier.code 0} true;
    $i773 := $add.i64($i772, 8);
    goto corral_source_split_2164;

  corral_source_split_2164:
    assume {:verifier.code 0} true;
    $i774 := $p2i.ref.i64($p761);
    goto corral_source_split_2165;

  corral_source_split_2165:
    assume {:verifier.code 0} true;
    $i775 := $add.i64($i774, 8);
    goto corral_source_split_2166;

  corral_source_split_2166:
    assume {:verifier.code 0} true;
    $p776 := $i2p.i64.ref($i775);
    goto corral_source_split_2167;

  corral_source_split_2167:
    assume {:verifier.code 0} true;
    $i777 := $load.i32($M.1, $p776);
    goto corral_source_split_2168;

  corral_source_split_2168:
    assume {:verifier.code 0} true;
    $p778 := $i2p.i64.ref($i773);
    goto corral_source_split_2169;

  corral_source_split_2169:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p778, $i777);
    goto corral_source_split_2170;

  corral_source_split_2170:
    assume {:verifier.code 0} true;
    $i779 := $p2i.ref.i64($p761);
    goto corral_source_split_2171;

  corral_source_split_2171:
    assume {:verifier.code 0} true;
    $i780 := $add.i64($i779, 12);
    goto corral_source_split_2172;

  corral_source_split_2172:
    assume {:verifier.code 0} true;
    $i781 := $p2i.ref.i64($p761);
    goto corral_source_split_2173;

  corral_source_split_2173:
    assume {:verifier.code 0} true;
    $i782 := $add.i64($i781, 12);
    goto corral_source_split_2174;

  corral_source_split_2174:
    assume {:verifier.code 0} true;
    $p783 := $i2p.i64.ref($i782);
    goto corral_source_split_2175;

  corral_source_split_2175:
    assume {:verifier.code 0} true;
    $i784 := $load.i32($M.1, $p783);
    goto corral_source_split_2176;

  corral_source_split_2176:
    assume {:verifier.code 0} true;
    $p785 := $i2p.i64.ref($i780);
    goto corral_source_split_2177;

  corral_source_split_2177:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p785, $i784);
    goto corral_source_split_2178;

  corral_source_split_2178:
    assume {:verifier.code 0} true;
    $i786 := $p2i.ref.i64($p761);
    goto corral_source_split_2179;

  corral_source_split_2179:
    assume {:verifier.code 0} true;
    $i787 := $add.i64($i786, 16);
    goto corral_source_split_2180;

  corral_source_split_2180:
    assume {:verifier.code 0} true;
    $i788 := $p2i.ref.i64($p761);
    goto corral_source_split_2181;

  corral_source_split_2181:
    assume {:verifier.code 0} true;
    $i789 := $add.i64($i788, 16);
    goto corral_source_split_2182;

  corral_source_split_2182:
    assume {:verifier.code 0} true;
    $p790 := $i2p.i64.ref($i789);
    goto corral_source_split_2183;

  corral_source_split_2183:
    assume {:verifier.code 0} true;
    $i791 := $load.i32($M.1, $p790);
    goto corral_source_split_2184;

  corral_source_split_2184:
    assume {:verifier.code 0} true;
    $p792 := $i2p.i64.ref($i787);
    goto corral_source_split_2185;

  corral_source_split_2185:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p792, $i791);
    goto corral_source_split_2186;

  corral_source_split_2186:
    assume {:verifier.code 0} true;
    $i793 := $p2i.ref.i64($p761);
    goto corral_source_split_2187;

  corral_source_split_2187:
    assume {:verifier.code 0} true;
    $i794 := $add.i64($i793, 20);
    goto corral_source_split_2188;

  corral_source_split_2188:
    assume {:verifier.code 0} true;
    $i795 := $p2i.ref.i64($p761);
    goto corral_source_split_2189;

  corral_source_split_2189:
    assume {:verifier.code 0} true;
    $i796 := $add.i64($i795, 20);
    goto corral_source_split_2190;

  corral_source_split_2190:
    assume {:verifier.code 0} true;
    $p797 := $i2p.i64.ref($i796);
    goto corral_source_split_2191;

  corral_source_split_2191:
    assume {:verifier.code 0} true;
    $i798 := $load.i32($M.1, $p797);
    goto corral_source_split_2192;

  corral_source_split_2192:
    assume {:verifier.code 0} true;
    $p799 := $i2p.i64.ref($i794);
    goto corral_source_split_2193;

  corral_source_split_2193:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p799, $i798);
    goto corral_source_split_2194;

  corral_source_split_2194:
    assume {:verifier.code 0} true;
    $p800 := $bitcast.ref.ref($p6);
    goto corral_source_split_2195;

  corral_source_split_2195:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p800, .str);
    goto corral_source_split_2196;

  corral_source_split_2196:
    assume {:verifier.code 0} true;
    $i801 := $p2i.ref.i64($p6);
    goto corral_source_split_2197;

  corral_source_split_2197:
    assume {:verifier.code 0} true;
    $i802 := $add.i64($i801, 8);
    goto corral_source_split_2198;

  corral_source_split_2198:
    assume {:verifier.code 0} true;
    $p803 := $i2p.i64.ref($i802);
    goto corral_source_split_2199;

  corral_source_split_2199:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p803, .str.78);
    goto corral_source_split_2200;

  corral_source_split_2200:
    assume {:verifier.code 0} true;
    $i804 := $p2i.ref.i64($p6);
    goto corral_source_split_2201;

  corral_source_split_2201:
    assume {:verifier.code 0} true;
    $i805 := $add.i64($i804, 16);
    goto corral_source_split_2202;

  corral_source_split_2202:
    assume {:verifier.code 0} true;
    $p806 := $i2p.i64.ref($i805);
    goto corral_source_split_2203;

  corral_source_split_2203:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p806, .str.2);
    goto corral_source_split_2204;

  corral_source_split_2204:
    assume {:verifier.code 0} true;
    $i807 := $p2i.ref.i64($p6);
    goto corral_source_split_2205;

  corral_source_split_2205:
    assume {:verifier.code 0} true;
    $i808 := $add.i64($i807, 24);
    goto corral_source_split_2206;

  corral_source_split_2206:
    assume {:verifier.code 0} true;
    $p809 := $i2p.i64.ref($i808);
    goto corral_source_split_2207;

  corral_source_split_2207:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p809, .str.91);
    goto corral_source_split_2208;

  corral_source_split_2208:
    assume {:verifier.code 0} true;
    $i810 := $p2i.ref.i64($p6);
    goto corral_source_split_2209;

  corral_source_split_2209:
    assume {:verifier.code 0} true;
    $i811 := $add.i64($i810, 32);
    goto corral_source_split_2210;

  corral_source_split_2210:
    assume {:verifier.code 0} true;
    $p812 := $i2p.i64.ref($i811);
    goto corral_source_split_2211;

  corral_source_split_2211:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p812, 221);
    goto corral_source_split_2212;

  corral_source_split_2212:
    assume {:verifier.code 0} true;
    $i813 := $p2i.ref.i64($p6);
    goto corral_source_split_2213;

  corral_source_split_2213:
    assume {:verifier.code 0} true;
    $i814 := $add.i64($i813, 35);
    goto corral_source_split_2214;

  corral_source_split_2214:
    assume {:verifier.code 0} true;
    $p815 := $i2p.i64.ref($i814);
    goto corral_source_split_2215;

  corral_source_split_2215:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p815, 0);
    goto corral_source_split_2216;

  corral_source_split_2216:
    assume {:verifier.code 0} true;
    $i816 := $p2i.ref.i64($p6);
    goto corral_source_split_2217;

  corral_source_split_2217:
    assume {:verifier.code 0} true;
    $i817 := $add.i64($i816, 35);
    goto corral_source_split_2218;

  corral_source_split_2218:
    assume {:verifier.code 0} true;
    $p818 := $i2p.i64.ref($i817);
    goto corral_source_split_2219;

  corral_source_split_2219:
    assume {:verifier.code 0} true;
    $i819 := $load.i8($M.1, $p818);
    goto corral_source_split_2220;

  corral_source_split_2220:
    assume {:verifier.code 0} true;
    $i820 := $zext.i8.i64($i819);
    goto corral_source_split_2221;

  corral_source_split_2221:
    assume {:verifier.code 0} true;
    $i821 := $and.i64($i820, 1);
    goto corral_source_split_2222;

  corral_source_split_2222:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1044} $i822 := __builtinx_expect.i64.i64($i821, 0);
    goto corral_source_split_2223;

  corral_source_split_2223:
    assume {:verifier.code 0} true;
    $i823 := $sext.i32.i64($i822);
    goto corral_source_split_2224;

  corral_source_split_2224:
    assume {:verifier.code 0} true;
    $i824 := $ne.i64($i823, 0);
    goto corral_source_split_2225;

  corral_source_split_2225:
    assume {:verifier.code 0} true;
    assume {:branchcond $i824} true;
    goto $bb125, $bb126;

  $bb126:
    assume !($i824 == 1);
    assume {:verifier.code 0} true;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    $i844 := $p2i.ref.i64($p761);
    goto corral_source_split_2532;

  corral_source_split_2532:
    assume {:verifier.code 0} true;
    $i845 := $add.i64($i844, 4);
    goto corral_source_split_2533;

  corral_source_split_2533:
    assume {:verifier.code 0} true;
    $p846 := $i2p.i64.ref($i845);
    goto corral_source_split_2534;

  corral_source_split_2534:
    assume {:verifier.code 0} true;
    $i847 := $load.i32($M.1, $p846);
    goto corral_source_split_2535;

  corral_source_split_2535:
    assume {:verifier.code 0} true;
    $i848 := $p2i.ref.i64($p761);
    goto corral_source_split_2536;

  corral_source_split_2536:
    assume {:verifier.code 0} true;
    $i849 := $add.i64($i848, 20);
    goto corral_source_split_2537;

  corral_source_split_2537:
    assume {:verifier.code 0} true;
    $p850 := $i2p.i64.ref($i849);
    goto corral_source_split_2538;

  corral_source_split_2538:
    assume {:verifier.code 0} true;
    $i851 := $load.i32($M.1, $p850);
    goto corral_source_split_2539;

  corral_source_split_2539:
    assume {:verifier.code 0} true;
    $i852 := $ne.i32($i851, $i847);
    goto corral_source_split_2540;

  corral_source_split_2540:
    assume {:verifier.code 0} true;
    assume {:branchcond $i852} true;
    goto $bb128, $bb129;

  $bb129:
    assume !($i852 == 1);
    assume {:verifier.code 0} true;
    goto $bb130;

  $bb130:
    assume {:verifier.code 0} true;
    $p883 := $bitcast.ref.ref($p761);
    goto corral_source_split_2577;

  corral_source_split_2577:
    assume {:verifier.code 0} true;
    $i884 := $load.i32($M.1, $p883);
    goto corral_source_split_2578;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    $i885 := $p2i.ref.i64($p761);
    goto corral_source_split_2579;

  corral_source_split_2579:
    assume {:verifier.code 0} true;
    $i886 := $add.i64($i885, 4);
    goto corral_source_split_2580;

  corral_source_split_2580:
    assume {:verifier.code 0} true;
    $p887 := $i2p.i64.ref($i886);
    goto corral_source_split_2581;

  corral_source_split_2581:
    assume {:verifier.code 0} true;
    $i888 := $load.i32($M.1, $p887);
    goto corral_source_split_2582;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    $i889 := $p2i.ref.i64($p761);
    goto corral_source_split_2583;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    $i890 := $add.i64($i889, 8);
    goto corral_source_split_2584;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    $p891 := $i2p.i64.ref($i890);
    goto corral_source_split_2585;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    $i892 := $load.i32($M.1, $p891);
    goto corral_source_split_2586;

  corral_source_split_2586:
    assume {:verifier.code 0} true;
    $i893 := $sub.i32($i892, $i888);
    goto corral_source_split_2587;

  corral_source_split_2587:
    assume {:verifier.code 0} true;
    $i894 := $add.i32($i893, 1);
    goto corral_source_split_2588;

  corral_source_split_2588:
    assume {:verifier.code 0} true;
    $i895 := $ult.i32($i894, $i884);
    goto corral_source_split_2589;

  corral_source_split_2589:
    assume {:verifier.code 0} true;
    $i491, $p492 := 1, $p761;
    assume {:branchcond $i895} true;
    goto $bb131, $bb132;

  $bb132:
    assume !($i895 == 1);
    assume {:verifier.code 0} true;
    goto $bb133;

  $bb133:
    assume {:verifier.code 0} true;
    $i896 := $p2i.ref.i64($p761);
    goto corral_source_split_2591;

  corral_source_split_2591:
    assume {:verifier.code 0} true;
    $i897 := $add.i64($i896, 24);
    goto corral_source_split_2592;

  corral_source_split_2592:
    assume {:verifier.code 0} true;
    $p898 := $i2p.i64.ref($i897);
    goto corral_source_split_2593;

  corral_source_split_2593:
    assume {:verifier.code 0} true;
    $i899 := $load.i32($M.1, $p898);
    goto corral_source_split_2594;

  corral_source_split_2594:
    assume {:verifier.code 0} true;
    $i900 := $ne.i32($i899, 0);
    goto corral_source_split_2595;

  corral_source_split_2595:
    assume {:verifier.code 0} true;
    $i511, $p512 := 1, $p761;
    assume {:branchcond $i900} true;
    goto $bb134, $bb135;

  $bb135:
    assume !($i900 == 1);
    assume {:verifier.code 0} true;
    goto $bb136;

  $bb136:
    assume {:verifier.code 0} true;
    $i901 := $p2i.ref.i64($p761);
    goto corral_source_split_2597;

  corral_source_split_2597:
    assume {:verifier.code 0} true;
    $i902 := $add.i64($i901, 12);
    goto corral_source_split_2598;

  corral_source_split_2598:
    assume {:verifier.code 0} true;
    $p903 := $i2p.i64.ref($i902);
    goto corral_source_split_2599;

  corral_source_split_2599:
    assume {:verifier.code 0} true;
    $i904 := $load.i32($M.1, $p903);
    goto corral_source_split_2600;

  corral_source_split_2600:
    assume {:verifier.code 0} true;
    $i905 := $and.i32($i904, 1073741824);
    goto corral_source_split_2601;

  corral_source_split_2601:
    assume {:verifier.code 0} true;
    $i906 := $ne.i32($i905, 0);
    goto corral_source_split_2602;

  corral_source_split_2602:
    assume {:verifier.code 0} true;
    $i524, $p525 := 1, $p761;
    assume {:branchcond $i906} true;
    goto $bb137, $bb138;

  $bb138:
    assume !($i906 == 1);
    assume {:verifier.code 0} true;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    goto $bb140;

  $bb140:
    assume {:verifier.code 0} true;
    $i907 := $p2i.ref.i64($p9);
    goto corral_source_split_2604;

  corral_source_split_2604:
    assume {:verifier.code 0} true;
    $i908 := $add.i64($i907, 36);
    goto corral_source_split_2605;

  corral_source_split_2605:
    assume {:verifier.code 0} true;
    $p909 := $i2p.i64.ref($i908);
    goto corral_source_split_2606;

  corral_source_split_2606:
    assume {:verifier.code 0} true;
    $p910 := $bitcast.ref.ref($p909);
    goto corral_source_split_2607;

  corral_source_split_2607:
    assume {:verifier.code 0} true;
    $p911 := $add.ref($p910, $mul.ref(2, 28));
    goto corral_source_split_2608;

  corral_source_split_2608:
    assume {:verifier.code 0} true;
    $p912 := $bitcast.ref.ref($p911);
    goto corral_source_split_2609;

  corral_source_split_2609:
    assume {:verifier.code 0} true;
    $i913 := $load.i32($M.1, $p912);
    goto corral_source_split_2610;

  corral_source_split_2610:
    assume {:verifier.code 0} true;
    $p914 := $bitcast.ref.ref($p911);
    goto corral_source_split_2611;

  corral_source_split_2611:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p914, $i913);
    goto corral_source_split_2612;

  corral_source_split_2612:
    assume {:verifier.code 0} true;
    $i915 := $p2i.ref.i64($p911);
    goto corral_source_split_2613;

  corral_source_split_2613:
    assume {:verifier.code 0} true;
    $i916 := $add.i64($i915, 4);
    goto corral_source_split_2614;

  corral_source_split_2614:
    assume {:verifier.code 0} true;
    $i917 := $p2i.ref.i64($p911);
    goto corral_source_split_2615;

  corral_source_split_2615:
    assume {:verifier.code 0} true;
    $i918 := $add.i64($i917, 4);
    goto corral_source_split_2616;

  corral_source_split_2616:
    assume {:verifier.code 0} true;
    $p919 := $i2p.i64.ref($i918);
    goto corral_source_split_2617;

  corral_source_split_2617:
    assume {:verifier.code 0} true;
    $i920 := $load.i32($M.1, $p919);
    goto corral_source_split_2618;

  corral_source_split_2618:
    assume {:verifier.code 0} true;
    $p921 := $i2p.i64.ref($i916);
    goto corral_source_split_2619;

  corral_source_split_2619:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p921, $i920);
    goto corral_source_split_2620;

  corral_source_split_2620:
    assume {:verifier.code 0} true;
    $i922 := $p2i.ref.i64($p911);
    goto corral_source_split_2621;

  corral_source_split_2621:
    assume {:verifier.code 0} true;
    $i923 := $add.i64($i922, 8);
    goto corral_source_split_2622;

  corral_source_split_2622:
    assume {:verifier.code 0} true;
    $i924 := $p2i.ref.i64($p911);
    goto corral_source_split_2623;

  corral_source_split_2623:
    assume {:verifier.code 0} true;
    $i925 := $add.i64($i924, 8);
    goto corral_source_split_2624;

  corral_source_split_2624:
    assume {:verifier.code 0} true;
    $p926 := $i2p.i64.ref($i925);
    goto corral_source_split_2625;

  corral_source_split_2625:
    assume {:verifier.code 0} true;
    $i927 := $load.i32($M.1, $p926);
    goto corral_source_split_2626;

  corral_source_split_2626:
    assume {:verifier.code 0} true;
    $p928 := $i2p.i64.ref($i923);
    goto corral_source_split_2627;

  corral_source_split_2627:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p928, $i927);
    goto corral_source_split_2628;

  corral_source_split_2628:
    assume {:verifier.code 0} true;
    $i929 := $p2i.ref.i64($p911);
    goto corral_source_split_2629;

  corral_source_split_2629:
    assume {:verifier.code 0} true;
    $i930 := $add.i64($i929, 12);
    goto corral_source_split_2630;

  corral_source_split_2630:
    assume {:verifier.code 0} true;
    $i931 := $p2i.ref.i64($p911);
    goto corral_source_split_2631;

  corral_source_split_2631:
    assume {:verifier.code 0} true;
    $i932 := $add.i64($i931, 12);
    goto corral_source_split_2632;

  corral_source_split_2632:
    assume {:verifier.code 0} true;
    $p933 := $i2p.i64.ref($i932);
    goto corral_source_split_2633;

  corral_source_split_2633:
    assume {:verifier.code 0} true;
    $i934 := $load.i32($M.1, $p933);
    goto corral_source_split_2634;

  corral_source_split_2634:
    assume {:verifier.code 0} true;
    $p935 := $i2p.i64.ref($i930);
    goto corral_source_split_2635;

  corral_source_split_2635:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p935, $i934);
    goto corral_source_split_2636;

  corral_source_split_2636:
    assume {:verifier.code 0} true;
    $i936 := $p2i.ref.i64($p911);
    goto corral_source_split_2637;

  corral_source_split_2637:
    assume {:verifier.code 0} true;
    $i937 := $add.i64($i936, 16);
    goto corral_source_split_2638;

  corral_source_split_2638:
    assume {:verifier.code 0} true;
    $i938 := $p2i.ref.i64($p911);
    goto corral_source_split_2639;

  corral_source_split_2639:
    assume {:verifier.code 0} true;
    $i939 := $add.i64($i938, 16);
    goto corral_source_split_2640;

  corral_source_split_2640:
    assume {:verifier.code 0} true;
    $p940 := $i2p.i64.ref($i939);
    goto corral_source_split_2641;

  corral_source_split_2641:
    assume {:verifier.code 0} true;
    $i941 := $load.i32($M.1, $p940);
    goto corral_source_split_2642;

  corral_source_split_2642:
    assume {:verifier.code 0} true;
    $p942 := $i2p.i64.ref($i937);
    goto corral_source_split_2643;

  corral_source_split_2643:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p942, $i941);
    goto corral_source_split_2644;

  corral_source_split_2644:
    assume {:verifier.code 0} true;
    $i943 := $p2i.ref.i64($p911);
    goto corral_source_split_2645;

  corral_source_split_2645:
    assume {:verifier.code 0} true;
    $i944 := $add.i64($i943, 20);
    goto corral_source_split_2646;

  corral_source_split_2646:
    assume {:verifier.code 0} true;
    $i945 := $p2i.ref.i64($p911);
    goto corral_source_split_2647;

  corral_source_split_2647:
    assume {:verifier.code 0} true;
    $i946 := $add.i64($i945, 20);
    goto corral_source_split_2648;

  corral_source_split_2648:
    assume {:verifier.code 0} true;
    $p947 := $i2p.i64.ref($i946);
    goto corral_source_split_2649;

  corral_source_split_2649:
    assume {:verifier.code 0} true;
    $i948 := $load.i32($M.1, $p947);
    goto corral_source_split_2650;

  corral_source_split_2650:
    assume {:verifier.code 0} true;
    $p949 := $i2p.i64.ref($i944);
    goto corral_source_split_2651;

  corral_source_split_2651:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p949, $i948);
    goto corral_source_split_2652;

  corral_source_split_2652:
    assume {:verifier.code 0} true;
    $p950 := $bitcast.ref.ref($p6);
    goto corral_source_split_2653;

  corral_source_split_2653:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p950, .str);
    goto corral_source_split_2654;

  corral_source_split_2654:
    assume {:verifier.code 0} true;
    $i951 := $p2i.ref.i64($p6);
    goto corral_source_split_2655;

  corral_source_split_2655:
    assume {:verifier.code 0} true;
    $i952 := $add.i64($i951, 8);
    goto corral_source_split_2656;

  corral_source_split_2656:
    assume {:verifier.code 0} true;
    $p953 := $i2p.i64.ref($i952);
    goto corral_source_split_2657;

  corral_source_split_2657:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p953, .str.78);
    goto corral_source_split_2658;

  corral_source_split_2658:
    assume {:verifier.code 0} true;
    $i954 := $p2i.ref.i64($p6);
    goto corral_source_split_2659;

  corral_source_split_2659:
    assume {:verifier.code 0} true;
    $i955 := $add.i64($i954, 16);
    goto corral_source_split_2660;

  corral_source_split_2660:
    assume {:verifier.code 0} true;
    $p956 := $i2p.i64.ref($i955);
    goto corral_source_split_2661;

  corral_source_split_2661:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p956, .str.2);
    goto corral_source_split_2662;

  corral_source_split_2662:
    assume {:verifier.code 0} true;
    $i957 := $p2i.ref.i64($p6);
    goto corral_source_split_2663;

  corral_source_split_2663:
    assume {:verifier.code 0} true;
    $i958 := $add.i64($i957, 24);
    goto corral_source_split_2664;

  corral_source_split_2664:
    assume {:verifier.code 0} true;
    $p959 := $i2p.i64.ref($i958);
    goto corral_source_split_2665;

  corral_source_split_2665:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p959, .str.91);
    goto corral_source_split_2666;

  corral_source_split_2666:
    assume {:verifier.code 0} true;
    $i960 := $p2i.ref.i64($p6);
    goto corral_source_split_2667;

  corral_source_split_2667:
    assume {:verifier.code 0} true;
    $i961 := $add.i64($i960, 32);
    goto corral_source_split_2668;

  corral_source_split_2668:
    assume {:verifier.code 0} true;
    $p962 := $i2p.i64.ref($i961);
    goto corral_source_split_2669;

  corral_source_split_2669:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p962, 221);
    goto corral_source_split_2670;

  corral_source_split_2670:
    assume {:verifier.code 0} true;
    $i963 := $p2i.ref.i64($p6);
    goto corral_source_split_2671;

  corral_source_split_2671:
    assume {:verifier.code 0} true;
    $i964 := $add.i64($i963, 35);
    goto corral_source_split_2672;

  corral_source_split_2672:
    assume {:verifier.code 0} true;
    $p965 := $i2p.i64.ref($i964);
    goto corral_source_split_2673;

  corral_source_split_2673:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p965, 0);
    goto corral_source_split_2674;

  corral_source_split_2674:
    assume {:verifier.code 0} true;
    $i966 := $p2i.ref.i64($p6);
    goto corral_source_split_2675;

  corral_source_split_2675:
    assume {:verifier.code 0} true;
    $i967 := $add.i64($i966, 35);
    goto corral_source_split_2676;

  corral_source_split_2676:
    assume {:verifier.code 0} true;
    $p968 := $i2p.i64.ref($i967);
    goto corral_source_split_2677;

  corral_source_split_2677:
    assume {:verifier.code 0} true;
    $i969 := $load.i8($M.1, $p968);
    goto corral_source_split_2678;

  corral_source_split_2678:
    assume {:verifier.code 0} true;
    $i970 := $zext.i8.i64($i969);
    goto corral_source_split_2679;

  corral_source_split_2679:
    assume {:verifier.code 0} true;
    $i971 := $and.i64($i970, 1);
    goto corral_source_split_2680;

  corral_source_split_2680:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1192} $i972 := __builtinx_expect.i64.i64($i971, 0);
    goto corral_source_split_2681;

  corral_source_split_2681:
    assume {:verifier.code 0} true;
    $i973 := $sext.i32.i64($i972);
    goto corral_source_split_2682;

  corral_source_split_2682:
    assume {:verifier.code 0} true;
    $i974 := $ne.i64($i973, 0);
    goto corral_source_split_2683;

  corral_source_split_2683:
    assume {:verifier.code 0} true;
    assume {:branchcond $i974} true;
    goto $bb141, $bb142;

  $bb142:
    assume !($i974 == 1);
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb143:
    assume {:verifier.code 0} true;
    $i994 := $p2i.ref.i64($p911);
    goto corral_source_split_2706;

  corral_source_split_2706:
    assume {:verifier.code 0} true;
    $i995 := $add.i64($i994, 4);
    goto corral_source_split_2707;

  corral_source_split_2707:
    assume {:verifier.code 0} true;
    $p996 := $i2p.i64.ref($i995);
    goto corral_source_split_2708;

  corral_source_split_2708:
    assume {:verifier.code 0} true;
    $i997 := $load.i32($M.1, $p996);
    goto corral_source_split_2709;

  corral_source_split_2709:
    assume {:verifier.code 0} true;
    $i998 := $p2i.ref.i64($p911);
    goto corral_source_split_2710;

  corral_source_split_2710:
    assume {:verifier.code 0} true;
    $i999 := $add.i64($i998, 20);
    goto corral_source_split_2711;

  corral_source_split_2711:
    assume {:verifier.code 0} true;
    $p1000 := $i2p.i64.ref($i999);
    goto corral_source_split_2712;

  corral_source_split_2712:
    assume {:verifier.code 0} true;
    $i1001 := $load.i32($M.1, $p1000);
    goto corral_source_split_2713;

  corral_source_split_2713:
    assume {:verifier.code 0} true;
    $i1002 := $ne.i32($i1001, $i997);
    goto corral_source_split_2714;

  corral_source_split_2714:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1002} true;
    goto $bb144, $bb145;

  $bb145:
    assume !($i1002 == 1);
    assume {:verifier.code 0} true;
    goto $bb146;

  $bb146:
    assume {:verifier.code 0} true;
    $p1033 := $bitcast.ref.ref($p911);
    goto corral_source_split_2751;

  corral_source_split_2751:
    assume {:verifier.code 0} true;
    $i1034 := $load.i32($M.1, $p1033);
    goto corral_source_split_2752;

  corral_source_split_2752:
    assume {:verifier.code 0} true;
    $i1035 := $p2i.ref.i64($p911);
    goto corral_source_split_2753;

  corral_source_split_2753:
    assume {:verifier.code 0} true;
    $i1036 := $add.i64($i1035, 4);
    goto corral_source_split_2754;

  corral_source_split_2754:
    assume {:verifier.code 0} true;
    $p1037 := $i2p.i64.ref($i1036);
    goto corral_source_split_2755;

  corral_source_split_2755:
    assume {:verifier.code 0} true;
    $i1038 := $load.i32($M.1, $p1037);
    goto corral_source_split_2756;

  corral_source_split_2756:
    assume {:verifier.code 0} true;
    $i1039 := $p2i.ref.i64($p911);
    goto corral_source_split_2757;

  corral_source_split_2757:
    assume {:verifier.code 0} true;
    $i1040 := $add.i64($i1039, 8);
    goto corral_source_split_2758;

  corral_source_split_2758:
    assume {:verifier.code 0} true;
    $p1041 := $i2p.i64.ref($i1040);
    goto corral_source_split_2759;

  corral_source_split_2759:
    assume {:verifier.code 0} true;
    $i1042 := $load.i32($M.1, $p1041);
    goto corral_source_split_2760;

  corral_source_split_2760:
    assume {:verifier.code 0} true;
    $i1043 := $sub.i32($i1042, $i1038);
    goto corral_source_split_2761;

  corral_source_split_2761:
    assume {:verifier.code 0} true;
    $i1044 := $add.i32($i1043, 1);
    goto corral_source_split_2762;

  corral_source_split_2762:
    assume {:verifier.code 0} true;
    $i1045 := $ult.i32($i1044, $i1034);
    goto corral_source_split_2763;

  corral_source_split_2763:
    assume {:verifier.code 0} true;
    $i491, $p492 := 2, $p911;
    assume {:branchcond $i1045} true;
    goto $bb147, $bb148;

  $bb148:
    assume !($i1045 == 1);
    assume {:verifier.code 0} true;
    goto $bb149;

  $bb149:
    assume {:verifier.code 0} true;
    $i1046 := $p2i.ref.i64($p911);
    goto corral_source_split_2765;

  corral_source_split_2765:
    assume {:verifier.code 0} true;
    $i1047 := $add.i64($i1046, 24);
    goto corral_source_split_2766;

  corral_source_split_2766:
    assume {:verifier.code 0} true;
    $p1048 := $i2p.i64.ref($i1047);
    goto corral_source_split_2767;

  corral_source_split_2767:
    assume {:verifier.code 0} true;
    $i1049 := $load.i32($M.1, $p1048);
    goto corral_source_split_2768;

  corral_source_split_2768:
    assume {:verifier.code 0} true;
    $i1050 := $ne.i32($i1049, 0);
    goto corral_source_split_2769;

  corral_source_split_2769:
    assume {:verifier.code 0} true;
    $i511, $p512 := 2, $p911;
    assume {:branchcond $i1050} true;
    goto $bb150, $bb151;

  $bb151:
    assume !($i1050 == 1);
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb152:
    assume {:verifier.code 0} true;
    $i1051 := $p2i.ref.i64($p911);
    goto corral_source_split_2771;

  corral_source_split_2771:
    assume {:verifier.code 0} true;
    $i1052 := $add.i64($i1051, 12);
    goto corral_source_split_2772;

  corral_source_split_2772:
    assume {:verifier.code 0} true;
    $p1053 := $i2p.i64.ref($i1052);
    goto corral_source_split_2773;

  corral_source_split_2773:
    assume {:verifier.code 0} true;
    $i1054 := $load.i32($M.1, $p1053);
    goto corral_source_split_2774;

  corral_source_split_2774:
    assume {:verifier.code 0} true;
    $i1055 := $and.i32($i1054, 1073741824);
    goto corral_source_split_2775;

  corral_source_split_2775:
    assume {:verifier.code 0} true;
    $i1056 := $ne.i32($i1055, 0);
    goto corral_source_split_2776;

  corral_source_split_2776:
    assume {:verifier.code 0} true;
    $i524, $p525 := 2, $p911;
    assume {:branchcond $i1056} true;
    goto $bb153, $bb154;

  $bb154:
    assume !($i1056 == 1);
    assume {:verifier.code 0} true;
    goto $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    $i1057 := $p2i.ref.i64($p9);
    goto corral_source_split_2778;

  corral_source_split_2778:
    assume {:verifier.code 0} true;
    $i1058 := $add.i64($i1057, 36);
    goto corral_source_split_2779;

  corral_source_split_2779:
    assume {:verifier.code 0} true;
    $p1059 := $i2p.i64.ref($i1058);
    goto corral_source_split_2780;

  corral_source_split_2780:
    assume {:verifier.code 0} true;
    $p1060 := $bitcast.ref.ref($p1059);
    goto corral_source_split_2781;

  corral_source_split_2781:
    assume {:verifier.code 0} true;
    $p1061 := $add.ref($p1060, $mul.ref(3, 28));
    goto corral_source_split_2782;

  corral_source_split_2782:
    assume {:verifier.code 0} true;
    $p1062 := $bitcast.ref.ref($p1061);
    goto corral_source_split_2783;

  corral_source_split_2783:
    assume {:verifier.code 0} true;
    $i1063 := $load.i32($M.1, $p1062);
    goto corral_source_split_2784;

  corral_source_split_2784:
    assume {:verifier.code 0} true;
    $p1064 := $bitcast.ref.ref($p1061);
    goto corral_source_split_2785;

  corral_source_split_2785:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1064, $i1063);
    goto corral_source_split_2786;

  corral_source_split_2786:
    assume {:verifier.code 0} true;
    $i1065 := $p2i.ref.i64($p1061);
    goto corral_source_split_2787;

  corral_source_split_2787:
    assume {:verifier.code 0} true;
    $i1066 := $add.i64($i1065, 4);
    goto corral_source_split_2788;

  corral_source_split_2788:
    assume {:verifier.code 0} true;
    $i1067 := $p2i.ref.i64($p1061);
    goto corral_source_split_2789;

  corral_source_split_2789:
    assume {:verifier.code 0} true;
    $i1068 := $add.i64($i1067, 4);
    goto corral_source_split_2790;

  corral_source_split_2790:
    assume {:verifier.code 0} true;
    $p1069 := $i2p.i64.ref($i1068);
    goto corral_source_split_2791;

  corral_source_split_2791:
    assume {:verifier.code 0} true;
    $i1070 := $load.i32($M.1, $p1069);
    goto corral_source_split_2792;

  corral_source_split_2792:
    assume {:verifier.code 0} true;
    $p1071 := $i2p.i64.ref($i1066);
    goto corral_source_split_2793;

  corral_source_split_2793:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1071, $i1070);
    goto corral_source_split_2794;

  corral_source_split_2794:
    assume {:verifier.code 0} true;
    $i1072 := $p2i.ref.i64($p1061);
    goto corral_source_split_2795;

  corral_source_split_2795:
    assume {:verifier.code 0} true;
    $i1073 := $add.i64($i1072, 8);
    goto corral_source_split_2796;

  corral_source_split_2796:
    assume {:verifier.code 0} true;
    $i1074 := $p2i.ref.i64($p1061);
    goto corral_source_split_2797;

  corral_source_split_2797:
    assume {:verifier.code 0} true;
    $i1075 := $add.i64($i1074, 8);
    goto corral_source_split_2798;

  corral_source_split_2798:
    assume {:verifier.code 0} true;
    $p1076 := $i2p.i64.ref($i1075);
    goto corral_source_split_2799;

  corral_source_split_2799:
    assume {:verifier.code 0} true;
    $i1077 := $load.i32($M.1, $p1076);
    goto corral_source_split_2800;

  corral_source_split_2800:
    assume {:verifier.code 0} true;
    $p1078 := $i2p.i64.ref($i1073);
    goto corral_source_split_2801;

  corral_source_split_2801:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1078, $i1077);
    goto corral_source_split_2802;

  corral_source_split_2802:
    assume {:verifier.code 0} true;
    $i1079 := $p2i.ref.i64($p1061);
    goto corral_source_split_2803;

  corral_source_split_2803:
    assume {:verifier.code 0} true;
    $i1080 := $add.i64($i1079, 12);
    goto corral_source_split_2804;

  corral_source_split_2804:
    assume {:verifier.code 0} true;
    $i1081 := $p2i.ref.i64($p1061);
    goto corral_source_split_2805;

  corral_source_split_2805:
    assume {:verifier.code 0} true;
    $i1082 := $add.i64($i1081, 12);
    goto corral_source_split_2806;

  corral_source_split_2806:
    assume {:verifier.code 0} true;
    $p1083 := $i2p.i64.ref($i1082);
    goto corral_source_split_2807;

  corral_source_split_2807:
    assume {:verifier.code 0} true;
    $i1084 := $load.i32($M.1, $p1083);
    goto corral_source_split_2808;

  corral_source_split_2808:
    assume {:verifier.code 0} true;
    $p1085 := $i2p.i64.ref($i1080);
    goto corral_source_split_2809;

  corral_source_split_2809:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1085, $i1084);
    goto corral_source_split_2810;

  corral_source_split_2810:
    assume {:verifier.code 0} true;
    $i1086 := $p2i.ref.i64($p1061);
    goto corral_source_split_2811;

  corral_source_split_2811:
    assume {:verifier.code 0} true;
    $i1087 := $add.i64($i1086, 16);
    goto corral_source_split_2812;

  corral_source_split_2812:
    assume {:verifier.code 0} true;
    $i1088 := $p2i.ref.i64($p1061);
    goto corral_source_split_2813;

  corral_source_split_2813:
    assume {:verifier.code 0} true;
    $i1089 := $add.i64($i1088, 16);
    goto corral_source_split_2814;

  corral_source_split_2814:
    assume {:verifier.code 0} true;
    $p1090 := $i2p.i64.ref($i1089);
    goto corral_source_split_2815;

  corral_source_split_2815:
    assume {:verifier.code 0} true;
    $i1091 := $load.i32($M.1, $p1090);
    goto corral_source_split_2816;

  corral_source_split_2816:
    assume {:verifier.code 0} true;
    $p1092 := $i2p.i64.ref($i1087);
    goto corral_source_split_2817;

  corral_source_split_2817:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1092, $i1091);
    goto corral_source_split_2818;

  corral_source_split_2818:
    assume {:verifier.code 0} true;
    $i1093 := $p2i.ref.i64($p1061);
    goto corral_source_split_2819;

  corral_source_split_2819:
    assume {:verifier.code 0} true;
    $i1094 := $add.i64($i1093, 20);
    goto corral_source_split_2820;

  corral_source_split_2820:
    assume {:verifier.code 0} true;
    $i1095 := $p2i.ref.i64($p1061);
    goto corral_source_split_2821;

  corral_source_split_2821:
    assume {:verifier.code 0} true;
    $i1096 := $add.i64($i1095, 20);
    goto corral_source_split_2822;

  corral_source_split_2822:
    assume {:verifier.code 0} true;
    $p1097 := $i2p.i64.ref($i1096);
    goto corral_source_split_2823;

  corral_source_split_2823:
    assume {:verifier.code 0} true;
    $i1098 := $load.i32($M.1, $p1097);
    goto corral_source_split_2824;

  corral_source_split_2824:
    assume {:verifier.code 0} true;
    $p1099 := $i2p.i64.ref($i1094);
    goto corral_source_split_2825;

  corral_source_split_2825:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1099, $i1098);
    goto corral_source_split_2826;

  corral_source_split_2826:
    assume {:verifier.code 0} true;
    $p1100 := $bitcast.ref.ref($p6);
    goto corral_source_split_2827;

  corral_source_split_2827:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p1100, .str);
    goto corral_source_split_2828;

  corral_source_split_2828:
    assume {:verifier.code 0} true;
    $i1101 := $p2i.ref.i64($p6);
    goto corral_source_split_2829;

  corral_source_split_2829:
    assume {:verifier.code 0} true;
    $i1102 := $add.i64($i1101, 8);
    goto corral_source_split_2830;

  corral_source_split_2830:
    assume {:verifier.code 0} true;
    $p1103 := $i2p.i64.ref($i1102);
    goto corral_source_split_2831;

  corral_source_split_2831:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p1103, .str.78);
    goto corral_source_split_2832;

  corral_source_split_2832:
    assume {:verifier.code 0} true;
    $i1104 := $p2i.ref.i64($p6);
    goto corral_source_split_2833;

  corral_source_split_2833:
    assume {:verifier.code 0} true;
    $i1105 := $add.i64($i1104, 16);
    goto corral_source_split_2834;

  corral_source_split_2834:
    assume {:verifier.code 0} true;
    $p1106 := $i2p.i64.ref($i1105);
    goto corral_source_split_2835;

  corral_source_split_2835:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p1106, .str.2);
    goto corral_source_split_2836;

  corral_source_split_2836:
    assume {:verifier.code 0} true;
    $i1107 := $p2i.ref.i64($p6);
    goto corral_source_split_2837;

  corral_source_split_2837:
    assume {:verifier.code 0} true;
    $i1108 := $add.i64($i1107, 24);
    goto corral_source_split_2838;

  corral_source_split_2838:
    assume {:verifier.code 0} true;
    $p1109 := $i2p.i64.ref($i1108);
    goto corral_source_split_2839;

  corral_source_split_2839:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p1109, .str.91);
    goto corral_source_split_2840;

  corral_source_split_2840:
    assume {:verifier.code 0} true;
    $i1110 := $p2i.ref.i64($p6);
    goto corral_source_split_2841;

  corral_source_split_2841:
    assume {:verifier.code 0} true;
    $i1111 := $add.i64($i1110, 32);
    goto corral_source_split_2842;

  corral_source_split_2842:
    assume {:verifier.code 0} true;
    $p1112 := $i2p.i64.ref($i1111);
    goto corral_source_split_2843;

  corral_source_split_2843:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p1112, 221);
    goto corral_source_split_2844;

  corral_source_split_2844:
    assume {:verifier.code 0} true;
    $i1113 := $p2i.ref.i64($p6);
    goto corral_source_split_2845;

  corral_source_split_2845:
    assume {:verifier.code 0} true;
    $i1114 := $add.i64($i1113, 35);
    goto corral_source_split_2846;

  corral_source_split_2846:
    assume {:verifier.code 0} true;
    $p1115 := $i2p.i64.ref($i1114);
    goto corral_source_split_2847;

  corral_source_split_2847:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p1115, 0);
    goto corral_source_split_2848;

  corral_source_split_2848:
    assume {:verifier.code 0} true;
    $i1116 := $p2i.ref.i64($p6);
    goto corral_source_split_2849;

  corral_source_split_2849:
    assume {:verifier.code 0} true;
    $i1117 := $add.i64($i1116, 35);
    goto corral_source_split_2850;

  corral_source_split_2850:
    assume {:verifier.code 0} true;
    $p1118 := $i2p.i64.ref($i1117);
    goto corral_source_split_2851;

  corral_source_split_2851:
    assume {:verifier.code 0} true;
    $i1119 := $load.i8($M.1, $p1118);
    goto corral_source_split_2852;

  corral_source_split_2852:
    assume {:verifier.code 0} true;
    $i1120 := $zext.i8.i64($i1119);
    goto corral_source_split_2853;

  corral_source_split_2853:
    assume {:verifier.code 0} true;
    $i1121 := $and.i64($i1120, 1);
    goto corral_source_split_2854;

  corral_source_split_2854:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1195} $i1122 := __builtinx_expect.i64.i64($i1121, 0);
    goto corral_source_split_2855;

  corral_source_split_2855:
    assume {:verifier.code 0} true;
    $i1123 := $sext.i32.i64($i1122);
    goto corral_source_split_2856;

  corral_source_split_2856:
    assume {:verifier.code 0} true;
    $i1124 := $ne.i64($i1123, 0);
    goto corral_source_split_2857;

  corral_source_split_2857:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1124} true;
    goto $bb157, $bb158;

  $bb158:
    assume !($i1124 == 1);
    assume {:verifier.code 0} true;
    goto $bb159;

  $bb159:
    assume {:verifier.code 0} true;
    $i1144 := $p2i.ref.i64($p1061);
    goto corral_source_split_2880;

  corral_source_split_2880:
    assume {:verifier.code 0} true;
    $i1145 := $add.i64($i1144, 4);
    goto corral_source_split_2881;

  corral_source_split_2881:
    assume {:verifier.code 0} true;
    $p1146 := $i2p.i64.ref($i1145);
    goto corral_source_split_2882;

  corral_source_split_2882:
    assume {:verifier.code 0} true;
    $i1147 := $load.i32($M.1, $p1146);
    goto corral_source_split_2883;

  corral_source_split_2883:
    assume {:verifier.code 0} true;
    $i1148 := $p2i.ref.i64($p1061);
    goto corral_source_split_2884;

  corral_source_split_2884:
    assume {:verifier.code 0} true;
    $i1149 := $add.i64($i1148, 20);
    goto corral_source_split_2885;

  corral_source_split_2885:
    assume {:verifier.code 0} true;
    $p1150 := $i2p.i64.ref($i1149);
    goto corral_source_split_2886;

  corral_source_split_2886:
    assume {:verifier.code 0} true;
    $i1151 := $load.i32($M.1, $p1150);
    goto corral_source_split_2887;

  corral_source_split_2887:
    assume {:verifier.code 0} true;
    $i1152 := $ne.i32($i1151, $i1147);
    goto corral_source_split_2888;

  corral_source_split_2888:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1152} true;
    goto $bb160, $bb161;

  $bb161:
    assume !($i1152 == 1);
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    $p1183 := $bitcast.ref.ref($p1061);
    goto corral_source_split_2925;

  corral_source_split_2925:
    assume {:verifier.code 0} true;
    $i1184 := $load.i32($M.1, $p1183);
    goto corral_source_split_2926;

  corral_source_split_2926:
    assume {:verifier.code 0} true;
    $i1185 := $p2i.ref.i64($p1061);
    goto corral_source_split_2927;

  corral_source_split_2927:
    assume {:verifier.code 0} true;
    $i1186 := $add.i64($i1185, 4);
    goto corral_source_split_2928;

  corral_source_split_2928:
    assume {:verifier.code 0} true;
    $p1187 := $i2p.i64.ref($i1186);
    goto corral_source_split_2929;

  corral_source_split_2929:
    assume {:verifier.code 0} true;
    $i1188 := $load.i32($M.1, $p1187);
    goto corral_source_split_2930;

  corral_source_split_2930:
    assume {:verifier.code 0} true;
    $i1189 := $p2i.ref.i64($p1061);
    goto corral_source_split_2931;

  corral_source_split_2931:
    assume {:verifier.code 0} true;
    $i1190 := $add.i64($i1189, 8);
    goto corral_source_split_2932;

  corral_source_split_2932:
    assume {:verifier.code 0} true;
    $p1191 := $i2p.i64.ref($i1190);
    goto corral_source_split_2933;

  corral_source_split_2933:
    assume {:verifier.code 0} true;
    $i1192 := $load.i32($M.1, $p1191);
    goto corral_source_split_2934;

  corral_source_split_2934:
    assume {:verifier.code 0} true;
    $i1193 := $sub.i32($i1192, $i1188);
    goto corral_source_split_2935;

  corral_source_split_2935:
    assume {:verifier.code 0} true;
    $i1194 := $add.i32($i1193, 1);
    goto corral_source_split_2936;

  corral_source_split_2936:
    assume {:verifier.code 0} true;
    $i1195 := $ult.i32($i1194, $i1184);
    goto corral_source_split_2937;

  corral_source_split_2937:
    assume {:verifier.code 0} true;
    $i491, $p492 := 3, $p1061;
    assume {:branchcond $i1195} true;
    goto $bb163, $bb164;

  $bb164:
    assume !($i1195 == 1);
    assume {:verifier.code 0} true;
    goto $bb165;

  $bb165:
    assume {:verifier.code 0} true;
    $i1196 := $p2i.ref.i64($p1061);
    goto corral_source_split_2939;

  corral_source_split_2939:
    assume {:verifier.code 0} true;
    $i1197 := $add.i64($i1196, 24);
    goto corral_source_split_2940;

  corral_source_split_2940:
    assume {:verifier.code 0} true;
    $p1198 := $i2p.i64.ref($i1197);
    goto corral_source_split_2941;

  corral_source_split_2941:
    assume {:verifier.code 0} true;
    $i1199 := $load.i32($M.1, $p1198);
    goto corral_source_split_2942;

  corral_source_split_2942:
    assume {:verifier.code 0} true;
    $i1200 := $ne.i32($i1199, 0);
    goto corral_source_split_2943;

  corral_source_split_2943:
    assume {:verifier.code 0} true;
    $i511, $p512 := 3, $p1061;
    assume {:branchcond $i1200} true;
    goto $bb166, $bb167;

  $bb167:
    assume !($i1200 == 1);
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    $i1201 := $p2i.ref.i64($p1061);
    goto corral_source_split_2945;

  corral_source_split_2945:
    assume {:verifier.code 0} true;
    $i1202 := $add.i64($i1201, 12);
    goto corral_source_split_2946;

  corral_source_split_2946:
    assume {:verifier.code 0} true;
    $p1203 := $i2p.i64.ref($i1202);
    goto corral_source_split_2947;

  corral_source_split_2947:
    assume {:verifier.code 0} true;
    $i1204 := $load.i32($M.1, $p1203);
    goto corral_source_split_2948;

  corral_source_split_2948:
    assume {:verifier.code 0} true;
    $i1205 := $and.i32($i1204, 1073741824);
    goto corral_source_split_2949;

  corral_source_split_2949:
    assume {:verifier.code 0} true;
    $i1206 := $ne.i32($i1205, 0);
    goto corral_source_split_2950;

  corral_source_split_2950:
    assume {:verifier.code 0} true;
    $i524, $p525 := 3, $p1061;
    assume {:branchcond $i1206} true;
    goto $bb169, $bb170;

  $bb170:
    assume !($i1206 == 1);
    assume {:verifier.code 0} true;
    goto $bb171;

  $bb171:
    assume {:verifier.code 0} true;
    $i526, $p527 := 4, $p1061;
    goto $bb72;

  $bb72:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2143;

  corral_source_split_2143:
    assume {:verifier.code 0} true;
    $i528 := $ugt.i32($i526, 3);
    goto corral_source_split_2144;

  corral_source_split_2144:
    assume {:verifier.code 0} true;
    assume {:branchcond $i528} true;
    goto $bb75, $bb76;

  $bb76:
    assume !($i528 == 1);
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    $i530 := $p2i.ref.i64($p0);
    call {:si_unique_call 1046} {:cexpr "__cil_tmp347"} boogie_si_record_i64($i530);
    goto corral_source_split_2230;

  corral_source_split_2230:
    assume {:verifier.code 0} true;
    $i531 := $add.i64($i530, 564);
    call {:si_unique_call 1047} {:cexpr "__cil_tmp348"} boogie_si_record_i64($i531);
    goto corral_source_split_2231;

  corral_source_split_2231:
    assume {:verifier.code 0} true;
    $i532 := $p2i.ref.i64($p527);
    call {:si_unique_call 1048} {:cexpr "__cil_tmp349"} boogie_si_record_i64($i532);
    goto corral_source_split_2232;

  corral_source_split_2232:
    assume {:verifier.code 0} true;
    $i533 := $add.i64($i532, 4);
    call {:si_unique_call 1049} {:cexpr "__cil_tmp350"} boogie_si_record_i64($i533);
    goto corral_source_split_2233;

  corral_source_split_2233:
    assume {:verifier.code 0} true;
    $p534 := $i2p.i64.ref($i533);
    goto corral_source_split_2234;

  corral_source_split_2234:
    assume {:verifier.code 0} true;
    $i535 := $load.i32($M.1, $p534);
    goto corral_source_split_2235;

  corral_source_split_2235:
    assume {:verifier.code 0} true;
    $p536 := $i2p.i64.ref($i531);
    goto corral_source_split_2236;

  corral_source_split_2236:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p536, $i535);
    goto corral_source_split_2237;

  corral_source_split_2237:
    assume {:verifier.code 0} true;
    $i537 := $p2i.ref.i64($p0);
    call {:si_unique_call 1050} {:cexpr "__cil_tmp351"} boogie_si_record_i64($i537);
    goto corral_source_split_2238;

  corral_source_split_2238:
    assume {:verifier.code 0} true;
    $i538 := $add.i64($i537, 516);
    call {:si_unique_call 1051} {:cexpr "__cil_tmp352"} boogie_si_record_i64($i538);
    goto corral_source_split_2239;

  corral_source_split_2239:
    assume {:verifier.code 0} true;
    $p539 := $bitcast.ref.ref($p527);
    goto corral_source_split_2240;

  corral_source_split_2240:
    assume {:verifier.code 0} true;
    $i540 := $load.i32($M.1, $p539);
    call {:si_unique_call 1052} {:cexpr "__cil_tmp353"} boogie_si_record_i32($i540);
    goto corral_source_split_2241;

  corral_source_split_2241:
    assume {:verifier.code 0} true;
    $i541 := $trunc.i32.i16($i540);
    goto corral_source_split_2242;

  corral_source_split_2242:
    assume {:verifier.code 0} true;
    $p542 := $i2p.i64.ref($i538);
    goto corral_source_split_2243;

  corral_source_split_2243:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p542, $i541);
    goto corral_source_split_2244;

  corral_source_split_2244:
    assume {:verifier.code 0} true;
    $i543 := $p2i.ref.i64($p0);
    call {:si_unique_call 1053} {:cexpr "__cil_tmp354"} boogie_si_record_i64($i543);
    goto corral_source_split_2245;

  corral_source_split_2245:
    assume {:verifier.code 0} true;
    $i544 := $add.i64($i543, 564);
    call {:si_unique_call 1054} {:cexpr "__cil_tmp355"} boogie_si_record_i64($i544);
    goto corral_source_split_2246;

  corral_source_split_2246:
    assume {:verifier.code 0} true;
    $p545 := $i2p.i64.ref($i544);
    goto corral_source_split_2247;

  corral_source_split_2247:
    assume {:verifier.code 0} true;
    $i546 := $load.i32($M.1, $p545);
    call {:si_unique_call 1055} {:cexpr "__cil_tmp356"} boogie_si_record_i32($i546);
    goto corral_source_split_2248;

  corral_source_split_2248:
    assume {:verifier.code 0} true;
    $i547 := $p2i.ref.i64($p0);
    call {:si_unique_call 1056} {:cexpr "__cil_tmp357"} boogie_si_record_i64($i547);
    goto corral_source_split_2249;

  corral_source_split_2249:
    assume {:verifier.code 0} true;
    $i548 := $add.i64($i547, 560);
    call {:si_unique_call 1057} {:cexpr "__cil_tmp358"} boogie_si_record_i64($i548);
    goto corral_source_split_2250;

  corral_source_split_2250:
    assume {:verifier.code 0} true;
    $p549 := $i2p.i64.ref($i548);
    goto corral_source_split_2251;

  corral_source_split_2251:
    assume {:verifier.code 0} true;
    $i550 := $load.i32($M.1, $p549);
    call {:si_unique_call 1058} {:cexpr "__cil_tmp359"} boogie_si_record_i32($i550);
    goto corral_source_split_2252;

  corral_source_split_2252:
    assume {:verifier.code 0} true;
    $i551 := $sub.i32($i550, $i546);
    call {:si_unique_call 1059} {:cexpr "__cil_tmp360"} boogie_si_record_i32($i551);
    goto corral_source_split_2253;

  corral_source_split_2253:
    assume {:verifier.code 0} true;
    $i552 := $sub.i32($i551, 2);
    call {:si_unique_call 1060} {:cexpr "__cil_tmp361"} boogie_si_record_i32($i552);
    goto corral_source_split_2254;

  corral_source_split_2254:
    assume {:verifier.code 0} true;
    $i553 := $p2i.ref.i64($p0);
    call {:si_unique_call 1061} {:cexpr "__cil_tmp362"} boogie_si_record_i64($i553);
    goto corral_source_split_2255;

  corral_source_split_2255:
    assume {:verifier.code 0} true;
    $i554 := $add.i64($i553, 516);
    call {:si_unique_call 1062} {:cexpr "__cil_tmp363"} boogie_si_record_i64($i554);
    goto corral_source_split_2256;

  corral_source_split_2256:
    assume {:verifier.code 0} true;
    $p555 := $i2p.i64.ref($i554);
    goto corral_source_split_2257;

  corral_source_split_2257:
    assume {:verifier.code 0} true;
    $i556 := $load.i16($M.1, $p555);
    call {:si_unique_call 1063} {:cexpr "__cil_tmp364"} boogie_si_record_i16($i556);
    goto corral_source_split_2258;

  corral_source_split_2258:
    assume {:verifier.code 0} true;
    $i557 := $zext.i16.i32($i556);
    call {:si_unique_call 1064} {:cexpr "__cil_tmp365"} boogie_si_record_i32($i557);
    goto corral_source_split_2259;

  corral_source_split_2259:
    assume {:verifier.code 0} true;
    $i558 := $ugt.i32($i557, $i552);
    goto corral_source_split_2260;

  corral_source_split_2260:
    assume {:verifier.code 0} true;
    assume {:branchcond $i558} true;
    goto $bb78, $bb79;

  $bb79:
    assume !($i558 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    $i573 := $p2i.ref.i64($p0);
    call {:si_unique_call 1076} {:cexpr "__cil_tmp377"} boogie_si_record_i64($i573);
    goto corral_source_split_2278;

  corral_source_split_2278:
    assume {:verifier.code 0} true;
    $i574 := $add.i64($i573, 208);
    call {:si_unique_call 1077} {:cexpr "__cil_tmp378"} boogie_si_record_i64($i574);
    goto corral_source_split_2279;

  corral_source_split_2279:
    assume {:verifier.code 0} true;
    $i575 := $p2i.ref.i64($p0);
    call {:si_unique_call 1078} {:cexpr "__cil_tmp379"} boogie_si_record_i64($i575);
    goto corral_source_split_2280;

  corral_source_split_2280:
    assume {:verifier.code 0} true;
    $i576 := $add.i64($i575, 356);
    call {:si_unique_call 1079} {:cexpr "__cil_tmp380"} boogie_si_record_i64($i576);
    goto corral_source_split_2281;

  corral_source_split_2281:
    assume {:verifier.code 0} true;
    $p577 := $i2p.i64.ref($i576);
    goto corral_source_split_2282;

  corral_source_split_2282:
    assume {:verifier.code 0} true;
    $i578 := $load.i32($M.1, $p577);
    call {:si_unique_call 1080} {:cexpr "__cil_tmp381"} boogie_si_record_i32($i578);
    goto corral_source_split_2283;

  corral_source_split_2283:
    assume {:verifier.code 0} true;
    $i579 := $udiv.i32($i578, 512);
    call {:si_unique_call 1081} {:cexpr "__cil_tmp382"} boogie_si_record_i32($i579);
    goto corral_source_split_2284;

  corral_source_split_2284:
    assume {:verifier.code 0} true;
    $i580 := $p2i.ref.i64($p0);
    call {:si_unique_call 1082} {:cexpr "__cil_tmp383"} boogie_si_record_i64($i580);
    goto corral_source_split_2285;

  corral_source_split_2285:
    assume {:verifier.code 0} true;
    $i581 := $add.i64($i580, 516);
    call {:si_unique_call 1083} {:cexpr "__cil_tmp384"} boogie_si_record_i64($i581);
    goto corral_source_split_2286;

  corral_source_split_2286:
    assume {:verifier.code 0} true;
    $p582 := $i2p.i64.ref($i581);
    goto corral_source_split_2287;

  corral_source_split_2287:
    assume {:verifier.code 0} true;
    $i583 := $load.i16($M.1, $p582);
    call {:si_unique_call 1084} {:cexpr "__cil_tmp385"} boogie_si_record_i16($i583);
    goto corral_source_split_2288;

  corral_source_split_2288:
    assume {:verifier.code 0} true;
    $i584 := $zext.i16.i32($i583);
    call {:si_unique_call 1085} {:cexpr "__cil_tmp386"} boogie_si_record_i32($i584);
    goto corral_source_split_2289;

  corral_source_split_2289:
    assume {:verifier.code 0} true;
    $i585 := $mul.i32($i584, $i579);
    call {:si_unique_call 1086} {:cexpr "__cil_tmp387"} boogie_si_record_i32($i585);
    goto corral_source_split_2290;

  corral_source_split_2290:
    assume {:verifier.code 0} true;
    $i586 := $zext.i32.i64($i585);
    goto corral_source_split_2291;

  corral_source_split_2291:
    assume {:verifier.code 0} true;
    $p587 := $i2p.i64.ref($i574);
    goto corral_source_split_2292;

  corral_source_split_2292:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p587, $i586);
    goto corral_source_split_2293;

  corral_source_split_2293:
    assume {:verifier.code 0} true;
    $i588 := $p2i.ref.i64($p0);
    call {:si_unique_call 1087} {:cexpr "__cil_tmp388"} boogie_si_record_i64($i588);
    goto corral_source_split_2294;

  corral_source_split_2294:
    assume {:verifier.code 0} true;
    $i589 := $add.i64($i588, 518);
    call {:si_unique_call 1088} {:cexpr "__cil_tmp389"} boogie_si_record_i64($i589);
    goto corral_source_split_2295;

  corral_source_split_2295:
    assume {:verifier.code 0} true;
    $i590 := $p2i.ref.i64($p527);
    call {:si_unique_call 1089} {:cexpr "__cil_tmp390"} boogie_si_record_i64($i590);
    goto corral_source_split_2296;

  corral_source_split_2296:
    assume {:verifier.code 0} true;
    $i591 := $add.i64($i590, 4);
    call {:si_unique_call 1090} {:cexpr "__cil_tmp391"} boogie_si_record_i64($i591);
    goto corral_source_split_2297;

  corral_source_split_2297:
    assume {:verifier.code 0} true;
    $p592 := $i2p.i64.ref($i591);
    goto corral_source_split_2298;

  corral_source_split_2298:
    assume {:verifier.code 0} true;
    $i593 := $load.i32($M.1, $p592);
    call {:si_unique_call 1091} {:cexpr "__cil_tmp392"} boogie_si_record_i32($i593);
    goto corral_source_split_2299;

  corral_source_split_2299:
    assume {:verifier.code 0} true;
    $i594 := $trunc.i32.i16($i593);
    goto corral_source_split_2300;

  corral_source_split_2300:
    assume {:verifier.code 0} true;
    $p595 := $i2p.i64.ref($i589);
    goto corral_source_split_2301;

  corral_source_split_2301:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p595, $i594);
    goto corral_source_split_2302;

  corral_source_split_2302:
    assume {:verifier.code 0} true;
    $i596 := $p2i.ref.i64($p0);
    call {:si_unique_call 1092} {:cexpr "__cil_tmp393"} boogie_si_record_i64($i596);
    goto corral_source_split_2303;

  corral_source_split_2303:
    assume {:verifier.code 0} true;
    $i597 := $add.i64($i596, 520);
    call {:si_unique_call 1093} {:cexpr "__cil_tmp394"} boogie_si_record_i64($i597);
    goto corral_source_split_2304;

  corral_source_split_2304:
    assume {:verifier.code 0} true;
    $i598 := $p2i.ref.i64($p527);
    call {:si_unique_call 1094} {:cexpr "__cil_tmp395"} boogie_si_record_i64($i598);
    goto corral_source_split_2305;

  corral_source_split_2305:
    assume {:verifier.code 0} true;
    $i599 := $add.i64($i598, 8);
    call {:si_unique_call 1095} {:cexpr "__cil_tmp396"} boogie_si_record_i64($i599);
    goto corral_source_split_2306;

  corral_source_split_2306:
    assume {:verifier.code 0} true;
    $p600 := $i2p.i64.ref($i599);
    goto corral_source_split_2307;

  corral_source_split_2307:
    assume {:verifier.code 0} true;
    $i601 := $load.i32($M.1, $p600);
    call {:si_unique_call 1096} {:cexpr "__cil_tmp397"} boogie_si_record_i32($i601);
    goto corral_source_split_2308;

  corral_source_split_2308:
    assume {:verifier.code 0} true;
    $i602 := $trunc.i32.i16($i601);
    goto corral_source_split_2309;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    $p603 := $i2p.i64.ref($i597);
    goto corral_source_split_2310;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p603, $i602);
    goto corral_source_split_2311;

  corral_source_split_2311:
    assume {:verifier.code 0} true;
    $i604 := $p2i.ref.i64($p0);
    call {:si_unique_call 1097} {:cexpr "__cil_tmp398"} boogie_si_record_i64($i604);
    goto corral_source_split_2312;

  corral_source_split_2312:
    assume {:verifier.code 0} true;
    $i605 := $add.i64($i604, 560);
    call {:si_unique_call 1098} {:cexpr "__cil_tmp399"} boogie_si_record_i64($i605);
    goto corral_source_split_2313;

  corral_source_split_2313:
    assume {:verifier.code 0} true;
    $i606 := $p2i.ref.i64($p527);
    call {:si_unique_call 1099} {:cexpr "__cil_tmp400"} boogie_si_record_i64($i606);
    goto corral_source_split_2314;

  corral_source_split_2314:
    assume {:verifier.code 0} true;
    $i607 := $add.i64($i606, 8);
    call {:si_unique_call 1100} {:cexpr "__cil_tmp401"} boogie_si_record_i64($i607);
    goto corral_source_split_2315;

  corral_source_split_2315:
    assume {:verifier.code 0} true;
    $p608 := $i2p.i64.ref($i607);
    goto corral_source_split_2316;

  corral_source_split_2316:
    assume {:verifier.code 0} true;
    $i609 := $load.i32($M.1, $p608);
    call {:si_unique_call 1101} {:cexpr "__cil_tmp402"} boogie_si_record_i32($i609);
    goto corral_source_split_2317;

  corral_source_split_2317:
    assume {:verifier.code 0} true;
    $i610 := $add.i32($i609, 1);
    goto corral_source_split_2318;

  corral_source_split_2318:
    assume {:verifier.code 0} true;
    $p611 := $i2p.i64.ref($i605);
    goto corral_source_split_2319;

  corral_source_split_2319:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p611, $i610);
    goto corral_source_split_2320;

  corral_source_split_2320:
    assume {:verifier.code 0} true;
    $i612 := $p2i.ref.i64($p0);
    call {:si_unique_call 1102} {:cexpr "__cil_tmp403"} boogie_si_record_i64($i612);
    goto corral_source_split_2321;

  corral_source_split_2321:
    assume {:verifier.code 0} true;
    $i613 := $add.i64($i612, 560);
    call {:si_unique_call 1103} {:cexpr "__cil_tmp404"} boogie_si_record_i64($i613);
    goto corral_source_split_2322;

  corral_source_split_2322:
    assume {:verifier.code 0} true;
    $p614 := $i2p.i64.ref($i613);
    goto corral_source_split_2323;

  corral_source_split_2323:
    assume {:verifier.code 0} true;
    $i615 := $load.i32($M.1, $p614);
    call {:si_unique_call 1104} {:cexpr "__cil_tmp405"} boogie_si_record_i32($i615);
    goto corral_source_split_2324;

  corral_source_split_2324:
    assume {:verifier.code 0} true;
    $i616 := $zext.i32.i64($i615);
    call {:si_unique_call 1105} {:cexpr "__cil_tmp406"} boogie_si_record_i64($i616);
    goto corral_source_split_2325;

  corral_source_split_2325:
    assume {:verifier.code 0} true;
    $i617 := $mul.i64($i616, 2);
    call {:si_unique_call 1106} {:cexpr "__cil_tmp407"} boogie_si_record_i64($i617);
    goto corral_source_split_2326;

  corral_source_split_2326:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1107} $p618 := kmalloc($i617, 208);
    goto SeqInstr_16, SeqInstr_17;

  SeqInstr_17:
    assume assertsPassed;
    goto SeqInstr_18;

  SeqInstr_18:
    goto corral_source_split_2327;

  corral_source_split_2327:
    assume {:verifier.code 0} true;
    $i619 := $p2i.ref.i64($p0);
    call {:si_unique_call 1108} {:cexpr "__cil_tmp408"} boogie_si_record_i64($i619);
    goto corral_source_split_2328;

  corral_source_split_2328:
    assume {:verifier.code 0} true;
    $i620 := $add.i64($i619, 544);
    call {:si_unique_call 1109} {:cexpr "__cil_tmp409"} boogie_si_record_i64($i620);
    goto corral_source_split_2329;

  corral_source_split_2329:
    assume {:verifier.code 0} true;
    goto corral_source_split_2330;

  corral_source_split_2330:
    assume {:verifier.code 0} true;
    $p622 := $i2p.i64.ref($i620);
    goto corral_source_split_2331;

  corral_source_split_2331:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p622, $p618);
    goto corral_source_split_2332;

  corral_source_split_2332:
    assume {:verifier.code 0} true;
    $i623 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 1110} {:cexpr "__cil_tmp411"} boogie_si_record_i64($i623);
    goto corral_source_split_2333;

  corral_source_split_2333:
    assume {:verifier.code 0} true;
    $i624 := $p2i.ref.i64($p0);
    call {:si_unique_call 1111} {:cexpr "__cil_tmp412"} boogie_si_record_i64($i624);
    goto corral_source_split_2334;

  corral_source_split_2334:
    assume {:verifier.code 0} true;
    $i625 := $add.i64($i624, 544);
    call {:si_unique_call 1112} {:cexpr "__cil_tmp413"} boogie_si_record_i64($i625);
    goto corral_source_split_2335;

  corral_source_split_2335:
    assume {:verifier.code 0} true;
    $p626 := $i2p.i64.ref($i625);
    goto corral_source_split_2336;

  corral_source_split_2336:
    assume {:verifier.code 0} true;
    $p627 := $load.ref($M.1, $p626);
    goto corral_source_split_2337;

  corral_source_split_2337:
    assume {:verifier.code 0} true;
    $i628 := $p2i.ref.i64($p627);
    call {:si_unique_call 1113} {:cexpr "__cil_tmp415"} boogie_si_record_i64($i628);
    goto corral_source_split_2338;

  corral_source_split_2338:
    assume {:verifier.code 0} true;
    $i629 := $eq.i64($i628, $i623);
    goto corral_source_split_2339;

  corral_source_split_2339:
    assume {:verifier.code 0} true;
    assume {:branchcond $i629} true;
    goto $bb81, $bb82;

  $bb82:
    assume !($i629 == 1);
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    $i637 := $p2i.ref.i64($p0);
    call {:si_unique_call 1120} {:cexpr "__cil_tmp421"} boogie_si_record_i64($i637);
    goto corral_source_split_2350;

  corral_source_split_2350:
    assume {:verifier.code 0} true;
    $i638 := $add.i64($i637, 560);
    call {:si_unique_call 1121} {:cexpr "__cil_tmp422"} boogie_si_record_i64($i638);
    goto corral_source_split_2351;

  corral_source_split_2351:
    assume {:verifier.code 0} true;
    $p639 := $i2p.i64.ref($i638);
    goto corral_source_split_2352;

  corral_source_split_2352:
    assume {:verifier.code 0} true;
    $i640 := $load.i32($M.1, $p639);
    call {:si_unique_call 1122} {:cexpr "__cil_tmp423"} boogie_si_record_i32($i640);
    goto corral_source_split_2353;

  corral_source_split_2353:
    assume {:verifier.code 0} true;
    $i641 := $zext.i32.i64($i640);
    call {:si_unique_call 1123} {:cexpr "__cil_tmp424"} boogie_si_record_i64($i641);
    goto corral_source_split_2354;

  corral_source_split_2354:
    assume {:verifier.code 0} true;
    $i642 := $mul.i64($i641, 2);
    call {:si_unique_call 1124} {:cexpr "__cil_tmp425"} boogie_si_record_i64($i642);
    goto corral_source_split_2355;

  corral_source_split_2355:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1125} $p643 := kmalloc($i642, 208);
    goto SeqInstr_19, SeqInstr_20;

  SeqInstr_20:
    assume assertsPassed;
    goto SeqInstr_21;

  SeqInstr_21:
    goto corral_source_split_2356;

  corral_source_split_2356:
    assume {:verifier.code 0} true;
    $i644 := $p2i.ref.i64($p0);
    call {:si_unique_call 1126} {:cexpr "__cil_tmp426"} boogie_si_record_i64($i644);
    goto corral_source_split_2357;

  corral_source_split_2357:
    assume {:verifier.code 0} true;
    $i645 := $add.i64($i644, 552);
    call {:si_unique_call 1127} {:cexpr "__cil_tmp427"} boogie_si_record_i64($i645);
    goto corral_source_split_2358;

  corral_source_split_2358:
    assume {:verifier.code 0} true;
    goto corral_source_split_2359;

  corral_source_split_2359:
    assume {:verifier.code 0} true;
    $p647 := $i2p.i64.ref($i645);
    goto corral_source_split_2360;

  corral_source_split_2360:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p647, $p643);
    goto corral_source_split_2361;

  corral_source_split_2361:
    assume {:verifier.code 0} true;
    $i648 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 1128} {:cexpr "__cil_tmp429"} boogie_si_record_i64($i648);
    goto corral_source_split_2362;

  corral_source_split_2362:
    assume {:verifier.code 0} true;
    $i649 := $p2i.ref.i64($p0);
    call {:si_unique_call 1129} {:cexpr "__cil_tmp430"} boogie_si_record_i64($i649);
    goto corral_source_split_2363;

  corral_source_split_2363:
    assume {:verifier.code 0} true;
    $i650 := $add.i64($i649, 552);
    call {:si_unique_call 1130} {:cexpr "__cil_tmp431"} boogie_si_record_i64($i650);
    goto corral_source_split_2364;

  corral_source_split_2364:
    assume {:verifier.code 0} true;
    $p651 := $i2p.i64.ref($i650);
    goto corral_source_split_2365;

  corral_source_split_2365:
    assume {:verifier.code 0} true;
    $p652 := $load.ref($M.1, $p651);
    goto corral_source_split_2366;

  corral_source_split_2366:
    assume {:verifier.code 0} true;
    $i653 := $p2i.ref.i64($p652);
    call {:si_unique_call 1131} {:cexpr "__cil_tmp433"} boogie_si_record_i64($i653);
    goto corral_source_split_2367;

  corral_source_split_2367:
    assume {:verifier.code 0} true;
    $i654 := $eq.i64($i653, $i648);
    goto corral_source_split_2368;

  corral_source_split_2368:
    assume {:verifier.code 0} true;
    assume {:branchcond $i654} true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i654 == 1);
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    $i667 := $p2i.ref.i64($p0);
    call {:si_unique_call 1141} {:cexpr "__cil_tmp448"} boogie_si_record_i64($i667);
    goto corral_source_split_2385;

  corral_source_split_2385:
    assume {:verifier.code 0} true;
    $i668 := $add.i64($i667, 564);
    call {:si_unique_call 1142} {:cexpr "__cil_tmp449"} boogie_si_record_i64($i668);
    goto corral_source_split_2386;

  corral_source_split_2386:
    assume {:verifier.code 0} true;
    $p669 := $i2p.i64.ref($i668);
    goto corral_source_split_2387;

  corral_source_split_2387:
    assume {:verifier.code 0} true;
    $i670 := $load.i32($M.1, $p669);
    call {:si_unique_call 1143} {:cexpr "__cil_tmp450"} boogie_si_record_i32($i670);
    goto corral_source_split_2388;

  corral_source_split_2388:
    assume {:verifier.code 0} true;
    $i671 := $ugt.i32($i670, 0);
    goto corral_source_split_2389;

  corral_source_split_2389:
    assume {:verifier.code 0} true;
    $i672 := 0;
    assume {:branchcond $i671} true;
    goto $bb87, $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    assume !($i671 == 1);
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    goto corral_source_split_2393;

  corral_source_split_2393:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i684 := $p2i.ref.i64($p0);
    call {:si_unique_call 1149} {:cexpr "__cil_tmp456"} boogie_si_record_i64($i684);
    goto corral_source_split_2410;

  corral_source_split_2410:
    assume {:verifier.code 0} true;
    $i685 := $add.i64($i684, 560);
    call {:si_unique_call 1150} {:cexpr "__cil_tmp457"} boogie_si_record_i64($i685);
    goto corral_source_split_2411;

  corral_source_split_2411:
    assume {:verifier.code 0} true;
    $p686 := $i2p.i64.ref($i685);
    goto corral_source_split_2412;

  corral_source_split_2412:
    assume {:verifier.code 0} true;
    $i687 := $load.i32($M.1, $p686);
    call {:si_unique_call 1151} {:cexpr "__cil_tmp458"} boogie_si_record_i32($i687);
    goto corral_source_split_2413;

  corral_source_split_2413:
    assume {:verifier.code 0} true;
    $i688 := $ugt.i32($i687, $i672);
    goto corral_source_split_2414;

  corral_source_split_2414:
    assume {:verifier.code 0} true;
    assume {:branchcond $i688} true;
    goto $bb95, $bb96;

  $bb96:
    assume {:verifier.code 0} true;
    assume !($i688 == 1);
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    goto $bb102;

  $bb102:
    assume {:verifier.code 0} true;
    $i699 := $zext.i32.i64($i352);
    call {:si_unique_call 1157} {:cexpr "__cil_tmp459"} boogie_si_record_i64($i699);
    goto corral_source_split_2433;

  corral_source_split_2433:
    assume {:verifier.code 0} true;
    $i700 := $p2i.ref.i64($p0);
    call {:si_unique_call 1158} {:cexpr "__cil_tmp460"} boogie_si_record_i64($i700);
    goto corral_source_split_2434;

  corral_source_split_2434:
    assume {:verifier.code 0} true;
    $i701 := $add.i64($i700, 544);
    call {:si_unique_call 1159} {:cexpr "__cil_tmp461"} boogie_si_record_i64($i701);
    goto corral_source_split_2435;

  corral_source_split_2435:
    assume {:verifier.code 0} true;
    $p702 := $i2p.i64.ref($i701);
    goto corral_source_split_2436;

  corral_source_split_2436:
    assume {:verifier.code 0} true;
    $p703 := $load.ref($M.1, $p702);
    goto corral_source_split_2437;

  corral_source_split_2437:
    assume {:verifier.code 0} true;
    $p704 := $add.ref($p703, $mul.ref($i699, 2));
    goto corral_source_split_2438;

  corral_source_split_2438:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p704, $sub.i16(0, 4));
    goto corral_source_split_2439;

  corral_source_split_2439:
    assume {:verifier.code 0} true;
    $i705 := $p2i.ref.i64($p0);
    call {:si_unique_call 1160} {:cexpr "__cil_tmp493"} boogie_si_record_i64($i705);
    goto corral_source_split_2440;

  corral_source_split_2440:
    assume {:verifier.code 0} true;
    $i706 := $add.i64($i705, 560);
    call {:si_unique_call 1161} {:cexpr "__cil_tmp494"} boogie_si_record_i64($i706);
    goto corral_source_split_2441;

  corral_source_split_2441:
    assume {:verifier.code 0} true;
    $p707 := $i2p.i64.ref($i706);
    goto corral_source_split_2442;

  corral_source_split_2442:
    assume {:verifier.code 0} true;
    $i708 := $load.i32($M.1, $p707);
    call {:si_unique_call 1162} {:cexpr "__cil_tmp495"} boogie_si_record_i32($i708);
    goto corral_source_split_2443;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    $i709 := $ugt.i32($i708, 0);
    goto corral_source_split_2444;

  corral_source_split_2444:
    assume {:verifier.code 0} true;
    assume {:branchcond $i709} true;
    goto $bb103, $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    assume !($i709 == 1);
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    goto $bb121;

  $bb121:
    assume {:verifier.code 0} true;
    $i750 := $p2i.ref.i64($p0);
    call {:si_unique_call 1188} {:cexpr "__cil_tmp496"} boogie_si_record_i64($i750);
    goto corral_source_split_2503;

  corral_source_split_2503:
    assume {:verifier.code 0} true;
    $i751 := $add.i64($i750, 352);
    call {:si_unique_call 1189} {:cexpr "__cil_tmp497"} boogie_si_record_i64($i751);
    goto corral_source_split_2504;

  corral_source_split_2504:
    assume {:verifier.code 0} true;
    $i752 := $trunc.i32.i16($i352);
    goto corral_source_split_2505;

  corral_source_split_2505:
    assume {:verifier.code 0} true;
    $p753 := $i2p.i64.ref($i751);
    goto corral_source_split_2506;

  corral_source_split_2506:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p753, $i752);
    goto corral_source_split_2507;

  corral_source_split_2507:
    assume {:verifier.code 0} true;
    $i152 := 0;
    goto $bb33;

  $bb103:
    assume $i709 == 1;
    goto corral_source_split_2446;

  corral_source_split_2446:
    assume {:verifier.code 0} true;
    $i710 := 0;
    goto $bb106;

  $bb106:
    call $i711, $i712, $p713, $i714, $i715, $i717, $i718, $p719, $p720, $i721, $i722, $p723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $p733, $p734, $p735, $i736, $i737, $p738, $p739, $i740, $i741, $p742, $i743, $i744, $i745, $i746, $i716, $i747, $i748, $i749, $i710 := find_boot_record_loop_$bb106($p0, $p707, $i711, $i712, $p713, $i714, $i715, $i717, $i718, $p719, $p720, $i721, $i722, $p723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $p733, $p734, $p735, $i736, $i737, $p738, $p739, $i740, $i741, $p742, $i743, $i744, $i745, $i746, $i716, $i747, $i748, $i749, $i710);
    goto $bb106_last;

  corral_source_split_2448:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $i711 := $p2i.ref.i64($p0);
    call {:si_unique_call 1163} {:cexpr "__cil_tmp489"} boogie_si_record_i64($i711);
    goto corral_source_split_2450;

  corral_source_split_2450:
    assume {:verifier.code 0} true;
    $i712 := $add.i64($i711, 356);
    call {:si_unique_call 1164} {:cexpr "__cil_tmp490"} boogie_si_record_i64($i712);
    goto corral_source_split_2451;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    $p713 := $i2p.i64.ref($i712);
    goto corral_source_split_2452;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    $i714 := $load.i32($M.1, $p713);
    call {:si_unique_call 1165} {:cexpr "__cil_tmp491"} boogie_si_record_i32($i714);
    goto corral_source_split_2453;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    $i715 := $ult.i32(0, $i714);
    goto corral_source_split_2454;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb108, $bb109;

  $bb109:
    assume {:verifier.code 0} true;
    assume !($i715 == 1);
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    goto $bb118;

  $bb118:
    assume {:verifier.code 0} true;
    $i747 := $add.i32($i710, 1);
    call {:si_unique_call 1186} {:cexpr "i"} boogie_si_record_i32($i747);
    goto corral_source_split_2497;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    $i748 := $load.i32($M.1, $p707);
    call {:si_unique_call 1187} {:cexpr "__cil_tmp495"} boogie_si_record_i32($i748);
    goto corral_source_split_2498;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    $i749 := $ugt.i32($i748, $i747);
    goto corral_source_split_2499;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb119, $bb120;

  $bb120:
    assume !($i749 == 1);
    goto corral_source_split_2501;

  corral_source_split_2501:
    assume {:verifier.code 0} true;
    goto $bb105;

  $bb119:
    assume $i749 == 1;
    assume {:verifier.code 0} true;
    $i710 := $i747;
    goto $bb119_dummy;

  $bb108:
    assume $i715 == 1;
    goto corral_source_split_2456;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    $i716 := 0;
    goto $bb111;

  $bb111:
    call $i717, $i718, $p719, $p720, $i721, $i722, $p723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $p733, $p734, $p735, $i736, $i737, $p738, $p739, $i740, $i741, $p742, $i743, $i744, $i745, $i746, $i716 := find_boot_record_loop_$bb111($p0, $p713, $i717, $i718, $p719, $p720, $i721, $i722, $p723, $i724, $i725, $i726, $i727, $i728, $i729, $i730, $i731, $i732, $p733, $p734, $p735, $i736, $i737, $p738, $p739, $i740, $i741, $p742, $i743, $i744, $i745, $i746, $i716, $i710);
    goto $bb111_last;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    $i717 := $p2i.ref.i64($p0);
    call {:si_unique_call 1166} {:cexpr "__cil_tmp465"} boogie_si_record_i64($i717);
    goto corral_source_split_2460;

  corral_source_split_2460:
    assume {:verifier.code 0} true;
    $i718 := $add.i64($i717, 24);
    call {:si_unique_call 1167} {:cexpr "__cil_tmp466"} boogie_si_record_i64($i718);
    goto corral_source_split_2461;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    $p719 := $i2p.i64.ref($i718);
    goto corral_source_split_2462;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    $p720 := $load.ref($M.1, $p719);
    goto corral_source_split_2463;

  corral_source_split_2463:
    assume {:verifier.code 0} true;
    $i721 := $p2i.ref.i64($p0);
    call {:si_unique_call 1168} {:cexpr "__cil_tmp469"} boogie_si_record_i64($i721);
    goto corral_source_split_2464;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    $i722 := $add.i64($i721, 356);
    call {:si_unique_call 1169} {:cexpr "__cil_tmp470"} boogie_si_record_i64($i722);
    goto corral_source_split_2465;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    $p723 := $i2p.i64.ref($i722);
    goto corral_source_split_2466;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    $i724 := $load.i32($M.1, $p723);
    call {:si_unique_call 1170} {:cexpr "__cil_tmp471"} boogie_si_record_i32($i724);
    goto corral_source_split_2467;

  corral_source_split_2467:
    assume {:verifier.code 0} true;
    $i725 := $mul.i32($i724, $i710);
    call {:si_unique_call 1171} {:cexpr "__cil_tmp472"} boogie_si_record_i32($i725);
    goto corral_source_split_2468;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    $i726 := $add.i32($i725, $i716);
    call {:si_unique_call 1172} {:cexpr "__cil_tmp473"} boogie_si_record_i32($i726);
    goto corral_source_split_2469;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    $i727 := $zext.i32.i64($i726);
    call {:si_unique_call 1173} {:cexpr "__cil_tmp474"} boogie_si_record_i64($i727);
    goto corral_source_split_2470;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1174} $i728 := mtd_block_isbad($p720, $i727);
    call {:si_unique_call 1175} {:cexpr "tmp___6"} boogie_si_record_i32($i728);
    goto corral_source_split_2471;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    $i729 := $ne.i32($i728, 0);
    goto corral_source_split_2472;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113, $bb114;

  $bb114:
    assume !($i729 == 1);
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    $i736 := $p2i.ref.i64($p0);
    call {:si_unique_call 1179} {:cexpr "__cil_tmp482"} boogie_si_record_i64($i736);
    goto corral_source_split_2483;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    $i737 := $add.i64($i736, 24);
    call {:si_unique_call 1180} {:cexpr "__cil_tmp483"} boogie_si_record_i64($i737);
    goto corral_source_split_2484;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    $p738 := $i2p.i64.ref($i737);
    goto corral_source_split_2485;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    $p739 := $load.ref($M.1, $p738);
    goto corral_source_split_2486;

  corral_source_split_2486:
    assume {:verifier.code 0} true;
    $i740 := $p2i.ref.i64($p739);
    call {:si_unique_call 1181} {:cexpr "__cil_tmp485"} boogie_si_record_i64($i740);
    goto corral_source_split_2487;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    $i741 := $add.i64($i740, 16);
    call {:si_unique_call 1182} {:cexpr "__cil_tmp486"} boogie_si_record_i64($i741);
    goto corral_source_split_2488;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    $p742 := $i2p.i64.ref($i741);
    goto corral_source_split_2489;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    $i743 := $load.i32($M.1, $p742);
    call {:si_unique_call 1183} {:cexpr "__cil_tmp487"} boogie_si_record_i32($i743);
    goto corral_source_split_2490;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    $i744 := $add.i32($i743, $i716);
    call {:si_unique_call 1184} {:cexpr "__cil_tmp488"} boogie_si_record_i32($i744);
    goto corral_source_split_2491;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    $i745 := $load.i32($M.1, $p713);
    call {:si_unique_call 1185} {:cexpr "__cil_tmp491"} boogie_si_record_i32($i745);
    goto corral_source_split_2492;

  corral_source_split_2492:
    assume {:verifier.code 0} true;
    $i746 := $ult.i32($i744, $i745);
    goto corral_source_split_2493;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb116, $bb117;

  $bb117:
    assume !($i746 == 1);
    goto corral_source_split_2495;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb116:
    assume $i746 == 1;
    assume {:verifier.code 0} true;
    $i716 := $i744;
    goto $bb116_dummy;

  $bb113:
    assume $i729 == 1;
    goto corral_source_split_2474;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    $i730 := $zext.i32.i64($i710);
    call {:si_unique_call 1176} {:cexpr "__cil_tmp475"} boogie_si_record_i64($i730);
    goto corral_source_split_2475;

  corral_source_split_2475:
    assume {:verifier.code 0} true;
    $i731 := $p2i.ref.i64($p0);
    call {:si_unique_call 1177} {:cexpr "__cil_tmp476"} boogie_si_record_i64($i731);
    goto corral_source_split_2476;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    $i732 := $add.i64($i731, 544);
    call {:si_unique_call 1178} {:cexpr "__cil_tmp477"} boogie_si_record_i64($i732);
    goto corral_source_split_2477;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    $p733 := $i2p.i64.ref($i732);
    goto corral_source_split_2478;

  corral_source_split_2478:
    assume {:verifier.code 0} true;
    $p734 := $load.ref($M.1, $p733);
    goto corral_source_split_2479;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    $p735 := $add.ref($p734, $mul.ref($i730, 2));
    goto corral_source_split_2480;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p735, $sub.i16(0, 4));
    goto corral_source_split_2481;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb95:
    assume $i688 == 1;
    goto corral_source_split_2416;

  corral_source_split_2416:
    assume {:verifier.code 0} true;
    $i689 := $i672;
    goto $bb98;

  $bb98:
    call $i690, $i691, $i692, $p693, $p694, $p695, $i696, $i697, $i698, $i689 := find_boot_record_loop_$bb98($p0, $p686, $i690, $i691, $i692, $p693, $p694, $p695, $i696, $i697, $i698, $i689);
    goto $bb98_last;

  corral_source_split_2418:
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    $i690 := $zext.i32.i64($i689);
    call {:si_unique_call 1152} {:cexpr "__cil_tmp451"} boogie_si_record_i64($i690);
    goto corral_source_split_2420;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    $i691 := $p2i.ref.i64($p0);
    call {:si_unique_call 1153} {:cexpr "__cil_tmp452"} boogie_si_record_i64($i691);
    goto corral_source_split_2421;

  corral_source_split_2421:
    assume {:verifier.code 0} true;
    $i692 := $add.i64($i691, 544);
    call {:si_unique_call 1154} {:cexpr "__cil_tmp453"} boogie_si_record_i64($i692);
    goto corral_source_split_2422;

  corral_source_split_2422:
    assume {:verifier.code 0} true;
    $p693 := $i2p.i64.ref($i692);
    goto corral_source_split_2423;

  corral_source_split_2423:
    assume {:verifier.code 0} true;
    $p694 := $load.ref($M.1, $p693);
    goto corral_source_split_2424;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    $p695 := $add.ref($p694, $mul.ref($i690, 2));
    goto corral_source_split_2425;

  corral_source_split_2425:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p695, $sub.i16(0, 3));
    goto corral_source_split_2426;

  corral_source_split_2426:
    assume {:verifier.code 0} true;
    $i696 := $add.i32($i689, 1);
    call {:si_unique_call 1155} {:cexpr "i"} boogie_si_record_i32($i696);
    goto corral_source_split_2427;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    $i697 := $load.i32($M.1, $p686);
    call {:si_unique_call 1156} {:cexpr "__cil_tmp458"} boogie_si_record_i32($i697);
    goto corral_source_split_2428;

  corral_source_split_2428:
    assume {:verifier.code 0} true;
    $i698 := $ugt.i32($i697, $i696);
    goto corral_source_split_2429;

  corral_source_split_2429:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb100, $bb101;

  $bb101:
    assume !($i698 == 1);
    goto corral_source_split_2431;

  corral_source_split_2431:
    assume {:verifier.code 0} true;
    goto $bb97;

  $bb100:
    assume $i698 == 1;
    assume {:verifier.code 0} true;
    $i689 := $i696;
    goto $bb100_dummy;

  $bb87:
    assume $i671 == 1;
    goto corral_source_split_2391;

  corral_source_split_2391:
    assume {:verifier.code 0} true;
    $i673 := 0;
    goto $bb90;

  $bb90:
    call $i674, $i675, $i676, $p677, $p678, $p679, $i680, $i681, $i682, $i673, $i683 := find_boot_record_loop_$bb90($p0, $p669, $i674, $i675, $i676, $p677, $p678, $p679, $i680, $i681, $i682, $i673, $i683);
    goto $bb90_last;

  corral_source_split_2395:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    $i674 := $zext.i32.i64($i673);
    call {:si_unique_call 1144} {:cexpr "__cil_tmp443"} boogie_si_record_i64($i674);
    goto corral_source_split_2397;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    $i675 := $p2i.ref.i64($p0);
    call {:si_unique_call 1145} {:cexpr "__cil_tmp444"} boogie_si_record_i64($i675);
    goto corral_source_split_2398;

  corral_source_split_2398:
    assume {:verifier.code 0} true;
    $i676 := $add.i64($i675, 544);
    call {:si_unique_call 1146} {:cexpr "__cil_tmp445"} boogie_si_record_i64($i676);
    goto corral_source_split_2399;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    $p677 := $i2p.i64.ref($i676);
    goto corral_source_split_2400;

  corral_source_split_2400:
    assume {:verifier.code 0} true;
    $p678 := $load.ref($M.1, $p677);
    goto corral_source_split_2401;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    $p679 := $add.ref($p678, $mul.ref($i674, 2));
    goto corral_source_split_2402;

  corral_source_split_2402:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p679, $sub.i16(0, 4));
    goto corral_source_split_2403;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    $i680 := $add.i32($i673, 1);
    call {:si_unique_call 1147} {:cexpr "i"} boogie_si_record_i32($i680);
    goto corral_source_split_2404;

  corral_source_split_2404:
    assume {:verifier.code 0} true;
    $i681 := $load.i32($M.1, $p669);
    call {:si_unique_call 1148} {:cexpr "__cil_tmp450"} boogie_si_record_i32($i681);
    goto corral_source_split_2405;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    $i682 := $ugt.i32($i681, $i680);
    goto corral_source_split_2406;

  corral_source_split_2406:
    assume {:verifier.code 0} true;
    $i683 := $i680;
    assume true;
    goto $bb92, $bb93;

  $bb93:
    assume !($i682 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2408;

  corral_source_split_2408:
    assume {:verifier.code 0} true;
    $i672 := $i683;
    goto $bb89;

  $bb92:
    assume $i682 == 1;
    assume {:verifier.code 0} true;
    $i673 := $i680;
    goto $bb92_dummy;

  $bb84:
    assume $i654 == 1;
    goto corral_source_split_2370;

  corral_source_split_2370:
    assume {:verifier.code 0} true;
    $i655 := $p2i.ref.i64($p0);
    call {:si_unique_call 1132} {:cexpr "__cil_tmp434"} boogie_si_record_i64($i655);
    goto corral_source_split_2371;

  corral_source_split_2371:
    assume {:verifier.code 0} true;
    $i656 := $add.i64($i655, 544);
    call {:si_unique_call 1133} {:cexpr "__cil_tmp435"} boogie_si_record_i64($i656);
    goto corral_source_split_2372;

  corral_source_split_2372:
    assume {:verifier.code 0} true;
    $p657 := $i2p.i64.ref($i656);
    goto corral_source_split_2373;

  corral_source_split_2373:
    assume {:verifier.code 0} true;
    $p658 := $load.ref($M.1, $p657);
    goto corral_source_split_2374;

  corral_source_split_2374:
    assume {:verifier.code 0} true;
    $p659 := $bitcast.ref.ref($p658);
    goto corral_source_split_2375;

  corral_source_split_2375:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1134} kfree($p659);
    goto corral_source_split_2376;

  corral_source_split_2376:
    assume {:verifier.code 0} true;
    $i660 := $p2i.ref.i64($p0);
    call {:si_unique_call 1135} {:cexpr "__cil_tmp438"} boogie_si_record_i64($i660);
    goto corral_source_split_2377;

  corral_source_split_2377:
    assume {:verifier.code 0} true;
    $i661 := $add.i64($i660, 560);
    call {:si_unique_call 1136} {:cexpr "__cil_tmp439"} boogie_si_record_i64($i661);
    goto corral_source_split_2378;

  corral_source_split_2378:
    assume {:verifier.code 0} true;
    $p662 := $i2p.i64.ref($i661);
    goto corral_source_split_2379;

  corral_source_split_2379:
    assume {:verifier.code 0} true;
    $i663 := $load.i32($M.1, $p662);
    call {:si_unique_call 1137} {:cexpr "__cil_tmp440"} boogie_si_record_i32($i663);
    goto corral_source_split_2380;

  corral_source_split_2380:
    assume {:verifier.code 0} true;
    $i664 := $zext.i32.i64($i663);
    call {:si_unique_call 1138} {:cexpr "__cil_tmp441"} boogie_si_record_i64($i664);
    goto corral_source_split_2381;

  corral_source_split_2381:
    assume {:verifier.code 0} true;
    $i665 := $mul.i64($i664, 2);
    call {:si_unique_call 1139} {:cexpr "__cil_tmp442"} boogie_si_record_i64($i665);
    goto corral_source_split_2382;

  corral_source_split_2382:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1140} vslice_dummy_var_66 := printk.ref.i64(.str.97, $i665);
    goto corral_source_split_2383;

  corral_source_split_2383:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 12);
    goto $bb33;

  SeqInstr_19:
    assume !assertsPassed;
    return;

  $bb81:
    assume $i629 == 1;
    goto corral_source_split_2341;

  corral_source_split_2341:
    assume {:verifier.code 0} true;
    $i630 := $p2i.ref.i64($p0);
    call {:si_unique_call 1114} {:cexpr "__cil_tmp416"} boogie_si_record_i64($i630);
    goto corral_source_split_2342;

  corral_source_split_2342:
    assume {:verifier.code 0} true;
    $i631 := $add.i64($i630, 560);
    call {:si_unique_call 1115} {:cexpr "__cil_tmp417"} boogie_si_record_i64($i631);
    goto corral_source_split_2343;

  corral_source_split_2343:
    assume {:verifier.code 0} true;
    $p632 := $i2p.i64.ref($i631);
    goto corral_source_split_2344;

  corral_source_split_2344:
    assume {:verifier.code 0} true;
    $i633 := $load.i32($M.1, $p632);
    call {:si_unique_call 1116} {:cexpr "__cil_tmp418"} boogie_si_record_i32($i633);
    goto corral_source_split_2345;

  corral_source_split_2345:
    assume {:verifier.code 0} true;
    $i634 := $zext.i32.i64($i633);
    call {:si_unique_call 1117} {:cexpr "__cil_tmp419"} boogie_si_record_i64($i634);
    goto corral_source_split_2346;

  corral_source_split_2346:
    assume {:verifier.code 0} true;
    $i635 := $mul.i64($i634, 2);
    call {:si_unique_call 1118} {:cexpr "__cil_tmp420"} boogie_si_record_i64($i635);
    goto corral_source_split_2347;

  corral_source_split_2347:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1119} vslice_dummy_var_65 := printk.ref.i64(.str.96, $i635);
    goto corral_source_split_2348;

  corral_source_split_2348:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 12);
    goto $bb33;

  SeqInstr_16:
    assume !assertsPassed;
    return;

  $bb78:
    assume $i558 == 1;
    goto corral_source_split_2262;

  corral_source_split_2262:
    assume {:verifier.code 0} true;
    $i559 := $p2i.ref.i64($p0);
    call {:si_unique_call 1065} {:cexpr "__cil_tmp366"} boogie_si_record_i64($i559);
    goto corral_source_split_2263;

  corral_source_split_2263:
    assume {:verifier.code 0} true;
    $i560 := $add.i64($i559, 516);
    call {:si_unique_call 1066} {:cexpr "__cil_tmp367"} boogie_si_record_i64($i560);
    goto corral_source_split_2264;

  corral_source_split_2264:
    assume {:verifier.code 0} true;
    $p561 := $i2p.i64.ref($i560);
    goto corral_source_split_2265;

  corral_source_split_2265:
    assume {:verifier.code 0} true;
    $i562 := $load.i16($M.1, $p561);
    call {:si_unique_call 1067} {:cexpr "__cil_tmp368"} boogie_si_record_i16($i562);
    goto corral_source_split_2266;

  corral_source_split_2266:
    assume {:verifier.code 0} true;
    $i563 := $zext.i16.i32($i562);
    call {:si_unique_call 1068} {:cexpr "__cil_tmp369"} boogie_si_record_i32($i563);
    goto corral_source_split_2267;

  corral_source_split_2267:
    assume {:verifier.code 0} true;
    $i564 := $p2i.ref.i64($p0);
    call {:si_unique_call 1069} {:cexpr "__cil_tmp370"} boogie_si_record_i64($i564);
    goto corral_source_split_2268;

  corral_source_split_2268:
    assume {:verifier.code 0} true;
    $i565 := $add.i64($i564, 560);
    call {:si_unique_call 1070} {:cexpr "__cil_tmp371"} boogie_si_record_i64($i565);
    goto corral_source_split_2269;

  corral_source_split_2269:
    assume {:verifier.code 0} true;
    $p566 := $i2p.i64.ref($i565);
    goto corral_source_split_2270;

  corral_source_split_2270:
    assume {:verifier.code 0} true;
    $i567 := $load.i32($M.1, $p566);
    call {:si_unique_call 1071} {:cexpr "__cil_tmp372"} boogie_si_record_i32($i567);
    goto corral_source_split_2271;

  corral_source_split_2271:
    assume {:verifier.code 0} true;
    $i568 := $p2i.ref.i64($p0);
    call {:si_unique_call 1072} {:cexpr "__cil_tmp373"} boogie_si_record_i64($i568);
    goto corral_source_split_2272;

  corral_source_split_2272:
    assume {:verifier.code 0} true;
    $i569 := $add.i64($i568, 564);
    call {:si_unique_call 1073} {:cexpr "__cil_tmp374"} boogie_si_record_i64($i569);
    goto corral_source_split_2273;

  corral_source_split_2273:
    assume {:verifier.code 0} true;
    $p570 := $i2p.i64.ref($i569);
    goto corral_source_split_2274;

  corral_source_split_2274:
    assume {:verifier.code 0} true;
    $i571 := $load.i32($M.1, $p570);
    call {:si_unique_call 1074} {:cexpr "__cil_tmp375"} boogie_si_record_i32($i571);
    goto corral_source_split_2275;

  corral_source_split_2275:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1075} vslice_dummy_var_64 := printk.ref.i32.i32.i32(.str.95, $i563, $i567, $i571);
    goto corral_source_split_2276;

  corral_source_split_2276:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb75:
    assume $i528 == 1;
    goto corral_source_split_2227;

  corral_source_split_2227:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1045} vslice_dummy_var_63 := printk.ref(.str.94);
    goto corral_source_split_2228;

  corral_source_split_2228:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb169:
    assume {:verifier.code 0} true;
    assume $i1206 == 1;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2141;

  corral_source_split_2141:
    assume {:verifier.code 0} true;
    $i526, $p527 := $i524, $p525;
    goto $bb72;

  $bb166:
    assume {:verifier.code 0} true;
    assume $i1200 == 1;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2127;

  corral_source_split_2127:
    assume {:verifier.code 0} true;
    $i513 := $p2i.ref.i64($p512);
    call {:si_unique_call 1036} {:cexpr "__cil_tmp340"} boogie_si_record_i64($i513);
    goto corral_source_split_2128;

  corral_source_split_2128:
    assume {:verifier.code 0} true;
    $i514 := $add.i64($i513, 24);
    call {:si_unique_call 1037} {:cexpr "__cil_tmp341"} boogie_si_record_i64($i514);
    goto corral_source_split_2129;

  corral_source_split_2129:
    assume {:verifier.code 0} true;
    $p515 := $i2p.i64.ref($i514);
    goto corral_source_split_2130;

  corral_source_split_2130:
    assume {:verifier.code 0} true;
    $i516 := $load.i32($M.1, $p515);
    call {:si_unique_call 1038} {:cexpr "__cil_tmp342"} boogie_si_record_i32($i516);
    goto corral_source_split_2131;

  corral_source_split_2131:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1039} vslice_dummy_var_62 := printk.ref.i32.i32(.str.93, $i511, $i516);
    goto corral_source_split_2132;

  corral_source_split_2132:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb163:
    assume {:verifier.code 0} true;
    assume $i1195 == 1;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2106;

  corral_source_split_2106:
    assume {:verifier.code 0} true;
    $i493 := $p2i.ref.i64($p492);
    call {:si_unique_call 1023} {:cexpr "__cil_tmp328"} boogie_si_record_i64($i493);
    goto corral_source_split_2107;

  corral_source_split_2107:
    assume {:verifier.code 0} true;
    $i494 := $add.i64($i493, 8);
    call {:si_unique_call 1024} {:cexpr "__cil_tmp329"} boogie_si_record_i64($i494);
    goto corral_source_split_2108;

  corral_source_split_2108:
    assume {:verifier.code 0} true;
    $p495 := $i2p.i64.ref($i494);
    goto corral_source_split_2109;

  corral_source_split_2109:
    assume {:verifier.code 0} true;
    $i496 := $load.i32($M.1, $p495);
    call {:si_unique_call 1025} {:cexpr "__cil_tmp330"} boogie_si_record_i32($i496);
    goto corral_source_split_2110;

  corral_source_split_2110:
    assume {:verifier.code 0} true;
    $i497 := $p2i.ref.i64($p492);
    call {:si_unique_call 1026} {:cexpr "__cil_tmp331"} boogie_si_record_i64($i497);
    goto corral_source_split_2111;

  corral_source_split_2111:
    assume {:verifier.code 0} true;
    $i498 := $add.i64($i497, 4);
    call {:si_unique_call 1027} {:cexpr "__cil_tmp332"} boogie_si_record_i64($i498);
    goto corral_source_split_2112;

  corral_source_split_2112:
    assume {:verifier.code 0} true;
    $p499 := $i2p.i64.ref($i498);
    goto corral_source_split_2113;

  corral_source_split_2113:
    assume {:verifier.code 0} true;
    $i500 := $load.i32($M.1, $p499);
    call {:si_unique_call 1028} {:cexpr "__cil_tmp333"} boogie_si_record_i32($i500);
    goto corral_source_split_2114;

  corral_source_split_2114:
    assume {:verifier.code 0} true;
    $i501 := $p2i.ref.i64($p492);
    call {:si_unique_call 1029} {:cexpr "__cil_tmp334"} boogie_si_record_i64($i501);
    goto corral_source_split_2115;

  corral_source_split_2115:
    assume {:verifier.code 0} true;
    $i502 := $add.i64($i501, 20);
    call {:si_unique_call 1030} {:cexpr "__cil_tmp335"} boogie_si_record_i64($i502);
    goto corral_source_split_2116;

  corral_source_split_2116:
    assume {:verifier.code 0} true;
    $p503 := $i2p.i64.ref($i502);
    goto corral_source_split_2117;

  corral_source_split_2117:
    assume {:verifier.code 0} true;
    $i504 := $load.i32($M.1, $p503);
    call {:si_unique_call 1031} {:cexpr "__cil_tmp336"} boogie_si_record_i32($i504);
    goto corral_source_split_2118;

  corral_source_split_2118:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1032} vslice_dummy_var_61 := printk.ref.i32.i32.i32.i32(.str.92, $i491, $i496, $i500, $i504);
    goto corral_source_split_2119;

  corral_source_split_2119:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb160:
    assume $i1152 == 1;
    goto corral_source_split_2890;

  corral_source_split_2890:
    assume {:verifier.code 0} true;
    $i1153 := $p2i.ref.i64($p0);
    goto corral_source_split_2891;

  corral_source_split_2891:
    assume {:verifier.code 0} true;
    $i1154 := $add.i64($i1153, 568);
    goto corral_source_split_2892;

  corral_source_split_2892:
    assume {:verifier.code 0} true;
    $p1155 := $i2p.i64.ref($i1154);
    goto corral_source_split_2893;

  corral_source_split_2893:
    assume {:verifier.code 0} true;
    $i1156 := $p2i.ref.i64($p0);
    goto corral_source_split_2894;

  corral_source_split_2894:
    assume {:verifier.code 0} true;
    $i1157 := $add.i64($i1156, 24);
    goto corral_source_split_2895;

  corral_source_split_2895:
    assume {:verifier.code 0} true;
    $p1158 := $i2p.i64.ref($i1157);
    goto corral_source_split_2896;

  corral_source_split_2896:
    assume {:verifier.code 0} true;
    $p1159 := $load.ref($M.1, $p1158);
    goto corral_source_split_2897;

  corral_source_split_2897:
    assume {:verifier.code 0} true;
    $p1160 := $bitcast.ref.ref($p1155);
    goto corral_source_split_2898;

  corral_source_split_2898:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p1160, $p1159);
    goto corral_source_split_2899;

  corral_source_split_2899:
    assume {:verifier.code 0} true;
    $i1161 := $p2i.ref.i64($p1155);
    goto corral_source_split_2900;

  corral_source_split_2900:
    assume {:verifier.code 0} true;
    $i1162 := $add.i64($i1161, 8);
    goto corral_source_split_2901;

  corral_source_split_2901:
    assume {:verifier.code 0} true;
    $i1163 := $p2i.ref.i64($p0);
    goto corral_source_split_2902;

  corral_source_split_2902:
    assume {:verifier.code 0} true;
    $i1164 := $add.i64($i1163, 356);
    goto corral_source_split_2903;

  corral_source_split_2903:
    assume {:verifier.code 0} true;
    $p1165 := $i2p.i64.ref($i1164);
    goto corral_source_split_2904;

  corral_source_split_2904:
    assume {:verifier.code 0} true;
    $i1166 := $load.i32($M.1, $p1165);
    goto corral_source_split_2905;

  corral_source_split_2905:
    assume {:verifier.code 0} true;
    $i1167 := $p2i.ref.i64($p1061);
    goto corral_source_split_2906;

  corral_source_split_2906:
    assume {:verifier.code 0} true;
    $i1168 := $add.i64($i1167, 20);
    goto corral_source_split_2907;

  corral_source_split_2907:
    assume {:verifier.code 0} true;
    $p1169 := $i2p.i64.ref($i1168);
    goto corral_source_split_2908;

  corral_source_split_2908:
    assume {:verifier.code 0} true;
    $i1170 := $load.i32($M.1, $p1169);
    goto corral_source_split_2909;

  corral_source_split_2909:
    assume {:verifier.code 0} true;
    $i1171 := $mul.i32($i1170, $i1166);
    goto corral_source_split_2910;

  corral_source_split_2910:
    assume {:verifier.code 0} true;
    $i1172 := $zext.i32.i64($i1171);
    goto corral_source_split_2911;

  corral_source_split_2911:
    assume {:verifier.code 0} true;
    $p1173 := $i2p.i64.ref($i1162);
    goto corral_source_split_2912;

  corral_source_split_2912:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p1173, $i1172);
    goto corral_source_split_2913;

  corral_source_split_2913:
    assume {:verifier.code 0} true;
    $i1174 := $p2i.ref.i64($p1155);
    goto corral_source_split_2914;

  corral_source_split_2914:
    assume {:verifier.code 0} true;
    $i1175 := $add.i64($i1174, 16);
    goto corral_source_split_2915;

  corral_source_split_2915:
    assume {:verifier.code 0} true;
    $i1176 := $p2i.ref.i64($p0);
    goto corral_source_split_2916;

  corral_source_split_2916:
    assume {:verifier.code 0} true;
    $i1177 := $add.i64($i1176, 356);
    goto corral_source_split_2917;

  corral_source_split_2917:
    assume {:verifier.code 0} true;
    $p1178 := $i2p.i64.ref($i1177);
    goto corral_source_split_2918;

  corral_source_split_2918:
    assume {:verifier.code 0} true;
    $i1179 := $load.i32($M.1, $p1178);
    goto corral_source_split_2919;

  corral_source_split_2919:
    assume {:verifier.code 0} true;
    $i1180 := $zext.i32.i64($i1179);
    goto corral_source_split_2920;

  corral_source_split_2920:
    assume {:verifier.code 0} true;
    $p1181 := $i2p.i64.ref($i1175);
    goto corral_source_split_2921;

  corral_source_split_2921:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p1181, $i1180);
    goto corral_source_split_2922;

  corral_source_split_2922:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1197} vslice_dummy_var_72 := mtd_erase($p13, $p1155);
    goto corral_source_split_2923;

  corral_source_split_2923:
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb157:
    assume $i1124 == 1;
    goto corral_source_split_2859;

  corral_source_split_2859:
    assume {:verifier.code 0} true;
    $p1125 := $bitcast.ref.ref($p1061);
    goto corral_source_split_2860;

  corral_source_split_2860:
    assume {:verifier.code 0} true;
    $i1126 := $load.i32($M.1, $p1125);
    goto corral_source_split_2861;

  corral_source_split_2861:
    assume {:verifier.code 0} true;
    $i1127 := $p2i.ref.i64($p1061);
    goto corral_source_split_2862;

  corral_source_split_2862:
    assume {:verifier.code 0} true;
    $i1128 := $add.i64($i1127, 4);
    goto corral_source_split_2863;

  corral_source_split_2863:
    assume {:verifier.code 0} true;
    $p1129 := $i2p.i64.ref($i1128);
    goto corral_source_split_2864;

  corral_source_split_2864:
    assume {:verifier.code 0} true;
    $i1130 := $load.i32($M.1, $p1129);
    goto corral_source_split_2865;

  corral_source_split_2865:
    assume {:verifier.code 0} true;
    $i1131 := $p2i.ref.i64($p1061);
    goto corral_source_split_2866;

  corral_source_split_2866:
    assume {:verifier.code 0} true;
    $i1132 := $add.i64($i1131, 8);
    goto corral_source_split_2867;

  corral_source_split_2867:
    assume {:verifier.code 0} true;
    $p1133 := $i2p.i64.ref($i1132);
    goto corral_source_split_2868;

  corral_source_split_2868:
    assume {:verifier.code 0} true;
    $i1134 := $load.i32($M.1, $p1133);
    goto corral_source_split_2869;

  corral_source_split_2869:
    assume {:verifier.code 0} true;
    $i1135 := $p2i.ref.i64($p1061);
    goto corral_source_split_2870;

  corral_source_split_2870:
    assume {:verifier.code 0} true;
    $i1136 := $add.i64($i1135, 12);
    goto corral_source_split_2871;

  corral_source_split_2871:
    assume {:verifier.code 0} true;
    $p1137 := $i2p.i64.ref($i1136);
    goto corral_source_split_2872;

  corral_source_split_2872:
    assume {:verifier.code 0} true;
    $i1138 := $load.i32($M.1, $p1137);
    goto corral_source_split_2873;

  corral_source_split_2873:
    assume {:verifier.code 0} true;
    $i1139 := $p2i.ref.i64($p1061);
    goto corral_source_split_2874;

  corral_source_split_2874:
    assume {:verifier.code 0} true;
    $i1140 := $add.i64($i1139, 16);
    goto corral_source_split_2875;

  corral_source_split_2875:
    assume {:verifier.code 0} true;
    $p1141 := $i2p.i64.ref($i1140);
    goto corral_source_split_2876;

  corral_source_split_2876:
    assume {:verifier.code 0} true;
    $i1142 := $load.i32($M.1, $p1141);
    goto corral_source_split_2877;

  corral_source_split_2877:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1196} vslice_dummy_var_71 := __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p6, .str.91, 3, $i1126, $i1130, $i1134, $i1138, $i1142);
    goto corral_source_split_2878;

  corral_source_split_2878:
    assume {:verifier.code 0} true;
    goto $bb159;

  $bb153:
    assume {:verifier.code 0} true;
    assume $i1056 == 1;
    goto $bb70;

  $bb150:
    assume {:verifier.code 0} true;
    assume $i1050 == 1;
    goto $bb66;

  $bb147:
    assume {:verifier.code 0} true;
    assume $i1045 == 1;
    goto $bb62;

  $bb144:
    assume $i1002 == 1;
    goto corral_source_split_2716;

  corral_source_split_2716:
    assume {:verifier.code 0} true;
    $i1003 := $p2i.ref.i64($p0);
    goto corral_source_split_2717;

  corral_source_split_2717:
    assume {:verifier.code 0} true;
    $i1004 := $add.i64($i1003, 568);
    goto corral_source_split_2718;

  corral_source_split_2718:
    assume {:verifier.code 0} true;
    $p1005 := $i2p.i64.ref($i1004);
    goto corral_source_split_2719;

  corral_source_split_2719:
    assume {:verifier.code 0} true;
    $i1006 := $p2i.ref.i64($p0);
    goto corral_source_split_2720;

  corral_source_split_2720:
    assume {:verifier.code 0} true;
    $i1007 := $add.i64($i1006, 24);
    goto corral_source_split_2721;

  corral_source_split_2721:
    assume {:verifier.code 0} true;
    $p1008 := $i2p.i64.ref($i1007);
    goto corral_source_split_2722;

  corral_source_split_2722:
    assume {:verifier.code 0} true;
    $p1009 := $load.ref($M.1, $p1008);
    goto corral_source_split_2723;

  corral_source_split_2723:
    assume {:verifier.code 0} true;
    $p1010 := $bitcast.ref.ref($p1005);
    goto corral_source_split_2724;

  corral_source_split_2724:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p1010, $p1009);
    goto corral_source_split_2725;

  corral_source_split_2725:
    assume {:verifier.code 0} true;
    $i1011 := $p2i.ref.i64($p1005);
    goto corral_source_split_2726;

  corral_source_split_2726:
    assume {:verifier.code 0} true;
    $i1012 := $add.i64($i1011, 8);
    goto corral_source_split_2727;

  corral_source_split_2727:
    assume {:verifier.code 0} true;
    $i1013 := $p2i.ref.i64($p0);
    goto corral_source_split_2728;

  corral_source_split_2728:
    assume {:verifier.code 0} true;
    $i1014 := $add.i64($i1013, 356);
    goto corral_source_split_2729;

  corral_source_split_2729:
    assume {:verifier.code 0} true;
    $p1015 := $i2p.i64.ref($i1014);
    goto corral_source_split_2730;

  corral_source_split_2730:
    assume {:verifier.code 0} true;
    $i1016 := $load.i32($M.1, $p1015);
    goto corral_source_split_2731;

  corral_source_split_2731:
    assume {:verifier.code 0} true;
    $i1017 := $p2i.ref.i64($p911);
    goto corral_source_split_2732;

  corral_source_split_2732:
    assume {:verifier.code 0} true;
    $i1018 := $add.i64($i1017, 20);
    goto corral_source_split_2733;

  corral_source_split_2733:
    assume {:verifier.code 0} true;
    $p1019 := $i2p.i64.ref($i1018);
    goto corral_source_split_2734;

  corral_source_split_2734:
    assume {:verifier.code 0} true;
    $i1020 := $load.i32($M.1, $p1019);
    goto corral_source_split_2735;

  corral_source_split_2735:
    assume {:verifier.code 0} true;
    $i1021 := $mul.i32($i1020, $i1016);
    goto corral_source_split_2736;

  corral_source_split_2736:
    assume {:verifier.code 0} true;
    $i1022 := $zext.i32.i64($i1021);
    goto corral_source_split_2737;

  corral_source_split_2737:
    assume {:verifier.code 0} true;
    $p1023 := $i2p.i64.ref($i1012);
    goto corral_source_split_2738;

  corral_source_split_2738:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p1023, $i1022);
    goto corral_source_split_2739;

  corral_source_split_2739:
    assume {:verifier.code 0} true;
    $i1024 := $p2i.ref.i64($p1005);
    goto corral_source_split_2740;

  corral_source_split_2740:
    assume {:verifier.code 0} true;
    $i1025 := $add.i64($i1024, 16);
    goto corral_source_split_2741;

  corral_source_split_2741:
    assume {:verifier.code 0} true;
    $i1026 := $p2i.ref.i64($p0);
    goto corral_source_split_2742;

  corral_source_split_2742:
    assume {:verifier.code 0} true;
    $i1027 := $add.i64($i1026, 356);
    goto corral_source_split_2743;

  corral_source_split_2743:
    assume {:verifier.code 0} true;
    $p1028 := $i2p.i64.ref($i1027);
    goto corral_source_split_2744;

  corral_source_split_2744:
    assume {:verifier.code 0} true;
    $i1029 := $load.i32($M.1, $p1028);
    goto corral_source_split_2745;

  corral_source_split_2745:
    assume {:verifier.code 0} true;
    $i1030 := $zext.i32.i64($i1029);
    goto corral_source_split_2746;

  corral_source_split_2746:
    assume {:verifier.code 0} true;
    $p1031 := $i2p.i64.ref($i1025);
    goto corral_source_split_2747;

  corral_source_split_2747:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p1031, $i1030);
    goto corral_source_split_2748;

  corral_source_split_2748:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1194} vslice_dummy_var_70 := mtd_erase($p13, $p1005);
    goto corral_source_split_2749;

  corral_source_split_2749:
    assume {:verifier.code 0} true;
    goto $bb146;

  $bb141:
    assume $i974 == 1;
    goto corral_source_split_2685;

  corral_source_split_2685:
    assume {:verifier.code 0} true;
    $p975 := $bitcast.ref.ref($p911);
    goto corral_source_split_2686;

  corral_source_split_2686:
    assume {:verifier.code 0} true;
    $i976 := $load.i32($M.1, $p975);
    goto corral_source_split_2687;

  corral_source_split_2687:
    assume {:verifier.code 0} true;
    $i977 := $p2i.ref.i64($p911);
    goto corral_source_split_2688;

  corral_source_split_2688:
    assume {:verifier.code 0} true;
    $i978 := $add.i64($i977, 4);
    goto corral_source_split_2689;

  corral_source_split_2689:
    assume {:verifier.code 0} true;
    $p979 := $i2p.i64.ref($i978);
    goto corral_source_split_2690;

  corral_source_split_2690:
    assume {:verifier.code 0} true;
    $i980 := $load.i32($M.1, $p979);
    goto corral_source_split_2691;

  corral_source_split_2691:
    assume {:verifier.code 0} true;
    $i981 := $p2i.ref.i64($p911);
    goto corral_source_split_2692;

  corral_source_split_2692:
    assume {:verifier.code 0} true;
    $i982 := $add.i64($i981, 8);
    goto corral_source_split_2693;

  corral_source_split_2693:
    assume {:verifier.code 0} true;
    $p983 := $i2p.i64.ref($i982);
    goto corral_source_split_2694;

  corral_source_split_2694:
    assume {:verifier.code 0} true;
    $i984 := $load.i32($M.1, $p983);
    goto corral_source_split_2695;

  corral_source_split_2695:
    assume {:verifier.code 0} true;
    $i985 := $p2i.ref.i64($p911);
    goto corral_source_split_2696;

  corral_source_split_2696:
    assume {:verifier.code 0} true;
    $i986 := $add.i64($i985, 12);
    goto corral_source_split_2697;

  corral_source_split_2697:
    assume {:verifier.code 0} true;
    $p987 := $i2p.i64.ref($i986);
    goto corral_source_split_2698;

  corral_source_split_2698:
    assume {:verifier.code 0} true;
    $i988 := $load.i32($M.1, $p987);
    goto corral_source_split_2699;

  corral_source_split_2699:
    assume {:verifier.code 0} true;
    $i989 := $p2i.ref.i64($p911);
    goto corral_source_split_2700;

  corral_source_split_2700:
    assume {:verifier.code 0} true;
    $i990 := $add.i64($i989, 16);
    goto corral_source_split_2701;

  corral_source_split_2701:
    assume {:verifier.code 0} true;
    $p991 := $i2p.i64.ref($i990);
    goto corral_source_split_2702;

  corral_source_split_2702:
    assume {:verifier.code 0} true;
    $i992 := $load.i32($M.1, $p991);
    goto corral_source_split_2703;

  corral_source_split_2703:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1193} vslice_dummy_var_69 := __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p6, .str.91, 2, $i976, $i980, $i984, $i988, $i992);
    goto corral_source_split_2704;

  corral_source_split_2704:
    assume {:verifier.code 0} true;
    goto $bb143;

  $bb137:
    assume {:verifier.code 0} true;
    assume $i906 == 1;
    goto $bb70;

  $bb134:
    assume {:verifier.code 0} true;
    assume $i900 == 1;
    goto $bb66;

  $bb131:
    assume {:verifier.code 0} true;
    assume $i895 == 1;
    goto $bb62;

  $bb128:
    assume $i852 == 1;
    goto corral_source_split_2542;

  corral_source_split_2542:
    assume {:verifier.code 0} true;
    $i853 := $p2i.ref.i64($p0);
    goto corral_source_split_2543;

  corral_source_split_2543:
    assume {:verifier.code 0} true;
    $i854 := $add.i64($i853, 568);
    goto corral_source_split_2544;

  corral_source_split_2544:
    assume {:verifier.code 0} true;
    $p855 := $i2p.i64.ref($i854);
    goto corral_source_split_2545;

  corral_source_split_2545:
    assume {:verifier.code 0} true;
    $i856 := $p2i.ref.i64($p0);
    goto corral_source_split_2546;

  corral_source_split_2546:
    assume {:verifier.code 0} true;
    $i857 := $add.i64($i856, 24);
    goto corral_source_split_2547;

  corral_source_split_2547:
    assume {:verifier.code 0} true;
    $p858 := $i2p.i64.ref($i857);
    goto corral_source_split_2548;

  corral_source_split_2548:
    assume {:verifier.code 0} true;
    $p859 := $load.ref($M.1, $p858);
    goto corral_source_split_2549;

  corral_source_split_2549:
    assume {:verifier.code 0} true;
    $p860 := $bitcast.ref.ref($p855);
    goto corral_source_split_2550;

  corral_source_split_2550:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p860, $p859);
    goto corral_source_split_2551;

  corral_source_split_2551:
    assume {:verifier.code 0} true;
    $i861 := $p2i.ref.i64($p855);
    goto corral_source_split_2552;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    $i862 := $add.i64($i861, 8);
    goto corral_source_split_2553;

  corral_source_split_2553:
    assume {:verifier.code 0} true;
    $i863 := $p2i.ref.i64($p0);
    goto corral_source_split_2554;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    $i864 := $add.i64($i863, 356);
    goto corral_source_split_2555;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    $p865 := $i2p.i64.ref($i864);
    goto corral_source_split_2556;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    $i866 := $load.i32($M.1, $p865);
    goto corral_source_split_2557;

  corral_source_split_2557:
    assume {:verifier.code 0} true;
    $i867 := $p2i.ref.i64($p761);
    goto corral_source_split_2558;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    $i868 := $add.i64($i867, 20);
    goto corral_source_split_2559;

  corral_source_split_2559:
    assume {:verifier.code 0} true;
    $p869 := $i2p.i64.ref($i868);
    goto corral_source_split_2560;

  corral_source_split_2560:
    assume {:verifier.code 0} true;
    $i870 := $load.i32($M.1, $p869);
    goto corral_source_split_2561;

  corral_source_split_2561:
    assume {:verifier.code 0} true;
    $i871 := $mul.i32($i870, $i866);
    goto corral_source_split_2562;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    $i872 := $zext.i32.i64($i871);
    goto corral_source_split_2563;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    $p873 := $i2p.i64.ref($i862);
    goto corral_source_split_2564;

  corral_source_split_2564:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p873, $i872);
    goto corral_source_split_2565;

  corral_source_split_2565:
    assume {:verifier.code 0} true;
    $i874 := $p2i.ref.i64($p855);
    goto corral_source_split_2566;

  corral_source_split_2566:
    assume {:verifier.code 0} true;
    $i875 := $add.i64($i874, 16);
    goto corral_source_split_2567;

  corral_source_split_2567:
    assume {:verifier.code 0} true;
    $i876 := $p2i.ref.i64($p0);
    goto corral_source_split_2568;

  corral_source_split_2568:
    assume {:verifier.code 0} true;
    $i877 := $add.i64($i876, 356);
    goto corral_source_split_2569;

  corral_source_split_2569:
    assume {:verifier.code 0} true;
    $p878 := $i2p.i64.ref($i877);
    goto corral_source_split_2570;

  corral_source_split_2570:
    assume {:verifier.code 0} true;
    $i879 := $load.i32($M.1, $p878);
    goto corral_source_split_2571;

  corral_source_split_2571:
    assume {:verifier.code 0} true;
    $i880 := $zext.i32.i64($i879);
    goto corral_source_split_2572;

  corral_source_split_2572:
    assume {:verifier.code 0} true;
    $p881 := $i2p.i64.ref($i875);
    goto corral_source_split_2573;

  corral_source_split_2573:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p881, $i880);
    goto corral_source_split_2574;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1191} vslice_dummy_var_68 := mtd_erase($p13, $p855);
    goto corral_source_split_2575;

  corral_source_split_2575:
    assume {:verifier.code 0} true;
    goto $bb130;

  $bb125:
    assume $i824 == 1;
    goto corral_source_split_2511;

  corral_source_split_2511:
    assume {:verifier.code 0} true;
    $p825 := $bitcast.ref.ref($p761);
    goto corral_source_split_2512;

  corral_source_split_2512:
    assume {:verifier.code 0} true;
    $i826 := $load.i32($M.1, $p825);
    goto corral_source_split_2513;

  corral_source_split_2513:
    assume {:verifier.code 0} true;
    $i827 := $p2i.ref.i64($p761);
    goto corral_source_split_2514;

  corral_source_split_2514:
    assume {:verifier.code 0} true;
    $i828 := $add.i64($i827, 4);
    goto corral_source_split_2515;

  corral_source_split_2515:
    assume {:verifier.code 0} true;
    $p829 := $i2p.i64.ref($i828);
    goto corral_source_split_2516;

  corral_source_split_2516:
    assume {:verifier.code 0} true;
    $i830 := $load.i32($M.1, $p829);
    goto corral_source_split_2517;

  corral_source_split_2517:
    assume {:verifier.code 0} true;
    $i831 := $p2i.ref.i64($p761);
    goto corral_source_split_2518;

  corral_source_split_2518:
    assume {:verifier.code 0} true;
    $i832 := $add.i64($i831, 8);
    goto corral_source_split_2519;

  corral_source_split_2519:
    assume {:verifier.code 0} true;
    $p833 := $i2p.i64.ref($i832);
    goto corral_source_split_2520;

  corral_source_split_2520:
    assume {:verifier.code 0} true;
    $i834 := $load.i32($M.1, $p833);
    goto corral_source_split_2521;

  corral_source_split_2521:
    assume {:verifier.code 0} true;
    $i835 := $p2i.ref.i64($p761);
    goto corral_source_split_2522;

  corral_source_split_2522:
    assume {:verifier.code 0} true;
    $i836 := $add.i64($i835, 12);
    goto corral_source_split_2523;

  corral_source_split_2523:
    assume {:verifier.code 0} true;
    $p837 := $i2p.i64.ref($i836);
    goto corral_source_split_2524;

  corral_source_split_2524:
    assume {:verifier.code 0} true;
    $i838 := $load.i32($M.1, $p837);
    goto corral_source_split_2525;

  corral_source_split_2525:
    assume {:verifier.code 0} true;
    $i839 := $p2i.ref.i64($p761);
    goto corral_source_split_2526;

  corral_source_split_2526:
    assume {:verifier.code 0} true;
    $i840 := $add.i64($i839, 16);
    goto corral_source_split_2527;

  corral_source_split_2527:
    assume {:verifier.code 0} true;
    $p841 := $i2p.i64.ref($i840);
    goto corral_source_split_2528;

  corral_source_split_2528:
    assume {:verifier.code 0} true;
    $i842 := $load.i32($M.1, $p841);
    goto corral_source_split_2529;

  corral_source_split_2529:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1190} vslice_dummy_var_67 := __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p6, .str.91, 1, $i826, $i830, $i834, $i838, $i842);
    goto corral_source_split_2530;

  corral_source_split_2530:
    assume {:verifier.code 0} true;
    goto $bb127;

  $bb69:
    assume {:verifier.code 0} true;
    assume $i523 == 1;
    goto $bb70;

  $bb65:
    assume {:verifier.code 0} true;
    assume $i510 == 1;
    goto $bb66;

  $bb61:
    assume {:verifier.code 0} true;
    assume $i490 == 1;
    goto $bb62;

  $bb58:
    assume $i447 == 1;
    goto corral_source_split_2057;

  corral_source_split_2057:
    assume {:verifier.code 0} true;
    $i448 := $p2i.ref.i64($p0);
    call {:si_unique_call 995} {:cexpr "__cil_tmp300"} boogie_si_record_i64($i448);
    goto corral_source_split_2058;

  corral_source_split_2058:
    assume {:verifier.code 0} true;
    $i449 := $add.i64($i448, 568);
    call {:si_unique_call 996} {:cexpr "__cil_tmp301"} boogie_si_record_i64($i449);
    goto corral_source_split_2059;

  corral_source_split_2059:
    assume {:verifier.code 0} true;
    $p450 := $i2p.i64.ref($i449);
    goto corral_source_split_2060;

  corral_source_split_2060:
    assume {:verifier.code 0} true;
    $i451 := $p2i.ref.i64($p0);
    call {:si_unique_call 997} {:cexpr "__cil_tmp303"} boogie_si_record_i64($i451);
    goto corral_source_split_2061;

  corral_source_split_2061:
    assume {:verifier.code 0} true;
    $i452 := $add.i64($i451, 24);
    call {:si_unique_call 998} {:cexpr "__cil_tmp304"} boogie_si_record_i64($i452);
    goto corral_source_split_2062;

  corral_source_split_2062:
    assume {:verifier.code 0} true;
    $p453 := $i2p.i64.ref($i452);
    goto corral_source_split_2063;

  corral_source_split_2063:
    assume {:verifier.code 0} true;
    $p454 := $load.ref($M.1, $p453);
    goto corral_source_split_2064;

  corral_source_split_2064:
    assume {:verifier.code 0} true;
    $p455 := $bitcast.ref.ref($p450);
    goto corral_source_split_2065;

  corral_source_split_2065:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p455, $p454);
    goto corral_source_split_2066;

  corral_source_split_2066:
    assume {:verifier.code 0} true;
    $i456 := $p2i.ref.i64($p450);
    call {:si_unique_call 999} {:cexpr "__cil_tmp305"} boogie_si_record_i64($i456);
    goto corral_source_split_2067;

  corral_source_split_2067:
    assume {:verifier.code 0} true;
    $i457 := $add.i64($i456, 8);
    call {:si_unique_call 1000} {:cexpr "__cil_tmp306"} boogie_si_record_i64($i457);
    goto corral_source_split_2068;

  corral_source_split_2068:
    assume {:verifier.code 0} true;
    $i458 := $p2i.ref.i64($p0);
    call {:si_unique_call 1001} {:cexpr "__cil_tmp307"} boogie_si_record_i64($i458);
    goto corral_source_split_2069;

  corral_source_split_2069:
    assume {:verifier.code 0} true;
    $i459 := $add.i64($i458, 356);
    call {:si_unique_call 1002} {:cexpr "__cil_tmp308"} boogie_si_record_i64($i459);
    goto corral_source_split_2070;

  corral_source_split_2070:
    assume {:verifier.code 0} true;
    $p460 := $i2p.i64.ref($i459);
    goto corral_source_split_2071;

  corral_source_split_2071:
    assume {:verifier.code 0} true;
    $i461 := $load.i32($M.1, $p460);
    call {:si_unique_call 1003} {:cexpr "__cil_tmp309"} boogie_si_record_i32($i461);
    goto corral_source_split_2072;

  corral_source_split_2072:
    assume {:verifier.code 0} true;
    $i462 := $p2i.ref.i64($p356);
    call {:si_unique_call 1004} {:cexpr "__cil_tmp310"} boogie_si_record_i64($i462);
    goto corral_source_split_2073;

  corral_source_split_2073:
    assume {:verifier.code 0} true;
    $i463 := $add.i64($i462, 20);
    call {:si_unique_call 1005} {:cexpr "__cil_tmp311"} boogie_si_record_i64($i463);
    goto corral_source_split_2074;

  corral_source_split_2074:
    assume {:verifier.code 0} true;
    $p464 := $i2p.i64.ref($i463);
    goto corral_source_split_2075;

  corral_source_split_2075:
    assume {:verifier.code 0} true;
    $i465 := $load.i32($M.1, $p464);
    call {:si_unique_call 1006} {:cexpr "__cil_tmp312"} boogie_si_record_i32($i465);
    goto corral_source_split_2076;

  corral_source_split_2076:
    assume {:verifier.code 0} true;
    $i466 := $mul.i32($i465, $i461);
    call {:si_unique_call 1007} {:cexpr "__cil_tmp313"} boogie_si_record_i32($i466);
    goto corral_source_split_2077;

  corral_source_split_2077:
    assume {:verifier.code 0} true;
    $i467 := $zext.i32.i64($i466);
    goto corral_source_split_2078;

  corral_source_split_2078:
    assume {:verifier.code 0} true;
    $p468 := $i2p.i64.ref($i457);
    goto corral_source_split_2079;

  corral_source_split_2079:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p468, $i467);
    goto corral_source_split_2080;

  corral_source_split_2080:
    assume {:verifier.code 0} true;
    $i469 := $p2i.ref.i64($p450);
    call {:si_unique_call 1008} {:cexpr "__cil_tmp314"} boogie_si_record_i64($i469);
    goto corral_source_split_2081;

  corral_source_split_2081:
    assume {:verifier.code 0} true;
    $i470 := $add.i64($i469, 16);
    call {:si_unique_call 1009} {:cexpr "__cil_tmp315"} boogie_si_record_i64($i470);
    goto corral_source_split_2082;

  corral_source_split_2082:
    assume {:verifier.code 0} true;
    $i471 := $p2i.ref.i64($p0);
    call {:si_unique_call 1010} {:cexpr "__cil_tmp316"} boogie_si_record_i64($i471);
    goto corral_source_split_2083;

  corral_source_split_2083:
    assume {:verifier.code 0} true;
    $i472 := $add.i64($i471, 356);
    call {:si_unique_call 1011} {:cexpr "__cil_tmp317"} boogie_si_record_i64($i472);
    goto corral_source_split_2084;

  corral_source_split_2084:
    assume {:verifier.code 0} true;
    $p473 := $i2p.i64.ref($i472);
    goto corral_source_split_2085;

  corral_source_split_2085:
    assume {:verifier.code 0} true;
    $i474 := $load.i32($M.1, $p473);
    call {:si_unique_call 1012} {:cexpr "__cil_tmp318"} boogie_si_record_i32($i474);
    goto corral_source_split_2086;

  corral_source_split_2086:
    assume {:verifier.code 0} true;
    $i475 := $zext.i32.i64($i474);
    goto corral_source_split_2087;

  corral_source_split_2087:
    assume {:verifier.code 0} true;
    $p476 := $i2p.i64.ref($i470);
    goto corral_source_split_2088;

  corral_source_split_2088:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p476, $i475);
    goto corral_source_split_2089;

  corral_source_split_2089:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1013} vslice_dummy_var_60 := mtd_erase($p13, $p450);
    goto corral_source_split_2090;

  corral_source_split_2090:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb55:
    assume $i419 == 1;
    goto corral_source_split_2026;

  corral_source_split_2026:
    assume {:verifier.code 0} true;
    $p420 := $bitcast.ref.ref($p356);
    goto corral_source_split_2027;

  corral_source_split_2027:
    assume {:verifier.code 0} true;
    $i421 := $load.i32($M.1, $p420);
    call {:si_unique_call 975} {:cexpr "__cil_tmp281"} boogie_si_record_i32($i421);
    goto corral_source_split_2028;

  corral_source_split_2028:
    assume {:verifier.code 0} true;
    $i422 := $p2i.ref.i64($p356);
    call {:si_unique_call 976} {:cexpr "__cil_tmp282"} boogie_si_record_i64($i422);
    goto corral_source_split_2029;

  corral_source_split_2029:
    assume {:verifier.code 0} true;
    $i423 := $add.i64($i422, 4);
    call {:si_unique_call 977} {:cexpr "__cil_tmp283"} boogie_si_record_i64($i423);
    goto corral_source_split_2030;

  corral_source_split_2030:
    assume {:verifier.code 0} true;
    $p424 := $i2p.i64.ref($i423);
    goto corral_source_split_2031;

  corral_source_split_2031:
    assume {:verifier.code 0} true;
    $i425 := $load.i32($M.1, $p424);
    call {:si_unique_call 978} {:cexpr "__cil_tmp284"} boogie_si_record_i32($i425);
    goto corral_source_split_2032;

  corral_source_split_2032:
    assume {:verifier.code 0} true;
    $i426 := $p2i.ref.i64($p356);
    call {:si_unique_call 979} {:cexpr "__cil_tmp285"} boogie_si_record_i64($i426);
    goto corral_source_split_2033;

  corral_source_split_2033:
    assume {:verifier.code 0} true;
    $i427 := $add.i64($i426, 8);
    call {:si_unique_call 980} {:cexpr "__cil_tmp286"} boogie_si_record_i64($i427);
    goto corral_source_split_2034;

  corral_source_split_2034:
    assume {:verifier.code 0} true;
    $p428 := $i2p.i64.ref($i427);
    goto corral_source_split_2035;

  corral_source_split_2035:
    assume {:verifier.code 0} true;
    $i429 := $load.i32($M.1, $p428);
    call {:si_unique_call 981} {:cexpr "__cil_tmp287"} boogie_si_record_i32($i429);
    goto corral_source_split_2036;

  corral_source_split_2036:
    assume {:verifier.code 0} true;
    $i430 := $p2i.ref.i64($p356);
    call {:si_unique_call 982} {:cexpr "__cil_tmp288"} boogie_si_record_i64($i430);
    goto corral_source_split_2037;

  corral_source_split_2037:
    assume {:verifier.code 0} true;
    $i431 := $add.i64($i430, 12);
    call {:si_unique_call 983} {:cexpr "__cil_tmp289"} boogie_si_record_i64($i431);
    goto corral_source_split_2038;

  corral_source_split_2038:
    assume {:verifier.code 0} true;
    $p432 := $i2p.i64.ref($i431);
    goto corral_source_split_2039;

  corral_source_split_2039:
    assume {:verifier.code 0} true;
    $i433 := $load.i32($M.1, $p432);
    call {:si_unique_call 984} {:cexpr "__cil_tmp290"} boogie_si_record_i32($i433);
    goto corral_source_split_2040;

  corral_source_split_2040:
    assume {:verifier.code 0} true;
    $i434 := $p2i.ref.i64($p356);
    call {:si_unique_call 985} {:cexpr "__cil_tmp291"} boogie_si_record_i64($i434);
    goto corral_source_split_2041;

  corral_source_split_2041:
    assume {:verifier.code 0} true;
    $i435 := $add.i64($i434, 16);
    call {:si_unique_call 986} {:cexpr "__cil_tmp292"} boogie_si_record_i64($i435);
    goto corral_source_split_2042;

  corral_source_split_2042:
    assume {:verifier.code 0} true;
    $p436 := $i2p.i64.ref($i435);
    goto corral_source_split_2043;

  corral_source_split_2043:
    assume {:verifier.code 0} true;
    $i437 := $load.i32($M.1, $p436);
    call {:si_unique_call 987} {:cexpr "__cil_tmp293"} boogie_si_record_i32($i437);
    goto corral_source_split_2044;

  corral_source_split_2044:
    assume {:verifier.code 0} true;
    call {:si_unique_call 988} vslice_dummy_var_59 := __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32($p6, .str.91, 0, $i421, $i425, $i429, $i433, $i437);
    goto corral_source_split_2045;

  corral_source_split_2045:
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb49:
    assume $i308 == 1;
    goto corral_source_split_1899;

  corral_source_split_1899:
    assume {:verifier.code 0} true;
    $i309 := $p2i.ref.i64($p9);
    call {:si_unique_call 913} {:cexpr "__cil_tmp213"} boogie_si_record_i64($i309);
    goto corral_source_split_1900;

  corral_source_split_1900:
    assume {:verifier.code 0} true;
    $i310 := $add.i64($i309, 20);
    call {:si_unique_call 914} {:cexpr "__cil_tmp214"} boogie_si_record_i64($i310);
    goto corral_source_split_1901;

  corral_source_split_1901:
    assume {:verifier.code 0} true;
    $p311 := $i2p.i64.ref($i310);
    goto corral_source_split_1902;

  corral_source_split_1902:
    assume {:verifier.code 0} true;
    $i312 := $load.i32($M.1, $p311);
    call {:si_unique_call 915} {:cexpr "__cil_tmp215"} boogie_si_record_i32($i312);
    goto corral_source_split_1903;

  corral_source_split_1903:
    assume {:verifier.code 0} true;
    call {:si_unique_call 916} vslice_dummy_var_58 := printk.ref.i32(.str.90, $i312);
    goto corral_source_split_1904;

  corral_source_split_1904:
    assume {:verifier.code 0} true;
    $i314 := $p2i.ref.i64($p0);
    call {:si_unique_call 917} {:cexpr "__cil_tmp216"} boogie_si_record_i64($i314);
    goto corral_source_split_1905;

  corral_source_split_1905:
    assume {:verifier.code 0} true;
    $i315 := $add.i64($i314, 356);
    call {:si_unique_call 918} {:cexpr "__cil_tmp217"} boogie_si_record_i64($i315);
    goto corral_source_split_1906;

  corral_source_split_1906:
    assume {:verifier.code 0} true;
    $i316 := $p2i.ref.i64($p9);
    call {:si_unique_call 919} {:cexpr "__cil_tmp218"} boogie_si_record_i64($i316);
    goto corral_source_split_1907;

  corral_source_split_1907:
    assume {:verifier.code 0} true;
    $i317 := $add.i64($i316, 20);
    call {:si_unique_call 920} {:cexpr "__cil_tmp219"} boogie_si_record_i64($i317);
    goto corral_source_split_1908;

  corral_source_split_1908:
    assume {:verifier.code 0} true;
    $p318 := $i2p.i64.ref($i317);
    goto corral_source_split_1909;

  corral_source_split_1909:
    assume {:verifier.code 0} true;
    $i319 := $load.i32($M.1, $p318);
    call {:si_unique_call 921} {:cexpr "__cil_tmp220"} boogie_si_record_i32($i319);
    goto corral_source_split_1910;

  corral_source_split_1910:
    assume {:verifier.code 0} true;
    $i320 := $p2i.ref.i64($p0);
    call {:si_unique_call 922} {:cexpr "__cil_tmp223"} boogie_si_record_i64($i320);
    goto corral_source_split_1911;

  corral_source_split_1911:
    assume {:verifier.code 0} true;
    $i321 := $add.i64($i320, 24);
    call {:si_unique_call 923} {:cexpr "__cil_tmp224"} boogie_si_record_i64($i321);
    goto corral_source_split_1912;

  corral_source_split_1912:
    assume {:verifier.code 0} true;
    $p322 := $i2p.i64.ref($i321);
    goto corral_source_split_1913;

  corral_source_split_1913:
    assume {:verifier.code 0} true;
    $p323 := $load.ref($M.1, $p322);
    goto corral_source_split_1914;

  corral_source_split_1914:
    assume {:verifier.code 0} true;
    $i324 := $p2i.ref.i64($p323);
    call {:si_unique_call 924} {:cexpr "__cil_tmp226"} boogie_si_record_i64($i324);
    goto corral_source_split_1915;

  corral_source_split_1915:
    assume {:verifier.code 0} true;
    $i325 := $add.i64($i324, 16);
    call {:si_unique_call 925} {:cexpr "__cil_tmp227"} boogie_si_record_i64($i325);
    goto corral_source_split_1916;

  corral_source_split_1916:
    assume {:verifier.code 0} true;
    $p326 := $i2p.i64.ref($i325);
    goto corral_source_split_1917;

  corral_source_split_1917:
    assume {:verifier.code 0} true;
    $i327 := $load.i32($M.1, $p326);
    call {:si_unique_call 926} {:cexpr "__cil_tmp228"} boogie_si_record_i32($i327);
    goto corral_source_split_1918;

  corral_source_split_1918:
    assume {:verifier.code 0} true;
    $i328 := $shl.i32($i327, $i319);
    goto corral_source_split_1919;

  corral_source_split_1919:
    assume {:verifier.code 0} true;
    $p329 := $i2p.i64.ref($i315);
    goto corral_source_split_1920;

  corral_source_split_1920:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p329, $i328);
    goto corral_source_split_1921;

  corral_source_split_1921:
    assume {:verifier.code 0} true;
    $i330 := $p2i.ref.i64($p0);
    call {:si_unique_call 927} {:cexpr "__cil_tmp229"} boogie_si_record_i64($i330);
    goto corral_source_split_1922;

  corral_source_split_1922:
    assume {:verifier.code 0} true;
    $i331 := $add.i64($i330, 560);
    call {:si_unique_call 928} {:cexpr "__cil_tmp230"} boogie_si_record_i64($i331);
    goto corral_source_split_1923;

  corral_source_split_1923:
    assume {:verifier.code 0} true;
    $i332 := $p2i.ref.i64($p0);
    call {:si_unique_call 929} {:cexpr "__cil_tmp231"} boogie_si_record_i64($i332);
    goto corral_source_split_1924;

  corral_source_split_1924:
    assume {:verifier.code 0} true;
    $i333 := $add.i64($i332, 356);
    call {:si_unique_call 930} {:cexpr "__cil_tmp232"} boogie_si_record_i64($i333);
    goto corral_source_split_1925;

  corral_source_split_1925:
    assume {:verifier.code 0} true;
    $p334 := $i2p.i64.ref($i333);
    goto corral_source_split_1926;

  corral_source_split_1926:
    assume {:verifier.code 0} true;
    $i335 := $load.i32($M.1, $p334);
    call {:si_unique_call 931} {:cexpr "__cil_tmp233"} boogie_si_record_i32($i335);
    goto corral_source_split_1927;

  corral_source_split_1927:
    assume {:verifier.code 0} true;
    $i336 := $p2i.ref.i64($p0);
    call {:si_unique_call 932} {:cexpr "__cil_tmp235"} boogie_si_record_i64($i336);
    goto corral_source_split_1928;

  corral_source_split_1928:
    assume {:verifier.code 0} true;
    $i337 := $add.i64($i336, 24);
    call {:si_unique_call 933} {:cexpr "__cil_tmp236"} boogie_si_record_i64($i337);
    goto corral_source_split_1929;

  corral_source_split_1929:
    assume {:verifier.code 0} true;
    $p338 := $i2p.i64.ref($i337);
    goto corral_source_split_1930;

  corral_source_split_1930:
    assume {:verifier.code 0} true;
    $p339 := $load.ref($M.1, $p338);
    goto corral_source_split_1931;

  corral_source_split_1931:
    assume {:verifier.code 0} true;
    $i340 := $p2i.ref.i64($p339);
    call {:si_unique_call 934} {:cexpr "__cil_tmp238"} boogie_si_record_i64($i340);
    goto corral_source_split_1932;

  corral_source_split_1932:
    assume {:verifier.code 0} true;
    $i341 := $add.i64($i340, 8);
    call {:si_unique_call 935} {:cexpr "__cil_tmp239"} boogie_si_record_i64($i341);
    goto corral_source_split_1933;

  corral_source_split_1933:
    assume {:verifier.code 0} true;
    $p342 := $i2p.i64.ref($i341);
    goto corral_source_split_1934;

  corral_source_split_1934:
    assume {:verifier.code 0} true;
    $i343 := $load.i64($M.1, $p342);
    call {:si_unique_call 936} {:cexpr "__cil_tmp240"} boogie_si_record_i64($i343);
    goto corral_source_split_1935;

  corral_source_split_1935:
    assume {:verifier.code 0} true;
    $i344 := $trunc.i64.i32($i343);
    call {:si_unique_call 937} {:cexpr "__cil_tmp241"} boogie_si_record_i32($i344);
    goto corral_source_split_1936;

  corral_source_split_1936:
    assume {:verifier.code 0} true;
    $i345 := $udiv.i32($i344, $i335);
    goto corral_source_split_1937;

  corral_source_split_1937:
    assume {:verifier.code 0} true;
    $p346 := $i2p.i64.ref($i331);
    goto corral_source_split_1938;

  corral_source_split_1938:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p346, $i345);
    goto corral_source_split_1939;

  corral_source_split_1939:
    assume {:verifier.code 0} true;
    $i347 := $p2i.ref.i64($p9);
    call {:si_unique_call 938} {:cexpr "__cil_tmp242"} boogie_si_record_i64($i347);
    goto corral_source_split_1940;

  corral_source_split_1940:
    assume {:verifier.code 0} true;
    $i348 := $add.i64($i347, 20);
    call {:si_unique_call 939} {:cexpr "__cil_tmp243"} boogie_si_record_i64($i348);
    goto corral_source_split_1941;

  corral_source_split_1941:
    assume {:verifier.code 0} true;
    $p349 := $i2p.i64.ref($i348);
    goto corral_source_split_1942;

  corral_source_split_1942:
    assume {:verifier.code 0} true;
    $i350 := $load.i32($M.1, $p349);
    call {:si_unique_call 940} {:cexpr "__cil_tmp244"} boogie_si_record_i32($i350);
    goto corral_source_split_1943;

  corral_source_split_1943:
    assume {:verifier.code 0} true;
    $i351 := $lshr.i32($i120, $i350);
    call {:si_unique_call 941} {:cexpr "block"} boogie_si_record_i32($i351);
    goto corral_source_split_1944;

  corral_source_split_1944:
    assume {:verifier.code 0} true;
    $i352 := $i351;
    goto $bb51;

  $bb47:
    assume $i298 == 1;
    goto corral_source_split_1885;

  corral_source_split_1885:
    assume {:verifier.code 0} true;
    $i299 := $p2i.ref.i64($p9);
    call {:si_unique_call 906} {:cexpr "__cil_tmp207"} boogie_si_record_i64($i299);
    goto corral_source_split_1886;

  corral_source_split_1886:
    assume {:verifier.code 0} true;
    $i300 := $add.i64($i299, 20);
    call {:si_unique_call 907} {:cexpr "__cil_tmp208"} boogie_si_record_i64($i300);
    goto corral_source_split_1887;

  corral_source_split_1887:
    assume {:verifier.code 0} true;
    $p301 := $i2p.i64.ref($i300);
    goto corral_source_split_1888;

  corral_source_split_1888:
    assume {:verifier.code 0} true;
    $i302 := $load.i32($M.1, $p301);
    call {:si_unique_call 908} {:cexpr "__cil_tmp209"} boogie_si_record_i32($i302);
    goto corral_source_split_1889;

  corral_source_split_1889:
    assume {:verifier.code 0} true;
    call {:si_unique_call 909} vslice_dummy_var_57 := printk.ref.i32(.str.89, $i302);
    goto corral_source_split_1890;

  corral_source_split_1890:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb44:
    assume $i275 == 1;
    goto corral_source_split_1859;

  corral_source_split_1859:
    assume {:verifier.code 0} true;
    $i276 := $p2i.ref.i64($p9);
    call {:si_unique_call 889} {:cexpr "__cil_tmp191"} boogie_si_record_i64($i276);
    goto corral_source_split_1860;

  corral_source_split_1860:
    assume {:verifier.code 0} true;
    $i277 := $add.i64($i276, 12);
    call {:si_unique_call 890} {:cexpr "__cil_tmp192"} boogie_si_record_i64($i277);
    goto corral_source_split_1861;

  corral_source_split_1861:
    assume {:verifier.code 0} true;
    $p278 := $i2p.i64.ref($i277);
    goto corral_source_split_1862;

  corral_source_split_1862:
    assume {:verifier.code 0} true;
    $i279 := $load.i32($M.1, $p278);
    call {:si_unique_call 891} {:cexpr "__cil_tmp193"} boogie_si_record_i32($i279);
    goto corral_source_split_1863;

  corral_source_split_1863:
    assume {:verifier.code 0} true;
    $i280 := $p2i.ref.i64($p9);
    call {:si_unique_call 892} {:cexpr "__cil_tmp194"} boogie_si_record_i64($i280);
    goto corral_source_split_1864;

  corral_source_split_1864:
    assume {:verifier.code 0} true;
    $i281 := $add.i64($i280, 16);
    call {:si_unique_call 893} {:cexpr "__cil_tmp195"} boogie_si_record_i64($i281);
    goto corral_source_split_1865;

  corral_source_split_1865:
    assume {:verifier.code 0} true;
    $p282 := $i2p.i64.ref($i281);
    goto corral_source_split_1866;

  corral_source_split_1866:
    assume {:verifier.code 0} true;
    $i283 := $load.i32($M.1, $p282);
    call {:si_unique_call 894} {:cexpr "__cil_tmp196"} boogie_si_record_i32($i283);
    goto corral_source_split_1867;

  corral_source_split_1867:
    assume {:verifier.code 0} true;
    $i284 := $add.i32($i283, $i279);
    call {:si_unique_call 895} {:cexpr "__cil_tmp197"} boogie_si_record_i32($i284);
    goto corral_source_split_1868;

  corral_source_split_1868:
    assume {:verifier.code 0} true;
    $i285 := $p2i.ref.i64($p9);
    call {:si_unique_call 896} {:cexpr "__cil_tmp198"} boogie_si_record_i64($i285);
    goto corral_source_split_1869;

  corral_source_split_1869:
    assume {:verifier.code 0} true;
    $i286 := $add.i64($i285, 16);
    call {:si_unique_call 897} {:cexpr "__cil_tmp199"} boogie_si_record_i64($i286);
    goto corral_source_split_1870;

  corral_source_split_1870:
    assume {:verifier.code 0} true;
    $p287 := $i2p.i64.ref($i286);
    goto corral_source_split_1871;

  corral_source_split_1871:
    assume {:verifier.code 0} true;
    $i288 := $load.i32($M.1, $p287);
    call {:si_unique_call 898} {:cexpr "__cil_tmp200"} boogie_si_record_i32($i288);
    goto corral_source_split_1872;

  corral_source_split_1872:
    assume {:verifier.code 0} true;
    $i289 := $p2i.ref.i64($p9);
    call {:si_unique_call 899} {:cexpr "__cil_tmp201"} boogie_si_record_i64($i289);
    goto corral_source_split_1873;

  corral_source_split_1873:
    assume {:verifier.code 0} true;
    $i290 := $add.i64($i289, 12);
    call {:si_unique_call 900} {:cexpr "__cil_tmp202"} boogie_si_record_i64($i290);
    goto corral_source_split_1874;

  corral_source_split_1874:
    assume {:verifier.code 0} true;
    $p291 := $i2p.i64.ref($i290);
    goto corral_source_split_1875;

  corral_source_split_1875:
    assume {:verifier.code 0} true;
    $i292 := $load.i32($M.1, $p291);
    call {:si_unique_call 901} {:cexpr "__cil_tmp203"} boogie_si_record_i32($i292);
    goto corral_source_split_1876;

  corral_source_split_1876:
    assume {:verifier.code 0} true;
    call {:si_unique_call 902} vslice_dummy_var_56 := printk.ref.i32.i32.i32(.str.88, $i284, $i288, $i292);
    goto corral_source_split_1877;

  corral_source_split_1877:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb41:
    assume $i260 == 1;
    goto corral_source_split_1841;

  corral_source_split_1841:
    assume {:verifier.code 0} true;
    $i261 := $p2i.ref.i64($p9);
    call {:si_unique_call 878} {:cexpr "__cil_tmp181"} boogie_si_record_i64($i261);
    goto corral_source_split_1842;

  corral_source_split_1842:
    assume {:verifier.code 0} true;
    $i262 := $add.i64($i261, 16);
    call {:si_unique_call 879} {:cexpr "__cil_tmp182"} boogie_si_record_i64($i262);
    goto corral_source_split_1843;

  corral_source_split_1843:
    assume {:verifier.code 0} true;
    $p263 := $i2p.i64.ref($i262);
    goto corral_source_split_1844;

  corral_source_split_1844:
    assume {:verifier.code 0} true;
    $i264 := $load.i32($M.1, $p263);
    call {:si_unique_call 880} {:cexpr "__cil_tmp183"} boogie_si_record_i32($i264);
    goto corral_source_split_1845;

  corral_source_split_1845:
    assume {:verifier.code 0} true;
    call {:si_unique_call 881} vslice_dummy_var_55 := printk.ref.i32(.str.87, $i264);
    goto corral_source_split_1846;

  corral_source_split_1846:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb38:
    assume $i224 == 1;
    goto corral_source_split_1802;

  corral_source_split_1802:
    assume {:verifier.code 0} true;
    $p225 := $bitcast.ref.ref($p9);
    goto corral_source_split_1803;

  corral_source_split_1803:
    assume {:verifier.code 0} true;
    $p226 := $bitcast.ref.ref($p225);
    goto corral_source_split_1804;

  corral_source_split_1804:
    assume {:verifier.code 0} true;
    $i227 := $p2i.ref.i64($p9);
    call {:si_unique_call 853} {:cexpr "__cil_tmp157"} boogie_si_record_i64($i227);
    goto corral_source_split_1805;

  corral_source_split_1805:
    assume {:verifier.code 0} true;
    $i228 := $add.i64($i227, 8);
    call {:si_unique_call 854} {:cexpr "__cil_tmp158"} boogie_si_record_i64($i228);
    goto corral_source_split_1806;

  corral_source_split_1806:
    assume {:verifier.code 0} true;
    $p229 := $i2p.i64.ref($i228);
    goto corral_source_split_1807;

  corral_source_split_1807:
    assume {:verifier.code 0} true;
    $i230 := $load.i32($M.1, $p229);
    call {:si_unique_call 855} {:cexpr "__cil_tmp159"} boogie_si_record_i32($i230);
    goto corral_source_split_1808;

  corral_source_split_1808:
    assume {:verifier.code 0} true;
    $i231 := $p2i.ref.i64($p9);
    call {:si_unique_call 856} {:cexpr "__cil_tmp160"} boogie_si_record_i64($i231);
    goto corral_source_split_1809;

  corral_source_split_1809:
    assume {:verifier.code 0} true;
    $i232 := $add.i64($i231, 12);
    call {:si_unique_call 857} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i232);
    goto corral_source_split_1810;

  corral_source_split_1810:
    assume {:verifier.code 0} true;
    $p233 := $i2p.i64.ref($i232);
    goto corral_source_split_1811;

  corral_source_split_1811:
    assume {:verifier.code 0} true;
    $i234 := $load.i32($M.1, $p233);
    call {:si_unique_call 858} {:cexpr "__cil_tmp162"} boogie_si_record_i32($i234);
    goto corral_source_split_1812;

  corral_source_split_1812:
    assume {:verifier.code 0} true;
    $i235 := $p2i.ref.i64($p9);
    call {:si_unique_call 859} {:cexpr "__cil_tmp163"} boogie_si_record_i64($i235);
    goto corral_source_split_1813;

  corral_source_split_1813:
    assume {:verifier.code 0} true;
    $i236 := $add.i64($i235, 16);
    call {:si_unique_call 860} {:cexpr "__cil_tmp164"} boogie_si_record_i64($i236);
    goto corral_source_split_1814;

  corral_source_split_1814:
    assume {:verifier.code 0} true;
    $p237 := $i2p.i64.ref($i236);
    goto corral_source_split_1815;

  corral_source_split_1815:
    assume {:verifier.code 0} true;
    $i238 := $load.i32($M.1, $p237);
    call {:si_unique_call 861} {:cexpr "__cil_tmp165"} boogie_si_record_i32($i238);
    goto corral_source_split_1816;

  corral_source_split_1816:
    assume {:verifier.code 0} true;
    $i239 := $p2i.ref.i64($p9);
    call {:si_unique_call 862} {:cexpr "__cil_tmp166"} boogie_si_record_i64($i239);
    goto corral_source_split_1817;

  corral_source_split_1817:
    assume {:verifier.code 0} true;
    $i240 := $add.i64($i239, 20);
    call {:si_unique_call 863} {:cexpr "__cil_tmp167"} boogie_si_record_i64($i240);
    goto corral_source_split_1818;

  corral_source_split_1818:
    assume {:verifier.code 0} true;
    $p241 := $i2p.i64.ref($i240);
    goto corral_source_split_1819;

  corral_source_split_1819:
    assume {:verifier.code 0} true;
    $i242 := $load.i32($M.1, $p241);
    call {:si_unique_call 864} {:cexpr "__cil_tmp168"} boogie_si_record_i32($i242);
    goto corral_source_split_1820;

  corral_source_split_1820:
    assume {:verifier.code 0} true;
    $i243 := $p2i.ref.i64($p9);
    call {:si_unique_call 865} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i243);
    goto corral_source_split_1821;

  corral_source_split_1821:
    assume {:verifier.code 0} true;
    $i244 := $add.i64($i243, 24);
    call {:si_unique_call 866} {:cexpr "__cil_tmp170"} boogie_si_record_i64($i244);
    goto corral_source_split_1822;

  corral_source_split_1822:
    assume {:verifier.code 0} true;
    $p245 := $i2p.i64.ref($i244);
    goto corral_source_split_1823;

  corral_source_split_1823:
    assume {:verifier.code 0} true;
    $i246 := $load.i32($M.1, $p245);
    call {:si_unique_call 867} {:cexpr "__cil_tmp171"} boogie_si_record_i32($i246);
    goto corral_source_split_1824;

  corral_source_split_1824:
    assume {:verifier.code 0} true;
    $i247 := $p2i.ref.i64($p9);
    call {:si_unique_call 868} {:cexpr "__cil_tmp172"} boogie_si_record_i64($i247);
    goto corral_source_split_1825;

  corral_source_split_1825:
    assume {:verifier.code 0} true;
    $i248 := $add.i64($i247, 28);
    call {:si_unique_call 869} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i248);
    goto corral_source_split_1826;

  corral_source_split_1826:
    assume {:verifier.code 0} true;
    $p249 := $i2p.i64.ref($i248);
    goto corral_source_split_1827;

  corral_source_split_1827:
    assume {:verifier.code 0} true;
    $i250 := $load.i32($M.1, $p249);
    call {:si_unique_call 870} {:cexpr "__cil_tmp174"} boogie_si_record_i32($i250);
    goto corral_source_split_1828;

  corral_source_split_1828:
    assume {:verifier.code 0} true;
    $i251 := $p2i.ref.i64($p9);
    call {:si_unique_call 871} {:cexpr "__cil_tmp175"} boogie_si_record_i64($i251);
    goto corral_source_split_1829;

  corral_source_split_1829:
    assume {:verifier.code 0} true;
    $i252 := $add.i64($i251, 32);
    call {:si_unique_call 872} {:cexpr "__cil_tmp176"} boogie_si_record_i64($i252);
    goto corral_source_split_1830;

  corral_source_split_1830:
    assume {:verifier.code 0} true;
    $p253 := $i2p.i64.ref($i252);
    goto corral_source_split_1831;

  corral_source_split_1831:
    assume {:verifier.code 0} true;
    $i254 := $load.i32($M.1, $p253);
    call {:si_unique_call 873} {:cexpr "__cil_tmp177"} boogie_si_record_i32($i254);
    goto corral_source_split_1832;

  corral_source_split_1832:
    assume {:verifier.code 0} true;
    call {:si_unique_call 874} vslice_dummy_var_54 := __dynamic_pr_debug.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32($p5, .str.86, $p226, $i230, $i234, $i238, $i242, $i246, $i250, $i254);
    goto corral_source_split_1833;

  corral_source_split_1833:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb35:
    assume $i156 == 1;
    goto corral_source_split_1719;

  corral_source_split_1719:
    assume {:verifier.code 0} true;
    call {:si_unique_call 817} vslice_dummy_var_53 := printk.ref(.str.85);
    goto corral_source_split_1720;

  corral_source_split_1720:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb31:
    assume $i150 == 1;
    goto corral_source_split_1709;

  corral_source_split_1709:
    assume {:verifier.code 0} true;
    call {:si_unique_call 814} vslice_dummy_var_52 := printk.ref(.str.84);
    goto corral_source_split_1710;

  corral_source_split_1710:
    assume {:verifier.code 0} true;
    $i152 := $sub.i32(0, 1);
    goto $bb33;

  $bb28:
    assume $i135 == 1;
    goto corral_source_split_1688;

  corral_source_split_1688:
    assume {:verifier.code 0} true;
    $p136 := $bitcast.ref.ref($p9);
    goto corral_source_split_1689;

  corral_source_split_1689:
    assume {:verifier.code 0} true;
    $p137 := $bitcast.ref.ref($p2);
    goto corral_source_split_1690;

  corral_source_split_1690:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_4 := $M.1;
    cmdloc_dummy_var_5 := $M.1;
    call {:si_unique_call 804} cmdloc_dummy_var_6 := $memcpy.i8(cmdloc_dummy_var_4, cmdloc_dummy_var_5, $p136, $p137, 148, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_6;
    goto corral_source_split_1691;

  corral_source_split_1691:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb25:
    assume $i119 == 1;
    goto corral_source_split_1670;

  corral_source_split_1670:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p0);
    call {:si_unique_call 794} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i121);
    goto corral_source_split_1671;

  corral_source_split_1671:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, 356);
    call {:si_unique_call 795} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i122);
    goto corral_source_split_1672;

  corral_source_split_1672:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_1673;

  corral_source_split_1673:
    assume {:verifier.code 0} true;
    $i124 := $load.i32($M.1, $p123);
    call {:si_unique_call 796} {:cexpr "__cil_tmp97"} boogie_si_record_i32($i124);
    goto corral_source_split_1674;

  corral_source_split_1674:
    assume {:verifier.code 0} true;
    $i125 := $mul.i32($i124, $i76);
    call {:si_unique_call 797} {:cexpr "__cil_tmp98"} boogie_si_record_i32($i125);
    goto corral_source_split_1675;

  corral_source_split_1675:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p0);
    call {:si_unique_call 798} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i126);
    goto corral_source_split_1676;

  corral_source_split_1676:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, 24);
    call {:si_unique_call 799} {:cexpr "__cil_tmp101"} boogie_si_record_i64($i127);
    goto corral_source_split_1677;

  corral_source_split_1677:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_1678;

  corral_source_split_1678:
    assume {:verifier.code 0} true;
    $p129 := $load.ref($M.1, $p128);
    goto corral_source_split_1679;

  corral_source_split_1679:
    assume {:verifier.code 0} true;
    $i130 := $p2i.ref.i64($p129);
    call {:si_unique_call 800} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i130);
    goto corral_source_split_1680;

  corral_source_split_1680:
    assume {:verifier.code 0} true;
    $i131 := $add.i64($i130, 64);
    call {:si_unique_call 801} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i131);
    goto corral_source_split_1681;

  corral_source_split_1681:
    assume {:verifier.code 0} true;
    $p132 := $i2p.i64.ref($i131);
    goto corral_source_split_1682;

  corral_source_split_1682:
    assume {:verifier.code 0} true;
    $i133 := $load.i32($M.1, $p132);
    call {:si_unique_call 802} {:cexpr "__cil_tmp105"} boogie_si_record_i32($i133);
    goto corral_source_split_1683;

  corral_source_split_1683:
    assume {:verifier.code 0} true;
    call {:si_unique_call 803} vslice_dummy_var_50 := printk.ref.i32.i32.i32(.str.83, $i125, $i133, $i118);
    goto corral_source_split_1684;

  corral_source_split_1684:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i754 := $add.i32($i76, 1);
    call {:si_unique_call 781} {:cexpr "block"} boogie_si_record_i32($i754);
    goto corral_source_split_1643;

  corral_source_split_1643:
    assume {:verifier.code 0} true;
    $i755 := $load.i32($M.1, $p73);
    call {:si_unique_call 782} {:cexpr "__cil_tmp500"} boogie_si_record_i32($i755);
    goto corral_source_split_1644;

  corral_source_split_1644:
    assume {:verifier.code 0} true;
    $i756 := $ugt.i32($i755, $i754);
    goto corral_source_split_1645;

  corral_source_split_1645:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb122, $bb123;

  $bb123:
    assume !($i756 == 1);
    goto corral_source_split_2509;

  corral_source_split_2509:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb122:
    assume $i756 == 1;
    assume {:verifier.code 0} true;
    $i76 := $i754;
    goto $bb122_dummy;

  $bb21:
    assume $i109 == 1;
    goto corral_source_split_1657;

  corral_source_split_1657:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb19:
    assume $i106 == 1;
    goto corral_source_split_1650;

  corral_source_split_1650:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb9:
    assume $i86 == 1;
    goto corral_source_split_1619;

  corral_source_split_1619:
    assume {:verifier.code 0} true;
    $i87 := $ne.i32(5, 0);
    goto corral_source_split_1620;

  corral_source_split_1620:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb11:
    assume $i87 == 1;
    goto corral_source_split_1622;

  corral_source_split_1622:
    assume {:verifier.code 0} true;
    $i88 := $p2i.ref.i64($p0);
    call {:si_unique_call 769} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i88);
    goto corral_source_split_1623;

  corral_source_split_1623:
    assume {:verifier.code 0} true;
    $i89 := $add.i64($i88, 356);
    call {:si_unique_call 770} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i89);
    goto corral_source_split_1624;

  corral_source_split_1624:
    assume {:verifier.code 0} true;
    $p90 := $i2p.i64.ref($i89);
    goto corral_source_split_1625;

  corral_source_split_1625:
    assume {:verifier.code 0} true;
    $i91 := $load.i32($M.1, $p90);
    call {:si_unique_call 771} {:cexpr "__cil_tmp75"} boogie_si_record_i32($i91);
    goto corral_source_split_1626;

  corral_source_split_1626:
    assume {:verifier.code 0} true;
    $i92 := $mul.i32($i91, $i76);
    call {:si_unique_call 772} {:cexpr "__cil_tmp76"} boogie_si_record_i32($i92);
    goto corral_source_split_1627;

  corral_source_split_1627:
    assume {:verifier.code 0} true;
    $i93 := $p2i.ref.i64($p0);
    call {:si_unique_call 773} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i93);
    goto corral_source_split_1628;

  corral_source_split_1628:
    assume {:verifier.code 0} true;
    $i94 := $add.i64($i93, 24);
    call {:si_unique_call 774} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i94);
    goto corral_source_split_1629;

  corral_source_split_1629:
    assume {:verifier.code 0} true;
    $p95 := $i2p.i64.ref($i94);
    goto corral_source_split_1630;

  corral_source_split_1630:
    assume {:verifier.code 0} true;
    $p96 := $load.ref($M.1, $p95);
    goto corral_source_split_1631;

  corral_source_split_1631:
    assume {:verifier.code 0} true;
    $i97 := $p2i.ref.i64($p96);
    call {:si_unique_call 775} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i97);
    goto corral_source_split_1632;

  corral_source_split_1632:
    assume {:verifier.code 0} true;
    $i98 := $add.i64($i97, 64);
    call {:si_unique_call 776} {:cexpr "__cil_tmp82"} boogie_si_record_i64($i98);
    goto corral_source_split_1633;

  corral_source_split_1633:
    assume {:verifier.code 0} true;
    $p99 := $i2p.i64.ref($i98);
    goto corral_source_split_1634;

  corral_source_split_1634:
    assume {:verifier.code 0} true;
    $i100 := $load.i32($M.1, $p99);
    call {:si_unique_call 777} {:cexpr "__cil_tmp83"} boogie_si_record_i32($i100);
    goto corral_source_split_1635;

  corral_source_split_1635:
    assume {:verifier.code 0} true;
    call {:si_unique_call 778} vslice_dummy_var_48 := printk.ref.i32.i32.i32(.str.80, $i92, $i100, $i84);
    goto corral_source_split_1636;

  corral_source_split_1636:
    assume {:verifier.code 0} true;
    $i102 := $sub.i32(5, 1);
    call {:si_unique_call 779} {:cexpr "warncount"} boogie_si_record_i32($i102);
    goto corral_source_split_1637;

  corral_source_split_1637:
    assume {:verifier.code 0} true;
    $i103 := $eq.i32($i102, 0);
    goto corral_source_split_1638;

  corral_source_split_1638:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i103 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb13:
    assume $i103 == 1;
    goto corral_source_split_1640;

  corral_source_split_1640:
    assume {:verifier.code 0} true;
    call {:si_unique_call 780} vslice_dummy_var_49 := printk.ref(.str.81);
    goto corral_source_split_1641;

  corral_source_split_1641:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb1:
    assume $i38 == 1;
    goto corral_source_split_1561;

  corral_source_split_1561:
    assume {:verifier.code 0} true;
    call {:si_unique_call 738} vslice_dummy_var_47 := __dynamic_pr_debug.ref.ref.ref($p4, .str.79, $p0);
    goto corral_source_split_1562;

  corral_source_split_1562:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb116_dummy:
    assume false;
    return;

  $bb111_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2458;

  $bb119_dummy:
    assume false;
    return;

  $bb106_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2448;

  $bb100_dummy:
    assume false;
    return;

  $bb98_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2418;

  $bb92_dummy:
    assume false;
    return;

  $bb90_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2395;

  $bb122_dummy:
    assume false;
    return;

  $bb7_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1606;
}



const kcalloc: ref;

axiom kcalloc == $sub.ref(0, 135609);

procedure kcalloc($i0: i64, $i1: i64, $i2: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies assertsPassed, $CurrAddr;



implementation kcalloc($i0: i64, $i1: i64, $i2: i32) returns ($r: ref)
{
  var vslice_dummy_var_73: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1198} {:cexpr "kcalloc:arg:n"} boogie_si_record_i64($i0);
    call {:si_unique_call 1199} {:cexpr "kcalloc:arg:size"} boogie_si_record_i64($i1);
    call {:si_unique_call 1200} {:cexpr "kcalloc:arg:flags"} boogie_si_record_i32($i2);
    goto corral_source_split_2952;

  corral_source_split_2952:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1201} ldv_check_alloc_flags($i2);
    goto SeqInstr_22, SeqInstr_23;

  SeqInstr_23:
    assume assertsPassed;
    goto SeqInstr_24;

  SeqInstr_24:
    goto corral_source_split_2953;

  corral_source_split_2953:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1202} vslice_dummy_var_73 := ldv_kcalloc_14($i0, $i1, $i2);
    goto corral_source_split_2954;

  corral_source_split_2954:
    assume {:verifier.code 0} true;
    $r := $0.ref;
    return;

  SeqInstr_22:
    assume !assertsPassed;
    return;
}



const format_chain: ref;

axiom format_chain == $sub.ref(0, 136641);

procedure format_chain($p0: ref, $i1: i32);
  free requires assertsPassed;
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation format_chain($p0: ref, $i1: i32)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i16;
  var $i11: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i16;
  var $i32: i32;
  var $i33: i1;
  var vslice_dummy_var_74: i32;
  var vslice_dummy_var_75: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1203} {:cexpr "format_chain:arg:first_block"} boogie_si_record_i32($i1);
    call {:si_unique_call 1204} {:cexpr "format_chain:arg:block"} boogie_si_record_i32($i1);
    goto corral_source_split_2956;

  corral_source_split_2956:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1205} vslice_dummy_var_74 := printk.ref.i32(.str.98, $i1);
    goto corral_source_split_2957;

  corral_source_split_2957:
    assume {:verifier.code 0} true;
    $i3 := $i1;
    goto $bb1;

  $bb1:
    call $i3, $i4, $i5, $i6, $p7, $p8, $p9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $p18, $p19, $p20, $i21, $i22, $i23, $p24, $p25, $p26, $i27, $i28, $i29, $p30, $i31, $i32, $i33, vslice_dummy_var_75 := format_chain_loop_$bb1($p0, $i3, $i4, $i5, $i6, $p7, $p8, $p9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $p18, $p19, $p20, $i21, $i22, $i23, $p24, $p25, $p26, $i27, $i28, $i29, $p30, $i31, $i32, $i33, vslice_dummy_var_75);
    goto $bb1_last;

  corral_source_split_2959:
    assume {:verifier.code 0} true;
    $i4 := $zext.i32.i64($i3);
    call {:si_unique_call 1206} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i4);
    goto corral_source_split_2960;

  corral_source_split_2960:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p0);
    call {:si_unique_call 1207} {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
    goto corral_source_split_2961;

  corral_source_split_2961:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 544);
    call {:si_unique_call 1208} {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
    goto corral_source_split_2962;

  corral_source_split_2962:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_2963;

  corral_source_split_2963:
    assume {:verifier.code 0} true;
    $p8 := $load.ref($M.1, $p7);
    goto corral_source_split_2964;

  corral_source_split_2964:
    assume {:verifier.code 0} true;
    $p9 := $add.ref($p8, $mul.ref($i4, 2));
    goto corral_source_split_2965;

  corral_source_split_2965:
    assume {:verifier.code 0} true;
    $i10 := $load.i16($M.1, $p9);
    call {:si_unique_call 1209} {:cexpr "__cil_tmp11"} boogie_si_record_i16($i10);
    goto corral_source_split_2966;

  corral_source_split_2966:
    assume {:verifier.code 0} true;
    $i11 := $zext.i16.i32($i10);
    call {:si_unique_call 1210} {:cexpr "block1"} boogie_si_record_i32($i11);
    goto corral_source_split_2967;

  corral_source_split_2967:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1211} vslice_dummy_var_75 := printk.ref.i32(.str.99, $i3);
    goto corral_source_split_2968;

  corral_source_split_2968:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1212} $i13 := INFTL_formatblock($p0, $i3);
    call {:si_unique_call 1213} {:cexpr "tmp"} boogie_si_record_i32($i13);
    goto corral_source_split_2969;

  corral_source_split_2969:
    assume {:verifier.code 0} true;
    $i14 := $slt.i32($i13, 0);
    goto corral_source_split_2970;

  corral_source_split_2970:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb2, $bb3;

  $bb3:
    assume !($i14 == 1);
    goto corral_source_split_2981;

  corral_source_split_2981:
    assume {:verifier.code 0} true;
    $i21 := $zext.i32.i64($i3);
    call {:si_unique_call 1217} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i21);
    goto corral_source_split_2982;

  corral_source_split_2982:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p0);
    call {:si_unique_call 1218} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i22);
    goto corral_source_split_2983;

  corral_source_split_2983:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 544);
    call {:si_unique_call 1219} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
    goto corral_source_split_2984;

  corral_source_split_2984:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_2985;

  corral_source_split_2985:
    assume {:verifier.code 0} true;
    $p25 := $load.ref($M.1, $p24);
    goto corral_source_split_2986;

  corral_source_split_2986:
    assume {:verifier.code 0} true;
    $p26 := $add.ref($p25, $mul.ref($i21, 2));
    goto corral_source_split_2987;

  corral_source_split_2987:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p26, $sub.i16(0, 2));
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i27 := $eq.i32($i11, 65535);
    goto corral_source_split_2989;

  corral_source_split_2989:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i27 == 1);
    goto corral_source_split_2993;

  corral_source_split_2993:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p0);
    call {:si_unique_call 1220} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i28);
    goto corral_source_split_2994;

  corral_source_split_2994:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 520);
    call {:si_unique_call 1221} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i29);
    goto corral_source_split_2995;

  corral_source_split_2995:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_2996;

  corral_source_split_2996:
    assume {:verifier.code 0} true;
    $i31 := $load.i16($M.1, $p30);
    call {:si_unique_call 1222} {:cexpr "__cil_tmp25"} boogie_si_record_i16($i31);
    goto corral_source_split_2997;

  corral_source_split_2997:
    assume {:verifier.code 0} true;
    $i32 := $zext.i16.i32($i31);
    call {:si_unique_call 1223} {:cexpr "__cil_tmp26"} boogie_si_record_i32($i32);
    goto corral_source_split_2998;

  corral_source_split_2998:
    assume {:verifier.code 0} true;
    $i33 := $ule.i32($i32, $i11);
    goto corral_source_split_2999;

  corral_source_split_2999:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i3 := $i11;
    goto $bb11_dummy;

  $bb8:
    assume $i33 == 1;
    goto corral_source_split_3001;

  corral_source_split_3001:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    return;

  $bb5:
    assume $i27 == 1;
    goto corral_source_split_2991;

  corral_source_split_2991:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb2:
    assume $i14 == 1;
    goto corral_source_split_2972;

  corral_source_split_2972:
    assume {:verifier.code 0} true;
    $i15 := $zext.i32.i64($i3);
    call {:si_unique_call 1214} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
    goto corral_source_split_2973;

  corral_source_split_2973:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p0);
    call {:si_unique_call 1215} {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
    goto corral_source_split_2974;

  corral_source_split_2974:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 544);
    call {:si_unique_call 1216} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i17);
    goto corral_source_split_2975;

  corral_source_split_2975:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_2976;

  corral_source_split_2976:
    assume {:verifier.code 0} true;
    $p19 := $load.ref($M.1, $p18);
    goto corral_source_split_2977;

  corral_source_split_2977:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($p19, $mul.ref($i15, 2));
    goto corral_source_split_2978;

  corral_source_split_2978:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p20, $sub.i16(0, 4));
    goto corral_source_split_2979;

  corral_source_split_2979:
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb11_dummy:
    assume false;
    return;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2959;
}



const INFTL_dumptables: ref;

axiom INFTL_dumptables == $sub.ref(0, 137673);

procedure INFTL_dumptables($p0: ref);
  free requires assertsPassed;
  modifies $M.3, $M.1, $CurrAddr;



implementation INFTL_dumptables($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i8;
  var $i32: i64;
  var $i33: i64;
  var $i34: i32;
  var $i35: i64;
  var $i36: i1;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $p50: ref;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i8;
  var $i58: i64;
  var $i59: i64;
  var $i60: i32;
  var $i61: i64;
  var $i62: i1;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i32;
  var $i68: i64;
  var $i69: i64;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i8;
  var $i96: i64;
  var $i97: i64;
  var $i98: i32;
  var $i99: i64;
  var $i100: i1;
  var $p102: ref;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i64;
  var $i110: i64;
  var $p111: ref;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i8;
  var $i122: i64;
  var $i123: i64;
  var $i124: i32;
  var $i125: i64;
  var $i126: i1;
  var $i127: i64;
  var $i128: i64;
  var $i129: i64;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i16;
  var $i134: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i1;
  var $i73: i32;
  var $p139: ref;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i64;
  var $i144: i64;
  var $p145: ref;
  var $i146: i64;
  var $i147: i64;
  var $p148: ref;
  var $i149: i64;
  var $i150: i64;
  var $p151: ref;
  var $i152: i64;
  var $i153: i64;
  var $p154: ref;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i8;
  var $i159: i64;
  var $i160: i64;
  var $i161: i32;
  var $i162: i64;
  var $i163: i1;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i64;
  var $i170: i64;
  var $p171: ref;
  var $i172: i64;
  var $i173: i64;
  var $p174: ref;
  var $i175: i64;
  var $i176: i64;
  var $p177: ref;
  var $i178: i64;
  var $i179: i64;
  var $p180: ref;
  var $i181: i64;
  var $i182: i64;
  var $p183: ref;
  var $i184: i8;
  var $i185: i64;
  var $i186: i64;
  var $i187: i32;
  var $i188: i64;
  var $i189: i1;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i16;
  var $i194: i32;
  var $i195: i64;
  var $i196: i64;
  var $p197: ref;
  var $i198: i16;
  var $i199: i32;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $i203: i32;
  var $i205: i64;
  var $i206: i64;
  var $p207: ref;
  var $i209: i32;
  var $i210: i1;
  var $p211: ref;
  var $i212: i64;
  var $i213: i64;
  var $p214: ref;
  var $i215: i64;
  var $i216: i64;
  var $p217: ref;
  var $i218: i64;
  var $i219: i64;
  var $p220: ref;
  var $i221: i64;
  var $i222: i64;
  var $p223: ref;
  var $i224: i64;
  var $i225: i64;
  var $p226: ref;
  var $i227: i64;
  var $i228: i64;
  var $p229: ref;
  var $i230: i8;
  var $i231: i64;
  var $i232: i64;
  var $i233: i32;
  var $i234: i64;
  var $i235: i1;
  var $p237: ref;
  var $i238: i64;
  var $i239: i64;
  var $p240: ref;
  var $i241: i64;
  var $i242: i64;
  var $p243: ref;
  var $i244: i64;
  var $i245: i64;
  var $p246: ref;
  var $i247: i64;
  var $i248: i64;
  var $p249: ref;
  var $i250: i64;
  var $i251: i64;
  var $p252: ref;
  var $i253: i64;
  var $i254: i64;
  var $p255: ref;
  var $i256: i8;
  var $i257: i64;
  var $i258: i64;
  var $i259: i32;
  var $i260: i64;
  var $i261: i1;
  var $i262: i64;
  var $i263: i64;
  var $i264: i64;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $i268: i16;
  var $i269: i32;
  var $i271: i32;
  var $i272: i16;
  var $i273: i32;
  var $i274: i1;
  var $i208: i32;
  var $p275: ref;
  var $i276: i64;
  var $i277: i64;
  var $p278: ref;
  var $i279: i64;
  var $i280: i64;
  var $p281: ref;
  var $i282: i64;
  var $i283: i64;
  var $p284: ref;
  var $i285: i64;
  var $i286: i64;
  var $p287: ref;
  var $i288: i64;
  var $i289: i64;
  var $p290: ref;
  var $i291: i64;
  var $i292: i64;
  var $p293: ref;
  var $i294: i8;
  var $i295: i64;
  var $i296: i64;
  var $i297: i32;
  var $i298: i64;
  var $i299: i1;
  var $p301: ref;
  var $i302: i64;
  var $i303: i64;
  var $p304: ref;
  var $i305: i64;
  var $i306: i64;
  var $p307: ref;
  var $i308: i64;
  var $i309: i64;
  var $p310: ref;
  var $i311: i64;
  var $i312: i64;
  var $p313: ref;
  var $i314: i64;
  var $i315: i64;
  var $p316: ref;
  var $i317: i64;
  var $i318: i64;
  var $p319: ref;
  var $i320: i8;
  var $i321: i64;
  var $i322: i64;
  var $i323: i32;
  var $i324: i64;
  var $i325: i1;
  var $i326: i64;
  var $i327: i64;
  var $p328: ref;
  var $i329: i32;
  var $i330: i64;
  var $i331: i64;
  var $p332: ref;
  var $i333: i8;
  var $i334: i32;
  var $i335: i64;
  var $i336: i64;
  var $p337: ref;
  var $i338: i8;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $p342: ref;
  var $i343: i16;
  var $i344: i32;
  var $i345: i64;
  var $i346: i64;
  var $p347: ref;
  var $i348: i16;
  var $i349: i32;
  var $i350: i64;
  var $i351: i64;
  var $p352: ref;
  var $i353: i16;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $p357: ref;
  var $i358: i16;
  var $i359: i32;
  var $i360: i64;
  var $i361: i64;
  var $p362: ref;
  var $i363: i16;
  var $i364: i32;
  var $i365: i64;
  var $i366: i64;
  var $p367: ref;
  var $i368: i16;
  var $i369: i32;
  var $i370: i64;
  var $i371: i64;
  var $p372: ref;
  var $i373: i32;
  var $i374: i64;
  var $i375: i64;
  var $p376: ref;
  var $i377: i32;
  var $p379: ref;
  var $i380: i64;
  var $i381: i64;
  var $p382: ref;
  var $i383: i64;
  var $i384: i64;
  var $p385: ref;
  var $i386: i64;
  var $i387: i64;
  var $p388: ref;
  var $i389: i64;
  var $i390: i64;
  var $p391: ref;
  var $i392: i64;
  var $i393: i64;
  var $p394: ref;
  var $i395: i64;
  var $i396: i64;
  var $p397: ref;
  var $i398: i8;
  var $i399: i64;
  var $i400: i64;
  var $i401: i32;
  var $i402: i64;
  var $i403: i1;
  var vslice_dummy_var_76: i32;
  var vslice_dummy_var_77: i32;
  var vslice_dummy_var_78: i32;
  var vslice_dummy_var_79: i32;
  var vslice_dummy_var_80: i32;
  var vslice_dummy_var_81: i32;
  var vslice_dummy_var_82: i32;
  var vslice_dummy_var_83: i32;
  var vslice_dummy_var_84: i32;
  var vslice_dummy_var_85: i32;
  var vslice_dummy_var_86: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1224} $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1225} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1226} $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1227} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1228} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1229} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1230} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1231} $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1232} $p9 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1233} $p10 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1234} $p11 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_3003;

  corral_source_split_3003:
    assume {:verifier.code 0} true;
    $p12 := $bitcast.ref.ref($p1);
    goto corral_source_split_3004;

  corral_source_split_3004:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p12, .str);
    goto corral_source_split_3005;

  corral_source_split_3005:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p1);
    goto corral_source_split_3006;

  corral_source_split_3006:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 8);
    call {:si_unique_call 1235} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i14);
    goto corral_source_split_3007;

  corral_source_split_3007:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_3008;

  corral_source_split_3008:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p15, .str.5);
    goto corral_source_split_3009;

  corral_source_split_3009:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p1);
    goto corral_source_split_3010;

  corral_source_split_3010:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 16);
    call {:si_unique_call 1236} {:cexpr "__cil_tmp27"} boogie_si_record_i64($i17);
    goto corral_source_split_3011;

  corral_source_split_3011:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_3012;

  corral_source_split_3012:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p18, .str.2);
    goto corral_source_split_3013;

  corral_source_split_3013:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p1);
    goto corral_source_split_3014;

  corral_source_split_3014:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 24);
    call {:si_unique_call 1237} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i20);
    goto corral_source_split_3015;

  corral_source_split_3015:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_3016;

  corral_source_split_3016:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p21, .str.6);
    goto corral_source_split_3017;

  corral_source_split_3017:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p1);
    goto corral_source_split_3018;

  corral_source_split_3018:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 32);
    call {:si_unique_call 1238} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i23);
    goto corral_source_split_3019;

  corral_source_split_3019:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_3020;

  corral_source_split_3020:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p24, 486);
    goto corral_source_split_3021;

  corral_source_split_3021:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p1);
    goto corral_source_split_3022;

  corral_source_split_3022:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 35);
    call {:si_unique_call 1239} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i26);
    goto corral_source_split_3023;

  corral_source_split_3023:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_3024;

  corral_source_split_3024:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p27, 0);
    goto corral_source_split_3025;

  corral_source_split_3025:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p1);
    goto corral_source_split_3026;

  corral_source_split_3026:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 35);
    call {:si_unique_call 1240} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i29);
    goto corral_source_split_3027;

  corral_source_split_3027:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_3028;

  corral_source_split_3028:
    assume {:verifier.code 0} true;
    $i31 := $load.i8($M.1, $p30);
    call {:si_unique_call 1241} {:cexpr "__cil_tmp32"} boogie_si_record_i8($i31);
    goto corral_source_split_3029;

  corral_source_split_3029:
    assume {:verifier.code 0} true;
    $i32 := $zext.i8.i64($i31);
    call {:si_unique_call 1242} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i32);
    goto corral_source_split_3030;

  corral_source_split_3030:
    assume {:verifier.code 0} true;
    $i33 := $and.i64($i32, 1);
    call {:si_unique_call 1243} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i33);
    goto corral_source_split_3031;

  corral_source_split_3031:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1244} $i34 := __builtinx_expect.i64.i64($i33, 0);
    goto corral_source_split_3032;

  corral_source_split_3032:
    assume {:verifier.code 0} true;
    $i35 := $sext.i32.i64($i34);
    call {:si_unique_call 1245} {:cexpr "tmp"} boogie_si_record_i64($i35);
    goto corral_source_split_3033;

  corral_source_split_3033:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, 0);
    goto corral_source_split_3034;

  corral_source_split_3034:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p38 := $bitcast.ref.ref($p2);
    goto corral_source_split_3039;

  corral_source_split_3039:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p38, .str);
    goto corral_source_split_3040;

  corral_source_split_3040:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p2);
    goto corral_source_split_3041;

  corral_source_split_3041:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 8);
    call {:si_unique_call 1247} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i40);
    goto corral_source_split_3042;

  corral_source_split_3042:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_3043;

  corral_source_split_3043:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p41, .str.5);
    goto corral_source_split_3044;

  corral_source_split_3044:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p2);
    goto corral_source_split_3045;

  corral_source_split_3045:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 16);
    call {:si_unique_call 1248} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i43);
    goto corral_source_split_3046;

  corral_source_split_3046:
    assume {:verifier.code 0} true;
    $p44 := $i2p.i64.ref($i43);
    goto corral_source_split_3047;

  corral_source_split_3047:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p44, .str.2);
    goto corral_source_split_3048;

  corral_source_split_3048:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p2);
    goto corral_source_split_3049;

  corral_source_split_3049:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 24);
    call {:si_unique_call 1249} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i46);
    goto corral_source_split_3050;

  corral_source_split_3050:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_3051;

  corral_source_split_3051:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p47, .str.7);
    goto corral_source_split_3052;

  corral_source_split_3052:
    assume {:verifier.code 0} true;
    $i48 := $p2i.ref.i64($p2);
    goto corral_source_split_3053;

  corral_source_split_3053:
    assume {:verifier.code 0} true;
    $i49 := $add.i64($i48, 32);
    call {:si_unique_call 1250} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i49);
    goto corral_source_split_3054;

  corral_source_split_3054:
    assume {:verifier.code 0} true;
    $p50 := $i2p.i64.ref($i49);
    goto corral_source_split_3055;

  corral_source_split_3055:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p50, 488);
    goto corral_source_split_3056;

  corral_source_split_3056:
    assume {:verifier.code 0} true;
    $i51 := $p2i.ref.i64($p2);
    goto corral_source_split_3057;

  corral_source_split_3057:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 35);
    call {:si_unique_call 1251} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i52);
    goto corral_source_split_3058;

  corral_source_split_3058:
    assume {:verifier.code 0} true;
    $p53 := $i2p.i64.ref($i52);
    goto corral_source_split_3059;

  corral_source_split_3059:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p53, 0);
    goto corral_source_split_3060;

  corral_source_split_3060:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p2);
    goto corral_source_split_3061;

  corral_source_split_3061:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 35);
    call {:si_unique_call 1252} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i55);
    goto corral_source_split_3062;

  corral_source_split_3062:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_3063;

  corral_source_split_3063:
    assume {:verifier.code 0} true;
    $i57 := $load.i8($M.1, $p56);
    call {:si_unique_call 1253} {:cexpr "__cil_tmp42"} boogie_si_record_i8($i57);
    goto corral_source_split_3064;

  corral_source_split_3064:
    assume {:verifier.code 0} true;
    $i58 := $zext.i8.i64($i57);
    call {:si_unique_call 1254} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i58);
    goto corral_source_split_3065;

  corral_source_split_3065:
    assume {:verifier.code 0} true;
    $i59 := $and.i64($i58, 1);
    call {:si_unique_call 1255} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i59);
    goto corral_source_split_3066;

  corral_source_split_3066:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1256} $i60 := __builtinx_expect.i64.i64($i59, 0);
    goto corral_source_split_3067;

  corral_source_split_3067:
    assume {:verifier.code 0} true;
    $i61 := $sext.i32.i64($i60);
    call {:si_unique_call 1257} {:cexpr "tmp___0"} boogie_si_record_i64($i61);
    goto corral_source_split_3068;

  corral_source_split_3068:
    assume {:verifier.code 0} true;
    $i62 := $ne.i64($i61, 0);
    goto corral_source_split_3069;

  corral_source_split_3069:
    assume {:verifier.code 0} true;
    assume {:branchcond $i62} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i62 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p0);
    call {:si_unique_call 1262} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i68);
    goto corral_source_split_3078;

  corral_source_split_3078:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 560);
    call {:si_unique_call 1263} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i69);
    goto corral_source_split_3079;

  corral_source_split_3079:
    assume {:verifier.code 0} true;
    $p70 := $i2p.i64.ref($i69);
    goto corral_source_split_3080;

  corral_source_split_3080:
    assume {:verifier.code 0} true;
    $i71 := $load.i32($M.1, $p70);
    call {:si_unique_call 1264} {:cexpr "__cil_tmp79"} boogie_si_record_i32($i71);
    goto corral_source_split_3081;

  corral_source_split_3081:
    assume {:verifier.code 0} true;
    $i72 := $ult.i32(0, $i71);
    goto corral_source_split_3082;

  corral_source_split_3082:
    assume {:verifier.code 0} true;
    assume {:branchcond $i72} true;
    goto $bb7, $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    assume !($i72 == 1);
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $p139 := $bitcast.ref.ref($p5);
    goto corral_source_split_3176;

  corral_source_split_3176:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p139, .str);
    goto corral_source_split_3177;

  corral_source_split_3177:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p5);
    goto corral_source_split_3178;

  corral_source_split_3178:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, 8);
    call {:si_unique_call 1297} {:cexpr "__cil_tmp82"} boogie_si_record_i64($i141);
    goto corral_source_split_3179;

  corral_source_split_3179:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_3180;

  corral_source_split_3180:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p142, .str.5);
    goto corral_source_split_3181;

  corral_source_split_3181:
    assume {:verifier.code 0} true;
    $i143 := $p2i.ref.i64($p5);
    goto corral_source_split_3182;

  corral_source_split_3182:
    assume {:verifier.code 0} true;
    $i144 := $add.i64($i143, 16);
    call {:si_unique_call 1298} {:cexpr "__cil_tmp83"} boogie_si_record_i64($i144);
    goto corral_source_split_3183;

  corral_source_split_3183:
    assume {:verifier.code 0} true;
    $p145 := $i2p.i64.ref($i144);
    goto corral_source_split_3184;

  corral_source_split_3184:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p145, .str.2);
    goto corral_source_split_3185;

  corral_source_split_3185:
    assume {:verifier.code 0} true;
    $i146 := $p2i.ref.i64($p5);
    goto corral_source_split_3186;

  corral_source_split_3186:
    assume {:verifier.code 0} true;
    $i147 := $add.i64($i146, 24);
    call {:si_unique_call 1299} {:cexpr "__cil_tmp84"} boogie_si_record_i64($i147);
    goto corral_source_split_3187;

  corral_source_split_3187:
    assume {:verifier.code 0} true;
    $p148 := $i2p.i64.ref($i147);
    goto corral_source_split_3188;

  corral_source_split_3188:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p148, .str.10);
    goto corral_source_split_3189;

  corral_source_split_3189:
    assume {:verifier.code 0} true;
    $i149 := $p2i.ref.i64($p5);
    goto corral_source_split_3190;

  corral_source_split_3190:
    assume {:verifier.code 0} true;
    $i150 := $add.i64($i149, 32);
    call {:si_unique_call 1300} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i150);
    goto corral_source_split_3191;

  corral_source_split_3191:
    assume {:verifier.code 0} true;
    $p151 := $i2p.i64.ref($i150);
    goto corral_source_split_3192;

  corral_source_split_3192:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p151, 496);
    goto corral_source_split_3193;

  corral_source_split_3193:
    assume {:verifier.code 0} true;
    $i152 := $p2i.ref.i64($p5);
    goto corral_source_split_3194;

  corral_source_split_3194:
    assume {:verifier.code 0} true;
    $i153 := $add.i64($i152, 35);
    call {:si_unique_call 1301} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i153);
    goto corral_source_split_3195;

  corral_source_split_3195:
    assume {:verifier.code 0} true;
    $p154 := $i2p.i64.ref($i153);
    goto corral_source_split_3196;

  corral_source_split_3196:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p154, 0);
    goto corral_source_split_3197;

  corral_source_split_3197:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p5);
    goto corral_source_split_3198;

  corral_source_split_3198:
    assume {:verifier.code 0} true;
    $i156 := $add.i64($i155, 35);
    call {:si_unique_call 1302} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i156);
    goto corral_source_split_3199;

  corral_source_split_3199:
    assume {:verifier.code 0} true;
    $p157 := $i2p.i64.ref($i156);
    goto corral_source_split_3200;

  corral_source_split_3200:
    assume {:verifier.code 0} true;
    $i158 := $load.i8($M.1, $p157);
    call {:si_unique_call 1303} {:cexpr "__cil_tmp88"} boogie_si_record_i8($i158);
    goto corral_source_split_3201;

  corral_source_split_3201:
    assume {:verifier.code 0} true;
    $i159 := $zext.i8.i64($i158);
    call {:si_unique_call 1304} {:cexpr "__cil_tmp89"} boogie_si_record_i64($i159);
    goto corral_source_split_3202;

  corral_source_split_3202:
    assume {:verifier.code 0} true;
    $i160 := $and.i64($i159, 1);
    call {:si_unique_call 1305} {:cexpr "__cil_tmp90"} boogie_si_record_i64($i160);
    goto corral_source_split_3203;

  corral_source_split_3203:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1306} $i161 := __builtinx_expect.i64.i64($i160, 0);
    goto corral_source_split_3204;

  corral_source_split_3204:
    assume {:verifier.code 0} true;
    $i162 := $sext.i32.i64($i161);
    call {:si_unique_call 1307} {:cexpr "tmp___3"} boogie_si_record_i64($i162);
    goto corral_source_split_3205;

  corral_source_split_3205:
    assume {:verifier.code 0} true;
    $i163 := $ne.i64($i162, 0);
    goto corral_source_split_3206;

  corral_source_split_3206:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i163 == 1);
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $p165 := $bitcast.ref.ref($p6);
    goto corral_source_split_3211;

  corral_source_split_3211:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p165, .str);
    goto corral_source_split_3212;

  corral_source_split_3212:
    assume {:verifier.code 0} true;
    $i166 := $p2i.ref.i64($p6);
    goto corral_source_split_3213;

  corral_source_split_3213:
    assume {:verifier.code 0} true;
    $i167 := $add.i64($i166, 8);
    call {:si_unique_call 1309} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i167);
    goto corral_source_split_3214;

  corral_source_split_3214:
    assume {:verifier.code 0} true;
    $p168 := $i2p.i64.ref($i167);
    goto corral_source_split_3215;

  corral_source_split_3215:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p168, .str.5);
    goto corral_source_split_3216;

  corral_source_split_3216:
    assume {:verifier.code 0} true;
    $i169 := $p2i.ref.i64($p6);
    goto corral_source_split_3217;

  corral_source_split_3217:
    assume {:verifier.code 0} true;
    $i170 := $add.i64($i169, 16);
    call {:si_unique_call 1310} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i170);
    goto corral_source_split_3218;

  corral_source_split_3218:
    assume {:verifier.code 0} true;
    $p171 := $i2p.i64.ref($i170);
    goto corral_source_split_3219;

  corral_source_split_3219:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p171, .str.2);
    goto corral_source_split_3220;

  corral_source_split_3220:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p6);
    goto corral_source_split_3221;

  corral_source_split_3221:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 24);
    call {:si_unique_call 1311} {:cexpr "__cil_tmp94"} boogie_si_record_i64($i173);
    goto corral_source_split_3222;

  corral_source_split_3222:
    assume {:verifier.code 0} true;
    $p174 := $i2p.i64.ref($i173);
    goto corral_source_split_3223;

  corral_source_split_3223:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p174, .str.11);
    goto corral_source_split_3224;

  corral_source_split_3224:
    assume {:verifier.code 0} true;
    $i175 := $p2i.ref.i64($p6);
    goto corral_source_split_3225;

  corral_source_split_3225:
    assume {:verifier.code 0} true;
    $i176 := $add.i64($i175, 32);
    call {:si_unique_call 1312} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i176);
    goto corral_source_split_3226;

  corral_source_split_3226:
    assume {:verifier.code 0} true;
    $p177 := $i2p.i64.ref($i176);
    goto corral_source_split_3227;

  corral_source_split_3227:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p177, 498);
    goto corral_source_split_3228;

  corral_source_split_3228:
    assume {:verifier.code 0} true;
    $i178 := $p2i.ref.i64($p6);
    goto corral_source_split_3229;

  corral_source_split_3229:
    assume {:verifier.code 0} true;
    $i179 := $add.i64($i178, 35);
    call {:si_unique_call 1313} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i179);
    goto corral_source_split_3230;

  corral_source_split_3230:
    assume {:verifier.code 0} true;
    $p180 := $i2p.i64.ref($i179);
    goto corral_source_split_3231;

  corral_source_split_3231:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p180, 0);
    goto corral_source_split_3232;

  corral_source_split_3232:
    assume {:verifier.code 0} true;
    $i181 := $p2i.ref.i64($p6);
    goto corral_source_split_3233;

  corral_source_split_3233:
    assume {:verifier.code 0} true;
    $i182 := $add.i64($i181, 35);
    call {:si_unique_call 1314} {:cexpr "__cil_tmp97"} boogie_si_record_i64($i182);
    goto corral_source_split_3234;

  corral_source_split_3234:
    assume {:verifier.code 0} true;
    $p183 := $i2p.i64.ref($i182);
    goto corral_source_split_3235;

  corral_source_split_3235:
    assume {:verifier.code 0} true;
    $i184 := $load.i8($M.1, $p183);
    call {:si_unique_call 1315} {:cexpr "__cil_tmp98"} boogie_si_record_i8($i184);
    goto corral_source_split_3236;

  corral_source_split_3236:
    assume {:verifier.code 0} true;
    $i185 := $zext.i8.i64($i184);
    call {:si_unique_call 1316} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i185);
    goto corral_source_split_3237;

  corral_source_split_3237:
    assume {:verifier.code 0} true;
    $i186 := $and.i64($i185, 1);
    call {:si_unique_call 1317} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i186);
    goto corral_source_split_3238;

  corral_source_split_3238:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1318} $i187 := __builtinx_expect.i64.i64($i186, 0);
    goto corral_source_split_3239;

  corral_source_split_3239:
    assume {:verifier.code 0} true;
    $i188 := $sext.i32.i64($i187);
    call {:si_unique_call 1319} {:cexpr "tmp___4"} boogie_si_record_i64($i188);
    goto corral_source_split_3240;

  corral_source_split_3240:
    assume {:verifier.code 0} true;
    $i189 := $ne.i64($i188, 0);
    goto corral_source_split_3241;

  corral_source_split_3241:
    assume {:verifier.code 0} true;
    assume {:branchcond $i189} true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i189 == 1);
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i205 := $p2i.ref.i64($p0);
    call {:si_unique_call 1332} {:cexpr "__cil_tmp141"} boogie_si_record_i64($i205);
    goto corral_source_split_3260;

  corral_source_split_3260:
    assume {:verifier.code 0} true;
    $i206 := $add.i64($i205, 520);
    call {:si_unique_call 1333} {:cexpr "__cil_tmp142"} boogie_si_record_i64($i206);
    goto corral_source_split_3261;

  corral_source_split_3261:
    assume {:verifier.code 0} true;
    $p207 := $i2p.i64.ref($i206);
    goto corral_source_split_3262;

  corral_source_split_3262:
    assume {:verifier.code 0} true;
    $i208 := 0;
    goto $bb30;

  $bb30:
    call $i209, $i210, $p211, $i212, $i213, $p214, $i215, $i216, $p217, $i218, $i219, $p220, $i221, $i222, $p223, $i224, $i225, $p226, $i227, $i228, $p229, $i230, $i231, $i232, $i233, $i234, $i235, $p237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $p246, $i247, $i248, $p249, $i250, $i251, $p252, $i253, $i254, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $p265, $p266, $p267, $i268, $i269, $i271, $i272, $i273, $i274, $i208, vslice_dummy_var_82, vslice_dummy_var_83 := INFTL_dumptables_loop_$bb30($p0, $p7, $p8, $p207, $i209, $i210, $p211, $i212, $i213, $p214, $i215, $i216, $p217, $i218, $i219, $p220, $i221, $i222, $p223, $i224, $i225, $p226, $i227, $i228, $p229, $i230, $i231, $i232, $i233, $i234, $i235, $p237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $p246, $i247, $i248, $p249, $i250, $i251, $p252, $i253, $i254, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $p265, $p266, $p267, $i268, $i269, $i271, $i272, $i273, $i274, $i208, vslice_dummy_var_82, vslice_dummy_var_83);
    goto $bb30_last;

  corral_source_split_3264:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i209 := $and.i32($i208, 7);
    call {:si_unique_call 1334} {:cexpr "__cil_tmp113"} boogie_si_record_i32($i209);
    goto corral_source_split_3266;

  corral_source_split_3266:
    assume {:verifier.code 0} true;
    $i210 := $eq.i32($i209, 0);
    goto corral_source_split_3267;

  corral_source_split_3267:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i210 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $p237 := $bitcast.ref.ref($p8);
    goto corral_source_split_3305;

  corral_source_split_3305:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p237, .str);
    goto corral_source_split_3306;

  corral_source_split_3306:
    assume {:verifier.code 0} true;
    $i238 := $p2i.ref.i64($p8);
    goto corral_source_split_3307;

  corral_source_split_3307:
    assume {:verifier.code 0} true;
    $i239 := $add.i64($i238, 8);
    call {:si_unique_call 1347} {:cexpr "__cil_tmp125"} boogie_si_record_i64($i239);
    goto corral_source_split_3308;

  corral_source_split_3308:
    assume {:verifier.code 0} true;
    $p240 := $i2p.i64.ref($i239);
    goto corral_source_split_3309;

  corral_source_split_3309:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p240, .str.5);
    goto corral_source_split_3310;

  corral_source_split_3310:
    assume {:verifier.code 0} true;
    $i241 := $p2i.ref.i64($p8);
    goto corral_source_split_3311;

  corral_source_split_3311:
    assume {:verifier.code 0} true;
    $i242 := $add.i64($i241, 16);
    call {:si_unique_call 1348} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i242);
    goto corral_source_split_3312;

  corral_source_split_3312:
    assume {:verifier.code 0} true;
    $p243 := $i2p.i64.ref($i242);
    goto corral_source_split_3313;

  corral_source_split_3313:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p243, .str.2);
    goto corral_source_split_3314;

  corral_source_split_3314:
    assume {:verifier.code 0} true;
    $i244 := $p2i.ref.i64($p8);
    goto corral_source_split_3315;

  corral_source_split_3315:
    assume {:verifier.code 0} true;
    $i245 := $add.i64($i244, 24);
    call {:si_unique_call 1349} {:cexpr "__cil_tmp127"} boogie_si_record_i64($i245);
    goto corral_source_split_3316;

  corral_source_split_3316:
    assume {:verifier.code 0} true;
    $p246 := $i2p.i64.ref($i245);
    goto corral_source_split_3317;

  corral_source_split_3317:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p246, .str.9);
    goto corral_source_split_3318;

  corral_source_split_3318:
    assume {:verifier.code 0} true;
    $i247 := $p2i.ref.i64($p8);
    goto corral_source_split_3319;

  corral_source_split_3319:
    assume {:verifier.code 0} true;
    $i248 := $add.i64($i247, 32);
    call {:si_unique_call 1350} {:cexpr "__cil_tmp128"} boogie_si_record_i64($i248);
    goto corral_source_split_3320;

  corral_source_split_3320:
    assume {:verifier.code 0} true;
    $p249 := $i2p.i64.ref($i248);
    goto corral_source_split_3321;

  corral_source_split_3321:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p249, 502);
    goto corral_source_split_3322;

  corral_source_split_3322:
    assume {:verifier.code 0} true;
    $i250 := $p2i.ref.i64($p8);
    goto corral_source_split_3323;

  corral_source_split_3323:
    assume {:verifier.code 0} true;
    $i251 := $add.i64($i250, 35);
    call {:si_unique_call 1351} {:cexpr "__cil_tmp129"} boogie_si_record_i64($i251);
    goto corral_source_split_3324;

  corral_source_split_3324:
    assume {:verifier.code 0} true;
    $p252 := $i2p.i64.ref($i251);
    goto corral_source_split_3325;

  corral_source_split_3325:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p252, 0);
    goto corral_source_split_3326;

  corral_source_split_3326:
    assume {:verifier.code 0} true;
    $i253 := $p2i.ref.i64($p8);
    goto corral_source_split_3327;

  corral_source_split_3327:
    assume {:verifier.code 0} true;
    $i254 := $add.i64($i253, 35);
    call {:si_unique_call 1352} {:cexpr "__cil_tmp130"} boogie_si_record_i64($i254);
    goto corral_source_split_3328;

  corral_source_split_3328:
    assume {:verifier.code 0} true;
    $p255 := $i2p.i64.ref($i254);
    goto corral_source_split_3329;

  corral_source_split_3329:
    assume {:verifier.code 0} true;
    $i256 := $load.i8($M.1, $p255);
    call {:si_unique_call 1353} {:cexpr "__cil_tmp131"} boogie_si_record_i8($i256);
    goto corral_source_split_3330;

  corral_source_split_3330:
    assume {:verifier.code 0} true;
    $i257 := $zext.i8.i64($i256);
    call {:si_unique_call 1354} {:cexpr "__cil_tmp132"} boogie_si_record_i64($i257);
    goto corral_source_split_3331;

  corral_source_split_3331:
    assume {:verifier.code 0} true;
    $i258 := $and.i64($i257, 1);
    call {:si_unique_call 1355} {:cexpr "__cil_tmp133"} boogie_si_record_i64($i258);
    goto corral_source_split_3332;

  corral_source_split_3332:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1356} $i259 := __builtinx_expect.i64.i64($i258, 0);
    goto corral_source_split_3333;

  corral_source_split_3333:
    assume {:verifier.code 0} true;
    $i260 := $sext.i32.i64($i259);
    call {:si_unique_call 1357} {:cexpr "tmp___6"} boogie_si_record_i64($i260);
    goto corral_source_split_3334;

  corral_source_split_3334:
    assume {:verifier.code 0} true;
    $i261 := $ne.i64($i260, 0);
    goto corral_source_split_3335;

  corral_source_split_3335:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i261 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i271 := $add.i32($i208, 1);
    call {:si_unique_call 1364} {:cexpr "i"} boogie_si_record_i32($i271);
    goto corral_source_split_3348;

  corral_source_split_3348:
    assume {:verifier.code 0} true;
    $i272 := $load.i16($M.1, $p207);
    call {:si_unique_call 1365} {:cexpr "__cil_tmp143"} boogie_si_record_i16($i272);
    goto corral_source_split_3349;

  corral_source_split_3349:
    assume {:verifier.code 0} true;
    $i273 := $zext.i16.i32($i272);
    call {:si_unique_call 1366} {:cexpr "__cil_tmp144"} boogie_si_record_i32($i273);
    goto corral_source_split_3350;

  corral_source_split_3350:
    assume {:verifier.code 0} true;
    $i274 := $sge.i32($i273, $i271);
    goto corral_source_split_3351;

  corral_source_split_3351:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i274 == 1);
    goto corral_source_split_3353;

  corral_source_split_3353:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $p275 := $bitcast.ref.ref($p9);
    goto corral_source_split_3355;

  corral_source_split_3355:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p275, .str);
    goto corral_source_split_3356;

  corral_source_split_3356:
    assume {:verifier.code 0} true;
    $i276 := $p2i.ref.i64($p9);
    goto corral_source_split_3357;

  corral_source_split_3357:
    assume {:verifier.code 0} true;
    $i277 := $add.i64($i276, 8);
    call {:si_unique_call 1367} {:cexpr "__cil_tmp146"} boogie_si_record_i64($i277);
    goto corral_source_split_3358;

  corral_source_split_3358:
    assume {:verifier.code 0} true;
    $p278 := $i2p.i64.ref($i277);
    goto corral_source_split_3359;

  corral_source_split_3359:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p278, .str.5);
    goto corral_source_split_3360;

  corral_source_split_3360:
    assume {:verifier.code 0} true;
    $i279 := $p2i.ref.i64($p9);
    goto corral_source_split_3361;

  corral_source_split_3361:
    assume {:verifier.code 0} true;
    $i280 := $add.i64($i279, 16);
    call {:si_unique_call 1368} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i280);
    goto corral_source_split_3362;

  corral_source_split_3362:
    assume {:verifier.code 0} true;
    $p281 := $i2p.i64.ref($i280);
    goto corral_source_split_3363;

  corral_source_split_3363:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p281, .str.2);
    goto corral_source_split_3364;

  corral_source_split_3364:
    assume {:verifier.code 0} true;
    $i282 := $p2i.ref.i64($p9);
    goto corral_source_split_3365;

  corral_source_split_3365:
    assume {:verifier.code 0} true;
    $i283 := $add.i64($i282, 24);
    call {:si_unique_call 1369} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i283);
    goto corral_source_split_3366;

  corral_source_split_3366:
    assume {:verifier.code 0} true;
    $p284 := $i2p.i64.ref($i283);
    goto corral_source_split_3367;

  corral_source_split_3367:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p284, .str.10);
    goto corral_source_split_3368;

  corral_source_split_3368:
    assume {:verifier.code 0} true;
    $i285 := $p2i.ref.i64($p9);
    goto corral_source_split_3369;

  corral_source_split_3369:
    assume {:verifier.code 0} true;
    $i286 := $add.i64($i285, 32);
    call {:si_unique_call 1370} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i286);
    goto corral_source_split_3370;

  corral_source_split_3370:
    assume {:verifier.code 0} true;
    $p287 := $i2p.i64.ref($i286);
    goto corral_source_split_3371;

  corral_source_split_3371:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p287, 506);
    goto corral_source_split_3372;

  corral_source_split_3372:
    assume {:verifier.code 0} true;
    $i288 := $p2i.ref.i64($p9);
    goto corral_source_split_3373;

  corral_source_split_3373:
    assume {:verifier.code 0} true;
    $i289 := $add.i64($i288, 35);
    call {:si_unique_call 1371} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i289);
    goto corral_source_split_3374;

  corral_source_split_3374:
    assume {:verifier.code 0} true;
    $p290 := $i2p.i64.ref($i289);
    goto corral_source_split_3375;

  corral_source_split_3375:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p290, 0);
    goto corral_source_split_3376;

  corral_source_split_3376:
    assume {:verifier.code 0} true;
    $i291 := $p2i.ref.i64($p9);
    goto corral_source_split_3377;

  corral_source_split_3377:
    assume {:verifier.code 0} true;
    $i292 := $add.i64($i291, 35);
    call {:si_unique_call 1372} {:cexpr "__cil_tmp151"} boogie_si_record_i64($i292);
    goto corral_source_split_3378;

  corral_source_split_3378:
    assume {:verifier.code 0} true;
    $p293 := $i2p.i64.ref($i292);
    goto corral_source_split_3379;

  corral_source_split_3379:
    assume {:verifier.code 0} true;
    $i294 := $load.i8($M.1, $p293);
    call {:si_unique_call 1373} {:cexpr "__cil_tmp152"} boogie_si_record_i8($i294);
    goto corral_source_split_3380;

  corral_source_split_3380:
    assume {:verifier.code 0} true;
    $i295 := $zext.i8.i64($i294);
    call {:si_unique_call 1374} {:cexpr "__cil_tmp153"} boogie_si_record_i64($i295);
    goto corral_source_split_3381;

  corral_source_split_3381:
    assume {:verifier.code 0} true;
    $i296 := $and.i64($i295, 1);
    call {:si_unique_call 1375} {:cexpr "__cil_tmp154"} boogie_si_record_i64($i296);
    goto corral_source_split_3382;

  corral_source_split_3382:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1376} $i297 := __builtinx_expect.i64.i64($i296, 0);
    goto corral_source_split_3383;

  corral_source_split_3383:
    assume {:verifier.code 0} true;
    $i298 := $sext.i32.i64($i297);
    call {:si_unique_call 1377} {:cexpr "tmp___7"} boogie_si_record_i64($i298);
    goto corral_source_split_3384;

  corral_source_split_3384:
    assume {:verifier.code 0} true;
    $i299 := $ne.i64($i298, 0);
    goto corral_source_split_3385;

  corral_source_split_3385:
    assume {:verifier.code 0} true;
    assume {:branchcond $i299} true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i299 == 1);
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    $p301 := $bitcast.ref.ref($p10);
    goto corral_source_split_3390;

  corral_source_split_3390:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p301, .str);
    goto corral_source_split_3391;

  corral_source_split_3391:
    assume {:verifier.code 0} true;
    $i302 := $p2i.ref.i64($p10);
    goto corral_source_split_3392;

  corral_source_split_3392:
    assume {:verifier.code 0} true;
    $i303 := $add.i64($i302, 8);
    call {:si_unique_call 1379} {:cexpr "__cil_tmp156"} boogie_si_record_i64($i303);
    goto corral_source_split_3393;

  corral_source_split_3393:
    assume {:verifier.code 0} true;
    $p304 := $i2p.i64.ref($i303);
    goto corral_source_split_3394;

  corral_source_split_3394:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p304, .str.5);
    goto corral_source_split_3395;

  corral_source_split_3395:
    assume {:verifier.code 0} true;
    $i305 := $p2i.ref.i64($p10);
    goto corral_source_split_3396;

  corral_source_split_3396:
    assume {:verifier.code 0} true;
    $i306 := $add.i64($i305, 16);
    call {:si_unique_call 1380} {:cexpr "__cil_tmp157"} boogie_si_record_i64($i306);
    goto corral_source_split_3397;

  corral_source_split_3397:
    assume {:verifier.code 0} true;
    $p307 := $i2p.i64.ref($i306);
    goto corral_source_split_3398;

  corral_source_split_3398:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p307, .str.2);
    goto corral_source_split_3399;

  corral_source_split_3399:
    assume {:verifier.code 0} true;
    $i308 := $p2i.ref.i64($p10);
    goto corral_source_split_3400;

  corral_source_split_3400:
    assume {:verifier.code 0} true;
    $i309 := $add.i64($i308, 24);
    call {:si_unique_call 1381} {:cexpr "__cil_tmp158"} boogie_si_record_i64($i309);
    goto corral_source_split_3401;

  corral_source_split_3401:
    assume {:verifier.code 0} true;
    $p310 := $i2p.i64.ref($i309);
    goto corral_source_split_3402;

  corral_source_split_3402:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p310, .str.12);
    goto corral_source_split_3403;

  corral_source_split_3403:
    assume {:verifier.code 0} true;
    $i311 := $p2i.ref.i64($p10);
    goto corral_source_split_3404;

  corral_source_split_3404:
    assume {:verifier.code 0} true;
    $i312 := $add.i64($i311, 32);
    call {:si_unique_call 1382} {:cexpr "__cil_tmp159"} boogie_si_record_i64($i312);
    goto corral_source_split_3405;

  corral_source_split_3405:
    assume {:verifier.code 0} true;
    $p313 := $i2p.i64.ref($i312);
    goto corral_source_split_3406;

  corral_source_split_3406:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p313, 520);
    goto corral_source_split_3407;

  corral_source_split_3407:
    assume {:verifier.code 0} true;
    $i314 := $p2i.ref.i64($p10);
    goto corral_source_split_3408;

  corral_source_split_3408:
    assume {:verifier.code 0} true;
    $i315 := $add.i64($i314, 35);
    call {:si_unique_call 1383} {:cexpr "__cil_tmp160"} boogie_si_record_i64($i315);
    goto corral_source_split_3409;

  corral_source_split_3409:
    assume {:verifier.code 0} true;
    $p316 := $i2p.i64.ref($i315);
    goto corral_source_split_3410;

  corral_source_split_3410:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p316, 0);
    goto corral_source_split_3411;

  corral_source_split_3411:
    assume {:verifier.code 0} true;
    $i317 := $p2i.ref.i64($p10);
    goto corral_source_split_3412;

  corral_source_split_3412:
    assume {:verifier.code 0} true;
    $i318 := $add.i64($i317, 35);
    call {:si_unique_call 1384} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i318);
    goto corral_source_split_3413;

  corral_source_split_3413:
    assume {:verifier.code 0} true;
    $p319 := $i2p.i64.ref($i318);
    goto corral_source_split_3414;

  corral_source_split_3414:
    assume {:verifier.code 0} true;
    $i320 := $load.i8($M.1, $p319);
    call {:si_unique_call 1385} {:cexpr "__cil_tmp162"} boogie_si_record_i8($i320);
    goto corral_source_split_3415;

  corral_source_split_3415:
    assume {:verifier.code 0} true;
    $i321 := $zext.i8.i64($i320);
    call {:si_unique_call 1386} {:cexpr "__cil_tmp163"} boogie_si_record_i64($i321);
    goto corral_source_split_3416;

  corral_source_split_3416:
    assume {:verifier.code 0} true;
    $i322 := $and.i64($i321, 1);
    call {:si_unique_call 1387} {:cexpr "__cil_tmp164"} boogie_si_record_i64($i322);
    goto corral_source_split_3417;

  corral_source_split_3417:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1388} $i323 := __builtinx_expect.i64.i64($i322, 0);
    goto corral_source_split_3418;

  corral_source_split_3418:
    assume {:verifier.code 0} true;
    $i324 := $sext.i32.i64($i323);
    call {:si_unique_call 1389} {:cexpr "tmp___8"} boogie_si_record_i64($i324);
    goto corral_source_split_3419;

  corral_source_split_3419:
    assume {:verifier.code 0} true;
    $i325 := $ne.i64($i324, 0);
    goto corral_source_split_3420;

  corral_source_split_3420:
    assume {:verifier.code 0} true;
    assume {:branchcond $i325} true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i325 == 1);
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    $p379 := $bitcast.ref.ref($p11);
    goto corral_source_split_3477;

  corral_source_split_3477:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p379, .str);
    goto corral_source_split_3478;

  corral_source_split_3478:
    assume {:verifier.code 0} true;
    $i380 := $p2i.ref.i64($p11);
    goto corral_source_split_3479;

  corral_source_split_3479:
    assume {:verifier.code 0} true;
    $i381 := $add.i64($i380, 8);
    call {:si_unique_call 1432} {:cexpr "__cil_tmp207"} boogie_si_record_i64($i381);
    goto corral_source_split_3480;

  corral_source_split_3480:
    assume {:verifier.code 0} true;
    $p382 := $i2p.i64.ref($i381);
    goto corral_source_split_3481;

  corral_source_split_3481:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p382, .str.5);
    goto corral_source_split_3482;

  corral_source_split_3482:
    assume {:verifier.code 0} true;
    $i383 := $p2i.ref.i64($p11);
    goto corral_source_split_3483;

  corral_source_split_3483:
    assume {:verifier.code 0} true;
    $i384 := $add.i64($i383, 16);
    call {:si_unique_call 1433} {:cexpr "__cil_tmp208"} boogie_si_record_i64($i384);
    goto corral_source_split_3484;

  corral_source_split_3484:
    assume {:verifier.code 0} true;
    $p385 := $i2p.i64.ref($i384);
    goto corral_source_split_3485;

  corral_source_split_3485:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p385, .str.2);
    goto corral_source_split_3486;

  corral_source_split_3486:
    assume {:verifier.code 0} true;
    $i386 := $p2i.ref.i64($p11);
    goto corral_source_split_3487;

  corral_source_split_3487:
    assume {:verifier.code 0} true;
    $i387 := $add.i64($i386, 24);
    call {:si_unique_call 1434} {:cexpr "__cil_tmp209"} boogie_si_record_i64($i387);
    goto corral_source_split_3488;

  corral_source_split_3488:
    assume {:verifier.code 0} true;
    $p388 := $i2p.i64.ref($i387);
    goto corral_source_split_3489;

  corral_source_split_3489:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p388, .str.10);
    goto corral_source_split_3490;

  corral_source_split_3490:
    assume {:verifier.code 0} true;
    $i389 := $p2i.ref.i64($p11);
    goto corral_source_split_3491;

  corral_source_split_3491:
    assume {:verifier.code 0} true;
    $i390 := $add.i64($i389, 32);
    call {:si_unique_call 1435} {:cexpr "__cil_tmp210"} boogie_si_record_i64($i390);
    goto corral_source_split_3492;

  corral_source_split_3492:
    assume {:verifier.code 0} true;
    $p391 := $i2p.i64.ref($i390);
    goto corral_source_split_3493;

  corral_source_split_3493:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p391, 523);
    goto corral_source_split_3494;

  corral_source_split_3494:
    assume {:verifier.code 0} true;
    $i392 := $p2i.ref.i64($p11);
    goto corral_source_split_3495;

  corral_source_split_3495:
    assume {:verifier.code 0} true;
    $i393 := $add.i64($i392, 35);
    call {:si_unique_call 1436} {:cexpr "__cil_tmp211"} boogie_si_record_i64($i393);
    goto corral_source_split_3496;

  corral_source_split_3496:
    assume {:verifier.code 0} true;
    $p394 := $i2p.i64.ref($i393);
    goto corral_source_split_3497;

  corral_source_split_3497:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p394, 0);
    goto corral_source_split_3498;

  corral_source_split_3498:
    assume {:verifier.code 0} true;
    $i395 := $p2i.ref.i64($p11);
    goto corral_source_split_3499;

  corral_source_split_3499:
    assume {:verifier.code 0} true;
    $i396 := $add.i64($i395, 35);
    call {:si_unique_call 1437} {:cexpr "__cil_tmp212"} boogie_si_record_i64($i396);
    goto corral_source_split_3500;

  corral_source_split_3500:
    assume {:verifier.code 0} true;
    $p397 := $i2p.i64.ref($i396);
    goto corral_source_split_3501;

  corral_source_split_3501:
    assume {:verifier.code 0} true;
    $i398 := $load.i8($M.1, $p397);
    call {:si_unique_call 1438} {:cexpr "__cil_tmp213"} boogie_si_record_i8($i398);
    goto corral_source_split_3502;

  corral_source_split_3502:
    assume {:verifier.code 0} true;
    $i399 := $zext.i8.i64($i398);
    call {:si_unique_call 1439} {:cexpr "__cil_tmp214"} boogie_si_record_i64($i399);
    goto corral_source_split_3503;

  corral_source_split_3503:
    assume {:verifier.code 0} true;
    $i400 := $and.i64($i399, 1);
    call {:si_unique_call 1440} {:cexpr "__cil_tmp215"} boogie_si_record_i64($i400);
    goto corral_source_split_3504;

  corral_source_split_3504:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1441} $i401 := __builtinx_expect.i64.i64($i400, 0);
    goto corral_source_split_3505;

  corral_source_split_3505:
    assume {:verifier.code 0} true;
    $i402 := $sext.i32.i64($i401);
    call {:si_unique_call 1442} {:cexpr "tmp___9"} boogie_si_record_i64($i402);
    goto corral_source_split_3506;

  corral_source_split_3506:
    assume {:verifier.code 0} true;
    $i403 := $ne.i64($i402, 0);
    goto corral_source_split_3507;

  corral_source_split_3507:
    assume {:verifier.code 0} true;
    assume {:branchcond $i403} true;
    goto $bb50, $bb51;

  $bb51:
    assume !($i403 == 1);
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    return;

  $bb50:
    assume $i403 == 1;
    goto corral_source_split_3509;

  corral_source_split_3509:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1443} vslice_dummy_var_86 := __dynamic_pr_debug.ref.ref($p11, .str.10);
    goto corral_source_split_3510;

  corral_source_split_3510:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb47:
    assume $i325 == 1;
    goto corral_source_split_3422;

  corral_source_split_3422:
    assume {:verifier.code 0} true;
    $i326 := $p2i.ref.i64($p0);
    call {:si_unique_call 1390} {:cexpr "__cil_tmp165"} boogie_si_record_i64($i326);
    goto corral_source_split_3423;

  corral_source_split_3423:
    assume {:verifier.code 0} true;
    $i327 := $add.i64($i326, 356);
    call {:si_unique_call 1391} {:cexpr "__cil_tmp166"} boogie_si_record_i64($i327);
    goto corral_source_split_3424;

  corral_source_split_3424:
    assume {:verifier.code 0} true;
    $p328 := $i2p.i64.ref($i327);
    goto corral_source_split_3425;

  corral_source_split_3425:
    assume {:verifier.code 0} true;
    $i329 := $load.i32($M.1, $p328);
    call {:si_unique_call 1392} {:cexpr "__cil_tmp167"} boogie_si_record_i32($i329);
    goto corral_source_split_3426;

  corral_source_split_3426:
    assume {:verifier.code 0} true;
    $i330 := $p2i.ref.i64($p0);
    call {:si_unique_call 1393} {:cexpr "__cil_tmp168"} boogie_si_record_i64($i330);
    goto corral_source_split_3427;

  corral_source_split_3427:
    assume {:verifier.code 0} true;
    $i331 := $add.i64($i330, 512);
    call {:si_unique_call 1394} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i331);
    goto corral_source_split_3428;

  corral_source_split_3428:
    assume {:verifier.code 0} true;
    $p332 := $i2p.i64.ref($i331);
    goto corral_source_split_3429;

  corral_source_split_3429:
    assume {:verifier.code 0} true;
    $i333 := $load.i8($M.1, $p332);
    call {:si_unique_call 1395} {:cexpr "__cil_tmp170"} boogie_si_record_i8($i333);
    goto corral_source_split_3430;

  corral_source_split_3430:
    assume {:verifier.code 0} true;
    $i334 := $zext.i8.i32($i333);
    call {:si_unique_call 1396} {:cexpr "__cil_tmp171"} boogie_si_record_i32($i334);
    goto corral_source_split_3431;

  corral_source_split_3431:
    assume {:verifier.code 0} true;
    $i335 := $p2i.ref.i64($p0);
    call {:si_unique_call 1397} {:cexpr "__cil_tmp172"} boogie_si_record_i64($i335);
    goto corral_source_split_3432;

  corral_source_split_3432:
    assume {:verifier.code 0} true;
    $i336 := $add.i64($i335, 513);
    call {:si_unique_call 1398} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i336);
    goto corral_source_split_3433;

  corral_source_split_3433:
    assume {:verifier.code 0} true;
    $p337 := $i2p.i64.ref($i336);
    goto corral_source_split_3434;

  corral_source_split_3434:
    assume {:verifier.code 0} true;
    $i338 := $load.i8($M.1, $p337);
    call {:si_unique_call 1399} {:cexpr "__cil_tmp174"} boogie_si_record_i8($i338);
    goto corral_source_split_3435;

  corral_source_split_3435:
    assume {:verifier.code 0} true;
    $i339 := $zext.i8.i32($i338);
    call {:si_unique_call 1400} {:cexpr "__cil_tmp175"} boogie_si_record_i32($i339);
    goto corral_source_split_3436;

  corral_source_split_3436:
    assume {:verifier.code 0} true;
    $i340 := $p2i.ref.i64($p0);
    call {:si_unique_call 1401} {:cexpr "__cil_tmp176"} boogie_si_record_i64($i340);
    goto corral_source_split_3437;

  corral_source_split_3437:
    assume {:verifier.code 0} true;
    $i341 := $add.i64($i340, 514);
    call {:si_unique_call 1402} {:cexpr "__cil_tmp177"} boogie_si_record_i64($i341);
    goto corral_source_split_3438;

  corral_source_split_3438:
    assume {:verifier.code 0} true;
    $p342 := $i2p.i64.ref($i341);
    goto corral_source_split_3439;

  corral_source_split_3439:
    assume {:verifier.code 0} true;
    $i343 := $load.i16($M.1, $p342);
    call {:si_unique_call 1403} {:cexpr "__cil_tmp178"} boogie_si_record_i16($i343);
    goto corral_source_split_3440;

  corral_source_split_3440:
    assume {:verifier.code 0} true;
    $i344 := $zext.i16.i32($i343);
    call {:si_unique_call 1404} {:cexpr "__cil_tmp179"} boogie_si_record_i32($i344);
    goto corral_source_split_3441;

  corral_source_split_3441:
    assume {:verifier.code 0} true;
    $i345 := $p2i.ref.i64($p0);
    call {:si_unique_call 1405} {:cexpr "__cil_tmp180"} boogie_si_record_i64($i345);
    goto corral_source_split_3442;

  corral_source_split_3442:
    assume {:verifier.code 0} true;
    $i346 := $add.i64($i345, 516);
    call {:si_unique_call 1406} {:cexpr "__cil_tmp181"} boogie_si_record_i64($i346);
    goto corral_source_split_3443;

  corral_source_split_3443:
    assume {:verifier.code 0} true;
    $p347 := $i2p.i64.ref($i346);
    goto corral_source_split_3444;

  corral_source_split_3444:
    assume {:verifier.code 0} true;
    $i348 := $load.i16($M.1, $p347);
    call {:si_unique_call 1407} {:cexpr "__cil_tmp182"} boogie_si_record_i16($i348);
    goto corral_source_split_3445;

  corral_source_split_3445:
    assume {:verifier.code 0} true;
    $i349 := $zext.i16.i32($i348);
    call {:si_unique_call 1408} {:cexpr "__cil_tmp183"} boogie_si_record_i32($i349);
    goto corral_source_split_3446;

  corral_source_split_3446:
    assume {:verifier.code 0} true;
    $i350 := $p2i.ref.i64($p0);
    call {:si_unique_call 1409} {:cexpr "__cil_tmp184"} boogie_si_record_i64($i350);
    goto corral_source_split_3447;

  corral_source_split_3447:
    assume {:verifier.code 0} true;
    $i351 := $add.i64($i350, 518);
    call {:si_unique_call 1410} {:cexpr "__cil_tmp185"} boogie_si_record_i64($i351);
    goto corral_source_split_3448;

  corral_source_split_3448:
    assume {:verifier.code 0} true;
    $p352 := $i2p.i64.ref($i351);
    goto corral_source_split_3449;

  corral_source_split_3449:
    assume {:verifier.code 0} true;
    $i353 := $load.i16($M.1, $p352);
    call {:si_unique_call 1411} {:cexpr "__cil_tmp186"} boogie_si_record_i16($i353);
    goto corral_source_split_3450;

  corral_source_split_3450:
    assume {:verifier.code 0} true;
    $i354 := $zext.i16.i32($i353);
    call {:si_unique_call 1412} {:cexpr "__cil_tmp187"} boogie_si_record_i32($i354);
    goto corral_source_split_3451;

  corral_source_split_3451:
    assume {:verifier.code 0} true;
    $i355 := $p2i.ref.i64($p0);
    call {:si_unique_call 1413} {:cexpr "__cil_tmp188"} boogie_si_record_i64($i355);
    goto corral_source_split_3452;

  corral_source_split_3452:
    assume {:verifier.code 0} true;
    $i356 := $add.i64($i355, 520);
    call {:si_unique_call 1414} {:cexpr "__cil_tmp189"} boogie_si_record_i64($i356);
    goto corral_source_split_3453;

  corral_source_split_3453:
    assume {:verifier.code 0} true;
    $p357 := $i2p.i64.ref($i356);
    goto corral_source_split_3454;

  corral_source_split_3454:
    assume {:verifier.code 0} true;
    $i358 := $load.i16($M.1, $p357);
    call {:si_unique_call 1415} {:cexpr "__cil_tmp190"} boogie_si_record_i16($i358);
    goto corral_source_split_3455;

  corral_source_split_3455:
    assume {:verifier.code 0} true;
    $i359 := $zext.i16.i32($i358);
    call {:si_unique_call 1416} {:cexpr "__cil_tmp191"} boogie_si_record_i32($i359);
    goto corral_source_split_3456;

  corral_source_split_3456:
    assume {:verifier.code 0} true;
    $i360 := $p2i.ref.i64($p0);
    call {:si_unique_call 1417} {:cexpr "__cil_tmp192"} boogie_si_record_i64($i360);
    goto corral_source_split_3457;

  corral_source_split_3457:
    assume {:verifier.code 0} true;
    $i361 := $add.i64($i360, 522);
    call {:si_unique_call 1418} {:cexpr "__cil_tmp193"} boogie_si_record_i64($i361);
    goto corral_source_split_3458;

  corral_source_split_3458:
    assume {:verifier.code 0} true;
    $p362 := $i2p.i64.ref($i361);
    goto corral_source_split_3459;

  corral_source_split_3459:
    assume {:verifier.code 0} true;
    $i363 := $load.i16($M.1, $p362);
    call {:si_unique_call 1419} {:cexpr "__cil_tmp194"} boogie_si_record_i16($i363);
    goto corral_source_split_3460;

  corral_source_split_3460:
    assume {:verifier.code 0} true;
    $i364 := $zext.i16.i32($i363);
    call {:si_unique_call 1420} {:cexpr "__cil_tmp195"} boogie_si_record_i32($i364);
    goto corral_source_split_3461;

  corral_source_split_3461:
    assume {:verifier.code 0} true;
    $i365 := $p2i.ref.i64($p0);
    call {:si_unique_call 1421} {:cexpr "__cil_tmp196"} boogie_si_record_i64($i365);
    goto corral_source_split_3462;

  corral_source_split_3462:
    assume {:verifier.code 0} true;
    $i366 := $add.i64($i365, 524);
    call {:si_unique_call 1422} {:cexpr "__cil_tmp197"} boogie_si_record_i64($i366);
    goto corral_source_split_3463;

  corral_source_split_3463:
    assume {:verifier.code 0} true;
    $p367 := $i2p.i64.ref($i366);
    goto corral_source_split_3464;

  corral_source_split_3464:
    assume {:verifier.code 0} true;
    $i368 := $load.i16($M.1, $p367);
    call {:si_unique_call 1423} {:cexpr "__cil_tmp198"} boogie_si_record_i16($i368);
    goto corral_source_split_3465;

  corral_source_split_3465:
    assume {:verifier.code 0} true;
    $i369 := $zext.i16.i32($i368);
    call {:si_unique_call 1424} {:cexpr "__cil_tmp199"} boogie_si_record_i32($i369);
    goto corral_source_split_3466;

  corral_source_split_3466:
    assume {:verifier.code 0} true;
    $i370 := $p2i.ref.i64($p0);
    call {:si_unique_call 1425} {:cexpr "__cil_tmp200"} boogie_si_record_i64($i370);
    goto corral_source_split_3467;

  corral_source_split_3467:
    assume {:verifier.code 0} true;
    $i371 := $add.i64($i370, 560);
    call {:si_unique_call 1426} {:cexpr "__cil_tmp201"} boogie_si_record_i64($i371);
    goto corral_source_split_3468;

  corral_source_split_3468:
    assume {:verifier.code 0} true;
    $p372 := $i2p.i64.ref($i371);
    goto corral_source_split_3469;

  corral_source_split_3469:
    assume {:verifier.code 0} true;
    $i373 := $load.i32($M.1, $p372);
    call {:si_unique_call 1427} {:cexpr "__cil_tmp202"} boogie_si_record_i32($i373);
    goto corral_source_split_3470;

  corral_source_split_3470:
    assume {:verifier.code 0} true;
    $i374 := $p2i.ref.i64($p0);
    call {:si_unique_call 1428} {:cexpr "__cil_tmp203"} boogie_si_record_i64($i374);
    goto corral_source_split_3471;

  corral_source_split_3471:
    assume {:verifier.code 0} true;
    $i375 := $add.i64($i374, 564);
    call {:si_unique_call 1429} {:cexpr "__cil_tmp204"} boogie_si_record_i64($i375);
    goto corral_source_split_3472;

  corral_source_split_3472:
    assume {:verifier.code 0} true;
    $p376 := $i2p.i64.ref($i375);
    goto corral_source_split_3473;

  corral_source_split_3473:
    assume {:verifier.code 0} true;
    $i377 := $load.i32($M.1, $p376);
    call {:si_unique_call 1430} {:cexpr "__cil_tmp205"} boogie_si_record_i32($i377);
    goto corral_source_split_3474;

  corral_source_split_3474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1431} vslice_dummy_var_85 := __dynamic_pr_debug.ref.ref.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32.i32($p10, .str.12, $i329, $i334, $i339, $i344, $i349, $i354, $i359, $i364, $i369, $i373, $i377);
    goto corral_source_split_3475;

  corral_source_split_3475:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb44:
    assume $i299 == 1;
    goto corral_source_split_3387;

  corral_source_split_3387:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1378} vslice_dummy_var_84 := __dynamic_pr_debug.ref.ref($p9, .str.10);
    goto corral_source_split_3388;

  corral_source_split_3388:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb41:
    assume $i274 == 1;
    assume {:verifier.code 0} true;
    $i208 := $i271;
    goto $bb41_dummy;

  $bb38:
    assume $i261 == 1;
    goto corral_source_split_3337;

  corral_source_split_3337:
    assume {:verifier.code 0} true;
    $i262 := $sext.i32.i64($i208);
    call {:si_unique_call 1358} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i262);
    goto corral_source_split_3338;

  corral_source_split_3338:
    assume {:verifier.code 0} true;
    $i263 := $p2i.ref.i64($p0);
    call {:si_unique_call 1359} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i263);
    goto corral_source_split_3339;

  corral_source_split_3339:
    assume {:verifier.code 0} true;
    $i264 := $add.i64($i263, 544);
    call {:si_unique_call 1360} {:cexpr "__cil_tmp136"} boogie_si_record_i64($i264);
    goto corral_source_split_3340;

  corral_source_split_3340:
    assume {:verifier.code 0} true;
    $p265 := $i2p.i64.ref($i264);
    goto corral_source_split_3341;

  corral_source_split_3341:
    assume {:verifier.code 0} true;
    $p266 := $load.ref($M.1, $p265);
    goto corral_source_split_3342;

  corral_source_split_3342:
    assume {:verifier.code 0} true;
    $p267 := $add.ref($p266, $mul.ref($i262, 2));
    goto corral_source_split_3343;

  corral_source_split_3343:
    assume {:verifier.code 0} true;
    $i268 := $load.i16($M.1, $p267);
    call {:si_unique_call 1361} {:cexpr "__cil_tmp139"} boogie_si_record_i16($i268);
    goto corral_source_split_3344;

  corral_source_split_3344:
    assume {:verifier.code 0} true;
    $i269 := $zext.i16.i32($i268);
    call {:si_unique_call 1362} {:cexpr "__cil_tmp140"} boogie_si_record_i32($i269);
    goto corral_source_split_3345;

  corral_source_split_3345:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1363} vslice_dummy_var_83 := __dynamic_pr_debug.ref.ref.i32($p8, .str.9, $i269);
    goto corral_source_split_3346;

  corral_source_split_3346:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb32:
    assume $i210 == 1;
    goto corral_source_split_3269;

  corral_source_split_3269:
    assume {:verifier.code 0} true;
    $p211 := $bitcast.ref.ref($p7);
    goto corral_source_split_3270;

  corral_source_split_3270:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p211, .str);
    goto corral_source_split_3271;

  corral_source_split_3271:
    assume {:verifier.code 0} true;
    $i212 := $p2i.ref.i64($p7);
    goto corral_source_split_3272;

  corral_source_split_3272:
    assume {:verifier.code 0} true;
    $i213 := $add.i64($i212, 8);
    call {:si_unique_call 1335} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i213);
    goto corral_source_split_3273;

  corral_source_split_3273:
    assume {:verifier.code 0} true;
    $p214 := $i2p.i64.ref($i213);
    goto corral_source_split_3274;

  corral_source_split_3274:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p214, .str.5);
    goto corral_source_split_3275;

  corral_source_split_3275:
    assume {:verifier.code 0} true;
    $i215 := $p2i.ref.i64($p7);
    goto corral_source_split_3276;

  corral_source_split_3276:
    assume {:verifier.code 0} true;
    $i216 := $add.i64($i215, 16);
    call {:si_unique_call 1336} {:cexpr "__cil_tmp116"} boogie_si_record_i64($i216);
    goto corral_source_split_3277;

  corral_source_split_3277:
    assume {:verifier.code 0} true;
    $p217 := $i2p.i64.ref($i216);
    goto corral_source_split_3278;

  corral_source_split_3278:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p217, .str.2);
    goto corral_source_split_3279;

  corral_source_split_3279:
    assume {:verifier.code 0} true;
    $i218 := $p2i.ref.i64($p7);
    goto corral_source_split_3280;

  corral_source_split_3280:
    assume {:verifier.code 0} true;
    $i219 := $add.i64($i218, 24);
    call {:si_unique_call 1337} {:cexpr "__cil_tmp117"} boogie_si_record_i64($i219);
    goto corral_source_split_3281;

  corral_source_split_3281:
    assume {:verifier.code 0} true;
    $p220 := $i2p.i64.ref($i219);
    goto corral_source_split_3282;

  corral_source_split_3282:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p220, .str.8);
    goto corral_source_split_3283;

  corral_source_split_3283:
    assume {:verifier.code 0} true;
    $i221 := $p2i.ref.i64($p7);
    goto corral_source_split_3284;

  corral_source_split_3284:
    assume {:verifier.code 0} true;
    $i222 := $add.i64($i221, 32);
    call {:si_unique_call 1338} {:cexpr "__cil_tmp118"} boogie_si_record_i64($i222);
    goto corral_source_split_3285;

  corral_source_split_3285:
    assume {:verifier.code 0} true;
    $p223 := $i2p.i64.ref($i222);
    goto corral_source_split_3286;

  corral_source_split_3286:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p223, 501);
    goto corral_source_split_3287;

  corral_source_split_3287:
    assume {:verifier.code 0} true;
    $i224 := $p2i.ref.i64($p7);
    goto corral_source_split_3288;

  corral_source_split_3288:
    assume {:verifier.code 0} true;
    $i225 := $add.i64($i224, 35);
    call {:si_unique_call 1339} {:cexpr "__cil_tmp119"} boogie_si_record_i64($i225);
    goto corral_source_split_3289;

  corral_source_split_3289:
    assume {:verifier.code 0} true;
    $p226 := $i2p.i64.ref($i225);
    goto corral_source_split_3290;

  corral_source_split_3290:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p226, 0);
    goto corral_source_split_3291;

  corral_source_split_3291:
    assume {:verifier.code 0} true;
    $i227 := $p2i.ref.i64($p7);
    goto corral_source_split_3292;

  corral_source_split_3292:
    assume {:verifier.code 0} true;
    $i228 := $add.i64($i227, 35);
    call {:si_unique_call 1340} {:cexpr "__cil_tmp120"} boogie_si_record_i64($i228);
    goto corral_source_split_3293;

  corral_source_split_3293:
    assume {:verifier.code 0} true;
    $p229 := $i2p.i64.ref($i228);
    goto corral_source_split_3294;

  corral_source_split_3294:
    assume {:verifier.code 0} true;
    $i230 := $load.i8($M.1, $p229);
    call {:si_unique_call 1341} {:cexpr "__cil_tmp121"} boogie_si_record_i8($i230);
    goto corral_source_split_3295;

  corral_source_split_3295:
    assume {:verifier.code 0} true;
    $i231 := $zext.i8.i64($i230);
    call {:si_unique_call 1342} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i231);
    goto corral_source_split_3296;

  corral_source_split_3296:
    assume {:verifier.code 0} true;
    $i232 := $and.i64($i231, 1);
    call {:si_unique_call 1343} {:cexpr "__cil_tmp123"} boogie_si_record_i64($i232);
    goto corral_source_split_3297;

  corral_source_split_3297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1344} $i233 := __builtinx_expect.i64.i64($i232, 0);
    goto corral_source_split_3298;

  corral_source_split_3298:
    assume {:verifier.code 0} true;
    $i234 := $sext.i32.i64($i233);
    call {:si_unique_call 1345} {:cexpr "tmp___5"} boogie_si_record_i64($i234);
    goto corral_source_split_3299;

  corral_source_split_3299:
    assume {:verifier.code 0} true;
    $i235 := $ne.i64($i234, 0);
    goto corral_source_split_3300;

  corral_source_split_3300:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i235 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb34:
    assume $i235 == 1;
    goto corral_source_split_3302;

  corral_source_split_3302:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1346} vslice_dummy_var_82 := __dynamic_pr_debug.ref.ref.i32($p7, .str.8, $i208);
    goto corral_source_split_3303;

  corral_source_split_3303:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb27:
    assume $i189 == 1;
    goto corral_source_split_3243;

  corral_source_split_3243:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p0);
    call {:si_unique_call 1320} {:cexpr "__cil_tmp101"} boogie_si_record_i64($i190);
    goto corral_source_split_3244;

  corral_source_split_3244:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 518);
    call {:si_unique_call 1321} {:cexpr "__cil_tmp102"} boogie_si_record_i64($i191);
    goto corral_source_split_3245;

  corral_source_split_3245:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_3246;

  corral_source_split_3246:
    assume {:verifier.code 0} true;
    $i193 := $load.i16($M.1, $p192);
    call {:si_unique_call 1322} {:cexpr "__cil_tmp103"} boogie_si_record_i16($i193);
    goto corral_source_split_3247;

  corral_source_split_3247:
    assume {:verifier.code 0} true;
    $i194 := $zext.i16.i32($i193);
    call {:si_unique_call 1323} {:cexpr "__cil_tmp104"} boogie_si_record_i32($i194);
    goto corral_source_split_3248;

  corral_source_split_3248:
    assume {:verifier.code 0} true;
    $i195 := $p2i.ref.i64($p0);
    call {:si_unique_call 1324} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i195);
    goto corral_source_split_3249;

  corral_source_split_3249:
    assume {:verifier.code 0} true;
    $i196 := $add.i64($i195, 520);
    call {:si_unique_call 1325} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i196);
    goto corral_source_split_3250;

  corral_source_split_3250:
    assume {:verifier.code 0} true;
    $p197 := $i2p.i64.ref($i196);
    goto corral_source_split_3251;

  corral_source_split_3251:
    assume {:verifier.code 0} true;
    $i198 := $load.i16($M.1, $p197);
    call {:si_unique_call 1326} {:cexpr "__cil_tmp107"} boogie_si_record_i16($i198);
    goto corral_source_split_3252;

  corral_source_split_3252:
    assume {:verifier.code 0} true;
    $i199 := $zext.i16.i32($i198);
    call {:si_unique_call 1327} {:cexpr "__cil_tmp108"} boogie_si_record_i32($i199);
    goto corral_source_split_3253;

  corral_source_split_3253:
    assume {:verifier.code 0} true;
    $i200 := $p2i.ref.i64($p0);
    call {:si_unique_call 1328} {:cexpr "__cil_tmp109"} boogie_si_record_i64($i200);
    goto corral_source_split_3254;

  corral_source_split_3254:
    assume {:verifier.code 0} true;
    $i201 := $add.i64($i200, 560);
    call {:si_unique_call 1329} {:cexpr "__cil_tmp110"} boogie_si_record_i64($i201);
    goto corral_source_split_3255;

  corral_source_split_3255:
    assume {:verifier.code 0} true;
    $p202 := $i2p.i64.ref($i201);
    goto corral_source_split_3256;

  corral_source_split_3256:
    assume {:verifier.code 0} true;
    $i203 := $load.i32($M.1, $p202);
    call {:si_unique_call 1330} {:cexpr "__cil_tmp111"} boogie_si_record_i32($i203);
    goto corral_source_split_3257;

  corral_source_split_3257:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1331} vslice_dummy_var_81 := __dynamic_pr_debug.ref.ref.i32.i32.i32($p6, .str.11, $i194, $i199, $i203);
    goto corral_source_split_3258;

  corral_source_split_3258:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb24:
    assume $i163 == 1;
    goto corral_source_split_3208;

  corral_source_split_3208:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1308} vslice_dummy_var_80 := __dynamic_pr_debug.ref.ref($p5, .str.10);
    goto corral_source_split_3209;

  corral_source_split_3209:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb7:
    assume $i72 == 1;
    goto corral_source_split_3084;

  corral_source_split_3084:
    assume {:verifier.code 0} true;
    $i73 := 0;
    goto $bb10;

  $bb10:
    call $i74, $i75, $p76, $i77, $i78, $p79, $i80, $i81, $p82, $i83, $i84, $p85, $i86, $i87, $p88, $i89, $i90, $p91, $i92, $i93, $p94, $i95, $i96, $i97, $i98, $i99, $i100, $p102, $i103, $i104, $p105, $i106, $i107, $p108, $i109, $i110, $p111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $p130, $p131, $p132, $i133, $i134, $i136, $i137, $i138, $i73, vslice_dummy_var_78, vslice_dummy_var_79 := INFTL_dumptables_loop_$bb10($p0, $p3, $p4, $p70, $i74, $i75, $p76, $i77, $i78, $p79, $i80, $i81, $p82, $i83, $i84, $p85, $i86, $i87, $p88, $i89, $i90, $p91, $i92, $i93, $p94, $i95, $i96, $i97, $i98, $i99, $i100, $p102, $i103, $i104, $p105, $i106, $i107, $p108, $i109, $i110, $p111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $p130, $p131, $p132, $i133, $i134, $i136, $i137, $i138, $i73, vslice_dummy_var_78, vslice_dummy_var_79);
    goto $bb10_last;

  corral_source_split_3086:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i74 := $and.i32($i73, 7);
    call {:si_unique_call 1265} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i74);
    goto corral_source_split_3088;

  corral_source_split_3088:
    assume {:verifier.code 0} true;
    $i75 := $eq.i32($i74, 0);
    goto corral_source_split_3089;

  corral_source_split_3089:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i75 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $p102 := $bitcast.ref.ref($p4);
    goto corral_source_split_3127;

  corral_source_split_3127:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p102, .str);
    goto corral_source_split_3128;

  corral_source_split_3128:
    assume {:verifier.code 0} true;
    $i103 := $p2i.ref.i64($p4);
    goto corral_source_split_3129;

  corral_source_split_3129:
    assume {:verifier.code 0} true;
    $i104 := $add.i64($i103, 8);
    call {:si_unique_call 1278} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i104);
    goto corral_source_split_3130;

  corral_source_split_3130:
    assume {:verifier.code 0} true;
    $p105 := $i2p.i64.ref($i104);
    goto corral_source_split_3131;

  corral_source_split_3131:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p105, .str.5);
    goto corral_source_split_3132;

  corral_source_split_3132:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p4);
    goto corral_source_split_3133;

  corral_source_split_3133:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 16);
    call {:si_unique_call 1279} {:cexpr "__cil_tmp62"} boogie_si_record_i64($i107);
    goto corral_source_split_3134;

  corral_source_split_3134:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_3135;

  corral_source_split_3135:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p108, .str.2);
    goto corral_source_split_3136;

  corral_source_split_3136:
    assume {:verifier.code 0} true;
    $i109 := $p2i.ref.i64($p4);
    goto corral_source_split_3137;

  corral_source_split_3137:
    assume {:verifier.code 0} true;
    $i110 := $add.i64($i109, 24);
    call {:si_unique_call 1280} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i110);
    goto corral_source_split_3138;

  corral_source_split_3138:
    assume {:verifier.code 0} true;
    $p111 := $i2p.i64.ref($i110);
    goto corral_source_split_3139;

  corral_source_split_3139:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p111, .str.9);
    goto corral_source_split_3140;

  corral_source_split_3140:
    assume {:verifier.code 0} true;
    $i112 := $p2i.ref.i64($p4);
    goto corral_source_split_3141;

  corral_source_split_3141:
    assume {:verifier.code 0} true;
    $i113 := $add.i64($i112, 32);
    call {:si_unique_call 1281} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i113);
    goto corral_source_split_3142;

  corral_source_split_3142:
    assume {:verifier.code 0} true;
    $p114 := $i2p.i64.ref($i113);
    goto corral_source_split_3143;

  corral_source_split_3143:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p114, 492);
    goto corral_source_split_3144;

  corral_source_split_3144:
    assume {:verifier.code 0} true;
    $i115 := $p2i.ref.i64($p4);
    goto corral_source_split_3145;

  corral_source_split_3145:
    assume {:verifier.code 0} true;
    $i116 := $add.i64($i115, 35);
    call {:si_unique_call 1282} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i116);
    goto corral_source_split_3146;

  corral_source_split_3146:
    assume {:verifier.code 0} true;
    $p117 := $i2p.i64.ref($i116);
    goto corral_source_split_3147;

  corral_source_split_3147:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p117, 0);
    goto corral_source_split_3148;

  corral_source_split_3148:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p4);
    goto corral_source_split_3149;

  corral_source_split_3149:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 35);
    call {:si_unique_call 1283} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i119);
    goto corral_source_split_3150;

  corral_source_split_3150:
    assume {:verifier.code 0} true;
    $p120 := $i2p.i64.ref($i119);
    goto corral_source_split_3151;

  corral_source_split_3151:
    assume {:verifier.code 0} true;
    $i121 := $load.i8($M.1, $p120);
    call {:si_unique_call 1284} {:cexpr "__cil_tmp67"} boogie_si_record_i8($i121);
    goto corral_source_split_3152;

  corral_source_split_3152:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i64($i121);
    call {:si_unique_call 1285} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i122);
    goto corral_source_split_3153;

  corral_source_split_3153:
    assume {:verifier.code 0} true;
    $i123 := $and.i64($i122, 1);
    call {:si_unique_call 1286} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i123);
    goto corral_source_split_3154;

  corral_source_split_3154:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1287} $i124 := __builtinx_expect.i64.i64($i123, 0);
    goto corral_source_split_3155;

  corral_source_split_3155:
    assume {:verifier.code 0} true;
    $i125 := $sext.i32.i64($i124);
    call {:si_unique_call 1288} {:cexpr "tmp___2"} boogie_si_record_i64($i125);
    goto corral_source_split_3156;

  corral_source_split_3156:
    assume {:verifier.code 0} true;
    $i126 := $ne.i64($i125, 0);
    goto corral_source_split_3157;

  corral_source_split_3157:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i126 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i136 := $add.i32($i73, 1);
    call {:si_unique_call 1295} {:cexpr "i"} boogie_si_record_i32($i136);
    goto corral_source_split_3170;

  corral_source_split_3170:
    assume {:verifier.code 0} true;
    $i137 := $load.i32($M.1, $p70);
    call {:si_unique_call 1296} {:cexpr "__cil_tmp79"} boogie_si_record_i32($i137);
    goto corral_source_split_3171;

  corral_source_split_3171:
    assume {:verifier.code 0} true;
    $i138 := $ult.i32($i136, $i137);
    goto corral_source_split_3172;

  corral_source_split_3172:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i138 == 1);
    goto corral_source_split_3174;

  corral_source_split_3174:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb21:
    assume $i138 == 1;
    assume {:verifier.code 0} true;
    $i73 := $i136;
    goto $bb21_dummy;

  $bb18:
    assume $i126 == 1;
    goto corral_source_split_3159;

  corral_source_split_3159:
    assume {:verifier.code 0} true;
    $i127 := $sext.i32.i64($i73);
    call {:si_unique_call 1289} {:cexpr "__cil_tmp70"} boogie_si_record_i64($i127);
    goto corral_source_split_3160;

  corral_source_split_3160:
    assume {:verifier.code 0} true;
    $i128 := $p2i.ref.i64($p0);
    call {:si_unique_call 1290} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i128);
    goto corral_source_split_3161;

  corral_source_split_3161:
    assume {:verifier.code 0} true;
    $i129 := $add.i64($i128, 552);
    call {:si_unique_call 1291} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i129);
    goto corral_source_split_3162;

  corral_source_split_3162:
    assume {:verifier.code 0} true;
    $p130 := $i2p.i64.ref($i129);
    goto corral_source_split_3163;

  corral_source_split_3163:
    assume {:verifier.code 0} true;
    $p131 := $load.ref($M.1, $p130);
    goto corral_source_split_3164;

  corral_source_split_3164:
    assume {:verifier.code 0} true;
    $p132 := $add.ref($p131, $mul.ref($i127, 2));
    goto corral_source_split_3165;

  corral_source_split_3165:
    assume {:verifier.code 0} true;
    $i133 := $load.i16($M.1, $p132);
    call {:si_unique_call 1292} {:cexpr "__cil_tmp75"} boogie_si_record_i16($i133);
    goto corral_source_split_3166;

  corral_source_split_3166:
    assume {:verifier.code 0} true;
    $i134 := $zext.i16.i32($i133);
    call {:si_unique_call 1293} {:cexpr "__cil_tmp76"} boogie_si_record_i32($i134);
    goto corral_source_split_3167;

  corral_source_split_3167:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1294} vslice_dummy_var_79 := __dynamic_pr_debug.ref.ref.i32($p4, .str.9, $i134);
    goto corral_source_split_3168;

  corral_source_split_3168:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb12:
    assume $i75 == 1;
    goto corral_source_split_3091;

  corral_source_split_3091:
    assume {:verifier.code 0} true;
    $p76 := $bitcast.ref.ref($p3);
    goto corral_source_split_3092;

  corral_source_split_3092:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p76, .str);
    goto corral_source_split_3093;

  corral_source_split_3093:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p3);
    goto corral_source_split_3094;

  corral_source_split_3094:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 8);
    call {:si_unique_call 1266} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i78);
    goto corral_source_split_3095;

  corral_source_split_3095:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_3096;

  corral_source_split_3096:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p79, .str.5);
    goto corral_source_split_3097;

  corral_source_split_3097:
    assume {:verifier.code 0} true;
    $i80 := $p2i.ref.i64($p3);
    goto corral_source_split_3098;

  corral_source_split_3098:
    assume {:verifier.code 0} true;
    $i81 := $add.i64($i80, 16);
    call {:si_unique_call 1267} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i81);
    goto corral_source_split_3099;

  corral_source_split_3099:
    assume {:verifier.code 0} true;
    $p82 := $i2p.i64.ref($i81);
    goto corral_source_split_3100;

  corral_source_split_3100:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p82, .str.2);
    goto corral_source_split_3101;

  corral_source_split_3101:
    assume {:verifier.code 0} true;
    $i83 := $p2i.ref.i64($p3);
    goto corral_source_split_3102;

  corral_source_split_3102:
    assume {:verifier.code 0} true;
    $i84 := $add.i64($i83, 24);
    call {:si_unique_call 1268} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i84);
    goto corral_source_split_3103;

  corral_source_split_3103:
    assume {:verifier.code 0} true;
    $p85 := $i2p.i64.ref($i84);
    goto corral_source_split_3104;

  corral_source_split_3104:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p85, .str.8);
    goto corral_source_split_3105;

  corral_source_split_3105:
    assume {:verifier.code 0} true;
    $i86 := $p2i.ref.i64($p3);
    goto corral_source_split_3106;

  corral_source_split_3106:
    assume {:verifier.code 0} true;
    $i87 := $add.i64($i86, 32);
    call {:si_unique_call 1269} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i87);
    goto corral_source_split_3107;

  corral_source_split_3107:
    assume {:verifier.code 0} true;
    $p88 := $i2p.i64.ref($i87);
    goto corral_source_split_3108;

  corral_source_split_3108:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p88, 491);
    goto corral_source_split_3109;

  corral_source_split_3109:
    assume {:verifier.code 0} true;
    $i89 := $p2i.ref.i64($p3);
    goto corral_source_split_3110;

  corral_source_split_3110:
    assume {:verifier.code 0} true;
    $i90 := $add.i64($i89, 35);
    call {:si_unique_call 1270} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i90);
    goto corral_source_split_3111;

  corral_source_split_3111:
    assume {:verifier.code 0} true;
    $p91 := $i2p.i64.ref($i90);
    goto corral_source_split_3112;

  corral_source_split_3112:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p91, 0);
    goto corral_source_split_3113;

  corral_source_split_3113:
    assume {:verifier.code 0} true;
    $i92 := $p2i.ref.i64($p3);
    goto corral_source_split_3114;

  corral_source_split_3114:
    assume {:verifier.code 0} true;
    $i93 := $add.i64($i92, 35);
    call {:si_unique_call 1271} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i93);
    goto corral_source_split_3115;

  corral_source_split_3115:
    assume {:verifier.code 0} true;
    $p94 := $i2p.i64.ref($i93);
    goto corral_source_split_3116;

  corral_source_split_3116:
    assume {:verifier.code 0} true;
    $i95 := $load.i8($M.1, $p94);
    call {:si_unique_call 1272} {:cexpr "__cil_tmp57"} boogie_si_record_i8($i95);
    goto corral_source_split_3117;

  corral_source_split_3117:
    assume {:verifier.code 0} true;
    $i96 := $zext.i8.i64($i95);
    call {:si_unique_call 1273} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i96);
    goto corral_source_split_3118;

  corral_source_split_3118:
    assume {:verifier.code 0} true;
    $i97 := $and.i64($i96, 1);
    call {:si_unique_call 1274} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i97);
    goto corral_source_split_3119;

  corral_source_split_3119:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1275} $i98 := __builtinx_expect.i64.i64($i97, 0);
    goto corral_source_split_3120;

  corral_source_split_3120:
    assume {:verifier.code 0} true;
    $i99 := $sext.i32.i64($i98);
    call {:si_unique_call 1276} {:cexpr "tmp___1"} boogie_si_record_i64($i99);
    goto corral_source_split_3121;

  corral_source_split_3121:
    assume {:verifier.code 0} true;
    $i100 := $ne.i64($i99, 0);
    goto corral_source_split_3122;

  corral_source_split_3122:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i100 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb14:
    assume $i100 == 1;
    goto corral_source_split_3124;

  corral_source_split_3124:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1277} vslice_dummy_var_78 := __dynamic_pr_debug.ref.ref.i32($p3, .str.8, $i73);
    goto corral_source_split_3125;

  corral_source_split_3125:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb4:
    assume $i62 == 1;
    goto corral_source_split_3071;

  corral_source_split_3071:
    assume {:verifier.code 0} true;
    $i63 := $p2i.ref.i64($p0);
    call {:si_unique_call 1258} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i63);
    goto corral_source_split_3072;

  corral_source_split_3072:
    assume {:verifier.code 0} true;
    $i64 := $add.i64($i63, 560);
    call {:si_unique_call 1259} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i64);
    goto corral_source_split_3073;

  corral_source_split_3073:
    assume {:verifier.code 0} true;
    $p65 := $i2p.i64.ref($i64);
    goto corral_source_split_3074;

  corral_source_split_3074:
    assume {:verifier.code 0} true;
    $i66 := $load.i32($M.1, $p65);
    call {:si_unique_call 1260} {:cexpr "__cil_tmp47"} boogie_si_record_i32($i66);
    goto corral_source_split_3075;

  corral_source_split_3075:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1261} vslice_dummy_var_77 := __dynamic_pr_debug.ref.ref.i32($p2, .str.7, $i66);
    goto corral_source_split_3076;

  corral_source_split_3076:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i36 == 1;
    goto corral_source_split_3036;

  corral_source_split_3036:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1246} vslice_dummy_var_76 := __dynamic_pr_debug.ref.ref($p1, .str.6);
    goto corral_source_split_3037;

  corral_source_split_3037:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb41_dummy:
    assume false;
    return;

  $bb30_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_3264;

  $bb21_dummy:
    assume false;
    return;

  $bb10_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_3086;
}



const INFTL_dumpVUchains: ref;

axiom INFTL_dumpVUchains == $sub.ref(0, 138705);

procedure INFTL_dumpVUchains($p0: ref);
  free requires assertsPassed;
  modifies $M.3, $M.1, $CurrAddr;



implementation INFTL_dumpVUchains($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i8;
  var $i27: i64;
  var $i28: i64;
  var $i29: i32;
  var $i30: i64;
  var $i31: i1;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i8;
  var $i53: i64;
  var $i54: i64;
  var $i55: i32;
  var $i56: i64;
  var $i57: i1;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i1;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i16;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $p96: ref;
  var $i97: i8;
  var $i98: i64;
  var $i99: i64;
  var $i100: i32;
  var $i101: i64;
  var $i102: i1;
  var $i104: i64;
  var $i105: i64;
  var $p106: ref;
  var $i107: i32;
  var $i108: i1;
  var $i111: i64;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i16;
  var $i118: i32;
  var $i119: i1;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i16;
  var $i127: i32;
  var $p128: ref;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i64;
  var $i133: i64;
  var $p134: ref;
  var $i135: i64;
  var $i136: i64;
  var $p137: ref;
  var $i138: i64;
  var $i139: i64;
  var $p140: ref;
  var $i141: i64;
  var $i142: i64;
  var $p143: ref;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i8;
  var $i148: i64;
  var $i149: i64;
  var $i150: i32;
  var $i151: i64;
  var $i152: i1;
  var $i154: i32;
  var $i155: i32;
  var $i156: i1;
  var $i109: i32;
  var $i110: i32;
  var $p157: ref;
  var $i158: i64;
  var $i159: i64;
  var $p160: ref;
  var $i161: i64;
  var $i162: i64;
  var $p163: ref;
  var $i164: i64;
  var $i165: i64;
  var $p166: ref;
  var $i167: i64;
  var $i168: i64;
  var $p169: ref;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $i173: i64;
  var $i174: i64;
  var $p175: ref;
  var $i176: i8;
  var $i177: i64;
  var $i178: i64;
  var $i179: i32;
  var $i180: i64;
  var $i181: i1;
  var $i183: i32;
  var $i184: i32;
  var $i185: i1;
  var $i64: i32;
  var $p186: ref;
  var $i187: i64;
  var $i188: i64;
  var $p189: ref;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i64;
  var $i194: i64;
  var $p195: ref;
  var $i196: i64;
  var $i197: i64;
  var $p198: ref;
  var $i199: i64;
  var $i200: i64;
  var $p201: ref;
  var $i202: i64;
  var $i203: i64;
  var $p204: ref;
  var $i205: i8;
  var $i206: i64;
  var $i207: i64;
  var $i208: i32;
  var $i209: i64;
  var $i210: i1;
  var vslice_dummy_var_87: i32;
  var vslice_dummy_var_88: i32;
  var vslice_dummy_var_89: i32;
  var vslice_dummy_var_90: i32;
  var vslice_dummy_var_91: i32;
  var vslice_dummy_var_92: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1444} $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1445} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1446} $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1447} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1448} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1449} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    goto corral_source_split_3512;

  corral_source_split_3512:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p1);
    goto corral_source_split_3513;

  corral_source_split_3513:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p7, .str);
    goto corral_source_split_3514;

  corral_source_split_3514:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p1);
    goto corral_source_split_3515;

  corral_source_split_3515:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 8);
    call {:si_unique_call 1450} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i9);
    goto corral_source_split_3516;

  corral_source_split_3516:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_3517;

  corral_source_split_3517:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p10, .str.13);
    goto corral_source_split_3518;

  corral_source_split_3518:
    assume {:verifier.code 0} true;
    $i11 := $p2i.ref.i64($p1);
    goto corral_source_split_3519;

  corral_source_split_3519:
    assume {:verifier.code 0} true;
    $i12 := $add.i64($i11, 16);
    call {:si_unique_call 1451} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i12);
    goto corral_source_split_3520;

  corral_source_split_3520:
    assume {:verifier.code 0} true;
    $p13 := $i2p.i64.ref($i12);
    goto corral_source_split_3521;

  corral_source_split_3521:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p13, .str.2);
    goto corral_source_split_3522;

  corral_source_split_3522:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p1);
    goto corral_source_split_3523;

  corral_source_split_3523:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 24);
    call {:si_unique_call 1452} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i15);
    goto corral_source_split_3524;

  corral_source_split_3524:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_3525;

  corral_source_split_3525:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p16, .str.6);
    goto corral_source_split_3526;

  corral_source_split_3526:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p1);
    goto corral_source_split_3527;

  corral_source_split_3527:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 32);
    call {:si_unique_call 1453} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i18);
    goto corral_source_split_3528;

  corral_source_split_3528:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_3529;

  corral_source_split_3529:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p19, 531);
    goto corral_source_split_3530;

  corral_source_split_3530:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p1);
    goto corral_source_split_3531;

  corral_source_split_3531:
    assume {:verifier.code 0} true;
    $i21 := $add.i64($i20, 35);
    call {:si_unique_call 1454} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i21);
    goto corral_source_split_3532;

  corral_source_split_3532:
    assume {:verifier.code 0} true;
    $p22 := $i2p.i64.ref($i21);
    goto corral_source_split_3533;

  corral_source_split_3533:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p22, 0);
    goto corral_source_split_3534;

  corral_source_split_3534:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    goto corral_source_split_3535;

  corral_source_split_3535:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 35);
    call {:si_unique_call 1455} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i24);
    goto corral_source_split_3536;

  corral_source_split_3536:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_3537;

  corral_source_split_3537:
    assume {:verifier.code 0} true;
    $i26 := $load.i8($M.1, $p25);
    call {:si_unique_call 1456} {:cexpr "__cil_tmp24"} boogie_si_record_i8($i26);
    goto corral_source_split_3538;

  corral_source_split_3538:
    assume {:verifier.code 0} true;
    $i27 := $zext.i8.i64($i26);
    call {:si_unique_call 1457} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i27);
    goto corral_source_split_3539;

  corral_source_split_3539:
    assume {:verifier.code 0} true;
    $i28 := $and.i64($i27, 1);
    call {:si_unique_call 1458} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i28);
    goto corral_source_split_3540;

  corral_source_split_3540:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1459} $i29 := __builtinx_expect.i64.i64($i28, 0);
    goto corral_source_split_3541;

  corral_source_split_3541:
    assume {:verifier.code 0} true;
    $i30 := $sext.i32.i64($i29);
    call {:si_unique_call 1460} {:cexpr "tmp"} boogie_si_record_i64($i30);
    goto corral_source_split_3542;

  corral_source_split_3542:
    assume {:verifier.code 0} true;
    $i31 := $ne.i64($i30, 0);
    goto corral_source_split_3543;

  corral_source_split_3543:
    assume {:verifier.code 0} true;
    assume {:branchcond $i31} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i31 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p33 := $bitcast.ref.ref($p2);
    goto corral_source_split_3548;

  corral_source_split_3548:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p33, .str);
    goto corral_source_split_3549;

  corral_source_split_3549:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p2);
    goto corral_source_split_3550;

  corral_source_split_3550:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 8);
    call {:si_unique_call 1462} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i35);
    goto corral_source_split_3551;

  corral_source_split_3551:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_3552;

  corral_source_split_3552:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p36, .str.13);
    goto corral_source_split_3553;

  corral_source_split_3553:
    assume {:verifier.code 0} true;
    $i37 := $p2i.ref.i64($p2);
    goto corral_source_split_3554;

  corral_source_split_3554:
    assume {:verifier.code 0} true;
    $i38 := $add.i64($i37, 16);
    call {:si_unique_call 1463} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i38);
    goto corral_source_split_3555;

  corral_source_split_3555:
    assume {:verifier.code 0} true;
    $p39 := $i2p.i64.ref($i38);
    goto corral_source_split_3556;

  corral_source_split_3556:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p39, .str.2);
    goto corral_source_split_3557;

  corral_source_split_3557:
    assume {:verifier.code 0} true;
    $i40 := $p2i.ref.i64($p2);
    goto corral_source_split_3558;

  corral_source_split_3558:
    assume {:verifier.code 0} true;
    $i41 := $add.i64($i40, 24);
    call {:si_unique_call 1464} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i41);
    goto corral_source_split_3559;

  corral_source_split_3559:
    assume {:verifier.code 0} true;
    $p42 := $i2p.i64.ref($i41);
    goto corral_source_split_3560;

  corral_source_split_3560:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p42, .str.14);
    goto corral_source_split_3561;

  corral_source_split_3561:
    assume {:verifier.code 0} true;
    $i43 := $p2i.ref.i64($p2);
    goto corral_source_split_3562;

  corral_source_split_3562:
    assume {:verifier.code 0} true;
    $i44 := $add.i64($i43, 32);
    call {:si_unique_call 1465} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i44);
    goto corral_source_split_3563;

  corral_source_split_3563:
    assume {:verifier.code 0} true;
    $p45 := $i2p.i64.ref($i44);
    goto corral_source_split_3564;

  corral_source_split_3564:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p45, 533);
    goto corral_source_split_3565;

  corral_source_split_3565:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p2);
    goto corral_source_split_3566;

  corral_source_split_3566:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, 35);
    call {:si_unique_call 1466} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i47);
    goto corral_source_split_3567;

  corral_source_split_3567:
    assume {:verifier.code 0} true;
    $p48 := $i2p.i64.ref($i47);
    goto corral_source_split_3568;

  corral_source_split_3568:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p48, 0);
    goto corral_source_split_3569;

  corral_source_split_3569:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p2);
    goto corral_source_split_3570;

  corral_source_split_3570:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 35);
    call {:si_unique_call 1467} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i50);
    goto corral_source_split_3571;

  corral_source_split_3571:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_3572;

  corral_source_split_3572:
    assume {:verifier.code 0} true;
    $i52 := $load.i8($M.1, $p51);
    call {:si_unique_call 1468} {:cexpr "__cil_tmp34"} boogie_si_record_i8($i52);
    goto corral_source_split_3573;

  corral_source_split_3573:
    assume {:verifier.code 0} true;
    $i53 := $zext.i8.i64($i52);
    call {:si_unique_call 1469} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i53);
    goto corral_source_split_3574;

  corral_source_split_3574:
    assume {:verifier.code 0} true;
    $i54 := $and.i64($i53, 1);
    call {:si_unique_call 1470} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i54);
    goto corral_source_split_3575;

  corral_source_split_3575:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1471} $i55 := __builtinx_expect.i64.i64($i54, 0);
    goto corral_source_split_3576;

  corral_source_split_3576:
    assume {:verifier.code 0} true;
    $i56 := $sext.i32.i64($i55);
    call {:si_unique_call 1472} {:cexpr "tmp___0"} boogie_si_record_i64($i56);
    goto corral_source_split_3577;

  corral_source_split_3577:
    assume {:verifier.code 0} true;
    $i57 := $ne.i64($i56, 0);
    goto corral_source_split_3578;

  corral_source_split_3578:
    assume {:verifier.code 0} true;
    assume {:branchcond $i57} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i57 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i59 := $p2i.ref.i64($p0);
    call {:si_unique_call 1474} {:cexpr "__cil_tmp94"} boogie_si_record_i64($i59);
    goto corral_source_split_3583;

  corral_source_split_3583:
    assume {:verifier.code 0} true;
    $i60 := $add.i64($i59, 560);
    call {:si_unique_call 1475} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i60);
    goto corral_source_split_3584;

  corral_source_split_3584:
    assume {:verifier.code 0} true;
    $p61 := $i2p.i64.ref($i60);
    goto corral_source_split_3585;

  corral_source_split_3585:
    assume {:verifier.code 0} true;
    $i62 := $load.i32($M.1, $p61);
    call {:si_unique_call 1476} {:cexpr "__cil_tmp96"} boogie_si_record_i32($i62);
    goto corral_source_split_3586;

  corral_source_split_3586:
    assume {:verifier.code 0} true;
    $i63 := $ult.i32(0, $i62);
    goto corral_source_split_3587;

  corral_source_split_3587:
    assume {:verifier.code 0} true;
    assume {:branchcond $i63} true;
    goto $bb7, $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    assume !($i63 == 1);
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    $p186 := $bitcast.ref.ref($p6);
    goto corral_source_split_3756;

  corral_source_split_3756:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p186, .str);
    goto corral_source_split_3757;

  corral_source_split_3757:
    assume {:verifier.code 0} true;
    $i187 := $p2i.ref.i64($p6);
    goto corral_source_split_3758;

  corral_source_split_3758:
    assume {:verifier.code 0} true;
    $i188 := $add.i64($i187, 8);
    call {:si_unique_call 1538} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i188);
    goto corral_source_split_3759;

  corral_source_split_3759:
    assume {:verifier.code 0} true;
    $p189 := $i2p.i64.ref($i188);
    goto corral_source_split_3760;

  corral_source_split_3760:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p189, .str.13);
    goto corral_source_split_3761;

  corral_source_split_3761:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p6);
    goto corral_source_split_3762;

  corral_source_split_3762:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 16);
    call {:si_unique_call 1539} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i191);
    goto corral_source_split_3763;

  corral_source_split_3763:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_3764;

  corral_source_split_3764:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p192, .str.2);
    goto corral_source_split_3765;

  corral_source_split_3765:
    assume {:verifier.code 0} true;
    $i193 := $p2i.ref.i64($p6);
    goto corral_source_split_3766;

  corral_source_split_3766:
    assume {:verifier.code 0} true;
    $i194 := $add.i64($i193, 24);
    call {:si_unique_call 1540} {:cexpr "__cil_tmp101"} boogie_si_record_i64($i194);
    goto corral_source_split_3767;

  corral_source_split_3767:
    assume {:verifier.code 0} true;
    $p195 := $i2p.i64.ref($i194);
    goto corral_source_split_3768;

  corral_source_split_3768:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p195, .str.6);
    goto corral_source_split_3769;

  corral_source_split_3769:
    assume {:verifier.code 0} true;
    $i196 := $p2i.ref.i64($p6);
    goto corral_source_split_3770;

  corral_source_split_3770:
    assume {:verifier.code 0} true;
    $i197 := $add.i64($i196, 32);
    call {:si_unique_call 1541} {:cexpr "__cil_tmp102"} boogie_si_record_i64($i197);
    goto corral_source_split_3771;

  corral_source_split_3771:
    assume {:verifier.code 0} true;
    $p198 := $i2p.i64.ref($i197);
    goto corral_source_split_3772;

  corral_source_split_3772:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p198, 549);
    goto corral_source_split_3773;

  corral_source_split_3773:
    assume {:verifier.code 0} true;
    $i199 := $p2i.ref.i64($p6);
    goto corral_source_split_3774;

  corral_source_split_3774:
    assume {:verifier.code 0} true;
    $i200 := $add.i64($i199, 35);
    call {:si_unique_call 1542} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i200);
    goto corral_source_split_3775;

  corral_source_split_3775:
    assume {:verifier.code 0} true;
    $p201 := $i2p.i64.ref($i200);
    goto corral_source_split_3776;

  corral_source_split_3776:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p201, 0);
    goto corral_source_split_3777;

  corral_source_split_3777:
    assume {:verifier.code 0} true;
    $i202 := $p2i.ref.i64($p6);
    goto corral_source_split_3778;

  corral_source_split_3778:
    assume {:verifier.code 0} true;
    $i203 := $add.i64($i202, 35);
    call {:si_unique_call 1543} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i203);
    goto corral_source_split_3779;

  corral_source_split_3779:
    assume {:verifier.code 0} true;
    $p204 := $i2p.i64.ref($i203);
    goto corral_source_split_3780;

  corral_source_split_3780:
    assume {:verifier.code 0} true;
    $i205 := $load.i8($M.1, $p204);
    call {:si_unique_call 1544} {:cexpr "__cil_tmp105"} boogie_si_record_i8($i205);
    goto corral_source_split_3781;

  corral_source_split_3781:
    assume {:verifier.code 0} true;
    $i206 := $zext.i8.i64($i205);
    call {:si_unique_call 1545} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i206);
    goto corral_source_split_3782;

  corral_source_split_3782:
    assume {:verifier.code 0} true;
    $i207 := $and.i64($i206, 1);
    call {:si_unique_call 1546} {:cexpr "__cil_tmp107"} boogie_si_record_i64($i207);
    goto corral_source_split_3783;

  corral_source_split_3783:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1547} $i208 := __builtinx_expect.i64.i64($i207, 0);
    goto corral_source_split_3784;

  corral_source_split_3784:
    assume {:verifier.code 0} true;
    $i209 := $sext.i32.i64($i208);
    call {:si_unique_call 1548} {:cexpr "tmp___4"} boogie_si_record_i64($i209);
    goto corral_source_split_3785;

  corral_source_split_3785:
    assume {:verifier.code 0} true;
    $i210 := $ne.i64($i209, 0);
    goto corral_source_split_3786;

  corral_source_split_3786:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb39, $bb40;

  $bb40:
    assume !($i210 == 1);
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    return;

  $bb39:
    assume $i210 == 1;
    goto corral_source_split_3788;

  corral_source_split_3788:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1549} vslice_dummy_var_92 := __dynamic_pr_debug.ref.ref($p6, .str.6);
    goto corral_source_split_3789;

  corral_source_split_3789:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb7:
    assume $i63 == 1;
    goto corral_source_split_3589;

  corral_source_split_3589:
    assume {:verifier.code 0} true;
    $i64 := 0;
    goto $bb10;

  $bb10:
    call $i65, $i66, $i67, $p68, $p69, $p70, $i71, $i72, $i73, $i74, $p75, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $p87, $i88, $i89, $p90, $i91, $i92, $p93, $i94, $i95, $p96, $i97, $i98, $i99, $i100, $i101, $i102, $i104, $i105, $p106, $i107, $i108, $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i120, $i121, $i122, $p123, $p124, $p125, $i126, $i127, $p128, $i129, $i130, $p131, $i132, $i133, $p134, $i135, $i136, $p137, $i138, $i139, $p140, $i141, $i142, $p143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $i154, $i155, $i156, $i109, $i110, $p157, $i158, $i159, $p160, $i161, $i162, $p163, $i164, $i165, $p166, $i167, $i168, $p169, $i170, $i171, $p172, $i173, $i174, $p175, $i176, $i177, $i178, $i179, $i180, $i181, $i183, $i184, $i185, $i64, vslice_dummy_var_89, vslice_dummy_var_90, vslice_dummy_var_91 := INFTL_dumpVUchains_loop_$bb10($p0, $p3, $p4, $p5, $p61, $i65, $i66, $i67, $p68, $p69, $p70, $i71, $i72, $i73, $i74, $p75, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $p87, $i88, $i89, $p90, $i91, $i92, $p93, $i94, $i95, $p96, $i97, $i98, $i99, $i100, $i101, $i102, $i104, $i105, $p106, $i107, $i108, $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i120, $i121, $i122, $p123, $p124, $p125, $i126, $i127, $p128, $i129, $i130, $p131, $i132, $i133, $p134, $i135, $i136, $p137, $i138, $i139, $p140, $i141, $i142, $p143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $i154, $i155, $i156, $i109, $i110, $p157, $i158, $i159, $p160, $i161, $i162, $p163, $i164, $i165, $p166, $i167, $i168, $p169, $i170, $i171, $p172, $i173, $i174, $p175, $i176, $i177, $i178, $i179, $i180, $i181, $i183, $i184, $i185, $i64, vslice_dummy_var_89, vslice_dummy_var_90, vslice_dummy_var_91);
    goto $bb10_last;

  corral_source_split_3591:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i65 := $sext.i32.i64($i64);
    call {:si_unique_call 1477} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i65);
    goto corral_source_split_3593;

  corral_source_split_3593:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p0);
    call {:si_unique_call 1478} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i66);
    goto corral_source_split_3594;

  corral_source_split_3594:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 552);
    call {:si_unique_call 1479} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i67);
    goto corral_source_split_3595;

  corral_source_split_3595:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_3596;

  corral_source_split_3596:
    assume {:verifier.code 0} true;
    $p69 := $load.ref($M.1, $p68);
    goto corral_source_split_3597;

  corral_source_split_3597:
    assume {:verifier.code 0} true;
    $p70 := $add.ref($p69, $mul.ref($i65, 2));
    goto corral_source_split_3598;

  corral_source_split_3598:
    assume {:verifier.code 0} true;
    $i71 := $load.i16($M.1, $p70);
    call {:si_unique_call 1480} {:cexpr "__cil_tmp42"} boogie_si_record_i16($i71);
    goto corral_source_split_3599;

  corral_source_split_3599:
    assume {:verifier.code 0} true;
    $i72 := $zext.i16.i32($i71);
    call {:si_unique_call 1481} {:cexpr "block"} boogie_si_record_i32($i72);
    goto corral_source_split_3600;

  corral_source_split_3600:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p0);
    call {:si_unique_call 1482} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i73);
    goto corral_source_split_3601;

  corral_source_split_3601:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 560);
    call {:si_unique_call 1483} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i74);
    goto corral_source_split_3602;

  corral_source_split_3602:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_3603;

  corral_source_split_3603:
    assume {:verifier.code 0} true;
    $i76 := $load.i32($M.1, $p75);
    call {:si_unique_call 1484} {:cexpr "__cil_tmp45"} boogie_si_record_i32($i76);
    goto corral_source_split_3604;

  corral_source_split_3604:
    assume {:verifier.code 0} true;
    $i77 := $ugt.i32($i72, $i76);
    goto corral_source_split_3605;

  corral_source_split_3605:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i77 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $p78 := $bitcast.ref.ref($p3);
    goto corral_source_split_3613;

  corral_source_split_3613:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p78, .str);
    goto corral_source_split_3614;

  corral_source_split_3614:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p3);
    goto corral_source_split_3615;

  corral_source_split_3615:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 8);
    call {:si_unique_call 1487} {:cexpr "__cil_tmp48"} boogie_si_record_i64($i80);
    goto corral_source_split_3616;

  corral_source_split_3616:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_3617;

  corral_source_split_3617:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p81, .str.13);
    goto corral_source_split_3618;

  corral_source_split_3618:
    assume {:verifier.code 0} true;
    $i82 := $p2i.ref.i64($p3);
    goto corral_source_split_3619;

  corral_source_split_3619:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, 16);
    call {:si_unique_call 1488} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i83);
    goto corral_source_split_3620;

  corral_source_split_3620:
    assume {:verifier.code 0} true;
    $p84 := $i2p.i64.ref($i83);
    goto corral_source_split_3621;

  corral_source_split_3621:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p84, .str.2);
    goto corral_source_split_3622;

  corral_source_split_3622:
    assume {:verifier.code 0} true;
    $i85 := $p2i.ref.i64($p3);
    goto corral_source_split_3623;

  corral_source_split_3623:
    assume {:verifier.code 0} true;
    $i86 := $add.i64($i85, 24);
    call {:si_unique_call 1489} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i86);
    goto corral_source_split_3624;

  corral_source_split_3624:
    assume {:verifier.code 0} true;
    $p87 := $i2p.i64.ref($i86);
    goto corral_source_split_3625;

  corral_source_split_3625:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p87, .str.15);
    goto corral_source_split_3626;

  corral_source_split_3626:
    assume {:verifier.code 0} true;
    $i88 := $p2i.ref.i64($p3);
    goto corral_source_split_3627;

  corral_source_split_3627:
    assume {:verifier.code 0} true;
    $i89 := $add.i64($i88, 32);
    call {:si_unique_call 1490} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i89);
    goto corral_source_split_3628;

  corral_source_split_3628:
    assume {:verifier.code 0} true;
    $p90 := $i2p.i64.ref($i89);
    goto corral_source_split_3629;

  corral_source_split_3629:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p90, 538);
    goto corral_source_split_3630;

  corral_source_split_3630:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p3);
    goto corral_source_split_3631;

  corral_source_split_3631:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 35);
    call {:si_unique_call 1491} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i92);
    goto corral_source_split_3632;

  corral_source_split_3632:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_3633;

  corral_source_split_3633:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p93, 0);
    goto corral_source_split_3634;

  corral_source_split_3634:
    assume {:verifier.code 0} true;
    $i94 := $p2i.ref.i64($p3);
    goto corral_source_split_3635;

  corral_source_split_3635:
    assume {:verifier.code 0} true;
    $i95 := $add.i64($i94, 35);
    call {:si_unique_call 1492} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i95);
    goto corral_source_split_3636;

  corral_source_split_3636:
    assume {:verifier.code 0} true;
    $p96 := $i2p.i64.ref($i95);
    goto corral_source_split_3637;

  corral_source_split_3637:
    assume {:verifier.code 0} true;
    $i97 := $load.i8($M.1, $p96);
    call {:si_unique_call 1493} {:cexpr "__cil_tmp54"} boogie_si_record_i8($i97);
    goto corral_source_split_3638;

  corral_source_split_3638:
    assume {:verifier.code 0} true;
    $i98 := $zext.i8.i64($i97);
    call {:si_unique_call 1494} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i98);
    goto corral_source_split_3639;

  corral_source_split_3639:
    assume {:verifier.code 0} true;
    $i99 := $and.i64($i98, 1);
    call {:si_unique_call 1495} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i99);
    goto corral_source_split_3640;

  corral_source_split_3640:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1496} $i100 := __builtinx_expect.i64.i64($i99, 0);
    goto corral_source_split_3641;

  corral_source_split_3641:
    assume {:verifier.code 0} true;
    $i101 := $sext.i32.i64($i100);
    call {:si_unique_call 1497} {:cexpr "tmp___1"} boogie_si_record_i64($i101);
    goto corral_source_split_3642;

  corral_source_split_3642:
    assume {:verifier.code 0} true;
    $i102 := $ne.i64($i101, 0);
    goto corral_source_split_3643;

  corral_source_split_3643:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i102 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i104 := $p2i.ref.i64($p0);
    call {:si_unique_call 1499} {:cexpr "__cil_tmp80"} boogie_si_record_i64($i104);
    goto corral_source_split_3648;

  corral_source_split_3648:
    assume {:verifier.code 0} true;
    $i105 := $add.i64($i104, 560);
    call {:si_unique_call 1500} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i105);
    goto corral_source_split_3649;

  corral_source_split_3649:
    assume {:verifier.code 0} true;
    $p106 := $i2p.i64.ref($i105);
    goto corral_source_split_3650;

  corral_source_split_3650:
    assume {:verifier.code 0} true;
    $i107 := $load.i32($M.1, $p106);
    call {:si_unique_call 1501} {:cexpr "__cil_tmp82"} boogie_si_record_i32($i107);
    goto corral_source_split_3651;

  corral_source_split_3651:
    assume {:verifier.code 0} true;
    $i108 := $ult.i32(0, $i107);
    goto corral_source_split_3652;

  corral_source_split_3652:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    assume !($i108 == 1);
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $p157 := $bitcast.ref.ref($p5);
    goto corral_source_split_3670;

  corral_source_split_3670:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p157, .str);
    goto corral_source_split_3671;

  corral_source_split_3671:
    assume {:verifier.code 0} true;
    $i158 := $p2i.ref.i64($p5);
    goto corral_source_split_3672;

  corral_source_split_3672:
    assume {:verifier.code 0} true;
    $i159 := $add.i64($i158, 8);
    call {:si_unique_call 1507} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i159);
    goto corral_source_split_3673;

  corral_source_split_3673:
    assume {:verifier.code 0} true;
    $p160 := $i2p.i64.ref($i159);
    goto corral_source_split_3674;

  corral_source_split_3674:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p160, .str.13);
    goto corral_source_split_3675;

  corral_source_split_3675:
    assume {:verifier.code 0} true;
    $i161 := $p2i.ref.i64($p5);
    goto corral_source_split_3676;

  corral_source_split_3676:
    assume {:verifier.code 0} true;
    $i162 := $add.i64($i161, 16);
    call {:si_unique_call 1508} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i162);
    goto corral_source_split_3677;

  corral_source_split_3677:
    assume {:verifier.code 0} true;
    $p163 := $i2p.i64.ref($i162);
    goto corral_source_split_3678;

  corral_source_split_3678:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p163, .str.2);
    goto corral_source_split_3679;

  corral_source_split_3679:
    assume {:verifier.code 0} true;
    $i164 := $p2i.ref.i64($p5);
    goto corral_source_split_3680;

  corral_source_split_3680:
    assume {:verifier.code 0} true;
    $i165 := $add.i64($i164, 24);
    call {:si_unique_call 1509} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i165);
    goto corral_source_split_3681;

  corral_source_split_3681:
    assume {:verifier.code 0} true;
    $p166 := $i2p.i64.ref($i165);
    goto corral_source_split_3682;

  corral_source_split_3682:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p166, .str.17);
    goto corral_source_split_3683;

  corral_source_split_3683:
    assume {:verifier.code 0} true;
    $i167 := $p2i.ref.i64($p5);
    goto corral_source_split_3684;

  corral_source_split_3684:
    assume {:verifier.code 0} true;
    $i168 := $add.i64($i167, 32);
    call {:si_unique_call 1510} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i168);
    goto corral_source_split_3685;

  corral_source_split_3685:
    assume {:verifier.code 0} true;
    $p169 := $i2p.i64.ref($i168);
    goto corral_source_split_3686;

  corral_source_split_3686:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p169, 545);
    goto corral_source_split_3687;

  corral_source_split_3687:
    assume {:verifier.code 0} true;
    $i170 := $p2i.ref.i64($p5);
    goto corral_source_split_3688;

  corral_source_split_3688:
    assume {:verifier.code 0} true;
    $i171 := $add.i64($i170, 35);
    call {:si_unique_call 1511} {:cexpr "__cil_tmp89"} boogie_si_record_i64($i171);
    goto corral_source_split_3689;

  corral_source_split_3689:
    assume {:verifier.code 0} true;
    $p172 := $i2p.i64.ref($i171);
    goto corral_source_split_3690;

  corral_source_split_3690:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p172, 0);
    goto corral_source_split_3691;

  corral_source_split_3691:
    assume {:verifier.code 0} true;
    $i173 := $p2i.ref.i64($p5);
    goto corral_source_split_3692;

  corral_source_split_3692:
    assume {:verifier.code 0} true;
    $i174 := $add.i64($i173, 35);
    call {:si_unique_call 1512} {:cexpr "__cil_tmp90"} boogie_si_record_i64($i174);
    goto corral_source_split_3693;

  corral_source_split_3693:
    assume {:verifier.code 0} true;
    $p175 := $i2p.i64.ref($i174);
    goto corral_source_split_3694;

  corral_source_split_3694:
    assume {:verifier.code 0} true;
    $i176 := $load.i8($M.1, $p175);
    call {:si_unique_call 1513} {:cexpr "__cil_tmp91"} boogie_si_record_i8($i176);
    goto corral_source_split_3695;

  corral_source_split_3695:
    assume {:verifier.code 0} true;
    $i177 := $zext.i8.i64($i176);
    call {:si_unique_call 1514} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i177);
    goto corral_source_split_3696;

  corral_source_split_3696:
    assume {:verifier.code 0} true;
    $i178 := $and.i64($i177, 1);
    call {:si_unique_call 1515} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i178);
    goto corral_source_split_3697;

  corral_source_split_3697:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1516} $i179 := __builtinx_expect.i64.i64($i178, 0);
    goto corral_source_split_3698;

  corral_source_split_3698:
    assume {:verifier.code 0} true;
    $i180 := $sext.i32.i64($i179);
    call {:si_unique_call 1517} {:cexpr "tmp___3"} boogie_si_record_i64($i180);
    goto corral_source_split_3699;

  corral_source_split_3699:
    assume {:verifier.code 0} true;
    $i181 := $ne.i64($i180, 0);
    goto corral_source_split_3700;

  corral_source_split_3700:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb33, $bb34;

  $bb34:
    assume !($i181 == 1);
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i183 := $add.i32($i64, 1);
    call {:si_unique_call 1485} {:cexpr "logical"} boogie_si_record_i32($i183);
    goto corral_source_split_3609;

  corral_source_split_3609:
    assume {:verifier.code 0} true;
    $i184 := $load.i32($M.1, $p61);
    call {:si_unique_call 1486} {:cexpr "__cil_tmp96"} boogie_si_record_i32($i184);
    goto corral_source_split_3610;

  corral_source_split_3610:
    assume {:verifier.code 0} true;
    $i185 := $ult.i32($i183, $i184);
    goto corral_source_split_3611;

  corral_source_split_3611:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i185 == 1);
    goto corral_source_split_3754;

  corral_source_split_3754:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb36:
    assume $i185 == 1;
    assume {:verifier.code 0} true;
    $i64 := $i183;
    goto $bb36_dummy;

  $bb33:
    assume $i181 == 1;
    goto corral_source_split_3751;

  corral_source_split_3751:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1537} vslice_dummy_var_91 := __dynamic_pr_debug.ref.ref($p5, .str.17);
    goto corral_source_split_3752;

  corral_source_split_3752:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb19:
    assume $i108 == 1;
    goto corral_source_split_3654;

  corral_source_split_3654:
    assume {:verifier.code 0} true;
    $i109, $i110 := 0, $i72;
    goto $bb22;

  $bb22:
    call $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i120, $i121, $i122, $p123, $p124, $p125, $i126, $i127, $p128, $i129, $i130, $p131, $i132, $i133, $p134, $i135, $i136, $p137, $i138, $i139, $p140, $i141, $i142, $p143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $i154, $i155, $i156, $i109, $i110, vslice_dummy_var_90 := INFTL_dumpVUchains_loop_$bb22($p0, $p4, $p106, $i111, $i112, $i113, $p114, $p115, $p116, $i117, $i118, $i119, $i120, $i121, $i122, $p123, $p124, $p125, $i126, $i127, $p128, $i129, $i130, $p131, $i132, $i133, $p134, $i135, $i136, $p137, $i138, $i139, $p140, $i141, $i142, $p143, $i144, $i145, $p146, $i147, $i148, $i149, $i150, $i151, $i152, $i154, $i155, $i156, $i109, $i110, vslice_dummy_var_90);
    goto $bb22_last;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i111 := $sext.i32.i64($i110);
    call {:si_unique_call 1502} {:cexpr "__cil_tmp57"} boogie_si_record_i64($i111);
    goto corral_source_split_3658;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    $i112 := $p2i.ref.i64($p0);
    call {:si_unique_call 1503} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i112);
    goto corral_source_split_3659;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    $i113 := $add.i64($i112, 544);
    call {:si_unique_call 1504} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i113);
    goto corral_source_split_3660;

  corral_source_split_3660:
    assume {:verifier.code 0} true;
    $p114 := $i2p.i64.ref($i113);
    goto corral_source_split_3661;

  corral_source_split_3661:
    assume {:verifier.code 0} true;
    $p115 := $load.ref($M.1, $p114);
    goto corral_source_split_3662;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    $p116 := $add.ref($p115, $mul.ref($i111, 2));
    goto corral_source_split_3663;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    $i117 := $load.i16($M.1, $p116);
    call {:si_unique_call 1505} {:cexpr "__cil_tmp62"} boogie_si_record_i16($i117);
    goto corral_source_split_3664;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    $i118 := $zext.i16.i32($i117);
    call {:si_unique_call 1506} {:cexpr "__cil_tmp63"} boogie_si_record_i32($i118);
    goto corral_source_split_3665;

  corral_source_split_3665:
    assume {:verifier.code 0} true;
    $i119 := $eq.i32($i118, 65535);
    goto corral_source_split_3666;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i120 := $sext.i32.i64($i110);
    call {:si_unique_call 1518} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i120);
    goto corral_source_split_3702;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p0);
    call {:si_unique_call 1519} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i121);
    goto corral_source_split_3703;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, 544);
    call {:si_unique_call 1520} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i122);
    goto corral_source_split_3704;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_3705;

  corral_source_split_3705:
    assume {:verifier.code 0} true;
    $p124 := $load.ref($M.1, $p123);
    goto corral_source_split_3706;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    $p125 := $add.ref($p124, $mul.ref($i120, 2));
    goto corral_source_split_3707;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    $i126 := $load.i16($M.1, $p125);
    call {:si_unique_call 1521} {:cexpr "__cil_tmp69"} boogie_si_record_i16($i126);
    goto corral_source_split_3708;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    $i127 := $zext.i16.i32($i126);
    call {:si_unique_call 1522} {:cexpr "block"} boogie_si_record_i32($i127);
    goto corral_source_split_3709;

  corral_source_split_3709:
    assume {:verifier.code 0} true;
    $p128 := $bitcast.ref.ref($p4);
    goto corral_source_split_3710;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p128, .str);
    goto corral_source_split_3711;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p4);
    goto corral_source_split_3712;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 8);
    call {:si_unique_call 1523} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i130);
    goto corral_source_split_3713;

  corral_source_split_3713:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_3714;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p131, .str.13);
    goto corral_source_split_3715;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    $i132 := $p2i.ref.i64($p4);
    goto corral_source_split_3716;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    $i133 := $add.i64($i132, 16);
    call {:si_unique_call 1524} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i133);
    goto corral_source_split_3717;

  corral_source_split_3717:
    assume {:verifier.code 0} true;
    $p134 := $i2p.i64.ref($i133);
    goto corral_source_split_3718;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p134, .str.2);
    goto corral_source_split_3719;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    $i135 := $p2i.ref.i64($p4);
    goto corral_source_split_3720;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    $i136 := $add.i64($i135, 24);
    call {:si_unique_call 1525} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i136);
    goto corral_source_split_3721;

  corral_source_split_3721:
    assume {:verifier.code 0} true;
    $p137 := $i2p.i64.ref($i136);
    goto corral_source_split_3722;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p137, .str.16);
    goto corral_source_split_3723;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    $i138 := $p2i.ref.i64($p4);
    goto corral_source_split_3724;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    $i139 := $add.i64($i138, 32);
    call {:si_unique_call 1526} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i139);
    goto corral_source_split_3725;

  corral_source_split_3725:
    assume {:verifier.code 0} true;
    $p140 := $i2p.i64.ref($i139);
    goto corral_source_split_3726;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p140, 543);
    goto corral_source_split_3727;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    $i141 := $p2i.ref.i64($p4);
    goto corral_source_split_3728;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    $i142 := $add.i64($i141, 35);
    call {:si_unique_call 1527} {:cexpr "__cil_tmp75"} boogie_si_record_i64($i142);
    goto corral_source_split_3729;

  corral_source_split_3729:
    assume {:verifier.code 0} true;
    $p143 := $i2p.i64.ref($i142);
    goto corral_source_split_3730;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p143, 0);
    goto corral_source_split_3731;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    $i144 := $p2i.ref.i64($p4);
    goto corral_source_split_3732;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    $i145 := $add.i64($i144, 35);
    call {:si_unique_call 1528} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i145);
    goto corral_source_split_3733;

  corral_source_split_3733:
    assume {:verifier.code 0} true;
    $p146 := $i2p.i64.ref($i145);
    goto corral_source_split_3734;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    $i147 := $load.i8($M.1, $p146);
    call {:si_unique_call 1529} {:cexpr "__cil_tmp77"} boogie_si_record_i8($i147);
    goto corral_source_split_3735;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    $i148 := $zext.i8.i64($i147);
    call {:si_unique_call 1530} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i148);
    goto corral_source_split_3736;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    $i149 := $and.i64($i148, 1);
    call {:si_unique_call 1531} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i149);
    goto corral_source_split_3737;

  corral_source_split_3737:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1532} $i150 := __builtinx_expect.i64.i64($i149, 0);
    goto corral_source_split_3738;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    $i151 := $sext.i32.i64($i150);
    call {:si_unique_call 1533} {:cexpr "tmp___2"} boogie_si_record_i64($i151);
    goto corral_source_split_3739;

  corral_source_split_3739:
    assume {:verifier.code 0} true;
    $i152 := $ne.i64($i151, 0);
    goto corral_source_split_3740;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i152 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i154 := $add.i32($i109, 1);
    call {:si_unique_call 1535} {:cexpr "i"} boogie_si_record_i32($i154);
    goto corral_source_split_3745;

  corral_source_split_3745:
    assume {:verifier.code 0} true;
    $i155 := $load.i32($M.1, $p106);
    call {:si_unique_call 1536} {:cexpr "__cil_tmp82"} boogie_si_record_i32($i155);
    goto corral_source_split_3746;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    $i156 := $ult.i32($i154, $i155);
    goto corral_source_split_3747;

  corral_source_split_3747:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i156 == 1);
    goto corral_source_split_3749;

  corral_source_split_3749:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb31:
    assume $i156 == 1;
    assume {:verifier.code 0} true;
    $i109, $i110 := $i154, $i127;
    goto $bb31_dummy;

  $bb28:
    assume $i152 == 1;
    goto corral_source_split_3742;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1534} vslice_dummy_var_90 := __dynamic_pr_debug.ref.ref.i32($p4, .str.16, $i127);
    goto corral_source_split_3743;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb24:
    assume $i119 == 1;
    goto corral_source_split_3668;

  corral_source_split_3668:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb16:
    assume $i102 == 1;
    goto corral_source_split_3645;

  corral_source_split_3645:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1498} vslice_dummy_var_89 := __dynamic_pr_debug.ref.ref.i32.i32($p3, .str.15, $i64, $i72);
    goto corral_source_split_3646;

  corral_source_split_3646:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb12:
    assume $i77 == 1;
    goto corral_source_split_3607;

  corral_source_split_3607:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb4:
    assume $i57 == 1;
    goto corral_source_split_3580;

  corral_source_split_3580:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1473} vslice_dummy_var_88 := __dynamic_pr_debug.ref.ref($p2, .str.14);
    goto corral_source_split_3581;

  corral_source_split_3581:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i31 == 1;
    goto corral_source_split_3545;

  corral_source_split_3545:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1461} vslice_dummy_var_87 := __dynamic_pr_debug.ref.ref($p1, .str.6);
    goto corral_source_split_3546;

  corral_source_split_3546:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb31_dummy:
    assume false;
    return;

  $bb22_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3656;

  $bb36_dummy:
    assume false;
    return;

  $bb10_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_3591;
}



const INFTL_formatblock: ref;

axiom INFTL_formatblock == $sub.ref(0, 139737);

procedure INFTL_formatblock($p0: ref, $i1: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_formatblock($p0: ref, $i1: i32) returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i8;
  var $i32: i64;
  var $i33: i64;
  var $i34: i32;
  var $i35: i64;
  var $i36: i1;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $p58: ref;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i64;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $p74: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i64;
  var $i87: i32;
  var $i88: i64;
  var $i89: i64;
  var $p90: ref;
  var $i91: i64;
  var $i92: i32;
  var $i93: i32;
  var $i94: i1;
  var $i95: i64;
  var $i96: i64;
  var $p97: ref;
  var $i98: i64;
  var $i99: i32;
  var $i100: i32;
  var $i101: i64;
  var $i102: i64;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i64;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i32;
  var $i114: i1;
  var $i70: i32;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i64;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i64;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i64;
  var $i130: i64;
  var $i131: i64;
  var $p132: ref;
  var $i133: i64;
  var $i134: i64;
  var $i135: i64;
  var $p136: ref;
  var $i137: i64;
  var $i138: i64;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i145: i64;
  var $p146: ref;
  var $i147: i64;
  var $i148: i64;
  var $p149: ref;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $i153: i32;
  var $i154: i1;
  var $i156: i64;
  var $i157: i64;
  var $p158: ref;
  var $p159: ref;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i64;
  var $i155: i32;
  var cmdloc_dummy_var_10: [ref]i8;
  var cmdloc_dummy_var_11: [ref]i8;
  var vslice_dummy_var_93: i32;
  var vslice_dummy_var_94: i32;
  var vslice_dummy_var_95: i32;
  var vslice_dummy_var_96: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1550} $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1551} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1552} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 1553} {:cexpr "INFTL_formatblock:arg:block"} boogie_si_record_i32($i1);
    goto corral_source_split_3791;

  corral_source_split_3791:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p0);
    call {:si_unique_call 1554} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i5);
    goto corral_source_split_3792;

  corral_source_split_3792:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 568);
    call {:si_unique_call 1555} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i6);
    goto corral_source_split_3793;

  corral_source_split_3793:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_3794;

  corral_source_split_3794:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p0);
    call {:si_unique_call 1556} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i8);
    goto corral_source_split_3795;

  corral_source_split_3795:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 24);
    call {:si_unique_call 1557} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i9);
    goto corral_source_split_3796;

  corral_source_split_3796:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_3797;

  corral_source_split_3797:
    assume {:verifier.code 0} true;
    $p11 := $load.ref($M.1, $p10);
    goto corral_source_split_3798;

  corral_source_split_3798:
    assume {:verifier.code 0} true;
    $p12 := $bitcast.ref.ref($p4);
    goto corral_source_split_3799;

  corral_source_split_3799:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p12, .str);
    goto corral_source_split_3800;

  corral_source_split_3800:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p4);
    goto corral_source_split_3801;

  corral_source_split_3801:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 8);
    call {:si_unique_call 1558} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i14);
    goto corral_source_split_3802;

  corral_source_split_3802:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_3803;

  corral_source_split_3803:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p15, .str.1);
    goto corral_source_split_3804;

  corral_source_split_3804:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p4);
    goto corral_source_split_3805;

  corral_source_split_3805:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 16);
    call {:si_unique_call 1559} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i17);
    goto corral_source_split_3806;

  corral_source_split_3806:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_3807;

  corral_source_split_3807:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p18, .str.2);
    goto corral_source_split_3808;

  corral_source_split_3808:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p4);
    goto corral_source_split_3809;

  corral_source_split_3809:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 24);
    call {:si_unique_call 1560} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i20);
    goto corral_source_split_3810;

  corral_source_split_3810:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_3811;

  corral_source_split_3811:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p21, .str.3);
    goto corral_source_split_3812;

  corral_source_split_3812:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p4);
    goto corral_source_split_3813;

  corral_source_split_3813:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 32);
    call {:si_unique_call 1561} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i23);
    goto corral_source_split_3814;

  corral_source_split_3814:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_3815;

  corral_source_split_3815:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p24, 395);
    goto corral_source_split_3816;

  corral_source_split_3816:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p4);
    goto corral_source_split_3817;

  corral_source_split_3817:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 35);
    call {:si_unique_call 1562} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i26);
    goto corral_source_split_3818;

  corral_source_split_3818:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_3819;

  corral_source_split_3819:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p27, 0);
    goto corral_source_split_3820;

  corral_source_split_3820:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p4);
    goto corral_source_split_3821;

  corral_source_split_3821:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 35);
    call {:si_unique_call 1563} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i29);
    goto corral_source_split_3822;

  corral_source_split_3822:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_3823;

  corral_source_split_3823:
    assume {:verifier.code 0} true;
    $i31 := $load.i8($M.1, $p30);
    call {:si_unique_call 1564} {:cexpr "__cil_tmp24"} boogie_si_record_i8($i31);
    goto corral_source_split_3824;

  corral_source_split_3824:
    assume {:verifier.code 0} true;
    $i32 := $zext.i8.i64($i31);
    call {:si_unique_call 1565} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i32);
    goto corral_source_split_3825;

  corral_source_split_3825:
    assume {:verifier.code 0} true;
    $i33 := $and.i64($i32, 1);
    call {:si_unique_call 1566} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i33);
    goto corral_source_split_3826;

  corral_source_split_3826:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1567} $i34 := __builtinx_expect.i64.i64($i33, 0);
    goto corral_source_split_3827;

  corral_source_split_3827:
    assume {:verifier.code 0} true;
    $i35 := $sext.i32.i64($i34);
    call {:si_unique_call 1568} {:cexpr "tmp"} boogie_si_record_i64($i35);
    goto corral_source_split_3828;

  corral_source_split_3828:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, 0);
    goto corral_source_split_3829;

  corral_source_split_3829:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p38 := $bitcast.ref.ref($p7);
    goto corral_source_split_3834;

  corral_source_split_3834:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_10 := $M.1;
    call {:si_unique_call 1570} cmdloc_dummy_var_11 := $memset.i8(cmdloc_dummy_var_10, $p38, 0, 88, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_11;
    goto corral_source_split_3835;

  corral_source_split_3835:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p0);
    call {:si_unique_call 1571} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i39);
    goto corral_source_split_3836;

  corral_source_split_3836:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 24);
    call {:si_unique_call 1572} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i40);
    goto corral_source_split_3837;

  corral_source_split_3837:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_3838;

  corral_source_split_3838:
    assume {:verifier.code 0} true;
    $p42 := $load.ref($M.1, $p41);
    goto corral_source_split_3839;

  corral_source_split_3839:
    assume {:verifier.code 0} true;
    $p43 := $bitcast.ref.ref($p7);
    goto corral_source_split_3840;

  corral_source_split_3840:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p43, $p42);
    goto corral_source_split_3841;

  corral_source_split_3841:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p7);
    call {:si_unique_call 1573} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i44);
    goto corral_source_split_3842;

  corral_source_split_3842:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 8);
    call {:si_unique_call 1574} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i45);
    call {:si_unique_call 1575} {:cexpr "INFTL_formatblock:arg:__cil_tmp33"} boogie_si_record_i32($i1);
    goto corral_source_split_3843;

  corral_source_split_3843:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p0);
    call {:si_unique_call 1576} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i46);
    goto corral_source_split_3844;

  corral_source_split_3844:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, 356);
    call {:si_unique_call 1577} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i47);
    goto corral_source_split_3845;

  corral_source_split_3845:
    assume {:verifier.code 0} true;
    $p48 := $i2p.i64.ref($i47);
    goto corral_source_split_3846;

  corral_source_split_3846:
    assume {:verifier.code 0} true;
    $i49 := $load.i32($M.1, $p48);
    call {:si_unique_call 1578} {:cexpr "__cil_tmp36"} boogie_si_record_i32($i49);
    goto corral_source_split_3847;

  corral_source_split_3847:
    assume {:verifier.code 0} true;
    $i50 := $mul.i32($i49, $i1);
    call {:si_unique_call 1579} {:cexpr "__cil_tmp37"} boogie_si_record_i32($i50);
    goto corral_source_split_3848;

  corral_source_split_3848:
    assume {:verifier.code 0} true;
    $i51 := $zext.i32.i64($i50);
    goto corral_source_split_3849;

  corral_source_split_3849:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i45);
    goto corral_source_split_3850;

  corral_source_split_3850:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p52, $i51);
    goto corral_source_split_3851;

  corral_source_split_3851:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p7);
    call {:si_unique_call 1580} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i53);
    goto corral_source_split_3852;

  corral_source_split_3852:
    assume {:verifier.code 0} true;
    $i54 := $add.i64($i53, 16);
    call {:si_unique_call 1581} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i54);
    goto corral_source_split_3853;

  corral_source_split_3853:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p0);
    call {:si_unique_call 1582} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i55);
    goto corral_source_split_3854;

  corral_source_split_3854:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 24);
    call {:si_unique_call 1583} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i56);
    goto corral_source_split_3855;

  corral_source_split_3855:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_3856;

  corral_source_split_3856:
    assume {:verifier.code 0} true;
    $p58 := $load.ref($M.1, $p57);
    goto corral_source_split_3857;

  corral_source_split_3857:
    assume {:verifier.code 0} true;
    $i59 := $p2i.ref.i64($p58);
    call {:si_unique_call 1584} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i59);
    goto corral_source_split_3858;

  corral_source_split_3858:
    assume {:verifier.code 0} true;
    $i60 := $add.i64($i59, 16);
    call {:si_unique_call 1585} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i60);
    goto corral_source_split_3859;

  corral_source_split_3859:
    assume {:verifier.code 0} true;
    $p61 := $i2p.i64.ref($i60);
    goto corral_source_split_3860;

  corral_source_split_3860:
    assume {:verifier.code 0} true;
    $i62 := $load.i32($M.1, $p61);
    call {:si_unique_call 1586} {:cexpr "__cil_tmp46"} boogie_si_record_i32($i62);
    goto corral_source_split_3861;

  corral_source_split_3861:
    assume {:verifier.code 0} true;
    $i63 := $zext.i32.i64($i62);
    goto corral_source_split_3862;

  corral_source_split_3862:
    assume {:verifier.code 0} true;
    $p64 := $i2p.i64.ref($i54);
    goto corral_source_split_3863;

  corral_source_split_3863:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p64, $i63);
    goto corral_source_split_3864;

  corral_source_split_3864:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p0);
    call {:si_unique_call 1587} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i65);
    goto corral_source_split_3865;

  corral_source_split_3865:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 356);
    call {:si_unique_call 1588} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i66);
    goto corral_source_split_3866;

  corral_source_split_3866:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_3867;

  corral_source_split_3867:
    assume {:verifier.code 0} true;
    $i68 := $load.i32($M.1, $p67);
    call {:si_unique_call 1589} {:cexpr "__cil_tmp79"} boogie_si_record_i32($i68);
    goto corral_source_split_3868;

  corral_source_split_3868:
    assume {:verifier.code 0} true;
    $i69 := $ult.i32(0, $i68);
    goto corral_source_split_3869;

  corral_source_split_3869:
    assume {:verifier.code 0} true;
    assume {:branchcond $i69} true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i69 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i115 := $p2i.ref.i64($p3);
    goto corral_source_split_3939;

  corral_source_split_3939:
    assume {:verifier.code 0} true;
    $i116 := $add.i64($i115, 4);
    call {:si_unique_call 1628} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i116);
    goto corral_source_split_3940;

  corral_source_split_3940:
    assume {:verifier.code 0} true;
    $p117 := $i2p.i64.ref($i116);
    goto corral_source_split_3941;

  corral_source_split_3941:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p117, 15465);
    goto corral_source_split_3942;

  corral_source_split_3942:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p3);
    goto corral_source_split_3943;

  corral_source_split_3943:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 6);
    call {:si_unique_call 1629} {:cexpr "__cil_tmp82"} boogie_si_record_i64($i119);
    goto corral_source_split_3944;

  corral_source_split_3944:
    assume {:verifier.code 0} true;
    $p120 := $i2p.i64.ref($i119);
    goto corral_source_split_3945;

  corral_source_split_3945:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p120, 15465);
    goto corral_source_split_3946;

  corral_source_split_3946:
    assume {:verifier.code 0} true;
    $i121 := $add.i64(0, 0);
    call {:si_unique_call 1630} {:cexpr "__cil_tmp84"} boogie_si_record_i64($i121);
    goto corral_source_split_3947;

  corral_source_split_3947:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p3);
    goto corral_source_split_3948;

  corral_source_split_3948:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, $i121);
    call {:si_unique_call 1631} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i123);
    goto corral_source_split_3949;

  corral_source_split_3949:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_3950;

  corral_source_split_3950:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p124, 0);
    goto corral_source_split_3951;

  corral_source_split_3951:
    assume {:verifier.code 0} true;
    $i125 := $add.i64(0, 1);
    call {:si_unique_call 1632} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i125);
    goto corral_source_split_3952;

  corral_source_split_3952:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p3);
    goto corral_source_split_3953;

  corral_source_split_3953:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, $i125);
    call {:si_unique_call 1633} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i127);
    goto corral_source_split_3954;

  corral_source_split_3954:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_3955;

  corral_source_split_3955:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p128, 0);
    goto corral_source_split_3956;

  corral_source_split_3956:
    assume {:verifier.code 0} true;
    $i129 := $add.i64(0, 2);
    call {:si_unique_call 1634} {:cexpr "__cil_tmp90"} boogie_si_record_i64($i129);
    goto corral_source_split_3957;

  corral_source_split_3957:
    assume {:verifier.code 0} true;
    $i130 := $p2i.ref.i64($p3);
    goto corral_source_split_3958;

  corral_source_split_3958:
    assume {:verifier.code 0} true;
    $i131 := $add.i64($i130, $i129);
    call {:si_unique_call 1635} {:cexpr "__cil_tmp91"} boogie_si_record_i64($i131);
    goto corral_source_split_3959;

  corral_source_split_3959:
    assume {:verifier.code 0} true;
    $p132 := $i2p.i64.ref($i131);
    goto corral_source_split_3960;

  corral_source_split_3960:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p132, 0);
    goto corral_source_split_3961;

  corral_source_split_3961:
    assume {:verifier.code 0} true;
    $i133 := $add.i64(0, 3);
    call {:si_unique_call 1636} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i133);
    goto corral_source_split_3962;

  corral_source_split_3962:
    assume {:verifier.code 0} true;
    $i134 := $p2i.ref.i64($p3);
    goto corral_source_split_3963;

  corral_source_split_3963:
    assume {:verifier.code 0} true;
    $i135 := $add.i64($i134, $i133);
    call {:si_unique_call 1637} {:cexpr "__cil_tmp94"} boogie_si_record_i64($i135);
    goto corral_source_split_3964;

  corral_source_split_3964:
    assume {:verifier.code 0} true;
    $p136 := $i2p.i64.ref($i135);
    goto corral_source_split_3965;

  corral_source_split_3965:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p136, 0);
    goto corral_source_split_3966;

  corral_source_split_3966:
    assume {:verifier.code 0} true;
    $i137 := $p2i.ref.i64($p7);
    call {:si_unique_call 1638} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i137);
    goto corral_source_split_3967;

  corral_source_split_3967:
    assume {:verifier.code 0} true;
    $i138 := $add.i64($i137, 8);
    call {:si_unique_call 1639} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i138);
    call {:si_unique_call 1640} {:cexpr "INFTL_formatblock:arg:__cil_tmp97"} boogie_si_record_i32($i1);
    goto corral_source_split_3968;

  corral_source_split_3968:
    assume {:verifier.code 0} true;
    $i139 := $p2i.ref.i64($p0);
    call {:si_unique_call 1641} {:cexpr "__cil_tmp98"} boogie_si_record_i64($i139);
    goto corral_source_split_3969;

  corral_source_split_3969:
    assume {:verifier.code 0} true;
    $i140 := $add.i64($i139, 356);
    call {:si_unique_call 1642} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i140);
    goto corral_source_split_3970;

  corral_source_split_3970:
    assume {:verifier.code 0} true;
    $p141 := $i2p.i64.ref($i140);
    goto corral_source_split_3971;

  corral_source_split_3971:
    assume {:verifier.code 0} true;
    $i142 := $load.i32($M.1, $p141);
    call {:si_unique_call 1643} {:cexpr "__cil_tmp100"} boogie_si_record_i32($i142);
    goto corral_source_split_3972;

  corral_source_split_3972:
    assume {:verifier.code 0} true;
    $i143 := $mul.i32($i142, $i1);
    call {:si_unique_call 1644} {:cexpr "__cil_tmp101"} boogie_si_record_i32($i143);
    goto corral_source_split_3973;

  corral_source_split_3973:
    assume {:verifier.code 0} true;
    $i144 := $add.i32($i143, 1024);
    call {:si_unique_call 1645} {:cexpr "__cil_tmp102"} boogie_si_record_i32($i144);
    goto corral_source_split_3974;

  corral_source_split_3974:
    assume {:verifier.code 0} true;
    $i145 := $zext.i32.i64($i144);
    goto corral_source_split_3975;

  corral_source_split_3975:
    assume {:verifier.code 0} true;
    $p146 := $i2p.i64.ref($i138);
    goto corral_source_split_3976;

  corral_source_split_3976:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p146, $i145);
    goto corral_source_split_3977;

  corral_source_split_3977:
    assume {:verifier.code 0} true;
    $i147 := $p2i.ref.i64($p7);
    call {:si_unique_call 1646} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i147);
    goto corral_source_split_3978;

  corral_source_split_3978:
    assume {:verifier.code 0} true;
    $i148 := $add.i64($i147, 8);
    call {:si_unique_call 1647} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i148);
    goto corral_source_split_3979;

  corral_source_split_3979:
    assume {:verifier.code 0} true;
    $p149 := $i2p.i64.ref($i148);
    goto corral_source_split_3980;

  corral_source_split_3980:
    assume {:verifier.code 0} true;
    $i150 := $load.i64($M.1, $p149);
    call {:si_unique_call 1648} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i150);
    goto corral_source_split_3981;

  corral_source_split_3981:
    assume {:verifier.code 0} true;
    $i151 := $add.i64($i150, 8);
    call {:si_unique_call 1649} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i151);
    goto corral_source_split_3982;

  corral_source_split_3982:
    assume {:verifier.code 0} true;
    $p152 := $bitcast.ref.ref($p3);
    goto corral_source_split_3983;

  corral_source_split_3983:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1650} $i153 := inftl_write_oob($p11, $i151, 8, $p2, $p152);
    call {:si_unique_call 1651} {:cexpr "tmp___1"} boogie_si_record_i32($i153);
    goto corral_source_split_3984;

  corral_source_split_3984:
    assume {:verifier.code 0} true;
    $i154 := $slt.i32($i153, 0);
    goto corral_source_split_3985;

  corral_source_split_3985:
    assume {:verifier.code 0} true;
    assume {:branchcond $i154} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i154 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i155 := 0;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto corral_source_split_3989;

  corral_source_split_3989:
    assume {:verifier.code 0} true;
    $r := $i155;
    return;

  $bb19:
    assume $i154 == 1;
    goto corral_source_split_3987;

  corral_source_split_3987:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i156 := $p2i.ref.i64($p0);
    call {:si_unique_call 1598} {:cexpr "__cil_tmp110"} boogie_si_record_i64($i156);
    goto corral_source_split_3890;

  corral_source_split_3890:
    assume {:verifier.code 0} true;
    $i157 := $add.i64($i156, 24);
    call {:si_unique_call 1599} {:cexpr "__cil_tmp111"} boogie_si_record_i64($i157);
    goto corral_source_split_3891;

  corral_source_split_3891:
    assume {:verifier.code 0} true;
    $p158 := $i2p.i64.ref($i157);
    goto corral_source_split_3892;

  corral_source_split_3892:
    assume {:verifier.code 0} true;
    $p159 := $load.ref($M.1, $p158);
    goto corral_source_split_3893;

  corral_source_split_3893:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p7);
    call {:si_unique_call 1600} {:cexpr "__cil_tmp113"} boogie_si_record_i64($i160);
    goto corral_source_split_3894;

  corral_source_split_3894:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 8);
    call {:si_unique_call 1601} {:cexpr "__cil_tmp114"} boogie_si_record_i64($i161);
    goto corral_source_split_3895;

  corral_source_split_3895:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_3896;

  corral_source_split_3896:
    assume {:verifier.code 0} true;
    $i163 := $load.i64($M.1, $p162);
    call {:si_unique_call 1602} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i163);
    goto corral_source_split_3897;

  corral_source_split_3897:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1603} vslice_dummy_var_96 := mtd_block_markbad($p159, $i163);
    goto corral_source_split_3898;

  corral_source_split_3898:
    assume {:verifier.code 0} true;
    $i155 := $sub.i32(0, 1);
    goto $bb22;

  $bb4:
    assume $i69 == 1;
    goto corral_source_split_3871;

  corral_source_split_3871:
    assume {:verifier.code 0} true;
    $i70 := 0;
    goto $bb7;

  $bb7:
    call $i71, $i72, $p73, $p74, $i76, $i77, $p78, $i79, $i80, $i81, $i83, $i84, $p85, $i86, $i87, $i88, $i89, $p90, $i91, $i92, $i93, $i94, $i95, $i96, $p97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $p105, $i106, $i107, $i108, $p109, $i110, $i111, $p112, $i113, $i114, $i70, vslice_dummy_var_94 := INFTL_formatblock_loop_$bb7($p0, $p7, $p67, $i71, $i72, $p73, $p74, $i76, $i77, $p78, $i79, $i80, $i81, $i83, $i84, $p85, $i86, $i87, $i88, $i89, $p90, $i91, $i92, $i93, $i94, $i95, $i96, $p97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $p105, $i106, $i107, $i108, $p109, $i110, $i111, $p112, $i113, $i114, $i70, vslice_dummy_var_94);
    goto $bb7_last;

  corral_source_split_3873:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i71 := $p2i.ref.i64($p0);
    call {:si_unique_call 1590} {:cexpr "__cil_tmp48"} boogie_si_record_i64($i71);
    goto corral_source_split_3875;

  corral_source_split_3875:
    assume {:verifier.code 0} true;
    $i72 := $add.i64($i71, 24);
    call {:si_unique_call 1591} {:cexpr "__cil_tmp49"} boogie_si_record_i64($i72);
    goto corral_source_split_3876;

  corral_source_split_3876:
    assume {:verifier.code 0} true;
    $p73 := $i2p.i64.ref($i72);
    goto corral_source_split_3877;

  corral_source_split_3877:
    assume {:verifier.code 0} true;
    $p74 := $load.ref($M.1, $p73);
    goto corral_source_split_3878;

  corral_source_split_3878:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1592} vslice_dummy_var_94 := mtd_erase($p74, $p7);
    goto corral_source_split_3879;

  corral_source_split_3879:
    assume {:verifier.code 0} true;
    $i76 := $p2i.ref.i64($p7);
    call {:si_unique_call 1593} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i76);
    goto corral_source_split_3880;

  corral_source_split_3880:
    assume {:verifier.code 0} true;
    $i77 := $add.i64($i76, 72);
    call {:si_unique_call 1594} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i77);
    goto corral_source_split_3881;

  corral_source_split_3881:
    assume {:verifier.code 0} true;
    $p78 := $i2p.i64.ref($i77);
    goto corral_source_split_3882;

  corral_source_split_3882:
    assume {:verifier.code 0} true;
    $i79 := $load.i8($M.1, $p78);
    call {:si_unique_call 1595} {:cexpr "__cil_tmp53"} boogie_si_record_i8($i79);
    goto corral_source_split_3883;

  corral_source_split_3883:
    assume {:verifier.code 0} true;
    $i80 := $zext.i8.i32($i79);
    call {:si_unique_call 1596} {:cexpr "__cil_tmp54"} boogie_si_record_i32($i80);
    goto corral_source_split_3884;

  corral_source_split_3884:
    assume {:verifier.code 0} true;
    $i81 := $eq.i32($i80, 16);
    goto corral_source_split_3885;

  corral_source_split_3885:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i81 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i83 := $p2i.ref.i64($p7);
    call {:si_unique_call 1604} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i83);
    goto corral_source_split_3900;

  corral_source_split_3900:
    assume {:verifier.code 0} true;
    $i84 := $add.i64($i83, 8);
    call {:si_unique_call 1605} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i84);
    goto corral_source_split_3901;

  corral_source_split_3901:
    assume {:verifier.code 0} true;
    $p85 := $i2p.i64.ref($i84);
    goto corral_source_split_3902;

  corral_source_split_3902:
    assume {:verifier.code 0} true;
    $i86 := $load.i64($M.1, $p85);
    call {:si_unique_call 1606} {:cexpr "__cil_tmp57"} boogie_si_record_i64($i86);
    goto corral_source_split_3903;

  corral_source_split_3903:
    assume {:verifier.code 0} true;
    $i87 := $trunc.i64.i32($i86);
    call {:si_unique_call 1607} {:cexpr "__cil_tmp58"} boogie_si_record_i32($i87);
    goto corral_source_split_3904;

  corral_source_split_3904:
    assume {:verifier.code 0} true;
    $i88 := $p2i.ref.i64($p7);
    call {:si_unique_call 1608} {:cexpr "__cil_tmp59"} boogie_si_record_i64($i88);
    goto corral_source_split_3905;

  corral_source_split_3905:
    assume {:verifier.code 0} true;
    $i89 := $add.i64($i88, 16);
    call {:si_unique_call 1609} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i89);
    goto corral_source_split_3906;

  corral_source_split_3906:
    assume {:verifier.code 0} true;
    $p90 := $i2p.i64.ref($i89);
    goto corral_source_split_3907;

  corral_source_split_3907:
    assume {:verifier.code 0} true;
    $i91 := $load.i64($M.1, $p90);
    call {:si_unique_call 1610} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i91);
    goto corral_source_split_3908;

  corral_source_split_3908:
    assume {:verifier.code 0} true;
    $i92 := $trunc.i64.i32($i91);
    call {:si_unique_call 1611} {:cexpr "__cil_tmp62"} boogie_si_record_i32($i92);
    goto corral_source_split_3909;

  corral_source_split_3909:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1612} $i93 := check_free_sectors($p0, $i87, $i92, 1);
    call {:si_unique_call 1613} {:cexpr "tmp___0"} boogie_si_record_i32($i93);
    goto corral_source_split_3910;

  corral_source_split_3910:
    assume {:verifier.code 0} true;
    $i94 := $ne.i32($i93, 0);
    goto corral_source_split_3911;

  corral_source_split_3911:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i94 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i95 := $p2i.ref.i64($p7);
    call {:si_unique_call 1614} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i95);
    goto corral_source_split_3915;

  corral_source_split_3915:
    assume {:verifier.code 0} true;
    $i96 := $add.i64($i95, 16);
    call {:si_unique_call 1615} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i96);
    goto corral_source_split_3916;

  corral_source_split_3916:
    assume {:verifier.code 0} true;
    $p97 := $i2p.i64.ref($i96);
    goto corral_source_split_3917;

  corral_source_split_3917:
    assume {:verifier.code 0} true;
    $i98 := $load.i64($M.1, $p97);
    call {:si_unique_call 1616} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i98);
    goto corral_source_split_3918;

  corral_source_split_3918:
    assume {:verifier.code 0} true;
    $i99 := $trunc.i64.i32($i98);
    call {:si_unique_call 1617} {:cexpr "__cil_tmp67"} boogie_si_record_i32($i99);
    goto corral_source_split_3919;

  corral_source_split_3919:
    assume {:verifier.code 0} true;
    $i100 := $add.i32($i99, $i70);
    call {:si_unique_call 1618} {:cexpr "__cil_tmp68"} boogie_si_record_i32($i100);
    goto corral_source_split_3920;

  corral_source_split_3920:
    assume {:verifier.code 0} true;
    $i101 := $p2i.ref.i64($p7);
    call {:si_unique_call 1619} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i101);
    goto corral_source_split_3921;

  corral_source_split_3921:
    assume {:verifier.code 0} true;
    $i102 := $add.i64($i101, 8);
    call {:si_unique_call 1620} {:cexpr "__cil_tmp70"} boogie_si_record_i64($i102);
    goto corral_source_split_3922;

  corral_source_split_3922:
    assume {:verifier.code 0} true;
    $i103 := $p2i.ref.i64($p7);
    call {:si_unique_call 1621} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i103);
    goto corral_source_split_3923;

  corral_source_split_3923:
    assume {:verifier.code 0} true;
    $i104 := $add.i64($i103, 16);
    call {:si_unique_call 1622} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i104);
    goto corral_source_split_3924;

  corral_source_split_3924:
    assume {:verifier.code 0} true;
    $p105 := $i2p.i64.ref($i104);
    goto corral_source_split_3925;

  corral_source_split_3925:
    assume {:verifier.code 0} true;
    $i106 := $load.i64($M.1, $p105);
    call {:si_unique_call 1623} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i106);
    goto corral_source_split_3926;

  corral_source_split_3926:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p7);
    call {:si_unique_call 1624} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i107);
    goto corral_source_split_3927;

  corral_source_split_3927:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 8);
    call {:si_unique_call 1625} {:cexpr "__cil_tmp75"} boogie_si_record_i64($i108);
    goto corral_source_split_3928;

  corral_source_split_3928:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_3929;

  corral_source_split_3929:
    assume {:verifier.code 0} true;
    $i110 := $load.i64($M.1, $p109);
    call {:si_unique_call 1626} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i110);
    goto corral_source_split_3930;

  corral_source_split_3930:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, $i106);
    goto corral_source_split_3931;

  corral_source_split_3931:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i102);
    goto corral_source_split_3932;

  corral_source_split_3932:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p112, $i111);
    goto corral_source_split_3933;

  corral_source_split_3933:
    assume {:verifier.code 0} true;
    $i113 := $load.i32($M.1, $p67);
    call {:si_unique_call 1627} {:cexpr "__cil_tmp79"} boogie_si_record_i32($i113);
    goto corral_source_split_3934;

  corral_source_split_3934:
    assume {:verifier.code 0} true;
    $i114 := $ult.i32($i100, $i113);
    goto corral_source_split_3935;

  corral_source_split_3935:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i114 == 1);
    goto corral_source_split_3937;

  corral_source_split_3937:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb16:
    assume $i114 == 1;
    assume {:verifier.code 0} true;
    $i70 := $i100;
    goto $bb16_dummy;

  $bb13:
    assume $i94 == 1;
    goto corral_source_split_3913;

  corral_source_split_3913:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb9:
    assume $i81 == 1;
    goto corral_source_split_3887;

  corral_source_split_3887:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1597} vslice_dummy_var_95 := printk.ref.i32(.str.4, $i1);
    goto corral_source_split_3888;

  corral_source_split_3888:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb1:
    assume $i36 == 1;
    goto corral_source_split_3831;

  corral_source_split_3831:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1569} vslice_dummy_var_93 := __dynamic_pr_debug.ref.ref.ref.i32($p4, .str.3, $p0, $i1);
    goto corral_source_split_3832;

  corral_source_split_3832:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb16_dummy:
    assume false;
    return;

  $bb7_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_3873;
}



const llvm.memset.p0i8.i64: ref;

axiom llvm.memset.p0i8.i64 == $sub.ref(0, 140769);

procedure llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);



const mtd_erase: ref;

axiom mtd_erase == $sub.ref(0, 141801);

procedure mtd_erase($p0: ref, $p1: ref) returns ($r: i32);
  free requires assertsPassed;



implementation mtd_erase($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_3991;

  corral_source_split_3991:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1652} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 1653} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_3992;

  corral_source_split_3992:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const check_free_sectors: ref;

axiom check_free_sectors == $sub.ref(0, 142833);

procedure check_free_sectors($p0: ref, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation check_free_sectors($p0: ref, $i1: i32, $i2: i32, $i3: i32) returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i1;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i53: i32;
  var $i54: i1;
  var $i23: i32;
  var $i24: i32;
  var $i29: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1654} $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1655} $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    call {:si_unique_call 1656} {:cexpr "check_free_sectors:arg:address"} boogie_si_record_i32($i1);
    call {:si_unique_call 1657} {:cexpr "check_free_sectors:arg:len"} boogie_si_record_i32($i2);
    call {:si_unique_call 1658} {:cexpr "check_free_sectors:arg:check_oob"} boogie_si_record_i32($i3);
    goto corral_source_split_3994;

  corral_source_split_3994:
    assume {:verifier.code 0} true;
    $i6 := $p2i.ref.i64($p0);
    call {:si_unique_call 1659} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i6);
    goto corral_source_split_3995;

  corral_source_split_3995:
    assume {:verifier.code 0} true;
    $i7 := $add.i64($i6, 24);
    call {:si_unique_call 1660} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i7);
    goto corral_source_split_3996;

  corral_source_split_3996:
    assume {:verifier.code 0} true;
    $p8 := $i2p.i64.ref($i7);
    goto corral_source_split_3997;

  corral_source_split_3997:
    assume {:verifier.code 0} true;
    $p9 := $load.ref($M.1, $p8);
    goto corral_source_split_3998;

  corral_source_split_3998:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p9);
    call {:si_unique_call 1661} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i10);
    goto corral_source_split_3999;

  corral_source_split_3999:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 28);
    call {:si_unique_call 1662} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i11);
    goto corral_source_split_4000;

  corral_source_split_4000:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_4001;

  corral_source_split_4001:
    assume {:verifier.code 0} true;
    $i13 := $load.i32($M.1, $p12);
    call {:si_unique_call 1663} {:cexpr "__cil_tmp21"} boogie_si_record_i32($i13);
    goto corral_source_split_4002;

  corral_source_split_4002:
    assume {:verifier.code 0} true;
    $i14 := $add.i32($i13, 512);
    call {:si_unique_call 1664} {:cexpr "__cil_tmp22"} boogie_si_record_i32($i14);
    goto corral_source_split_4003;

  corral_source_split_4003:
    assume {:verifier.code 0} true;
    $i15 := $zext.i32.i64($i14);
    call {:si_unique_call 1665} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i15);
    goto corral_source_split_4004;

  corral_source_split_4004:
    assume {:verifier.code 0} true;
    $i16 := $mul.i64(1, $i15);
    call {:si_unique_call 1666} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i16);
    goto corral_source_split_4005;

  corral_source_split_4005:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1667} $p17 := $alloc($mul.ref(1, $i16));
    goto corral_source_split_4006;

  corral_source_split_4006:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p4, $p17);
    goto corral_source_split_4007;

  corral_source_split_4007:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p0);
    call {:si_unique_call 1668} {:cexpr "__cil_tmp27"} boogie_si_record_i64($i18);
    goto corral_source_split_4008;

  corral_source_split_4008:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 24);
    call {:si_unique_call 1669} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i19);
    goto corral_source_split_4009;

  corral_source_split_4009:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_4010;

  corral_source_split_4010:
    assume {:verifier.code 0} true;
    $p21 := $load.ref($M.1, $p20);
    goto corral_source_split_4011;

  corral_source_split_4011:
    assume {:verifier.code 0} true;
    $i22 := $slt.i32(0, $i2);
    goto corral_source_split_4012;

  corral_source_split_4012:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i22 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i29 := 0;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto corral_source_split_4025;

  corral_source_split_4025:
    assume {:verifier.code 0} true;
    $r := $i29;
    return;

  $bb1:
    assume $i22 == 1;
    goto corral_source_split_4014;

  corral_source_split_4014:
    assume {:verifier.code 0} true;
    $i23, $i24 := 0, $i1;
    goto $bb4;

  $bb4:
    call $i25, $p26, $i27, $i28, $p30, $i31, $i32, $i33, $i34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p44, $p45, $i46, $i47, $p48, $i49, $i50, $i51, $i52, $i53, $i54, $i23, $i24 := check_free_sectors_loop_$bb4($i2, $i3, $p4, $p5, $p21, $i25, $p26, $i27, $i28, $p30, $i31, $i32, $i33, $i34, $i35, $i36, $p37, $i38, $i39, $p40, $p41, $i42, $i43, $p44, $p45, $i46, $i47, $p48, $i49, $i50, $i51, $i52, $i53, $i54, $i23, $i24);
    goto $bb4_last;

  corral_source_split_4016:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i25 := $zext.i32.i64($i24);
    call {:si_unique_call 1670} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i25);
    goto corral_source_split_4018;

  corral_source_split_4018:
    assume {:verifier.code 0} true;
    $p26 := $bitcast.ref.ref($p4);
    goto corral_source_split_4019;

  corral_source_split_4019:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1671} $i27 := mtd_read($p21, $i25, 512, $p5, $p26);
    call {:si_unique_call 1672} {:cexpr "tmp___0"} boogie_si_record_i32($i27);
    goto corral_source_split_4020;

  corral_source_split_4020:
    assume {:verifier.code 0} true;
    $i28 := $ne.i32($i27, 0);
    goto corral_source_split_4021;

  corral_source_split_4021:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i28 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $p30 := $bitcast.ref.ref($p4);
    goto corral_source_split_4027;

  corral_source_split_4027:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1673} $i31 := memcmpb($p30, 255, 512);
    call {:si_unique_call 1674} {:cexpr "tmp___1"} boogie_si_record_i32($i31);
    goto corral_source_split_4028;

  corral_source_split_4028:
    assume {:verifier.code 0} true;
    $i32 := $ne.i32($i31, 0);
    goto corral_source_split_4029;

  corral_source_split_4029:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i32 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i33 := $ne.i32($i3, 0);
    goto corral_source_split_4033;

  corral_source_split_4033:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i24, 512);
    call {:si_unique_call 1687} {:cexpr "address"} boogie_si_record_i32($i52);
    goto corral_source_split_4060;

  corral_source_split_4060:
    assume {:verifier.code 0} true;
    $i53 := $add.i32($i23, 512);
    call {:si_unique_call 1688} {:cexpr "i"} boogie_si_record_i32($i53);
    goto corral_source_split_4061;

  corral_source_split_4061:
    assume {:verifier.code 0} true;
    $i54 := $slt.i32($i53, $i2);
    goto corral_source_split_4062;

  corral_source_split_4062:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i54 == 1);
    goto corral_source_split_4064;

  corral_source_split_4064:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb22:
    assume $i54 == 1;
    assume {:verifier.code 0} true;
    $i23, $i24 := $i53, $i52;
    goto $bb22_dummy;

  $bb13:
    assume $i33 == 1;
    goto corral_source_split_4035;

  corral_source_split_4035:
    assume {:verifier.code 0} true;
    $i34 := $zext.i32.i64($i24);
    call {:si_unique_call 1675} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i34);
    goto corral_source_split_4036;

  corral_source_split_4036:
    assume {:verifier.code 0} true;
    $i35 := $p2i.ref.i64($p21);
    call {:si_unique_call 1676} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i35);
    goto corral_source_split_4037;

  corral_source_split_4037:
    assume {:verifier.code 0} true;
    $i36 := $add.i64($i35, 28);
    call {:si_unique_call 1677} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i36);
    goto corral_source_split_4038;

  corral_source_split_4038:
    assume {:verifier.code 0} true;
    $p37 := $i2p.i64.ref($i36);
    goto corral_source_split_4039;

  corral_source_split_4039:
    assume {:verifier.code 0} true;
    $i38 := $load.i32($M.1, $p37);
    call {:si_unique_call 1678} {:cexpr "__cil_tmp35"} boogie_si_record_i32($i38);
    goto corral_source_split_4040;

  corral_source_split_4040:
    assume {:verifier.code 0} true;
    $i39 := $zext.i32.i64($i38);
    call {:si_unique_call 1679} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i39);
    goto corral_source_split_4041;

  corral_source_split_4041:
    assume {:verifier.code 0} true;
    $p40 := $bitcast.ref.ref($p4);
    goto corral_source_split_4042;

  corral_source_split_4042:
    assume {:verifier.code 0} true;
    $p41 := $add.ref($p40, $mul.ref(512, 1));
    goto corral_source_split_4043;

  corral_source_split_4043:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1680} $i42 := inftl_read_oob($p21, $i34, $i39, $p5, $p41);
    call {:si_unique_call 1681} {:cexpr "tmp___2"} boogie_si_record_i32($i42);
    goto corral_source_split_4044;

  corral_source_split_4044:
    assume {:verifier.code 0} true;
    $i43 := $slt.i32($i42, 0);
    goto corral_source_split_4045;

  corral_source_split_4045:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i43 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $p44 := $bitcast.ref.ref($p4);
    goto corral_source_split_4049;

  corral_source_split_4049:
    assume {:verifier.code 0} true;
    $p45 := $add.ref($p44, $mul.ref(512, 1));
    goto corral_source_split_4050;

  corral_source_split_4050:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p21);
    call {:si_unique_call 1682} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i46);
    goto corral_source_split_4051;

  corral_source_split_4051:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, 28);
    call {:si_unique_call 1683} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i47);
    goto corral_source_split_4052;

  corral_source_split_4052:
    assume {:verifier.code 0} true;
    $p48 := $i2p.i64.ref($i47);
    goto corral_source_split_4053;

  corral_source_split_4053:
    assume {:verifier.code 0} true;
    $i49 := $load.i32($M.1, $p48);
    call {:si_unique_call 1684} {:cexpr "__cil_tmp43"} boogie_si_record_i32($i49);
    goto corral_source_split_4054;

  corral_source_split_4054:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1685} $i50 := memcmpb($p45, 255, $i49);
    call {:si_unique_call 1686} {:cexpr "tmp___3"} boogie_si_record_i32($i50);
    goto corral_source_split_4055;

  corral_source_split_4055:
    assume {:verifier.code 0} true;
    $i51 := $ne.i32($i50, 0);
    goto corral_source_split_4056;

  corral_source_split_4056:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i51 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb18:
    assume $i51 == 1;
    goto corral_source_split_4058;

  corral_source_split_4058:
    assume {:verifier.code 0} true;
    $i29 := $sub.i32(0, 1);
    goto $bb8;

  $bb15:
    assume $i43 == 1;
    goto corral_source_split_4047;

  corral_source_split_4047:
    assume {:verifier.code 0} true;
    $i29 := $sub.i32(0, 1);
    goto $bb8;

  $bb10:
    assume $i32 == 1;
    goto corral_source_split_4031;

  corral_source_split_4031:
    assume {:verifier.code 0} true;
    $i29 := $sub.i32(0, 1);
    goto $bb8;

  $bb6:
    assume $i28 == 1;
    goto corral_source_split_4023;

  corral_source_split_4023:
    assume {:verifier.code 0} true;
    $i29 := $sub.i32(0, 1);
    goto $bb8;

  $bb22_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4016;
}



const inftl_write_oob: ref;

axiom inftl_write_oob == $sub.ref(0, 143865);

procedure inftl_write_oob($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation inftl_write_oob($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i32;
  var $i30: i32;
  var $i31: i64;
  var $i32: i64;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1689} $p5 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    call {:si_unique_call 1690} {:cexpr "inftl_write_oob:arg:offs"} boogie_si_record_i64($i1);
    call {:si_unique_call 1691} {:cexpr "inftl_write_oob:arg:len"} boogie_si_record_i64($i2);
    goto corral_source_split_4066;

  corral_source_split_4066:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_4067;

  corral_source_split_4067:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p6, 0);
    goto corral_source_split_4068;

  corral_source_split_4068:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p5);
    goto corral_source_split_4069;

  corral_source_split_4069:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 40);
    call {:si_unique_call 1692} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
    goto corral_source_split_4070;

  corral_source_split_4070:
    assume {:verifier.code 0} true;
    $i9 := $trunc.i64.i32($i1);
    call {:si_unique_call 1693} {:cexpr "__cil_tmp10"} boogie_si_record_i32($i9);
    goto corral_source_split_4071;

  corral_source_split_4071:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 1694} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
    goto corral_source_split_4072;

  corral_source_split_4072:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 20);
    call {:si_unique_call 1695} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
    goto corral_source_split_4073;

  corral_source_split_4073:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_4074;

  corral_source_split_4074:
    assume {:verifier.code 0} true;
    $i13 := $load.i32($M.1, $p12);
    call {:si_unique_call 1696} {:cexpr "__cil_tmp13"} boogie_si_record_i32($i13);
    goto corral_source_split_4075;

  corral_source_split_4075:
    assume {:verifier.code 0} true;
    $i14 := $sub.i32($i13, 1);
    call {:si_unique_call 1697} {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
    goto corral_source_split_4076;

  corral_source_split_4076:
    assume {:verifier.code 0} true;
    $i15 := $and.i32($i14, $i9);
    call {:si_unique_call 1698} {:cexpr "__cil_tmp16"} boogie_si_record_i32($i15);
    goto corral_source_split_4077;

  corral_source_split_4077:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i8);
    goto corral_source_split_4078;

  corral_source_split_4078:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p16, $i15);
    goto corral_source_split_4079;

  corral_source_split_4079:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p5);
    goto corral_source_split_4080;

  corral_source_split_4080:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 24);
    call {:si_unique_call 1699} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
    goto corral_source_split_4081;

  corral_source_split_4081:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_4082;

  corral_source_split_4082:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p19, $i2);
    goto corral_source_split_4083;

  corral_source_split_4083:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p5);
    goto corral_source_split_4084;

  corral_source_split_4084:
    assume {:verifier.code 0} true;
    $i21 := $add.i64($i20, 56);
    call {:si_unique_call 1700} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i21);
    goto corral_source_split_4085;

  corral_source_split_4085:
    assume {:verifier.code 0} true;
    $p22 := $i2p.i64.ref($i21);
    goto corral_source_split_4086;

  corral_source_split_4086:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p22, $p4);
    goto corral_source_split_4087;

  corral_source_split_4087:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p5);
    goto corral_source_split_4088;

  corral_source_split_4088:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 48);
    call {:si_unique_call 1701} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i24);
    goto corral_source_split_4089;

  corral_source_split_4089:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_4090;

  corral_source_split_4090:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p25, $0.ref);
    goto corral_source_split_4091;

  corral_source_split_4091:
    assume {:verifier.code 0} true;
    $i26 := $p2i.ref.i64($p0);
    call {:si_unique_call 1702} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i26);
    goto corral_source_split_4092;

  corral_source_split_4092:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($i26, 20);
    call {:si_unique_call 1703} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i27);
    goto corral_source_split_4093;

  corral_source_split_4093:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_4094;

  corral_source_split_4094:
    assume {:verifier.code 0} true;
    $i29 := $load.i32($M.1, $p28);
    call {:si_unique_call 1704} {:cexpr "__cil_tmp22"} boogie_si_record_i32($i29);
    goto corral_source_split_4095;

  corral_source_split_4095:
    assume {:verifier.code 0} true;
    $i30 := $sub.i32(0, $i29);
    call {:si_unique_call 1705} {:cexpr "__cil_tmp23"} boogie_si_record_i32($i30);
    goto corral_source_split_4096;

  corral_source_split_4096:
    assume {:verifier.code 0} true;
    $i31 := $zext.i32.i64($i30);
    call {:si_unique_call 1706} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i31);
    goto corral_source_split_4097;

  corral_source_split_4097:
    assume {:verifier.code 0} true;
    $i32 := $and.i64($i31, $i1);
    call {:si_unique_call 1707} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i32);
    goto corral_source_split_4098;

  corral_source_split_4098:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1708} $i33 := mtd_write_oob($p0, $i32, $p5);
    call {:si_unique_call 1709} {:cexpr "res"} boogie_si_record_i32($i33);
    goto corral_source_split_4099;

  corral_source_split_4099:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p5);
    goto corral_source_split_4100;

  corral_source_split_4100:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 32);
    call {:si_unique_call 1710} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i35);
    goto corral_source_split_4101;

  corral_source_split_4101:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_4102;

  corral_source_split_4102:
    assume {:verifier.code 0} true;
    $i37 := $load.i64($M.1, $p36);
    goto corral_source_split_4103;

  corral_source_split_4103:
    assume {:verifier.code 0} true;
    $M.2 := $store.i64($M.2, $p3, $i37);
    goto corral_source_split_4104;

  corral_source_split_4104:
    assume {:verifier.code 0} true;
    $r := $i33;
    return;
}



const mtd_block_markbad: ref;

axiom mtd_block_markbad == $sub.ref(0, 144897);

procedure mtd_block_markbad($p0: ref, $i1: i64) returns ($r: i32);
  free requires assertsPassed;



implementation mtd_block_markbad($p0: ref, $i1: i64) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1711} {:cexpr "mtd_block_markbad:arg:arg1"} boogie_si_record_i64($i1);
    goto corral_source_split_4106;

  corral_source_split_4106:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1712} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 1713} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_4107;

  corral_source_split_4107:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const mtd_write_oob: ref;

axiom mtd_write_oob == $sub.ref(0, 145929);

procedure mtd_write_oob($p0: ref, $i1: i64, $p2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation mtd_write_oob($p0: ref, $i1: i64, $p2: ref) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i32;
  var $i21: i32;
  var $i22: i1;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i16: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1714} {:cexpr "mtd_write_oob:arg:to"} boogie_si_record_i64($i1);
    goto corral_source_split_4109;

  corral_source_split_4109:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    call {:si_unique_call 1715} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
    goto corral_source_split_4110;

  corral_source_split_4110:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 32);
    call {:si_unique_call 1716} {:cexpr "__cil_tmp7"} boogie_si_record_i64($i4);
    goto corral_source_split_4111;

  corral_source_split_4111:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_4112;

  corral_source_split_4112:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p5, 0);
    goto corral_source_split_4113;

  corral_source_split_4113:
    assume {:verifier.code 0} true;
    $i6 := $p2i.ref.i64($p2);
    call {:si_unique_call 1717} {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
    goto corral_source_split_4114;

  corral_source_split_4114:
    assume {:verifier.code 0} true;
    $i7 := $add.i64($i6, 16);
    call {:si_unique_call 1718} {:cexpr "__cil_tmp9"} boogie_si_record_i64($i7);
    goto corral_source_split_4115;

  corral_source_split_4115:
    assume {:verifier.code 0} true;
    $p8 := $i2p.i64.ref($i7);
    goto corral_source_split_4116;

  corral_source_split_4116:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p8, 0);
    goto corral_source_split_4117;

  corral_source_split_4117:
    assume {:verifier.code 0} true;
    $i9 := $p2i.ref.i64($0.ref);
    call {:si_unique_call 1719} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i9);
    goto corral_source_split_4118;

  corral_source_split_4118:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 1720} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i10);
    goto corral_source_split_4119;

  corral_source_split_4119:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 160);
    call {:si_unique_call 1721} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i11);
    goto corral_source_split_4120;

  corral_source_split_4120:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_4121;

  corral_source_split_4121:
    assume {:verifier.code 0} true;
    $p13 := $load.ref($M.1, $p12);
    goto corral_source_split_4122;

  corral_source_split_4122:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p13);
    call {:si_unique_call 1722} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
    goto corral_source_split_4123;

  corral_source_split_4123:
    assume {:verifier.code 0} true;
    $i15 := $eq.i64($i14, $i9);
    goto corral_source_split_4124;

  corral_source_split_4124:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p0);
    call {:si_unique_call 1723} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i17);
    goto corral_source_split_4130;

  corral_source_split_4130:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 4);
    call {:si_unique_call 1724} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i18);
    goto corral_source_split_4131;

  corral_source_split_4131:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_4132;

  corral_source_split_4132:
    assume {:verifier.code 0} true;
    $i20 := $load.i32($M.1, $p19);
    call {:si_unique_call 1725} {:cexpr "__cil_tmp18"} boogie_si_record_i32($i20);
    goto corral_source_split_4133;

  corral_source_split_4133:
    assume {:verifier.code 0} true;
    $i21 := $and.i32($i20, 1024);
    call {:si_unique_call 1726} {:cexpr "__cil_tmp19"} boogie_si_record_i32($i21);
    goto corral_source_split_4134;

  corral_source_split_4134:
    assume {:verifier.code 0} true;
    $i22 := $eq.i32($i21, 0);
    goto corral_source_split_4135;

  corral_source_split_4135:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p0);
    call {:si_unique_call 1727} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
    goto corral_source_split_4139;

  corral_source_split_4139:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 160);
    call {:si_unique_call 1728} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i24);
    goto corral_source_split_4140;

  corral_source_split_4140:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_4141;

  corral_source_split_4141:
    assume {:verifier.code 0} true;
    $p26 := $load.ref($M.1, $p25);
    call {:si_unique_call 1729} $i27 := devirtbounce($p26, $p0, $i1, $p2);
    call {:si_unique_call 1730} {:cexpr "tmp___0"} boogie_si_record_i32($i27);
    goto corral_source_split_4142;

  corral_source_split_4142:
    assume {:verifier.code 0} true;
    $i16 := $i27;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_4128;

  corral_source_split_4128:
    assume {:verifier.code 0} true;
    $r := $i16;
    return;

  $bb5:
    assume $i22 == 1;
    goto corral_source_split_4137;

  corral_source_split_4137:
    assume {:verifier.code 0} true;
    $i16 := $sub.i32(0, 30);
    goto $bb3;

  $bb1:
    assume $i15 == 1;
    goto corral_source_split_4126;

  corral_source_split_4126:
    assume {:verifier.code 0} true;
    $i16 := $sub.i32(0, 95);
    goto $bb3;
}



const mtd_read: ref;

axiom mtd_read == $sub.ref(0, 146961);

procedure mtd_read($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32);
  free requires assertsPassed;



implementation mtd_read($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32)
{
  var $i5: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1731} {:cexpr "mtd_read:arg:arg1"} boogie_si_record_i64($i1);
    call {:si_unique_call 1732} {:cexpr "mtd_read:arg:arg2"} boogie_si_record_i64($i2);
    goto corral_source_split_4144;

  corral_source_split_4144:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1733} $i5 := __VERIFIER_nondet_int();
    call {:si_unique_call 1734} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i5);
    goto corral_source_split_4145;

  corral_source_split_4145:
    assume {:verifier.code 0} true;
    $r := $i5;
    return;
}



const memcmpb: ref;

axiom memcmpb == $sub.ref(0, 147993);

procedure memcmpb($p0: ref, $i1: i32, $i2: i32) returns ($r: i32);
  free requires assertsPassed;



implementation memcmpb($p0: ref, $i1: i32, $i2: i32) returns ($r: i32)
{
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i1;
  var $i11: i32;
  var $i12: i1;
  var $i4: i32;
  var $i10: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1735} {:cexpr "memcmpb:arg:c"} boogie_si_record_i32($i1);
    call {:si_unique_call 1736} {:cexpr "memcmpb:arg:n"} boogie_si_record_i32($i2);
    goto corral_source_split_4147;

  corral_source_split_4147:
    assume {:verifier.code 0} true;
    $i3 := $slt.i32(0, $i2);
    goto corral_source_split_4148;

  corral_source_split_4148:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i3 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i10 := 0;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto corral_source_split_4162;

  corral_source_split_4162:
    assume {:verifier.code 0} true;
    $r := $i10;
    return;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_4150;

  corral_source_split_4150:
    assume {:verifier.code 0} true;
    $i4 := 0;
    goto $bb4;

  $bb4:
    call $i5, $p6, $i7, $i8, $i9, $i11, $i12, $i4 := memcmpb_loop_$bb4($p0, $i1, $i2, $i5, $p6, $i7, $i8, $i9, $i11, $i12, $i4);
    goto $bb4_last;

  corral_source_split_4152:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i5 := $sext.i32.i64($i4);
    call {:si_unique_call 1737} {:cexpr "__cil_tmp5"} boogie_si_record_i64($i5);
    goto corral_source_split_4154;

  corral_source_split_4154:
    assume {:verifier.code 0} true;
    $p6 := $add.ref($p0, $mul.ref($i5, 1));
    goto corral_source_split_4155;

  corral_source_split_4155:
    assume {:verifier.code 0} true;
    $i7 := $load.i8($M.1, $p6);
    call {:si_unique_call 1738} {:cexpr "__cil_tmp8"} boogie_si_record_i8($i7);
    goto corral_source_split_4156;

  corral_source_split_4156:
    assume {:verifier.code 0} true;
    $i8 := $zext.i8.i32($i7);
    call {:si_unique_call 1739} {:cexpr "__cil_tmp9"} boogie_si_record_i32($i8);
    goto corral_source_split_4157;

  corral_source_split_4157:
    assume {:verifier.code 0} true;
    $i9 := $ne.i32($i8, $i1);
    goto corral_source_split_4158;

  corral_source_split_4158:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i11 := $add.i32($i4, 1);
    call {:si_unique_call 1740} {:cexpr "i"} boogie_si_record_i32($i11);
    goto corral_source_split_4164;

  corral_source_split_4164:
    assume {:verifier.code 0} true;
    $i12 := $slt.i32($i11, $i2);
    goto corral_source_split_4165;

  corral_source_split_4165:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i12 == 1);
    goto corral_source_split_4167;

  corral_source_split_4167:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb10:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    $i4 := $i11;
    goto $bb10_dummy;

  $bb6:
    assume $i9 == 1;
    goto corral_source_split_4160;

  corral_source_split_4160:
    assume {:verifier.code 0} true;
    $i10 := 1;
    goto $bb8;

  $bb10_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_4152;
}



const ldv_check_alloc_flags: ref;

axiom ldv_check_alloc_flags == $sub.ref(0, 149025);

procedure ldv_check_alloc_flags($i0: i32);
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i1;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1741} {:cexpr "ldv_check_alloc_flags:arg:flags"} boogie_si_record_i32($i0);
    goto corral_source_split_4169;

  corral_source_split_4169:
    assume {:verifier.code 0} true;
    $i1 := $M.6;
    goto corral_source_split_4170;

  corral_source_split_4170:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, 0);
    goto corral_source_split_4171;

  corral_source_split_4171:
    assume {:verifier.code 0} true;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_4173;

  corral_source_split_4173:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i0, 32);
    goto corral_source_split_4174;

  corral_source_split_4174:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i3 == 1);
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb3:
    assume $i3 == 1;
    goto corral_source_split_4176;

  corral_source_split_4176:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1742} ldv_blast_assert();
    goto SeqInstr_25, SeqInstr_26;

  SeqInstr_26:
    assume assertsPassed;
    goto SeqInstr_27;

  SeqInstr_27:
    goto corral_source_split_4177;

  corral_source_split_4177:
    assume {:verifier.code 0} true;
    goto $bb5;

  SeqInstr_25:
    assume !assertsPassed;
    return;
}



const ldv_kcalloc_14: ref;

axiom ldv_kcalloc_14 == $sub.ref(0, 150057);

procedure ldv_kcalloc_14($i0: i64, $i1: i64, $i2: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation ldv_kcalloc_14($i0: i64, $i1: i64, $i2: i32) returns ($r: ref)
{
  var $i3: i32;
  var $p4: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1743} {:cexpr "ldv_kcalloc_14:arg:n"} boogie_si_record_i64($i0);
    call {:si_unique_call 1744} {:cexpr "ldv_kcalloc_14:arg:size"} boogie_si_record_i64($i1);
    call {:si_unique_call 1745} {:cexpr "ldv_kcalloc_14:arg:flags"} boogie_si_record_i32($i2);
    goto corral_source_split_4179;

  corral_source_split_4179:
    assume {:verifier.code 0} true;
    $i3 := $or.i32($i2, 32768);
    call {:si_unique_call 1746} {:cexpr "__cil_tmp5"} boogie_si_record_i32($i3);
    goto corral_source_split_4180;

  corral_source_split_4180:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1747} $p4 := kmalloc_array($i0, $i1, $i3);
    goto corral_source_split_4181;

  corral_source_split_4181:
    assume {:verifier.code 0} true;
    $r := $p4;
    return;
}



const kmalloc_array: ref;

axiom kmalloc_array == $sub.ref(0, 151089);

procedure kmalloc_array($i0: i64, $i1: i64, $i2: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation kmalloc_array($i0: i64, $i1: i64, $i2: i32) returns ($r: ref)
{
  var $i3: i1;
  var $i4: i64;
  var $i5: i1;
  var $i7: i64;
  var $p8: ref;
  var $p6: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1748} {:cexpr "kmalloc_array:arg:n"} boogie_si_record_i64($i0);
    call {:si_unique_call 1749} {:cexpr "kmalloc_array:arg:size"} boogie_si_record_i64($i1);
    call {:si_unique_call 1750} {:cexpr "kmalloc_array:arg:flags"} boogie_si_record_i32($i2);
    goto corral_source_split_4183;

  corral_source_split_4183:
    assume {:verifier.code 0} true;
    $i3 := $ne.i64($i1, 0);
    goto corral_source_split_4184;

  corral_source_split_4184:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i7 := $mul.i64($i0, $i1);
    call {:si_unique_call 1752} {:cexpr "__cil_tmp6"} boogie_si_record_i64($i7);
    goto corral_source_split_4194;

  corral_source_split_4194:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1753} $p8 := __kmalloc($i7, $i2);
    goto corral_source_split_4195;

  corral_source_split_4195:
    assume {:verifier.code 0} true;
    $p6 := $p8;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_4192;

  corral_source_split_4192:
    assume {:verifier.code 0} true;
    $r := $p6;
    return;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_4186;

  corral_source_split_4186:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i64($sub.i64(0, 1), $i1);
    call {:si_unique_call 1751} {:cexpr "__cil_tmp5"} boogie_si_record_i64($i4);
    goto corral_source_split_4187;

  corral_source_split_4187:
    assume {:verifier.code 0} true;
    $i5 := $ult.i64($i4, $i0);
    goto corral_source_split_4188;

  corral_source_split_4188:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb3:
    assume $i5 == 1;
    goto corral_source_split_4190;

  corral_source_split_4190:
    assume {:verifier.code 0} true;
    $p6 := $0.ref;
    goto $bb5;
}



const __kmalloc: ref;

axiom __kmalloc == $sub.ref(0, 152121);

procedure __kmalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation __kmalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1754} {:cexpr "__kmalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 1755} {:cexpr "__kmalloc:arg:t"} boogie_si_record_i32($i1);
    goto corral_source_split_4197;

  corral_source_split_4197:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1756} $p2 := ldv_malloc($i0);
    goto corral_source_split_4198;

  corral_source_split_4198:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const ldv_malloc: ref;

axiom ldv_malloc == $sub.ref(0, 153153);

procedure ldv_malloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation ldv_malloc($i0: i64) returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1757} {:cexpr "ldv_malloc:arg:size"} boogie_si_record_i64($i0);
    goto corral_source_split_4200;

  corral_source_split_4200:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1758} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 1759} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_4201;

  corral_source_split_4201:
    assume {:verifier.code 0} true;
    $i2 := $ne.i32($i1, 0);
    goto corral_source_split_4202;

  corral_source_split_4202:
    assume {:verifier.code 0} true;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i2 == 1);
    goto corral_source_split_4212;

  corral_source_split_4212:
    assume {:verifier.code 0} true;
    $p8 := $0.ref;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_4214;

  corral_source_split_4214:
    assume {:verifier.code 0} true;
    $r := $p8;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_4204;

  corral_source_split_4204:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1760} $p3 := malloc($i0);
    goto corral_source_split_4205;

  corral_source_split_4205:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1761} $i4 := ldv_is_err($p3);
    goto corral_source_split_4206;

  corral_source_split_4206:
    assume {:verifier.code 1} true;
    $i5 := $ne.i64($i4, 0);
    goto corral_source_split_4207;

  corral_source_split_4207:
    assume {:verifier.code 1} true;
    $i6 := $xor.i1($i5, 1);
    goto corral_source_split_4208;

  corral_source_split_4208:
    assume {:verifier.code 1} true;
    $i7 := $zext.i1.i32($i6);
    goto corral_source_split_4209;

  corral_source_split_4209:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1762} __VERIFIER_assume($i7);
    goto corral_source_split_4210;

  corral_source_split_4210:
    assume {:verifier.code 0} true;
    $p8 := $p3;
    goto $bb3;
}



const malloc: ref;

axiom malloc == $sub.ref(0, 154185);

procedure malloc($i0: i64) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation malloc($i0: i64) returns ($r: ref)
{

  anon0:
    call {:si_unique_call 1763} $r := $malloc($i0);
    return;
}



const ldv_is_err: ref;

axiom ldv_is_err == $sub.ref(0, 155217);

procedure ldv_is_err($p0: ref) returns ($r: i64);
  free requires assertsPassed;



implementation ldv_is_err($p0: ref) returns ($r: i64)
{
  var $i1: i64;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_4216;

  corral_source_split_4216:
    assume {:verifier.code 0} true;
    $i1 := $p2i.ref.i64($p0);
    goto corral_source_split_4217;

  corral_source_split_4217:
    assume {:verifier.code 0} true;
    $i2 := $ugt.i64($i1, 18446744073709547521);
    goto corral_source_split_4218;

  corral_source_split_4218:
    assume {:verifier.code 0} true;
    $i3 := $zext.i1.i32($i2);
    goto corral_source_split_4219;

  corral_source_split_4219:
    assume {:verifier.code 0} true;
    $i4 := $sext.i32.i64($i3);
    goto corral_source_split_4220;

  corral_source_split_4220:
    assume {:verifier.code 0} true;
    $r := $i4;
    return;
}



const ldv_blast_assert: ref;

axiom ldv_blast_assert == $sub.ref(0, 156249);

procedure ldv_blast_assert();
  free requires assertsPassed;
  modifies assertsPassed;



implementation ldv_blast_assert()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_4222;

  corral_source_split_4222:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1764} __VERIFIER_error();
    goto SeqInstr_28, SeqInstr_29;

  SeqInstr_29:
    assume assertsPassed;
    goto SeqInstr_30;

  SeqInstr_30:
    goto corral_source_split_4224;

  corral_source_split_4224:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_28:
    assume !assertsPassed;
    return;
}



const llvm.memcpy.p0i8.p0i8.i64: ref;

axiom llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 157281);

procedure llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);



const kmalloc: ref;

axiom kmalloc == $sub.ref(0, 158313);

procedure kmalloc($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies assertsPassed, $CurrAddr;



implementation kmalloc($i0: i64, $i1: i32) returns ($r: ref)
{
  var vslice_dummy_var_97: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1765} {:cexpr "kmalloc:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 1766} {:cexpr "kmalloc:arg:flags"} boogie_si_record_i32($i1);
    goto corral_source_split_4226;

  corral_source_split_4226:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1767} ldv_check_alloc_flags($i1);
    goto SeqInstr_31, SeqInstr_32;

  SeqInstr_32:
    assume assertsPassed;
    goto SeqInstr_33;

  SeqInstr_33:
    goto corral_source_split_4227;

  corral_source_split_4227:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1768} vslice_dummy_var_97 := ldv_kmalloc_12($i0, $i1);
    goto corral_source_split_4228;

  corral_source_split_4228:
    assume {:verifier.code 0} true;
    $r := $0.ref;
    return;

  SeqInstr_31:
    assume !assertsPassed;
    return;
}



const mtd_block_isbad: ref;

axiom mtd_block_isbad == $sub.ref(0, 159345);

procedure mtd_block_isbad($p0: ref, $i1: i64) returns ($r: i32);
  free requires assertsPassed;



implementation mtd_block_isbad($p0: ref, $i1: i64) returns ($r: i32)
{
  var $i2: i32;

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1769} {:cexpr "mtd_block_isbad:arg:arg1"} boogie_si_record_i64($i1);
    goto corral_source_split_4230;

  corral_source_split_4230:
    assume {:verifier.code 1} true;
    call {:si_unique_call 1770} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 1771} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    goto corral_source_split_4231;

  corral_source_split_4231:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const ldv_kmalloc_12: ref;

axiom ldv_kmalloc_12 == $sub.ref(0, 160377);

procedure ldv_kmalloc_12($i0: i64, $i1: i32) returns ($r: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation ldv_kmalloc_12($i0: i64, $i1: i32) returns ($r: ref)
{
  var $p2: ref;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1772} {:cexpr "ldv_kmalloc_12:arg:size"} boogie_si_record_i64($i0);
    call {:si_unique_call 1773} {:cexpr "ldv_kmalloc_12:arg:flags"} boogie_si_record_i32($i1);
    goto corral_source_split_4233;

  corral_source_split_4233:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1774} $p2 := __kmalloc($i0, $i1);
    goto corral_source_split_4234;

  corral_source_split_4234:
    assume {:verifier.code 0} true;
    $r := $p2;
    return;
}



const INFTL_findwriteunit: ref;

axiom INFTL_findwriteunit == $sub.ref(0, 161409);

procedure INFTL_findwriteunit($p0: ref, $i1: i32) returns ($r: i16);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, $M.9, $M.10, $M.7, $M.8;



implementation INFTL_findwriteunit($p0: ref, $i1: i32) returns ($r: i16)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i8;
  var $i46: i64;
  var $i47: i64;
  var $i48: i32;
  var $i49: i64;
  var $i50: i1;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i16;
  var $i59: i32;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $i63: i16;
  var $i64: i32;
  var $i65: i1;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $p90: ref;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $p96: ref;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i8;
  var $i110: i64;
  var $i111: i64;
  var $i112: i32;
  var $i113: i64;
  var $i114: i1;
  var $i116: i1;
  var $i117: i1;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i122: i1;
  var $i121: i32;
  var $i123: i32;
  var $i125: i32;
  var $i126: i1;
  var $i129: i64;
  var $i130: i64;
  var $i131: i64;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $i135: i16;
  var $i136: i32;
  var $i137: i16;
  var $i138: i32;
  var $i139: i1;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i140: i32;
  var $i66: i32;
  var $i124: i32;
  var $i141: i1;
  var $i142: i16;
  var $i143: i16;
  var $i144: i32;
  var $i145: i1;
  var $i146: i16;
  var $p147: ref;
  var $i148: i64;
  var $i149: i64;
  var $p150: ref;
  var $i151: i64;
  var $i152: i64;
  var $p153: ref;
  var $i154: i64;
  var $i155: i64;
  var $p156: ref;
  var $i157: i64;
  var $i158: i64;
  var $p159: ref;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $i166: i8;
  var $i167: i64;
  var $i168: i64;
  var $i169: i32;
  var $i170: i64;
  var $i171: i1;
  var $i173: i16;
  var $i174: i32;
  var $i175: i1;
  var $i177: i32;
  var $i178: i64;
  var $i179: i64;
  var $i180: i64;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $i184: i16;
  var $i185: i32;
  var $i186: i1;
  var $i187: i64;
  var $i188: i64;
  var $p189: ref;
  var $i190: i32;
  var $i191: i32;
  var $i192: i32;
  var $i193: i64;
  var $i194: i64;
  var $i195: i64;
  var $p196: ref;
  var $p197: ref;
  var $i199: i64;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $i203: i8;
  var $i204: i32;
  var $i205: i32;
  var $i206: i8;
  var $i207: i64;
  var $i208: i64;
  var $i209: i64;
  var $p210: ref;
  var $i211: i8;
  var $i212: i32;
  var $i213: i32;
  var $i214: i8;
  var $i215: i8;
  var $i216: i8;
  var $i217: i64;
  var $i218: i64;
  var $i219: i64;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $i223: i16;
  var $i224: i32;
  var $i225: i64;
  var $i226: i64;
  var $p227: ref;
  var $i228: i32;
  var $i229: i1;
  var $i230: i64;
  var $i231: i64;
  var $p232: ref;
  var $i233: i16;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i32;
  var $i238: i8;
  var $i239: i32;
  var $i240: i32;
  var $i241: i8;
  var $i242: i32;
  var $i243: i32;
  var $i244: i1;
  var $i245: i32;
  var $i246: i32;
  var $i247: i32;
  var $i248: i8;
  var $i249: i32;
  var $i250: i32;
  var $i251: i32;
  var $i252: i1;
  var $i253: i32;
  var $i254: i32;
  var $i255: i32;
  var $i256: i8;
  var $i257: i32;
  var $i258: i32;
  var $i259: i32;
  var $i260: i1;
  var $i261: i32;
  var $i262: i32;
  var $i263: i32;
  var $i264: i8;
  var $i265: i64;
  var $i266: i64;
  var $i267: i16;
  var $p268: ref;
  var $i269: i64;
  var $i270: i64;
  var $i271: i64;
  var $i272: i16;
  var $p273: ref;
  var $i274: i64;
  var $i275: i64;
  var $i276: i64;
  var $p277: ref;
  var $i278: i64;
  var $i279: i64;
  var $i280: i64;
  var $p281: ref;
  var $i282: i64;
  var $i283: i64;
  var $i284: i64;
  var $p285: ref;
  var $i286: i64;
  var $i287: i64;
  var $i288: i64;
  var $p289: ref;
  var $i290: i64;
  var $i291: i64;
  var $p292: ref;
  var $i293: i32;
  var $i294: i32;
  var $i295: i32;
  var $i296: i64;
  var $i297: i64;
  var $i298: i64;
  var $p299: ref;
  var $p300: ref;
  var $i302: i64;
  var $i303: i64;
  var $i304: i64;
  var $i305: i16;
  var $p306: ref;
  var $i307: i64;
  var $i308: i64;
  var $i309: i64;
  var $i310: i16;
  var $p311: ref;
  var $i312: i64;
  var $i313: i64;
  var $i314: i64;
  var $p315: ref;
  var $i316: i64;
  var $i317: i64;
  var $i318: i64;
  var $p319: ref;
  var $i320: i64;
  var $i321: i64;
  var $p322: ref;
  var $i323: i64;
  var $i324: i64;
  var $i325: i64;
  var $p326: ref;
  var $i327: i64;
  var $i328: i64;
  var $p329: ref;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i64;
  var $i334: i64;
  var $i335: i64;
  var $p336: ref;
  var $p337: ref;
  var $i339: i64;
  var $i340: i64;
  var $i341: i64;
  var $p342: ref;
  var $p343: ref;
  var $p344: ref;
  var $i345: i64;
  var $i346: i64;
  var $i347: i64;
  var $p348: ref;
  var $p349: ref;
  var $p350: ref;
  var $i351: i16;
  var $i352: i64;
  var $i353: i64;
  var $i354: i64;
  var $p355: ref;
  var $p356: ref;
  var $p357: ref;
  var $i358: i16;
  var $i359: i64;
  var $i360: i64;
  var $i361: i64;
  var $i362: i64;
  var $p363: ref;
  var $i364: i16;
  var $i365: i32;
  var $i366: i32;
  var $i367: i16;
  var $p368: ref;
  var $i369: i16;
  var $i128: i16;
  var vslice_dummy_var_98: i32;
  var vslice_dummy_var_99: i32;
  var vslice_dummy_var_100: i32;
  var vslice_dummy_var_101: i32;
  var vslice_dummy_var_102: i32;
  var vslice_dummy_var_103: i32;
  var vslice_dummy_var_104: i32;
  var vslice_dummy_var_105: i32;
  var vslice_dummy_var_106: i32;
  var vslice_dummy_var_107: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1775} $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1776} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1777} $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1778} $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1779} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 1780} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 1781} {:cexpr "INFTL_findwriteunit:arg:block"} boogie_si_record_i32($i1);
    goto corral_source_split_4236;

  corral_source_split_4236:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p0);
    call {:si_unique_call 1782} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i8);
    goto corral_source_split_4237;

  corral_source_split_4237:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 356);
    call {:si_unique_call 1783} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i9);
    goto corral_source_split_4238;

  corral_source_split_4238:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_4239;

  corral_source_split_4239:
    assume {:verifier.code 0} true;
    $i11 := $load.i32($M.1, $p10);
    call {:si_unique_call 1784} {:cexpr "__cil_tmp41"} boogie_si_record_i32($i11);
    goto corral_source_split_4240;

  corral_source_split_4240:
    assume {:verifier.code 0} true;
    $i12 := $udiv.i32($i11, 512);
    call {:si_unique_call 1785} {:cexpr "__cil_tmp42"} boogie_si_record_i32($i12);
    goto corral_source_split_4241;

  corral_source_split_4241:
    assume {:verifier.code 0} true;
    $i13 := $udiv.i32($i1, $i12);
    call {:si_unique_call 1786} {:cexpr "thisVUC"} boogie_si_record_i32($i13);
    goto corral_source_split_4242;

  corral_source_split_4242:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p0);
    call {:si_unique_call 1787} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i14);
    goto corral_source_split_4243;

  corral_source_split_4243:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 356);
    call {:si_unique_call 1788} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i15);
    goto corral_source_split_4244;

  corral_source_split_4244:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_4245;

  corral_source_split_4245:
    assume {:verifier.code 0} true;
    $i17 := $load.i32($M.1, $p16);
    call {:si_unique_call 1789} {:cexpr "__cil_tmp45"} boogie_si_record_i32($i17);
    goto corral_source_split_4246;

  corral_source_split_4246:
    assume {:verifier.code 0} true;
    $i18 := $sub.i32($i17, 1);
    call {:si_unique_call 1790} {:cexpr "__cil_tmp46"} boogie_si_record_i32($i18);
    goto corral_source_split_4247;

  corral_source_split_4247:
    assume {:verifier.code 0} true;
    $i19 := $mul.i32($i1, 512);
    call {:si_unique_call 1791} {:cexpr "__cil_tmp47"} boogie_si_record_i32($i19);
    goto corral_source_split_4248;

  corral_source_split_4248:
    assume {:verifier.code 0} true;
    $i20 := $and.i32($i19, $i18);
    call {:si_unique_call 1792} {:cexpr "__cil_tmp48"} boogie_si_record_i32($i20);
    goto corral_source_split_4249;

  corral_source_split_4249:
    assume {:verifier.code 0} true;
    $i21 := $zext.i32.i64($i20);
    call {:si_unique_call 1793} {:cexpr "blockofs"} boogie_si_record_i64($i21);
    goto corral_source_split_4250;

  corral_source_split_4250:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p0);
    call {:si_unique_call 1794} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i22);
    goto corral_source_split_4251;

  corral_source_split_4251:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 24);
    call {:si_unique_call 1795} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i23);
    goto corral_source_split_4252;

  corral_source_split_4252:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_4253;

  corral_source_split_4253:
    assume {:verifier.code 0} true;
    $p25 := $load.ref($M.1, $p24);
    goto corral_source_split_4254;

  corral_source_split_4254:
    assume {:verifier.code 0} true;
    $p26 := $bitcast.ref.ref($p5);
    goto corral_source_split_4255;

  corral_source_split_4255:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p26, .str);
    goto corral_source_split_4256;

  corral_source_split_4256:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p5);
    goto corral_source_split_4257;

  corral_source_split_4257:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 8);
    call {:si_unique_call 1796} {:cexpr "__cil_tmp53"} boogie_si_record_i64($i28);
    goto corral_source_split_4258;

  corral_source_split_4258:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_4259;

  corral_source_split_4259:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p29, .str.38);
    goto corral_source_split_4260;

  corral_source_split_4260:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p5);
    goto corral_source_split_4261;

  corral_source_split_4261:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 16);
    call {:si_unique_call 1797} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i31);
    goto corral_source_split_4262;

  corral_source_split_4262:
    assume {:verifier.code 0} true;
    $p32 := $i2p.i64.ref($i31);
    goto corral_source_split_4263;

  corral_source_split_4263:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p32, .str.31);
    goto corral_source_split_4264;

  corral_source_split_4264:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p5);
    goto corral_source_split_4265;

  corral_source_split_4265:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 24);
    call {:si_unique_call 1798} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i34);
    goto corral_source_split_4266;

  corral_source_split_4266:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_4267;

  corral_source_split_4267:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p35, .str.39);
    goto corral_source_split_4268;

  corral_source_split_4268:
    assume {:verifier.code 0} true;
    $i36 := $p2i.ref.i64($p5);
    goto corral_source_split_4269;

  corral_source_split_4269:
    assume {:verifier.code 0} true;
    $i37 := $add.i64($i36, 32);
    call {:si_unique_call 1799} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i37);
    goto corral_source_split_4270;

  corral_source_split_4270:
    assume {:verifier.code 0} true;
    $p38 := $i2p.i64.ref($i37);
    goto corral_source_split_4271;

  corral_source_split_4271:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p38, 501);
    goto corral_source_split_4272;

  corral_source_split_4272:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p5);
    goto corral_source_split_4273;

  corral_source_split_4273:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 35);
    call {:si_unique_call 1800} {:cexpr "__cil_tmp57"} boogie_si_record_i64($i40);
    goto corral_source_split_4274;

  corral_source_split_4274:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_4275;

  corral_source_split_4275:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p41, 0);
    goto corral_source_split_4276;

  corral_source_split_4276:
    assume {:verifier.code 0} true;
    $i42 := $p2i.ref.i64($p5);
    goto corral_source_split_4277;

  corral_source_split_4277:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 35);
    call {:si_unique_call 1801} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i43);
    goto corral_source_split_4278;

  corral_source_split_4278:
    assume {:verifier.code 0} true;
    $p44 := $i2p.i64.ref($i43);
    goto corral_source_split_4279;

  corral_source_split_4279:
    assume {:verifier.code 0} true;
    $i45 := $load.i8($M.1, $p44);
    call {:si_unique_call 1802} {:cexpr "__cil_tmp59"} boogie_si_record_i8($i45);
    goto corral_source_split_4280;

  corral_source_split_4280:
    assume {:verifier.code 0} true;
    $i46 := $zext.i8.i64($i45);
    call {:si_unique_call 1803} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i46);
    goto corral_source_split_4281;

  corral_source_split_4281:
    assume {:verifier.code 0} true;
    $i47 := $and.i64($i46, 1);
    call {:si_unique_call 1804} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i47);
    goto corral_source_split_4282;

  corral_source_split_4282:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1805} $i48 := __builtinx_expect.i64.i64($i47, 0);
    goto corral_source_split_4283;

  corral_source_split_4283:
    assume {:verifier.code 0} true;
    $i49 := $sext.i32.i64($i48);
    call {:si_unique_call 1806} {:cexpr "tmp"} boogie_si_record_i64($i49);
    goto corral_source_split_4284;

  corral_source_split_4284:
    assume {:verifier.code 0} true;
    $i50 := $ne.i64($i49, 0);
    goto corral_source_split_4285;

  corral_source_split_4285:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i52 := $zext.i32.i64($i13);
    call {:si_unique_call 1808} {:cexpr "__cil_tmp62"} boogie_si_record_i64($i52);
    goto corral_source_split_4290;

  corral_source_split_4290:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p0);
    call {:si_unique_call 1809} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i53);
    goto corral_source_split_4291;

  corral_source_split_4291:
    assume {:verifier.code 0} true;
    $i54 := $add.i64($i53, 552);
    call {:si_unique_call 1810} {:cexpr "__cil_tmp64"} boogie_si_record_i64($i54);
    goto corral_source_split_4292;

  corral_source_split_4292:
    assume {:verifier.code 0} true;
    $p55 := $i2p.i64.ref($i54);
    goto corral_source_split_4293;

  corral_source_split_4293:
    assume {:verifier.code 0} true;
    $p56 := $load.ref($M.1, $p55);
    goto corral_source_split_4294;

  corral_source_split_4294:
    assume {:verifier.code 0} true;
    $p57 := $add.ref($p56, $mul.ref($i52, 2));
    goto corral_source_split_4295;

  corral_source_split_4295:
    assume {:verifier.code 0} true;
    $i58 := $load.i16($M.1, $p57);
    call {:si_unique_call 1811} {:cexpr "__cil_tmp67"} boogie_si_record_i16($i58);
    goto corral_source_split_4296;

  corral_source_split_4296:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i32($i58);
    call {:si_unique_call 1812} {:cexpr "thisEUN"} boogie_si_record_i32($i59);
    goto corral_source_split_4297;

  corral_source_split_4297:
    assume {:verifier.code 0} true;
    $i60 := $p2i.ref.i64($p0);
    call {:si_unique_call 1813} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i60);
    goto corral_source_split_4298;

  corral_source_split_4298:
    assume {:verifier.code 0} true;
    $i61 := $add.i64($i60, 520);
    call {:si_unique_call 1814} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i61);
    goto corral_source_split_4299;

  corral_source_split_4299:
    assume {:verifier.code 0} true;
    $p62 := $i2p.i64.ref($i61);
    goto corral_source_split_4300;

  corral_source_split_4300:
    assume {:verifier.code 0} true;
    $i63 := $load.i16($M.1, $p62);
    call {:si_unique_call 1815} {:cexpr "__cil_tmp101"} boogie_si_record_i16($i63);
    goto corral_source_split_4301;

  corral_source_split_4301:
    assume {:verifier.code 0} true;
    $i64 := $zext.i16.i32($i63);
    call {:si_unique_call 1816} {:cexpr "__cil_tmp102"} boogie_si_record_i32($i64);
    goto corral_source_split_4302;

  corral_source_split_4302:
    assume {:verifier.code 0} true;
    $i65 := $uge.i32($i64, $i59);
    goto corral_source_split_4303;

  corral_source_split_4303:
    assume {:verifier.code 0} true;
    $i66 := 65535;
    assume {:branchcond $i65} true;
    goto $bb5, $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume !($i65 == 1);
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto corral_source_split_4307;

  corral_source_split_4307:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $i124 := $i66;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_4395;

  corral_source_split_4395:
    assume {:verifier.code 0} true;
    $i141 := $ne.i32($i124, 65535);
    goto corral_source_split_4396;

  corral_source_split_4396:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i141 == 1);
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1852} $i143 := INFTL_findfreeblock($p0, 0);
    call {:si_unique_call 1853} {:cexpr "tmp___2"} boogie_si_record_i16($i143);
    goto corral_source_split_4420;

  corral_source_split_4420:
    assume {:verifier.code 0} true;
    $i144 := $zext.i16.i32($i143);
    call {:si_unique_call 1854} {:cexpr "writeEUN"} boogie_si_record_i32($i144);
    goto corral_source_split_4421;

  corral_source_split_4421:
    assume {:verifier.code 0} true;
    $i145 := $eq.i32($i144, 65535);
    goto corral_source_split_4422;

  corral_source_split_4422:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i145 == 1);
    assume {:verifier.code 0} true;
    $i177 := $i144;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    goto corral_source_split_4468;

  corral_source_split_4468:
    assume {:verifier.code 0} true;
    $i178 := $zext.i32.i64($i13);
    call {:si_unique_call 1873} {:cexpr "__cil_tmp113"} boogie_si_record_i64($i178);
    goto corral_source_split_4469;

  corral_source_split_4469:
    assume {:verifier.code 0} true;
    $i179 := $p2i.ref.i64($p0);
    call {:si_unique_call 1874} {:cexpr "__cil_tmp114"} boogie_si_record_i64($i179);
    goto corral_source_split_4470;

  corral_source_split_4470:
    assume {:verifier.code 0} true;
    $i180 := $add.i64($i179, 552);
    call {:si_unique_call 1875} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i180);
    goto corral_source_split_4471;

  corral_source_split_4471:
    assume {:verifier.code 0} true;
    $p181 := $i2p.i64.ref($i180);
    goto corral_source_split_4472;

  corral_source_split_4472:
    assume {:verifier.code 0} true;
    $p182 := $load.ref($M.1, $p181);
    goto corral_source_split_4473;

  corral_source_split_4473:
    assume {:verifier.code 0} true;
    $p183 := $add.ref($p182, $mul.ref($i178, 2));
    goto corral_source_split_4474;

  corral_source_split_4474:
    assume {:verifier.code 0} true;
    $i184 := $load.i16($M.1, $p183);
    call {:si_unique_call 1876} {:cexpr "__cil_tmp118"} boogie_si_record_i16($i184);
    goto corral_source_split_4475;

  corral_source_split_4475:
    assume {:verifier.code 0} true;
    $i185 := $zext.i16.i32($i184);
    call {:si_unique_call 1877} {:cexpr "thisEUN"} boogie_si_record_i32($i185);
    goto corral_source_split_4476;

  corral_source_split_4476:
    assume {:verifier.code 0} true;
    $i186 := $ne.i32($i185, 65535);
    goto corral_source_split_4477;

  corral_source_split_4477:
    assume {:verifier.code 0} true;
    assume {:branchcond $i186} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i186 == 1);
    assume {:verifier.code 0} true;
    $i215, $i216 := 0, 0;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4509;

  corral_source_split_4509:
    assume {:verifier.code 0} true;
    $i217 := $zext.i32.i64($i13);
    call {:si_unique_call 1898} {:cexpr "__cil_tmp140"} boogie_si_record_i64($i217);
    goto corral_source_split_4510;

  corral_source_split_4510:
    assume {:verifier.code 0} true;
    $i218 := $p2i.ref.i64($p0);
    call {:si_unique_call 1899} {:cexpr "__cil_tmp141"} boogie_si_record_i64($i218);
    goto corral_source_split_4511;

  corral_source_split_4511:
    assume {:verifier.code 0} true;
    $i219 := $add.i64($i218, 552);
    call {:si_unique_call 1900} {:cexpr "__cil_tmp142"} boogie_si_record_i64($i219);
    goto corral_source_split_4512;

  corral_source_split_4512:
    assume {:verifier.code 0} true;
    $p220 := $i2p.i64.ref($i219);
    goto corral_source_split_4513;

  corral_source_split_4513:
    assume {:verifier.code 0} true;
    $p221 := $load.ref($M.1, $p220);
    goto corral_source_split_4514;

  corral_source_split_4514:
    assume {:verifier.code 0} true;
    $p222 := $add.ref($p221, $mul.ref($i217, 2));
    goto corral_source_split_4515;

  corral_source_split_4515:
    assume {:verifier.code 0} true;
    $i223 := $load.i16($M.1, $p222);
    call {:si_unique_call 1901} {:cexpr "__cil_tmp145"} boogie_si_record_i16($i223);
    goto corral_source_split_4516;

  corral_source_split_4516:
    assume {:verifier.code 0} true;
    $i224 := $zext.i16.i32($i223);
    call {:si_unique_call 1902} {:cexpr "prev_block"} boogie_si_record_i32($i224);
    goto corral_source_split_4517;

  corral_source_split_4517:
    assume {:verifier.code 0} true;
    $i225 := $p2i.ref.i64($p0);
    call {:si_unique_call 1903} {:cexpr "__cil_tmp146"} boogie_si_record_i64($i225);
    goto corral_source_split_4518;

  corral_source_split_4518:
    assume {:verifier.code 0} true;
    $i226 := $add.i64($i225, 560);
    call {:si_unique_call 1904} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i226);
    goto corral_source_split_4519;

  corral_source_split_4519:
    assume {:verifier.code 0} true;
    $p227 := $i2p.i64.ref($i226);
    goto corral_source_split_4520;

  corral_source_split_4520:
    assume {:verifier.code 0} true;
    $i228 := $load.i32($M.1, $p227);
    call {:si_unique_call 1905} {:cexpr "__cil_tmp148"} boogie_si_record_i32($i228);
    goto corral_source_split_4521;

  corral_source_split_4521:
    assume {:verifier.code 0} true;
    $i229 := $ugt.i32($i228, $i224);
    goto corral_source_split_4522;

  corral_source_split_4522:
    assume {:verifier.code 0} true;
    assume {:branchcond $i229} true;
    goto $bb59, $bb60;

  $bb60:
    assume !($i229 == 1);
    assume {:verifier.code 0} true;
    $i236 := $i224;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    goto corral_source_split_4532;

  corral_source_split_4532:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1911} $i237 := nrbits($i13, 16);
    call {:si_unique_call 1912} {:cexpr "tmp___6"} boogie_si_record_i32($i237);
    goto corral_source_split_4533;

  corral_source_split_4533:
    assume {:verifier.code 0} true;
    $i238 := $trunc.i32.i8($i237);
    call {:si_unique_call 1913} {:cexpr "__cil_tmp153"} boogie_si_record_i8($i238);
    goto corral_source_split_4534;

  corral_source_split_4534:
    assume {:verifier.code 0} true;
    $i239 := $zext.i8.i32($i238);
    call {:si_unique_call 1914} {:cexpr "__cil_tmp154"} boogie_si_record_i32($i239);
    goto corral_source_split_4535;

  corral_source_split_4535:
    assume {:verifier.code 0} true;
    $i240 := $and.i32($i239, 1);
    call {:si_unique_call 1915} {:cexpr "__cil_tmp155"} boogie_si_record_i32($i240);
    goto corral_source_split_4536;

  corral_source_split_4536:
    assume {:verifier.code 0} true;
    $i241 := $trunc.i32.i8($i240);
    call {:si_unique_call 1916} {:cexpr "parity"} boogie_si_record_i8($i241);
    goto corral_source_split_4537;

  corral_source_split_4537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1917} $i242 := nrbits($i236, 16);
    call {:si_unique_call 1918} {:cexpr "tmp___9"} boogie_si_record_i32($i242);
    goto corral_source_split_4538;

  corral_source_split_4538:
    assume {:verifier.code 0} true;
    $i243 := $and.i32($i242, 1);
    goto corral_source_split_4539;

  corral_source_split_4539:
    assume {:verifier.code 0} true;
    $i244 := $ne.i32($i243, 0);
    goto corral_source_split_4540;

  corral_source_split_4540:
    assume {:verifier.code 0} true;
    assume {:branchcond $i244} true;
    goto $bb62, $bb63;

  $bb63:
    assume !($i244 == 1);
    assume {:verifier.code 0} true;
    $i245 := 0;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    goto corral_source_split_4544;

  corral_source_split_4544:
    assume {:verifier.code 0} true;
    $i246 := $sext.i8.i32($i241);
    call {:si_unique_call 1919} {:cexpr "__cil_tmp157"} boogie_si_record_i32($i246);
    goto corral_source_split_4545;

  corral_source_split_4545:
    assume {:verifier.code 0} true;
    $i247 := $or.i32($i245, $i246);
    call {:si_unique_call 1920} {:cexpr "__cil_tmp158"} boogie_si_record_i32($i247);
    goto corral_source_split_4546;

  corral_source_split_4546:
    assume {:verifier.code 0} true;
    $i248 := $trunc.i32.i8($i247);
    call {:si_unique_call 1921} {:cexpr "parity"} boogie_si_record_i8($i248);
    goto corral_source_split_4547;

  corral_source_split_4547:
    assume {:verifier.code 0} true;
    $i249 := $zext.i8.i32($i215);
    call {:si_unique_call 1922} {:cexpr "__cil_tmp159"} boogie_si_record_i32($i249);
    goto corral_source_split_4548;

  corral_source_split_4548:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1923} $i250 := nrbits($i249, 8);
    call {:si_unique_call 1924} {:cexpr "tmp___12"} boogie_si_record_i32($i250);
    goto corral_source_split_4549;

  corral_source_split_4549:
    assume {:verifier.code 0} true;
    $i251 := $and.i32($i250, 1);
    goto corral_source_split_4550;

  corral_source_split_4550:
    assume {:verifier.code 0} true;
    $i252 := $ne.i32($i251, 0);
    goto corral_source_split_4551;

  corral_source_split_4551:
    assume {:verifier.code 0} true;
    assume {:branchcond $i252} true;
    goto $bb65, $bb66;

  $bb66:
    assume !($i252 == 1);
    assume {:verifier.code 0} true;
    $i253 := 0;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    goto corral_source_split_4555;

  corral_source_split_4555:
    assume {:verifier.code 0} true;
    $i254 := $sext.i8.i32($i248);
    call {:si_unique_call 1925} {:cexpr "__cil_tmp161"} boogie_si_record_i32($i254);
    goto corral_source_split_4556;

  corral_source_split_4556:
    assume {:verifier.code 0} true;
    $i255 := $or.i32($i253, $i254);
    call {:si_unique_call 1926} {:cexpr "__cil_tmp162"} boogie_si_record_i32($i255);
    goto corral_source_split_4557;

  corral_source_split_4557:
    assume {:verifier.code 0} true;
    $i256 := $trunc.i32.i8($i255);
    call {:si_unique_call 1927} {:cexpr "parity"} boogie_si_record_i8($i256);
    goto corral_source_split_4558;

  corral_source_split_4558:
    assume {:verifier.code 0} true;
    $i257 := $zext.i8.i32($i216);
    call {:si_unique_call 1928} {:cexpr "__cil_tmp163"} boogie_si_record_i32($i257);
    goto corral_source_split_4559;

  corral_source_split_4559:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1929} $i258 := nrbits($i257, 8);
    call {:si_unique_call 1930} {:cexpr "tmp___15"} boogie_si_record_i32($i258);
    goto corral_source_split_4560;

  corral_source_split_4560:
    assume {:verifier.code 0} true;
    $i259 := $and.i32($i258, 1);
    goto corral_source_split_4561;

  corral_source_split_4561:
    assume {:verifier.code 0} true;
    $i260 := $ne.i32($i259, 0);
    goto corral_source_split_4562;

  corral_source_split_4562:
    assume {:verifier.code 0} true;
    assume {:branchcond $i260} true;
    goto $bb68, $bb69;

  $bb69:
    assume !($i260 == 1);
    assume {:verifier.code 0} true;
    $i261 := 0;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    goto corral_source_split_4566;

  corral_source_split_4566:
    assume {:verifier.code 0} true;
    $i262 := $sext.i8.i32($i256);
    call {:si_unique_call 1931} {:cexpr "__cil_tmp165"} boogie_si_record_i32($i262);
    goto corral_source_split_4567;

  corral_source_split_4567:
    assume {:verifier.code 0} true;
    $i263 := $or.i32($i261, $i262);
    call {:si_unique_call 1932} {:cexpr "__cil_tmp166"} boogie_si_record_i32($i263);
    goto corral_source_split_4568;

  corral_source_split_4568:
    assume {:verifier.code 0} true;
    $i264 := $trunc.i32.i8($i263);
    call {:si_unique_call 1933} {:cexpr "parity"} boogie_si_record_i8($i264);
    goto corral_source_split_4569;

  corral_source_split_4569:
    assume {:verifier.code 0} true;
    $i265 := $p2i.ref.i64($p2);
    goto corral_source_split_4570;

  corral_source_split_4570:
    assume {:verifier.code 0} true;
    $i266 := $add.i64($i265, 8);
    call {:si_unique_call 1934} {:cexpr "__cil_tmp167"} boogie_si_record_i64($i266);
    goto corral_source_split_4571;

  corral_source_split_4571:
    assume {:verifier.code 0} true;
    $i267 := $trunc.i32.i16($i13);
    goto corral_source_split_4572;

  corral_source_split_4572:
    assume {:verifier.code 0} true;
    $p268 := $i2p.i64.ref($i266);
    goto corral_source_split_4573;

  corral_source_split_4573:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p268, $i267);
    goto corral_source_split_4574;

  corral_source_split_4574:
    assume {:verifier.code 0} true;
    $i269 := $add.i64(8, 2);
    call {:si_unique_call 1935} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i269);
    goto corral_source_split_4575;

  corral_source_split_4575:
    assume {:verifier.code 0} true;
    $i270 := $p2i.ref.i64($p2);
    goto corral_source_split_4576;

  corral_source_split_4576:
    assume {:verifier.code 0} true;
    $i271 := $add.i64($i270, $i269);
    call {:si_unique_call 1936} {:cexpr "__cil_tmp170"} boogie_si_record_i64($i271);
    goto corral_source_split_4577;

  corral_source_split_4577:
    assume {:verifier.code 0} true;
    $i272 := $trunc.i32.i16($i236);
    goto corral_source_split_4578;

  corral_source_split_4578:
    assume {:verifier.code 0} true;
    $p273 := $i2p.i64.ref($i271);
    goto corral_source_split_4579;

  corral_source_split_4579:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p273, $i272);
    goto corral_source_split_4580;

  corral_source_split_4580:
    assume {:verifier.code 0} true;
    $i274 := $add.i64(8, 4);
    call {:si_unique_call 1937} {:cexpr "__cil_tmp172"} boogie_si_record_i64($i274);
    goto corral_source_split_4581;

  corral_source_split_4581:
    assume {:verifier.code 0} true;
    $i275 := $p2i.ref.i64($p2);
    goto corral_source_split_4582;

  corral_source_split_4582:
    assume {:verifier.code 0} true;
    $i276 := $add.i64($i275, $i274);
    call {:si_unique_call 1938} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i276);
    goto corral_source_split_4583;

  corral_source_split_4583:
    assume {:verifier.code 0} true;
    $p277 := $i2p.i64.ref($i276);
    goto corral_source_split_4584;

  corral_source_split_4584:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p277, $i215);
    goto corral_source_split_4585;

  corral_source_split_4585:
    assume {:verifier.code 0} true;
    $i278 := $add.i64(8, 5);
    call {:si_unique_call 1939} {:cexpr "__cil_tmp175"} boogie_si_record_i64($i278);
    goto corral_source_split_4586;

  corral_source_split_4586:
    assume {:verifier.code 0} true;
    $i279 := $p2i.ref.i64($p2);
    goto corral_source_split_4587;

  corral_source_split_4587:
    assume {:verifier.code 0} true;
    $i280 := $add.i64($i279, $i278);
    call {:si_unique_call 1940} {:cexpr "__cil_tmp176"} boogie_si_record_i64($i280);
    goto corral_source_split_4588;

  corral_source_split_4588:
    assume {:verifier.code 0} true;
    $p281 := $i2p.i64.ref($i280);
    goto corral_source_split_4589;

  corral_source_split_4589:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p281, $i216);
    goto corral_source_split_4590;

  corral_source_split_4590:
    assume {:verifier.code 0} true;
    $i282 := $add.i64(8, 6);
    call {:si_unique_call 1941} {:cexpr "__cil_tmp178"} boogie_si_record_i64($i282);
    goto corral_source_split_4591;

  corral_source_split_4591:
    assume {:verifier.code 0} true;
    $i283 := $p2i.ref.i64($p2);
    goto corral_source_split_4592;

  corral_source_split_4592:
    assume {:verifier.code 0} true;
    $i284 := $add.i64($i283, $i282);
    call {:si_unique_call 1942} {:cexpr "__cil_tmp179"} boogie_si_record_i64($i284);
    goto corral_source_split_4593;

  corral_source_split_4593:
    assume {:verifier.code 0} true;
    $p285 := $i2p.i64.ref($i284);
    goto corral_source_split_4594;

  corral_source_split_4594:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p285, $i264);
    goto corral_source_split_4595;

  corral_source_split_4595:
    assume {:verifier.code 0} true;
    $i286 := $add.i64(8, 7);
    call {:si_unique_call 1943} {:cexpr "__cil_tmp181"} boogie_si_record_i64($i286);
    goto corral_source_split_4596;

  corral_source_split_4596:
    assume {:verifier.code 0} true;
    $i287 := $p2i.ref.i64($p2);
    goto corral_source_split_4597;

  corral_source_split_4597:
    assume {:verifier.code 0} true;
    $i288 := $add.i64($i287, $i286);
    call {:si_unique_call 1944} {:cexpr "__cil_tmp182"} boogie_si_record_i64($i288);
    goto corral_source_split_4598;

  corral_source_split_4598:
    assume {:verifier.code 0} true;
    $p289 := $i2p.i64.ref($i288);
    goto corral_source_split_4599;

  corral_source_split_4599:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p289, $sub.i8(0, 86));
    goto corral_source_split_4600;

  corral_source_split_4600:
    assume {:verifier.code 0} true;
    $i290 := $p2i.ref.i64($p0);
    call {:si_unique_call 1945} {:cexpr "__cil_tmp183"} boogie_si_record_i64($i290);
    goto corral_source_split_4601;

  corral_source_split_4601:
    assume {:verifier.code 0} true;
    $i291 := $add.i64($i290, 356);
    call {:si_unique_call 1946} {:cexpr "__cil_tmp184"} boogie_si_record_i64($i291);
    goto corral_source_split_4602;

  corral_source_split_4602:
    assume {:verifier.code 0} true;
    $p292 := $i2p.i64.ref($i291);
    goto corral_source_split_4603;

  corral_source_split_4603:
    assume {:verifier.code 0} true;
    $i293 := $load.i32($M.1, $p292);
    call {:si_unique_call 1947} {:cexpr "__cil_tmp185"} boogie_si_record_i32($i293);
    goto corral_source_split_4604;

  corral_source_split_4604:
    assume {:verifier.code 0} true;
    $i294 := $mul.i32($i293, $i177);
    call {:si_unique_call 1948} {:cexpr "__cil_tmp186"} boogie_si_record_i32($i294);
    goto corral_source_split_4605;

  corral_source_split_4605:
    assume {:verifier.code 0} true;
    $i295 := $add.i32($i294, 8);
    call {:si_unique_call 1949} {:cexpr "__cil_tmp187"} boogie_si_record_i32($i295);
    goto corral_source_split_4606;

  corral_source_split_4606:
    assume {:verifier.code 0} true;
    $i296 := $zext.i32.i64($i295);
    call {:si_unique_call 1950} {:cexpr "__cil_tmp188"} boogie_si_record_i64($i296);
    goto corral_source_split_4607;

  corral_source_split_4607:
    assume {:verifier.code 0} true;
    $i297 := $p2i.ref.i64($p2);
    goto corral_source_split_4608;

  corral_source_split_4608:
    assume {:verifier.code 0} true;
    $i298 := $add.i64($i297, 8);
    call {:si_unique_call 1951} {:cexpr "__cil_tmp189"} boogie_si_record_i64($i298);
    goto corral_source_split_4609;

  corral_source_split_4609:
    assume {:verifier.code 0} true;
    $p299 := $i2p.i64.ref($i298);
    goto corral_source_split_4610;

  corral_source_split_4610:
    assume {:verifier.code 0} true;
    $p300 := $bitcast.ref.ref($p299);
    goto corral_source_split_4611;

  corral_source_split_4611:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1952} vslice_dummy_var_105 := inftl_write_oob($p25, $i296, 8, $p4, $p300);
    goto corral_source_split_4612;

  corral_source_split_4612:
    assume {:verifier.code 0} true;
    $i302 := $add.i64(8, 4);
    call {:si_unique_call 1953} {:cexpr "__cil_tmp193"} boogie_si_record_i64($i302);
    goto corral_source_split_4613;

  corral_source_split_4613:
    assume {:verifier.code 0} true;
    $i303 := $p2i.ref.i64($p2);
    goto corral_source_split_4614;

  corral_source_split_4614:
    assume {:verifier.code 0} true;
    $i304 := $add.i64($i303, $i302);
    call {:si_unique_call 1954} {:cexpr "__cil_tmp194"} boogie_si_record_i64($i304);
    goto corral_source_split_4615;

  corral_source_split_4615:
    assume {:verifier.code 0} true;
    $i305 := $trunc.i32.i16($i13);
    goto corral_source_split_4616;

  corral_source_split_4616:
    assume {:verifier.code 0} true;
    $p306 := $i2p.i64.ref($i304);
    goto corral_source_split_4617;

  corral_source_split_4617:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p306, $i305);
    goto corral_source_split_4618;

  corral_source_split_4618:
    assume {:verifier.code 0} true;
    $i307 := $add.i64(8, 2);
    call {:si_unique_call 1955} {:cexpr "__cil_tmp196"} boogie_si_record_i64($i307);
    goto corral_source_split_4619;

  corral_source_split_4619:
    assume {:verifier.code 0} true;
    $i308 := $p2i.ref.i64($p2);
    goto corral_source_split_4620;

  corral_source_split_4620:
    assume {:verifier.code 0} true;
    $i309 := $add.i64($i308, $i307);
    call {:si_unique_call 1956} {:cexpr "__cil_tmp197"} boogie_si_record_i64($i309);
    goto corral_source_split_4621;

  corral_source_split_4621:
    assume {:verifier.code 0} true;
    $i310 := $trunc.i32.i16($i236);
    goto corral_source_split_4622;

  corral_source_split_4622:
    assume {:verifier.code 0} true;
    $p311 := $i2p.i64.ref($i309);
    goto corral_source_split_4623;

  corral_source_split_4623:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p311, $i310);
    goto corral_source_split_4624;

  corral_source_split_4624:
    assume {:verifier.code 0} true;
    $i312 := $add.i64(8, 1);
    call {:si_unique_call 1957} {:cexpr "__cil_tmp199"} boogie_si_record_i64($i312);
    goto corral_source_split_4625;

  corral_source_split_4625:
    assume {:verifier.code 0} true;
    $i313 := $p2i.ref.i64($p2);
    goto corral_source_split_4626;

  corral_source_split_4626:
    assume {:verifier.code 0} true;
    $i314 := $add.i64($i313, $i312);
    call {:si_unique_call 1958} {:cexpr "__cil_tmp200"} boogie_si_record_i64($i314);
    goto corral_source_split_4627;

  corral_source_split_4627:
    assume {:verifier.code 0} true;
    $p315 := $i2p.i64.ref($i314);
    goto corral_source_split_4628;

  corral_source_split_4628:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p315, $i215);
    goto corral_source_split_4629;

  corral_source_split_4629:
    assume {:verifier.code 0} true;
    $i316 := $add.i64(8, 6);
    call {:si_unique_call 1959} {:cexpr "__cil_tmp202"} boogie_si_record_i64($i316);
    goto corral_source_split_4630;

  corral_source_split_4630:
    assume {:verifier.code 0} true;
    $i317 := $p2i.ref.i64($p2);
    goto corral_source_split_4631;

  corral_source_split_4631:
    assume {:verifier.code 0} true;
    $i318 := $add.i64($i317, $i316);
    call {:si_unique_call 1960} {:cexpr "__cil_tmp203"} boogie_si_record_i64($i318);
    goto corral_source_split_4632;

  corral_source_split_4632:
    assume {:verifier.code 0} true;
    $p319 := $i2p.i64.ref($i318);
    goto corral_source_split_4633;

  corral_source_split_4633:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p319, $i216);
    goto corral_source_split_4634;

  corral_source_split_4634:
    assume {:verifier.code 0} true;
    $i320 := $p2i.ref.i64($p2);
    goto corral_source_split_4635;

  corral_source_split_4635:
    assume {:verifier.code 0} true;
    $i321 := $add.i64($i320, 8);
    call {:si_unique_call 1961} {:cexpr "__cil_tmp204"} boogie_si_record_i64($i321);
    goto corral_source_split_4636;

  corral_source_split_4636:
    assume {:verifier.code 0} true;
    $p322 := $i2p.i64.ref($i321);
    goto corral_source_split_4637;

  corral_source_split_4637:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p322, $i264);
    goto corral_source_split_4638;

  corral_source_split_4638:
    assume {:verifier.code 0} true;
    $i323 := $add.i64(8, 7);
    call {:si_unique_call 1962} {:cexpr "__cil_tmp206"} boogie_si_record_i64($i323);
    goto corral_source_split_4639;

  corral_source_split_4639:
    assume {:verifier.code 0} true;
    $i324 := $p2i.ref.i64($p2);
    goto corral_source_split_4640;

  corral_source_split_4640:
    assume {:verifier.code 0} true;
    $i325 := $add.i64($i324, $i323);
    call {:si_unique_call 1963} {:cexpr "__cil_tmp207"} boogie_si_record_i64($i325);
    goto corral_source_split_4641;

  corral_source_split_4641:
    assume {:verifier.code 0} true;
    $p326 := $i2p.i64.ref($i325);
    goto corral_source_split_4642;

  corral_source_split_4642:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p326, $sub.i8(0, 86));
    goto corral_source_split_4643;

  corral_source_split_4643:
    assume {:verifier.code 0} true;
    $i327 := $p2i.ref.i64($p0);
    call {:si_unique_call 1964} {:cexpr "__cil_tmp208"} boogie_si_record_i64($i327);
    goto corral_source_split_4644;

  corral_source_split_4644:
    assume {:verifier.code 0} true;
    $i328 := $add.i64($i327, 356);
    call {:si_unique_call 1965} {:cexpr "__cil_tmp209"} boogie_si_record_i64($i328);
    goto corral_source_split_4645;

  corral_source_split_4645:
    assume {:verifier.code 0} true;
    $p329 := $i2p.i64.ref($i328);
    goto corral_source_split_4646;

  corral_source_split_4646:
    assume {:verifier.code 0} true;
    $i330 := $load.i32($M.1, $p329);
    call {:si_unique_call 1966} {:cexpr "__cil_tmp210"} boogie_si_record_i32($i330);
    goto corral_source_split_4647;

  corral_source_split_4647:
    assume {:verifier.code 0} true;
    $i331 := $mul.i32($i330, $i177);
    call {:si_unique_call 1967} {:cexpr "__cil_tmp211"} boogie_si_record_i32($i331);
    goto corral_source_split_4648;

  corral_source_split_4648:
    assume {:verifier.code 0} true;
    $i332 := $add.i32($i331, 2056);
    call {:si_unique_call 1968} {:cexpr "__cil_tmp212"} boogie_si_record_i32($i332);
    goto corral_source_split_4649;

  corral_source_split_4649:
    assume {:verifier.code 0} true;
    $i333 := $zext.i32.i64($i332);
    call {:si_unique_call 1969} {:cexpr "__cil_tmp213"} boogie_si_record_i64($i333);
    goto corral_source_split_4650;

  corral_source_split_4650:
    assume {:verifier.code 0} true;
    $i334 := $p2i.ref.i64($p2);
    goto corral_source_split_4651;

  corral_source_split_4651:
    assume {:verifier.code 0} true;
    $i335 := $add.i64($i334, 8);
    call {:si_unique_call 1970} {:cexpr "__cil_tmp214"} boogie_si_record_i64($i335);
    goto corral_source_split_4652;

  corral_source_split_4652:
    assume {:verifier.code 0} true;
    $p336 := $i2p.i64.ref($i335);
    goto corral_source_split_4653;

  corral_source_split_4653:
    assume {:verifier.code 0} true;
    $p337 := $bitcast.ref.ref($p336);
    goto corral_source_split_4654;

  corral_source_split_4654:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1971} vslice_dummy_var_106 := inftl_write_oob($p25, $i333, 8, $p4, $p337);
    goto corral_source_split_4655;

  corral_source_split_4655:
    assume {:verifier.code 0} true;
    $i339 := $zext.i32.i64($i177);
    call {:si_unique_call 1972} {:cexpr "__cil_tmp217"} boogie_si_record_i64($i339);
    goto corral_source_split_4656;

  corral_source_split_4656:
    assume {:verifier.code 0} true;
    $i340 := $p2i.ref.i64($p0);
    call {:si_unique_call 1973} {:cexpr "__cil_tmp218"} boogie_si_record_i64($i340);
    goto corral_source_split_4657;

  corral_source_split_4657:
    assume {:verifier.code 0} true;
    $i341 := $add.i64($i340, 544);
    call {:si_unique_call 1974} {:cexpr "__cil_tmp219"} boogie_si_record_i64($i341);
    goto corral_source_split_4658;

  corral_source_split_4658:
    assume {:verifier.code 0} true;
    $p342 := $i2p.i64.ref($i341);
    goto corral_source_split_4659;

  corral_source_split_4659:
    assume {:verifier.code 0} true;
    $p343 := $load.ref($M.1, $p342);
    goto corral_source_split_4660;

  corral_source_split_4660:
    assume {:verifier.code 0} true;
    $p344 := $add.ref($p343, $mul.ref($i339, 2));
    goto corral_source_split_4661;

  corral_source_split_4661:
    assume {:verifier.code 0} true;
    $i345 := $zext.i32.i64($i13);
    call {:si_unique_call 1975} {:cexpr "__cil_tmp222"} boogie_si_record_i64($i345);
    goto corral_source_split_4662;

  corral_source_split_4662:
    assume {:verifier.code 0} true;
    $i346 := $p2i.ref.i64($p0);
    call {:si_unique_call 1976} {:cexpr "__cil_tmp223"} boogie_si_record_i64($i346);
    goto corral_source_split_4663;

  corral_source_split_4663:
    assume {:verifier.code 0} true;
    $i347 := $add.i64($i346, 552);
    call {:si_unique_call 1977} {:cexpr "__cil_tmp224"} boogie_si_record_i64($i347);
    goto corral_source_split_4664;

  corral_source_split_4664:
    assume {:verifier.code 0} true;
    $p348 := $i2p.i64.ref($i347);
    goto corral_source_split_4665;

  corral_source_split_4665:
    assume {:verifier.code 0} true;
    $p349 := $load.ref($M.1, $p348);
    goto corral_source_split_4666;

  corral_source_split_4666:
    assume {:verifier.code 0} true;
    $p350 := $add.ref($p349, $mul.ref($i345, 2));
    goto corral_source_split_4667;

  corral_source_split_4667:
    assume {:verifier.code 0} true;
    $i351 := $load.i16($M.1, $p350);
    goto corral_source_split_4668;

  corral_source_split_4668:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p344, $i351);
    goto corral_source_split_4669;

  corral_source_split_4669:
    assume {:verifier.code 0} true;
    $i352 := $zext.i32.i64($i13);
    call {:si_unique_call 1978} {:cexpr "__cil_tmp227"} boogie_si_record_i64($i352);
    goto corral_source_split_4670;

  corral_source_split_4670:
    assume {:verifier.code 0} true;
    $i353 := $p2i.ref.i64($p0);
    call {:si_unique_call 1979} {:cexpr "__cil_tmp228"} boogie_si_record_i64($i353);
    goto corral_source_split_4671;

  corral_source_split_4671:
    assume {:verifier.code 0} true;
    $i354 := $add.i64($i353, 552);
    call {:si_unique_call 1980} {:cexpr "__cil_tmp229"} boogie_si_record_i64($i354);
    goto corral_source_split_4672;

  corral_source_split_4672:
    assume {:verifier.code 0} true;
    $p355 := $i2p.i64.ref($i354);
    goto corral_source_split_4673;

  corral_source_split_4673:
    assume {:verifier.code 0} true;
    $p356 := $load.ref($M.1, $p355);
    goto corral_source_split_4674;

  corral_source_split_4674:
    assume {:verifier.code 0} true;
    $p357 := $add.ref($p356, $mul.ref($i352, 2));
    goto corral_source_split_4675;

  corral_source_split_4675:
    assume {:verifier.code 0} true;
    $i358 := $trunc.i32.i16($i177);
    goto corral_source_split_4676;

  corral_source_split_4676:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p357, $i358);
    goto corral_source_split_4677;

  corral_source_split_4677:
    assume {:verifier.code 0} true;
    $i359 := $p2i.ref.i64($p0);
    call {:si_unique_call 1981} {:cexpr "__cil_tmp232"} boogie_si_record_i64($i359);
    goto corral_source_split_4678;

  corral_source_split_4678:
    assume {:verifier.code 0} true;
    $i360 := $add.i64($i359, 522);
    call {:si_unique_call 1982} {:cexpr "__cil_tmp233"} boogie_si_record_i64($i360);
    goto corral_source_split_4679;

  corral_source_split_4679:
    assume {:verifier.code 0} true;
    $i361 := $p2i.ref.i64($p0);
    call {:si_unique_call 1983} {:cexpr "__cil_tmp234"} boogie_si_record_i64($i361);
    goto corral_source_split_4680;

  corral_source_split_4680:
    assume {:verifier.code 0} true;
    $i362 := $add.i64($i361, 522);
    call {:si_unique_call 1984} {:cexpr "__cil_tmp235"} boogie_si_record_i64($i362);
    goto corral_source_split_4681;

  corral_source_split_4681:
    assume {:verifier.code 0} true;
    $p363 := $i2p.i64.ref($i362);
    goto corral_source_split_4682;

  corral_source_split_4682:
    assume {:verifier.code 0} true;
    $i364 := $load.i16($M.1, $p363);
    call {:si_unique_call 1985} {:cexpr "__cil_tmp236"} boogie_si_record_i16($i364);
    goto corral_source_split_4683;

  corral_source_split_4683:
    assume {:verifier.code 0} true;
    $i365 := $zext.i16.i32($i364);
    call {:si_unique_call 1986} {:cexpr "__cil_tmp237"} boogie_si_record_i32($i365);
    goto corral_source_split_4684;

  corral_source_split_4684:
    assume {:verifier.code 0} true;
    $i366 := $sub.i32($i365, 1);
    call {:si_unique_call 1987} {:cexpr "__cil_tmp238"} boogie_si_record_i32($i366);
    goto corral_source_split_4685;

  corral_source_split_4685:
    assume {:verifier.code 0} true;
    $i367 := $trunc.i32.i16($i366);
    goto corral_source_split_4686;

  corral_source_split_4686:
    assume {:verifier.code 0} true;
    $p368 := $i2p.i64.ref($i360);
    goto corral_source_split_4687;

  corral_source_split_4687:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p368, $i367);
    goto corral_source_split_4688;

  corral_source_split_4688:
    assume {:verifier.code 0} true;
    $i369 := $trunc.i32.i16($i177);
    goto corral_source_split_4689;

  corral_source_split_4689:
    assume {:verifier.code 0} true;
    $i128 := $i369;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    goto corral_source_split_4401;

  corral_source_split_4401:
    assume {:verifier.code 0} true;
    $r := $i128;
    return;

  $bb68:
    assume $i260 == 1;
    goto corral_source_split_4564;

  corral_source_split_4564:
    assume {:verifier.code 0} true;
    $i261 := 8;
    goto $bb70;

  $bb65:
    assume $i252 == 1;
    goto corral_source_split_4553;

  corral_source_split_4553:
    assume {:verifier.code 0} true;
    $i253 := 4;
    goto $bb67;

  $bb62:
    assume $i244 == 1;
    goto corral_source_split_4542;

  corral_source_split_4542:
    assume {:verifier.code 0} true;
    $i245 := 2;
    goto $bb64;

  $bb59:
    assume $i229 == 1;
    goto corral_source_split_4524;

  corral_source_split_4524:
    assume {:verifier.code 0} true;
    $i230 := $p2i.ref.i64($p0);
    call {:si_unique_call 1906} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i230);
    goto corral_source_split_4525;

  corral_source_split_4525:
    assume {:verifier.code 0} true;
    $i231 := $add.i64($i230, 518);
    call {:si_unique_call 1907} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i231);
    goto corral_source_split_4526;

  corral_source_split_4526:
    assume {:verifier.code 0} true;
    $p232 := $i2p.i64.ref($i231);
    goto corral_source_split_4527;

  corral_source_split_4527:
    assume {:verifier.code 0} true;
    $i233 := $load.i16($M.1, $p232);
    call {:si_unique_call 1908} {:cexpr "__cil_tmp151"} boogie_si_record_i16($i233);
    goto corral_source_split_4528;

  corral_source_split_4528:
    assume {:verifier.code 0} true;
    $i234 := $zext.i16.i32($i233);
    call {:si_unique_call 1909} {:cexpr "__cil_tmp152"} boogie_si_record_i32($i234);
    goto corral_source_split_4529;

  corral_source_split_4529:
    assume {:verifier.code 0} true;
    $i235 := $sub.i32($i224, $i234);
    call {:si_unique_call 1910} {:cexpr "prev_block"} boogie_si_record_i32($i235);
    goto corral_source_split_4530;

  corral_source_split_4530:
    assume {:verifier.code 0} true;
    $i236 := $i235;
    goto $bb61;

  $bb56:
    assume $i186 == 1;
    goto corral_source_split_4479;

  corral_source_split_4479:
    assume {:verifier.code 0} true;
    $i187 := $p2i.ref.i64($p0);
    call {:si_unique_call 1878} {:cexpr "__cil_tmp119"} boogie_si_record_i64($i187);
    goto corral_source_split_4480;

  corral_source_split_4480:
    assume {:verifier.code 0} true;
    $i188 := $add.i64($i187, 356);
    call {:si_unique_call 1879} {:cexpr "__cil_tmp120"} boogie_si_record_i64($i188);
    goto corral_source_split_4481;

  corral_source_split_4481:
    assume {:verifier.code 0} true;
    $p189 := $i2p.i64.ref($i188);
    goto corral_source_split_4482;

  corral_source_split_4482:
    assume {:verifier.code 0} true;
    $i190 := $load.i32($M.1, $p189);
    call {:si_unique_call 1880} {:cexpr "__cil_tmp121"} boogie_si_record_i32($i190);
    goto corral_source_split_4483;

  corral_source_split_4483:
    assume {:verifier.code 0} true;
    $i191 := $mul.i32($i190, $i185);
    call {:si_unique_call 1881} {:cexpr "__cil_tmp122"} boogie_si_record_i32($i191);
    goto corral_source_split_4484;

  corral_source_split_4484:
    assume {:verifier.code 0} true;
    $i192 := $add.i32($i191, 8);
    call {:si_unique_call 1882} {:cexpr "__cil_tmp123"} boogie_si_record_i32($i192);
    goto corral_source_split_4485;

  corral_source_split_4485:
    assume {:verifier.code 0} true;
    $i193 := $zext.i32.i64($i192);
    call {:si_unique_call 1883} {:cexpr "__cil_tmp124"} boogie_si_record_i64($i193);
    goto corral_source_split_4486;

  corral_source_split_4486:
    assume {:verifier.code 0} true;
    $i194 := $p2i.ref.i64($p2);
    goto corral_source_split_4487;

  corral_source_split_4487:
    assume {:verifier.code 0} true;
    $i195 := $add.i64($i194, 8);
    call {:si_unique_call 1884} {:cexpr "__cil_tmp125"} boogie_si_record_i64($i195);
    goto corral_source_split_4488;

  corral_source_split_4488:
    assume {:verifier.code 0} true;
    $p196 := $i2p.i64.ref($i195);
    goto corral_source_split_4489;

  corral_source_split_4489:
    assume {:verifier.code 0} true;
    $p197 := $bitcast.ref.ref($p196);
    goto corral_source_split_4490;

  corral_source_split_4490:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1885} vslice_dummy_var_104 := inftl_read_oob($p25, $i193, 8, $p4, $p197);
    goto corral_source_split_4491;

  corral_source_split_4491:
    assume {:verifier.code 0} true;
    $i199 := $add.i64(8, 4);
    call {:si_unique_call 1886} {:cexpr "__cil_tmp129"} boogie_si_record_i64($i199);
    goto corral_source_split_4492;

  corral_source_split_4492:
    assume {:verifier.code 0} true;
    $i200 := $p2i.ref.i64($p2);
    goto corral_source_split_4493;

  corral_source_split_4493:
    assume {:verifier.code 0} true;
    $i201 := $add.i64($i200, $i199);
    call {:si_unique_call 1887} {:cexpr "__cil_tmp130"} boogie_si_record_i64($i201);
    goto corral_source_split_4494;

  corral_source_split_4494:
    assume {:verifier.code 0} true;
    $p202 := $i2p.i64.ref($i201);
    goto corral_source_split_4495;

  corral_source_split_4495:
    assume {:verifier.code 0} true;
    $i203 := $load.i8($M.1, $p202);
    call {:si_unique_call 1888} {:cexpr "__cil_tmp131"} boogie_si_record_i8($i203);
    goto corral_source_split_4496;

  corral_source_split_4496:
    assume {:verifier.code 0} true;
    $i204 := $zext.i8.i32($i203);
    call {:si_unique_call 1889} {:cexpr "__cil_tmp132"} boogie_si_record_i32($i204);
    goto corral_source_split_4497;

  corral_source_split_4497:
    assume {:verifier.code 0} true;
    $i205 := $add.i32($i204, 1);
    call {:si_unique_call 1890} {:cexpr "__cil_tmp133"} boogie_si_record_i32($i205);
    goto corral_source_split_4498;

  corral_source_split_4498:
    assume {:verifier.code 0} true;
    $i206 := $trunc.i32.i8($i205);
    call {:si_unique_call 1891} {:cexpr "anac"} boogie_si_record_i8($i206);
    goto corral_source_split_4499;

  corral_source_split_4499:
    assume {:verifier.code 0} true;
    $i207 := $add.i64(8, 5);
    call {:si_unique_call 1892} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i207);
    goto corral_source_split_4500;

  corral_source_split_4500:
    assume {:verifier.code 0} true;
    $i208 := $p2i.ref.i64($p2);
    goto corral_source_split_4501;

  corral_source_split_4501:
    assume {:verifier.code 0} true;
    $i209 := $add.i64($i208, $i207);
    call {:si_unique_call 1893} {:cexpr "__cil_tmp136"} boogie_si_record_i64($i209);
    goto corral_source_split_4502;

  corral_source_split_4502:
    assume {:verifier.code 0} true;
    $p210 := $i2p.i64.ref($i209);
    goto corral_source_split_4503;

  corral_source_split_4503:
    assume {:verifier.code 0} true;
    $i211 := $load.i8($M.1, $p210);
    call {:si_unique_call 1894} {:cexpr "__cil_tmp137"} boogie_si_record_i8($i211);
    goto corral_source_split_4504;

  corral_source_split_4504:
    assume {:verifier.code 0} true;
    $i212 := $zext.i8.i32($i211);
    call {:si_unique_call 1895} {:cexpr "__cil_tmp138"} boogie_si_record_i32($i212);
    goto corral_source_split_4505;

  corral_source_split_4505:
    assume {:verifier.code 0} true;
    $i213 := $add.i32($i212, 1);
    call {:si_unique_call 1896} {:cexpr "__cil_tmp139"} boogie_si_record_i32($i213);
    goto corral_source_split_4506;

  corral_source_split_4506:
    assume {:verifier.code 0} true;
    $i214 := $trunc.i32.i8($i213);
    call {:si_unique_call 1897} {:cexpr "nacs"} boogie_si_record_i8($i214);
    goto corral_source_split_4507;

  corral_source_split_4507:
    assume {:verifier.code 0} true;
    $i215, $i216 := $i206, $i214;
    goto $bb58;

  $bb47:
    assume $i145 == 1;
    goto corral_source_split_4424;

  corral_source_split_4424:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1855} $i146 := INFTL_makefreeblock($p0, $i1);
    call {:si_unique_call 1856} {:cexpr "tmp___3"} boogie_si_record_i16($i146);
    goto corral_source_split_4425;

  corral_source_split_4425:
    assume {:verifier.code 0} true;
    $p147 := $bitcast.ref.ref($p7);
    goto corral_source_split_4426;

  corral_source_split_4426:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p147, .str);
    goto corral_source_split_4427;

  corral_source_split_4427:
    assume {:verifier.code 0} true;
    $i148 := $p2i.ref.i64($p7);
    goto corral_source_split_4428;

  corral_source_split_4428:
    assume {:verifier.code 0} true;
    $i149 := $add.i64($i148, 8);
    call {:si_unique_call 1857} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i149);
    goto corral_source_split_4429;

  corral_source_split_4429:
    assume {:verifier.code 0} true;
    $p150 := $i2p.i64.ref($i149);
    goto corral_source_split_4430;

  corral_source_split_4430:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p150, .str.38);
    goto corral_source_split_4431;

  corral_source_split_4431:
    assume {:verifier.code 0} true;
    $i151 := $p2i.ref.i64($p7);
    goto corral_source_split_4432;

  corral_source_split_4432:
    assume {:verifier.code 0} true;
    $i152 := $add.i64($i151, 16);
    call {:si_unique_call 1858} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i152);
    goto corral_source_split_4433;

  corral_source_split_4433:
    assume {:verifier.code 0} true;
    $p153 := $i2p.i64.ref($i152);
    goto corral_source_split_4434;

  corral_source_split_4434:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p153, .str.31);
    goto corral_source_split_4435;

  corral_source_split_4435:
    assume {:verifier.code 0} true;
    $i154 := $p2i.ref.i64($p7);
    goto corral_source_split_4436;

  corral_source_split_4436:
    assume {:verifier.code 0} true;
    $i155 := $add.i64($i154, 24);
    call {:si_unique_call 1859} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i155);
    goto corral_source_split_4437;

  corral_source_split_4437:
    assume {:verifier.code 0} true;
    $p156 := $i2p.i64.ref($i155);
    goto corral_source_split_4438;

  corral_source_split_4438:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p156, .str.42);
    goto corral_source_split_4439;

  corral_source_split_4439:
    assume {:verifier.code 0} true;
    $i157 := $p2i.ref.i64($p7);
    goto corral_source_split_4440;

  corral_source_split_4440:
    assume {:verifier.code 0} true;
    $i158 := $add.i64($i157, 32);
    call {:si_unique_call 1860} {:cexpr "__cil_tmp107"} boogie_si_record_i64($i158);
    goto corral_source_split_4441;

  corral_source_split_4441:
    assume {:verifier.code 0} true;
    $p159 := $i2p.i64.ref($i158);
    goto corral_source_split_4442;

  corral_source_split_4442:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p159, 573);
    goto corral_source_split_4443;

  corral_source_split_4443:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p7);
    goto corral_source_split_4444;

  corral_source_split_4444:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 35);
    call {:si_unique_call 1861} {:cexpr "__cil_tmp108"} boogie_si_record_i64($i161);
    goto corral_source_split_4445;

  corral_source_split_4445:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_4446;

  corral_source_split_4446:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p162, 0);
    goto corral_source_split_4447;

  corral_source_split_4447:
    assume {:verifier.code 0} true;
    $i163 := $p2i.ref.i64($p7);
    goto corral_source_split_4448;

  corral_source_split_4448:
    assume {:verifier.code 0} true;
    $i164 := $add.i64($i163, 35);
    call {:si_unique_call 1862} {:cexpr "__cil_tmp109"} boogie_si_record_i64($i164);
    goto corral_source_split_4449;

  corral_source_split_4449:
    assume {:verifier.code 0} true;
    $p165 := $i2p.i64.ref($i164);
    goto corral_source_split_4450;

  corral_source_split_4450:
    assume {:verifier.code 0} true;
    $i166 := $load.i8($M.1, $p165);
    call {:si_unique_call 1863} {:cexpr "__cil_tmp110"} boogie_si_record_i8($i166);
    goto corral_source_split_4451;

  corral_source_split_4451:
    assume {:verifier.code 0} true;
    $i167 := $zext.i8.i64($i166);
    call {:si_unique_call 1864} {:cexpr "__cil_tmp111"} boogie_si_record_i64($i167);
    goto corral_source_split_4452;

  corral_source_split_4452:
    assume {:verifier.code 0} true;
    $i168 := $and.i64($i167, 1);
    call {:si_unique_call 1865} {:cexpr "__cil_tmp112"} boogie_si_record_i64($i168);
    goto corral_source_split_4453;

  corral_source_split_4453:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1866} $i169 := __builtinx_expect.i64.i64($i168, 0);
    goto corral_source_split_4454;

  corral_source_split_4454:
    assume {:verifier.code 0} true;
    $i170 := $sext.i32.i64($i169);
    call {:si_unique_call 1867} {:cexpr "tmp___4"} boogie_si_record_i64($i170);
    goto corral_source_split_4455;

  corral_source_split_4455:
    assume {:verifier.code 0} true;
    $i171 := $ne.i64($i170, 0);
    goto corral_source_split_4456;

  corral_source_split_4456:
    assume {:verifier.code 0} true;
    assume {:branchcond $i171} true;
    goto $bb49, $bb50;

  $bb50:
    assume !($i171 == 1);
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1869} $i173 := INFTL_findfreeblock($p0, 1);
    call {:si_unique_call 1870} {:cexpr "tmp___5"} boogie_si_record_i16($i173);
    goto corral_source_split_4461;

  corral_source_split_4461:
    assume {:verifier.code 0} true;
    $i174 := $zext.i16.i32($i173);
    call {:si_unique_call 1871} {:cexpr "writeEUN"} boogie_si_record_i32($i174);
    goto corral_source_split_4462;

  corral_source_split_4462:
    assume {:verifier.code 0} true;
    $i175 := $eq.i32($i174, 65535);
    goto corral_source_split_4463;

  corral_source_split_4463:
    assume {:verifier.code 0} true;
    assume {:branchcond $i175} true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i175 == 1);
    assume {:verifier.code 0} true;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    $i177 := $i174;
    goto $bb55;

  $bb52:
    assume $i175 == 1;
    goto corral_source_split_4465;

  corral_source_split_4465:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1872} vslice_dummy_var_103 := printk.ref(.str.43);
    goto corral_source_split_4466;

  corral_source_split_4466:
    assume {:verifier.code 0} true;
    $i128 := $sub.i16(0, 1);
    goto $bb39;

  $bb49:
    assume $i171 == 1;
    goto corral_source_split_4458;

  corral_source_split_4458:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1868} vslice_dummy_var_102 := __dynamic_pr_debug.ref.ref.i32($p7, .str.42, $i13);
    goto corral_source_split_4459;

  corral_source_split_4459:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb44:
    assume $i141 == 1;
    goto corral_source_split_4417;

  corral_source_split_4417:
    assume {:verifier.code 0} true;
    $i142 := $trunc.i32.i16($i124);
    goto corral_source_split_4418;

  corral_source_split_4418:
    assume {:verifier.code 0} true;
    $i128 := $i142;
    goto $bb39;

  $bb5:
    assume $i65 == 1;
    goto corral_source_split_4305;

  corral_source_split_4305:
    assume {:verifier.code 0} true;
    $i67, $i68, $i69 := $i59, 65535, 10000;
    goto $bb8;

  $bb8:
    call $i70, $i71, $p72, $i73, $i74, $i75, $i76, $p77, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $p86, $i87, $i88, $i89, $p90, $i91, $i92, $p93, $i94, $i95, $p96, $i97, $i98, $p99, $i100, $i101, $p102, $i103, $i104, $p105, $i106, $i107, $p108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i117, $i118, $i119, $i120, $i122, $i123, $i125, $i126, $i129, $i130, $i131, $p132, $p133, $p134, $i135, $i136, $i137, $i138, $i139, $i67, $i68, $i69, $i140, vslice_dummy_var_99, vslice_dummy_var_100 := INFTL_findwriteunit_loop_$bb8($p0, $i1, $p3, $p4, $p6, $i21, $p25, $p62, $i70, $i71, $p72, $i73, $i74, $i75, $i76, $p77, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $p86, $i87, $i88, $i89, $p90, $i91, $i92, $p93, $i94, $i95, $p96, $i97, $i98, $p99, $i100, $i101, $p102, $i103, $i104, $p105, $i106, $i107, $p108, $i109, $i110, $i111, $i112, $i113, $i114, $i116, $i117, $i118, $i119, $i120, $i122, $i123, $i125, $i126, $i129, $i130, $i131, $p132, $p133, $p134, $i135, $i136, $i137, $i138, $i139, $i67, $i68, $i69, $i140, vslice_dummy_var_99, vslice_dummy_var_100);
    goto $bb8_last;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i70 := $p2i.ref.i64($p0);
    call {:si_unique_call 1817} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i70);
    goto corral_source_split_4311;

  corral_source_split_4311:
    assume {:verifier.code 0} true;
    $i71 := $add.i64($i70, 356);
    call {:si_unique_call 1818} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i71);
    goto corral_source_split_4312;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    $p72 := $i2p.i64.ref($i71);
    goto corral_source_split_4313;

  corral_source_split_4313:
    assume {:verifier.code 0} true;
    $i73 := $load.i32($M.1, $p72);
    call {:si_unique_call 1819} {:cexpr "__cil_tmp70"} boogie_si_record_i32($i73);
    goto corral_source_split_4314;

  corral_source_split_4314:
    assume {:verifier.code 0} true;
    $i74 := $mul.i32($i73, $i67);
    call {:si_unique_call 1820} {:cexpr "__cil_tmp71"} boogie_si_record_i32($i74);
    goto corral_source_split_4315;

  corral_source_split_4315:
    assume {:verifier.code 0} true;
    $i75 := $zext.i32.i64($i74);
    call {:si_unique_call 1821} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i75);
    goto corral_source_split_4316;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    $i76 := $add.i64($i75, $i21);
    call {:si_unique_call 1822} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i76);
    goto corral_source_split_4317;

  corral_source_split_4317:
    assume {:verifier.code 0} true;
    $p77 := $bitcast.ref.ref($p3);
    goto corral_source_split_4318;

  corral_source_split_4318:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1823} vslice_dummy_var_99 := inftl_read_oob($p25, $i76, 8, $p4, $p77);
    goto corral_source_split_4319;

  corral_source_split_4319:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p3);
    goto corral_source_split_4320;

  corral_source_split_4320:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 7);
    call {:si_unique_call 1824} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i80);
    goto corral_source_split_4321;

  corral_source_split_4321:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_4322;

  corral_source_split_4322:
    assume {:verifier.code 0} true;
    $i82 := $load.i8($M.1, $p81);
    call {:si_unique_call 1825} {:cexpr "__cil_tmp77"} boogie_si_record_i8($i82);
    goto corral_source_split_4323;

  corral_source_split_4323:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 1826} {:cexpr "__cil_tmp78"} boogie_si_record_i32($i83);
    goto corral_source_split_4324;

  corral_source_split_4324:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p3);
    goto corral_source_split_4325;

  corral_source_split_4325:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 6);
    call {:si_unique_call 1827} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i85);
    goto corral_source_split_4326;

  corral_source_split_4326:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_4327;

  corral_source_split_4327:
    assume {:verifier.code 0} true;
    $i87 := $load.i8($M.1, $p86);
    call {:si_unique_call 1828} {:cexpr "__cil_tmp80"} boogie_si_record_i8($i87);
    goto corral_source_split_4328;

  corral_source_split_4328:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 1829} {:cexpr "__cil_tmp81"} boogie_si_record_i32($i88);
    goto corral_source_split_4329;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    $i89 := $or.i32($i88, $i83);
    call {:si_unique_call 1830} {:cexpr "__cil_tmp82"} boogie_si_record_i32($i89);
    goto corral_source_split_4330;

  corral_source_split_4330:
    assume {:verifier.code 0} true;
    $p90 := $bitcast.ref.ref($p6);
    goto corral_source_split_4331;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p90, .str);
    goto corral_source_split_4332;

  corral_source_split_4332:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p6);
    goto corral_source_split_4333;

  corral_source_split_4333:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 8);
    call {:si_unique_call 1831} {:cexpr "__cil_tmp84"} boogie_si_record_i64($i92);
    goto corral_source_split_4334;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_4335;

  corral_source_split_4335:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p93, .str.38);
    goto corral_source_split_4336;

  corral_source_split_4336:
    assume {:verifier.code 0} true;
    $i94 := $p2i.ref.i64($p6);
    goto corral_source_split_4337;

  corral_source_split_4337:
    assume {:verifier.code 0} true;
    $i95 := $add.i64($i94, 16);
    call {:si_unique_call 1832} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i95);
    goto corral_source_split_4338;

  corral_source_split_4338:
    assume {:verifier.code 0} true;
    $p96 := $i2p.i64.ref($i95);
    goto corral_source_split_4339;

  corral_source_split_4339:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p96, .str.31);
    goto corral_source_split_4340;

  corral_source_split_4340:
    assume {:verifier.code 0} true;
    $i97 := $p2i.ref.i64($p6);
    goto corral_source_split_4341;

  corral_source_split_4341:
    assume {:verifier.code 0} true;
    $i98 := $add.i64($i97, 24);
    call {:si_unique_call 1833} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i98);
    goto corral_source_split_4342;

  corral_source_split_4342:
    assume {:verifier.code 0} true;
    $p99 := $i2p.i64.ref($i98);
    goto corral_source_split_4343;

  corral_source_split_4343:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p99, .str.40);
    goto corral_source_split_4344;

  corral_source_split_4344:
    assume {:verifier.code 0} true;
    $i100 := $p2i.ref.i64($p6);
    goto corral_source_split_4345;

  corral_source_split_4345:
    assume {:verifier.code 0} true;
    $i101 := $add.i64($i100, 32);
    call {:si_unique_call 1834} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i101);
    goto corral_source_split_4346;

  corral_source_split_4346:
    assume {:verifier.code 0} true;
    $p102 := $i2p.i64.ref($i101);
    goto corral_source_split_4347;

  corral_source_split_4347:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p102, 518);
    goto corral_source_split_4348;

  corral_source_split_4348:
    assume {:verifier.code 0} true;
    $i103 := $p2i.ref.i64($p6);
    goto corral_source_split_4349;

  corral_source_split_4349:
    assume {:verifier.code 0} true;
    $i104 := $add.i64($i103, 35);
    call {:si_unique_call 1835} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i104);
    goto corral_source_split_4350;

  corral_source_split_4350:
    assume {:verifier.code 0} true;
    $p105 := $i2p.i64.ref($i104);
    goto corral_source_split_4351;

  corral_source_split_4351:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p105, 0);
    goto corral_source_split_4352;

  corral_source_split_4352:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p6);
    goto corral_source_split_4353;

  corral_source_split_4353:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 35);
    call {:si_unique_call 1836} {:cexpr "__cil_tmp89"} boogie_si_record_i64($i107);
    goto corral_source_split_4354;

  corral_source_split_4354:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_4355;

  corral_source_split_4355:
    assume {:verifier.code 0} true;
    $i109 := $load.i8($M.1, $p108);
    call {:si_unique_call 1837} {:cexpr "__cil_tmp90"} boogie_si_record_i8($i109);
    goto corral_source_split_4356;

  corral_source_split_4356:
    assume {:verifier.code 0} true;
    $i110 := $zext.i8.i64($i109);
    call {:si_unique_call 1838} {:cexpr "__cil_tmp91"} boogie_si_record_i64($i110);
    goto corral_source_split_4357;

  corral_source_split_4357:
    assume {:verifier.code 0} true;
    $i111 := $and.i64($i110, 1);
    call {:si_unique_call 1839} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i111);
    goto corral_source_split_4358;

  corral_source_split_4358:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1840} $i112 := __builtinx_expect.i64.i64($i111, 0);
    goto corral_source_split_4359;

  corral_source_split_4359:
    assume {:verifier.code 0} true;
    $i113 := $sext.i32.i64($i112);
    call {:si_unique_call 1841} {:cexpr "tmp___0"} boogie_si_record_i64($i113);
    goto corral_source_split_4360;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    $i114 := $ne.i64($i113, 0);
    goto corral_source_split_4361;

  corral_source_split_4361:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i114 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i116 := $eq.i32($i89, 255);
    goto corral_source_split_4366;

  corral_source_split_4366:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i116 == 1);
    goto corral_source_split_4370;

  corral_source_split_4370:
    assume {:verifier.code 0} true;
    $i117 := $eq.i32($i89, 0);
    goto corral_source_split_4371;

  corral_source_split_4371:
    assume {:verifier.code 0} true;
    $i118 := $i68;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i117 == 1);
    goto corral_source_split_4375;

  corral_source_split_4375:
    assume {:verifier.code 0} true;
    $i119 := $eq.i32($i89, 85);
    goto corral_source_split_4376;

  corral_source_split_4376:
    assume {:verifier.code 0} true;
    $i120 := $i68;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i119 == 1);
    goto corral_source_split_4380;

  corral_source_split_4380:
    assume {:verifier.code 0} true;
    $i122 := $eq.i32($i89, 17);
    goto corral_source_split_4381;

  corral_source_split_4381:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i122 == 1);
    goto corral_source_split_4387;

  corral_source_split_4387:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i123 := $i68;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_4391;

  corral_source_split_4391:
    assume {:verifier.code 0} true;
    $i125 := $sub.i32($i69, 1);
    call {:si_unique_call 1843} {:cexpr "silly"} boogie_si_record_i32($i125);
    goto corral_source_split_4392;

  corral_source_split_4392:
    assume {:verifier.code 0} true;
    $i126 := $eq.i32($i69, 0);
    goto corral_source_split_4393;

  corral_source_split_4393:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i126 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i129 := $zext.i32.i64($i67);
    call {:si_unique_call 1845} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i129);
    goto corral_source_split_4403;

  corral_source_split_4403:
    assume {:verifier.code 0} true;
    $i130 := $p2i.ref.i64($p0);
    call {:si_unique_call 1846} {:cexpr "__cil_tmp94"} boogie_si_record_i64($i130);
    goto corral_source_split_4404;

  corral_source_split_4404:
    assume {:verifier.code 0} true;
    $i131 := $add.i64($i130, 544);
    call {:si_unique_call 1847} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i131);
    goto corral_source_split_4405;

  corral_source_split_4405:
    assume {:verifier.code 0} true;
    $p132 := $i2p.i64.ref($i131);
    goto corral_source_split_4406;

  corral_source_split_4406:
    assume {:verifier.code 0} true;
    $p133 := $load.ref($M.1, $p132);
    goto corral_source_split_4407;

  corral_source_split_4407:
    assume {:verifier.code 0} true;
    $p134 := $add.ref($p133, $mul.ref($i129, 2));
    goto corral_source_split_4408;

  corral_source_split_4408:
    assume {:verifier.code 0} true;
    $i135 := $load.i16($M.1, $p134);
    call {:si_unique_call 1848} {:cexpr "__cil_tmp98"} boogie_si_record_i16($i135);
    goto corral_source_split_4409;

  corral_source_split_4409:
    assume {:verifier.code 0} true;
    $i136 := $zext.i16.i32($i135);
    call {:si_unique_call 1849} {:cexpr "thisEUN"} boogie_si_record_i32($i136);
    goto corral_source_split_4410;

  corral_source_split_4410:
    assume {:verifier.code 0} true;
    $i137 := $load.i16($M.1, $p62);
    call {:si_unique_call 1850} {:cexpr "__cil_tmp101"} boogie_si_record_i16($i137);
    goto corral_source_split_4411;

  corral_source_split_4411:
    assume {:verifier.code 0} true;
    $i138 := $zext.i16.i32($i137);
    call {:si_unique_call 1851} {:cexpr "__cil_tmp102"} boogie_si_record_i32($i138);
    goto corral_source_split_4412;

  corral_source_split_4412:
    assume {:verifier.code 0} true;
    $i139 := $uge.i32($i138, $i136);
    goto corral_source_split_4413;

  corral_source_split_4413:
    assume {:verifier.code 0} true;
    $i140 := $i123;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i139 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_4415;

  corral_source_split_4415:
    assume {:verifier.code 0} true;
    $i66 := $i140;
    goto $bb7;

  $bb41:
    assume $i139 == 1;
    assume {:verifier.code 0} true;
    $i67, $i68, $i69 := $i136, $i123, $i125;
    goto $bb41_dummy;

  $bb37:
    assume $i126 == 1;
    goto corral_source_split_4398;

  corral_source_split_4398:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1844} vslice_dummy_var_101 := printk.ref.i32(.str.41, $i13);
    goto corral_source_split_4399;

  corral_source_split_4399:
    assume {:verifier.code 0} true;
    $i128 := $sub.i16(0, 1);
    goto $bb39;

  $bb22:
    assume $i122 == 1;
    goto corral_source_split_4385;

  corral_source_split_4385:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i123 := $i68;
    goto $bb29;

  $bb19:
    assume $i119 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_4378;

  corral_source_split_4378:
    assume {:verifier.code 0} true;
    $i121 := $i120;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    goto corral_source_split_4383;

  corral_source_split_4383:
    assume {:verifier.code 0} true;
    $i124 := $i121;
    goto $bb30;

  $bb16:
    assume $i117 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_4373;

  corral_source_split_4373:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i121 := $i118;
    goto $bb21;

  $bb13:
    assume $i116 == 1;
    goto corral_source_split_4368;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i123 := $i67;
    goto $bb29;

  $bb10:
    assume $i114 == 1;
    goto corral_source_split_4363;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1842} vslice_dummy_var_100 := __dynamic_pr_debug.ref.ref.i32.i32.i32($p6, .str.40, $i1, $i68, $i89);
    goto corral_source_split_4364;

  corral_source_split_4364:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb1:
    assume $i50 == 1;
    goto corral_source_split_4287;

  corral_source_split_4287:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1807} vslice_dummy_var_98 := __dynamic_pr_debug.ref.ref.ref.i32($p5, .str.39, $p0, $i1);
    goto corral_source_split_4288;

  corral_source_split_4288:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb41_dummy:
    assume false;
    return;

  $bb8_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4309;
}



const inftl_write: ref;

axiom inftl_write == $sub.ref(0, 162441);

procedure inftl_write($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref, $p5: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.0, $M.1, $M.2, $M.3, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation inftl_write($p0: ref, $i1: i64, $i2: i64, $p3: ref, $p4: ref, $p5: ref) returns ($r: i32)
{
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i32;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i64;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 1989} $p6 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    call {:si_unique_call 1990} {:cexpr "inftl_write:arg:offs"} boogie_si_record_i64($i1);
    call {:si_unique_call 1991} {:cexpr "inftl_write:arg:len"} boogie_si_record_i64($i2);
    goto corral_source_split_4694;

  corral_source_split_4694:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p6);
    goto corral_source_split_4695;

  corral_source_split_4695:
    assume {:verifier.code 0} true;
    $M.0 := $store.i32($M.0, $p7, 0);
    goto corral_source_split_4696;

  corral_source_split_4696:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p6);
    goto corral_source_split_4697;

  corral_source_split_4697:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 40);
    call {:si_unique_call 1992} {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
    goto corral_source_split_4698;

  corral_source_split_4698:
    assume {:verifier.code 0} true;
    $i10 := $trunc.i64.i32($i1);
    goto corral_source_split_4699;

  corral_source_split_4699:
    assume {:verifier.code 0} true;
    $p11 := $i2p.i64.ref($i9);
    goto corral_source_split_4700;

  corral_source_split_4700:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p11, $i10);
    goto corral_source_split_4701;

  corral_source_split_4701:
    assume {:verifier.code 0} true;
    $i12 := $p2i.ref.i64($p6);
    goto corral_source_split_4702;

  corral_source_split_4702:
    assume {:verifier.code 0} true;
    $i13 := $add.i64($i12, 24);
    call {:si_unique_call 1993} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i13);
    goto corral_source_split_4703;

  corral_source_split_4703:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p0);
    call {:si_unique_call 1994} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
    goto corral_source_split_4704;

  corral_source_split_4704:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 28);
    call {:si_unique_call 1995} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
    goto corral_source_split_4705;

  corral_source_split_4705:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_4706;

  corral_source_split_4706:
    assume {:verifier.code 0} true;
    $i17 := $load.i32($M.1, $p16);
    call {:si_unique_call 1996} {:cexpr "__cil_tmp14"} boogie_si_record_i32($i17);
    goto corral_source_split_4707;

  corral_source_split_4707:
    assume {:verifier.code 0} true;
    $i18 := $zext.i32.i64($i17);
    goto corral_source_split_4708;

  corral_source_split_4708:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i13);
    goto corral_source_split_4709;

  corral_source_split_4709:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p19, $i18);
    goto corral_source_split_4710;

  corral_source_split_4710:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p6);
    goto corral_source_split_4711;

  corral_source_split_4711:
    assume {:verifier.code 0} true;
    $i21 := $add.i64($i20, 56);
    call {:si_unique_call 1997} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i21);
    goto corral_source_split_4712;

  corral_source_split_4712:
    assume {:verifier.code 0} true;
    $p22 := $i2p.i64.ref($i21);
    goto corral_source_split_4713;

  corral_source_split_4713:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p22, $p5);
    goto corral_source_split_4714;

  corral_source_split_4714:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p6);
    goto corral_source_split_4715;

  corral_source_split_4715:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 48);
    call {:si_unique_call 1998} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i24);
    goto corral_source_split_4716;

  corral_source_split_4716:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_4717;

  corral_source_split_4717:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p25, $p4);
    goto corral_source_split_4718;

  corral_source_split_4718:
    assume {:verifier.code 0} true;
    $i26 := $p2i.ref.i64($p6);
    goto corral_source_split_4719;

  corral_source_split_4719:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($i26, 8);
    call {:si_unique_call 1999} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i27);
    goto corral_source_split_4720;

  corral_source_split_4720:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_4721;

  corral_source_split_4721:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, $p28, $i2);
    goto corral_source_split_4722;

  corral_source_split_4722:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p0);
    call {:si_unique_call 2000} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i29);
    goto corral_source_split_4723;

  corral_source_split_4723:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 20);
    call {:si_unique_call 2001} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i30);
    goto corral_source_split_4724;

  corral_source_split_4724:
    assume {:verifier.code 0} true;
    $p31 := $i2p.i64.ref($i30);
    goto corral_source_split_4725;

  corral_source_split_4725:
    assume {:verifier.code 0} true;
    $i32 := $load.i32($M.1, $p31);
    call {:si_unique_call 2002} {:cexpr "__cil_tmp20"} boogie_si_record_i32($i32);
    goto corral_source_split_4726;

  corral_source_split_4726:
    assume {:verifier.code 0} true;
    $i33 := $sub.i32(0, $i32);
    call {:si_unique_call 2003} {:cexpr "__cil_tmp21"} boogie_si_record_i32($i33);
    goto corral_source_split_4727;

  corral_source_split_4727:
    assume {:verifier.code 0} true;
    $i34 := $zext.i32.i64($i33);
    call {:si_unique_call 2004} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i34);
    goto corral_source_split_4728;

  corral_source_split_4728:
    assume {:verifier.code 0} true;
    $i35 := $and.i64($i34, $i1);
    call {:si_unique_call 2005} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i35);
    goto corral_source_split_4729;

  corral_source_split_4729:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2006} $i36 := mtd_write_oob($p0, $i35, $p6);
    call {:si_unique_call 2007} {:cexpr "res"} boogie_si_record_i32($i36);
    goto corral_source_split_4730;

  corral_source_split_4730:
    assume {:verifier.code 0} true;
    $i37 := $p2i.ref.i64($p6);
    goto corral_source_split_4731;

  corral_source_split_4731:
    assume {:verifier.code 0} true;
    $i38 := $add.i64($i37, 16);
    call {:si_unique_call 2008} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i38);
    goto corral_source_split_4732;

  corral_source_split_4732:
    assume {:verifier.code 0} true;
    $p39 := $i2p.i64.ref($i38);
    goto corral_source_split_4733;

  corral_source_split_4733:
    assume {:verifier.code 0} true;
    $i40 := $load.i64($M.1, $p39);
    goto corral_source_split_4734;

  corral_source_split_4734:
    assume {:verifier.code 0} true;
    $M.2 := $store.i64($M.2, $p3, $i40);
    goto corral_source_split_4735;

  corral_source_split_4735:
    assume {:verifier.code 0} true;
    $r := $i36;
    return;
}



const INFTL_deleteblock: ref;

axiom INFTL_deleteblock == $sub.ref(0, 163473);

procedure INFTL_deleteblock($p0: ref, $i1: i32) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $M.7, $M.8, $CurrAddr, $M.9, $M.10;



implementation INFTL_deleteblock($p0: ref, $i1: i32) returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i8;
  var $i51: i64;
  var $i52: i64;
  var $i53: i32;
  var $i54: i64;
  var $i55: i1;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i32;
  var $i61: i1;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $i74: i1;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $i84: i8;
  var $i85: i32;
  var $i86: i32;
  var $i75: i32;
  var $i87: i1;
  var $i88: i1;
  var $i89: i1;
  var $i90: i1;
  var $i91: i32;
  var $i94: i32;
  var $i95: i1;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $i99: i32;
  var $i100: i32;
  var $i101: i32;
  var $i104: i64;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i16;
  var $i111: i32;
  var $i112: i32;
  var $i113: i1;
  var $i63: i32;
  var $i64: i32;
  var $i114: i32;
  var $i62: i32;
  var $i92: i32;
  var $i115: i1;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i64;
  var $i130: i64;
  var $i131: i64;
  var $i132: i64;
  var $p133: ref;
  var $i134: i8;
  var $p135: ref;
  var $p136: ref;
  var $i137: i32;
  var $i138: i1;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i103: i32;
  var vslice_dummy_var_108: i32;
  var vslice_dummy_var_109: i32;
  var vslice_dummy_var_110: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 2009} $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2010} $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2011} $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 2012} {:cexpr "INFTL_deleteblock:arg:block"} boogie_si_record_i32($i1);
    goto corral_source_split_4737;

  corral_source_split_4737:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p0);
    call {:si_unique_call 2013} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i5);
    goto corral_source_split_4738;

  corral_source_split_4738:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 356);
    call {:si_unique_call 2014} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i6);
    goto corral_source_split_4739;

  corral_source_split_4739:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_4740;

  corral_source_split_4740:
    assume {:verifier.code 0} true;
    $i8 := $load.i32($M.1, $p7);
    call {:si_unique_call 2015} {:cexpr "__cil_tmp19"} boogie_si_record_i32($i8);
    goto corral_source_split_4741;

  corral_source_split_4741:
    assume {:verifier.code 0} true;
    $i9 := $udiv.i32($i8, 512);
    call {:si_unique_call 2016} {:cexpr "__cil_tmp20"} boogie_si_record_i32($i9);
    goto corral_source_split_4742;

  corral_source_split_4742:
    assume {:verifier.code 0} true;
    $i10 := $udiv.i32($i1, $i9);
    call {:si_unique_call 2017} {:cexpr "__cil_tmp21"} boogie_si_record_i32($i10);
    goto corral_source_split_4743;

  corral_source_split_4743:
    assume {:verifier.code 0} true;
    $i11 := $zext.i32.i64($i10);
    call {:si_unique_call 2018} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i11);
    goto corral_source_split_4744;

  corral_source_split_4744:
    assume {:verifier.code 0} true;
    $i12 := $p2i.ref.i64($p0);
    call {:si_unique_call 2019} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i12);
    goto corral_source_split_4745;

  corral_source_split_4745:
    assume {:verifier.code 0} true;
    $i13 := $add.i64($i12, 552);
    call {:si_unique_call 2020} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i13);
    goto corral_source_split_4746;

  corral_source_split_4746:
    assume {:verifier.code 0} true;
    $p14 := $i2p.i64.ref($i13);
    goto corral_source_split_4747;

  corral_source_split_4747:
    assume {:verifier.code 0} true;
    $p15 := $load.ref($M.1, $p14);
    goto corral_source_split_4748;

  corral_source_split_4748:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($p15, $mul.ref($i11, 2));
    goto corral_source_split_4749;

  corral_source_split_4749:
    assume {:verifier.code 0} true;
    $i17 := $load.i16($M.1, $p16);
    call {:si_unique_call 2021} {:cexpr "__cil_tmp27"} boogie_si_record_i16($i17);
    goto corral_source_split_4750;

  corral_source_split_4750:
    assume {:verifier.code 0} true;
    $i18 := $zext.i16.i32($i17);
    call {:si_unique_call 2022} {:cexpr "thisEUN"} boogie_si_record_i32($i18);
    goto corral_source_split_4751;

  corral_source_split_4751:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p0);
    call {:si_unique_call 2023} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i19);
    goto corral_source_split_4752;

  corral_source_split_4752:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 356);
    call {:si_unique_call 2024} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i20);
    goto corral_source_split_4753;

  corral_source_split_4753:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_4754;

  corral_source_split_4754:
    assume {:verifier.code 0} true;
    $i22 := $load.i32($M.1, $p21);
    call {:si_unique_call 2025} {:cexpr "__cil_tmp30"} boogie_si_record_i32($i22);
    goto corral_source_split_4755;

  corral_source_split_4755:
    assume {:verifier.code 0} true;
    $i23 := $sub.i32($i22, 1);
    call {:si_unique_call 2026} {:cexpr "__cil_tmp31"} boogie_si_record_i32($i23);
    goto corral_source_split_4756;

  corral_source_split_4756:
    assume {:verifier.code 0} true;
    $i24 := $mul.i32($i1, 512);
    call {:si_unique_call 2027} {:cexpr "__cil_tmp32"} boogie_si_record_i32($i24);
    goto corral_source_split_4757;

  corral_source_split_4757:
    assume {:verifier.code 0} true;
    $i25 := $and.i32($i24, $i23);
    call {:si_unique_call 2028} {:cexpr "__cil_tmp33"} boogie_si_record_i32($i25);
    goto corral_source_split_4758;

  corral_source_split_4758:
    assume {:verifier.code 0} true;
    $i26 := $zext.i32.i64($i25);
    call {:si_unique_call 2029} {:cexpr "blockofs"} boogie_si_record_i64($i26);
    goto corral_source_split_4759;

  corral_source_split_4759:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p0);
    call {:si_unique_call 2030} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i27);
    goto corral_source_split_4760;

  corral_source_split_4760:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 24);
    call {:si_unique_call 2031} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i28);
    goto corral_source_split_4761;

  corral_source_split_4761:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_4762;

  corral_source_split_4762:
    assume {:verifier.code 0} true;
    $p30 := $load.ref($M.1, $p29);
    goto corral_source_split_4763;

  corral_source_split_4763:
    assume {:verifier.code 0} true;
    $p31 := $bitcast.ref.ref($p4);
    goto corral_source_split_4764;

  corral_source_split_4764:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p31, .str);
    goto corral_source_split_4765;

  corral_source_split_4765:
    assume {:verifier.code 0} true;
    $i32 := $p2i.ref.i64($p4);
    goto corral_source_split_4766;

  corral_source_split_4766:
    assume {:verifier.code 0} true;
    $i33 := $add.i64($i32, 8);
    call {:si_unique_call 2032} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i33);
    goto corral_source_split_4767;

  corral_source_split_4767:
    assume {:verifier.code 0} true;
    $p34 := $i2p.i64.ref($i33);
    goto corral_source_split_4768;

  corral_source_split_4768:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p34, .str.60);
    goto corral_source_split_4769;

  corral_source_split_4769:
    assume {:verifier.code 0} true;
    $i35 := $p2i.ref.i64($p4);
    goto corral_source_split_4770;

  corral_source_split_4770:
    assume {:verifier.code 0} true;
    $i36 := $add.i64($i35, 16);
    call {:si_unique_call 2033} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i36);
    goto corral_source_split_4771;

  corral_source_split_4771:
    assume {:verifier.code 0} true;
    $p37 := $i2p.i64.ref($i36);
    goto corral_source_split_4772;

  corral_source_split_4772:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p37, .str.31);
    goto corral_source_split_4773;

  corral_source_split_4773:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p4);
    goto corral_source_split_4774;

  corral_source_split_4774:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 2034} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i39);
    goto corral_source_split_4775;

  corral_source_split_4775:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_4776;

  corral_source_split_4776:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p40, .str.61);
    goto corral_source_split_4777;

  corral_source_split_4777:
    assume {:verifier.code 0} true;
    $i41 := $p2i.ref.i64($p4);
    goto corral_source_split_4778;

  corral_source_split_4778:
    assume {:verifier.code 0} true;
    $i42 := $add.i64($i41, 32);
    call {:si_unique_call 2035} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i42);
    goto corral_source_split_4779;

  corral_source_split_4779:
    assume {:verifier.code 0} true;
    $p43 := $i2p.i64.ref($i42);
    goto corral_source_split_4780;

  corral_source_split_4780:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p43, 784);
    goto corral_source_split_4781;

  corral_source_split_4781:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p4);
    goto corral_source_split_4782;

  corral_source_split_4782:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 35);
    call {:si_unique_call 2036} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i45);
    goto corral_source_split_4783;

  corral_source_split_4783:
    assume {:verifier.code 0} true;
    $p46 := $i2p.i64.ref($i45);
    goto corral_source_split_4784;

  corral_source_split_4784:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p46, 0);
    goto corral_source_split_4785;

  corral_source_split_4785:
    assume {:verifier.code 0} true;
    $i47 := $p2i.ref.i64($p4);
    goto corral_source_split_4786;

  corral_source_split_4786:
    assume {:verifier.code 0} true;
    $i48 := $add.i64($i47, 35);
    call {:si_unique_call 2037} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i48);
    goto corral_source_split_4787;

  corral_source_split_4787:
    assume {:verifier.code 0} true;
    $p49 := $i2p.i64.ref($i48);
    goto corral_source_split_4788;

  corral_source_split_4788:
    assume {:verifier.code 0} true;
    $i50 := $load.i8($M.1, $p49);
    call {:si_unique_call 2038} {:cexpr "__cil_tmp44"} boogie_si_record_i8($i50);
    goto corral_source_split_4789;

  corral_source_split_4789:
    assume {:verifier.code 0} true;
    $i51 := $zext.i8.i64($i50);
    call {:si_unique_call 2039} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i51);
    goto corral_source_split_4790;

  corral_source_split_4790:
    assume {:verifier.code 0} true;
    $i52 := $and.i64($i51, 1);
    call {:si_unique_call 2040} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i52);
    goto corral_source_split_4791;

  corral_source_split_4791:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2041} $i53 := __builtinx_expect.i64.i64($i52, 0);
    goto corral_source_split_4792;

  corral_source_split_4792:
    assume {:verifier.code 0} true;
    $i54 := $sext.i32.i64($i53);
    call {:si_unique_call 2042} {:cexpr "tmp"} boogie_si_record_i64($i54);
    goto corral_source_split_4793;

  corral_source_split_4793:
    assume {:verifier.code 0} true;
    $i55 := $ne.i64($i54, 0);
    goto corral_source_split_4794;

  corral_source_split_4794:
    assume {:verifier.code 0} true;
    assume {:branchcond $i55} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p0);
    call {:si_unique_call 2044} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i57);
    goto corral_source_split_4799;

  corral_source_split_4799:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 560);
    call {:si_unique_call 2045} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i58);
    goto corral_source_split_4800;

  corral_source_split_4800:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_4801;

  corral_source_split_4801:
    assume {:verifier.code 0} true;
    $i60 := $load.i32($M.1, $p59);
    call {:si_unique_call 2046} {:cexpr "__cil_tmp75"} boogie_si_record_i32($i60);
    goto corral_source_split_4802;

  corral_source_split_4802:
    assume {:verifier.code 0} true;
    $i61 := $ugt.i32($i60, $i18);
    goto corral_source_split_4803;

  corral_source_split_4803:
    assume {:verifier.code 0} true;
    $i62 := $i18;
    assume {:branchcond $i61} true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i61 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_4807;

  corral_source_split_4807:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $i92 := $i62;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_4865;

  corral_source_split_4865:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i92, 65535);
    goto corral_source_split_4866;

  corral_source_split_4866:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i115 == 1);
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $i103 := 0;
    goto $bb38;

  $bb38:
    assume {:verifier.code 0} true;
    goto corral_source_split_4877;

  corral_source_split_4877:
    assume {:verifier.code 0} true;
    $r := $i103;
    return;

  $bb43:
    assume $i115 == 1;
    goto corral_source_split_4892;

  corral_source_split_4892:
    assume {:verifier.code 0} true;
    $i116 := $p2i.ref.i64($p0);
    call {:si_unique_call 2076} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i116);
    goto corral_source_split_4893;

  corral_source_split_4893:
    assume {:verifier.code 0} true;
    $i117 := $add.i64($i116, 356);
    call {:si_unique_call 2077} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i117);
    goto corral_source_split_4894;

  corral_source_split_4894:
    assume {:verifier.code 0} true;
    $p118 := $i2p.i64.ref($i117);
    goto corral_source_split_4895;

  corral_source_split_4895:
    assume {:verifier.code 0} true;
    $i119 := $load.i32($M.1, $p118);
    call {:si_unique_call 2078} {:cexpr "__cil_tmp78"} boogie_si_record_i32($i119);
    goto corral_source_split_4896;

  corral_source_split_4896:
    assume {:verifier.code 0} true;
    $i120 := $mul.i32($i119, $i92);
    call {:si_unique_call 2079} {:cexpr "__cil_tmp79"} boogie_si_record_i32($i120);
    goto corral_source_split_4897;

  corral_source_split_4897:
    assume {:verifier.code 0} true;
    $i121 := $zext.i32.i64($i120);
    call {:si_unique_call 2080} {:cexpr "__cil_tmp80"} boogie_si_record_i64($i121);
    goto corral_source_split_4898;

  corral_source_split_4898:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, $i26);
    call {:si_unique_call 2081} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i122);
    goto corral_source_split_4899;

  corral_source_split_4899:
    assume {:verifier.code 0} true;
    $p123 := $bitcast.ref.ref($p3);
    goto corral_source_split_4900;

  corral_source_split_4900:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2082} $i124 := inftl_read_oob($p30, $i122, 8, $p2, $p123);
    call {:si_unique_call 2083} {:cexpr "tmp___2"} boogie_si_record_i32($i124);
    goto corral_source_split_4901;

  corral_source_split_4901:
    assume {:verifier.code 0} true;
    $i125 := $slt.i32($i124, 0);
    goto corral_source_split_4902;

  corral_source_split_4902:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb45, $bb46;

  $bb46:
    assume !($i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p3);
    goto corral_source_split_4906;

  corral_source_split_4906:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, 7);
    call {:si_unique_call 2084} {:cexpr "__cil_tmp83"} boogie_si_record_i64($i127);
    goto corral_source_split_4907;

  corral_source_split_4907:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_4908;

  corral_source_split_4908:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p128, 0);
    goto corral_source_split_4909;

  corral_source_split_4909:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p3);
    goto corral_source_split_4910;

  corral_source_split_4910:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 6);
    call {:si_unique_call 2085} {:cexpr "__cil_tmp84"} boogie_si_record_i64($i130);
    goto corral_source_split_4911;

  corral_source_split_4911:
    assume {:verifier.code 0} true;
    $i131 := $p2i.ref.i64($p3);
    goto corral_source_split_4912;

  corral_source_split_4912:
    assume {:verifier.code 0} true;
    $i132 := $add.i64($i131, 7);
    call {:si_unique_call 2086} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i132);
    goto corral_source_split_4913;

  corral_source_split_4913:
    assume {:verifier.code 0} true;
    $p133 := $i2p.i64.ref($i132);
    goto corral_source_split_4914;

  corral_source_split_4914:
    assume {:verifier.code 0} true;
    $i134 := $load.i8($M.1, $p133);
    goto corral_source_split_4915;

  corral_source_split_4915:
    assume {:verifier.code 0} true;
    $p135 := $i2p.i64.ref($i130);
    goto corral_source_split_4916;

  corral_source_split_4916:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p135, $i134);
    goto corral_source_split_4917;

  corral_source_split_4917:
    assume {:verifier.code 0} true;
    $p136 := $bitcast.ref.ref($p3);
    goto corral_source_split_4918;

  corral_source_split_4918:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2087} $i137 := inftl_write_oob($p30, $i122, 8, $p2, $p136);
    call {:si_unique_call 2088} {:cexpr "tmp___3"} boogie_si_record_i32($i137);
    goto corral_source_split_4919;

  corral_source_split_4919:
    assume {:verifier.code 0} true;
    $i138 := $slt.i32($i137, 0);
    goto corral_source_split_4920;

  corral_source_split_4920:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i138 == 1);
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    $i139 := $p2i.ref.i64($p0);
    call {:si_unique_call 2089} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i139);
    goto corral_source_split_4924;

  corral_source_split_4924:
    assume {:verifier.code 0} true;
    $i140 := $add.i64($i139, 356);
    call {:si_unique_call 2090} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i140);
    goto corral_source_split_4925;

  corral_source_split_4925:
    assume {:verifier.code 0} true;
    $p141 := $i2p.i64.ref($i140);
    goto corral_source_split_4926;

  corral_source_split_4926:
    assume {:verifier.code 0} true;
    $i142 := $load.i32($M.1, $p141);
    call {:si_unique_call 2091} {:cexpr "__cil_tmp89"} boogie_si_record_i32($i142);
    goto corral_source_split_4927;

  corral_source_split_4927:
    assume {:verifier.code 0} true;
    $i143 := $udiv.i32($i142, 512);
    call {:si_unique_call 2092} {:cexpr "__cil_tmp90"} boogie_si_record_i32($i143);
    goto corral_source_split_4928;

  corral_source_split_4928:
    assume {:verifier.code 0} true;
    $i144 := $udiv.i32($i1, $i143);
    call {:si_unique_call 2093} {:cexpr "__cil_tmp91"} boogie_si_record_i32($i144);
    goto corral_source_split_4929;

  corral_source_split_4929:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2094} INFTL_trydeletechain($p0, $i144);
    goto corral_source_split_4930;

  corral_source_split_4930:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb48:
    assume $i138 == 1;
    goto corral_source_split_4922;

  corral_source_split_4922:
    assume {:verifier.code 0} true;
    $i103 := $sub.i32(0, 5);
    goto $bb38;

  $bb45:
    assume $i125 == 1;
    goto corral_source_split_4904;

  corral_source_split_4904:
    assume {:verifier.code 0} true;
    $i103 := $sub.i32(0, 5);
    goto $bb38;

  $bb4:
    assume $i61 == 1;
    goto corral_source_split_4805;

  corral_source_split_4805:
    assume {:verifier.code 0} true;
    $i63, $i64 := 10000, $i18;
    goto $bb7;

  $bb7:
    call $i65, $i66, $p67, $i68, $i69, $i70, $i71, $p72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $i81, $i82, $p83, $i84, $i85, $i86, $i75, $i87, $i88, $i89, $i90, $i91, $i94, $i95, $i104, $i105, $i106, $p107, $p108, $p109, $i110, $i111, $i112, $i113, $i63, $i64, $i114, vslice_dummy_var_109 := INFTL_deleteblock_loop_$bb7($p0, $i1, $p2, $p3, $i26, $p30, $p59, $i65, $i66, $p67, $i68, $i69, $i70, $i71, $p72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $i81, $i82, $p83, $i84, $i85, $i86, $i75, $i87, $i88, $i89, $i90, $i91, $i94, $i95, $i104, $i105, $i106, $p107, $p108, $p109, $i110, $i111, $i112, $i113, $i63, $i64, $i114, vslice_dummy_var_109);
    goto $bb7_last;

  corral_source_split_4809:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p0);
    call {:si_unique_call 2047} {:cexpr "__cil_tmp47"} boogie_si_record_i64($i65);
    goto corral_source_split_4811;

  corral_source_split_4811:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 356);
    call {:si_unique_call 2048} {:cexpr "__cil_tmp48"} boogie_si_record_i64($i66);
    goto corral_source_split_4812;

  corral_source_split_4812:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_4813;

  corral_source_split_4813:
    assume {:verifier.code 0} true;
    $i68 := $load.i32($M.1, $p67);
    call {:si_unique_call 2049} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i68);
    goto corral_source_split_4814;

  corral_source_split_4814:
    assume {:verifier.code 0} true;
    $i69 := $mul.i32($i68, $i64);
    call {:si_unique_call 2050} {:cexpr "__cil_tmp50"} boogie_si_record_i32($i69);
    goto corral_source_split_4815;

  corral_source_split_4815:
    assume {:verifier.code 0} true;
    $i70 := $zext.i32.i64($i69);
    call {:si_unique_call 2051} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i70);
    goto corral_source_split_4816;

  corral_source_split_4816:
    assume {:verifier.code 0} true;
    $i71 := $add.i64($i70, $i26);
    call {:si_unique_call 2052} {:cexpr "__cil_tmp52"} boogie_si_record_i64($i71);
    goto corral_source_split_4817;

  corral_source_split_4817:
    assume {:verifier.code 0} true;
    $p72 := $bitcast.ref.ref($p3);
    goto corral_source_split_4818;

  corral_source_split_4818:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2053} $i73 := inftl_read_oob($p30, $i71, 8, $p2, $p72);
    call {:si_unique_call 2054} {:cexpr "tmp___0"} boogie_si_record_i32($i73);
    goto corral_source_split_4819;

  corral_source_split_4819:
    assume {:verifier.code 0} true;
    $i74 := $slt.i32($i73, 0);
    goto corral_source_split_4820;

  corral_source_split_4820:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i74 == 1);
    goto corral_source_split_4824;

  corral_source_split_4824:
    assume {:verifier.code 0} true;
    $i76 := $p2i.ref.i64($p3);
    goto corral_source_split_4825;

  corral_source_split_4825:
    assume {:verifier.code 0} true;
    $i77 := $add.i64($i76, 7);
    call {:si_unique_call 2055} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i77);
    goto corral_source_split_4826;

  corral_source_split_4826:
    assume {:verifier.code 0} true;
    $p78 := $i2p.i64.ref($i77);
    goto corral_source_split_4827;

  corral_source_split_4827:
    assume {:verifier.code 0} true;
    $i79 := $load.i8($M.1, $p78);
    call {:si_unique_call 2056} {:cexpr "__cil_tmp56"} boogie_si_record_i8($i79);
    goto corral_source_split_4828;

  corral_source_split_4828:
    assume {:verifier.code 0} true;
    $i80 := $zext.i8.i32($i79);
    call {:si_unique_call 2057} {:cexpr "__cil_tmp57"} boogie_si_record_i32($i80);
    goto corral_source_split_4829;

  corral_source_split_4829:
    assume {:verifier.code 0} true;
    $i81 := $p2i.ref.i64($p3);
    goto corral_source_split_4830;

  corral_source_split_4830:
    assume {:verifier.code 0} true;
    $i82 := $add.i64($i81, 6);
    call {:si_unique_call 2058} {:cexpr "__cil_tmp58"} boogie_si_record_i64($i82);
    goto corral_source_split_4831;

  corral_source_split_4831:
    assume {:verifier.code 0} true;
    $p83 := $i2p.i64.ref($i82);
    goto corral_source_split_4832;

  corral_source_split_4832:
    assume {:verifier.code 0} true;
    $i84 := $load.i8($M.1, $p83);
    call {:si_unique_call 2059} {:cexpr "__cil_tmp59"} boogie_si_record_i8($i84);
    goto corral_source_split_4833;

  corral_source_split_4833:
    assume {:verifier.code 0} true;
    $i85 := $zext.i8.i32($i84);
    call {:si_unique_call 2060} {:cexpr "__cil_tmp60"} boogie_si_record_i32($i85);
    goto corral_source_split_4834;

  corral_source_split_4834:
    assume {:verifier.code 0} true;
    $i86 := $or.i32($i85, $i80);
    call {:si_unique_call 2061} {:cexpr "__cil_tmp61"} boogie_si_record_i32($i86);
    assume {:verifier.code 0} true;
    $i75 := $i86;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_4836;

  corral_source_split_4836:
    assume {:verifier.code 0} true;
    $i87 := $eq.i32($i75, 255);
    goto corral_source_split_4837;

  corral_source_split_4837:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i87 == 1);
    goto corral_source_split_4841;

  corral_source_split_4841:
    assume {:verifier.code 0} true;
    $i88 := $eq.i32($i75, 17);
    goto corral_source_split_4842;

  corral_source_split_4842:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i88 == 1);
    goto corral_source_split_4846;

  corral_source_split_4846:
    assume {:verifier.code 0} true;
    $i89 := $eq.i32($i75, 0);
    goto corral_source_split_4847;

  corral_source_split_4847:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i89 == 1);
    goto corral_source_split_4851;

  corral_source_split_4851:
    assume {:verifier.code 0} true;
    $i90 := $eq.i32($i75, 85);
    goto corral_source_split_4852;

  corral_source_split_4852:
    assume {:verifier.code 0} true;
    $i91 := $i64;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i90 == 1);
    goto corral_source_split_4856;

  corral_source_split_4856:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2062} vslice_dummy_var_109 := printk.ref.i32.i32.i32(.str.62, $i1, $i64, $i75);
    goto corral_source_split_4858;

  corral_source_split_4858:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $i94 := $sub.i32($i63, 1);
    call {:si_unique_call 2063} {:cexpr "silly"} boogie_si_record_i32($i94);
    goto corral_source_split_4862;

  corral_source_split_4862:
    assume {:verifier.code 0} true;
    $i95 := $eq.i32($i63, 0);
    goto corral_source_split_4863;

  corral_source_split_4863:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36, $bb37;

  $bb37:
    assume !($i95 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i104 := $zext.i32.i64($i64);
    call {:si_unique_call 2070} {:cexpr "__cil_tmp67"} boogie_si_record_i64($i104);
    goto corral_source_split_4879;

  corral_source_split_4879:
    assume {:verifier.code 0} true;
    $i105 := $p2i.ref.i64($p0);
    call {:si_unique_call 2071} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i105);
    goto corral_source_split_4880;

  corral_source_split_4880:
    assume {:verifier.code 0} true;
    $i106 := $add.i64($i105, 544);
    call {:si_unique_call 2072} {:cexpr "__cil_tmp69"} boogie_si_record_i64($i106);
    goto corral_source_split_4881;

  corral_source_split_4881:
    assume {:verifier.code 0} true;
    $p107 := $i2p.i64.ref($i106);
    goto corral_source_split_4882;

  corral_source_split_4882:
    assume {:verifier.code 0} true;
    $p108 := $load.ref($M.1, $p107);
    goto corral_source_split_4883;

  corral_source_split_4883:
    assume {:verifier.code 0} true;
    $p109 := $add.ref($p108, $mul.ref($i104, 2));
    goto corral_source_split_4884;

  corral_source_split_4884:
    assume {:verifier.code 0} true;
    $i110 := $load.i16($M.1, $p109);
    call {:si_unique_call 2073} {:cexpr "__cil_tmp72"} boogie_si_record_i16($i110);
    goto corral_source_split_4885;

  corral_source_split_4885:
    assume {:verifier.code 0} true;
    $i111 := $zext.i16.i32($i110);
    call {:si_unique_call 2074} {:cexpr "thisEUN"} boogie_si_record_i32($i111);
    goto corral_source_split_4886;

  corral_source_split_4886:
    assume {:verifier.code 0} true;
    $i112 := $load.i32($M.1, $p59);
    call {:si_unique_call 2075} {:cexpr "__cil_tmp75"} boogie_si_record_i32($i112);
    goto corral_source_split_4887;

  corral_source_split_4887:
    assume {:verifier.code 0} true;
    $i113 := $ugt.i32($i112, $i111);
    goto corral_source_split_4888;

  corral_source_split_4888:
    assume {:verifier.code 0} true;
    $i114 := $i111;
    assume true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i113 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_4890;

  corral_source_split_4890:
    assume {:verifier.code 0} true;
    $i62 := $i114;
    goto $bb6;

  $bb40:
    assume $i113 == 1;
    assume {:verifier.code 0} true;
    $i63, $i64 := $i94, $i111;
    goto $bb40_dummy;

  $bb36:
    assume $i95 == 1;
    goto corral_source_split_4868;

  corral_source_split_4868:
    assume {:verifier.code 0} true;
    $i96 := $p2i.ref.i64($p0);
    call {:si_unique_call 2064} {:cexpr "__cil_tmp62"} boogie_si_record_i64($i96);
    goto corral_source_split_4869;

  corral_source_split_4869:
    assume {:verifier.code 0} true;
    $i97 := $add.i64($i96, 356);
    call {:si_unique_call 2065} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i97);
    goto corral_source_split_4870;

  corral_source_split_4870:
    assume {:verifier.code 0} true;
    $p98 := $i2p.i64.ref($i97);
    goto corral_source_split_4871;

  corral_source_split_4871:
    assume {:verifier.code 0} true;
    $i99 := $load.i32($M.1, $p98);
    call {:si_unique_call 2066} {:cexpr "__cil_tmp64"} boogie_si_record_i32($i99);
    goto corral_source_split_4872;

  corral_source_split_4872:
    assume {:verifier.code 0} true;
    $i100 := $udiv.i32($i99, 512);
    call {:si_unique_call 2067} {:cexpr "__cil_tmp65"} boogie_si_record_i32($i100);
    goto corral_source_split_4873;

  corral_source_split_4873:
    assume {:verifier.code 0} true;
    $i101 := $udiv.i32($i1, $i100);
    call {:si_unique_call 2068} {:cexpr "__cil_tmp66"} boogie_si_record_i32($i101);
    goto corral_source_split_4874;

  corral_source_split_4874:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2069} vslice_dummy_var_110 := printk.ref.i32(.str.41, $i101);
    goto corral_source_split_4875;

  corral_source_split_4875:
    assume {:verifier.code 0} true;
    $i103 := 1;
    goto $bb38;

  $bb21:
    assume $i90 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_4854;

  corral_source_split_4854:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i92 := $i91;
    goto $bb29;

  $bb18:
    assume $i89 == 1;
    goto corral_source_split_4849;

  corral_source_split_4849:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i92 := 65535;
    goto $bb29;

  $bb15:
    assume $i88 == 1;
    goto corral_source_split_4844;

  corral_source_split_4844:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb12:
    assume $i87 == 1;
    goto corral_source_split_4839;

  corral_source_split_4839:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb9:
    assume $i74 == 1;
    goto corral_source_split_4822;

  corral_source_split_4822:
    assume {:verifier.code 0} true;
    $i75 := 17;
    goto $bb11;

  $bb1:
    assume $i55 == 1;
    goto corral_source_split_4796;

  corral_source_split_4796:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2043} vslice_dummy_var_108 := __dynamic_pr_debug.ref.ref.ref.i32($p4, .str.61, $p0, $i1);
    goto corral_source_split_4797;

  corral_source_split_4797:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb40_dummy:
    assume false;
    return;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4809;
}



const INFTL_trydeletechain: ref;

axiom INFTL_trydeletechain == $sub.ref(0, 164505);

procedure INFTL_trydeletechain($p0: ref, $i1: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.7, $M.8, $M.0, $M.2, $CurrAddr, $M.9, $M.10;



implementation INFTL_trydeletechain($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i8;
  var $i34: i64;
  var $i35: i64;
  var $i36: i32;
  var $i37: i64;
  var $i38: i1;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i16;
  var $i49: i32;
  var $i50: i1;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $i59: i64;
  var $i60: i64;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $i64: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i1;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i8;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i64;
  var $i87: i64;
  var $p88: ref;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i64;
  var $p93: ref;
  var $i94: i32;
  var $i95: i1;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $i100: i8;
  var $i101: i32;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i8;
  var $i106: i32;
  var $i107: i32;
  var $i96: i32;
  var $i108: i1;
  var $i109: i1;
  var $i110: i1;
  var $i111: i1;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i75: i32;
  var $i125: i32;
  var $i126: i32;
  var $i127: i32;
  var $i128: i1;
  var $i65: i32;
  var $i129: i32;
  var $i130: i1;
  var $i132: i64;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i16;
  var $i139: i32;
  var $i140: i32;
  var $i141: i1;
  var $i57: i32;
  var $i58: i32;
  var $i142: i64;
  var $i143: i64;
  var $p144: ref;
  var $i145: i32;
  var $i146: i32;
  var $i147: i1;
  var $i149: i64;
  var $i150: i64;
  var $p151: ref;
  var $i152: i64;
  var $i153: i64;
  var $p154: ref;
  var $i155: i8;
  var $i156: i32;
  var $i157: i1;
  var $i158: i32;
  var $i159: i32;
  var $i160: i32;
  var $i161: i1;
  var $i148: i32;
  var $p162: ref;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i64;
  var $i170: i64;
  var $p171: ref;
  var $i172: i64;
  var $i173: i64;
  var $p174: ref;
  var $i175: i64;
  var $i176: i64;
  var $p177: ref;
  var $i178: i64;
  var $i179: i64;
  var $p180: ref;
  var $i181: i8;
  var $i182: i64;
  var $i183: i64;
  var $i184: i32;
  var $i185: i64;
  var $i186: i1;
  var $i188: i64;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: i16;
  var $i195: i32;
  var $i196: i1;
  var $i200: i32;
  var $i197: i32;
  var $p201: ref;
  var $i202: i64;
  var $i203: i64;
  var $p204: ref;
  var $i205: i64;
  var $i206: i64;
  var $p207: ref;
  var $i208: i64;
  var $i209: i64;
  var $p210: ref;
  var $i211: i64;
  var $i212: i64;
  var $p213: ref;
  var $i214: i64;
  var $i215: i64;
  var $p216: ref;
  var $i217: i64;
  var $i218: i64;
  var $p219: ref;
  var $i220: i8;
  var $i221: i64;
  var $i222: i64;
  var $i223: i32;
  var $i224: i64;
  var $i225: i1;
  var $i198: i32;
  var $p199: ref;
  var $i227: i64;
  var $i228: i64;
  var $i229: i64;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $i233: i16;
  var $i234: i32;
  var $i235: i1;
  var $i239: i64;
  var $i240: i64;
  var $p241: ref;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i245: i64;
  var $i246: i32;
  var $i247: i64;
  var $i248: i1;
  var $i249: i64;
  var $i250: i64;
  var $i251: i64;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $i255: i16;
  var $i256: i32;
  var $i257: i64;
  var $p258: ref;
  var $p259: ref;
  var $i260: i16;
  var $i261: i32;
  var $i262: i1;
  var $i238: i32;
  var $i263: i32;
  var $p264: ref;
  var $i236: i32;
  var $p237: ref;
  var $p265: ref;
  var $i266: i64;
  var $i267: i64;
  var $p268: ref;
  var $i269: i64;
  var $i270: i64;
  var $p271: ref;
  var $i272: i64;
  var $i273: i64;
  var $p274: ref;
  var $i275: i64;
  var $i276: i64;
  var $p277: ref;
  var $i278: i64;
  var $i279: i64;
  var $p280: ref;
  var $i281: i64;
  var $i282: i64;
  var $p283: ref;
  var $i284: i8;
  var $i285: i64;
  var $i286: i64;
  var $i287: i32;
  var $i288: i64;
  var $i289: i1;
  var $i291: i32;
  var $i292: i1;
  var $i293: i64;
  var $i294: i64;
  var $i295: i64;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $i299: i64;
  var $i300: i64;
  var $i301: i64;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $i305: i64;
  var $i306: i64;
  var $i307: i64;
  var $i308: i64;
  var $p309: ref;
  var $i310: i16;
  var $i311: i32;
  var $i312: i32;
  var $i313: i16;
  var $p314: ref;
  var $p316: ref;
  var $p317: ref;
  var $i318: i16;
  var $i319: i32;
  var $i320: i1;
  var cmdloc_dummy_var_12: [ref]i8;
  var cmdloc_dummy_var_13: [ref]i8;
  var cmdloc_dummy_var_14: [ref]i8;
  var cmdloc_dummy_var_15: [ref]i8;
  var vslice_dummy_var_111: i32;
  var vslice_dummy_var_112: i32;
  var vslice_dummy_var_113: i32;
  var vslice_dummy_var_114: i32;
  var vslice_dummy_var_115: i32;
  var vslice_dummy_var_116: i32;
  var vslice_dummy_var_117: i32;
  var vslice_dummy_var_118: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 2095} $p2 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2096} $p3 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2097} $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2098} $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2099} $p6 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2100} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2101} $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2102} $p9 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 2103} {:cexpr "INFTL_trydeletechain:arg:thisVUC"} boogie_si_record_i32($i1);
    goto corral_source_split_4932;

  corral_source_split_4932:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p0);
    call {:si_unique_call 2104} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i10);
    goto corral_source_split_4933;

  corral_source_split_4933:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 24);
    call {:si_unique_call 2105} {:cexpr "__cil_tmp27"} boogie_si_record_i64($i11);
    goto corral_source_split_4934;

  corral_source_split_4934:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_4935;

  corral_source_split_4935:
    assume {:verifier.code 0} true;
    $p13 := $load.ref($M.1, $p12);
    goto corral_source_split_4936;

  corral_source_split_4936:
    assume {:verifier.code 0} true;
    $p14 := $bitcast.ref.ref($p6);
    goto corral_source_split_4937;

  corral_source_split_4937:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p14, .str);
    goto corral_source_split_4938;

  corral_source_split_4938:
    assume {:verifier.code 0} true;
    $i15 := $p2i.ref.i64($p6);
    goto corral_source_split_4939;

  corral_source_split_4939:
    assume {:verifier.code 0} true;
    $i16 := $add.i64($i15, 8);
    call {:si_unique_call 2106} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i16);
    goto corral_source_split_4940;

  corral_source_split_4940:
    assume {:verifier.code 0} true;
    $p17 := $i2p.i64.ref($i16);
    goto corral_source_split_4941;

  corral_source_split_4941:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p17, .str.63);
    goto corral_source_split_4942;

  corral_source_split_4942:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p6);
    goto corral_source_split_4943;

  corral_source_split_4943:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 16);
    call {:si_unique_call 2107} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i19);
    goto corral_source_split_4944;

  corral_source_split_4944:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_4945;

  corral_source_split_4945:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p20, .str.31);
    goto corral_source_split_4946;

  corral_source_split_4946:
    assume {:verifier.code 0} true;
    $i21 := $p2i.ref.i64($p6);
    goto corral_source_split_4947;

  corral_source_split_4947:
    assume {:verifier.code 0} true;
    $i22 := $add.i64($i21, 24);
    call {:si_unique_call 2108} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i22);
    goto corral_source_split_4948;

  corral_source_split_4948:
    assume {:verifier.code 0} true;
    $p23 := $i2p.i64.ref($i22);
    goto corral_source_split_4949;

  corral_source_split_4949:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p23, .str.64);
    goto corral_source_split_4950;

  corral_source_split_4950:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p6);
    goto corral_source_split_4951;

  corral_source_split_4951:
    assume {:verifier.code 0} true;
    $i25 := $add.i64($i24, 32);
    call {:si_unique_call 2109} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i25);
    goto corral_source_split_4952;

  corral_source_split_4952:
    assume {:verifier.code 0} true;
    $p26 := $i2p.i64.ref($i25);
    goto corral_source_split_4953;

  corral_source_split_4953:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p26, 664);
    goto corral_source_split_4954;

  corral_source_split_4954:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p6);
    goto corral_source_split_4955;

  corral_source_split_4955:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 35);
    call {:si_unique_call 2110} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i28);
    goto corral_source_split_4956;

  corral_source_split_4956:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_4957;

  corral_source_split_4957:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p29, 0);
    goto corral_source_split_4958;

  corral_source_split_4958:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p6);
    goto corral_source_split_4959;

  corral_source_split_4959:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 35);
    call {:si_unique_call 2111} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i31);
    goto corral_source_split_4960;

  corral_source_split_4960:
    assume {:verifier.code 0} true;
    $p32 := $i2p.i64.ref($i31);
    goto corral_source_split_4961;

  corral_source_split_4961:
    assume {:verifier.code 0} true;
    $i33 := $load.i8($M.1, $p32);
    call {:si_unique_call 2112} {:cexpr "__cil_tmp35"} boogie_si_record_i8($i33);
    goto corral_source_split_4962;

  corral_source_split_4962:
    assume {:verifier.code 0} true;
    $i34 := $zext.i8.i64($i33);
    call {:si_unique_call 2113} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i34);
    goto corral_source_split_4963;

  corral_source_split_4963:
    assume {:verifier.code 0} true;
    $i35 := $and.i64($i34, 1);
    call {:si_unique_call 2114} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i35);
    goto corral_source_split_4964;

  corral_source_split_4964:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2115} $i36 := __builtinx_expect.i64.i64($i35, 0);
    goto corral_source_split_4965;

  corral_source_split_4965:
    assume {:verifier.code 0} true;
    $i37 := $sext.i32.i64($i36);
    call {:si_unique_call 2116} {:cexpr "tmp"} boogie_si_record_i64($i37);
    goto corral_source_split_4966;

  corral_source_split_4966:
    assume {:verifier.code 0} true;
    $i38 := $ne.i64($i37, 0);
    goto corral_source_split_4967;

  corral_source_split_4967:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p40 := $bitcast.ref.ref($p2);
    goto corral_source_split_4972;

  corral_source_split_4972:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_12 := $M.7;
    call {:si_unique_call 2118} cmdloc_dummy_var_13 := $memset.i8(cmdloc_dummy_var_12, $p40, 0, 64, $zext.i32.i64(1), 0 == 1);
    $M.7 := cmdloc_dummy_var_13;
    goto corral_source_split_4973;

  corral_source_split_4973:
    assume {:verifier.code 0} true;
    $p41 := $bitcast.ref.ref($p3);
    goto corral_source_split_4974;

  corral_source_split_4974:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_14 := $M.8;
    call {:si_unique_call 2119} cmdloc_dummy_var_15 := $memset.i8(cmdloc_dummy_var_14, $p41, 0, 64, $zext.i32.i64(1), 0 == 1);
    $M.8 := cmdloc_dummy_var_15;
    goto corral_source_split_4975;

  corral_source_split_4975:
    assume {:verifier.code 0} true;
    $i42 := $zext.i32.i64($i1);
    call {:si_unique_call 2120} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i42);
    goto corral_source_split_4976;

  corral_source_split_4976:
    assume {:verifier.code 0} true;
    $i43 := $p2i.ref.i64($p0);
    call {:si_unique_call 2121} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i43);
    goto corral_source_split_4977;

  corral_source_split_4977:
    assume {:verifier.code 0} true;
    $i44 := $add.i64($i43, 552);
    call {:si_unique_call 2122} {:cexpr "__cil_tmp42"} boogie_si_record_i64($i44);
    goto corral_source_split_4978;

  corral_source_split_4978:
    assume {:verifier.code 0} true;
    $p45 := $i2p.i64.ref($i44);
    goto corral_source_split_4979;

  corral_source_split_4979:
    assume {:verifier.code 0} true;
    $p46 := $load.ref($M.1, $p45);
    goto corral_source_split_4980;

  corral_source_split_4980:
    assume {:verifier.code 0} true;
    $p47 := $add.ref($p46, $mul.ref($i42, 2));
    goto corral_source_split_4981;

  corral_source_split_4981:
    assume {:verifier.code 0} true;
    $i48 := $load.i16($M.1, $p47);
    call {:si_unique_call 2123} {:cexpr "__cil_tmp45"} boogie_si_record_i16($i48);
    goto corral_source_split_4982;

  corral_source_split_4982:
    assume {:verifier.code 0} true;
    $i49 := $zext.i16.i32($i48);
    call {:si_unique_call 2124} {:cexpr "thisEUN"} boogie_si_record_i32($i49);
    goto corral_source_split_4983;

  corral_source_split_4983:
    assume {:verifier.code 0} true;
    $i50 := $eq.i32($i49, 65535);
    goto corral_source_split_4984;

  corral_source_split_4984:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i50 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i52 := $p2i.ref.i64($p0);
    call {:si_unique_call 2126} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i52);
    goto corral_source_split_4989;

  corral_source_split_4989:
    assume {:verifier.code 0} true;
    $i53 := $add.i64($i52, 560);
    call {:si_unique_call 2127} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i53);
    goto corral_source_split_4990;

  corral_source_split_4990:
    assume {:verifier.code 0} true;
    $p54 := $i2p.i64.ref($i53);
    goto corral_source_split_4991;

  corral_source_split_4991:
    assume {:verifier.code 0} true;
    $i55 := $load.i32($M.1, $p54);
    call {:si_unique_call 2128} {:cexpr "__cil_tmp87"} boogie_si_record_i32($i55);
    goto corral_source_split_4992;

  corral_source_split_4992:
    assume {:verifier.code 0} true;
    $i56 := $ugt.i32($i55, $i49);
    goto corral_source_split_4993;

  corral_source_split_4993:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb8, $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume !($i56 == 1);
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    $i142 := $p2i.ref.i64($p0);
    call {:si_unique_call 2173} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i142);
    goto corral_source_split_5130;

  corral_source_split_5130:
    assume {:verifier.code 0} true;
    $i143 := $add.i64($i142, 356);
    call {:si_unique_call 2174} {:cexpr "__cil_tmp93"} boogie_si_record_i64($i143);
    goto corral_source_split_5131;

  corral_source_split_5131:
    assume {:verifier.code 0} true;
    $p144 := $i2p.i64.ref($i143);
    goto corral_source_split_5132;

  corral_source_split_5132:
    assume {:verifier.code 0} true;
    $i145 := $load.i32($M.1, $p144);
    call {:si_unique_call 2175} {:cexpr "__cil_tmp94"} boogie_si_record_i32($i145);
    goto corral_source_split_5133;

  corral_source_split_5133:
    assume {:verifier.code 0} true;
    $i146 := $udiv.i32($i145, 512);
    call {:si_unique_call 2176} {:cexpr "__cil_tmp95"} boogie_si_record_i32($i146);
    goto corral_source_split_5134;

  corral_source_split_5134:
    assume {:verifier.code 0} true;
    $i147 := $ult.i32(0, $i146);
    goto corral_source_split_5135;

  corral_source_split_5135:
    assume {:verifier.code 0} true;
    assume {:branchcond $i147} true;
    goto $bb60, $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    assume !($i147 == 1);
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    $p162 := $bitcast.ref.ref($p7);
    goto corral_source_split_5160;

  corral_source_split_5160:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p162, .str);
    goto corral_source_split_5161;

  corral_source_split_5161:
    assume {:verifier.code 0} true;
    $i163 := $p2i.ref.i64($p7);
    goto corral_source_split_5162;

  corral_source_split_5162:
    assume {:verifier.code 0} true;
    $i164 := $add.i64($i163, 8);
    call {:si_unique_call 2184} {:cexpr "__cil_tmp98"} boogie_si_record_i64($i164);
    goto corral_source_split_5163;

  corral_source_split_5163:
    assume {:verifier.code 0} true;
    $p165 := $i2p.i64.ref($i164);
    goto corral_source_split_5164;

  corral_source_split_5164:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p165, .str.63);
    goto corral_source_split_5165;

  corral_source_split_5165:
    assume {:verifier.code 0} true;
    $i166 := $p2i.ref.i64($p7);
    goto corral_source_split_5166;

  corral_source_split_5166:
    assume {:verifier.code 0} true;
    $i167 := $add.i64($i166, 16);
    call {:si_unique_call 2185} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i167);
    goto corral_source_split_5167;

  corral_source_split_5167:
    assume {:verifier.code 0} true;
    $p168 := $i2p.i64.ref($i167);
    goto corral_source_split_5168;

  corral_source_split_5168:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p168, .str.31);
    goto corral_source_split_5169;

  corral_source_split_5169:
    assume {:verifier.code 0} true;
    $i169 := $p2i.ref.i64($p7);
    goto corral_source_split_5170;

  corral_source_split_5170:
    assume {:verifier.code 0} true;
    $i170 := $add.i64($i169, 24);
    call {:si_unique_call 2186} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i170);
    goto corral_source_split_5171;

  corral_source_split_5171:
    assume {:verifier.code 0} true;
    $p171 := $i2p.i64.ref($i170);
    goto corral_source_split_5172;

  corral_source_split_5172:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p171, .str.66);
    goto corral_source_split_5173;

  corral_source_split_5173:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p7);
    goto corral_source_split_5174;

  corral_source_split_5174:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 32);
    call {:si_unique_call 2187} {:cexpr "__cil_tmp101"} boogie_si_record_i64($i173);
    goto corral_source_split_5175;

  corral_source_split_5175:
    assume {:verifier.code 0} true;
    $p174 := $i2p.i64.ref($i173);
    goto corral_source_split_5176;

  corral_source_split_5176:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p174, 727);
    goto corral_source_split_5177;

  corral_source_split_5177:
    assume {:verifier.code 0} true;
    $i175 := $p2i.ref.i64($p7);
    goto corral_source_split_5178;

  corral_source_split_5178:
    assume {:verifier.code 0} true;
    $i176 := $add.i64($i175, 35);
    call {:si_unique_call 2188} {:cexpr "__cil_tmp102"} boogie_si_record_i64($i176);
    goto corral_source_split_5179;

  corral_source_split_5179:
    assume {:verifier.code 0} true;
    $p177 := $i2p.i64.ref($i176);
    goto corral_source_split_5180;

  corral_source_split_5180:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p177, 0);
    goto corral_source_split_5181;

  corral_source_split_5181:
    assume {:verifier.code 0} true;
    $i178 := $p2i.ref.i64($p7);
    goto corral_source_split_5182;

  corral_source_split_5182:
    assume {:verifier.code 0} true;
    $i179 := $add.i64($i178, 35);
    call {:si_unique_call 2189} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i179);
    goto corral_source_split_5183;

  corral_source_split_5183:
    assume {:verifier.code 0} true;
    $p180 := $i2p.i64.ref($i179);
    goto corral_source_split_5184;

  corral_source_split_5184:
    assume {:verifier.code 0} true;
    $i181 := $load.i8($M.1, $p180);
    call {:si_unique_call 2190} {:cexpr "__cil_tmp104"} boogie_si_record_i8($i181);
    goto corral_source_split_5185;

  corral_source_split_5185:
    assume {:verifier.code 0} true;
    $i182 := $zext.i8.i64($i181);
    call {:si_unique_call 2191} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i182);
    goto corral_source_split_5186;

  corral_source_split_5186:
    assume {:verifier.code 0} true;
    $i183 := $and.i64($i182, 1);
    call {:si_unique_call 2192} {:cexpr "__cil_tmp106"} boogie_si_record_i64($i183);
    goto corral_source_split_5187;

  corral_source_split_5187:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2193} $i184 := __builtinx_expect.i64.i64($i183, 0);
    goto corral_source_split_5188;

  corral_source_split_5188:
    assume {:verifier.code 0} true;
    $i185 := $sext.i32.i64($i184);
    call {:si_unique_call 2194} {:cexpr "tmp___2"} boogie_si_record_i64($i185);
    goto corral_source_split_5189;

  corral_source_split_5189:
    assume {:verifier.code 0} true;
    $i186 := $ne.i64($i185, 0);
    goto corral_source_split_5190;

  corral_source_split_5190:
    assume {:verifier.code 0} true;
    assume {:branchcond $i186} true;
    goto $bb71, $bb72;

  $bb72:
    assume !($i186 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    $i188 := $zext.i32.i64($i1);
    call {:si_unique_call 2196} {:cexpr "__cil_tmp107"} boogie_si_record_i64($i188);
    goto corral_source_split_5195;

  corral_source_split_5195:
    assume {:verifier.code 0} true;
    $i189 := $p2i.ref.i64($p0);
    call {:si_unique_call 2197} {:cexpr "__cil_tmp108"} boogie_si_record_i64($i189);
    goto corral_source_split_5196;

  corral_source_split_5196:
    assume {:verifier.code 0} true;
    $i190 := $add.i64($i189, 552);
    call {:si_unique_call 2198} {:cexpr "__cil_tmp109"} boogie_si_record_i64($i190);
    goto corral_source_split_5197;

  corral_source_split_5197:
    assume {:verifier.code 0} true;
    $p191 := $i2p.i64.ref($i190);
    goto corral_source_split_5198;

  corral_source_split_5198:
    assume {:verifier.code 0} true;
    $p192 := $load.ref($M.1, $p191);
    goto corral_source_split_5199;

  corral_source_split_5199:
    assume {:verifier.code 0} true;
    $p193 := $add.ref($p192, $mul.ref($i188, 2));
    goto corral_source_split_5200;

  corral_source_split_5200:
    assume {:verifier.code 0} true;
    $i194 := $load.i16($M.1, $p193);
    call {:si_unique_call 2199} {:cexpr "__cil_tmp111"} boogie_si_record_i16($i194);
    goto corral_source_split_5201;

  corral_source_split_5201:
    assume {:verifier.code 0} true;
    $i195 := $zext.i16.i32($i194);
    call {:si_unique_call 2200} {:cexpr "thisEUN"} boogie_si_record_i32($i195);
    goto corral_source_split_5202;

  corral_source_split_5202:
    assume {:verifier.code 0} true;
    $i196 := $eq.i32($i195, 65535);
    goto corral_source_split_5203;

  corral_source_split_5203:
    assume {:verifier.code 0} true;
    $i197 := $i195;
    assume true;
    goto $bb74, $bb76;

  $bb76:
    assume !($i196 == 1);
    goto corral_source_split_5238;

  corral_source_split_5238:
    assume {:verifier.code 0} true;
    $i198, $p199 := $i195, $p193;
    goto $bb77;

  $bb77:
    call $i200, $i198, $p199, $i227, $i228, $i229, $p230, $p231, $p232, $i233, $i234, $i235, $i239, $i240, $p241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $p253, $p254, $i255, $i256, $i257, $p258, $p259, $i260, $i261, $i262, $i238, $i263, $p264, $i236, $p237, $p265, $i266, $i267, $p268, $i269, $i270, $p271, $i272, $i273, $p274, $i275, $i276, $p277, $i278, $i279, $p280, $i281, $i282, $p283, $i284, $i285, $i286, $i287, $i288, $i289, $i291, $i292, $i293, $i294, $i295, $p296, $p297, $p298, $i299, $i300, $i301, $p302, $p303, $p304, $i305, $i306, $i307, $i308, $p309, $i310, $i311, $i312, $i313, $p314, $p316, $p317, $i318, $i319, $i320, vslice_dummy_var_117, vslice_dummy_var_118 := INFTL_trydeletechain_loop_$bb77($p0, $i1, $p9, $i188, $p191, $i200, $i198, $p199, $i227, $i228, $i229, $p230, $p231, $p232, $i233, $i234, $i235, $i239, $i240, $p241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $p253, $p254, $i255, $i256, $i257, $p258, $p259, $i260, $i261, $i262, $i238, $i263, $p264, $i236, $p237, $p265, $i266, $i267, $p268, $i269, $i270, $p271, $i272, $i273, $p274, $i275, $i276, $p277, $i278, $i279, $p280, $i281, $i282, $p283, $i284, $i285, $i286, $i287, $i288, $i289, $i291, $i292, $i293, $i294, $i295, $p296, $p297, $p298, $i299, $i300, $i301, $p302, $p303, $p304, $i305, $i306, $i307, $i308, $p309, $i310, $i311, $i312, $i313, $p314, $p316, $p317, $i318, $i319, $i320, vslice_dummy_var_117, vslice_dummy_var_118);
    goto $bb77_last;

  $bb82:
    assume {:verifier.code 0} true;
    $i227 := $zext.i32.i64($i198);
    call {:si_unique_call 2213} {:cexpr "__cil_tmp132"} boogie_si_record_i64($i227);
    goto corral_source_split_5245;

  corral_source_split_5245:
    assume {:verifier.code 0} true;
    $i228 := $p2i.ref.i64($p0);
    call {:si_unique_call 2214} {:cexpr "__cil_tmp133"} boogie_si_record_i64($i228);
    goto corral_source_split_5246;

  corral_source_split_5246:
    assume {:verifier.code 0} true;
    $i229 := $add.i64($i228, 544);
    call {:si_unique_call 2215} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i229);
    goto corral_source_split_5247;

  corral_source_split_5247:
    assume {:verifier.code 0} true;
    $p230 := $i2p.i64.ref($i229);
    goto corral_source_split_5248;

  corral_source_split_5248:
    assume {:verifier.code 0} true;
    $p231 := $load.ref($M.1, $p230);
    goto corral_source_split_5249;

  corral_source_split_5249:
    assume {:verifier.code 0} true;
    $p232 := $add.ref($p231, $mul.ref($i227, 2));
    goto corral_source_split_5250;

  corral_source_split_5250:
    assume {:verifier.code 0} true;
    $i233 := $load.i16($M.1, $p232);
    call {:si_unique_call 2216} {:cexpr "__cil_tmp137"} boogie_si_record_i16($i233);
    goto corral_source_split_5251;

  corral_source_split_5251:
    assume {:verifier.code 0} true;
    $i234 := $zext.i16.i32($i233);
    call {:si_unique_call 2217} {:cexpr "__cil_tmp138"} boogie_si_record_i32($i234);
    goto corral_source_split_5252;

  corral_source_split_5252:
    assume {:verifier.code 0} true;
    $i235 := $ne.i32($i234, 65535);
    goto corral_source_split_5253;

  corral_source_split_5253:
    assume {:verifier.code 0} true;
    $i236, $p237 := $i198, $p199;
    assume true;
    goto $bb83, $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    assume !($i235 == 1);
    goto $bb85;

  $bb85:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5257;

  corral_source_split_5257:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $p265 := $bitcast.ref.ref($p9);
    goto corral_source_split_5291;

  corral_source_split_5291:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p265, .str);
    goto corral_source_split_5292;

  corral_source_split_5292:
    assume {:verifier.code 0} true;
    $i266 := $p2i.ref.i64($p9);
    goto corral_source_split_5293;

  corral_source_split_5293:
    assume {:verifier.code 0} true;
    $i267 := $add.i64($i266, 8);
    call {:si_unique_call 2234} {:cexpr "__cil_tmp140"} boogie_si_record_i64($i267);
    goto corral_source_split_5294;

  corral_source_split_5294:
    assume {:verifier.code 0} true;
    $p268 := $i2p.i64.ref($i267);
    goto corral_source_split_5295;

  corral_source_split_5295:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p268, .str.63);
    goto corral_source_split_5296;

  corral_source_split_5296:
    assume {:verifier.code 0} true;
    $i269 := $p2i.ref.i64($p9);
    goto corral_source_split_5297;

  corral_source_split_5297:
    assume {:verifier.code 0} true;
    $i270 := $add.i64($i269, 16);
    call {:si_unique_call 2235} {:cexpr "__cil_tmp141"} boogie_si_record_i64($i270);
    goto corral_source_split_5298;

  corral_source_split_5298:
    assume {:verifier.code 0} true;
    $p271 := $i2p.i64.ref($i270);
    goto corral_source_split_5299;

  corral_source_split_5299:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p271, .str.31);
    goto corral_source_split_5300;

  corral_source_split_5300:
    assume {:verifier.code 0} true;
    $i272 := $p2i.ref.i64($p9);
    goto corral_source_split_5301;

  corral_source_split_5301:
    assume {:verifier.code 0} true;
    $i273 := $add.i64($i272, 24);
    call {:si_unique_call 2236} {:cexpr "__cil_tmp142"} boogie_si_record_i64($i273);
    goto corral_source_split_5302;

  corral_source_split_5302:
    assume {:verifier.code 0} true;
    $p274 := $i2p.i64.ref($i273);
    goto corral_source_split_5303;

  corral_source_split_5303:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p274, .str.68);
    goto corral_source_split_5304;

  corral_source_split_5304:
    assume {:verifier.code 0} true;
    $i275 := $p2i.ref.i64($p9);
    goto corral_source_split_5305;

  corral_source_split_5305:
    assume {:verifier.code 0} true;
    $i276 := $add.i64($i275, 32);
    call {:si_unique_call 2237} {:cexpr "__cil_tmp143"} boogie_si_record_i64($i276);
    goto corral_source_split_5306;

  corral_source_split_5306:
    assume {:verifier.code 0} true;
    $p277 := $i2p.i64.ref($i276);
    goto corral_source_split_5307;

  corral_source_split_5307:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p277, 748);
    goto corral_source_split_5308;

  corral_source_split_5308:
    assume {:verifier.code 0} true;
    $i278 := $p2i.ref.i64($p9);
    goto corral_source_split_5309;

  corral_source_split_5309:
    assume {:verifier.code 0} true;
    $i279 := $add.i64($i278, 35);
    call {:si_unique_call 2238} {:cexpr "__cil_tmp144"} boogie_si_record_i64($i279);
    goto corral_source_split_5310;

  corral_source_split_5310:
    assume {:verifier.code 0} true;
    $p280 := $i2p.i64.ref($i279);
    goto corral_source_split_5311;

  corral_source_split_5311:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p280, 0);
    goto corral_source_split_5312;

  corral_source_split_5312:
    assume {:verifier.code 0} true;
    $i281 := $p2i.ref.i64($p9);
    goto corral_source_split_5313;

  corral_source_split_5313:
    assume {:verifier.code 0} true;
    $i282 := $add.i64($i281, 35);
    call {:si_unique_call 2239} {:cexpr "__cil_tmp145"} boogie_si_record_i64($i282);
    goto corral_source_split_5314;

  corral_source_split_5314:
    assume {:verifier.code 0} true;
    $p283 := $i2p.i64.ref($i282);
    goto corral_source_split_5315;

  corral_source_split_5315:
    assume {:verifier.code 0} true;
    $i284 := $load.i8($M.1, $p283);
    call {:si_unique_call 2240} {:cexpr "__cil_tmp146"} boogie_si_record_i8($i284);
    goto corral_source_split_5316;

  corral_source_split_5316:
    assume {:verifier.code 0} true;
    $i285 := $zext.i8.i64($i284);
    call {:si_unique_call 2241} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i285);
    goto corral_source_split_5317;

  corral_source_split_5317:
    assume {:verifier.code 0} true;
    $i286 := $and.i64($i285, 1);
    call {:si_unique_call 2242} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i286);
    goto corral_source_split_5318;

  corral_source_split_5318:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2243} $i287 := __builtinx_expect.i64.i64($i286, 0);
    goto corral_source_split_5319;

  corral_source_split_5319:
    assume {:verifier.code 0} true;
    $i288 := $sext.i32.i64($i287);
    call {:si_unique_call 2244} {:cexpr "tmp___5"} boogie_si_record_i64($i288);
    goto corral_source_split_5320;

  corral_source_split_5320:
    assume {:verifier.code 0} true;
    $i289 := $ne.i64($i288, 0);
    goto corral_source_split_5321;

  corral_source_split_5321:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb95, $bb96;

  $bb96:
    assume !($i289 == 1);
    assume {:verifier.code 0} true;
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2246} $i291 := INFTL_formatblock($p0, $i236);
    call {:si_unique_call 2247} {:cexpr "tmp___6"} boogie_si_record_i32($i291);
    goto corral_source_split_5326;

  corral_source_split_5326:
    assume {:verifier.code 0} true;
    $i292 := $slt.i32($i291, 0);
    goto corral_source_split_5327;

  corral_source_split_5327:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb98, $bb99;

  $bb99:
    assume !($i292 == 1);
    goto corral_source_split_5338;

  corral_source_split_5338:
    assume {:verifier.code 0} true;
    $i299 := $zext.i32.i64($i236);
    call {:si_unique_call 2251} {:cexpr "__cil_tmp155"} boogie_si_record_i64($i299);
    goto corral_source_split_5339;

  corral_source_split_5339:
    assume {:verifier.code 0} true;
    $i300 := $p2i.ref.i64($p0);
    call {:si_unique_call 2252} {:cexpr "__cil_tmp156"} boogie_si_record_i64($i300);
    goto corral_source_split_5340;

  corral_source_split_5340:
    assume {:verifier.code 0} true;
    $i301 := $add.i64($i300, 544);
    call {:si_unique_call 2253} {:cexpr "__cil_tmp157"} boogie_si_record_i64($i301);
    goto corral_source_split_5341;

  corral_source_split_5341:
    assume {:verifier.code 0} true;
    $p302 := $i2p.i64.ref($i301);
    goto corral_source_split_5342;

  corral_source_split_5342:
    assume {:verifier.code 0} true;
    $p303 := $load.ref($M.1, $p302);
    goto corral_source_split_5343;

  corral_source_split_5343:
    assume {:verifier.code 0} true;
    $p304 := $add.ref($p303, $mul.ref($i299, 2));
    goto corral_source_split_5344;

  corral_source_split_5344:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p304, $sub.i16(0, 2));
    goto corral_source_split_5345;

  corral_source_split_5345:
    assume {:verifier.code 0} true;
    $i305 := $p2i.ref.i64($p0);
    call {:si_unique_call 2254} {:cexpr "__cil_tmp160"} boogie_si_record_i64($i305);
    goto corral_source_split_5346;

  corral_source_split_5346:
    assume {:verifier.code 0} true;
    $i306 := $add.i64($i305, 522);
    call {:si_unique_call 2255} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i306);
    goto corral_source_split_5347;

  corral_source_split_5347:
    assume {:verifier.code 0} true;
    $i307 := $p2i.ref.i64($p0);
    call {:si_unique_call 2256} {:cexpr "__cil_tmp162"} boogie_si_record_i64($i307);
    goto corral_source_split_5348;

  corral_source_split_5348:
    assume {:verifier.code 0} true;
    $i308 := $add.i64($i307, 522);
    call {:si_unique_call 2257} {:cexpr "__cil_tmp163"} boogie_si_record_i64($i308);
    goto corral_source_split_5349;

  corral_source_split_5349:
    assume {:verifier.code 0} true;
    $p309 := $i2p.i64.ref($i308);
    goto corral_source_split_5350;

  corral_source_split_5350:
    assume {:verifier.code 0} true;
    $i310 := $load.i16($M.1, $p309);
    call {:si_unique_call 2258} {:cexpr "__cil_tmp164"} boogie_si_record_i16($i310);
    goto corral_source_split_5351;

  corral_source_split_5351:
    assume {:verifier.code 0} true;
    $i311 := $zext.i16.i32($i310);
    call {:si_unique_call 2259} {:cexpr "__cil_tmp165"} boogie_si_record_i32($i311);
    goto corral_source_split_5352;

  corral_source_split_5352:
    assume {:verifier.code 0} true;
    $i312 := $add.i32($i311, 1);
    call {:si_unique_call 2260} {:cexpr "__cil_tmp166"} boogie_si_record_i32($i312);
    goto corral_source_split_5353;

  corral_source_split_5353:
    assume {:verifier.code 0} true;
    $i313 := $trunc.i32.i16($i312);
    goto corral_source_split_5354;

  corral_source_split_5354:
    assume {:verifier.code 0} true;
    $p314 := $i2p.i64.ref($i306);
    goto corral_source_split_5355;

  corral_source_split_5355:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p314, $i313);
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p237, $sub.i16(0, 1));
    goto corral_source_split_5357;

  corral_source_split_5357:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2261} __might_sleep(.str.31, 767, 0);
    goto corral_source_split_5358;

  corral_source_split_5358:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2262} vslice_dummy_var_118 := _cond_resched();
    goto corral_source_split_5359;

  corral_source_split_5359:
    assume {:verifier.code 0} true;
    $p316 := $load.ref($M.1, $p191);
    goto corral_source_split_5360;

  corral_source_split_5360:
    assume {:verifier.code 0} true;
    $p317 := $add.ref($p316, $mul.ref($i188, 2));
    goto corral_source_split_5361;

  corral_source_split_5361:
    assume {:verifier.code 0} true;
    $i318 := $load.i16($M.1, $p317);
    call {:si_unique_call 2263} {:cexpr "__cil_tmp111"} boogie_si_record_i16($i318);
    goto corral_source_split_5362;

  corral_source_split_5362:
    assume {:verifier.code 0} true;
    $i319 := $zext.i16.i32($i318);
    call {:si_unique_call 2264} {:cexpr "thisEUN"} boogie_si_record_i32($i319);
    goto corral_source_split_5363;

  corral_source_split_5363:
    assume {:verifier.code 0} true;
    $i320 := $eq.i32($i319, 65535);
    goto corral_source_split_5364;

  corral_source_split_5364:
    assume {:verifier.code 0} true;
    $i200 := $i319;
    assume true;
    goto $bb78, $bb101;

  $bb101:
    assume !($i320 == 1);
    assume {:verifier.code 0} true;
    $i198, $p199 := $i319, $p317;
    goto $bb101_dummy;

  $bb78:
    assume $i320 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_5240;

  corral_source_split_5240:
    assume {:verifier.code 0} true;
    $i197 := $i200;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    goto corral_source_split_5205;

  corral_source_split_5205:
    assume {:verifier.code 0} true;
    $p201 := $bitcast.ref.ref($p8);
    goto corral_source_split_5206;

  corral_source_split_5206:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p201, .str);
    goto corral_source_split_5207;

  corral_source_split_5207:
    assume {:verifier.code 0} true;
    $i202 := $p2i.ref.i64($p8);
    goto corral_source_split_5208;

  corral_source_split_5208:
    assume {:verifier.code 0} true;
    $i203 := $add.i64($i202, 8);
    call {:si_unique_call 2201} {:cexpr "__cil_tmp113"} boogie_si_record_i64($i203);
    goto corral_source_split_5209;

  corral_source_split_5209:
    assume {:verifier.code 0} true;
    $p204 := $i2p.i64.ref($i203);
    goto corral_source_split_5210;

  corral_source_split_5210:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p204, .str.63);
    goto corral_source_split_5211;

  corral_source_split_5211:
    assume {:verifier.code 0} true;
    $i205 := $p2i.ref.i64($p8);
    goto corral_source_split_5212;

  corral_source_split_5212:
    assume {:verifier.code 0} true;
    $i206 := $add.i64($i205, 16);
    call {:si_unique_call 2202} {:cexpr "__cil_tmp114"} boogie_si_record_i64($i206);
    goto corral_source_split_5213;

  corral_source_split_5213:
    assume {:verifier.code 0} true;
    $p207 := $i2p.i64.ref($i206);
    goto corral_source_split_5214;

  corral_source_split_5214:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p207, .str.31);
    goto corral_source_split_5215;

  corral_source_split_5215:
    assume {:verifier.code 0} true;
    $i208 := $p2i.ref.i64($p8);
    goto corral_source_split_5216;

  corral_source_split_5216:
    assume {:verifier.code 0} true;
    $i209 := $add.i64($i208, 24);
    call {:si_unique_call 2203} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i209);
    goto corral_source_split_5217;

  corral_source_split_5217:
    assume {:verifier.code 0} true;
    $p210 := $i2p.i64.ref($i209);
    goto corral_source_split_5218;

  corral_source_split_5218:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p210, .str.67);
    goto corral_source_split_5219;

  corral_source_split_5219:
    assume {:verifier.code 0} true;
    $i211 := $p2i.ref.i64($p8);
    goto corral_source_split_5220;

  corral_source_split_5220:
    assume {:verifier.code 0} true;
    $i212 := $add.i64($i211, 32);
    call {:si_unique_call 2204} {:cexpr "__cil_tmp116"} boogie_si_record_i64($i212);
    goto corral_source_split_5221;

  corral_source_split_5221:
    assume {:verifier.code 0} true;
    $p213 := $i2p.i64.ref($i212);
    goto corral_source_split_5222;

  corral_source_split_5222:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p213, 735);
    goto corral_source_split_5223;

  corral_source_split_5223:
    assume {:verifier.code 0} true;
    $i214 := $p2i.ref.i64($p8);
    goto corral_source_split_5224;

  corral_source_split_5224:
    assume {:verifier.code 0} true;
    $i215 := $add.i64($i214, 35);
    call {:si_unique_call 2205} {:cexpr "__cil_tmp117"} boogie_si_record_i64($i215);
    goto corral_source_split_5225;

  corral_source_split_5225:
    assume {:verifier.code 0} true;
    $p216 := $i2p.i64.ref($i215);
    goto corral_source_split_5226;

  corral_source_split_5226:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p216, 0);
    goto corral_source_split_5227;

  corral_source_split_5227:
    assume {:verifier.code 0} true;
    $i217 := $p2i.ref.i64($p8);
    goto corral_source_split_5228;

  corral_source_split_5228:
    assume {:verifier.code 0} true;
    $i218 := $add.i64($i217, 35);
    call {:si_unique_call 2206} {:cexpr "__cil_tmp118"} boogie_si_record_i64($i218);
    goto corral_source_split_5229;

  corral_source_split_5229:
    assume {:verifier.code 0} true;
    $p219 := $i2p.i64.ref($i218);
    goto corral_source_split_5230;

  corral_source_split_5230:
    assume {:verifier.code 0} true;
    $i220 := $load.i8($M.1, $p219);
    call {:si_unique_call 2207} {:cexpr "__cil_tmp119"} boogie_si_record_i8($i220);
    goto corral_source_split_5231;

  corral_source_split_5231:
    assume {:verifier.code 0} true;
    $i221 := $zext.i8.i64($i220);
    call {:si_unique_call 2208} {:cexpr "__cil_tmp120"} boogie_si_record_i64($i221);
    goto corral_source_split_5232;

  corral_source_split_5232:
    assume {:verifier.code 0} true;
    $i222 := $and.i64($i221, 1);
    call {:si_unique_call 2209} {:cexpr "__cil_tmp121"} boogie_si_record_i64($i222);
    goto corral_source_split_5233;

  corral_source_split_5233:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2210} $i223 := __builtinx_expect.i64.i64($i222, 0);
    goto corral_source_split_5234;

  corral_source_split_5234:
    assume {:verifier.code 0} true;
    $i224 := $sext.i32.i64($i223);
    call {:si_unique_call 2211} {:cexpr "tmp___3"} boogie_si_record_i64($i224);
    goto corral_source_split_5235;

  corral_source_split_5235:
    assume {:verifier.code 0} true;
    $i225 := $ne.i64($i224, 0);
    goto corral_source_split_5236;

  corral_source_split_5236:
    assume {:verifier.code 0} true;
    assume {:branchcond $i225} true;
    goto $bb79, $bb80;

  $bb80:
    assume !($i225 == 1);
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    return;

  $bb79:
    assume $i225 == 1;
    goto corral_source_split_5242;

  corral_source_split_5242:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2212} vslice_dummy_var_116 := __dynamic_pr_debug.ref.ref.i32($p8, .str.67, $i197);
    goto corral_source_split_5243;

  corral_source_split_5243:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb98:
    assume $i292 == 1;
    goto corral_source_split_5329;

  corral_source_split_5329:
    assume {:verifier.code 0} true;
    $i293 := $zext.i32.i64($i236);
    call {:si_unique_call 2248} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i293);
    goto corral_source_split_5330;

  corral_source_split_5330:
    assume {:verifier.code 0} true;
    $i294 := $p2i.ref.i64($p0);
    call {:si_unique_call 2249} {:cexpr "__cil_tmp151"} boogie_si_record_i64($i294);
    goto corral_source_split_5331;

  corral_source_split_5331:
    assume {:verifier.code 0} true;
    $i295 := $add.i64($i294, 544);
    call {:si_unique_call 2250} {:cexpr "__cil_tmp152"} boogie_si_record_i64($i295);
    goto corral_source_split_5332;

  corral_source_split_5332:
    assume {:verifier.code 0} true;
    $p296 := $i2p.i64.ref($i295);
    goto corral_source_split_5333;

  corral_source_split_5333:
    assume {:verifier.code 0} true;
    $p297 := $load.ref($M.1, $p296);
    goto corral_source_split_5334;

  corral_source_split_5334:
    assume {:verifier.code 0} true;
    $p298 := $add.ref($p297, $mul.ref($i293, 2));
    goto corral_source_split_5335;

  corral_source_split_5335:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p298, $sub.i16(0, 4));
    goto corral_source_split_5336;

  corral_source_split_5336:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb95:
    assume $i289 == 1;
    goto corral_source_split_5323;

  corral_source_split_5323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2245} vslice_dummy_var_117 := __dynamic_pr_debug.ref.ref.i32.i32($p9, .str.68, $i236, $i1);
    goto corral_source_split_5324;

  corral_source_split_5324:
    assume {:verifier.code 0} true;
    goto $bb97;

  $bb83:
    assume $i235 == 1;
    goto corral_source_split_5255;

  corral_source_split_5255:
    assume {:verifier.code 0} true;
    $i238 := $i198;
    goto $bb86;

  $bb86:
    call $i239, $i240, $p241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $p253, $p254, $i255, $i256, $i257, $p258, $p259, $i260, $i261, $i262, $i238, $i263, $p264 := INFTL_trydeletechain_loop_$bb86($p0, $p230, $i239, $i240, $p241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $p253, $p254, $i255, $i256, $i257, $p258, $p259, $i260, $i261, $i262, $i238, $i263, $p264);
    goto $bb86_last;

  corral_source_split_5259:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    $i239 := $p2i.ref.i64($p0);
    call {:si_unique_call 2218} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i239);
    goto corral_source_split_5261;

  corral_source_split_5261:
    assume {:verifier.code 0} true;
    $i240 := $add.i64($i239, 560);
    call {:si_unique_call 2219} {:cexpr "__cil_tmp123"} boogie_si_record_i64($i240);
    goto corral_source_split_5262;

  corral_source_split_5262:
    assume {:verifier.code 0} true;
    $p241 := $i2p.i64.ref($i240);
    goto corral_source_split_5263;

  corral_source_split_5263:
    assume {:verifier.code 0} true;
    $i242 := $load.i32($M.1, $p241);
    call {:si_unique_call 2220} {:cexpr "__cil_tmp124"} boogie_si_record_i32($i242);
    goto corral_source_split_5264;

  corral_source_split_5264:
    assume {:verifier.code 0} true;
    $i243 := $ule.i32($i242, $i238);
    goto corral_source_split_5265;

  corral_source_split_5265:
    assume {:verifier.code 0} true;
    $i244 := $zext.i1.i32($i243);
    call {:si_unique_call 2221} {:cexpr "__cil_tmp125"} boogie_si_record_i32($i244);
    goto corral_source_split_5266;

  corral_source_split_5266:
    assume {:verifier.code 0} true;
    $i245 := $sext.i32.i64($i244);
    call {:si_unique_call 2222} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i245);
    goto corral_source_split_5267;

  corral_source_split_5267:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2223} $i246 := __builtinx_expect.i64.i64($i245, 0);
    goto corral_source_split_5268;

  corral_source_split_5268:
    assume {:verifier.code 0} true;
    $i247 := $sext.i32.i64($i246);
    call {:si_unique_call 2224} {:cexpr "tmp___4"} boogie_si_record_i64($i247);
    goto corral_source_split_5269;

  corral_source_split_5269:
    assume {:verifier.code 0} true;
    $i248 := $ne.i64($i247, 0);
    goto corral_source_split_5270;

  corral_source_split_5270:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i248 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    $i249 := $zext.i32.i64($i238);
    call {:si_unique_call 2226} {:cexpr "__cil_tmp127"} boogie_si_record_i64($i249);
    goto corral_source_split_5274;

  corral_source_split_5274:
    assume {:verifier.code 0} true;
    $i250 := $p2i.ref.i64($p0);
    call {:si_unique_call 2227} {:cexpr "__cil_tmp128"} boogie_si_record_i64($i250);
    goto corral_source_split_5275;

  corral_source_split_5275:
    assume {:verifier.code 0} true;
    $i251 := $add.i64($i250, 544);
    call {:si_unique_call 2228} {:cexpr "__cil_tmp129"} boogie_si_record_i64($i251);
    goto corral_source_split_5276;

  corral_source_split_5276:
    assume {:verifier.code 0} true;
    $p252 := $i2p.i64.ref($i251);
    goto corral_source_split_5277;

  corral_source_split_5277:
    assume {:verifier.code 0} true;
    $p253 := $load.ref($M.1, $p252);
    goto corral_source_split_5278;

  corral_source_split_5278:
    assume {:verifier.code 0} true;
    $p254 := $add.ref($p253, $mul.ref($i249, 2));
    goto corral_source_split_5279;

  corral_source_split_5279:
    assume {:verifier.code 0} true;
    $i255 := $load.i16($M.1, $p254);
    call {:si_unique_call 2229} {:cexpr "__cil_tmp131"} boogie_si_record_i16($i255);
    goto corral_source_split_5280;

  corral_source_split_5280:
    assume {:verifier.code 0} true;
    $i256 := $zext.i16.i32($i255);
    call {:si_unique_call 2230} {:cexpr "thisEUN"} boogie_si_record_i32($i256);
    goto corral_source_split_5281;

  corral_source_split_5281:
    assume {:verifier.code 0} true;
    $i257 := $zext.i32.i64($i256);
    call {:si_unique_call 2231} {:cexpr "__cil_tmp132"} boogie_si_record_i64($i257);
    goto corral_source_split_5282;

  corral_source_split_5282:
    assume {:verifier.code 0} true;
    $p258 := $load.ref($M.1, $p230);
    goto corral_source_split_5283;

  corral_source_split_5283:
    assume {:verifier.code 0} true;
    $p259 := $add.ref($p258, $mul.ref($i257, 2));
    goto corral_source_split_5284;

  corral_source_split_5284:
    assume {:verifier.code 0} true;
    $i260 := $load.i16($M.1, $p259);
    call {:si_unique_call 2232} {:cexpr "__cil_tmp137"} boogie_si_record_i16($i260);
    goto corral_source_split_5285;

  corral_source_split_5285:
    assume {:verifier.code 0} true;
    $i261 := $zext.i16.i32($i260);
    call {:si_unique_call 2233} {:cexpr "__cil_tmp138"} boogie_si_record_i32($i261);
    goto corral_source_split_5286;

  corral_source_split_5286:
    assume {:verifier.code 0} true;
    $i262 := $ne.i32($i261, 65535);
    goto corral_source_split_5287;

  corral_source_split_5287:
    assume {:verifier.code 0} true;
    $i263, $p264 := $i256, $p254;
    assume true;
    goto $bb92, $bb93;

  $bb93:
    assume !($i262 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5289;

  corral_source_split_5289:
    assume {:verifier.code 0} true;
    $i236, $p237 := $i263, $p264;
    goto $bb85;

  $bb92:
    assume $i262 == 1;
    assume {:verifier.code 0} true;
    $i238 := $i256;
    goto $bb92_dummy;

  $bb88:
    assume $i248 == 1;
    call {:si_unique_call 2225} devirtbounce.1(0, .str.31, 741, 12);
    goto corral_source_split_5272;

  corral_source_split_5272:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    call INFTL_trydeletechain_loop_$bb90();
    goto $bb90_last;

  $bb74:
    assume {:verifier.code 0} true;
    assume $i196 == 1;
    goto $bb75;

  $bb71:
    assume $i186 == 1;
    goto corral_source_split_5192;

  corral_source_split_5192:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2195} vslice_dummy_var_115 := __dynamic_pr_debug.ref.ref.i32($p7, .str.66, $i1);
    goto corral_source_split_5193;

  corral_source_split_5193:
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb60:
    assume $i147 == 1;
    goto corral_source_split_5137;

  corral_source_split_5137:
    assume {:verifier.code 0} true;
    $i148 := 0;
    goto $bb63;

  $bb63:
    call $i149, $i150, $p151, $i152, $i153, $p154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i148 := INFTL_trydeletechain_loop_$bb63($p2, $p144, $i149, $i150, $p151, $i152, $i153, $p154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i148);
    goto $bb63_last;

  corral_source_split_5139:
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    $i149 := $sext.i32.i64($i148);
    goto corral_source_split_5141;

  corral_source_split_5141:
    assume {:verifier.code 0} true;
    $i150 := $mul.i64($i149, 1);
    call {:si_unique_call 2177} {:cexpr "__cil_tmp88"} boogie_si_record_i64($i150);
    goto corral_source_split_5142;

  corral_source_split_5142:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($add.ref($p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5143;

  corral_source_split_5143:
    assume {:verifier.code 0} true;
    $i152 := $p2i.ref.i64($p151);
    goto corral_source_split_5144;

  corral_source_split_5144:
    assume {:verifier.code 0} true;
    $i153 := $add.i64($i152, $i150);
    call {:si_unique_call 2178} {:cexpr "__cil_tmp89"} boogie_si_record_i64($i153);
    goto corral_source_split_5145;

  corral_source_split_5145:
    assume {:verifier.code 0} true;
    $p154 := $i2p.i64.ref($i153);
    goto corral_source_split_5146;

  corral_source_split_5146:
    assume {:verifier.code 0} true;
    $i155 := $load.i8($M.1, $p154);
    call {:si_unique_call 2179} {:cexpr "__cil_tmp90"} boogie_si_record_i8($i155);
    goto corral_source_split_5147;

  corral_source_split_5147:
    assume {:verifier.code 0} true;
    $i156 := $zext.i8.i32($i155);
    call {:si_unique_call 2180} {:cexpr "__cil_tmp91"} boogie_si_record_i32($i156);
    goto corral_source_split_5148;

  corral_source_split_5148:
    assume {:verifier.code 0} true;
    $i157 := $ne.i32($i156, 0);
    goto corral_source_split_5149;

  corral_source_split_5149:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb65, $bb66;

  $bb66:
    assume !($i157 == 1);
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    $i158 := $add.i32($i148, 1);
    call {:si_unique_call 2181} {:cexpr "block"} boogie_si_record_i32($i158);
    goto corral_source_split_5153;

  corral_source_split_5153:
    assume {:verifier.code 0} true;
    $i159 := $load.i32($M.1, $p144);
    call {:si_unique_call 2182} {:cexpr "__cil_tmp94"} boogie_si_record_i32($i159);
    goto corral_source_split_5154;

  corral_source_split_5154:
    assume {:verifier.code 0} true;
    $i160 := $udiv.i32($i159, 512);
    call {:si_unique_call 2183} {:cexpr "__cil_tmp95"} boogie_si_record_i32($i160);
    goto corral_source_split_5155;

  corral_source_split_5155:
    assume {:verifier.code 0} true;
    $i161 := $ult.i32($i158, $i160);
    goto corral_source_split_5156;

  corral_source_split_5156:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb68, $bb69;

  $bb69:
    assume !($i161 == 1);
    goto corral_source_split_5158;

  corral_source_split_5158:
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb68:
    assume $i161 == 1;
    assume {:verifier.code 0} true;
    $i148 := $i158;
    goto $bb68_dummy;

  $bb65:
    assume $i157 == 1;
    goto corral_source_split_5151;

  corral_source_split_5151:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb8:
    assume $i56 == 1;
    goto corral_source_split_4995;

  corral_source_split_4995:
    assume {:verifier.code 0} true;
    $i57, $i58 := 10000, $i49;
    goto $bb11;

  $bb11:
    call $i59, $i60, $p61, $i62, $i63, $i64, $i66, $i67, $p68, $i69, $i70, $p71, $i72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $p93, $i94, $i95, $i97, $i98, $p99, $i100, $i101, $i102, $i103, $p104, $i105, $i106, $i107, $i96, $i108, $i109, $i110, $i111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $p123, $i75, $i125, $i126, $i127, $i128, $i65, $i129, $i130, $i132, $i133, $i134, $p135, $p136, $p137, $i138, $i139, $i140, $i141, $i57, $i58, vslice_dummy_var_113 := INFTL_trydeletechain_loop_$bb11($p0, $p2, $p3, $p4, $p5, $p13, $p54, $i59, $i60, $p61, $i62, $i63, $i64, $i66, $i67, $p68, $i69, $i70, $p71, $i72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $p93, $i94, $i95, $i97, $i98, $p99, $i100, $i101, $i102, $i103, $p104, $i105, $i106, $i107, $i96, $i108, $i109, $i110, $i111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $p123, $i75, $i125, $i126, $i127, $i128, $i65, $i129, $i130, $i132, $i133, $i134, $p135, $p136, $p137, $i138, $i139, $i140, $i141, $i57, $i58, vslice_dummy_var_113);
    goto $bb11_last;

  corral_source_split_4997:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i59 := $p2i.ref.i64($p0);
    call {:si_unique_call 2129} {:cexpr "__cil_tmp74"} boogie_si_record_i64($i59);
    goto corral_source_split_4999;

  corral_source_split_4999:
    assume {:verifier.code 0} true;
    $i60 := $add.i64($i59, 356);
    call {:si_unique_call 2130} {:cexpr "__cil_tmp75"} boogie_si_record_i64($i60);
    goto corral_source_split_5000;

  corral_source_split_5000:
    assume {:verifier.code 0} true;
    $p61 := $i2p.i64.ref($i60);
    goto corral_source_split_5001;

  corral_source_split_5001:
    assume {:verifier.code 0} true;
    $i62 := $load.i32($M.1, $p61);
    call {:si_unique_call 2131} {:cexpr "__cil_tmp76"} boogie_si_record_i32($i62);
    goto corral_source_split_5002;

  corral_source_split_5002:
    assume {:verifier.code 0} true;
    $i63 := $udiv.i32($i62, 512);
    call {:si_unique_call 2132} {:cexpr "__cil_tmp77"} boogie_si_record_i32($i63);
    goto corral_source_split_5003;

  corral_source_split_5003:
    assume {:verifier.code 0} true;
    $i64 := $ult.i32(0, $i63);
    goto corral_source_split_5004;

  corral_source_split_5004:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    assume !($i64 == 1);
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $i129 := $sub.i32($i57, 1);
    call {:si_unique_call 2165} {:cexpr "silly"} boogie_si_record_i32($i129);
    goto corral_source_split_5111;

  corral_source_split_5111:
    assume {:verifier.code 0} true;
    $i130 := $eq.i32($i57, 0);
    goto corral_source_split_5112;

  corral_source_split_5112:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    $i132 := $zext.i32.i64($i58);
    call {:si_unique_call 2167} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i132);
    goto corral_source_split_5117;

  corral_source_split_5117:
    assume {:verifier.code 0} true;
    $i133 := $p2i.ref.i64($p0);
    call {:si_unique_call 2168} {:cexpr "__cil_tmp80"} boogie_si_record_i64($i133);
    goto corral_source_split_5118;

  corral_source_split_5118:
    assume {:verifier.code 0} true;
    $i134 := $add.i64($i133, 544);
    call {:si_unique_call 2169} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i134);
    goto corral_source_split_5119;

  corral_source_split_5119:
    assume {:verifier.code 0} true;
    $p135 := $i2p.i64.ref($i134);
    goto corral_source_split_5120;

  corral_source_split_5120:
    assume {:verifier.code 0} true;
    $p136 := $load.ref($M.1, $p135);
    goto corral_source_split_5121;

  corral_source_split_5121:
    assume {:verifier.code 0} true;
    $p137 := $add.ref($p136, $mul.ref($i132, 2));
    goto corral_source_split_5122;

  corral_source_split_5122:
    assume {:verifier.code 0} true;
    $i138 := $load.i16($M.1, $p137);
    call {:si_unique_call 2170} {:cexpr "__cil_tmp84"} boogie_si_record_i16($i138);
    goto corral_source_split_5123;

  corral_source_split_5123:
    assume {:verifier.code 0} true;
    $i139 := $zext.i16.i32($i138);
    call {:si_unique_call 2171} {:cexpr "thisEUN"} boogie_si_record_i32($i139);
    goto corral_source_split_5124;

  corral_source_split_5124:
    assume {:verifier.code 0} true;
    $i140 := $load.i32($M.1, $p54);
    call {:si_unique_call 2172} {:cexpr "__cil_tmp87"} boogie_si_record_i32($i140);
    goto corral_source_split_5125;

  corral_source_split_5125:
    assume {:verifier.code 0} true;
    $i141 := $ugt.i32($i140, $i139);
    goto corral_source_split_5126;

  corral_source_split_5126:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb57, $bb58;

  $bb58:
    assume !($i141 == 1);
    goto corral_source_split_5128;

  corral_source_split_5128:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb57:
    assume $i141 == 1;
    assume {:verifier.code 0} true;
    $i57, $i58 := $i129, $i139;
    goto $bb57_dummy;

  $bb54:
    assume $i130 == 1;
    goto corral_source_split_5114;

  corral_source_split_5114:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2166} vslice_dummy_var_114 := printk.ref.i32(.str.41, $i1);
    goto corral_source_split_5115;

  corral_source_split_5115:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb13:
    assume $i64 == 1;
    goto corral_source_split_5006;

  corral_source_split_5006:
    assume {:verifier.code 0} true;
    $i65 := 0;
    goto $bb16;

  $bb16:
    call $i66, $i67, $p68, $i69, $i70, $p71, $i72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $p93, $i94, $i95, $i97, $i98, $p99, $i100, $i101, $i102, $i103, $p104, $i105, $i106, $i107, $i96, $i108, $i109, $i110, $i111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $p123, $i75, $i125, $i126, $i127, $i128, $i65, vslice_dummy_var_113 := INFTL_trydeletechain_loop_$bb16($p0, $p2, $p3, $p4, $p5, $p13, $p61, $i66, $i67, $p68, $i69, $i70, $p71, $i72, $i73, $i74, $i76, $i77, $p78, $i79, $i80, $p81, $i82, $i83, $i84, $i85, $i86, $i87, $p88, $i89, $i90, $i91, $i92, $p93, $i94, $i95, $i97, $i98, $p99, $i100, $i101, $i102, $i103, $p104, $i105, $i106, $i107, $i96, $i108, $i109, $i110, $i111, $i112, $i113, $p114, $i115, $i116, $p117, $i118, $i119, $p120, $i121, $i122, $p123, $i75, $i125, $i126, $i127, $i128, $i65, $i58, vslice_dummy_var_113);
    goto $bb16_last;

  corral_source_split_5008:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i66 := $sext.i32.i64($i65);
    goto corral_source_split_5010;

  corral_source_split_5010:
    assume {:verifier.code 0} true;
    $i67 := $mul.i64($i66, 1);
    call {:si_unique_call 2133} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i67);
    goto corral_source_split_5011;

  corral_source_split_5011:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5012;

  corral_source_split_5012:
    assume {:verifier.code 0} true;
    $i69 := $p2i.ref.i64($p68);
    goto corral_source_split_5013;

  corral_source_split_5013:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, $i67);
    call {:si_unique_call 2134} {:cexpr "__cil_tmp47"} boogie_si_record_i64($i70);
    goto corral_source_split_5014;

  corral_source_split_5014:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i70);
    goto corral_source_split_5015;

  corral_source_split_5015:
    assume {:verifier.code 0} true;
    $i72 := $load.i8($M.1, $p71);
    call {:si_unique_call 2135} {:cexpr "__cil_tmp48"} boogie_si_record_i8($i72);
    goto corral_source_split_5016;

  corral_source_split_5016:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i72);
    call {:si_unique_call 2136} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i73);
    goto corral_source_split_5017;

  corral_source_split_5017:
    assume {:verifier.code 0} true;
    $i74 := $ne.i32($i73, 0);
    goto corral_source_split_5018;

  corral_source_split_5018:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i74 == 1);
    goto corral_source_split_5022;

  corral_source_split_5022:
    assume {:verifier.code 0} true;
    $i76 := $sext.i32.i64($i65);
    goto corral_source_split_5023;

  corral_source_split_5023:
    assume {:verifier.code 0} true;
    $i77 := $mul.i64($i76, 1);
    call {:si_unique_call 2137} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i77);
    goto corral_source_split_5024;

  corral_source_split_5024:
    assume {:verifier.code 0} true;
    $p78 := $add.ref($add.ref($p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5025;

  corral_source_split_5025:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p78);
    goto corral_source_split_5026;

  corral_source_split_5026:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, $i77);
    call {:si_unique_call 2138} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i80);
    goto corral_source_split_5027;

  corral_source_split_5027:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_5028;

  corral_source_split_5028:
    assume {:verifier.code 0} true;
    $i82 := $load.i8($M.1, $p81);
    call {:si_unique_call 2139} {:cexpr "__cil_tmp52"} boogie_si_record_i8($i82);
    goto corral_source_split_5029;

  corral_source_split_5029:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 2140} {:cexpr "__cil_tmp53"} boogie_si_record_i32($i83);
    goto corral_source_split_5030;

  corral_source_split_5030:
    assume {:verifier.code 0} true;
    $i84 := $ne.i32($i83, 0);
    goto corral_source_split_5031;

  corral_source_split_5031:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i84 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i85 := $mul.i32($i65, 512);
    call {:si_unique_call 2144} {:cexpr "__cil_tmp54"} boogie_si_record_i32($i85);
    goto corral_source_split_5041;

  corral_source_split_5041:
    assume {:verifier.code 0} true;
    $i86 := $p2i.ref.i64($p0);
    call {:si_unique_call 2145} {:cexpr "__cil_tmp56"} boogie_si_record_i64($i86);
    goto corral_source_split_5042;

  corral_source_split_5042:
    assume {:verifier.code 0} true;
    $i87 := $add.i64($i86, 356);
    call {:si_unique_call 2146} {:cexpr "__cil_tmp57"} boogie_si_record_i64($i87);
    goto corral_source_split_5043;

  corral_source_split_5043:
    assume {:verifier.code 0} true;
    $p88 := $i2p.i64.ref($i87);
    goto corral_source_split_5044;

  corral_source_split_5044:
    assume {:verifier.code 0} true;
    $i89 := $load.i32($M.1, $p88);
    call {:si_unique_call 2147} {:cexpr "__cil_tmp58"} boogie_si_record_i32($i89);
    goto corral_source_split_5045;

  corral_source_split_5045:
    assume {:verifier.code 0} true;
    $i90 := $mul.i32($i89, $i58);
    call {:si_unique_call 2148} {:cexpr "__cil_tmp59"} boogie_si_record_i32($i90);
    goto corral_source_split_5046;

  corral_source_split_5046:
    assume {:verifier.code 0} true;
    $i91 := $add.i32($i90, $i85);
    call {:si_unique_call 2149} {:cexpr "__cil_tmp60"} boogie_si_record_i32($i91);
    goto corral_source_split_5047;

  corral_source_split_5047:
    assume {:verifier.code 0} true;
    $i92 := $zext.i32.i64($i91);
    call {:si_unique_call 2150} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i92);
    goto corral_source_split_5048;

  corral_source_split_5048:
    assume {:verifier.code 0} true;
    $p93 := $bitcast.ref.ref($p4);
    goto corral_source_split_5049;

  corral_source_split_5049:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2151} $i94 := inftl_read_oob($p13, $i92, 8, $p5, $p93);
    call {:si_unique_call 2152} {:cexpr "tmp___0"} boogie_si_record_i32($i94);
    goto corral_source_split_5050;

  corral_source_split_5050:
    assume {:verifier.code 0} true;
    $i95 := $slt.i32($i94, 0);
    goto corral_source_split_5051;

  corral_source_split_5051:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i95 == 1);
    goto corral_source_split_5055;

  corral_source_split_5055:
    assume {:verifier.code 0} true;
    $i97 := $p2i.ref.i64($p4);
    goto corral_source_split_5056;

  corral_source_split_5056:
    assume {:verifier.code 0} true;
    $i98 := $add.i64($i97, 7);
    call {:si_unique_call 2153} {:cexpr "__cil_tmp63"} boogie_si_record_i64($i98);
    goto corral_source_split_5057;

  corral_source_split_5057:
    assume {:verifier.code 0} true;
    $p99 := $i2p.i64.ref($i98);
    goto corral_source_split_5058;

  corral_source_split_5058:
    assume {:verifier.code 0} true;
    $i100 := $load.i8($M.1, $p99);
    call {:si_unique_call 2154} {:cexpr "__cil_tmp64"} boogie_si_record_i8($i100);
    goto corral_source_split_5059;

  corral_source_split_5059:
    assume {:verifier.code 0} true;
    $i101 := $zext.i8.i32($i100);
    call {:si_unique_call 2155} {:cexpr "__cil_tmp65"} boogie_si_record_i32($i101);
    goto corral_source_split_5060;

  corral_source_split_5060:
    assume {:verifier.code 0} true;
    $i102 := $p2i.ref.i64($p4);
    goto corral_source_split_5061;

  corral_source_split_5061:
    assume {:verifier.code 0} true;
    $i103 := $add.i64($i102, 6);
    call {:si_unique_call 2156} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i103);
    goto corral_source_split_5062;

  corral_source_split_5062:
    assume {:verifier.code 0} true;
    $p104 := $i2p.i64.ref($i103);
    goto corral_source_split_5063;

  corral_source_split_5063:
    assume {:verifier.code 0} true;
    $i105 := $load.i8($M.1, $p104);
    call {:si_unique_call 2157} {:cexpr "__cil_tmp67"} boogie_si_record_i8($i105);
    goto corral_source_split_5064;

  corral_source_split_5064:
    assume {:verifier.code 0} true;
    $i106 := $zext.i8.i32($i105);
    call {:si_unique_call 2158} {:cexpr "__cil_tmp68"} boogie_si_record_i32($i106);
    goto corral_source_split_5065;

  corral_source_split_5065:
    assume {:verifier.code 0} true;
    $i107 := $or.i32($i106, $i101);
    call {:si_unique_call 2159} {:cexpr "__cil_tmp69"} boogie_si_record_i32($i107);
    assume {:verifier.code 0} true;
    $i96 := $i107;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5067;

  corral_source_split_5067:
    assume {:verifier.code 0} true;
    $i108 := $eq.i32($i96, 255);
    goto corral_source_split_5068;

  corral_source_split_5068:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i108 == 1);
    goto corral_source_split_5072;

  corral_source_split_5072:
    assume {:verifier.code 0} true;
    $i109 := $eq.i32($i96, 17);
    goto corral_source_split_5073;

  corral_source_split_5073:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i109 == 1);
    goto corral_source_split_5077;

  corral_source_split_5077:
    assume {:verifier.code 0} true;
    $i110 := $eq.i32($i96, 85);
    goto corral_source_split_5078;

  corral_source_split_5078:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i110 == 1);
    goto corral_source_split_5082;

  corral_source_split_5082:
    assume {:verifier.code 0} true;
    $i111 := $eq.i32($i96, 0);
    goto corral_source_split_5083;

  corral_source_split_5083:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i111 == 1);
    goto corral_source_split_5095;

  corral_source_split_5095:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2164} vslice_dummy_var_113 := printk.ref.i32.i32.i32(.str.62, $i65, $i58, $i96);
    goto corral_source_split_5105;

  corral_source_split_5105:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $i75 := $i65;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5033;

  corral_source_split_5033:
    assume {:verifier.code 0} true;
    $i125 := $add.i32($i75, 1);
    call {:si_unique_call 2141} {:cexpr "block"} boogie_si_record_i32($i125);
    goto corral_source_split_5034;

  corral_source_split_5034:
    assume {:verifier.code 0} true;
    $i126 := $load.i32($M.1, $p61);
    call {:si_unique_call 2142} {:cexpr "__cil_tmp76"} boogie_si_record_i32($i126);
    goto corral_source_split_5035;

  corral_source_split_5035:
    assume {:verifier.code 0} true;
    $i127 := $udiv.i32($i126, 512);
    call {:si_unique_call 2143} {:cexpr "__cil_tmp77"} boogie_si_record_i32($i127);
    goto corral_source_split_5036;

  corral_source_split_5036:
    assume {:verifier.code 0} true;
    $i128 := $ult.i32($i125, $i127);
    goto corral_source_split_5037;

  corral_source_split_5037:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i128 == 1);
    goto corral_source_split_5109;

  corral_source_split_5109:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb51:
    assume $i128 == 1;
    assume {:verifier.code 0} true;
    $i65 := $i125;
    goto $bb51_dummy;

  $bb37:
    assume $i111 == 1;
    goto corral_source_split_5093;

  corral_source_split_5093:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i118 := $sext.i32.i64($i65);
    goto corral_source_split_5097;

  corral_source_split_5097:
    assume {:verifier.code 0} true;
    $i119 := $mul.i64($i118, 1);
    call {:si_unique_call 2162} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i119);
    goto corral_source_split_5098;

  corral_source_split_5098:
    assume {:verifier.code 0} true;
    $p120 := $add.ref($add.ref($p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5099;

  corral_source_split_5099:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p120);
    goto corral_source_split_5100;

  corral_source_split_5100:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, $i119);
    call {:si_unique_call 2163} {:cexpr "__cil_tmp73"} boogie_si_record_i64($i122);
    goto corral_source_split_5101;

  corral_source_split_5101:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_5102;

  corral_source_split_5102:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p123, 1);
    goto corral_source_split_5103;

  corral_source_split_5103:
    assume {:verifier.code 0} true;
    $i75 := $i65;
    goto $bb20;

  $bb34:
    assume $i110 == 1;
    goto corral_source_split_5080;

  corral_source_split_5080:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i112 := $sext.i32.i64($i65);
    goto corral_source_split_5085;

  corral_source_split_5085:
    assume {:verifier.code 0} true;
    $i113 := $mul.i64($i112, 1);
    call {:si_unique_call 2160} {:cexpr "__cil_tmp70"} boogie_si_record_i64($i113);
    goto corral_source_split_5086;

  corral_source_split_5086:
    assume {:verifier.code 0} true;
    $p114 := $add.ref($add.ref($p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5087;

  corral_source_split_5087:
    assume {:verifier.code 0} true;
    $i115 := $p2i.ref.i64($p114);
    goto corral_source_split_5088;

  corral_source_split_5088:
    assume {:verifier.code 0} true;
    $i116 := $add.i64($i115, $i113);
    call {:si_unique_call 2161} {:cexpr "__cil_tmp71"} boogie_si_record_i64($i116);
    goto corral_source_split_5089;

  corral_source_split_5089:
    assume {:verifier.code 0} true;
    $p117 := $i2p.i64.ref($i116);
    goto corral_source_split_5090;

  corral_source_split_5090:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p117, 1);
    goto corral_source_split_5091;

  corral_source_split_5091:
    assume {:verifier.code 0} true;
    $i75 := $i65;
    goto $bb20;

  $bb31:
    assume $i109 == 1;
    goto corral_source_split_5075;

  corral_source_split_5075:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb28:
    assume $i108 == 1;
    goto corral_source_split_5070;

  corral_source_split_5070:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb25:
    assume $i95 == 1;
    goto corral_source_split_5053;

  corral_source_split_5053:
    assume {:verifier.code 0} true;
    $i96 := 17;
    goto $bb27;

  $bb21:
    assume $i84 == 1;
    goto corral_source_split_5039;

  corral_source_split_5039:
    assume {:verifier.code 0} true;
    $i75 := $i65;
    goto $bb20;

  $bb18:
    assume $i74 == 1;
    goto corral_source_split_5020;

  corral_source_split_5020:
    assume {:verifier.code 0} true;
    $i75 := $i65;
    goto $bb20;

  $bb4:
    assume $i50 == 1;
    goto corral_source_split_4986;

  corral_source_split_4986:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2125} vslice_dummy_var_112 := printk.ref.i32(.str.65, $i1);
    goto corral_source_split_4987;

  corral_source_split_4987:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i38 == 1;
    goto corral_source_split_4969;

  corral_source_split_4969:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2117} vslice_dummy_var_111 := __dynamic_pr_debug.ref.ref.ref.i32($p6, .str.64, $p0, $i1);
    goto corral_source_split_4970;

  corral_source_split_4970:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb90_dummy:
    assume false;
    return;

  $bb90_last:
    assume {:verifier.code 0} true;
    goto $bb90_dummy;

  $bb92_dummy:
    assume false;
    return;

  $bb86_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5259;

  $bb101_dummy:
    assume false;
    return;

  $bb77_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb68_dummy:
    assume false;
    return;

  $bb63_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5139;

  $bb51_dummy:
    assume false;
    return;

  $bb16_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5008;

  $bb57_dummy:
    assume false;
    return;

  $bb11_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4997;
}



const __might_sleep: ref;

axiom __might_sleep == $sub.ref(0, 165537);

procedure __might_sleep($p0: ref, $i1: i32, $i2: i32);
  free requires assertsPassed;



implementation __might_sleep($p0: ref, $i1: i32, $i2: i32)
{

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2265} {:cexpr "__might_sleep:arg:arg1"} boogie_si_record_i32($i1);
    call {:si_unique_call 2266} {:cexpr "__might_sleep:arg:arg2"} boogie_si_record_i32($i2);
    goto corral_source_split_5366;

  corral_source_split_5366:
    assume {:verifier.code 0} true;
    return;
}



const _cond_resched: ref;

axiom _cond_resched == $sub.ref(0, 166569);

procedure _cond_resched() returns ($r: i32);
  free requires assertsPassed;



implementation _cond_resched() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_5368;

  corral_source_split_5368:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2267} $i0 := __VERIFIER_nondet_int();
    call {:si_unique_call 2268} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i0);
    goto corral_source_split_5369;

  corral_source_split_5369:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const INFTL_findfreeblock: ref;

axiom INFTL_findfreeblock == $sub.ref(0, 167601);

procedure INFTL_findfreeblock($p0: ref, $i1: i32) returns ($r: i16);
  free requires assertsPassed;
  modifies $M.3, $M.1, $CurrAddr;



implementation INFTL_findfreeblock($p0: ref, $i1: i32) returns ($r: i16)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i16;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i8;
  var $i32: i64;
  var $i33: i64;
  var $i34: i32;
  var $i35: i64;
  var $i36: i1;
  var $i38: i1;
  var $i39: i64;
  var $i40: i64;
  var $p41: ref;
  var $i42: i16;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $i46: i64;
  var $i47: i64;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i64;
  var $i59: i64;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i8;
  var $i65: i64;
  var $i66: i64;
  var $i67: i32;
  var $i68: i64;
  var $i69: i1;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $i73: i16;
  var $i74: i32;
  var $i77: i64;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i16;
  var $i84: i32;
  var $i85: i1;
  var $i89: i16;
  var $i90: i32;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $i94: i16;
  var $i95: i32;
  var $i96: i1;
  var $i97: i16;
  var $i86: i16;
  var $i98: i64;
  var $i99: i64;
  var $p100: ref;
  var $i87: i32;
  var $i88: i16;
  var $i101: i32;
  var $i102: i32;
  var $i103: i16;
  var $i104: i64;
  var $i105: i64;
  var $p106: ref;
  var $i107: i16;
  var $i108: i32;
  var $i109: i32;
  var $i110: i1;
  var $i111: i16;
  var $i112: i32;
  var $i113: i1;
  var $i114: i64;
  var $i115: i64;
  var $p116: ref;
  var $i117: i16;
  var $i118: i32;
  var $i120: i32;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i16;
  var $i125: i32;
  var $i126: i1;
  var $i76: i16;
  var vslice_dummy_var_119: i32;
  var vslice_dummy_var_120: i32;
  var vslice_dummy_var_121: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 2269} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2270} $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 2271} {:cexpr "INFTL_findfreeblock:arg:desperate"} boogie_si_record_i32($i1);
    goto corral_source_split_5371;

  corral_source_split_5371:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p0);
    call {:si_unique_call 2272} {:cexpr "__cil_tmp10"} boogie_si_record_i64($i4);
    goto corral_source_split_5372;

  corral_source_split_5372:
    assume {:verifier.code 0} true;
    $i5 := $add.i64($i4, 524);
    call {:si_unique_call 2273} {:cexpr "__cil_tmp11"} boogie_si_record_i64($i5);
    goto corral_source_split_5373;

  corral_source_split_5373:
    assume {:verifier.code 0} true;
    $p6 := $i2p.i64.ref($i5);
    goto corral_source_split_5374;

  corral_source_split_5374:
    assume {:verifier.code 0} true;
    $i7 := $load.i16($M.1, $p6);
    call {:si_unique_call 2274} {:cexpr "pot"} boogie_si_record_i16($i7);
    goto corral_source_split_5375;

  corral_source_split_5375:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p0);
    call {:si_unique_call 2275} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i8);
    goto corral_source_split_5376;

  corral_source_split_5376:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 560);
    call {:si_unique_call 2276} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i9);
    goto corral_source_split_5377;

  corral_source_split_5377:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_5378;

  corral_source_split_5378:
    assume {:verifier.code 0} true;
    $i11 := $load.i32($M.1, $p10);
    call {:si_unique_call 2277} {:cexpr "__cil_tmp14"} boogie_si_record_i32($i11);
    goto corral_source_split_5379;

  corral_source_split_5379:
    assume {:verifier.code 0} true;
    $p12 := $bitcast.ref.ref($p2);
    goto corral_source_split_5380;

  corral_source_split_5380:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p12, .str);
    goto corral_source_split_5381;

  corral_source_split_5381:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p2);
    goto corral_source_split_5382;

  corral_source_split_5382:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 8);
    call {:si_unique_call 2278} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i14);
    goto corral_source_split_5383;

  corral_source_split_5383:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_5384;

  corral_source_split_5384:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p15, .str.45);
    goto corral_source_split_5385;

  corral_source_split_5385:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p2);
    goto corral_source_split_5386;

  corral_source_split_5386:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 16);
    call {:si_unique_call 2279} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i17);
    goto corral_source_split_5387;

  corral_source_split_5387:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_5388;

  corral_source_split_5388:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p18, .str.31);
    goto corral_source_split_5389;

  corral_source_split_5389:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p2);
    goto corral_source_split_5390;

  corral_source_split_5390:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 24);
    call {:si_unique_call 2280} {:cexpr "__cil_tmp18"} boogie_si_record_i64($i20);
    goto corral_source_split_5391;

  corral_source_split_5391:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_5392;

  corral_source_split_5392:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p21, .str.46);
    goto corral_source_split_5393;

  corral_source_split_5393:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p2);
    goto corral_source_split_5394;

  corral_source_split_5394:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 32);
    call {:si_unique_call 2281} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i23);
    goto corral_source_split_5395;

  corral_source_split_5395:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_5396;

  corral_source_split_5396:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p24, 232);
    goto corral_source_split_5397;

  corral_source_split_5397:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p2);
    goto corral_source_split_5398;

  corral_source_split_5398:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 35);
    call {:si_unique_call 2282} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i26);
    goto corral_source_split_5399;

  corral_source_split_5399:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_5400;

  corral_source_split_5400:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p27, 0);
    goto corral_source_split_5401;

  corral_source_split_5401:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p2);
    goto corral_source_split_5402;

  corral_source_split_5402:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 35);
    call {:si_unique_call 2283} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i29);
    goto corral_source_split_5403;

  corral_source_split_5403:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_5404;

  corral_source_split_5404:
    assume {:verifier.code 0} true;
    $i31 := $load.i8($M.1, $p30);
    call {:si_unique_call 2284} {:cexpr "__cil_tmp22"} boogie_si_record_i8($i31);
    goto corral_source_split_5405;

  corral_source_split_5405:
    assume {:verifier.code 0} true;
    $i32 := $zext.i8.i64($i31);
    call {:si_unique_call 2285} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i32);
    goto corral_source_split_5406;

  corral_source_split_5406:
    assume {:verifier.code 0} true;
    $i33 := $and.i64($i32, 1);
    call {:si_unique_call 2286} {:cexpr "__cil_tmp24"} boogie_si_record_i64($i33);
    goto corral_source_split_5407;

  corral_source_split_5407:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2287} $i34 := __builtinx_expect.i64.i64($i33, 0);
    goto corral_source_split_5408;

  corral_source_split_5408:
    assume {:verifier.code 0} true;
    $i35 := $sext.i32.i64($i34);
    call {:si_unique_call 2288} {:cexpr "tmp"} boogie_si_record_i64($i35);
    goto corral_source_split_5409;

  corral_source_split_5409:
    assume {:verifier.code 0} true;
    $i36 := $ne.i64($i35, 0);
    goto corral_source_split_5410;

  corral_source_split_5410:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i36 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i38 := $eq.i32($i1, 0);
    goto corral_source_split_5415;

  corral_source_split_5415:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i77 := $zext.i16.i64($i7);
    call {:si_unique_call 2310} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i77);
    goto corral_source_split_5468;

  corral_source_split_5468:
    assume {:verifier.code 0} true;
    $i78 := $p2i.ref.i64($p0);
    call {:si_unique_call 2311} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i78);
    goto corral_source_split_5469;

  corral_source_split_5469:
    assume {:verifier.code 0} true;
    $i79 := $add.i64($i78, 544);
    call {:si_unique_call 2312} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i79);
    goto corral_source_split_5470;

  corral_source_split_5470:
    assume {:verifier.code 0} true;
    $p80 := $i2p.i64.ref($i79);
    goto corral_source_split_5471;

  corral_source_split_5471:
    assume {:verifier.code 0} true;
    $p81 := $load.ref($M.1, $p80);
    goto corral_source_split_5472;

  corral_source_split_5472:
    assume {:verifier.code 0} true;
    $p82 := $add.ref($p81, $mul.ref($i77, 2));
    goto corral_source_split_5473;

  corral_source_split_5473:
    assume {:verifier.code 0} true;
    $i83 := $load.i16($M.1, $p82);
    call {:si_unique_call 2313} {:cexpr "__cil_tmp48"} boogie_si_record_i16($i83);
    goto corral_source_split_5474;

  corral_source_split_5474:
    assume {:verifier.code 0} true;
    $i84 := $zext.i16.i32($i83);
    call {:si_unique_call 2314} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i84);
    goto corral_source_split_5475;

  corral_source_split_5475:
    assume {:verifier.code 0} true;
    $i85 := $eq.i32($i84, 65534);
    goto corral_source_split_5476;

  corral_source_split_5476:
    assume {:verifier.code 0} true;
    $i86 := $i7;
    assume {:branchcond $i85} true;
    goto $bb14, $bb16;

  $bb16:
    assume !($i85 == 1);
    goto corral_source_split_5484;

  corral_source_split_5484:
    assume {:verifier.code 0} true;
    $i87, $i88 := $i11, $i7;
    goto $bb17;

  $bb17:
    call $i89, $i90, $i91, $p92, $p93, $i94, $i95, $i96, $i97, $i87, $i88, $i101, $i102, $i103, $i104, $i105, $p106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i120, $i121, $i122, $p123, $i124, $i125, $i126 := INFTL_findfreeblock_loop_$bb17($p0, $p80, $i89, $i90, $i91, $p92, $p93, $i94, $i95, $i96, $i97, $i87, $i88, $i101, $i102, $i103, $i104, $i105, $p106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i120, $i121, $i122, $p123, $i124, $i125, $i126);
    goto $bb17_last;

  $bb21:
    assume {:verifier.code 0} true;
    $i101 := $zext.i16.i32($i88);
    call {:si_unique_call 2320} {:cexpr "__cil_tmp52"} boogie_si_record_i32($i101);
    goto corral_source_split_5496;

  corral_source_split_5496:
    assume {:verifier.code 0} true;
    $i102 := $add.i32($i101, 1);
    call {:si_unique_call 2321} {:cexpr "__cil_tmp53"} boogie_si_record_i32($i102);
    goto corral_source_split_5497;

  corral_source_split_5497:
    assume {:verifier.code 0} true;
    $i103 := $trunc.i32.i16($i102);
    call {:si_unique_call 2322} {:cexpr "pot"} boogie_si_record_i16($i103);
    goto corral_source_split_5498;

  corral_source_split_5498:
    assume {:verifier.code 0} true;
    $i104 := $p2i.ref.i64($p0);
    call {:si_unique_call 2323} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i104);
    goto corral_source_split_5499;

  corral_source_split_5499:
    assume {:verifier.code 0} true;
    $i105 := $add.i64($i104, 520);
    call {:si_unique_call 2324} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i105);
    goto corral_source_split_5500;

  corral_source_split_5500:
    assume {:verifier.code 0} true;
    $p106 := $i2p.i64.ref($i105);
    goto corral_source_split_5501;

  corral_source_split_5501:
    assume {:verifier.code 0} true;
    $i107 := $load.i16($M.1, $p106);
    call {:si_unique_call 2325} {:cexpr "__cil_tmp56"} boogie_si_record_i16($i107);
    goto corral_source_split_5502;

  corral_source_split_5502:
    assume {:verifier.code 0} true;
    $i108 := $zext.i16.i32($i107);
    call {:si_unique_call 2326} {:cexpr "__cil_tmp57"} boogie_si_record_i32($i108);
    goto corral_source_split_5503;

  corral_source_split_5503:
    assume {:verifier.code 0} true;
    $i109 := $zext.i16.i32($i103);
    call {:si_unique_call 2327} {:cexpr "__cil_tmp59"} boogie_si_record_i32($i109);
    goto corral_source_split_5504;

  corral_source_split_5504:
    assume {:verifier.code 0} true;
    $i110 := $sgt.i32($i109, $i108);
    goto corral_source_split_5505;

  corral_source_split_5505:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i110 == 1);
    assume {:verifier.code 0} true;
    $i111 := $i103;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_5509;

  corral_source_split_5509:
    assume {:verifier.code 0} true;
    $i112 := $sub.i32($i87, 1);
    call {:si_unique_call 2328} {:cexpr "silly"} boogie_si_record_i32($i112);
    goto corral_source_split_5510;

  corral_source_split_5510:
    assume {:verifier.code 0} true;
    $i113 := $eq.i32($i87, 0);
    goto corral_source_split_5511;

  corral_source_split_5511:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i113 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i120 := $zext.i16.i32($i111);
    call {:si_unique_call 2334} {:cexpr "__cil_tmp64"} boogie_si_record_i32($i120);
    goto corral_source_split_5521;

  corral_source_split_5521:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p0);
    call {:si_unique_call 2335} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i121);
    goto corral_source_split_5522;

  corral_source_split_5522:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, 524);
    call {:si_unique_call 2336} {:cexpr "__cil_tmp66"} boogie_si_record_i64($i122);
    goto corral_source_split_5523;

  corral_source_split_5523:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_5524;

  corral_source_split_5524:
    assume {:verifier.code 0} true;
    $i124 := $load.i16($M.1, $p123);
    call {:si_unique_call 2337} {:cexpr "__cil_tmp67"} boogie_si_record_i16($i124);
    goto corral_source_split_5525;

  corral_source_split_5525:
    assume {:verifier.code 0} true;
    $i125 := $zext.i16.i32($i124);
    call {:si_unique_call 2338} {:cexpr "__cil_tmp68"} boogie_si_record_i32($i125);
    goto corral_source_split_5526;

  corral_source_split_5526:
    assume {:verifier.code 0} true;
    $i126 := $ne.i32($i125, $i120);
    goto corral_source_split_5527;

  corral_source_split_5527:
    assume {:verifier.code 0} true;
    $i89, $i90 := $i111, $i112;
    assume true;
    goto $bb18, $bb28;

  $bb28:
    assume !($i126 == 1);
    goto corral_source_split_5529;

  corral_source_split_5529:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i76 := $sub.i16(0, 1);
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_5466;

  corral_source_split_5466:
    assume {:verifier.code 0} true;
    $r := $i76;
    return;

  $bb18:
    assume $i126 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5486;

  corral_source_split_5486:
    assume {:verifier.code 0} true;
    $i91 := $zext.i16.i64($i89);
    call {:si_unique_call 2317} {:cexpr "__cil_tmp43"} boogie_si_record_i64($i91);
    goto corral_source_split_5487;

  corral_source_split_5487:
    assume {:verifier.code 0} true;
    $p92 := $load.ref($M.1, $p80);
    goto corral_source_split_5488;

  corral_source_split_5488:
    assume {:verifier.code 0} true;
    $p93 := $add.ref($p92, $mul.ref($i91, 2));
    goto corral_source_split_5489;

  corral_source_split_5489:
    assume {:verifier.code 0} true;
    $i94 := $load.i16($M.1, $p93);
    call {:si_unique_call 2318} {:cexpr "__cil_tmp48"} boogie_si_record_i16($i94);
    goto corral_source_split_5490;

  corral_source_split_5490:
    assume {:verifier.code 0} true;
    $i95 := $zext.i16.i32($i94);
    call {:si_unique_call 2319} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i95);
    goto corral_source_split_5491;

  corral_source_split_5491:
    assume {:verifier.code 0} true;
    $i96 := $eq.i32($i95, 65534);
    goto corral_source_split_5492;

  corral_source_split_5492:
    assume {:verifier.code 0} true;
    $i97 := $i89;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i96 == 1);
    assume {:verifier.code 0} true;
    $i87, $i88 := $i90, $i89;
    goto $bb20_dummy;

  $bb19:
    assume $i96 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_5494;

  corral_source_split_5494:
    assume {:verifier.code 0} true;
    $i86 := $i97;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto corral_source_split_5478;

  corral_source_split_5478:
    assume {:verifier.code 0} true;
    $i98 := $p2i.ref.i64($p0);
    call {:si_unique_call 2315} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i98);
    goto corral_source_split_5479;

  corral_source_split_5479:
    assume {:verifier.code 0} true;
    $i99 := $add.i64($i98, 524);
    call {:si_unique_call 2316} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i99);
    goto corral_source_split_5480;

  corral_source_split_5480:
    assume {:verifier.code 0} true;
    $p100 := $i2p.i64.ref($i99);
    goto corral_source_split_5481;

  corral_source_split_5481:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p100, $i86);
    goto corral_source_split_5482;

  corral_source_split_5482:
    assume {:verifier.code 0} true;
    $i76 := $i86;
    goto $bb11;

  $bb25:
    assume $i113 == 1;
    goto corral_source_split_5513;

  corral_source_split_5513:
    assume {:verifier.code 0} true;
    $i114 := $p2i.ref.i64($p0);
    call {:si_unique_call 2329} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i114);
    goto corral_source_split_5514;

  corral_source_split_5514:
    assume {:verifier.code 0} true;
    $i115 := $add.i64($i114, 524);
    call {:si_unique_call 2330} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i115);
    goto corral_source_split_5515;

  corral_source_split_5515:
    assume {:verifier.code 0} true;
    $p116 := $i2p.i64.ref($i115);
    goto corral_source_split_5516;

  corral_source_split_5516:
    assume {:verifier.code 0} true;
    $i117 := $load.i16($M.1, $p116);
    call {:si_unique_call 2331} {:cexpr "__cil_tmp62"} boogie_si_record_i16($i117);
    goto corral_source_split_5517;

  corral_source_split_5517:
    assume {:verifier.code 0} true;
    $i118 := $zext.i16.i32($i117);
    call {:si_unique_call 2332} {:cexpr "__cil_tmp63"} boogie_si_record_i32($i118);
    goto corral_source_split_5518;

  corral_source_split_5518:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2333} vslice_dummy_var_121 := printk.ref.i32.i32(.str.48, 0, $i118);
    goto corral_source_split_5519;

  corral_source_split_5519:
    assume {:verifier.code 0} true;
    $i76 := $sub.i16(0, 1);
    goto $bb11;

  $bb22:
    assume $i110 == 1;
    goto corral_source_split_5507;

  corral_source_split_5507:
    assume {:verifier.code 0} true;
    $i111 := 0;
    goto $bb24;

  $bb14:
    assume {:verifier.code 0} true;
    assume $i85 == 1;
    goto $bb15;

  $bb4:
    assume $i38 == 1;
    goto corral_source_split_5417;

  corral_source_split_5417:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p0);
    call {:si_unique_call 2290} {:cexpr "__cil_tmp25"} boogie_si_record_i64($i39);
    goto corral_source_split_5418;

  corral_source_split_5418:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 522);
    call {:si_unique_call 2291} {:cexpr "__cil_tmp26"} boogie_si_record_i64($i40);
    goto corral_source_split_5419;

  corral_source_split_5419:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i40);
    goto corral_source_split_5420;

  corral_source_split_5420:
    assume {:verifier.code 0} true;
    $i42 := $load.i16($M.1, $p41);
    call {:si_unique_call 2292} {:cexpr "__cil_tmp27"} boogie_si_record_i16($i42);
    goto corral_source_split_5421;

  corral_source_split_5421:
    assume {:verifier.code 0} true;
    $i43 := $zext.i16.i32($i42);
    call {:si_unique_call 2293} {:cexpr "__cil_tmp28"} boogie_si_record_i32($i43);
    goto corral_source_split_5422;

  corral_source_split_5422:
    assume {:verifier.code 0} true;
    $i44 := $ule.i32($i43, 1);
    goto corral_source_split_5423;

  corral_source_split_5423:
    assume {:verifier.code 0} true;
    assume {:branchcond $i44} true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i44 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb6:
    assume $i44 == 1;
    goto corral_source_split_5425;

  corral_source_split_5425:
    assume {:verifier.code 0} true;
    $p45 := $bitcast.ref.ref($p3);
    goto corral_source_split_5426;

  corral_source_split_5426:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p45, .str);
    goto corral_source_split_5427;

  corral_source_split_5427:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p3);
    goto corral_source_split_5428;

  corral_source_split_5428:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, 8);
    call {:si_unique_call 2294} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i47);
    goto corral_source_split_5429;

  corral_source_split_5429:
    assume {:verifier.code 0} true;
    $p48 := $i2p.i64.ref($i47);
    goto corral_source_split_5430;

  corral_source_split_5430:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p48, .str.45);
    goto corral_source_split_5431;

  corral_source_split_5431:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p3);
    goto corral_source_split_5432;

  corral_source_split_5432:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 16);
    call {:si_unique_call 2295} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i50);
    goto corral_source_split_5433;

  corral_source_split_5433:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_5434;

  corral_source_split_5434:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p51, .str.31);
    goto corral_source_split_5435;

  corral_source_split_5435:
    assume {:verifier.code 0} true;
    $i52 := $p2i.ref.i64($p3);
    goto corral_source_split_5436;

  corral_source_split_5436:
    assume {:verifier.code 0} true;
    $i53 := $add.i64($i52, 24);
    call {:si_unique_call 2296} {:cexpr "__cil_tmp32"} boogie_si_record_i64($i53);
    goto corral_source_split_5437;

  corral_source_split_5437:
    assume {:verifier.code 0} true;
    $p54 := $i2p.i64.ref($i53);
    goto corral_source_split_5438;

  corral_source_split_5438:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p54, .str.47);
    goto corral_source_split_5439;

  corral_source_split_5439:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p3);
    goto corral_source_split_5440;

  corral_source_split_5440:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 32);
    call {:si_unique_call 2297} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i56);
    goto corral_source_split_5441;

  corral_source_split_5441:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_5442;

  corral_source_split_5442:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p57, 240);
    goto corral_source_split_5443;

  corral_source_split_5443:
    assume {:verifier.code 0} true;
    $i58 := $p2i.ref.i64($p3);
    goto corral_source_split_5444;

  corral_source_split_5444:
    assume {:verifier.code 0} true;
    $i59 := $add.i64($i58, 35);
    call {:si_unique_call 2298} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i59);
    goto corral_source_split_5445;

  corral_source_split_5445:
    assume {:verifier.code 0} true;
    $p60 := $i2p.i64.ref($i59);
    goto corral_source_split_5446;

  corral_source_split_5446:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p60, 0);
    goto corral_source_split_5447;

  corral_source_split_5447:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p3);
    goto corral_source_split_5448;

  corral_source_split_5448:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 35);
    call {:si_unique_call 2299} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i62);
    goto corral_source_split_5449;

  corral_source_split_5449:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_5450;

  corral_source_split_5450:
    assume {:verifier.code 0} true;
    $i64 := $load.i8($M.1, $p63);
    call {:si_unique_call 2300} {:cexpr "__cil_tmp36"} boogie_si_record_i8($i64);
    goto corral_source_split_5451;

  corral_source_split_5451:
    assume {:verifier.code 0} true;
    $i65 := $zext.i8.i64($i64);
    call {:si_unique_call 2301} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i65);
    goto corral_source_split_5452;

  corral_source_split_5452:
    assume {:verifier.code 0} true;
    $i66 := $and.i64($i65, 1);
    call {:si_unique_call 2302} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i66);
    goto corral_source_split_5453;

  corral_source_split_5453:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2303} $i67 := __builtinx_expect.i64.i64($i66, 0);
    goto corral_source_split_5454;

  corral_source_split_5454:
    assume {:verifier.code 0} true;
    $i68 := $sext.i32.i64($i67);
    call {:si_unique_call 2304} {:cexpr "tmp___0"} boogie_si_record_i64($i68);
    goto corral_source_split_5455;

  corral_source_split_5455:
    assume {:verifier.code 0} true;
    $i69 := $ne.i64($i68, 0);
    goto corral_source_split_5456;

  corral_source_split_5456:
    assume {:verifier.code 0} true;
    assume {:branchcond $i69} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i69 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i76 := $sub.i16(0, 1);
    goto $bb11;

  $bb8:
    assume $i69 == 1;
    goto corral_source_split_5458;

  corral_source_split_5458:
    assume {:verifier.code 0} true;
    $i70 := $p2i.ref.i64($p0);
    call {:si_unique_call 2305} {:cexpr "__cil_tmp39"} boogie_si_record_i64($i70);
    goto corral_source_split_5459;

  corral_source_split_5459:
    assume {:verifier.code 0} true;
    $i71 := $add.i64($i70, 522);
    call {:si_unique_call 2306} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i71);
    goto corral_source_split_5460;

  corral_source_split_5460:
    assume {:verifier.code 0} true;
    $p72 := $i2p.i64.ref($i71);
    goto corral_source_split_5461;

  corral_source_split_5461:
    assume {:verifier.code 0} true;
    $i73 := $load.i16($M.1, $p72);
    call {:si_unique_call 2307} {:cexpr "__cil_tmp41"} boogie_si_record_i16($i73);
    goto corral_source_split_5462;

  corral_source_split_5462:
    assume {:verifier.code 0} true;
    $i74 := $zext.i16.i32($i73);
    call {:si_unique_call 2308} {:cexpr "__cil_tmp42"} boogie_si_record_i32($i74);
    goto corral_source_split_5463;

  corral_source_split_5463:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2309} vslice_dummy_var_120 := __dynamic_pr_debug.ref.ref.i32($p3, .str.47, $i74);
    goto corral_source_split_5464;

  corral_source_split_5464:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb1:
    assume $i36 == 1;
    goto corral_source_split_5412;

  corral_source_split_5412:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2289} vslice_dummy_var_119 := __dynamic_pr_debug.ref.ref.ref.i32($p2, .str.46, $p0, $i1);
    goto corral_source_split_5413;

  corral_source_split_5413:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb20_dummy:
    assume false;
    return;

  $bb17_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb21;
}



const INFTL_makefreeblock: ref;

axiom INFTL_makefreeblock == $sub.ref(0, 168633);

procedure INFTL_makefreeblock($p0: ref, $i1: i32) returns ($r: i16);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.9, $M.10, $M.0, $M.2, $CurrAddr, $M.7, $M.8;



implementation INFTL_makefreeblock($p0: ref, $i1: i32) returns ($r: i16)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i64;
  var $i24: i64;
  var $i25: i32;
  var $i26: i64;
  var $i27: i1;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i16;
  var $i46: i32;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i16;
  var $i51: i32;
  var $i52: i1;
  var $i56: i32;
  var $i57: i32;
  var $i58: i16;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i16;
  var $i66: i32;
  var $i67: i1;
  var $i68: i16;
  var $i69: i32;
  var $i70: i32;
  var $i73: i32;
  var $i74: i16;
  var $i75: i32;
  var $i76: i1;
  var $i54: i16;
  var $i55: i16;
  var $i77: i16;
  var $i53: i16;
  var $i72: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i1;
  var $i81: i16;
  var $i82: i16;
  var $i83: i32;
  var $i84: i32;
  var $i85: i16;
  var $i86: i32;
  var $i87: i32;
  var $i88: i1;
  var $i36: i16;
  var $i37: i16;
  var $i38: i16;
  var $i89: i16;
  var $i90: i16;
  var $i34: i16;
  var $i35: i16;
  var $i91: i32;
  var $i92: i1;
  var $i95: i32;
  var $i96: i16;
  var $i94: i16;
  var vslice_dummy_var_122: i32;
  var vslice_dummy_var_123: i32;
  var vslice_dummy_var_124: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 2339} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 2340} {:cexpr "INFTL_makefreeblock:arg:pendingblock"} boogie_si_record_i32($i1);
    goto corral_source_split_5531;

  corral_source_split_5531:
    assume {:verifier.code 0} true;
    $p3 := $bitcast.ref.ref($p2);
    goto corral_source_split_5532;

  corral_source_split_5532:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p3, .str);
    goto corral_source_split_5533;

  corral_source_split_5533:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p2);
    goto corral_source_split_5534;

  corral_source_split_5534:
    assume {:verifier.code 0} true;
    $i5 := $add.i64($i4, 8);
    call {:si_unique_call 2341} {:cexpr "__cil_tmp12"} boogie_si_record_i64($i5);
    goto corral_source_split_5535;

  corral_source_split_5535:
    assume {:verifier.code 0} true;
    $p6 := $i2p.i64.ref($i5);
    goto corral_source_split_5536;

  corral_source_split_5536:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p6, .str.49);
    goto corral_source_split_5537;

  corral_source_split_5537:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p2);
    goto corral_source_split_5538;

  corral_source_split_5538:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 16);
    call {:si_unique_call 2342} {:cexpr "__cil_tmp13"} boogie_si_record_i64($i8);
    goto corral_source_split_5539;

  corral_source_split_5539:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_5540;

  corral_source_split_5540:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p9, .str.31);
    goto corral_source_split_5541;

  corral_source_split_5541:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p2);
    goto corral_source_split_5542;

  corral_source_split_5542:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 24);
    call {:si_unique_call 2343} {:cexpr "__cil_tmp14"} boogie_si_record_i64($i11);
    goto corral_source_split_5543;

  corral_source_split_5543:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_5544;

  corral_source_split_5544:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p12, .str.50);
    goto corral_source_split_5545;

  corral_source_split_5545:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p2);
    goto corral_source_split_5546;

  corral_source_split_5546:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 32);
    call {:si_unique_call 2344} {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
    goto corral_source_split_5547;

  corral_source_split_5547:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_5548;

  corral_source_split_5548:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p15, 438);
    goto corral_source_split_5549;

  corral_source_split_5549:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p2);
    goto corral_source_split_5550;

  corral_source_split_5550:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 35);
    call {:si_unique_call 2345} {:cexpr "__cil_tmp16"} boogie_si_record_i64($i17);
    goto corral_source_split_5551;

  corral_source_split_5551:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_5552;

  corral_source_split_5552:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p18, 0);
    goto corral_source_split_5553;

  corral_source_split_5553:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p2);
    goto corral_source_split_5554;

  corral_source_split_5554:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 35);
    call {:si_unique_call 2346} {:cexpr "__cil_tmp17"} boogie_si_record_i64($i20);
    goto corral_source_split_5555;

  corral_source_split_5555:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_5556;

  corral_source_split_5556:
    assume {:verifier.code 0} true;
    $i22 := $load.i8($M.1, $p21);
    call {:si_unique_call 2347} {:cexpr "__cil_tmp18"} boogie_si_record_i8($i22);
    goto corral_source_split_5557;

  corral_source_split_5557:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i64($i22);
    call {:si_unique_call 2348} {:cexpr "__cil_tmp19"} boogie_si_record_i64($i23);
    goto corral_source_split_5558;

  corral_source_split_5558:
    assume {:verifier.code 0} true;
    $i24 := $and.i64($i23, 1);
    call {:si_unique_call 2349} {:cexpr "__cil_tmp20"} boogie_si_record_i64($i24);
    goto corral_source_split_5559;

  corral_source_split_5559:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2350} $i25 := __builtinx_expect.i64.i64($i24, 0);
    goto corral_source_split_5560;

  corral_source_split_5560:
    assume {:verifier.code 0} true;
    $i26 := $sext.i32.i64($i25);
    call {:si_unique_call 2351} {:cexpr "tmp"} boogie_si_record_i64($i26);
    goto corral_source_split_5561;

  corral_source_split_5561:
    assume {:verifier.code 0} true;
    $i27 := $ne.i64($i26, 0);
    goto corral_source_split_5562;

  corral_source_split_5562:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i27 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p0);
    call {:si_unique_call 2353} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i29);
    goto corral_source_split_5567;

  corral_source_split_5567:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 560);
    call {:si_unique_call 2354} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i30);
    goto corral_source_split_5568;

  corral_source_split_5568:
    assume {:verifier.code 0} true;
    $p31 := $i2p.i64.ref($i30);
    goto corral_source_split_5569;

  corral_source_split_5569:
    assume {:verifier.code 0} true;
    $i32 := $load.i32($M.1, $p31);
    call {:si_unique_call 2355} {:cexpr "__cil_tmp47"} boogie_si_record_i32($i32);
    goto corral_source_split_5570;

  corral_source_split_5570:
    assume {:verifier.code 0} true;
    $i33 := $ult.i32(0, $i32);
    goto corral_source_split_5571;

  corral_source_split_5571:
    assume {:verifier.code 0} true;
    $i34, $i35 := 0, 0;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    assume !($i33 == 1);
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5575;

  corral_source_split_5575:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i91 := $zext.i16.i32($i34);
    call {:si_unique_call 2386} {:cexpr "__cil_tmp49"} boogie_si_record_i32($i91);
    goto corral_source_split_5642;

  corral_source_split_5642:
    assume {:verifier.code 0} true;
    $i92 := $ule.i32($i91, 1);
    goto corral_source_split_5643;

  corral_source_split_5643:
    assume {:verifier.code 0} true;
    assume {:branchcond $i92} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i92 == 1);
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i95 := $zext.i16.i32($i35);
    call {:si_unique_call 2388} {:cexpr "__cil_tmp50"} boogie_si_record_i32($i95);
    goto corral_source_split_5650;

  corral_source_split_5650:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2389} $i96 := INFTL_foldchain($p0, $i95, $i1);
    call {:si_unique_call 2390} {:cexpr "tmp___0"} boogie_si_record_i16($i96);
    goto corral_source_split_5651;

  corral_source_split_5651:
    assume {:verifier.code 0} true;
    $i94 := $i96;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    goto corral_source_split_5648;

  corral_source_split_5648:
    assume {:verifier.code 0} true;
    $r := $i94;
    return;

  $bb26:
    assume $i92 == 1;
    goto corral_source_split_5645;

  corral_source_split_5645:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2387} vslice_dummy_var_124 := printk.ref(.str.52);
    goto corral_source_split_5646;

  corral_source_split_5646:
    assume {:verifier.code 0} true;
    $i94 := $sub.i16(0, 1);
    goto $bb28;

  $bb4:
    assume $i33 == 1;
    goto corral_source_split_5573;

  corral_source_split_5573:
    assume {:verifier.code 0} true;
    $i36, $i37, $i38 := 0, 0, 0;
    goto $bb7;

  $bb7:
    call $i39, $i40, $i41, $p42, $p43, $p44, $i45, $i46, $i47, $i48, $p49, $i50, $i51, $i52, $i56, $i57, $i58, $i59, $i60, $i61, $p62, $p63, $p64, $i65, $i66, $i67, $i68, $i69, $i70, $i73, $i74, $i75, $i76, $i54, $i55, $i77, $i53, $i72, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i36, $i37, $i38, $i89, $i90, vslice_dummy_var_123 := INFTL_makefreeblock_loop_$bb7($p0, $p31, $i39, $i40, $i41, $p42, $p43, $p44, $i45, $i46, $i47, $i48, $p49, $i50, $i51, $i52, $i56, $i57, $i58, $i59, $i60, $i61, $p62, $p63, $p64, $i65, $i66, $i67, $i68, $i69, $i70, $i73, $i74, $i75, $i76, $i54, $i55, $i77, $i53, $i72, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i36, $i37, $i38, $i89, $i90, vslice_dummy_var_123);
    goto $bb7_last;

  corral_source_split_5577:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i39 := $zext.i16.i64($i36);
    call {:si_unique_call 2356} {:cexpr "__cil_tmp21"} boogie_si_record_i64($i39);
    goto corral_source_split_5579;

  corral_source_split_5579:
    assume {:verifier.code 0} true;
    $i40 := $p2i.ref.i64($p0);
    call {:si_unique_call 2357} {:cexpr "__cil_tmp22"} boogie_si_record_i64($i40);
    goto corral_source_split_5580;

  corral_source_split_5580:
    assume {:verifier.code 0} true;
    $i41 := $add.i64($i40, 552);
    call {:si_unique_call 2358} {:cexpr "__cil_tmp23"} boogie_si_record_i64($i41);
    goto corral_source_split_5581;

  corral_source_split_5581:
    assume {:verifier.code 0} true;
    $p42 := $i2p.i64.ref($i41);
    goto corral_source_split_5582;

  corral_source_split_5582:
    assume {:verifier.code 0} true;
    $p43 := $load.ref($M.1, $p42);
    goto corral_source_split_5583;

  corral_source_split_5583:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($p43, $mul.ref($i39, 2));
    goto corral_source_split_5584;

  corral_source_split_5584:
    assume {:verifier.code 0} true;
    $i45 := $load.i16($M.1, $p44);
    call {:si_unique_call 2359} {:cexpr "EUN"} boogie_si_record_i16($i45);
    goto corral_source_split_5585;

  corral_source_split_5585:
    assume {:verifier.code 0} true;
    $i46 := $zext.i16.i32($i45);
    call {:si_unique_call 2360} {:cexpr "__cil_tmp36"} boogie_si_record_i32($i46);
    goto corral_source_split_5586;

  corral_source_split_5586:
    assume {:verifier.code 0} true;
    $i47 := $p2i.ref.i64($p0);
    call {:si_unique_call 2361} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i47);
    goto corral_source_split_5587;

  corral_source_split_5587:
    assume {:verifier.code 0} true;
    $i48 := $add.i64($i47, 520);
    call {:si_unique_call 2362} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i48);
    goto corral_source_split_5588;

  corral_source_split_5588:
    assume {:verifier.code 0} true;
    $p49 := $i2p.i64.ref($i48);
    goto corral_source_split_5589;

  corral_source_split_5589:
    assume {:verifier.code 0} true;
    $i50 := $load.i16($M.1, $p49);
    call {:si_unique_call 2363} {:cexpr "__cil_tmp39"} boogie_si_record_i16($i50);
    goto corral_source_split_5590;

  corral_source_split_5590:
    assume {:verifier.code 0} true;
    $i51 := $zext.i16.i32($i50);
    call {:si_unique_call 2364} {:cexpr "__cil_tmp40"} boogie_si_record_i32($i51);
    goto corral_source_split_5591;

  corral_source_split_5591:
    assume {:verifier.code 0} true;
    $i52 := $sge.i32($i51, $i46);
    goto corral_source_split_5592;

  corral_source_split_5592:
    assume {:verifier.code 0} true;
    $i53 := 0;
    assume true;
    goto $bb9, $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    assume !($i52 == 1);
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_5596;

  corral_source_split_5596:
    assume {:verifier.code 0} true;
    $i72 := $i53;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto corral_source_split_5618;

  corral_source_split_5618:
    assume {:verifier.code 0} true;
    $i78 := $zext.i16.i32($i38);
    call {:si_unique_call 2376} {:cexpr "__cil_tmp41"} boogie_si_record_i32($i78);
    goto corral_source_split_5619;

  corral_source_split_5619:
    assume {:verifier.code 0} true;
    $i79 := $zext.i16.i32($i72);
    call {:si_unique_call 2377} {:cexpr "__cil_tmp42"} boogie_si_record_i32($i79);
    goto corral_source_split_5620;

  corral_source_split_5620:
    assume {:verifier.code 0} true;
    $i80 := $sgt.i32($i79, $i78);
    goto corral_source_split_5621;

  corral_source_split_5621:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i80 == 1);
    assume {:verifier.code 0} true;
    $i81, $i82 := $i38, $i37;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5632;

  corral_source_split_5632:
    assume {:verifier.code 0} true;
    $i83 := $zext.i16.i32($i36);
    call {:si_unique_call 2381} {:cexpr "__cil_tmp43"} boogie_si_record_i32($i83);
    goto corral_source_split_5633;

  corral_source_split_5633:
    assume {:verifier.code 0} true;
    $i84 := $add.i32($i83, 1);
    call {:si_unique_call 2382} {:cexpr "__cil_tmp44"} boogie_si_record_i32($i84);
    goto corral_source_split_5634;

  corral_source_split_5634:
    assume {:verifier.code 0} true;
    $i85 := $trunc.i32.i16($i84);
    call {:si_unique_call 2383} {:cexpr "chain"} boogie_si_record_i16($i85);
    goto corral_source_split_5635;

  corral_source_split_5635:
    assume {:verifier.code 0} true;
    $i86 := $load.i32($M.1, $p31);
    call {:si_unique_call 2384} {:cexpr "__cil_tmp47"} boogie_si_record_i32($i86);
    goto corral_source_split_5636;

  corral_source_split_5636:
    assume {:verifier.code 0} true;
    $i87 := $zext.i16.i32($i85);
    call {:si_unique_call 2385} {:cexpr "__cil_tmp48"} boogie_si_record_i32($i87);
    goto corral_source_split_5637;

  corral_source_split_5637:
    assume {:verifier.code 0} true;
    $i88 := $ult.i32($i87, $i86);
    goto corral_source_split_5638;

  corral_source_split_5638:
    assume {:verifier.code 0} true;
    $i89, $i90 := $i81, $i82;
    assume true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i88 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5640;

  corral_source_split_5640:
    assume {:verifier.code 0} true;
    $i34, $i35 := $i89, $i90;
    goto $bb6;

  $bb23:
    assume $i88 == 1;
    assume {:verifier.code 0} true;
    $i36, $i37, $i38 := $i85, $i82, $i81;
    goto $bb23_dummy;

  $bb20:
    assume $i80 == 1;
    goto corral_source_split_5630;

  corral_source_split_5630:
    assume {:verifier.code 0} true;
    $i81, $i82 := $i72, $i36;
    goto $bb22;

  $bb9:
    assume $i52 == 1;
    goto corral_source_split_5594;

  corral_source_split_5594:
    assume {:verifier.code 0} true;
    $i54, $i55 := $i45, 0;
    goto $bb12;

  $bb12:
    call $i56, $i57, $i58, $i59, $i60, $i61, $p62, $p63, $p64, $i65, $i66, $i67, $i68, $i73, $i74, $i75, $i76, $i54, $i55, $i77 := INFTL_makefreeblock_loop_$bb12($p0, $p49, $i56, $i57, $i58, $i59, $i60, $i61, $p62, $p63, $p64, $i65, $i66, $i67, $i68, $i73, $i74, $i75, $i76, $i54, $i55, $i77);
    goto $bb12_last;

  corral_source_split_5598:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i56 := $zext.i16.i32($i55);
    call {:si_unique_call 2365} {:cexpr "__cil_tmp26"} boogie_si_record_i32($i56);
    goto corral_source_split_5600;

  corral_source_split_5600:
    assume {:verifier.code 0} true;
    $i57 := $add.i32($i56, 1);
    call {:si_unique_call 2366} {:cexpr "__cil_tmp27"} boogie_si_record_i32($i57);
    goto corral_source_split_5601;

  corral_source_split_5601:
    assume {:verifier.code 0} true;
    $i58 := $trunc.i32.i16($i57);
    call {:si_unique_call 2367} {:cexpr "thislen"} boogie_si_record_i16($i58);
    goto corral_source_split_5602;

  corral_source_split_5602:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i64($i54);
    call {:si_unique_call 2368} {:cexpr "__cil_tmp28"} boogie_si_record_i64($i59);
    goto corral_source_split_5603;

  corral_source_split_5603:
    assume {:verifier.code 0} true;
    $i60 := $p2i.ref.i64($p0);
    call {:si_unique_call 2369} {:cexpr "__cil_tmp29"} boogie_si_record_i64($i60);
    goto corral_source_split_5604;

  corral_source_split_5604:
    assume {:verifier.code 0} true;
    $i61 := $add.i64($i60, 544);
    call {:si_unique_call 2370} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i61);
    goto corral_source_split_5605;

  corral_source_split_5605:
    assume {:verifier.code 0} true;
    $p62 := $i2p.i64.ref($i61);
    goto corral_source_split_5606;

  corral_source_split_5606:
    assume {:verifier.code 0} true;
    $p63 := $load.ref($M.1, $p62);
    goto corral_source_split_5607;

  corral_source_split_5607:
    assume {:verifier.code 0} true;
    $p64 := $add.ref($p63, $mul.ref($i59, 2));
    goto corral_source_split_5608;

  corral_source_split_5608:
    assume {:verifier.code 0} true;
    $i65 := $load.i16($M.1, $p64);
    call {:si_unique_call 2371} {:cexpr "EUN"} boogie_si_record_i16($i65);
    goto corral_source_split_5609;

  corral_source_split_5609:
    assume {:verifier.code 0} true;
    $i66 := $zext.i16.i32($i58);
    call {:si_unique_call 2372} {:cexpr "__cil_tmp33"} boogie_si_record_i32($i66);
    goto corral_source_split_5610;

  corral_source_split_5610:
    assume {:verifier.code 0} true;
    $i67 := $ugt.i32($i66, 65280);
    goto corral_source_split_5611;

  corral_source_split_5611:
    assume {:verifier.code 0} true;
    $i68 := $i65;
    assume true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i67 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i73 := $zext.i16.i32($i65);
    call {:si_unique_call 2378} {:cexpr "__cil_tmp36"} boogie_si_record_i32($i73);
    goto corral_source_split_5623;

  corral_source_split_5623:
    assume {:verifier.code 0} true;
    $i74 := $load.i16($M.1, $p49);
    call {:si_unique_call 2379} {:cexpr "__cil_tmp39"} boogie_si_record_i16($i74);
    goto corral_source_split_5624;

  corral_source_split_5624:
    assume {:verifier.code 0} true;
    $i75 := $zext.i16.i32($i74);
    call {:si_unique_call 2380} {:cexpr "__cil_tmp40"} boogie_si_record_i32($i75);
    goto corral_source_split_5625;

  corral_source_split_5625:
    assume {:verifier.code 0} true;
    $i76 := $sge.i32($i75, $i73);
    goto corral_source_split_5626;

  corral_source_split_5626:
    assume {:verifier.code 0} true;
    $i77 := $i58;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i76 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_5628;

  corral_source_split_5628:
    assume {:verifier.code 0} true;
    $i53 := $i77;
    goto $bb11;

  $bb18:
    assume $i76 == 1;
    assume {:verifier.code 0} true;
    $i54, $i55 := $i65, $i58;
    goto $bb18_dummy;

  $bb14:
    assume $i67 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_5613;

  corral_source_split_5613:
    assume {:verifier.code 0} true;
    $i69 := $zext.i16.i32($i36);
    call {:si_unique_call 2373} {:cexpr "__cil_tmp34"} boogie_si_record_i32($i69);
    goto corral_source_split_5614;

  corral_source_split_5614:
    assume {:verifier.code 0} true;
    $i70 := $zext.i16.i32($i68);
    call {:si_unique_call 2374} {:cexpr "__cil_tmp35"} boogie_si_record_i32($i70);
    goto corral_source_split_5615;

  corral_source_split_5615:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2375} vslice_dummy_var_123 := printk.ref.i32.i32(.str.51, $i69, $i70);
    goto corral_source_split_5616;

  corral_source_split_5616:
    assume {:verifier.code 0} true;
    $i72 := 0;
    goto $bb16;

  $bb1:
    assume $i27 == 1;
    goto corral_source_split_5564;

  corral_source_split_5564:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2352} vslice_dummy_var_122 := __dynamic_pr_debug.ref.ref.ref.i32($p2, .str.50, $p0, $i1);
    goto corral_source_split_5565;

  corral_source_split_5565:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb18_dummy:
    assume false;
    return;

  $bb12_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5598;

  $bb23_dummy:
    assume false;
    return;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5577;
}



const nrbits: ref;

axiom nrbits == $sub.ref(0, 169665);

procedure nrbits($i0: i32, $i1: i32) returns ($r: i32);
  free requires assertsPassed;



implementation nrbits($i0: i32, $i1: i32) returns ($r: i32)
{
  var $i2: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i1;
  var $i4: i32;
  var $i5: i32;
  var $i13: i32;
  var $i3: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2391} {:cexpr "nrbits:arg:val"} boogie_si_record_i32($i0);
    call {:si_unique_call 2392} {:cexpr "nrbits:arg:bitcount"} boogie_si_record_i32($i1);
    goto corral_source_split_5653;

  corral_source_split_5653:
    assume {:verifier.code 0} true;
    $i2 := $slt.i32(0, $i1);
    goto corral_source_split_5654;

  corral_source_split_5654:
    assume {:verifier.code 0} true;
    $i3 := 0;
    assume {:branchcond $i2} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i2 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_5658;

  corral_source_split_5658:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $r := $i3;
    return;

  $bb1:
    assume $i2 == 1;
    goto corral_source_split_5656;

  corral_source_split_5656:
    assume {:verifier.code 0} true;
    $i4, $i5 := 0, 0;
    goto $bb4;

  $bb4:
    call $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i4, $i5, $i13 := nrbits_loop_$bb4($i0, $i1, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i4, $i5, $i13);
    goto $bb4_last;

  corral_source_split_5660:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i6 := $shl.i32(1, $i5);
    call {:si_unique_call 2393} {:cexpr "__cil_tmp5"} boogie_si_record_i32($i6);
    goto corral_source_split_5662;

  corral_source_split_5662:
    assume {:verifier.code 0} true;
    $i7 := $and.i32($i6, $i0);
    call {:si_unique_call 2394} {:cexpr "__cil_tmp7"} boogie_si_record_i32($i7);
    goto corral_source_split_5663;

  corral_source_split_5663:
    assume {:verifier.code 0} true;
    $i8 := $ne.i32($i7, 0);
    goto corral_source_split_5664;

  corral_source_split_5664:
    assume {:verifier.code 0} true;
    $i9 := $zext.i1.i32($i8);
    call {:si_unique_call 2395} {:cexpr "__cil_tmp8"} boogie_si_record_i32($i9);
    goto corral_source_split_5665;

  corral_source_split_5665:
    assume {:verifier.code 0} true;
    $i10 := $add.i32($i9, $i4);
    call {:si_unique_call 2396} {:cexpr "total"} boogie_si_record_i32($i10);
    goto corral_source_split_5666;

  corral_source_split_5666:
    assume {:verifier.code 0} true;
    $i11 := $add.i32($i5, 1);
    call {:si_unique_call 2397} {:cexpr "i"} boogie_si_record_i32($i11);
    goto corral_source_split_5667;

  corral_source_split_5667:
    assume {:verifier.code 0} true;
    $i12 := $slt.i32($i11, $i1);
    goto corral_source_split_5668;

  corral_source_split_5668:
    assume {:verifier.code 0} true;
    $i13 := $i10;
    assume true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i12 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_5670;

  corral_source_split_5670:
    assume {:verifier.code 0} true;
    $i3 := $i13;
    goto $bb3;

  $bb6:
    assume $i12 == 1;
    assume {:verifier.code 0} true;
    $i4, $i5 := $i10, $i11;
    goto $bb6_dummy;

  $bb6_dummy:
    assume false;
    return;

  $bb4_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5660;
}



const INFTL_foldchain: ref;

axiom INFTL_foldchain == $sub.ref(0, 170697);

procedure INFTL_foldchain($p0: ref, $i1: i32, $i2: i32) returns ($r: i16);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.9, $M.10, $M.0, $M.2, $CurrAddr, $M.7, $M.8;



implementation INFTL_foldchain($p0: ref, $i1: i32, $i2: i32) returns ($r: i16)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $i35: i8;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i64;
  var $i40: i1;
  var $p42: ref;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i16;
  var $i51: i32;
  var $i52: i1;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $i59: i1;
  var $i62: i64;
  var $i63: i64;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $i67: i1;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i16;
  var $i76: i32;
  var $i77: i1;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i8;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i64;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $i103: i8;
  var $i104: i32;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $i110: i32;
  var $i99: i32;
  var $i111: i1;
  var $i112: i1;
  var $i113: i1;
  var $i114: i1;
  var $i115: i64;
  var $i116: i64;
  var $p117: ref;
  var $i118: i64;
  var $i119: i64;
  var $i120: i16;
  var $p121: ref;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i64;
  var $i126: i64;
  var $p127: ref;
  var $i78: i32;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $i132: i1;
  var $i68: i32;
  var $i133: i32;
  var $i134: i1;
  var $i136: i64;
  var $i137: i64;
  var $i138: i64;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i16;
  var $i143: i32;
  var $i144: i32;
  var $i145: i1;
  var $i60: i32;
  var $i61: i32;
  var $p146: ref;
  var $i147: i64;
  var $i148: i64;
  var $p149: ref;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $i156: i64;
  var $i157: i64;
  var $p158: ref;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i64;
  var $i163: i64;
  var $p164: ref;
  var $i165: i8;
  var $i166: i64;
  var $i167: i64;
  var $i168: i32;
  var $i169: i64;
  var $i170: i1;
  var $i172: i64;
  var $i173: i64;
  var $p174: ref;
  var $i175: i32;
  var $i176: i32;
  var $i177: i1;
  var $i179: i64;
  var $i180: i64;
  var $p181: ref;
  var $i182: i64;
  var $i183: i64;
  var $p184: ref;
  var $i185: i16;
  var $i186: i32;
  var $i187: i1;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i1;
  var $i197: i64;
  var $i198: i64;
  var $p199: ref;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $i203: i16;
  var $i204: i32;
  var $i205: i1;
  var $i206: i32;
  var $i207: i64;
  var $i208: i64;
  var $p209: ref;
  var $i210: i64;
  var $i211: i64;
  var $p212: ref;
  var $i213: i16;
  var $i214: i32;
  var $i215: i64;
  var $i216: i64;
  var $p217: ref;
  var $i218: i32;
  var $i219: i32;
  var $i220: i32;
  var $i221: i64;
  var $p222: ref;
  var $i223: i32;
  var $i224: i1;
  var $i225: i32;
  var $i226: i1;
  var $i227: i32;
  var $i228: i64;
  var $i229: i64;
  var $p230: ref;
  var $i231: i64;
  var $i232: i64;
  var $p233: ref;
  var $i234: i16;
  var $i235: i32;
  var $i236: i64;
  var $i237: i64;
  var $p238: ref;
  var $i239: i32;
  var $i240: i32;
  var $i241: i32;
  var $i242: i64;
  var $p243: ref;
  var $i244: i32;
  var $i245: i1;
  var $p246: ref;
  var $i247: i64;
  var $i248: i64;
  var $p249: ref;
  var $i250: i64;
  var $i251: i64;
  var $p252: ref;
  var $i253: i64;
  var $i254: i64;
  var $p255: ref;
  var $i256: i64;
  var $i257: i64;
  var $p258: ref;
  var $i259: i64;
  var $i260: i64;
  var $p261: ref;
  var $i262: i64;
  var $i263: i64;
  var $p264: ref;
  var $i265: i8;
  var $i266: i64;
  var $i267: i64;
  var $i268: i32;
  var $i269: i64;
  var $i270: i1;
  var $p272: ref;
  var $i273: i64;
  var $i274: i64;
  var $p275: ref;
  var $i276: i64;
  var $i277: i64;
  var $i278: i64;
  var $i279: i64;
  var $p280: ref;
  var $i281: i8;
  var $p282: ref;
  var $i283: i64;
  var $i284: i64;
  var $p285: ref;
  var $p286: ref;
  var $i287: i32;
  var $i288: i64;
  var $i289: i64;
  var $p290: ref;
  var $i291: i32;
  var $i292: i32;
  var $i293: i32;
  var $i294: i64;
  var $p295: ref;
  var $p296: ref;
  var $i188: i32;
  var $i298: i32;
  var $i299: i32;
  var $i300: i32;
  var $i301: i1;
  var $i178: i32;
  var $p302: ref;
  var $i303: i64;
  var $i304: i64;
  var $p305: ref;
  var $i306: i64;
  var $i307: i64;
  var $p308: ref;
  var $i309: i64;
  var $i310: i64;
  var $p311: ref;
  var $i312: i64;
  var $i313: i64;
  var $p314: ref;
  var $i315: i64;
  var $i316: i64;
  var $p317: ref;
  var $i318: i64;
  var $i319: i64;
  var $p320: ref;
  var $i321: i8;
  var $i322: i64;
  var $i323: i64;
  var $i324: i32;
  var $i325: i64;
  var $i326: i1;
  var $i328: i64;
  var $i329: i64;
  var $i330: i64;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $i334: i16;
  var $i335: i32;
  var $i336: i64;
  var $i337: i64;
  var $i338: i64;
  var $p339: ref;
  var $p340: ref;
  var $p341: ref;
  var $i342: i16;
  var $i343: i32;
  var $i344: i1;
  var $i348: i64;
  var $i349: i64;
  var $i350: i64;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $i354: i16;
  var $i355: i32;
  var $i356: i64;
  var $p357: ref;
  var $p358: ref;
  var $i359: i16;
  var $i360: i32;
  var $i361: i1;
  var $i347: i32;
  var $i362: i32;
  var $i363: i32;
  var $i345: i32;
  var $i346: i32;
  var $i364: i1;
  var $i365: i64;
  var $i366: i64;
  var $i367: i64;
  var $p368: ref;
  var $p369: ref;
  var $p370: ref;
  var $i371: i32;
  var $i372: i1;
  var $i373: i64;
  var $i374: i64;
  var $i375: i64;
  var $p376: ref;
  var $p377: ref;
  var $p378: ref;
  var $i379: i64;
  var $i380: i64;
  var $i381: i64;
  var $p382: ref;
  var $p383: ref;
  var $p384: ref;
  var $i385: i64;
  var $i386: i64;
  var $i387: i64;
  var $i388: i64;
  var $p389: ref;
  var $i390: i16;
  var $i391: i32;
  var $i392: i32;
  var $i393: i16;
  var $p394: ref;
  var $i395: i16;
  var $i54: i16;
  var cmdloc_dummy_var_16: [ref]i8;
  var cmdloc_dummy_var_17: [ref]i8;
  var cmdloc_dummy_var_18: [ref]i8;
  var cmdloc_dummy_var_19: [ref]i8;
  var cmdloc_dummy_var_20: [ref]i8;
  var cmdloc_dummy_var_21: [ref]i8;
  var vslice_dummy_var_125: i32;
  var vslice_dummy_var_126: i32;
  var vslice_dummy_var_127: i32;
  var vslice_dummy_var_128: i32;
  var vslice_dummy_var_129: i32;
  var vslice_dummy_var_130: i32;
  var vslice_dummy_var_131: i32;
  var vslice_dummy_var_132: i32;

  $bb0:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 2398} $p3 := $alloc($mul.ref(128, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2399} $p4 := $alloc($mul.ref(64, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2400} $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2401} $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2402} $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2403} $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2404} $p9 := $alloc($mul.ref(512, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2405} $p10 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 2406} $p11 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 2407} {:cexpr "INFTL_foldchain:arg:thisVUC"} boogie_si_record_i32($i1);
    call {:si_unique_call 2408} {:cexpr "INFTL_foldchain:arg:pendingblock"} boogie_si_record_i32($i2);
    goto corral_source_split_5672;

  corral_source_split_5672:
    assume {:verifier.code 0} true;
    $i12 := $p2i.ref.i64($p0);
    call {:si_unique_call 2409} {:cexpr "__cil_tmp30"} boogie_si_record_i64($i12);
    goto corral_source_split_5673;

  corral_source_split_5673:
    assume {:verifier.code 0} true;
    $i13 := $add.i64($i12, 24);
    call {:si_unique_call 2410} {:cexpr "__cil_tmp31"} boogie_si_record_i64($i13);
    goto corral_source_split_5674;

  corral_source_split_5674:
    assume {:verifier.code 0} true;
    $p14 := $i2p.i64.ref($i13);
    goto corral_source_split_5675;

  corral_source_split_5675:
    assume {:verifier.code 0} true;
    $p15 := $load.ref($M.1, $p14);
    goto corral_source_split_5676;

  corral_source_split_5676:
    assume {:verifier.code 0} true;
    $p16 := $bitcast.ref.ref($p7);
    goto corral_source_split_5677;

  corral_source_split_5677:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p16, .str);
    goto corral_source_split_5678;

  corral_source_split_5678:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p7);
    goto corral_source_split_5679;

  corral_source_split_5679:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 8);
    call {:si_unique_call 2411} {:cexpr "__cil_tmp33"} boogie_si_record_i64($i18);
    goto corral_source_split_5680;

  corral_source_split_5680:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_5681;

  corral_source_split_5681:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p19, .str.53);
    goto corral_source_split_5682;

  corral_source_split_5682:
    assume {:verifier.code 0} true;
    $i20 := $p2i.ref.i64($p7);
    goto corral_source_split_5683;

  corral_source_split_5683:
    assume {:verifier.code 0} true;
    $i21 := $add.i64($i20, 16);
    call {:si_unique_call 2412} {:cexpr "__cil_tmp34"} boogie_si_record_i64($i21);
    goto corral_source_split_5684;

  corral_source_split_5684:
    assume {:verifier.code 0} true;
    $p22 := $i2p.i64.ref($i21);
    goto corral_source_split_5685;

  corral_source_split_5685:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p22, .str.31);
    goto corral_source_split_5686;

  corral_source_split_5686:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p7);
    goto corral_source_split_5687;

  corral_source_split_5687:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 24);
    call {:si_unique_call 2413} {:cexpr "__cil_tmp35"} boogie_si_record_i64($i24);
    goto corral_source_split_5688;

  corral_source_split_5688:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_5689;

  corral_source_split_5689:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p25, .str.54);
    goto corral_source_split_5690;

  corral_source_split_5690:
    assume {:verifier.code 0} true;
    $i26 := $p2i.ref.i64($p7);
    goto corral_source_split_5691;

  corral_source_split_5691:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($i26, 32);
    call {:si_unique_call 2414} {:cexpr "__cil_tmp36"} boogie_si_record_i64($i27);
    goto corral_source_split_5692;

  corral_source_split_5692:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_5693;

  corral_source_split_5693:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p28, 276);
    goto corral_source_split_5694;

  corral_source_split_5694:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p7);
    goto corral_source_split_5695;

  corral_source_split_5695:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 35);
    call {:si_unique_call 2415} {:cexpr "__cil_tmp37"} boogie_si_record_i64($i30);
    goto corral_source_split_5696;

  corral_source_split_5696:
    assume {:verifier.code 0} true;
    $p31 := $i2p.i64.ref($i30);
    goto corral_source_split_5697;

  corral_source_split_5697:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p31, 0);
    goto corral_source_split_5698;

  corral_source_split_5698:
    assume {:verifier.code 0} true;
    $i32 := $p2i.ref.i64($p7);
    goto corral_source_split_5699;

  corral_source_split_5699:
    assume {:verifier.code 0} true;
    $i33 := $add.i64($i32, 35);
    call {:si_unique_call 2416} {:cexpr "__cil_tmp38"} boogie_si_record_i64($i33);
    goto corral_source_split_5700;

  corral_source_split_5700:
    assume {:verifier.code 0} true;
    $p34 := $i2p.i64.ref($i33);
    goto corral_source_split_5701;

  corral_source_split_5701:
    assume {:verifier.code 0} true;
    $i35 := $load.i8($M.1, $p34);
    call {:si_unique_call 2417} {:cexpr "__cil_tmp39"} boogie_si_record_i8($i35);
    goto corral_source_split_5702;

  corral_source_split_5702:
    assume {:verifier.code 0} true;
    $i36 := $zext.i8.i64($i35);
    call {:si_unique_call 2418} {:cexpr "__cil_tmp40"} boogie_si_record_i64($i36);
    goto corral_source_split_5703;

  corral_source_split_5703:
    assume {:verifier.code 0} true;
    $i37 := $and.i64($i36, 1);
    call {:si_unique_call 2419} {:cexpr "__cil_tmp41"} boogie_si_record_i64($i37);
    goto corral_source_split_5704;

  corral_source_split_5704:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2420} $i38 := __builtinx_expect.i64.i64($i37, 0);
    goto corral_source_split_5705;

  corral_source_split_5705:
    assume {:verifier.code 0} true;
    $i39 := $sext.i32.i64($i38);
    call {:si_unique_call 2421} {:cexpr "tmp"} boogie_si_record_i64($i39);
    goto corral_source_split_5706;

  corral_source_split_5706:
    assume {:verifier.code 0} true;
    $i40 := $ne.i64($i39, 0);
    goto corral_source_split_5707;

  corral_source_split_5707:
    assume {:verifier.code 0} true;
    assume {:branchcond $i40} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i40 == 1);
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $p42 := $bitcast.ref.ref($p3);
    goto corral_source_split_5712;

  corral_source_split_5712:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_16 := $M.9;
    call {:si_unique_call 2423} cmdloc_dummy_var_17 := $memset.i8(cmdloc_dummy_var_16, $p42, $sub.i8(0, 1), 128, $zext.i32.i64(1), 0 == 1);
    $M.9 := cmdloc_dummy_var_17;
    goto corral_source_split_5713;

  corral_source_split_5713:
    assume {:verifier.code 0} true;
    $p43 := $bitcast.ref.ref($p4);
    goto corral_source_split_5714;

  corral_source_split_5714:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_18 := $M.10;
    call {:si_unique_call 2424} cmdloc_dummy_var_19 := $memset.i8(cmdloc_dummy_var_18, $p43, 0, 64, $zext.i32.i64(1), 0 == 1);
    $M.10 := cmdloc_dummy_var_19;
    goto corral_source_split_5715;

  corral_source_split_5715:
    assume {:verifier.code 0} true;
    $i44 := $zext.i32.i64($i1);
    call {:si_unique_call 2425} {:cexpr "__cil_tmp44"} boogie_si_record_i64($i44);
    goto corral_source_split_5716;

  corral_source_split_5716:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p0);
    call {:si_unique_call 2426} {:cexpr "__cil_tmp45"} boogie_si_record_i64($i45);
    goto corral_source_split_5717;

  corral_source_split_5717:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 552);
    call {:si_unique_call 2427} {:cexpr "__cil_tmp46"} boogie_si_record_i64($i46);
    goto corral_source_split_5718;

  corral_source_split_5718:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_5719;

  corral_source_split_5719:
    assume {:verifier.code 0} true;
    $p48 := $load.ref($M.1, $p47);
    goto corral_source_split_5720;

  corral_source_split_5720:
    assume {:verifier.code 0} true;
    $p49 := $add.ref($p48, $mul.ref($i44, 2));
    goto corral_source_split_5721;

  corral_source_split_5721:
    assume {:verifier.code 0} true;
    $i50 := $load.i16($M.1, $p49);
    call {:si_unique_call 2428} {:cexpr "__cil_tmp49"} boogie_si_record_i16($i50);
    goto corral_source_split_5722;

  corral_source_split_5722:
    assume {:verifier.code 0} true;
    $i51 := $zext.i16.i32($i50);
    call {:si_unique_call 2429} {:cexpr "targetEUN"} boogie_si_record_i32($i51);
    goto corral_source_split_5723;

  corral_source_split_5723:
    assume {:verifier.code 0} true;
    $i52 := $eq.i32($i51, 65535);
    goto corral_source_split_5724;

  corral_source_split_5724:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i52 == 1);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p0);
    call {:si_unique_call 2431} {:cexpr "__cil_tmp91"} boogie_si_record_i64($i55);
    goto corral_source_split_5731;

  corral_source_split_5731:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 560);
    call {:si_unique_call 2432} {:cexpr "__cil_tmp92"} boogie_si_record_i64($i56);
    goto corral_source_split_5732;

  corral_source_split_5732:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_5733;

  corral_source_split_5733:
    assume {:verifier.code 0} true;
    $i58 := $load.i32($M.1, $p57);
    call {:si_unique_call 2433} {:cexpr "__cil_tmp93"} boogie_si_record_i32($i58);
    goto corral_source_split_5734;

  corral_source_split_5734:
    assume {:verifier.code 0} true;
    $i59 := $ugt.i32($i58, $i51);
    goto corral_source_split_5735;

  corral_source_split_5735:
    assume {:verifier.code 0} true;
    assume {:branchcond $i59} true;
    goto $bb8, $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume !($i59 == 1);
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    $p146 := $bitcast.ref.ref($p8);
    goto corral_source_split_5873;

  corral_source_split_5873:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p146, .str);
    goto corral_source_split_5874;

  corral_source_split_5874:
    assume {:verifier.code 0} true;
    $i147 := $p2i.ref.i64($p8);
    goto corral_source_split_5875;

  corral_source_split_5875:
    assume {:verifier.code 0} true;
    $i148 := $add.i64($i147, 8);
    call {:si_unique_call 2478} {:cexpr "__cil_tmp95"} boogie_si_record_i64($i148);
    goto corral_source_split_5876;

  corral_source_split_5876:
    assume {:verifier.code 0} true;
    $p149 := $i2p.i64.ref($i148);
    goto corral_source_split_5877;

  corral_source_split_5877:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p149, .str.53);
    goto corral_source_split_5878;

  corral_source_split_5878:
    assume {:verifier.code 0} true;
    $i150 := $p2i.ref.i64($p8);
    goto corral_source_split_5879;

  corral_source_split_5879:
    assume {:verifier.code 0} true;
    $i151 := $add.i64($i150, 16);
    call {:si_unique_call 2479} {:cexpr "__cil_tmp96"} boogie_si_record_i64($i151);
    goto corral_source_split_5880;

  corral_source_split_5880:
    assume {:verifier.code 0} true;
    $p152 := $i2p.i64.ref($i151);
    goto corral_source_split_5881;

  corral_source_split_5881:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p152, .str.31);
    goto corral_source_split_5882;

  corral_source_split_5882:
    assume {:verifier.code 0} true;
    $i153 := $p2i.ref.i64($p8);
    goto corral_source_split_5883;

  corral_source_split_5883:
    assume {:verifier.code 0} true;
    $i154 := $add.i64($i153, 24);
    call {:si_unique_call 2480} {:cexpr "__cil_tmp97"} boogie_si_record_i64($i154);
    goto corral_source_split_5884;

  corral_source_split_5884:
    assume {:verifier.code 0} true;
    $p155 := $i2p.i64.ref($i154);
    goto corral_source_split_5885;

  corral_source_split_5885:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p155, .str.57);
    goto corral_source_split_5886;

  corral_source_split_5886:
    assume {:verifier.code 0} true;
    $i156 := $p2i.ref.i64($p8);
    goto corral_source_split_5887;

  corral_source_split_5887:
    assume {:verifier.code 0} true;
    $i157 := $add.i64($i156, 32);
    call {:si_unique_call 2481} {:cexpr "__cil_tmp98"} boogie_si_record_i64($i157);
    goto corral_source_split_5888;

  corral_source_split_5888:
    assume {:verifier.code 0} true;
    $p158 := $i2p.i64.ref($i157);
    goto corral_source_split_5889;

  corral_source_split_5889:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p158, 339);
    goto corral_source_split_5890;

  corral_source_split_5890:
    assume {:verifier.code 0} true;
    $i159 := $p2i.ref.i64($p8);
    goto corral_source_split_5891;

  corral_source_split_5891:
    assume {:verifier.code 0} true;
    $i160 := $add.i64($i159, 35);
    call {:si_unique_call 2482} {:cexpr "__cil_tmp99"} boogie_si_record_i64($i160);
    goto corral_source_split_5892;

  corral_source_split_5892:
    assume {:verifier.code 0} true;
    $p161 := $i2p.i64.ref($i160);
    goto corral_source_split_5893;

  corral_source_split_5893:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p161, 0);
    goto corral_source_split_5894;

  corral_source_split_5894:
    assume {:verifier.code 0} true;
    $i162 := $p2i.ref.i64($p8);
    goto corral_source_split_5895;

  corral_source_split_5895:
    assume {:verifier.code 0} true;
    $i163 := $add.i64($i162, 35);
    call {:si_unique_call 2483} {:cexpr "__cil_tmp100"} boogie_si_record_i64($i163);
    goto corral_source_split_5896;

  corral_source_split_5896:
    assume {:verifier.code 0} true;
    $p164 := $i2p.i64.ref($i163);
    goto corral_source_split_5897;

  corral_source_split_5897:
    assume {:verifier.code 0} true;
    $i165 := $load.i8($M.1, $p164);
    call {:si_unique_call 2484} {:cexpr "__cil_tmp101"} boogie_si_record_i8($i165);
    goto corral_source_split_5898;

  corral_source_split_5898:
    assume {:verifier.code 0} true;
    $i166 := $zext.i8.i64($i165);
    call {:si_unique_call 2485} {:cexpr "__cil_tmp102"} boogie_si_record_i64($i166);
    goto corral_source_split_5899;

  corral_source_split_5899:
    assume {:verifier.code 0} true;
    $i167 := $and.i64($i166, 1);
    call {:si_unique_call 2486} {:cexpr "__cil_tmp103"} boogie_si_record_i64($i167);
    goto corral_source_split_5900;

  corral_source_split_5900:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2487} $i168 := __builtinx_expect.i64.i64($i167, 0);
    goto corral_source_split_5901;

  corral_source_split_5901:
    assume {:verifier.code 0} true;
    $i169 := $sext.i32.i64($i168);
    call {:si_unique_call 2488} {:cexpr "tmp___2"} boogie_si_record_i64($i169);
    goto corral_source_split_5902;

  corral_source_split_5902:
    assume {:verifier.code 0} true;
    $i170 := $ne.i64($i169, 0);
    goto corral_source_split_5903;

  corral_source_split_5903:
    assume {:verifier.code 0} true;
    assume {:branchcond $i170} true;
    goto $bb60, $bb61;

  $bb61:
    assume !($i170 == 1);
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p0);
    call {:si_unique_call 2490} {:cexpr "__cil_tmp176"} boogie_si_record_i64($i172);
    goto corral_source_split_5908;

  corral_source_split_5908:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 356);
    call {:si_unique_call 2491} {:cexpr "__cil_tmp177"} boogie_si_record_i64($i173);
    goto corral_source_split_5909;

  corral_source_split_5909:
    assume {:verifier.code 0} true;
    $p174 := $i2p.i64.ref($i173);
    goto corral_source_split_5910;

  corral_source_split_5910:
    assume {:verifier.code 0} true;
    $i175 := $load.i32($M.1, $p174);
    call {:si_unique_call 2492} {:cexpr "__cil_tmp178"} boogie_si_record_i32($i175);
    goto corral_source_split_5911;

  corral_source_split_5911:
    assume {:verifier.code 0} true;
    $i176 := $udiv.i32($i175, 512);
    call {:si_unique_call 2493} {:cexpr "__cil_tmp179"} boogie_si_record_i32($i176);
    goto corral_source_split_5912;

  corral_source_split_5912:
    assume {:verifier.code 0} true;
    $i177 := $ult.i32(0, $i176);
    goto corral_source_split_5913;

  corral_source_split_5913:
    assume {:verifier.code 0} true;
    assume {:branchcond $i177} true;
    goto $bb63, $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    assume !($i177 == 1);
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    $p302 := $bitcast.ref.ref($p11);
    goto corral_source_split_6074;

  corral_source_split_6074:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p302, .str);
    goto corral_source_split_6075;

  corral_source_split_6075:
    assume {:verifier.code 0} true;
    $i303 := $p2i.ref.i64($p11);
    goto corral_source_split_6076;

  corral_source_split_6076:
    assume {:verifier.code 0} true;
    $i304 := $add.i64($i303, 8);
    call {:si_unique_call 2565} {:cexpr "__cil_tmp182"} boogie_si_record_i64($i304);
    goto corral_source_split_6077;

  corral_source_split_6077:
    assume {:verifier.code 0} true;
    $p305 := $i2p.i64.ref($i304);
    goto corral_source_split_6078;

  corral_source_split_6078:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p305, .str.53);
    goto corral_source_split_6079;

  corral_source_split_6079:
    assume {:verifier.code 0} true;
    $i306 := $p2i.ref.i64($p11);
    goto corral_source_split_6080;

  corral_source_split_6080:
    assume {:verifier.code 0} true;
    $i307 := $add.i64($i306, 16);
    call {:si_unique_call 2566} {:cexpr "__cil_tmp183"} boogie_si_record_i64($i307);
    goto corral_source_split_6081;

  corral_source_split_6081:
    assume {:verifier.code 0} true;
    $p308 := $i2p.i64.ref($i307);
    goto corral_source_split_6082;

  corral_source_split_6082:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p308, .str.31);
    goto corral_source_split_6083;

  corral_source_split_6083:
    assume {:verifier.code 0} true;
    $i309 := $p2i.ref.i64($p11);
    goto corral_source_split_6084;

  corral_source_split_6084:
    assume {:verifier.code 0} true;
    $i310 := $add.i64($i309, 24);
    call {:si_unique_call 2567} {:cexpr "__cil_tmp184"} boogie_si_record_i64($i310);
    goto corral_source_split_6085;

  corral_source_split_6085:
    assume {:verifier.code 0} true;
    $p311 := $i2p.i64.ref($i310);
    goto corral_source_split_6086;

  corral_source_split_6086:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p311, .str.59);
    goto corral_source_split_6087;

  corral_source_split_6087:
    assume {:verifier.code 0} true;
    $i312 := $p2i.ref.i64($p11);
    goto corral_source_split_6088;

  corral_source_split_6088:
    assume {:verifier.code 0} true;
    $i313 := $add.i64($i312, 32);
    call {:si_unique_call 2568} {:cexpr "__cil_tmp185"} boogie_si_record_i64($i313);
    goto corral_source_split_6089;

  corral_source_split_6089:
    assume {:verifier.code 0} true;
    $p314 := $i2p.i64.ref($i313);
    goto corral_source_split_6090;

  corral_source_split_6090:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p314, 389);
    goto corral_source_split_6091;

  corral_source_split_6091:
    assume {:verifier.code 0} true;
    $i315 := $p2i.ref.i64($p11);
    goto corral_source_split_6092;

  corral_source_split_6092:
    assume {:verifier.code 0} true;
    $i316 := $add.i64($i315, 35);
    call {:si_unique_call 2569} {:cexpr "__cil_tmp186"} boogie_si_record_i64($i316);
    goto corral_source_split_6093;

  corral_source_split_6093:
    assume {:verifier.code 0} true;
    $p317 := $i2p.i64.ref($i316);
    goto corral_source_split_6094;

  corral_source_split_6094:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p317, 0);
    goto corral_source_split_6095;

  corral_source_split_6095:
    assume {:verifier.code 0} true;
    $i318 := $p2i.ref.i64($p11);
    goto corral_source_split_6096;

  corral_source_split_6096:
    assume {:verifier.code 0} true;
    $i319 := $add.i64($i318, 35);
    call {:si_unique_call 2570} {:cexpr "__cil_tmp187"} boogie_si_record_i64($i319);
    goto corral_source_split_6097;

  corral_source_split_6097:
    assume {:verifier.code 0} true;
    $p320 := $i2p.i64.ref($i319);
    goto corral_source_split_6098;

  corral_source_split_6098:
    assume {:verifier.code 0} true;
    $i321 := $load.i8($M.1, $p320);
    call {:si_unique_call 2571} {:cexpr "__cil_tmp188"} boogie_si_record_i8($i321);
    goto corral_source_split_6099;

  corral_source_split_6099:
    assume {:verifier.code 0} true;
    $i322 := $zext.i8.i64($i321);
    call {:si_unique_call 2572} {:cexpr "__cil_tmp189"} boogie_si_record_i64($i322);
    goto corral_source_split_6100;

  corral_source_split_6100:
    assume {:verifier.code 0} true;
    $i323 := $and.i64($i322, 1);
    call {:si_unique_call 2573} {:cexpr "__cil_tmp190"} boogie_si_record_i64($i323);
    goto corral_source_split_6101;

  corral_source_split_6101:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2574} $i324 := __builtinx_expect.i64.i64($i323, 0);
    goto corral_source_split_6102;

  corral_source_split_6102:
    assume {:verifier.code 0} true;
    $i325 := $sext.i32.i64($i324);
    call {:si_unique_call 2575} {:cexpr "tmp___5"} boogie_si_record_i64($i325);
    goto corral_source_split_6103;

  corral_source_split_6103:
    assume {:verifier.code 0} true;
    $i326 := $ne.i64($i325, 0);
    goto corral_source_split_6104;

  corral_source_split_6104:
    assume {:verifier.code 0} true;
    assume {:branchcond $i326} true;
    goto $bb93, $bb94;

  $bb94:
    assume !($i326 == 1);
    assume {:verifier.code 0} true;
    goto $bb95;

  $bb95:
    assume {:verifier.code 0} true;
    goto $bb96;

  $bb96:
    call $i328, $i329, $i330, $p331, $p332, $p333, $i334, $i335, $i336, $i337, $i338, $p339, $p340, $p341, $i342, $i343, $i344, $i348, $i349, $i350, $p351, $p352, $p353, $i354, $i355, $i356, $p357, $p358, $i359, $i360, $i361, $i347, $i362, $i363, $i345, $i346, $i364, $i365, $i366, $i367, $p368, $p369, $p370, $i371, $i372, $i373, $i374, $i375, $p376, $p377, $p378, $i379, $i380, $i381, $p382, $p383, $p384, $i385, $i386, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $p394 := INFTL_foldchain_loop_$bb96($p0, $i1, $i51, $i328, $i329, $i330, $p331, $p332, $p333, $i334, $i335, $i336, $i337, $i338, $p339, $p340, $p341, $i342, $i343, $i344, $i348, $i349, $i350, $p351, $p352, $p353, $i354, $i355, $i356, $p357, $p358, $i359, $i360, $i361, $i347, $i362, $i363, $i345, $i346, $i364, $i365, $i366, $i367, $p368, $p369, $p370, $i371, $i372, $i373, $i374, $i375, $p376, $p377, $p378, $i379, $i380, $i381, $p382, $p383, $p384, $i385, $i386, $i387, $i388, $p389, $i390, $i391, $i392, $i393, $p394);
    goto $bb96_last;

  corral_source_split_6109:
    assume {:verifier.code 0} true;
    $i329 := $p2i.ref.i64($p0);
    call {:si_unique_call 2578} {:cexpr "__cil_tmp192"} boogie_si_record_i64($i329);
    goto corral_source_split_6110;

  corral_source_split_6110:
    assume {:verifier.code 0} true;
    $i330 := $add.i64($i329, 552);
    call {:si_unique_call 2579} {:cexpr "__cil_tmp193"} boogie_si_record_i64($i330);
    goto corral_source_split_6111;

  corral_source_split_6111:
    assume {:verifier.code 0} true;
    $p331 := $i2p.i64.ref($i330);
    goto corral_source_split_6112;

  corral_source_split_6112:
    assume {:verifier.code 0} true;
    $p332 := $load.ref($M.1, $p331);
    goto corral_source_split_6113;

  corral_source_split_6113:
    assume {:verifier.code 0} true;
    $p333 := $add.ref($p332, $mul.ref($i328, 2));
    goto corral_source_split_6114;

  corral_source_split_6114:
    assume {:verifier.code 0} true;
    $i334 := $load.i16($M.1, $p333);
    call {:si_unique_call 2580} {:cexpr "__cil_tmp196"} boogie_si_record_i16($i334);
    goto corral_source_split_6115;

  corral_source_split_6115:
    assume {:verifier.code 0} true;
    $i335 := $zext.i16.i32($i334);
    call {:si_unique_call 2581} {:cexpr "thisEUN"} boogie_si_record_i32($i335);
    goto corral_source_split_6116;

  corral_source_split_6116:
    assume {:verifier.code 0} true;
    $i336 := $zext.i32.i64($i335);
    call {:si_unique_call 2582} {:cexpr "__cil_tmp203"} boogie_si_record_i64($i336);
    goto corral_source_split_6117;

  corral_source_split_6117:
    assume {:verifier.code 0} true;
    $i337 := $p2i.ref.i64($p0);
    call {:si_unique_call 2583} {:cexpr "__cil_tmp204"} boogie_si_record_i64($i337);
    goto corral_source_split_6118;

  corral_source_split_6118:
    assume {:verifier.code 0} true;
    $i338 := $add.i64($i337, 544);
    call {:si_unique_call 2584} {:cexpr "__cil_tmp205"} boogie_si_record_i64($i338);
    goto corral_source_split_6119;

  corral_source_split_6119:
    assume {:verifier.code 0} true;
    $p339 := $i2p.i64.ref($i338);
    goto corral_source_split_6120;

  corral_source_split_6120:
    assume {:verifier.code 0} true;
    $p340 := $load.ref($M.1, $p339);
    goto corral_source_split_6121;

  corral_source_split_6121:
    assume {:verifier.code 0} true;
    $p341 := $add.ref($p340, $mul.ref($i336, 2));
    goto corral_source_split_6122;

  corral_source_split_6122:
    assume {:verifier.code 0} true;
    $i342 := $load.i16($M.1, $p341);
    call {:si_unique_call 2585} {:cexpr "__cil_tmp208"} boogie_si_record_i16($i342);
    goto corral_source_split_6123;

  corral_source_split_6123:
    assume {:verifier.code 0} true;
    $i343 := $zext.i16.i32($i342);
    call {:si_unique_call 2586} {:cexpr "__cil_tmp209"} boogie_si_record_i32($i343);
    goto corral_source_split_6124;

  corral_source_split_6124:
    assume {:verifier.code 0} true;
    $i344 := $ne.i32($i343, 65535);
    goto corral_source_split_6125;

  corral_source_split_6125:
    assume {:verifier.code 0} true;
    $i345, $i346 := 65535, $i335;
    assume true;
    goto $bb97, $bb98;

  $bb98:
    assume {:verifier.code 0} true;
    assume !($i344 == 1);
    goto $bb99;

  $bb99:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_6129;

  corral_source_split_6129:
    assume {:verifier.code 0} true;
    goto $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    $i364 := $eq.i32($i346, $i51);
    goto corral_source_split_6150;

  corral_source_split_6150:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb105, $bb106;

  $bb106:
    assume !($i364 == 1);
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    $i365 := $zext.i32.i64($i345);
    call {:si_unique_call 2595} {:cexpr "__cil_tmp210"} boogie_si_record_i64($i365);
    goto corral_source_split_6156;

  corral_source_split_6156:
    assume {:verifier.code 0} true;
    $i366 := $p2i.ref.i64($p0);
    call {:si_unique_call 2596} {:cexpr "__cil_tmp211"} boogie_si_record_i64($i366);
    goto corral_source_split_6157;

  corral_source_split_6157:
    assume {:verifier.code 0} true;
    $i367 := $add.i64($i366, 544);
    call {:si_unique_call 2597} {:cexpr "__cil_tmp212"} boogie_si_record_i64($i367);
    goto corral_source_split_6158;

  corral_source_split_6158:
    assume {:verifier.code 0} true;
    $p368 := $i2p.i64.ref($i367);
    goto corral_source_split_6159;

  corral_source_split_6159:
    assume {:verifier.code 0} true;
    $p369 := $load.ref($M.1, $p368);
    goto corral_source_split_6160;

  corral_source_split_6160:
    assume {:verifier.code 0} true;
    $p370 := $add.ref($p369, $mul.ref($i365, 2));
    goto corral_source_split_6161;

  corral_source_split_6161:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p370, $sub.i16(0, 1));
    goto corral_source_split_6162;

  corral_source_split_6162:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2598} $i371 := INFTL_formatblock($p0, $i346);
    call {:si_unique_call 2599} {:cexpr "tmp___6"} boogie_si_record_i32($i371);
    goto corral_source_split_6163;

  corral_source_split_6163:
    assume {:verifier.code 0} true;
    $i372 := $slt.i32($i371, 0);
    goto corral_source_split_6164;

  corral_source_split_6164:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i372 == 1);
    goto corral_source_split_6175;

  corral_source_split_6175:
    assume {:verifier.code 0} true;
    $i379 := $zext.i32.i64($i346);
    call {:si_unique_call 2603} {:cexpr "__cil_tmp221"} boogie_si_record_i64($i379);
    goto corral_source_split_6176;

  corral_source_split_6176:
    assume {:verifier.code 0} true;
    $i380 := $p2i.ref.i64($p0);
    call {:si_unique_call 2604} {:cexpr "__cil_tmp222"} boogie_si_record_i64($i380);
    goto corral_source_split_6177;

  corral_source_split_6177:
    assume {:verifier.code 0} true;
    $i381 := $add.i64($i380, 544);
    call {:si_unique_call 2605} {:cexpr "__cil_tmp223"} boogie_si_record_i64($i381);
    goto corral_source_split_6178;

  corral_source_split_6178:
    assume {:verifier.code 0} true;
    $p382 := $i2p.i64.ref($i381);
    goto corral_source_split_6179;

  corral_source_split_6179:
    assume {:verifier.code 0} true;
    $p383 := $load.ref($M.1, $p382);
    goto corral_source_split_6180;

  corral_source_split_6180:
    assume {:verifier.code 0} true;
    $p384 := $add.ref($p383, $mul.ref($i379, 2));
    goto corral_source_split_6181;

  corral_source_split_6181:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p384, $sub.i16(0, 2));
    goto corral_source_split_6182;

  corral_source_split_6182:
    assume {:verifier.code 0} true;
    $i385 := $p2i.ref.i64($p0);
    call {:si_unique_call 2606} {:cexpr "__cil_tmp226"} boogie_si_record_i64($i385);
    goto corral_source_split_6183;

  corral_source_split_6183:
    assume {:verifier.code 0} true;
    $i386 := $add.i64($i385, 522);
    call {:si_unique_call 2607} {:cexpr "__cil_tmp227"} boogie_si_record_i64($i386);
    goto corral_source_split_6184;

  corral_source_split_6184:
    assume {:verifier.code 0} true;
    $i387 := $p2i.ref.i64($p0);
    call {:si_unique_call 2608} {:cexpr "__cil_tmp228"} boogie_si_record_i64($i387);
    goto corral_source_split_6185;

  corral_source_split_6185:
    assume {:verifier.code 0} true;
    $i388 := $add.i64($i387, 522);
    call {:si_unique_call 2609} {:cexpr "__cil_tmp229"} boogie_si_record_i64($i388);
    goto corral_source_split_6186;

  corral_source_split_6186:
    assume {:verifier.code 0} true;
    $p389 := $i2p.i64.ref($i388);
    goto corral_source_split_6187;

  corral_source_split_6187:
    assume {:verifier.code 0} true;
    $i390 := $load.i16($M.1, $p389);
    call {:si_unique_call 2610} {:cexpr "__cil_tmp230"} boogie_si_record_i16($i390);
    goto corral_source_split_6188;

  corral_source_split_6188:
    assume {:verifier.code 0} true;
    $i391 := $zext.i16.i32($i390);
    call {:si_unique_call 2611} {:cexpr "__cil_tmp231"} boogie_si_record_i32($i391);
    goto corral_source_split_6189;

  corral_source_split_6189:
    assume {:verifier.code 0} true;
    $i392 := $add.i32($i391, 1);
    call {:si_unique_call 2612} {:cexpr "__cil_tmp232"} boogie_si_record_i32($i392);
    goto corral_source_split_6190;

  corral_source_split_6190:
    assume {:verifier.code 0} true;
    $i393 := $trunc.i32.i16($i392);
    goto corral_source_split_6191;

  corral_source_split_6191:
    assume {:verifier.code 0} true;
    $p394 := $i2p.i64.ref($i386);
    goto corral_source_split_6192;

  corral_source_split_6192:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p394, $i393);
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb111:
    assume {:verifier.code 0} true;
    goto $bb111_dummy;

  $bb109:
    assume $i372 == 1;
    goto corral_source_split_6166;

  corral_source_split_6166:
    assume {:verifier.code 0} true;
    $i373 := $zext.i32.i64($i346);
    call {:si_unique_call 2600} {:cexpr "__cil_tmp216"} boogie_si_record_i64($i373);
    goto corral_source_split_6167;

  corral_source_split_6167:
    assume {:verifier.code 0} true;
    $i374 := $p2i.ref.i64($p0);
    call {:si_unique_call 2601} {:cexpr "__cil_tmp217"} boogie_si_record_i64($i374);
    goto corral_source_split_6168;

  corral_source_split_6168:
    assume {:verifier.code 0} true;
    $i375 := $add.i64($i374, 544);
    call {:si_unique_call 2602} {:cexpr "__cil_tmp218"} boogie_si_record_i64($i375);
    goto corral_source_split_6169;

  corral_source_split_6169:
    assume {:verifier.code 0} true;
    $p376 := $i2p.i64.ref($i375);
    goto corral_source_split_6170;

  corral_source_split_6170:
    assume {:verifier.code 0} true;
    $p377 := $load.ref($M.1, $p376);
    goto corral_source_split_6171;

  corral_source_split_6171:
    assume {:verifier.code 0} true;
    $p378 := $add.ref($p377, $mul.ref($i373, 2));
    goto corral_source_split_6172;

  corral_source_split_6172:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p378, $sub.i16(0, 4));
    goto corral_source_split_6173;

  corral_source_split_6173:
    assume {:verifier.code 0} true;
    goto $bb111;

  $bb105:
    assume $i364 == 1;
    goto corral_source_split_6152;

  corral_source_split_6152:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $i395 := $trunc.i32.i16($i51);
    goto corral_source_split_6154;

  corral_source_split_6154:
    assume {:verifier.code 0} true;
    $i54 := $i395;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_5729;

  corral_source_split_5729:
    assume {:verifier.code 0} true;
    $r := $i54;
    return;

  $bb97:
    assume $i344 == 1;
    goto corral_source_split_6127;

  corral_source_split_6127:
    assume {:verifier.code 0} true;
    $i347 := $i335;
    goto $bb100;

  $bb100:
    call $i348, $i349, $i350, $p351, $p352, $p353, $i354, $i355, $i356, $p357, $p358, $i359, $i360, $i361, $i347, $i362, $i363 := INFTL_foldchain_loop_$bb100($p0, $p339, $i348, $i349, $i350, $p351, $p352, $p353, $i354, $i355, $i356, $p357, $p358, $i359, $i360, $i361, $i347, $i362, $i363);
    goto $bb100_last;

  corral_source_split_6131:
    assume {:verifier.code 0} true;
    goto $bb101;

  $bb101:
    assume {:verifier.code 0} true;
    $i348 := $zext.i32.i64($i347);
    call {:si_unique_call 2587} {:cexpr "__cil_tmp197"} boogie_si_record_i64($i348);
    goto corral_source_split_6133;

  corral_source_split_6133:
    assume {:verifier.code 0} true;
    $i349 := $p2i.ref.i64($p0);
    call {:si_unique_call 2588} {:cexpr "__cil_tmp198"} boogie_si_record_i64($i349);
    goto corral_source_split_6134;

  corral_source_split_6134:
    assume {:verifier.code 0} true;
    $i350 := $add.i64($i349, 544);
    call {:si_unique_call 2589} {:cexpr "__cil_tmp199"} boogie_si_record_i64($i350);
    goto corral_source_split_6135;

  corral_source_split_6135:
    assume {:verifier.code 0} true;
    $p351 := $i2p.i64.ref($i350);
    goto corral_source_split_6136;

  corral_source_split_6136:
    assume {:verifier.code 0} true;
    $p352 := $load.ref($M.1, $p351);
    goto corral_source_split_6137;

  corral_source_split_6137:
    assume {:verifier.code 0} true;
    $p353 := $add.ref($p352, $mul.ref($i348, 2));
    goto corral_source_split_6138;

  corral_source_split_6138:
    assume {:verifier.code 0} true;
    $i354 := $load.i16($M.1, $p353);
    call {:si_unique_call 2590} {:cexpr "__cil_tmp202"} boogie_si_record_i16($i354);
    goto corral_source_split_6139;

  corral_source_split_6139:
    assume {:verifier.code 0} true;
    $i355 := $zext.i16.i32($i354);
    call {:si_unique_call 2591} {:cexpr "thisEUN"} boogie_si_record_i32($i355);
    goto corral_source_split_6140;

  corral_source_split_6140:
    assume {:verifier.code 0} true;
    $i356 := $zext.i32.i64($i355);
    call {:si_unique_call 2592} {:cexpr "__cil_tmp203"} boogie_si_record_i64($i356);
    goto corral_source_split_6141;

  corral_source_split_6141:
    assume {:verifier.code 0} true;
    $p357 := $load.ref($M.1, $p339);
    goto corral_source_split_6142;

  corral_source_split_6142:
    assume {:verifier.code 0} true;
    $p358 := $add.ref($p357, $mul.ref($i356, 2));
    goto corral_source_split_6143;

  corral_source_split_6143:
    assume {:verifier.code 0} true;
    $i359 := $load.i16($M.1, $p358);
    call {:si_unique_call 2593} {:cexpr "__cil_tmp208"} boogie_si_record_i16($i359);
    goto corral_source_split_6144;

  corral_source_split_6144:
    assume {:verifier.code 0} true;
    $i360 := $zext.i16.i32($i359);
    call {:si_unique_call 2594} {:cexpr "__cil_tmp209"} boogie_si_record_i32($i360);
    goto corral_source_split_6145;

  corral_source_split_6145:
    assume {:verifier.code 0} true;
    $i361 := $ne.i32($i360, 65535);
    goto corral_source_split_6146;

  corral_source_split_6146:
    assume {:verifier.code 0} true;
    $i362, $i363 := $i347, $i355;
    assume true;
    goto $bb102, $bb103;

  $bb103:
    assume !($i361 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_6148;

  corral_source_split_6148:
    assume {:verifier.code 0} true;
    $i345, $i346 := $i362, $i363;
    goto $bb99;

  $bb102:
    assume $i361 == 1;
    assume {:verifier.code 0} true;
    $i347 := $i355;
    goto $bb102_dummy;

  $bb93:
    assume $i326 == 1;
    goto corral_source_split_6106;

  corral_source_split_6106:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2576} vslice_dummy_var_132 := __dynamic_pr_debug.ref.ref.i32($p11, .str.59, $i1);
    goto corral_source_split_6107;

  corral_source_split_6107:
    assume {:verifier.code 0} true;
    goto $bb95;

  $bb63:
    assume $i177 == 1;
    goto corral_source_split_5915;

  corral_source_split_5915:
    assume {:verifier.code 0} true;
    $i178 := 0;
    goto $bb66;

  $bb66:
    call $i179, $i180, $p181, $i182, $i183, $p184, $i185, $i186, $i187, $i189, $i190, $p191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $p199, $i200, $i201, $p202, $i203, $i204, $i205, $i206, $i207, $i208, $p209, $i210, $i211, $p212, $i213, $i214, $i215, $i216, $p217, $i218, $i219, $i220, $i221, $p222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $p230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $p238, $i239, $i240, $i241, $i242, $p243, $i244, $i245, $p246, $i247, $i248, $p249, $i250, $i251, $p252, $i253, $i254, $p255, $i256, $i257, $p258, $i259, $i260, $p261, $i262, $i263, $p264, $i265, $i266, $i267, $i268, $i269, $i270, $p272, $i273, $i274, $p275, $i276, $i277, $i278, $i279, $p280, $i281, $p282, $i283, $i284, $p285, $p286, $i287, $i288, $i289, $p290, $i291, $i292, $i293, $i294, $p295, $p296, $i188, $i298, $i299, $i300, $i301, $i178, cmdloc_dummy_var_20, cmdloc_dummy_var_21, vslice_dummy_var_130, vslice_dummy_var_131 := INFTL_foldchain_loop_$bb66($p0, $i1, $i2, $p3, $p5, $p6, $p9, $p10, $p15, $i51, $p174, $i179, $i180, $p181, $i182, $i183, $p184, $i185, $i186, $i187, $i189, $i190, $p191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $p199, $i200, $i201, $p202, $i203, $i204, $i205, $i206, $i207, $i208, $p209, $i210, $i211, $p212, $i213, $i214, $i215, $i216, $p217, $i218, $i219, $i220, $i221, $p222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $p230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $p238, $i239, $i240, $i241, $i242, $p243, $i244, $i245, $p246, $i247, $i248, $p249, $i250, $i251, $p252, $i253, $i254, $p255, $i256, $i257, $p258, $i259, $i260, $p261, $i262, $i263, $p264, $i265, $i266, $i267, $i268, $i269, $i270, $p272, $i273, $i274, $p275, $i276, $i277, $i278, $i279, $p280, $i281, $p282, $i283, $i284, $p285, $p286, $i287, $i288, $i289, $p290, $i291, $i292, $i293, $i294, $p295, $p296, $i188, $i298, $i299, $i300, $i301, $i178, cmdloc_dummy_var_20, cmdloc_dummy_var_21, vslice_dummy_var_130, vslice_dummy_var_131);
    goto $bb66_last;

  corral_source_split_5917:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    $i179 := $sext.i32.i64($i178);
    goto corral_source_split_5919;

  corral_source_split_5919:
    assume {:verifier.code 0} true;
    $i180 := $mul.i64($i179, 2);
    call {:si_unique_call 2494} {:cexpr "__cil_tmp104"} boogie_si_record_i64($i180);
    goto corral_source_split_5920;

  corral_source_split_5920:
    assume {:verifier.code 0} true;
    $p181 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5921;

  corral_source_split_5921:
    assume {:verifier.code 0} true;
    $i182 := $p2i.ref.i64($p181);
    goto corral_source_split_5922;

  corral_source_split_5922:
    assume {:verifier.code 0} true;
    $i183 := $add.i64($i182, $i180);
    call {:si_unique_call 2495} {:cexpr "__cil_tmp105"} boogie_si_record_i64($i183);
    goto corral_source_split_5923;

  corral_source_split_5923:
    assume {:verifier.code 0} true;
    $p184 := $i2p.i64.ref($i183);
    goto corral_source_split_5924;

  corral_source_split_5924:
    assume {:verifier.code 0} true;
    $i185 := $load.i16($M.1, $p184);
    call {:si_unique_call 2496} {:cexpr "__cil_tmp106"} boogie_si_record_i16($i185);
    goto corral_source_split_5925;

  corral_source_split_5925:
    assume {:verifier.code 0} true;
    $i186 := $zext.i16.i32($i185);
    call {:si_unique_call 2497} {:cexpr "__cil_tmp107"} boogie_si_record_i32($i186);
    goto corral_source_split_5926;

  corral_source_split_5926:
    assume {:verifier.code 0} true;
    $i187 := $eq.i32($i186, $i51);
    goto corral_source_split_5927;

  corral_source_split_5927:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb68, $bb69;

  $bb69:
    assume !($i187 == 1);
    goto corral_source_split_5931;

  corral_source_split_5931:
    assume {:verifier.code 0} true;
    $i189 := $p2i.ref.i64($p0);
    call {:si_unique_call 2498} {:cexpr "__cil_tmp109"} boogie_si_record_i64($i189);
    goto corral_source_split_5932;

  corral_source_split_5932:
    assume {:verifier.code 0} true;
    $i190 := $add.i64($i189, 356);
    call {:si_unique_call 2499} {:cexpr "__cil_tmp110"} boogie_si_record_i64($i190);
    goto corral_source_split_5933;

  corral_source_split_5933:
    assume {:verifier.code 0} true;
    $p191 := $i2p.i64.ref($i190);
    goto corral_source_split_5934;

  corral_source_split_5934:
    assume {:verifier.code 0} true;
    $i192 := $load.i32($M.1, $p191);
    call {:si_unique_call 2500} {:cexpr "__cil_tmp111"} boogie_si_record_i32($i192);
    goto corral_source_split_5935;

  corral_source_split_5935:
    assume {:verifier.code 0} true;
    $i193 := $udiv.i32($i192, 512);
    call {:si_unique_call 2501} {:cexpr "__cil_tmp112"} boogie_si_record_i32($i193);
    goto corral_source_split_5936;

  corral_source_split_5936:
    assume {:verifier.code 0} true;
    $i194 := $mul.i32($i193, $i1);
    call {:si_unique_call 2502} {:cexpr "__cil_tmp113"} boogie_si_record_i32($i194);
    goto corral_source_split_5937;

  corral_source_split_5937:
    assume {:verifier.code 0} true;
    $i195 := $add.i32($i194, $i178);
    call {:si_unique_call 2503} {:cexpr "__cil_tmp114"} boogie_si_record_i32($i195);
    goto corral_source_split_5938;

  corral_source_split_5938:
    assume {:verifier.code 0} true;
    $i196 := $eq.i32($i195, $i2);
    goto corral_source_split_5939;

  corral_source_split_5939:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb71, $bb72;

  $bb72:
    assume !($i196 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    $i197 := $sext.i32.i64($i178);
    goto corral_source_split_5949;

  corral_source_split_5949:
    assume {:verifier.code 0} true;
    $i198 := $mul.i64($i197, 2);
    call {:si_unique_call 2507} {:cexpr "__cil_tmp115"} boogie_si_record_i64($i198);
    goto corral_source_split_5950;

  corral_source_split_5950:
    assume {:verifier.code 0} true;
    $p199 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5951;

  corral_source_split_5951:
    assume {:verifier.code 0} true;
    $i200 := $p2i.ref.i64($p199);
    goto corral_source_split_5952;

  corral_source_split_5952:
    assume {:verifier.code 0} true;
    $i201 := $add.i64($i200, $i198);
    call {:si_unique_call 2508} {:cexpr "__cil_tmp116"} boogie_si_record_i64($i201);
    goto corral_source_split_5953;

  corral_source_split_5953:
    assume {:verifier.code 0} true;
    $p202 := $i2p.i64.ref($i201);
    goto corral_source_split_5954;

  corral_source_split_5954:
    assume {:verifier.code 0} true;
    $i203 := $load.i16($M.1, $p202);
    call {:si_unique_call 2509} {:cexpr "__cil_tmp117"} boogie_si_record_i16($i203);
    goto corral_source_split_5955;

  corral_source_split_5955:
    assume {:verifier.code 0} true;
    $i204 := $zext.i16.i32($i203);
    call {:si_unique_call 2510} {:cexpr "__cil_tmp118"} boogie_si_record_i32($i204);
    goto corral_source_split_5956;

  corral_source_split_5956:
    assume {:verifier.code 0} true;
    $i205 := $eq.i32($i204, 65535);
    goto corral_source_split_5957;

  corral_source_split_5957:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb75, $bb76;

  $bb76:
    assume !($i205 == 1);
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    $i206 := $mul.i32($i178, 512);
    call {:si_unique_call 2511} {:cexpr "__cil_tmp119"} boogie_si_record_i32($i206);
    goto corral_source_split_5961;

  corral_source_split_5961:
    assume {:verifier.code 0} true;
    $i207 := $sext.i32.i64($i178);
    goto corral_source_split_5962;

  corral_source_split_5962:
    assume {:verifier.code 0} true;
    $i208 := $mul.i64($i207, 2);
    call {:si_unique_call 2512} {:cexpr "__cil_tmp121"} boogie_si_record_i64($i208);
    goto corral_source_split_5963;

  corral_source_split_5963:
    assume {:verifier.code 0} true;
    $p209 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5964;

  corral_source_split_5964:
    assume {:verifier.code 0} true;
    $i210 := $p2i.ref.i64($p209);
    goto corral_source_split_5965;

  corral_source_split_5965:
    assume {:verifier.code 0} true;
    $i211 := $add.i64($i210, $i208);
    call {:si_unique_call 2513} {:cexpr "__cil_tmp122"} boogie_si_record_i64($i211);
    goto corral_source_split_5966;

  corral_source_split_5966:
    assume {:verifier.code 0} true;
    $p212 := $i2p.i64.ref($i211);
    goto corral_source_split_5967;

  corral_source_split_5967:
    assume {:verifier.code 0} true;
    $i213 := $load.i16($M.1, $p212);
    call {:si_unique_call 2514} {:cexpr "__cil_tmp123"} boogie_si_record_i16($i213);
    goto corral_source_split_5968;

  corral_source_split_5968:
    assume {:verifier.code 0} true;
    $i214 := $zext.i16.i32($i213);
    call {:si_unique_call 2515} {:cexpr "__cil_tmp124"} boogie_si_record_i32($i214);
    goto corral_source_split_5969;

  corral_source_split_5969:
    assume {:verifier.code 0} true;
    $i215 := $p2i.ref.i64($p0);
    call {:si_unique_call 2516} {:cexpr "__cil_tmp125"} boogie_si_record_i64($i215);
    goto corral_source_split_5970;

  corral_source_split_5970:
    assume {:verifier.code 0} true;
    $i216 := $add.i64($i215, 356);
    call {:si_unique_call 2517} {:cexpr "__cil_tmp126"} boogie_si_record_i64($i216);
    goto corral_source_split_5971;

  corral_source_split_5971:
    assume {:verifier.code 0} true;
    $p217 := $i2p.i64.ref($i216);
    goto corral_source_split_5972;

  corral_source_split_5972:
    assume {:verifier.code 0} true;
    $i218 := $load.i32($M.1, $p217);
    call {:si_unique_call 2518} {:cexpr "__cil_tmp127"} boogie_si_record_i32($i218);
    goto corral_source_split_5973;

  corral_source_split_5973:
    assume {:verifier.code 0} true;
    $i219 := $mul.i32($i218, $i214);
    call {:si_unique_call 2519} {:cexpr "__cil_tmp128"} boogie_si_record_i32($i219);
    goto corral_source_split_5974;

  corral_source_split_5974:
    assume {:verifier.code 0} true;
    $i220 := $add.i32($i219, $i206);
    call {:si_unique_call 2520} {:cexpr "__cil_tmp129"} boogie_si_record_i32($i220);
    goto corral_source_split_5975;

  corral_source_split_5975:
    assume {:verifier.code 0} true;
    $i221 := $zext.i32.i64($i220);
    call {:si_unique_call 2521} {:cexpr "__cil_tmp130"} boogie_si_record_i64($i221);
    goto corral_source_split_5976;

  corral_source_split_5976:
    assume {:verifier.code 0} true;
    $p222 := $bitcast.ref.ref($p9);
    goto corral_source_split_5977;

  corral_source_split_5977:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2522} $i223 := mtd_read($p15, $i221, 512, $p6, $p222);
    call {:si_unique_call 2523} {:cexpr "ret"} boogie_si_record_i32($i223);
    goto corral_source_split_5978;

  corral_source_split_5978:
    assume {:verifier.code 0} true;
    $i224 := $slt.i32($i223, 0);
    goto corral_source_split_5979;

  corral_source_split_5979:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb78, $bb79;

  $bb79:
    assume !($i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    $p272 := $bitcast.ref.ref($p5);
    goto corral_source_split_6042;

  corral_source_split_6042:
    assume {:verifier.code 0} true;
    cmdloc_dummy_var_20 := $M.1;
    call {:si_unique_call 2551} cmdloc_dummy_var_21 := $memset.i8(cmdloc_dummy_var_20, $p272, $sub.i8(0, 1), 16, $zext.i32.i64(1), 0 == 1);
    $M.1 := cmdloc_dummy_var_21;
    goto corral_source_split_6043;

  corral_source_split_6043:
    assume {:verifier.code 0} true;
    $i273 := $p2i.ref.i64($p5);
    goto corral_source_split_6044;

  corral_source_split_6044:
    assume {:verifier.code 0} true;
    $i274 := $add.i64($i273, 7);
    call {:si_unique_call 2552} {:cexpr "__cil_tmp157"} boogie_si_record_i64($i274);
    goto corral_source_split_6045;

  corral_source_split_6045:
    assume {:verifier.code 0} true;
    $p275 := $i2p.i64.ref($i274);
    goto corral_source_split_6046;

  corral_source_split_6046:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p275, 85);
    goto corral_source_split_6047;

  corral_source_split_6047:
    assume {:verifier.code 0} true;
    $i276 := $p2i.ref.i64($p5);
    goto corral_source_split_6048;

  corral_source_split_6048:
    assume {:verifier.code 0} true;
    $i277 := $add.i64($i276, 6);
    call {:si_unique_call 2553} {:cexpr "__cil_tmp159"} boogie_si_record_i64($i277);
    goto corral_source_split_6049;

  corral_source_split_6049:
    assume {:verifier.code 0} true;
    $i278 := $p2i.ref.i64($p5);
    goto corral_source_split_6050;

  corral_source_split_6050:
    assume {:verifier.code 0} true;
    $i279 := $add.i64($i278, 7);
    call {:si_unique_call 2554} {:cexpr "__cil_tmp161"} boogie_si_record_i64($i279);
    goto corral_source_split_6051;

  corral_source_split_6051:
    assume {:verifier.code 0} true;
    $p280 := $i2p.i64.ref($i279);
    goto corral_source_split_6052;

  corral_source_split_6052:
    assume {:verifier.code 0} true;
    $i281 := $load.i8($M.1, $p280);
    goto corral_source_split_6053;

  corral_source_split_6053:
    assume {:verifier.code 0} true;
    $p282 := $i2p.i64.ref($i277);
    goto corral_source_split_6054;

  corral_source_split_6054:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p282, $i281);
    goto corral_source_split_6055;

  corral_source_split_6055:
    assume {:verifier.code 0} true;
    $i283 := $p2i.ref.i64($p0);
    call {:si_unique_call 2555} {:cexpr "__cil_tmp163"} boogie_si_record_i64($i283);
    goto corral_source_split_6056;

  corral_source_split_6056:
    assume {:verifier.code 0} true;
    $i284 := $add.i64($i283, 24);
    call {:si_unique_call 2556} {:cexpr "__cil_tmp164"} boogie_si_record_i64($i284);
    goto corral_source_split_6057;

  corral_source_split_6057:
    assume {:verifier.code 0} true;
    $p285 := $i2p.i64.ref($i284);
    goto corral_source_split_6058;

  corral_source_split_6058:
    assume {:verifier.code 0} true;
    $p286 := $load.ref($M.1, $p285);
    goto corral_source_split_6059;

  corral_source_split_6059:
    assume {:verifier.code 0} true;
    $i287 := $mul.i32($i178, 512);
    call {:si_unique_call 2557} {:cexpr "__cil_tmp166"} boogie_si_record_i32($i287);
    goto corral_source_split_6060;

  corral_source_split_6060:
    assume {:verifier.code 0} true;
    $i288 := $p2i.ref.i64($p0);
    call {:si_unique_call 2558} {:cexpr "__cil_tmp168"} boogie_si_record_i64($i288);
    goto corral_source_split_6061;

  corral_source_split_6061:
    assume {:verifier.code 0} true;
    $i289 := $add.i64($i288, 356);
    call {:si_unique_call 2559} {:cexpr "__cil_tmp169"} boogie_si_record_i64($i289);
    goto corral_source_split_6062;

  corral_source_split_6062:
    assume {:verifier.code 0} true;
    $p290 := $i2p.i64.ref($i289);
    goto corral_source_split_6063;

  corral_source_split_6063:
    assume {:verifier.code 0} true;
    $i291 := $load.i32($M.1, $p290);
    call {:si_unique_call 2560} {:cexpr "__cil_tmp170"} boogie_si_record_i32($i291);
    goto corral_source_split_6064;

  corral_source_split_6064:
    assume {:verifier.code 0} true;
    $i292 := $mul.i32($i291, $i51);
    call {:si_unique_call 2561} {:cexpr "__cil_tmp171"} boogie_si_record_i32($i292);
    goto corral_source_split_6065;

  corral_source_split_6065:
    assume {:verifier.code 0} true;
    $i293 := $add.i32($i292, $i287);
    call {:si_unique_call 2562} {:cexpr "__cil_tmp172"} boogie_si_record_i32($i293);
    goto corral_source_split_6066;

  corral_source_split_6066:
    assume {:verifier.code 0} true;
    $i294 := $zext.i32.i64($i293);
    call {:si_unique_call 2563} {:cexpr "__cil_tmp173"} boogie_si_record_i64($i294);
    goto corral_source_split_6067;

  corral_source_split_6067:
    assume {:verifier.code 0} true;
    $p295 := $bitcast.ref.ref($p9);
    goto corral_source_split_6068;

  corral_source_split_6068:
    assume {:verifier.code 0} true;
    $p296 := $bitcast.ref.ref($p5);
    goto corral_source_split_6069;

  corral_source_split_6069:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2564} vslice_dummy_var_131 := inftl_write($p286, $i294, 512, $p6, $p295, $p296);
    goto corral_source_split_6070;

  corral_source_split_6070:
    assume {:verifier.code 0} true;
    $i188 := $i178;
    goto $bb70;

  $bb70:
    assume {:verifier.code 0} true;
    goto corral_source_split_5941;

  corral_source_split_5941:
    assume {:verifier.code 0} true;
    $i298 := $add.i32($i188, 1);
    call {:si_unique_call 2504} {:cexpr "block"} boogie_si_record_i32($i298);
    goto corral_source_split_5942;

  corral_source_split_5942:
    assume {:verifier.code 0} true;
    $i299 := $load.i32($M.1, $p174);
    call {:si_unique_call 2505} {:cexpr "__cil_tmp178"} boogie_si_record_i32($i299);
    goto corral_source_split_5943;

  corral_source_split_5943:
    assume {:verifier.code 0} true;
    $i300 := $udiv.i32($i299, 512);
    call {:si_unique_call 2506} {:cexpr "__cil_tmp179"} boogie_si_record_i32($i300);
    goto corral_source_split_5944;

  corral_source_split_5944:
    assume {:verifier.code 0} true;
    $i301 := $ult.i32($i298, $i300);
    goto corral_source_split_5945;

  corral_source_split_5945:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb90, $bb91;

  $bb91:
    assume !($i301 == 1);
    goto corral_source_split_6072;

  corral_source_split_6072:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb90:
    assume $i301 == 1;
    assume {:verifier.code 0} true;
    $i178 := $i298;
    goto $bb90_dummy;

  $bb78:
    assume $i224 == 1;
    goto corral_source_split_5981;

  corral_source_split_5981:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2524} $i225 := mtd_is_bitflip($i223);
    call {:si_unique_call 2525} {:cexpr "tmp___4"} boogie_si_record_i32($i225);
    goto corral_source_split_5982;

  corral_source_split_5982:
    assume {:verifier.code 0} true;
    $i226 := $eq.i32($i225, 0);
    goto corral_source_split_5983;

  corral_source_split_5983:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb80, $bb81;

  $bb81:
    assume !($i226 == 1);
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb80:
    assume $i226 == 1;
    goto corral_source_split_5985;

  corral_source_split_5985:
    assume {:verifier.code 0} true;
    $i227 := $mul.i32($i178, 512);
    call {:si_unique_call 2526} {:cexpr "__cil_tmp132"} boogie_si_record_i32($i227);
    goto corral_source_split_5986;

  corral_source_split_5986:
    assume {:verifier.code 0} true;
    $i228 := $sext.i32.i64($i178);
    goto corral_source_split_5987;

  corral_source_split_5987:
    assume {:verifier.code 0} true;
    $i229 := $mul.i64($i228, 2);
    call {:si_unique_call 2527} {:cexpr "__cil_tmp134"} boogie_si_record_i64($i229);
    goto corral_source_split_5988;

  corral_source_split_5988:
    assume {:verifier.code 0} true;
    $p230 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5989;

  corral_source_split_5989:
    assume {:verifier.code 0} true;
    $i231 := $p2i.ref.i64($p230);
    goto corral_source_split_5990;

  corral_source_split_5990:
    assume {:verifier.code 0} true;
    $i232 := $add.i64($i231, $i229);
    call {:si_unique_call 2528} {:cexpr "__cil_tmp135"} boogie_si_record_i64($i232);
    goto corral_source_split_5991;

  corral_source_split_5991:
    assume {:verifier.code 0} true;
    $p233 := $i2p.i64.ref($i232);
    goto corral_source_split_5992;

  corral_source_split_5992:
    assume {:verifier.code 0} true;
    $i234 := $load.i16($M.1, $p233);
    call {:si_unique_call 2529} {:cexpr "__cil_tmp136"} boogie_si_record_i16($i234);
    goto corral_source_split_5993;

  corral_source_split_5993:
    assume {:verifier.code 0} true;
    $i235 := $zext.i16.i32($i234);
    call {:si_unique_call 2530} {:cexpr "__cil_tmp137"} boogie_si_record_i32($i235);
    goto corral_source_split_5994;

  corral_source_split_5994:
    assume {:verifier.code 0} true;
    $i236 := $p2i.ref.i64($p0);
    call {:si_unique_call 2531} {:cexpr "__cil_tmp138"} boogie_si_record_i64($i236);
    goto corral_source_split_5995;

  corral_source_split_5995:
    assume {:verifier.code 0} true;
    $i237 := $add.i64($i236, 356);
    call {:si_unique_call 2532} {:cexpr "__cil_tmp139"} boogie_si_record_i64($i237);
    goto corral_source_split_5996;

  corral_source_split_5996:
    assume {:verifier.code 0} true;
    $p238 := $i2p.i64.ref($i237);
    goto corral_source_split_5997;

  corral_source_split_5997:
    assume {:verifier.code 0} true;
    $i239 := $load.i32($M.1, $p238);
    call {:si_unique_call 2533} {:cexpr "__cil_tmp140"} boogie_si_record_i32($i239);
    goto corral_source_split_5998;

  corral_source_split_5998:
    assume {:verifier.code 0} true;
    $i240 := $mul.i32($i239, $i235);
    call {:si_unique_call 2534} {:cexpr "__cil_tmp141"} boogie_si_record_i32($i240);
    goto corral_source_split_5999;

  corral_source_split_5999:
    assume {:verifier.code 0} true;
    $i241 := $add.i32($i240, $i227);
    call {:si_unique_call 2535} {:cexpr "__cil_tmp142"} boogie_si_record_i32($i241);
    goto corral_source_split_6000;

  corral_source_split_6000:
    assume {:verifier.code 0} true;
    $i242 := $zext.i32.i64($i241);
    call {:si_unique_call 2536} {:cexpr "__cil_tmp143"} boogie_si_record_i64($i242);
    goto corral_source_split_6001;

  corral_source_split_6001:
    assume {:verifier.code 0} true;
    $p243 := $bitcast.ref.ref($p9);
    goto corral_source_split_6002;

  corral_source_split_6002:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2537} $i244 := mtd_read($p15, $i242, 512, $p6, $p243);
    call {:si_unique_call 2538} {:cexpr "ret"} boogie_si_record_i32($i244);
    goto corral_source_split_6003;

  corral_source_split_6003:
    assume {:verifier.code 0} true;
    $i245 := $ne.i32($i244, $sub.i32(0, 5));
    goto corral_source_split_6004;

  corral_source_split_6004:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i245 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb82:
    assume $i245 == 1;
    goto corral_source_split_6006;

  corral_source_split_6006:
    assume {:verifier.code 0} true;
    $p246 := $bitcast.ref.ref($p10);
    goto corral_source_split_6007;

  corral_source_split_6007:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, $p246, .str);
    goto corral_source_split_6008;

  corral_source_split_6008:
    assume {:verifier.code 0} true;
    $i247 := $p2i.ref.i64($p10);
    goto corral_source_split_6009;

  corral_source_split_6009:
    assume {:verifier.code 0} true;
    $i248 := $add.i64($i247, 8);
    call {:si_unique_call 2539} {:cexpr "__cil_tmp146"} boogie_si_record_i64($i248);
    goto corral_source_split_6010;

  corral_source_split_6010:
    assume {:verifier.code 0} true;
    $p249 := $i2p.i64.ref($i248);
    goto corral_source_split_6011;

  corral_source_split_6011:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p249, .str.53);
    goto corral_source_split_6012;

  corral_source_split_6012:
    assume {:verifier.code 0} true;
    $i250 := $p2i.ref.i64($p10);
    goto corral_source_split_6013;

  corral_source_split_6013:
    assume {:verifier.code 0} true;
    $i251 := $add.i64($i250, 16);
    call {:si_unique_call 2540} {:cexpr "__cil_tmp147"} boogie_si_record_i64($i251);
    goto corral_source_split_6014;

  corral_source_split_6014:
    assume {:verifier.code 0} true;
    $p252 := $i2p.i64.ref($i251);
    goto corral_source_split_6015;

  corral_source_split_6015:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p252, .str.31);
    goto corral_source_split_6016;

  corral_source_split_6016:
    assume {:verifier.code 0} true;
    $i253 := $p2i.ref.i64($p10);
    goto corral_source_split_6017;

  corral_source_split_6017:
    assume {:verifier.code 0} true;
    $i254 := $add.i64($i253, 24);
    call {:si_unique_call 2541} {:cexpr "__cil_tmp148"} boogie_si_record_i64($i254);
    goto corral_source_split_6018;

  corral_source_split_6018:
    assume {:verifier.code 0} true;
    $p255 := $i2p.i64.ref($i254);
    goto corral_source_split_6019;

  corral_source_split_6019:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, $p255, .str.58);
    goto corral_source_split_6020;

  corral_source_split_6020:
    assume {:verifier.code 0} true;
    $i256 := $p2i.ref.i64($p10);
    goto corral_source_split_6021;

  corral_source_split_6021:
    assume {:verifier.code 0} true;
    $i257 := $add.i64($i256, 32);
    call {:si_unique_call 2542} {:cexpr "__cil_tmp149"} boogie_si_record_i64($i257);
    goto corral_source_split_6022;

  corral_source_split_6022:
    assume {:verifier.code 0} true;
    $p258 := $i2p.i64.ref($i257);
    goto corral_source_split_6023;

  corral_source_split_6023:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, $p258, 373);
    goto corral_source_split_6024;

  corral_source_split_6024:
    assume {:verifier.code 0} true;
    $i259 := $p2i.ref.i64($p10);
    goto corral_source_split_6025;

  corral_source_split_6025:
    assume {:verifier.code 0} true;
    $i260 := $add.i64($i259, 35);
    call {:si_unique_call 2543} {:cexpr "__cil_tmp150"} boogie_si_record_i64($i260);
    goto corral_source_split_6026;

  corral_source_split_6026:
    assume {:verifier.code 0} true;
    $p261 := $i2p.i64.ref($i260);
    goto corral_source_split_6027;

  corral_source_split_6027:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p261, 0);
    goto corral_source_split_6028;

  corral_source_split_6028:
    assume {:verifier.code 0} true;
    $i262 := $p2i.ref.i64($p10);
    goto corral_source_split_6029;

  corral_source_split_6029:
    assume {:verifier.code 0} true;
    $i263 := $add.i64($i262, 35);
    call {:si_unique_call 2544} {:cexpr "__cil_tmp151"} boogie_si_record_i64($i263);
    goto corral_source_split_6030;

  corral_source_split_6030:
    assume {:verifier.code 0} true;
    $p264 := $i2p.i64.ref($i263);
    goto corral_source_split_6031;

  corral_source_split_6031:
    assume {:verifier.code 0} true;
    $i265 := $load.i8($M.1, $p264);
    call {:si_unique_call 2545} {:cexpr "__cil_tmp152"} boogie_si_record_i8($i265);
    goto corral_source_split_6032;

  corral_source_split_6032:
    assume {:verifier.code 0} true;
    $i266 := $zext.i8.i64($i265);
    call {:si_unique_call 2546} {:cexpr "__cil_tmp153"} boogie_si_record_i64($i266);
    goto corral_source_split_6033;

  corral_source_split_6033:
    assume {:verifier.code 0} true;
    $i267 := $and.i64($i266, 1);
    call {:si_unique_call 2547} {:cexpr "__cil_tmp154"} boogie_si_record_i64($i267);
    goto corral_source_split_6034;

  corral_source_split_6034:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2548} $i268 := __builtinx_expect.i64.i64($i267, 0);
    goto corral_source_split_6035;

  corral_source_split_6035:
    assume {:verifier.code 0} true;
    $i269 := $sext.i32.i64($i268);
    call {:si_unique_call 2549} {:cexpr "tmp___3"} boogie_si_record_i64($i269);
    goto corral_source_split_6036;

  corral_source_split_6036:
    assume {:verifier.code 0} true;
    $i270 := $ne.i64($i269, 0);
    goto corral_source_split_6037;

  corral_source_split_6037:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i270 == 1);
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb84:
    assume $i270 == 1;
    goto corral_source_split_6039;

  corral_source_split_6039:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2550} vslice_dummy_var_130 := __dynamic_pr_debug.ref.ref($p10, .str.58);
    goto corral_source_split_6040;

  corral_source_split_6040:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb75:
    assume $i205 == 1;
    goto corral_source_split_5959;

  corral_source_split_5959:
    assume {:verifier.code 0} true;
    $i188 := $i178;
    goto $bb70;

  $bb71:
    assume $i196 == 1;
    goto corral_source_split_5947;

  corral_source_split_5947:
    assume {:verifier.code 0} true;
    $i188 := $i178;
    goto $bb70;

  $bb68:
    assume $i187 == 1;
    goto corral_source_split_5929;

  corral_source_split_5929:
    assume {:verifier.code 0} true;
    $i188 := $i178;
    goto $bb70;

  $bb60:
    assume $i170 == 1;
    goto corral_source_split_5905;

  corral_source_split_5905:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2489} vslice_dummy_var_129 := __dynamic_pr_debug.ref.ref.i32.i32($p8, .str.57, $i1, $i51);
    goto corral_source_split_5906;

  corral_source_split_5906:
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb8:
    assume $i59 == 1;
    goto corral_source_split_5737;

  corral_source_split_5737:
    assume {:verifier.code 0} true;
    $i60, $i61 := 10000, $i51;
    goto $bb11;

  $bb11:
    call $i62, $i63, $p64, $i65, $i66, $i67, $i69, $i70, $p71, $i72, $i73, $p74, $i75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $i87, $i88, $i89, $i90, $p91, $i92, $i93, $i94, $i95, $p96, $i97, $i98, $i100, $i101, $p102, $i103, $i104, $i105, $i106, $p107, $i108, $i109, $i110, $i99, $i111, $i112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i120, $p121, $i122, $i123, $p124, $i125, $i126, $p127, $i78, $i129, $i130, $i131, $i132, $i68, $i133, $i134, $i136, $i137, $i138, $p139, $p140, $p141, $i142, $i143, $i144, $i145, $i60, $i61, vslice_dummy_var_127 := INFTL_foldchain_loop_$bb11($p0, $p3, $p4, $p5, $p6, $p15, $p57, $i62, $i63, $p64, $i65, $i66, $i67, $i69, $i70, $p71, $i72, $i73, $p74, $i75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $i87, $i88, $i89, $i90, $p91, $i92, $i93, $i94, $i95, $p96, $i97, $i98, $i100, $i101, $p102, $i103, $i104, $i105, $i106, $p107, $i108, $i109, $i110, $i99, $i111, $i112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i120, $p121, $i122, $i123, $p124, $i125, $i126, $p127, $i78, $i129, $i130, $i131, $i132, $i68, $i133, $i134, $i136, $i137, $i138, $p139, $p140, $p141, $i142, $i143, $i144, $i145, $i60, $i61, vslice_dummy_var_127);
    goto $bb11_last;

  corral_source_split_5739:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i62 := $p2i.ref.i64($p0);
    call {:si_unique_call 2434} {:cexpr "__cil_tmp80"} boogie_si_record_i64($i62);
    goto corral_source_split_5741;

  corral_source_split_5741:
    assume {:verifier.code 0} true;
    $i63 := $add.i64($i62, 356);
    call {:si_unique_call 2435} {:cexpr "__cil_tmp81"} boogie_si_record_i64($i63);
    goto corral_source_split_5742;

  corral_source_split_5742:
    assume {:verifier.code 0} true;
    $p64 := $i2p.i64.ref($i63);
    goto corral_source_split_5743;

  corral_source_split_5743:
    assume {:verifier.code 0} true;
    $i65 := $load.i32($M.1, $p64);
    call {:si_unique_call 2436} {:cexpr "__cil_tmp82"} boogie_si_record_i32($i65);
    goto corral_source_split_5744;

  corral_source_split_5744:
    assume {:verifier.code 0} true;
    $i66 := $udiv.i32($i65, 512);
    call {:si_unique_call 2437} {:cexpr "__cil_tmp83"} boogie_si_record_i32($i66);
    goto corral_source_split_5745;

  corral_source_split_5745:
    assume {:verifier.code 0} true;
    $i67 := $ult.i32(0, $i66);
    goto corral_source_split_5746;

  corral_source_split_5746:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    assume !($i67 == 1);
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    $i133 := $sub.i32($i60, 1);
    call {:si_unique_call 2470} {:cexpr "silly"} boogie_si_record_i32($i133);
    goto corral_source_split_5854;

  corral_source_split_5854:
    assume {:verifier.code 0} true;
    $i134 := $eq.i32($i60, 0);
    goto corral_source_split_5855;

  corral_source_split_5855:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    $i136 := $zext.i32.i64($i61);
    call {:si_unique_call 2472} {:cexpr "__cil_tmp85"} boogie_si_record_i64($i136);
    goto corral_source_split_5860;

  corral_source_split_5860:
    assume {:verifier.code 0} true;
    $i137 := $p2i.ref.i64($p0);
    call {:si_unique_call 2473} {:cexpr "__cil_tmp86"} boogie_si_record_i64($i137);
    goto corral_source_split_5861;

  corral_source_split_5861:
    assume {:verifier.code 0} true;
    $i138 := $add.i64($i137, 544);
    call {:si_unique_call 2474} {:cexpr "__cil_tmp87"} boogie_si_record_i64($i138);
    goto corral_source_split_5862;

  corral_source_split_5862:
    assume {:verifier.code 0} true;
    $p139 := $i2p.i64.ref($i138);
    goto corral_source_split_5863;

  corral_source_split_5863:
    assume {:verifier.code 0} true;
    $p140 := $load.ref($M.1, $p139);
    goto corral_source_split_5864;

  corral_source_split_5864:
    assume {:verifier.code 0} true;
    $p141 := $add.ref($p140, $mul.ref($i136, 2));
    goto corral_source_split_5865;

  corral_source_split_5865:
    assume {:verifier.code 0} true;
    $i142 := $load.i16($M.1, $p141);
    call {:si_unique_call 2475} {:cexpr "__cil_tmp90"} boogie_si_record_i16($i142);
    goto corral_source_split_5866;

  corral_source_split_5866:
    assume {:verifier.code 0} true;
    $i143 := $zext.i16.i32($i142);
    call {:si_unique_call 2476} {:cexpr "thisEUN"} boogie_si_record_i32($i143);
    goto corral_source_split_5867;

  corral_source_split_5867:
    assume {:verifier.code 0} true;
    $i144 := $load.i32($M.1, $p57);
    call {:si_unique_call 2477} {:cexpr "__cil_tmp93"} boogie_si_record_i32($i144);
    goto corral_source_split_5868;

  corral_source_split_5868:
    assume {:verifier.code 0} true;
    $i145 := $ugt.i32($i144, $i143);
    goto corral_source_split_5869;

  corral_source_split_5869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb57, $bb58;

  $bb58:
    assume !($i145 == 1);
    goto corral_source_split_5871;

  corral_source_split_5871:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb57:
    assume $i145 == 1;
    assume {:verifier.code 0} true;
    $i60, $i61 := $i133, $i143;
    goto $bb57_dummy;

  $bb54:
    assume $i134 == 1;
    goto corral_source_split_5857;

  corral_source_split_5857:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2471} vslice_dummy_var_128 := printk.ref.i32(.str.41, $i1);
    goto corral_source_split_5858;

  corral_source_split_5858:
    assume {:verifier.code 0} true;
    $i54 := $sub.i16(0, 1);
    goto $bb6;

  $bb13:
    assume $i67 == 1;
    goto corral_source_split_5748;

  corral_source_split_5748:
    assume {:verifier.code 0} true;
    $i68 := 0;
    goto $bb16;

  $bb16:
    call $i69, $i70, $p71, $i72, $i73, $p74, $i75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $i87, $i88, $i89, $i90, $p91, $i92, $i93, $i94, $i95, $p96, $i97, $i98, $i100, $i101, $p102, $i103, $i104, $i105, $i106, $p107, $i108, $i109, $i110, $i99, $i111, $i112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i120, $p121, $i122, $i123, $p124, $i125, $i126, $p127, $i78, $i129, $i130, $i131, $i132, $i68, vslice_dummy_var_127 := INFTL_foldchain_loop_$bb16($p0, $p3, $p4, $p5, $p6, $p15, $p64, $i69, $i70, $p71, $i72, $i73, $p74, $i75, $i76, $i77, $i79, $i80, $p81, $i82, $i83, $p84, $i85, $i86, $i87, $i88, $i89, $i90, $p91, $i92, $i93, $i94, $i95, $p96, $i97, $i98, $i100, $i101, $p102, $i103, $i104, $i105, $i106, $p107, $i108, $i109, $i110, $i99, $i111, $i112, $i113, $i114, $i115, $i116, $p117, $i118, $i119, $i120, $p121, $i122, $i123, $p124, $i125, $i126, $p127, $i78, $i129, $i130, $i131, $i132, $i68, $i61, vslice_dummy_var_127);
    goto $bb16_last;

  corral_source_split_5750:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i69 := $sext.i32.i64($i68);
    goto corral_source_split_5752;

  corral_source_split_5752:
    assume {:verifier.code 0} true;
    $i70 := $mul.i64($i69, 2);
    call {:si_unique_call 2438} {:cexpr "__cil_tmp50"} boogie_si_record_i64($i70);
    goto corral_source_split_5753;

  corral_source_split_5753:
    assume {:verifier.code 0} true;
    $p71 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5754;

  corral_source_split_5754:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p71);
    goto corral_source_split_5755;

  corral_source_split_5755:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, $i70);
    call {:si_unique_call 2439} {:cexpr "__cil_tmp51"} boogie_si_record_i64($i73);
    goto corral_source_split_5756;

  corral_source_split_5756:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_5757;

  corral_source_split_5757:
    assume {:verifier.code 0} true;
    $i75 := $load.i16($M.1, $p74);
    call {:si_unique_call 2440} {:cexpr "__cil_tmp52"} boogie_si_record_i16($i75);
    goto corral_source_split_5758;

  corral_source_split_5758:
    assume {:verifier.code 0} true;
    $i76 := $zext.i16.i32($i75);
    call {:si_unique_call 2441} {:cexpr "__cil_tmp53"} boogie_si_record_i32($i76);
    goto corral_source_split_5759;

  corral_source_split_5759:
    assume {:verifier.code 0} true;
    $i77 := $ne.i32($i76, 65535);
    goto corral_source_split_5760;

  corral_source_split_5760:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i77 == 1);
    goto corral_source_split_5764;

  corral_source_split_5764:
    assume {:verifier.code 0} true;
    $i79 := $sext.i32.i64($i68);
    goto corral_source_split_5765;

  corral_source_split_5765:
    assume {:verifier.code 0} true;
    $i80 := $mul.i64($i79, 1);
    call {:si_unique_call 2442} {:cexpr "__cil_tmp54"} boogie_si_record_i64($i80);
    goto corral_source_split_5766;

  corral_source_split_5766:
    assume {:verifier.code 0} true;
    $p81 := $add.ref($add.ref($p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5767;

  corral_source_split_5767:
    assume {:verifier.code 0} true;
    $i82 := $p2i.ref.i64($p81);
    goto corral_source_split_5768;

  corral_source_split_5768:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, $i80);
    call {:si_unique_call 2443} {:cexpr "__cil_tmp55"} boogie_si_record_i64($i83);
    goto corral_source_split_5769;

  corral_source_split_5769:
    assume {:verifier.code 0} true;
    $p84 := $i2p.i64.ref($i83);
    goto corral_source_split_5770;

  corral_source_split_5770:
    assume {:verifier.code 0} true;
    $i85 := $load.i8($M.1, $p84);
    call {:si_unique_call 2444} {:cexpr "__cil_tmp56"} boogie_si_record_i8($i85);
    goto corral_source_split_5771;

  corral_source_split_5771:
    assume {:verifier.code 0} true;
    $i86 := $zext.i8.i32($i85);
    call {:si_unique_call 2445} {:cexpr "__cil_tmp57"} boogie_si_record_i32($i86);
    goto corral_source_split_5772;

  corral_source_split_5772:
    assume {:verifier.code 0} true;
    $i87 := $ne.i32($i86, 0);
    goto corral_source_split_5773;

  corral_source_split_5773:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i88 := $mul.i32($i68, 512);
    call {:si_unique_call 2449} {:cexpr "__cil_tmp58"} boogie_si_record_i32($i88);
    goto corral_source_split_5783;

  corral_source_split_5783:
    assume {:verifier.code 0} true;
    $i89 := $p2i.ref.i64($p0);
    call {:si_unique_call 2450} {:cexpr "__cil_tmp60"} boogie_si_record_i64($i89);
    goto corral_source_split_5784;

  corral_source_split_5784:
    assume {:verifier.code 0} true;
    $i90 := $add.i64($i89, 356);
    call {:si_unique_call 2451} {:cexpr "__cil_tmp61"} boogie_si_record_i64($i90);
    goto corral_source_split_5785;

  corral_source_split_5785:
    assume {:verifier.code 0} true;
    $p91 := $i2p.i64.ref($i90);
    goto corral_source_split_5786;

  corral_source_split_5786:
    assume {:verifier.code 0} true;
    $i92 := $load.i32($M.1, $p91);
    call {:si_unique_call 2452} {:cexpr "__cil_tmp62"} boogie_si_record_i32($i92);
    goto corral_source_split_5787;

  corral_source_split_5787:
    assume {:verifier.code 0} true;
    $i93 := $mul.i32($i92, $i61);
    call {:si_unique_call 2453} {:cexpr "__cil_tmp63"} boogie_si_record_i32($i93);
    goto corral_source_split_5788;

  corral_source_split_5788:
    assume {:verifier.code 0} true;
    $i94 := $add.i32($i93, $i88);
    call {:si_unique_call 2454} {:cexpr "__cil_tmp64"} boogie_si_record_i32($i94);
    goto corral_source_split_5789;

  corral_source_split_5789:
    assume {:verifier.code 0} true;
    $i95 := $zext.i32.i64($i94);
    call {:si_unique_call 2455} {:cexpr "__cil_tmp65"} boogie_si_record_i64($i95);
    goto corral_source_split_5790;

  corral_source_split_5790:
    assume {:verifier.code 0} true;
    $p96 := $bitcast.ref.ref($p5);
    goto corral_source_split_5791;

  corral_source_split_5791:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2456} $i97 := inftl_read_oob($p15, $i95, 16, $p6, $p96);
    call {:si_unique_call 2457} {:cexpr "tmp___0"} boogie_si_record_i32($i97);
    goto corral_source_split_5792;

  corral_source_split_5792:
    assume {:verifier.code 0} true;
    $i98 := $slt.i32($i97, 0);
    goto corral_source_split_5793;

  corral_source_split_5793:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i98 == 1);
    goto corral_source_split_5797;

  corral_source_split_5797:
    assume {:verifier.code 0} true;
    $i100 := $p2i.ref.i64($p5);
    goto corral_source_split_5798;

  corral_source_split_5798:
    assume {:verifier.code 0} true;
    $i101 := $add.i64($i100, 7);
    call {:si_unique_call 2458} {:cexpr "__cil_tmp68"} boogie_si_record_i64($i101);
    goto corral_source_split_5799;

  corral_source_split_5799:
    assume {:verifier.code 0} true;
    $p102 := $i2p.i64.ref($i101);
    goto corral_source_split_5800;

  corral_source_split_5800:
    assume {:verifier.code 0} true;
    $i103 := $load.i8($M.1, $p102);
    call {:si_unique_call 2459} {:cexpr "__cil_tmp69"} boogie_si_record_i8($i103);
    goto corral_source_split_5801;

  corral_source_split_5801:
    assume {:verifier.code 0} true;
    $i104 := $zext.i8.i32($i103);
    call {:si_unique_call 2460} {:cexpr "__cil_tmp70"} boogie_si_record_i32($i104);
    goto corral_source_split_5802;

  corral_source_split_5802:
    assume {:verifier.code 0} true;
    $i105 := $p2i.ref.i64($p5);
    goto corral_source_split_5803;

  corral_source_split_5803:
    assume {:verifier.code 0} true;
    $i106 := $add.i64($i105, 6);
    call {:si_unique_call 2461} {:cexpr "__cil_tmp72"} boogie_si_record_i64($i106);
    goto corral_source_split_5804;

  corral_source_split_5804:
    assume {:verifier.code 0} true;
    $p107 := $i2p.i64.ref($i106);
    goto corral_source_split_5805;

  corral_source_split_5805:
    assume {:verifier.code 0} true;
    $i108 := $load.i8($M.1, $p107);
    call {:si_unique_call 2462} {:cexpr "__cil_tmp73"} boogie_si_record_i8($i108);
    goto corral_source_split_5806;

  corral_source_split_5806:
    assume {:verifier.code 0} true;
    $i109 := $zext.i8.i32($i108);
    call {:si_unique_call 2463} {:cexpr "__cil_tmp74"} boogie_si_record_i32($i109);
    goto corral_source_split_5807;

  corral_source_split_5807:
    assume {:verifier.code 0} true;
    $i110 := $or.i32($i109, $i104);
    call {:si_unique_call 2464} {:cexpr "__cil_tmp75"} boogie_si_record_i32($i110);
    assume {:verifier.code 0} true;
    $i99 := $i110;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5809;

  corral_source_split_5809:
    assume {:verifier.code 0} true;
    $i111 := $eq.i32($i99, 255);
    goto corral_source_split_5810;

  corral_source_split_5810:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i111 == 1);
    goto corral_source_split_5814;

  corral_source_split_5814:
    assume {:verifier.code 0} true;
    $i112 := $eq.i32($i99, 17);
    goto corral_source_split_5815;

  corral_source_split_5815:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i112 == 1);
    goto corral_source_split_5819;

  corral_source_split_5819:
    assume {:verifier.code 0} true;
    $i113 := $eq.i32($i99, 85);
    goto corral_source_split_5820;

  corral_source_split_5820:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i113 == 1);
    goto corral_source_split_5824;

  corral_source_split_5824:
    assume {:verifier.code 0} true;
    $i114 := $eq.i32($i99, 0);
    goto corral_source_split_5825;

  corral_source_split_5825:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i114 == 1);
    goto corral_source_split_5838;

  corral_source_split_5838:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2469} vslice_dummy_var_127 := printk.ref.i32.i32.i32(.str.56, $i68, $i61, $i99);
    goto corral_source_split_5848;

  corral_source_split_5848:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    $i78 := $i68;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5775;

  corral_source_split_5775:
    assume {:verifier.code 0} true;
    $i129 := $add.i32($i78, 1);
    call {:si_unique_call 2446} {:cexpr "block"} boogie_si_record_i32($i129);
    goto corral_source_split_5776;

  corral_source_split_5776:
    assume {:verifier.code 0} true;
    $i130 := $load.i32($M.1, $p64);
    call {:si_unique_call 2447} {:cexpr "__cil_tmp82"} boogie_si_record_i32($i130);
    goto corral_source_split_5777;

  corral_source_split_5777:
    assume {:verifier.code 0} true;
    $i131 := $udiv.i32($i130, 512);
    call {:si_unique_call 2448} {:cexpr "__cil_tmp83"} boogie_si_record_i32($i131);
    goto corral_source_split_5778;

  corral_source_split_5778:
    assume {:verifier.code 0} true;
    $i132 := $ult.i32($i129, $i131);
    goto corral_source_split_5779;

  corral_source_split_5779:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i132 == 1);
    goto corral_source_split_5852;

  corral_source_split_5852:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb51:
    assume $i132 == 1;
    assume {:verifier.code 0} true;
    $i68 := $i129;
    goto $bb51_dummy;

  $bb37:
    assume $i114 == 1;
    goto corral_source_split_5836;

  corral_source_split_5836:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i122 := $sext.i32.i64($i68);
    goto corral_source_split_5840;

  corral_source_split_5840:
    assume {:verifier.code 0} true;
    $i123 := $mul.i64($i122, 1);
    call {:si_unique_call 2467} {:cexpr "__cil_tmp78"} boogie_si_record_i64($i123);
    goto corral_source_split_5841;

  corral_source_split_5841:
    assume {:verifier.code 0} true;
    $p124 := $add.ref($add.ref($p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5842;

  corral_source_split_5842:
    assume {:verifier.code 0} true;
    $i125 := $p2i.ref.i64($p124);
    goto corral_source_split_5843;

  corral_source_split_5843:
    assume {:verifier.code 0} true;
    $i126 := $add.i64($i125, $i123);
    call {:si_unique_call 2468} {:cexpr "__cil_tmp79"} boogie_si_record_i64($i126);
    goto corral_source_split_5844;

  corral_source_split_5844:
    assume {:verifier.code 0} true;
    $p127 := $i2p.i64.ref($i126);
    goto corral_source_split_5845;

  corral_source_split_5845:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, $p127, 1);
    goto corral_source_split_5846;

  corral_source_split_5846:
    assume {:verifier.code 0} true;
    $i78 := $i68;
    goto $bb20;

  $bb34:
    assume $i113 == 1;
    goto corral_source_split_5822;

  corral_source_split_5822:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i115 := $sext.i32.i64($i68);
    goto corral_source_split_5827;

  corral_source_split_5827:
    assume {:verifier.code 0} true;
    $i116 := $mul.i64($i115, 2);
    call {:si_unique_call 2465} {:cexpr "__cil_tmp76"} boogie_si_record_i64($i116);
    goto corral_source_split_5828;

  corral_source_split_5828:
    assume {:verifier.code 0} true;
    $p117 := $add.ref($add.ref($p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5829;

  corral_source_split_5829:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p117);
    goto corral_source_split_5830;

  corral_source_split_5830:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, $i116);
    call {:si_unique_call 2466} {:cexpr "__cil_tmp77"} boogie_si_record_i64($i119);
    goto corral_source_split_5831;

  corral_source_split_5831:
    assume {:verifier.code 0} true;
    $i120 := $trunc.i32.i16($i61);
    goto corral_source_split_5832;

  corral_source_split_5832:
    assume {:verifier.code 0} true;
    $p121 := $i2p.i64.ref($i119);
    goto corral_source_split_5833;

  corral_source_split_5833:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, $p121, $i120);
    goto corral_source_split_5834;

  corral_source_split_5834:
    assume {:verifier.code 0} true;
    $i78 := $i68;
    goto $bb20;

  $bb31:
    assume $i112 == 1;
    goto corral_source_split_5817;

  corral_source_split_5817:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb28:
    assume $i111 == 1;
    goto corral_source_split_5812;

  corral_source_split_5812:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb25:
    assume $i98 == 1;
    goto corral_source_split_5795;

  corral_source_split_5795:
    assume {:verifier.code 0} true;
    $i99 := 17;
    goto $bb27;

  $bb21:
    assume $i87 == 1;
    goto corral_source_split_5781;

  corral_source_split_5781:
    assume {:verifier.code 0} true;
    $i78 := $i68;
    goto $bb20;

  $bb18:
    assume $i77 == 1;
    goto corral_source_split_5762;

  corral_source_split_5762:
    assume {:verifier.code 0} true;
    $i78 := $i68;
    goto $bb20;

  $bb4:
    assume $i52 == 1;
    goto corral_source_split_5726;

  corral_source_split_5726:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2430} vslice_dummy_var_126 := printk.ref.i32(.str.55, $i1);
    goto corral_source_split_5727;

  corral_source_split_5727:
    assume {:verifier.code 0} true;
    $i54 := $sub.i16(0, 1);
    goto $bb6;

  $bb1:
    assume $i40 == 1;
    goto corral_source_split_5709;

  corral_source_split_5709:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2422} vslice_dummy_var_125 := __dynamic_pr_debug.ref.ref.ref.i32.i32($p7, .str.54, $p0, $i1, $i2);
    goto corral_source_split_5710;

  corral_source_split_5710:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb102_dummy:
    assume false;
    return;

  $bb100_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_6131;

  $bb111_dummy:
    assume false;
    return;

  $bb96_last:
    assume {:verifier.code 0} true;
    $i328 := $zext.i32.i64($i1);
    call {:si_unique_call 2577} {:cexpr "__cil_tmp191"} boogie_si_record_i64($i328);
    goto corral_source_split_6109;

  $bb90_dummy:
    assume false;
    return;

  $bb66_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5917;

  $bb51_dummy:
    assume false;
    return;

  $bb16_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5750;

  $bb57_dummy:
    assume false;
    return;

  $bb11_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5739;
}



const mtd_is_bitflip: ref;

axiom mtd_is_bitflip == $sub.ref(0, 171729);

procedure mtd_is_bitflip($i0: i32) returns ($r: i32);
  free requires assertsPassed;



implementation mtd_is_bitflip($i0: i32) returns ($r: i32)
{
  var $i1: i1;
  var $i2: i32;

  $bb0:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2613} {:cexpr "mtd_is_bitflip:arg:err"} boogie_si_record_i32($i0);
    goto corral_source_split_6194;

  corral_source_split_6194:
    assume {:verifier.code 0} true;
    $i1 := $eq.i32($i0, $sub.i32(0, 117));
    goto corral_source_split_6195;

  corral_source_split_6195:
    assume {:verifier.code 0} true;
    $i2 := $zext.i1.i32($i1);
    goto corral_source_split_6196;

  corral_source_split_6196:
    assume {:verifier.code 0} true;
    $r := $i2;
    return;
}



const main: ref;

axiom main == $sub.ref(0, 172761);

procedure main();
  free requires assertsPassed;
  modifies $M.4, $M.1, $M.3, $M.0, $M.2, $M.6, $M.32, $M.33, $CurrAddr, $M.7, $M.8, $M.9, $M.10, assertsPassed;



implementation main()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i13: i32;
  var $i14: i1;
  var vslice_dummy_var_133: i32;
  var vslice_dummy_var_134: i32;
  var vslice_dummy_var_135: i32;

  $bb0:
    call {:si_unique_call 2614} $initialize();
    goto corral_source_split_6198;

  corral_source_split_6198:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2615} {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
    goto corral_source_split_6199;

  corral_source_split_6199:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2616} {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
    goto corral_source_split_6200;

  corral_source_split_6200:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2617} ldv_initialize();
    goto corral_source_split_6201;

  corral_source_split_6201:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2618} $i0 := init_inftl();
    call {:si_unique_call 2619} {:cexpr "tmp"} boogie_si_record_i32($i0);
    goto corral_source_split_6202;

  corral_source_split_6202:
    assume {:verifier.code 0} true;
    $i1 := $ne.i32($i0, 0);
    goto corral_source_split_6203;

  corral_source_split_6203:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i1 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2621} $i2 := __VERIFIER_nondet_int();
    call {:si_unique_call 2622} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
    call {:si_unique_call 2623} {:cexpr "tmp___1"} boogie_si_record_i32($i2);
    goto corral_source_split_6209;

  corral_source_split_6209:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i2, 0);
    goto corral_source_split_6210;

  corral_source_split_6210:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb5, $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume !($i3 == 1);
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2635} cleanup_inftl();
    goto corral_source_split_6258;

  corral_source_split_6258:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2620} ldv_check_final_state();
    goto corral_source_split_6207;

  corral_source_split_6207:
    assume {:verifier.code 0} true;
    return;

  $bb5:
    assume $i3 == 1;
    goto corral_source_split_6212;

  corral_source_split_6212:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    call $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, vslice_dummy_var_133, vslice_dummy_var_134, vslice_dummy_var_135 := main_loop_$bb8($i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, vslice_dummy_var_133, vslice_dummy_var_134, vslice_dummy_var_135);
    goto $bb8_last;

  $bb9:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2624} $i4 := __VERIFIER_nondet_int();
    call {:si_unique_call 2625} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i4);
    call {:si_unique_call 2626} {:cexpr "tmp___0"} boogie_si_record_i32($i4);
    goto corral_source_split_6214;

  corral_source_split_6214:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_6215;

  corral_source_split_6215:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i5 == 1);
    goto corral_source_split_6219;

  corral_source_split_6219:
    assume {:verifier.code 0} true;
    $i6 := $eq.i32($i4, 1);
    goto corral_source_split_6220;

  corral_source_split_6220:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i6 == 1);
    goto corral_source_split_6226;

  corral_source_split_6226:
    assume {:verifier.code 0} true;
    $i7 := $eq.i32($i4, 2);
    goto corral_source_split_6227;

  corral_source_split_6227:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i7 == 1);
    goto corral_source_split_6233;

  corral_source_split_6233:
    assume {:verifier.code 0} true;
    $i8 := $eq.i32($i4, 3);
    goto corral_source_split_6234;

  corral_source_split_6234:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i8 == 1);
    goto corral_source_split_6240;

  corral_source_split_6240:
    assume {:verifier.code 0} true;
    $i9 := $eq.i32($i4, 4);
    goto corral_source_split_6241;

  corral_source_split_6241:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i9 == 1);
    goto corral_source_split_6247;

  corral_source_split_6247:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2632} $i13 := __VERIFIER_nondet_int();
    call {:si_unique_call 2633} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i13);
    call {:si_unique_call 2634} {:cexpr "tmp___1"} boogie_si_record_i32($i13);
    goto corral_source_split_6253;

  corral_source_split_6253:
    assume {:verifier.code 0} true;
    $i14 := $ne.i32($i13, 0);
    goto corral_source_split_6254;

  corral_source_split_6254:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i14 == 1);
    goto corral_source_split_6256;

  corral_source_split_6256:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb37:
    assume {:verifier.code 0} true;
    assume $i14 == 1;
    goto $bb37_dummy;

  $bb22:
    assume $i9 == 1;
    goto corral_source_split_6245;

  corral_source_split_6245:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2631} inftl_remove_dev($u2);
    goto corral_source_split_6249;

  corral_source_split_6249:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb19:
    assume $i8 == 1;
    goto corral_source_split_6238;

  corral_source_split_6238:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2630} inftl_add_mtd($u6, $u7);
    goto SeqInstr_34, SeqInstr_35;

  SeqInstr_35:
    assume assertsPassed;
    goto SeqInstr_36;

  SeqInstr_36:
    goto corral_source_split_6243;

  corral_source_split_6243:
    assume {:verifier.code 0} true;
    goto $bb29;

  SeqInstr_34:
    assume !assertsPassed;
    return;

  $bb16:
    assume $i7 == 1;
    goto corral_source_split_6231;

  corral_source_split_6231:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2629} vslice_dummy_var_135 := inftl_writeblock($u2, $u4, $u5);
    goto corral_source_split_6236;

  corral_source_split_6236:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb13:
    assume $i6 == 1;
    goto corral_source_split_6224;

  corral_source_split_6224:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2628} vslice_dummy_var_134 := inftl_readblock($u2, $u4, $u5);
    goto corral_source_split_6229;

  corral_source_split_6229:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb10:
    assume $i5 == 1;
    goto corral_source_split_6217;

  corral_source_split_6217:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2627} vslice_dummy_var_133 := inftl_getgeo($u2, $u3);
    goto corral_source_split_6222;

  corral_source_split_6222:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_6205;

  corral_source_split_6205:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb37_dummy:
    assume false;
    return;

  $bb8_last:
    assume {:verifier.code 0} true;
    goto $bb9;
}



const ldv_initialize: ref;

axiom ldv_initialize == $sub.ref(0, 173793);

procedure ldv_initialize();
  free requires assertsPassed;



implementation ldv_initialize()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_6260;

  corral_source_split_6260:
    assume {:verifier.code 0} true;
    return;
}



const init_inftl: ref;

axiom init_inftl == $sub.ref(0, 174825);

procedure init_inftl() returns ($r: i32);
  free requires assertsPassed;



implementation init_inftl() returns ($r: i32)
{
  var $i0: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_6262;

  corral_source_split_6262:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2636} $i0 := register_mtd_blktrans(inftl_tr);
    call {:si_unique_call 2637} {:cexpr "tmp"} boogie_si_record_i32($i0);
    goto corral_source_split_6263;

  corral_source_split_6263:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;
}



const cleanup_inftl: ref;

axiom cleanup_inftl == $sub.ref(0, 175857);

procedure cleanup_inftl();
  free requires assertsPassed;



implementation cleanup_inftl()
{
  var vslice_dummy_var_136: i32;

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_6265;

  corral_source_split_6265:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2638} vslice_dummy_var_136 := deregister_mtd_blktrans(inftl_tr);
    goto corral_source_split_6266;

  corral_source_split_6266:
    assume {:verifier.code 0} true;
    return;
}



const ldv_check_final_state: ref;

axiom ldv_check_final_state == $sub.ref(0, 176889);

procedure ldv_check_final_state();
  free requires assertsPassed;



implementation ldv_check_final_state()
{

  $bb0:
    assume {:verifier.code 0} true;
    goto corral_source_split_6268;

  corral_source_split_6268:
    assume {:verifier.code 0} true;
    return;
}



const deregister_mtd_blktrans: ref;

axiom deregister_mtd_blktrans == $sub.ref(0, 177921);

procedure deregister_mtd_blktrans($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation deregister_mtd_blktrans($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6270;

  corral_source_split_6270:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2639} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 2640} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_6271;

  corral_source_split_6271:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const register_mtd_blktrans: ref;

axiom register_mtd_blktrans == $sub.ref(0, 178953);

procedure register_mtd_blktrans($p0: ref) returns ($r: i32);
  free requires assertsPassed;



implementation register_mtd_blktrans($p0: ref) returns ($r: i32)
{
  var $i1: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6273;

  corral_source_split_6273:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2641} $i1 := __VERIFIER_nondet_int();
    call {:si_unique_call 2642} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
    goto corral_source_split_6274;

  corral_source_split_6274:
    assume {:verifier.code 0} true;
    $r := $i1;
    return;
}



const __VERIFIER_assume: ref;

axiom __VERIFIER_assume == $sub.ref(0, 179985);

procedure __VERIFIER_assume($i0: i32);
  free requires assertsPassed;



implementation __VERIFIER_assume($i0: i32)
{

  $bb0:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2643} {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
    goto corral_source_split_6276;

  corral_source_split_6276:
    assume {:verifier.code 1} true;
    goto corral_source_split_6277;

  corral_source_split_6277:
    assume {:verifier.code 1} true;
    assume $i0 != $0;
    goto corral_source_split_6278;

  corral_source_split_6278:
    assume {:verifier.code 0} true;
    return;
}



const __SMACK_code: ref;

axiom __SMACK_code == $sub.ref(0, 181017);

procedure __SMACK_code.ref($p0: ref);



procedure __SMACK_code.ref.i32($p0: ref, p.1: i32);



const __SMACK_dummy: ref;

axiom __SMACK_dummy == $sub.ref(0, 182049);

procedure __SMACK_dummy($i0: i32);



const __VERIFIER_error: ref;

axiom __VERIFIER_error == $sub.ref(0, 183081);

procedure __VERIFIER_error();
  free requires assertsPassed;
  modifies assertsPassed;



implementation __VERIFIER_error()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6280;

  corral_source_split_6280:
    assume {:verifier.code 1} true;
    goto assert_rewrite_dummy_block_0, assert_rewrite_dummy_block_1;

  assert_rewrite_dummy_block_1:
    assume false;
    return;

  assert_rewrite_dummy_block_0:
    assume {:corral_assert_pt} !false;
    assertsPassed := false;
    goto SeqInstr_37, SeqInstr_38;

  SeqInstr_38:
    assume assertsPassed;
    goto SeqInstr_39;

  SeqInstr_39:
    goto assert_rewrite_dummy_block_2;

  assert_rewrite_dummy_block_2:
    goto corral_source_split_6281;

  corral_source_split_6281:
    assume {:verifier.code 0} true;
    return;

  SeqInstr_37:
    assume !assertsPassed;
    return;
}



const __SMACK_check_overflow: ref;

axiom __SMACK_check_overflow == $sub.ref(0, 184113);

procedure __SMACK_check_overflow($i0: i32);



const __SMACK_nondet_char: ref;

axiom __SMACK_nondet_char == $sub.ref(0, 185145);

procedure __SMACK_nondet_char() returns ($r: i8);



const __SMACK_nondet_signed_char: ref;

axiom __SMACK_nondet_signed_char == $sub.ref(0, 186177);

procedure __SMACK_nondet_signed_char() returns ($r: i8);



const __SMACK_nondet_unsigned_char: ref;

axiom __SMACK_nondet_unsigned_char == $sub.ref(0, 187209);

procedure __SMACK_nondet_unsigned_char() returns ($r: i8);



const __SMACK_nondet_short: ref;

axiom __SMACK_nondet_short == $sub.ref(0, 188241);

procedure __SMACK_nondet_short() returns ($r: i16);



const __SMACK_nondet_signed_short: ref;

axiom __SMACK_nondet_signed_short == $sub.ref(0, 189273);

procedure __SMACK_nondet_signed_short() returns ($r: i16);



const __SMACK_nondet_signed_short_int: ref;

axiom __SMACK_nondet_signed_short_int == $sub.ref(0, 190305);

procedure __SMACK_nondet_signed_short_int() returns ($r: i16);



const __SMACK_nondet_unsigned_short: ref;

axiom __SMACK_nondet_unsigned_short == $sub.ref(0, 191337);

procedure __SMACK_nondet_unsigned_short() returns ($r: i16);



const __SMACK_nondet_unsigned_short_int: ref;

axiom __SMACK_nondet_unsigned_short_int == $sub.ref(0, 192369);

procedure __SMACK_nondet_unsigned_short_int() returns ($r: i16);



const __VERIFIER_nondet_int: ref;

axiom __VERIFIER_nondet_int == $sub.ref(0, 193401);

procedure __VERIFIER_nondet_int() returns ($r: i32);
  free requires assertsPassed;



implementation __VERIFIER_nondet_int() returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6283;

  corral_source_split_6283:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2644} $i0 := __SMACK_nondet_int();
    call {:si_unique_call 2645} {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
    call {:si_unique_call 2646} {:cexpr "x"} boogie_si_record_i32($i0);
    goto corral_source_split_6284;

  corral_source_split_6284:
    assume {:verifier.code 0} true;
    $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
    goto corral_source_split_6285;

  corral_source_split_6285:
    assume {:verifier.code 0} true;
    $i2 := 0;
    assume {:branchcond $i1} true;
    goto $bb1, $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    assume !($i1 == 1);
    goto $bb3;

  $bb3:
    assume {:verifier.code 1} true;
    goto corral_source_split_6289;

  corral_source_split_6289:
    assume {:verifier.code 1} true;
    $i4 := $zext.i1.i32($i2);
    goto corral_source_split_6290;

  corral_source_split_6290:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2647} __VERIFIER_assume($i4);
    goto corral_source_split_6291;

  corral_source_split_6291:
    assume {:verifier.code 0} true;
    $r := $i0;
    return;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_6287;

  corral_source_split_6287:
    assume {:verifier.code 1} true;
    $i3 := $sle.i32($i0, 2147483647);
    assume {:verifier.code 0} true;
    $i2 := $i3;
    goto $bb3;
}



const __SMACK_nondet_int: ref;

axiom __SMACK_nondet_int == $sub.ref(0, 194433);

procedure __SMACK_nondet_int() returns ($r: i32);



const __SMACK_nondet_signed_int: ref;

axiom __SMACK_nondet_signed_int == $sub.ref(0, 195465);

procedure __SMACK_nondet_signed_int() returns ($r: i32);



const __SMACK_nondet_unsigned: ref;

axiom __SMACK_nondet_unsigned == $sub.ref(0, 196497);

procedure __SMACK_nondet_unsigned() returns ($r: i32);



const __SMACK_nondet_unsigned_int: ref;

axiom __SMACK_nondet_unsigned_int == $sub.ref(0, 197529);

procedure __SMACK_nondet_unsigned_int() returns ($r: i32);



const __SMACK_nondet_long: ref;

axiom __SMACK_nondet_long == $sub.ref(0, 198561);

procedure __SMACK_nondet_long() returns ($r: i64);



const __SMACK_nondet_long_int: ref;

axiom __SMACK_nondet_long_int == $sub.ref(0, 199593);

procedure __SMACK_nondet_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long: ref;

axiom __SMACK_nondet_signed_long == $sub.ref(0, 200625);

procedure __SMACK_nondet_signed_long() returns ($r: i64);



const __SMACK_nondet_signed_long_int: ref;

axiom __SMACK_nondet_signed_long_int == $sub.ref(0, 201657);

procedure __SMACK_nondet_signed_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long: ref;

axiom __SMACK_nondet_unsigned_long == $sub.ref(0, 202689);

procedure __SMACK_nondet_unsigned_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_int: ref;

axiom __SMACK_nondet_unsigned_long_int == $sub.ref(0, 203721);

procedure __SMACK_nondet_unsigned_long_int() returns ($r: i64);



const __SMACK_nondet_long_long: ref;

axiom __SMACK_nondet_long_long == $sub.ref(0, 204753);

procedure __SMACK_nondet_long_long() returns ($r: i64);



const __SMACK_nondet_long_long_int: ref;

axiom __SMACK_nondet_long_long_int == $sub.ref(0, 205785);

procedure __SMACK_nondet_long_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long_long: ref;

axiom __SMACK_nondet_signed_long_long == $sub.ref(0, 206817);

procedure __SMACK_nondet_signed_long_long() returns ($r: i64);



const __SMACK_nondet_signed_long_long_int: ref;

axiom __SMACK_nondet_signed_long_long_int == $sub.ref(0, 207849);

procedure __SMACK_nondet_signed_long_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long: ref;

axiom __SMACK_nondet_unsigned_long_long == $sub.ref(0, 208881);

procedure __SMACK_nondet_unsigned_long_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long_int: ref;

axiom __SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 209913);

procedure __SMACK_nondet_unsigned_long_long_int() returns ($r: i64);



const __VERIFIER_nondet_pointer: ref;

axiom __VERIFIER_nondet_pointer == $sub.ref(0, 210945);

procedure __VERIFIER_nondet_pointer() returns ($r: ref);
  free requires assertsPassed;



implementation __VERIFIER_nondet_pointer() returns ($r: ref)
{
  var $p0: ref;

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6293;

  corral_source_split_6293:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2648} $p0 := __VERIFIER_nondet();
    call {:si_unique_call 2649} {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
    goto corral_source_split_6294;

  corral_source_split_6294:
    assume {:verifier.code 0} true;
    $r := $p0;
    return;
}



const __VERIFIER_nondet: ref;

axiom __VERIFIER_nondet == $sub.ref(0, 211977);

procedure __VERIFIER_nondet() returns ($r: ref);



const __SMACK_decls: ref;

axiom __SMACK_decls == $sub.ref(0, 213009);

function {:inline} $bitcast.ref.ref(i: ref) : ref
{
  i
}

function {:inline} $zext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 1bv8)
}

function {:inline} $zext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 1bv16)
}

function {:inline} $zext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 1bv24)
}

function {:inline} $zext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 1bv32)
}

function {:inline} $zext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1bv40)
}

function {:inline} $zext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 1bv48)
}

function {:inline} $zext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 1bv56)
}

function {:inline} $zext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 1bv64)
}

function {:inline} $zext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1bv80)
}

function {:inline} $zext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 1bv88)
}

function {:inline} $zext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 1bv96)
}

function {:inline} $zext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 1bv128)
}

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) : bv128;

function {:inline} $sext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 255bv8)
}

function {:inline} $sext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 65535bv16)
}

function {:inline} $sext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 16777215bv24)
}

function {:inline} $sext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 4294967295bv32)
}

function {:inline} $sext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1099511627775bv40)
}

function {:inline} $sext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 281474976710655bv48)
}

function {:inline} $sext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 72057594037927935bv56)
}

function {:inline} $sext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 18446744073709551615bv64)
}

function {:inline} $sext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1208925819614629174706175bv80)
}

function {:inline} $sext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88)
}

function {:inline} $sext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96)
}

function {:inline} $sext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128)
}

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) : bv56;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) : bv128;

function {:builtin "div"} $div(i1: int, i2: int) : int;

function {:builtin "mod"} $mod(i1: int, i2: int) : int;

function {:builtin "rem"} $rem(i1: int, i2: int) : int;

function {:inline} $min(i1: int, i2: int) : int
{
  (if i1 < i2 then i1 else i2)
}

function {:inline} $max(i1: int, i2: int) : int
{
  (if i1 > i2 then i1 else i2)
}

axiom $and.i1(0, 0) == 0;

axiom $and.i1(0, 1) == 0;

axiom $and.i1(1, 0) == 0;

axiom $and.i1(1, 1) == 1;

axiom $or.i1(0, 0) == 0;

axiom $or.i1(0, 1) == 1;

axiom $or.i1(1, 0) == 1;

axiom $or.i1(1, 1) == 1;

axiom $xor.i1(0, 0) == 0;

axiom $xor.i1(0, 1) == 1;

axiom $xor.i1(1, 0) == 1;

axiom $xor.i1(1, 1) == 0;

axiom $and.i32(32, 16) == 0;

function $fp(ipart: int, fpart: int, epart: int) : float;

function $fadd.float(i1: float, i2: float) : float;

function $fsub.float(i1: float, i2: float) : float;

function $fmul.float(i1: float, i2: float) : float;

function $fdiv.float(i1: float, i2: float) : float;

function $frem.float(i1: float, i2: float) : float;

function {:inline} $ffalse.float.bool(i1: float, i2: float) : bool
{
  false
}

function {:inline} $ftrue.float.bool(i1: float, i2: float) : bool
{
  true
}

function $foeq.float.bool(i1: float, i2: float) : bool;

function $foge.float.bool(i1: float, i2: float) : bool;

function $fogt.float.bool(i1: float, i2: float) : bool;

function $fole.float.bool(i1: float, i2: float) : bool;

function $folt.float.bool(i1: float, i2: float) : bool;

function $fone.float.bool(i1: float, i2: float) : bool;

function $ford.float.bool(i1: float, i2: float) : bool;

function $fueq.float.bool(i1: float, i2: float) : bool;

function $fuge.float.bool(i1: float, i2: float) : bool;

function $fugt.float.bool(i1: float, i2: float) : bool;

function $fule.float.bool(i1: float, i2: float) : bool;

function $fult.float.bool(i1: float, i2: float) : bool;

function $fune.float.bool(i1: float, i2: float) : bool;

function $funo.float.bool(i1: float, i2: float) : bool;

function $fp2si.float.i128(i: float) : i128;

function $fp2ui.float.i128(i: float) : i128;

function $fp2si.float.i96(i: float) : i96;

function $fp2ui.float.i96(i: float) : i96;

function $fp2si.float.i88(i: float) : i88;

function $fp2ui.float.i88(i: float) : i88;

function $fp2si.float.i80(i: float) : i80;

function $fp2ui.float.i80(i: float) : i80;

function $fp2si.float.i64(i: float) : i64;

function $fp2ui.float.i64(i: float) : i64;

function $fp2si.float.i56(i: float) : i56;

function $fp2ui.float.i56(i: float) : i56;

function $fp2si.float.i48(i: float) : i48;

function $fp2ui.float.i48(i: float) : i48;

function $fp2si.float.i40(i: float) : i40;

function $fp2ui.float.i40(i: float) : i40;

function $fp2si.float.i32(i: float) : i32;

function $fp2ui.float.i32(i: float) : i32;

function $fp2si.float.i24(i: float) : i24;

function $fp2ui.float.i24(i: float) : i24;

function $fp2si.float.i16(i: float) : i16;

function $fp2ui.float.i16(i: float) : i16;

function $fp2si.float.i8(i: float) : i8;

function $fp2ui.float.i8(i: float) : i8;

function $fp2si.float.i1(i: float) : i1;

function $fp2ui.float.i1(i: float) : i1;

function $si2fp.i128.float(i: i128) : float;

function $ui2fp.i128.float(i: i128) : float;

function $si2fp.i96.float(i: i96) : float;

function $ui2fp.i96.float(i: i96) : float;

function $si2fp.i88.float(i: i88) : float;

function $ui2fp.i88.float(i: i88) : float;

function $si2fp.i80.float(i: i80) : float;

function $ui2fp.i80.float(i: i80) : float;

function $si2fp.i64.float(i: i64) : float;

function $ui2fp.i64.float(i: i64) : float;

function $si2fp.i56.float(i: i56) : float;

function $ui2fp.i56.float(i: i56) : float;

function $si2fp.i48.float(i: i48) : float;

function $ui2fp.i48.float(i: i48) : float;

function $si2fp.i40.float(i: i40) : float;

function $ui2fp.i40.float(i: i40) : float;

function $si2fp.i32.float(i: i32) : float;

function $ui2fp.i32.float(i: i32) : float;

function $si2fp.i24.float(i: i24) : float;

function $ui2fp.i24.float(i: i24) : float;

function $si2fp.i16.float(i: i16) : float;

function $ui2fp.i16.float(i: i16) : float;

function $si2fp.i8.float(i: i8) : float;

function $ui2fp.i8.float(i: i8) : float;

function $si2fp.i1.float(i: i1) : float;

function $ui2fp.i1.float(i: i1) : float;

function $fp2si.float.bv128(i: float) : bv128;

function $fp2ui.float.bv128(i: float) : bv128;

function $fp2si.float.bv96(i: float) : bv96;

function $fp2ui.float.bv96(i: float) : bv96;

function $fp2si.float.bv88(i: float) : bv88;

function $fp2ui.float.bv88(i: float) : bv88;

function $fp2si.float.bv80(i: float) : bv80;

function $fp2ui.float.bv80(i: float) : bv80;

function $fp2si.float.bv64(i: float) : bv64;

function $fp2ui.float.bv64(i: float) : bv64;

function $fp2si.float.bv56(i: float) : bv56;

function $fp2ui.float.bv56(i: float) : bv56;

function $fp2si.float.bv48(i: float) : bv48;

function $fp2ui.float.bv48(i: float) : bv48;

function $fp2si.float.bv40(i: float) : bv40;

function $fp2ui.float.bv40(i: float) : bv40;

function $fp2si.float.bv32(i: float) : bv32;

function $fp2ui.float.bv32(i: float) : bv32;

function $fp2si.float.bv24(i: float) : bv24;

function $fp2ui.float.bv24(i: float) : bv24;

function $fp2si.float.bv16(i: float) : bv16;

function $fp2ui.float.bv16(i: float) : bv16;

function $fp2si.float.bv8(i: float) : bv8;

function $fp2ui.float.bv8(i: float) : bv8;

function $fp2si.float.bv1(i: float) : bv1;

function $fp2ui.float.bv1(i: float) : bv1;

function $si2fp.bv128.float(i: bv128) : float;

function $ui2fp.bv128.float(i: bv128) : float;

function $si2fp.bv96.float(i: bv96) : float;

function $ui2fp.bv96.float(i: bv96) : float;

function $si2fp.bv88.float(i: bv88) : float;

function $ui2fp.bv88.float(i: bv88) : float;

function $si2fp.bv80.float(i: bv80) : float;

function $ui2fp.bv80.float(i: bv80) : float;

function $si2fp.bv64.float(i: bv64) : float;

function $ui2fp.bv64.float(i: bv64) : float;

function $si2fp.bv56.float(i: bv56) : float;

function $ui2fp.bv56.float(i: bv56) : float;

function $si2fp.bv48.float(i: bv48) : float;

function $ui2fp.bv48.float(i: bv48) : float;

function $si2fp.bv40.float(i: bv40) : float;

function $ui2fp.bv40.float(i: bv40) : float;

function $si2fp.bv32.float(i: bv32) : float;

function $ui2fp.bv32.float(i: bv32) : float;

function $si2fp.bv24.float(i: bv24) : float;

function $ui2fp.bv24.float(i: bv24) : float;

function $si2fp.bv16.float(i: bv16) : float;

function $ui2fp.bv16.float(i: bv16) : float;

function $si2fp.bv8.float(i: bv8) : float;

function $ui2fp.bv8.float(i: bv8) : float;

function $si2fp.bv1.float(i: bv1) : float;

function $ui2fp.bv1.float(i: bv1) : float;

function $fptrunc.float.float(i: float) : float;

function $fpext.float.float(i: float) : float;

function $bitcast.float.i1(i: float) : i1;

function $bitcast.float.bv1(i: float) : bv1;

function $bitcast.i1.float(i: i1) : float;

function $bitcast.bv1.float(i: bv1) : float;

function $bitcast.float.i8(i: float) : i8;

function $bitcast.float.bv8(i: float) : bv8;

function $bitcast.i8.float(i: i8) : float;

function $bitcast.bv8.float(i: bv8) : float;

function $bitcast.float.i16(i: float) : i16;

function $bitcast.float.bv16(i: float) : bv16;

function $bitcast.i16.float(i: i16) : float;

function $bitcast.bv16.float(i: bv16) : float;

function $bitcast.float.i32(i: float) : i32;

function $bitcast.float.bv32(i: float) : bv32;

function $bitcast.i32.float(i: i32) : float;

function $bitcast.bv32.float(i: bv32) : float;

function $bitcast.float.i64(i: float) : i64;

function $bitcast.float.bv64(i: float) : bv64;

function $bitcast.i64.float(i: i64) : float;

function $bitcast.bv64.float(i: bv64) : float;

function $bitcast.float.i80(i: float) : i80;

function $bitcast.float.bv80(i: float) : bv80;

function $bitcast.i80.float(i: i80) : float;

function $bitcast.bv80.float(i: bv80) : float;

const $GLOBALS_BOTTOM: ref;

const $EXTERNS_BOTTOM: ref;

const $MALLOC_TOP: ref;

function {:inline} $isExternal(p: ref) : bool
{
  $slt.ref.bool(p, $EXTERNS_BOTTOM)
}

function {:inline} $load.bytes.bv16(M: [ref]bv8, p: ref) : bv16
{
  $load.bytes.bv8(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv24(M: [ref]bv8, p: ref) : bv24
{
  $load.bytes.bv16(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv32(M: [ref]bv8, p: ref) : bv32
{
  $load.bytes.bv24(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv40(M: [ref]bv8, p: ref) : bv40
{
  $load.bytes.bv32(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv48(M: [ref]bv8, p: ref) : bv48
{
  $load.bytes.bv40(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv56(M: [ref]bv8, p: ref) : bv56
{
  $load.bytes.bv48(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv64(M: [ref]bv8, p: ref) : bv64
{
  $load.bytes.bv56(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv72(M: [ref]bv8, p: ref) : bv72
{
  $load.bytes.bv64(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv80(M: [ref]bv8, p: ref) : bv80
{
  $load.bytes.bv72(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv88(M: [ref]bv8, p: ref) : bv88
{
  $load.bytes.bv80(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv96(M: [ref]bv8, p: ref) : bv96
{
  $load.bytes.bv88(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv104(M: [ref]bv8, p: ref) : bv104
{
  $load.bytes.bv96(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv112(M: [ref]bv8, p: ref) : bv112
{
  $load.bytes.bv104(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv120(M: [ref]bv8, p: ref) : bv120
{
  $load.bytes.bv112(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv128(M: [ref]bv8, p: ref) : bv128
{
  $load.bytes.bv120(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $load.bytes.bv1(M: [ref]bv8, p: ref) : bv1
{
  $trunc.bv8.bv1(M[p])
}

function {:inline} $store.bytes.bv16(M: [ref]bv8, p: ref, v: bv16) : [ref]bv8
{
  $store.bytes.bv8(M, $add.ref(p, $1.ref), v[16:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv24(M: [ref]bv8, p: ref, v: bv24) : [ref]bv8
{
  $store.bytes.bv16(M, $add.ref(p, $1.ref), v[24:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv32(M: [ref]bv8, p: ref, v: bv32) : [ref]bv8
{
  $store.bytes.bv24(M, $add.ref(p, $1.ref), v[32:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv40(M: [ref]bv8, p: ref, v: bv40) : [ref]bv8
{
  $store.bytes.bv32(M, $add.ref(p, $1.ref), v[40:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv48(M: [ref]bv8, p: ref, v: bv48) : [ref]bv8
{
  $store.bytes.bv40(M, $add.ref(p, $1.ref), v[48:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv56(M: [ref]bv8, p: ref, v: bv56) : [ref]bv8
{
  $store.bytes.bv48(M, $add.ref(p, $1.ref), v[56:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv64(M: [ref]bv8, p: ref, v: bv64) : [ref]bv8
{
  $store.bytes.bv56(M, $add.ref(p, $1.ref), v[64:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv72(M: [ref]bv8, p: ref, v: bv72) : [ref]bv8
{
  $store.bytes.bv64(M, $add.ref(p, $1.ref), v[72:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv80(M: [ref]bv8, p: ref, v: bv80) : [ref]bv8
{
  $store.bytes.bv72(M, $add.ref(p, $1.ref), v[80:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv88(M: [ref]bv8, p: ref, v: bv88) : [ref]bv8
{
  $store.bytes.bv80(M, $add.ref(p, $1.ref), v[88:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv96(M: [ref]bv8, p: ref, v: bv96) : [ref]bv8
{
  $store.bytes.bv88(M, $add.ref(p, $1.ref), v[96:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv104(M: [ref]bv8, p: ref, v: bv104) : [ref]bv8
{
  $store.bytes.bv96(M, $add.ref(p, $1.ref), v[104:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv112(M: [ref]bv8, p: ref, v: bv112) : [ref]bv8
{
  $store.bytes.bv104(M, $add.ref(p, $1.ref), v[112:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv120(M: [ref]bv8, p: ref, v: bv120) : [ref]bv8
{
  $store.bytes.bv112(M, $add.ref(p, $1.ref), v[120:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv128(M: [ref]bv8, p: ref, v: bv128) : [ref]bv8
{
  $store.bytes.bv120(M, $add.ref(p, $1.ref), v[128:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:inline} $store.bytes.bv1(M: [ref]bv8, p: ref, v: bv1) : [ref]bv8
{
  M[p := $zext.bv1.bv8(v)]
}

function {:inline} $load.ref(M: [ref]ref, p: ref) : ref
{
  M[p]
}

function {:inline} $store.ref(M: [ref]ref, p: ref, v: ref) : [ref]ref
{
  M[p := v]
}

function {:inline} $load.float(M: [ref]float, p: ref) : float
{
  M[p]
}

function {:inline} $load.unsafe.float(M: [ref]i8, p: ref) : float
{
  $bitcast.i8.float(M[p])
}

function {:inline} $store.float(M: [ref]float, p: ref, v: float) : [ref]float
{
  M[p := v]
}

function {:inline} $store.unsafe.float(M: [ref]i8, p: ref, v: float) : [ref]i8
{
  M[p := $bitcast.float.i8(v)]
}

function {:inline} $load.bytes.float(M: [ref]bv8, p: ref) : float
{
  $bitcast.bv8.float(M[p])
}

function {:inline} $store.bytes.float(M: [ref]bv8, p: ref, v: float) : [ref]bv8
{
  M[p := $bitcast.float.bv8(v)]
}

type $mop;

procedure boogie_si_record_mop(m: $mop);



const $MOP: $mop;

function $extractvalue(p: int, i: int) : int;

procedure $alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $alloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 2650} p := $$alloc(n);
    return;
}



procedure $malloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation $malloc(n: ref) returns (p: ref)
{

  anon0:
    call {:si_unique_call 2651} p := $$alloc(n);
    return;
}



procedure $$alloc(n: ref) returns (p: ref);
  free requires assertsPassed;
  modifies $CurrAddr;



implementation {:ForceInline} $$alloc(n: ref) returns (p: ref)
{

  anon0:
    assume $sge.ref.bool(n, $0.ref);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} !$sgt.ref.bool(n, $0.ref);
    p := $0.ref;
    return;

  anon3_Then:
    assume {:partition} $sgt.ref.bool(n, $0.ref);
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
    return;
}



procedure $free(p: ref);



const __SMACK_top_decl: ref;

axiom __SMACK_top_decl == $sub.ref(0, 214041);

procedure __SMACK_top_decl.ref($p0: ref);



const __SMACK_init_func_memory_model: ref;

axiom __SMACK_init_func_memory_model == $sub.ref(0, 215073);

procedure __SMACK_init_func_memory_model();
  free requires assertsPassed;
  modifies $CurrAddr;



implementation __SMACK_init_func_memory_model()
{

  $bb0:
    assume {:verifier.code 1} true;
    goto corral_source_split_6296;

  corral_source_split_6296:
    assume {:verifier.code 1} true;
    $CurrAddr := $1024.ref;
    goto corral_source_split_6297;

  corral_source_split_6297:
    assume {:verifier.code 0} true;
    return;
}



const llvm.dbg.value: ref;

axiom llvm.dbg.value == $sub.ref(0, 216105);

procedure llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);



const __SMACK_static_init: ref;

axiom __SMACK_static_init == $sub.ref(0, 217137);

procedure __SMACK_static_init();
  free requires assertsPassed;
  modifies $M.6, $M.32, $M.33;



implementation __SMACK_static_init()
{

  $bb0:
    call {:si_unique_call 2652} {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
    $M.6 := 0;
    call {:si_unique_call 2653} {:cexpr "ldv_spin"} boogie_si_record_i32(0);
    $M.32 := $store.i8($M.32, .str.69, 68);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(1, 1)), 105);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(2, 1)), 115);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(3, 1)), 107);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(4, 1)), 79);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(5, 1)), 110);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(6, 1)), 67);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(7, 1)), 104);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(8, 1)), 105);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(9, 1)), 112);
    $M.32 := $store.i8($M.32, $add.ref($add.ref(.str.69, $mul.ref(0, 11)), $mul.ref(10, 1)), 0);
    $M.33 := $store.i8($M.33, .str.82, 66);
    $M.33 := $store.i8($M.33, $add.ref($add.ref(.str.82, $mul.ref(0, 6)), $mul.ref(1, 1)), 78);
    $M.33 := $store.i8($M.33, $add.ref($add.ref(.str.82, $mul.ref(0, 6)), $mul.ref(2, 1)), 65);
    $M.33 := $store.i8($M.33, $add.ref($add.ref(.str.82, $mul.ref(0, 6)), $mul.ref(3, 1)), 78);
    $M.33 := $store.i8($M.33, $add.ref($add.ref(.str.82, $mul.ref(0, 6)), $mul.ref(4, 1)), 68);
    $M.33 := $store.i8($M.33, $add.ref($add.ref(.str.82, $mul.ref(0, 6)), $mul.ref(5, 1)), 0);
    call {:si_unique_call 2654} {:cexpr "errno_global"} boogie_si_record_i32(0);
    return;
}



const devirtbounce: ref;

axiom devirtbounce == $sub.ref(0, 218169);

procedure devirtbounce(funcPtr: ref, arg: ref, arg1: i64, arg2: ref) returns ($r: i32);
  free requires assertsPassed;
  modifies $M.3, $M.1, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation devirtbounce(funcPtr: ref, arg: ref, arg1: i64, arg2: ref) returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;

  $bb0:
    $p0 := $bitcast.ref.ref(funcPtr);
    goto $bb1;

  $bb1:
    $i16 := $eq.ref(inftl_readblock, $p0);
    assume {:branchcond $i16} true;
    goto $bb13, $bb11;

  $bb11:
    assume !($i16 == 1);
    $i15 := $eq.ref(inftl_writeblock, $p0);
    assume {:branchcond $i15} true;
    goto $bb12, $bb9;

  $bb9:
    assume !($i15 == 1);
    $i14 := $eq.ref(inftl_readblock, $p0);
    assume true;
    goto $bb10, $bb7;

  $bb7:
    assume !($i14 == 1);
    $i13 := $eq.ref(inftl_writeblock, $p0);
    assume {:branchcond $i13} true;
    goto $bb8, $bb6;

  $bb6:
    assume !($i13 == 1);
    assume false;
    return;

  $bb8:
    assume $i13 == 1;
    goto $bb4;

  $bb4:
    $p7 := $bitcast.ref.ref(arg);
    $p8 := $bitcast.ref.ref(arg2);
    call {:si_unique_call 2657} $i9 := inftl_writeblock($p7, arg1, $p8);
    $r := $i9;
    return;

  $bb10:
    assume $i14 == 1;
    goto $bb5;

  $bb5:
    $p10 := $bitcast.ref.ref(arg);
    $p11 := $bitcast.ref.ref(arg2);
    call {:si_unique_call 2658} $i12 := inftl_readblock($p10, arg1, $p11);
    $r := $i12;
    return;

  $bb12:
    assume $i15 == 1;
    goto $bb4;

  $bb13:
    assume $i16 == 1;
    goto $bb5;
}



const devirtbounce.1: ref;

axiom devirtbounce.1 == $sub.ref(0, 219201);

procedure devirtbounce.1(funcPtr: ref, arg: ref, arg1: i32, arg2: i64);
  free requires assertsPassed;



implementation devirtbounce.1(funcPtr: ref, arg: ref, arg1: i32, arg2: i64)
{

  $bb0:
    goto $bb1;

  $bb1:
    return;
}



procedure $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src, dst), x)]);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M.dst[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M.dst[x]);
    return;
}



procedure $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);
  free requires assertsPassed;



implementation $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8)
{

  anon0:
    assume (forall x: ref :: $sle.ref.bool(dst, x) && $slt.ref.bool(x, $add.ref(dst, len)) ==> M.ret[x] == val);
    assume (forall x: ref :: $slt.ref.bool(x, dst) ==> M.ret[x] == M[x]);
    assume (forall x: ref :: $sle.ref.bool($add.ref(dst, len), x) ==> M.ret[x] == M[x]);
    return;
}



const $u0: ref;

const $u1: i16;

const $u2: ref;

const $u3: ref;

const $u4: i64;

const $u5: ref;

const $u6: ref;

const $u7: ref;

procedure boogie_si_record_i16(x: i16);



procedure boogie_si_record_i32(x: i32);



procedure boogie_si_record_i64(x: i64);



procedure boogie_si_record_i8(x: i8);



procedure boogie_si_record_ref(x: ref);



procedure $initialize();
  free requires assertsPassed;
  modifies $M.6, $M.32, $M.33, $CurrAddr;



implementation $initialize()
{

  anon0:
    call {:si_unique_call 2659} __SMACK_static_init();
    call {:si_unique_call 2660} __SMACK_init_func_memory_model();
    return;
}



function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $add.i1(i1: i1, i2: i1) : i1
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $sub.i1(i1: i1, i2: i1) : i1
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $mul.i1(i1: i1, i2: i1) : i1
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) : bv1;

function $shl.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) : bv1;

function $lshr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) : bv1;

function $ashr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) : bv1;

function $and.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) : bv1;

function $or.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) : bv1;

function $xor.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) : bv1;

function $nand.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ule.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ule.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $ule.i1(i1: i1, i2: i1) : i1
{
  (if $ule.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ult.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $ult.i1(i1: i1, i2: i1) : i1
{
  (if $ult.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $uge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $uge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $uge.i1(i1: i1, i2: i1) : i1
{
  (if $uge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ugt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $ugt.i1(i1: i1, i2: i1) : i1
{
  (if $ugt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sle.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sle.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $sle.i1(i1: i1, i2: i1) : i1
{
  (if $sle.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $slt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $slt.i1(i1: i1, i2: i1) : i1
{
  (if $slt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $sge.i1(i1: i1, i2: i1) : i1
{
  (if $sge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sgt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $sgt.i1(i1: i1, i2: i1) : i1
{
  (if $sgt.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 == i2
}

function {:inline} $eq.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $eq.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i1.bool(i1: i1, i2: i1) : bool
{
  i1 == i2
}

function {:inline} $eq.i1(i1: i1, i2: i1) : i1
{
  (if $eq.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 != i2
}

function {:inline} $ne.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ne.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i1.bool(i1: i1, i2: i1) : bool
{
  i1 != i2
}

function {:inline} $ne.i1(i1: i1, i2: i1) : i1
{
  (if $ne.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $smax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:inline} $umin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $umax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv1(i1: bv1) : bv1;

function $not.i1(i1: i1) : i1;

function {:inline} $load.i1(M: [ref]i1, p: ref) : i1
{
  M[p]
}

function {:inline} $load.bv1(M: [ref]bv1, p: ref) : bv1
{
  M[p]
}

function {:inline} $store.i1(M: [ref]i1, p: ref, v: i1) : [ref]i1
{
  M[p := v]
}

function {:inline} $store.bv1(M: [ref]bv1, p: ref, v: bv1) : [ref]bv1
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $add.i5(i1: i5, i2: i5) : i5
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $sub.i5(i1: i5, i2: i5) : i5
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $mul.i5(i1: i5, i2: i5) : i5
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsmod"} $smod.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsrem"} $srem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $srem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvudiv"} $udiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvurem"} $urem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $urem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvshl"} $shl.bv5(i1: bv5, i2: bv5) : bv5;

function $shl.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvlshr"} $lshr.bv5(i1: bv5, i2: bv5) : bv5;

function $lshr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvashr"} $ashr.bv5(i1: bv5, i2: bv5) : bv5;

function $ashr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvand"} $and.bv5(i1: bv5, i2: bv5) : bv5;

function $and.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvor"} $or.bv5(i1: bv5, i2: bv5) : bv5;

function $or.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvxor"} $xor.bv5(i1: bv5, i2: bv5) : bv5;

function $xor.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvnand"} $nand.bv5(i1: bv5, i2: bv5) : bv5;

function $nand.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvule"} $ule.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ule.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ule.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $ule.i5(i1: i5, i2: i5) : i1
{
  (if $ule.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ult.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ult.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $ult.i5(i1: i5, i2: i5) : i1
{
  (if $ult.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $uge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $uge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $uge.i5(i1: i5, i2: i5) : i1
{
  (if $uge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ugt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ugt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $ugt.i5(i1: i5, i2: i5) : i1
{
  (if $ugt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sle.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sle.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $sle.i5(i1: i5, i2: i5) : i1
{
  (if $sle.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $slt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $slt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $slt.i5(i1: i5, i2: i5) : i1
{
  (if $slt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $sge.i5(i1: i5, i2: i5) : i1
{
  (if $sge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sgt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sgt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $sgt.i5(i1: i5, i2: i5) : i1
{
  (if $sgt.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 == i2
}

function {:inline} $eq.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $eq.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i5.bool(i1: i5, i2: i5) : bool
{
  i1 == i2
}

function {:inline} $eq.i5(i1: i5, i2: i5) : i1
{
  (if $eq.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 != i2
}

function {:inline} $ne.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ne.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i5.bool(i1: i5, i2: i5) : bool
{
  i1 != i2
}

function {:inline} $ne.i5(i1: i5, i2: i5) : i1
{
  (if $ne.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $slt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $sgt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ult.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ugt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $smax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:inline} $umin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $umax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv5(i1: bv5) : bv5;

function $not.i5(i1: i5) : i5;

function {:inline} $load.i5(M: [ref]i5, p: ref) : i5
{
  M[p]
}

function {:inline} $load.bv5(M: [ref]bv5, p: ref) : bv5
{
  M[p]
}

function {:inline} $store.i5(M: [ref]i5, p: ref, v: i5) : [ref]i5
{
  M[p := v]
}

function {:inline} $store.bv5(M: [ref]bv5, p: ref, v: bv5) : [ref]bv5
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $add.i6(i1: i6, i2: i6) : i6
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $sub.i6(i1: i6, i2: i6) : i6
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $mul.i6(i1: i6, i2: i6) : i6
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsmod"} $smod.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsrem"} $srem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $srem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvudiv"} $udiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvurem"} $urem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $urem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvshl"} $shl.bv6(i1: bv6, i2: bv6) : bv6;

function $shl.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvlshr"} $lshr.bv6(i1: bv6, i2: bv6) : bv6;

function $lshr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvashr"} $ashr.bv6(i1: bv6, i2: bv6) : bv6;

function $ashr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvand"} $and.bv6(i1: bv6, i2: bv6) : bv6;

function $and.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvor"} $or.bv6(i1: bv6, i2: bv6) : bv6;

function $or.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvxor"} $xor.bv6(i1: bv6, i2: bv6) : bv6;

function $xor.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvnand"} $nand.bv6(i1: bv6, i2: bv6) : bv6;

function $nand.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvule"} $ule.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ule.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ule.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $ule.i6(i1: i6, i2: i6) : i1
{
  (if $ule.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ult.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ult.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $ult.i6(i1: i6, i2: i6) : i1
{
  (if $ult.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $uge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $uge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $uge.i6(i1: i6, i2: i6) : i1
{
  (if $uge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ugt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ugt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $ugt.i6(i1: i6, i2: i6) : i1
{
  (if $ugt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sle.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sle.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $sle.i6(i1: i6, i2: i6) : i1
{
  (if $sle.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $slt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $slt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $slt.i6(i1: i6, i2: i6) : i1
{
  (if $slt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $sge.i6(i1: i6, i2: i6) : i1
{
  (if $sge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sgt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sgt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $sgt.i6(i1: i6, i2: i6) : i1
{
  (if $sgt.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 == i2
}

function {:inline} $eq.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $eq.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i6.bool(i1: i6, i2: i6) : bool
{
  i1 == i2
}

function {:inline} $eq.i6(i1: i6, i2: i6) : i1
{
  (if $eq.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 != i2
}

function {:inline} $ne.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ne.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i6.bool(i1: i6, i2: i6) : bool
{
  i1 != i2
}

function {:inline} $ne.i6(i1: i6, i2: i6) : i1
{
  (if $ne.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $slt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $sgt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ult.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ugt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $smax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:inline} $umin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $umax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv6(i1: bv6) : bv6;

function $not.i6(i1: i6) : i6;

function {:inline} $load.i6(M: [ref]i6, p: ref) : i6
{
  M[p]
}

function {:inline} $load.bv6(M: [ref]bv6, p: ref) : bv6
{
  M[p]
}

function {:inline} $store.i6(M: [ref]i6, p: ref, v: i6) : [ref]i6
{
  M[p := v]
}

function {:inline} $store.bv6(M: [ref]bv6, p: ref, v: bv6) : [ref]bv6
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $add.i8(i1: i8, i2: i8) : i8
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $sub.i8(i1: i8, i2: i8) : i8
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $mul.i8(i1: i8, i2: i8) : i8
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) : bv8;

function $shl.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) : bv8;

function $lshr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) : bv8;

function $ashr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) : bv8;

function $and.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) : bv8;

function $or.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) : bv8;

function $xor.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) : bv8;

function $nand.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ule.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ule.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $ule.i8(i1: i8, i2: i8) : i1
{
  (if $ule.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ult.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ult.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $ult.i8(i1: i8, i2: i8) : i1
{
  (if $ult.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $uge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $uge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $uge.i8(i1: i8, i2: i8) : i1
{
  (if $uge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ugt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ugt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $ugt.i8(i1: i8, i2: i8) : i1
{
  (if $ugt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sle.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sle.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $sle.i8(i1: i8, i2: i8) : i1
{
  (if $sle.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $slt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $slt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $slt.i8(i1: i8, i2: i8) : i1
{
  (if $slt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $sge.i8(i1: i8, i2: i8) : i1
{
  (if $sge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sgt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sgt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $sgt.i8(i1: i8, i2: i8) : i1
{
  (if $sgt.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 == i2
}

function {:inline} $eq.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $eq.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i8.bool(i1: i8, i2: i8) : bool
{
  i1 == i2
}

function {:inline} $eq.i8(i1: i8, i2: i8) : i1
{
  (if $eq.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 != i2
}

function {:inline} $ne.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ne.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i8.bool(i1: i8, i2: i8) : bool
{
  i1 != i2
}

function {:inline} $ne.i8(i1: i8, i2: i8) : i1
{
  (if $ne.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $slt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $sgt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ult.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ugt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $smax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:inline} $umin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $umax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv8(i1: bv8) : bv8;

function $not.i8(i1: i8) : i8;

function {:inline} $load.i8(M: [ref]i8, p: ref) : i8
{
  M[p]
}

function {:inline} $load.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $store.i8(M: [ref]i8, p: ref, v: i8) : [ref]i8
{
  M[p := v]
}

function {:inline} $store.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $add.i16(i1: i16, i2: i16) : i16
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $sub.i16(i1: i16, i2: i16) : i16
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $mul.i16(i1: i16, i2: i16) : i16
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) : bv16;

function $shl.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) : bv16;

function $lshr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) : bv16;

function $ashr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) : bv16;

function $and.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) : bv16;

function $or.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) : bv16;

function $xor.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) : bv16;

function $nand.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ule.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ule.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $ule.i16(i1: i16, i2: i16) : i1
{
  (if $ule.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ult.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ult.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $ult.i16(i1: i16, i2: i16) : i1
{
  (if $ult.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $uge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $uge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $uge.i16(i1: i16, i2: i16) : i1
{
  (if $uge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ugt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ugt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $ugt.i16(i1: i16, i2: i16) : i1
{
  (if $ugt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sle.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sle.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $sle.i16(i1: i16, i2: i16) : i1
{
  (if $sle.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $slt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $slt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $slt.i16(i1: i16, i2: i16) : i1
{
  (if $slt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $sge.i16(i1: i16, i2: i16) : i1
{
  (if $sge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sgt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sgt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $sgt.i16(i1: i16, i2: i16) : i1
{
  (if $sgt.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 == i2
}

function {:inline} $eq.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $eq.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i16.bool(i1: i16, i2: i16) : bool
{
  i1 == i2
}

function {:inline} $eq.i16(i1: i16, i2: i16) : i1
{
  (if $eq.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 != i2
}

function {:inline} $ne.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ne.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i16.bool(i1: i16, i2: i16) : bool
{
  i1 != i2
}

function {:inline} $ne.i16(i1: i16, i2: i16) : i1
{
  (if $ne.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $slt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $sgt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ult.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ugt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $smax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:inline} $umin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $umax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv16(i1: bv16) : bv16;

function $not.i16(i1: i16) : i16;

function {:inline} $load.i16(M: [ref]i16, p: ref) : i16
{
  M[p]
}

function {:inline} $load.bv16(M: [ref]bv16, p: ref) : bv16
{
  M[p]
}

function {:inline} $store.i16(M: [ref]i16, p: ref, v: i16) : [ref]i16
{
  M[p := v]
}

function {:inline} $store.bv16(M: [ref]bv16, p: ref, v: bv16) : [ref]bv16
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $add.i24(i1: i24, i2: i24) : i24
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $sub.i24(i1: i24, i2: i24) : i24
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $mul.i24(i1: i24, i2: i24) : i24
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) : bv24;

function $shl.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) : bv24;

function $lshr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) : bv24;

function $ashr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) : bv24;

function $and.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) : bv24;

function $or.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) : bv24;

function $xor.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) : bv24;

function $nand.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ule.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ule.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $ule.i24(i1: i24, i2: i24) : i1
{
  (if $ule.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ult.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ult.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $ult.i24(i1: i24, i2: i24) : i1
{
  (if $ult.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $uge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $uge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $uge.i24(i1: i24, i2: i24) : i1
{
  (if $uge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ugt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ugt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $ugt.i24(i1: i24, i2: i24) : i1
{
  (if $ugt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sle.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sle.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $sle.i24(i1: i24, i2: i24) : i1
{
  (if $sle.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $slt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $slt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $slt.i24(i1: i24, i2: i24) : i1
{
  (if $slt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $sge.i24(i1: i24, i2: i24) : i1
{
  (if $sge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sgt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sgt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $sgt.i24(i1: i24, i2: i24) : i1
{
  (if $sgt.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 == i2
}

function {:inline} $eq.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $eq.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i24.bool(i1: i24, i2: i24) : bool
{
  i1 == i2
}

function {:inline} $eq.i24(i1: i24, i2: i24) : i1
{
  (if $eq.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 != i2
}

function {:inline} $ne.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ne.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i24.bool(i1: i24, i2: i24) : bool
{
  i1 != i2
}

function {:inline} $ne.i24(i1: i24, i2: i24) : i1
{
  (if $ne.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $slt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $sgt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ult.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ugt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $smax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:inline} $umin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $umax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv24(i1: bv24) : bv24;

function $not.i24(i1: i24) : i24;

function {:inline} $load.i24(M: [ref]i24, p: ref) : i24
{
  M[p]
}

function {:inline} $load.bv24(M: [ref]bv24, p: ref) : bv24
{
  M[p]
}

function {:inline} $store.i24(M: [ref]i24, p: ref, v: i24) : [ref]i24
{
  M[p := v]
}

function {:inline} $store.bv24(M: [ref]bv24, p: ref, v: bv24) : [ref]bv24
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $add.i32(i1: i32, i2: i32) : i32
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $sub.i32(i1: i32, i2: i32) : i32
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $mul.i32(i1: i32, i2: i32) : i32
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) : bv32;

function $shl.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) : bv32;

function $lshr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) : bv32;

function $ashr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) : bv32;

function $and.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) : bv32;

function $or.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) : bv32;

function $xor.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) : bv32;

function $nand.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ule.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ule.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $ule.i32(i1: i32, i2: i32) : i1
{
  (if $ule.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ult.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ult.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $ult.i32(i1: i32, i2: i32) : i1
{
  (if $ult.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $uge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $uge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $uge.i32(i1: i32, i2: i32) : i1
{
  (if $uge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ugt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ugt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $ugt.i32(i1: i32, i2: i32) : i1
{
  (if $ugt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sle.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sle.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $sle.i32(i1: i32, i2: i32) : i1
{
  (if $sle.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $slt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $slt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $slt.i32(i1: i32, i2: i32) : i1
{
  (if $slt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $sge.i32(i1: i32, i2: i32) : i1
{
  (if $sge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sgt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sgt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $sgt.i32(i1: i32, i2: i32) : i1
{
  (if $sgt.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 == i2
}

function {:inline} $eq.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $eq.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i32.bool(i1: i32, i2: i32) : bool
{
  i1 == i2
}

function {:inline} $eq.i32(i1: i32, i2: i32) : i1
{
  (if $eq.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 != i2
}

function {:inline} $ne.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ne.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i32.bool(i1: i32, i2: i32) : bool
{
  i1 != i2
}

function {:inline} $ne.i32(i1: i32, i2: i32) : i1
{
  (if $ne.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $slt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $sgt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ult.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ugt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $smax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:inline} $umin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $umax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv32(i1: bv32) : bv32;

function $not.i32(i1: i32) : i32;

function {:inline} $load.i32(M: [ref]i32, p: ref) : i32
{
  M[p]
}

function {:inline} $load.bv32(M: [ref]bv32, p: ref) : bv32
{
  M[p]
}

function {:inline} $store.i32(M: [ref]i32, p: ref, v: i32) : [ref]i32
{
  M[p := v]
}

function {:inline} $store.bv32(M: [ref]bv32, p: ref, v: bv32) : [ref]bv32
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $add.i40(i1: i40, i2: i40) : i40
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $sub.i40(i1: i40, i2: i40) : i40
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $mul.i40(i1: i40, i2: i40) : i40
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) : bv40;

function $shl.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) : bv40;

function $lshr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) : bv40;

function $ashr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) : bv40;

function $and.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) : bv40;

function $or.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) : bv40;

function $xor.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) : bv40;

function $nand.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ule.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ule.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $ule.i40(i1: i40, i2: i40) : i1
{
  (if $ule.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ult.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ult.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $ult.i40(i1: i40, i2: i40) : i1
{
  (if $ult.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $uge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $uge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $uge.i40(i1: i40, i2: i40) : i1
{
  (if $uge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ugt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ugt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $ugt.i40(i1: i40, i2: i40) : i1
{
  (if $ugt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sle.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sle.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $sle.i40(i1: i40, i2: i40) : i1
{
  (if $sle.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $slt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $slt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $slt.i40(i1: i40, i2: i40) : i1
{
  (if $slt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $sge.i40(i1: i40, i2: i40) : i1
{
  (if $sge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sgt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sgt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $sgt.i40(i1: i40, i2: i40) : i1
{
  (if $sgt.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 == i2
}

function {:inline} $eq.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $eq.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i40.bool(i1: i40, i2: i40) : bool
{
  i1 == i2
}

function {:inline} $eq.i40(i1: i40, i2: i40) : i1
{
  (if $eq.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 != i2
}

function {:inline} $ne.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ne.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i40.bool(i1: i40, i2: i40) : bool
{
  i1 != i2
}

function {:inline} $ne.i40(i1: i40, i2: i40) : i1
{
  (if $ne.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $slt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $sgt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ult.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ugt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $smax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:inline} $umin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $umax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv40(i1: bv40) : bv40;

function $not.i40(i1: i40) : i40;

function {:inline} $load.i40(M: [ref]i40, p: ref) : i40
{
  M[p]
}

function {:inline} $load.bv40(M: [ref]bv40, p: ref) : bv40
{
  M[p]
}

function {:inline} $store.i40(M: [ref]i40, p: ref, v: i40) : [ref]i40
{
  M[p := v]
}

function {:inline} $store.bv40(M: [ref]bv40, p: ref, v: bv40) : [ref]bv40
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $add.i48(i1: i48, i2: i48) : i48
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $sub.i48(i1: i48, i2: i48) : i48
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $mul.i48(i1: i48, i2: i48) : i48
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) : bv48;

function $shl.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) : bv48;

function $lshr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) : bv48;

function $ashr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) : bv48;

function $and.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) : bv48;

function $or.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) : bv48;

function $xor.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) : bv48;

function $nand.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ule.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ule.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $ule.i48(i1: i48, i2: i48) : i1
{
  (if $ule.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ult.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ult.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $ult.i48(i1: i48, i2: i48) : i1
{
  (if $ult.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $uge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $uge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $uge.i48(i1: i48, i2: i48) : i1
{
  (if $uge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ugt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ugt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $ugt.i48(i1: i48, i2: i48) : i1
{
  (if $ugt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sle.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sle.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $sle.i48(i1: i48, i2: i48) : i1
{
  (if $sle.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $slt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $slt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $slt.i48(i1: i48, i2: i48) : i1
{
  (if $slt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $sge.i48(i1: i48, i2: i48) : i1
{
  (if $sge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sgt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sgt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $sgt.i48(i1: i48, i2: i48) : i1
{
  (if $sgt.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 == i2
}

function {:inline} $eq.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $eq.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i48.bool(i1: i48, i2: i48) : bool
{
  i1 == i2
}

function {:inline} $eq.i48(i1: i48, i2: i48) : i1
{
  (if $eq.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 != i2
}

function {:inline} $ne.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ne.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i48.bool(i1: i48, i2: i48) : bool
{
  i1 != i2
}

function {:inline} $ne.i48(i1: i48, i2: i48) : i1
{
  (if $ne.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $slt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $sgt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ult.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ugt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $smax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:inline} $umin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $umax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv48(i1: bv48) : bv48;

function $not.i48(i1: i48) : i48;

function {:inline} $load.i48(M: [ref]i48, p: ref) : i48
{
  M[p]
}

function {:inline} $load.bv48(M: [ref]bv48, p: ref) : bv48
{
  M[p]
}

function {:inline} $store.i48(M: [ref]i48, p: ref, v: i48) : [ref]i48
{
  M[p := v]
}

function {:inline} $store.bv48(M: [ref]bv48, p: ref, v: bv48) : [ref]bv48
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $add.i56(i1: i56, i2: i56) : i56
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $sub.i56(i1: i56, i2: i56) : i56
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $mul.i56(i1: i56, i2: i56) : i56
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) : bv56;

function $shl.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) : bv56;

function $lshr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) : bv56;

function $ashr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) : bv56;

function $and.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) : bv56;

function $or.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) : bv56;

function $xor.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) : bv56;

function $nand.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ule.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ule.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $ule.i56(i1: i56, i2: i56) : i1
{
  (if $ule.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ult.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ult.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $ult.i56(i1: i56, i2: i56) : i1
{
  (if $ult.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $uge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $uge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $uge.i56(i1: i56, i2: i56) : i1
{
  (if $uge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ugt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ugt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $ugt.i56(i1: i56, i2: i56) : i1
{
  (if $ugt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sle.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sle.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $sle.i56(i1: i56, i2: i56) : i1
{
  (if $sle.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $slt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $slt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $slt.i56(i1: i56, i2: i56) : i1
{
  (if $slt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $sge.i56(i1: i56, i2: i56) : i1
{
  (if $sge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sgt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sgt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $sgt.i56(i1: i56, i2: i56) : i1
{
  (if $sgt.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 == i2
}

function {:inline} $eq.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $eq.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i56.bool(i1: i56, i2: i56) : bool
{
  i1 == i2
}

function {:inline} $eq.i56(i1: i56, i2: i56) : i1
{
  (if $eq.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 != i2
}

function {:inline} $ne.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ne.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i56.bool(i1: i56, i2: i56) : bool
{
  i1 != i2
}

function {:inline} $ne.i56(i1: i56, i2: i56) : i1
{
  (if $ne.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $slt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $sgt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ult.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ugt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $smax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:inline} $umin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $umax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv56(i1: bv56) : bv56;

function $not.i56(i1: i56) : i56;

function {:inline} $load.i56(M: [ref]i56, p: ref) : i56
{
  M[p]
}

function {:inline} $load.bv56(M: [ref]bv56, p: ref) : bv56
{
  M[p]
}

function {:inline} $store.i56(M: [ref]i56, p: ref, v: i56) : [ref]i56
{
  M[p := v]
}

function {:inline} $store.bv56(M: [ref]bv56, p: ref, v: bv56) : [ref]bv56
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $add.i64(i1: i64, i2: i64) : i64
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $sub.i64(i1: i64, i2: i64) : i64
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $mul.i64(i1: i64, i2: i64) : i64
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) : bv64;

function $shl.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) : bv64;

function $lshr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) : bv64;

function $ashr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) : bv64;

function $and.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) : bv64;

function $or.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) : bv64;

function $xor.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) : bv64;

function $nand.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ule.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ule.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $ule.i64(i1: i64, i2: i64) : i1
{
  (if $ule.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ult.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ult.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $ult.i64(i1: i64, i2: i64) : i1
{
  (if $ult.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $uge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $uge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $uge.i64(i1: i64, i2: i64) : i1
{
  (if $uge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ugt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ugt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $ugt.i64(i1: i64, i2: i64) : i1
{
  (if $ugt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sle.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sle.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $sle.i64(i1: i64, i2: i64) : i1
{
  (if $sle.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $slt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $slt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $slt.i64(i1: i64, i2: i64) : i1
{
  (if $slt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $sge.i64(i1: i64, i2: i64) : i1
{
  (if $sge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sgt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sgt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $sgt.i64(i1: i64, i2: i64) : i1
{
  (if $sgt.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 == i2
}

function {:inline} $eq.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $eq.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i64.bool(i1: i64, i2: i64) : bool
{
  i1 == i2
}

function {:inline} $eq.i64(i1: i64, i2: i64) : i1
{
  (if $eq.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 != i2
}

function {:inline} $ne.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ne.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i64.bool(i1: i64, i2: i64) : bool
{
  i1 != i2
}

function {:inline} $ne.i64(i1: i64, i2: i64) : i1
{
  (if $ne.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $slt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $sgt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ult.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ugt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $smax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:inline} $umin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $umax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv64(i1: bv64) : bv64;

function $not.i64(i1: i64) : i64;

function {:inline} $load.i64(M: [ref]i64, p: ref) : i64
{
  M[p]
}

function {:inline} $load.bv64(M: [ref]bv64, p: ref) : bv64
{
  M[p]
}

function {:inline} $store.i64(M: [ref]i64, p: ref, v: i64) : [ref]i64
{
  M[p := v]
}

function {:inline} $store.bv64(M: [ref]bv64, p: ref, v: bv64) : [ref]bv64
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $add.i80(i1: i80, i2: i80) : i80
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $sub.i80(i1: i80, i2: i80) : i80
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $mul.i80(i1: i80, i2: i80) : i80
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsmod"} $smod.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsrem"} $srem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $srem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvudiv"} $udiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvurem"} $urem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $urem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvshl"} $shl.bv80(i1: bv80, i2: bv80) : bv80;

function $shl.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvlshr"} $lshr.bv80(i1: bv80, i2: bv80) : bv80;

function $lshr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvashr"} $ashr.bv80(i1: bv80, i2: bv80) : bv80;

function $ashr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvand"} $and.bv80(i1: bv80, i2: bv80) : bv80;

function $and.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvor"} $or.bv80(i1: bv80, i2: bv80) : bv80;

function $or.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvxor"} $xor.bv80(i1: bv80, i2: bv80) : bv80;

function $xor.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvnand"} $nand.bv80(i1: bv80, i2: bv80) : bv80;

function $nand.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvule"} $ule.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ule.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ule.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $ule.i80(i1: i80, i2: i80) : i1
{
  (if $ule.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ult.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ult.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $ult.i80(i1: i80, i2: i80) : i1
{
  (if $ult.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $uge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $uge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $uge.i80(i1: i80, i2: i80) : i1
{
  (if $uge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ugt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ugt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $ugt.i80(i1: i80, i2: i80) : i1
{
  (if $ugt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sle.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sle.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $sle.i80(i1: i80, i2: i80) : i1
{
  (if $sle.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $slt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $slt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $slt.i80(i1: i80, i2: i80) : i1
{
  (if $slt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $sge.i80(i1: i80, i2: i80) : i1
{
  (if $sge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sgt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sgt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $sgt.i80(i1: i80, i2: i80) : i1
{
  (if $sgt.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 == i2
}

function {:inline} $eq.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $eq.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i80.bool(i1: i80, i2: i80) : bool
{
  i1 == i2
}

function {:inline} $eq.i80(i1: i80, i2: i80) : i1
{
  (if $eq.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 != i2
}

function {:inline} $ne.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ne.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i80.bool(i1: i80, i2: i80) : bool
{
  i1 != i2
}

function {:inline} $ne.i80(i1: i80, i2: i80) : i1
{
  (if $ne.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $slt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $sgt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ult.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ugt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $smax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:inline} $umin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $umax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv80(i1: bv80) : bv80;

function $not.i80(i1: i80) : i80;

function {:inline} $load.i80(M: [ref]i80, p: ref) : i80
{
  M[p]
}

function {:inline} $load.bv80(M: [ref]bv80, p: ref) : bv80
{
  M[p]
}

function {:inline} $store.i80(M: [ref]i80, p: ref, v: i80) : [ref]i80
{
  M[p := v]
}

function {:inline} $store.bv80(M: [ref]bv80, p: ref, v: bv80) : [ref]bv80
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $add.i88(i1: i88, i2: i88) : i88
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $sub.i88(i1: i88, i2: i88) : i88
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $mul.i88(i1: i88, i2: i88) : i88
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) : bv88;

function $shl.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) : bv88;

function $lshr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) : bv88;

function $ashr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) : bv88;

function $and.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) : bv88;

function $or.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) : bv88;

function $xor.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) : bv88;

function $nand.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ule.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ule.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $ule.i88(i1: i88, i2: i88) : i1
{
  (if $ule.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ult.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ult.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $ult.i88(i1: i88, i2: i88) : i1
{
  (if $ult.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $uge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $uge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $uge.i88(i1: i88, i2: i88) : i1
{
  (if $uge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ugt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ugt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $ugt.i88(i1: i88, i2: i88) : i1
{
  (if $ugt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sle.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sle.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $sle.i88(i1: i88, i2: i88) : i1
{
  (if $sle.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $slt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $slt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $slt.i88(i1: i88, i2: i88) : i1
{
  (if $slt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $sge.i88(i1: i88, i2: i88) : i1
{
  (if $sge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sgt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sgt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $sgt.i88(i1: i88, i2: i88) : i1
{
  (if $sgt.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 == i2
}

function {:inline} $eq.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $eq.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i88.bool(i1: i88, i2: i88) : bool
{
  i1 == i2
}

function {:inline} $eq.i88(i1: i88, i2: i88) : i1
{
  (if $eq.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 != i2
}

function {:inline} $ne.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ne.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i88.bool(i1: i88, i2: i88) : bool
{
  i1 != i2
}

function {:inline} $ne.i88(i1: i88, i2: i88) : i1
{
  (if $ne.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $slt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $sgt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ult.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ugt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $smax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:inline} $umin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $umax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv88(i1: bv88) : bv88;

function $not.i88(i1: i88) : i88;

function {:inline} $load.i88(M: [ref]i88, p: ref) : i88
{
  M[p]
}

function {:inline} $load.bv88(M: [ref]bv88, p: ref) : bv88
{
  M[p]
}

function {:inline} $store.i88(M: [ref]i88, p: ref, v: i88) : [ref]i88
{
  M[p := v]
}

function {:inline} $store.bv88(M: [ref]bv88, p: ref, v: bv88) : [ref]bv88
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $add.i96(i1: i96, i2: i96) : i96
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $sub.i96(i1: i96, i2: i96) : i96
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $mul.i96(i1: i96, i2: i96) : i96
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) : bv96;

function $shl.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) : bv96;

function $lshr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) : bv96;

function $ashr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) : bv96;

function $and.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) : bv96;

function $or.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) : bv96;

function $xor.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) : bv96;

function $nand.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ule.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ule.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $ule.i96(i1: i96, i2: i96) : i1
{
  (if $ule.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ult.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ult.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $ult.i96(i1: i96, i2: i96) : i1
{
  (if $ult.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $uge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $uge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $uge.i96(i1: i96, i2: i96) : i1
{
  (if $uge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ugt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ugt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $ugt.i96(i1: i96, i2: i96) : i1
{
  (if $ugt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sle.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sle.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $sle.i96(i1: i96, i2: i96) : i1
{
  (if $sle.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $slt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $slt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $slt.i96(i1: i96, i2: i96) : i1
{
  (if $slt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $sge.i96(i1: i96, i2: i96) : i1
{
  (if $sge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sgt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sgt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $sgt.i96(i1: i96, i2: i96) : i1
{
  (if $sgt.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 == i2
}

function {:inline} $eq.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $eq.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i96.bool(i1: i96, i2: i96) : bool
{
  i1 == i2
}

function {:inline} $eq.i96(i1: i96, i2: i96) : i1
{
  (if $eq.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 != i2
}

function {:inline} $ne.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ne.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i96.bool(i1: i96, i2: i96) : bool
{
  i1 != i2
}

function {:inline} $ne.i96(i1: i96, i2: i96) : i1
{
  (if $ne.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $slt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $sgt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ult.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ugt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $smax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:inline} $umin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $umax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv96(i1: bv96) : bv96;

function $not.i96(i1: i96) : i96;

function {:inline} $load.i96(M: [ref]i96, p: ref) : i96
{
  M[p]
}

function {:inline} $load.bv96(M: [ref]bv96, p: ref) : bv96
{
  M[p]
}

function {:inline} $store.i96(M: [ref]i96, p: ref, v: i96) : [ref]i96
{
  M[p := v]
}

function {:inline} $store.bv96(M: [ref]bv96, p: ref, v: bv96) : [ref]bv96
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $add.i128(i1: i128, i2: i128) : i128
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $sub.i128(i1: i128, i2: i128) : i128
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $mul.i128(i1: i128, i2: i128) : i128
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) : bv128;

function $shl.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) : bv128;

function $lshr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) : bv128;

function $ashr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) : bv128;

function $and.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) : bv128;

function $or.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) : bv128;

function $xor.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) : bv128;

function $nand.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ule.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ule.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $ule.i128(i1: i128, i2: i128) : i1
{
  (if $ule.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ult.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ult.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $ult.i128(i1: i128, i2: i128) : i1
{
  (if $ult.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $uge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $uge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $uge.i128(i1: i128, i2: i128) : i1
{
  (if $uge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ugt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ugt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $ugt.i128(i1: i128, i2: i128) : i1
{
  (if $ugt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sle.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sle.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $sle.i128(i1: i128, i2: i128) : i1
{
  (if $sle.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $slt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $slt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $slt.i128(i1: i128, i2: i128) : i1
{
  (if $slt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $sge.i128(i1: i128, i2: i128) : i1
{
  (if $sge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sgt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sgt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $sgt.i128(i1: i128, i2: i128) : i1
{
  (if $sgt.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 == i2
}

function {:inline} $eq.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $eq.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i128.bool(i1: i128, i2: i128) : bool
{
  i1 == i2
}

function {:inline} $eq.i128(i1: i128, i2: i128) : i1
{
  (if $eq.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 != i2
}

function {:inline} $ne.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ne.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i128.bool(i1: i128, i2: i128) : bool
{
  i1 != i2
}

function {:inline} $ne.i128(i1: i128, i2: i128) : i1
{
  (if $ne.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $slt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $sgt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ult.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ugt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $smax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:inline} $umin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $umax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv128(i1: bv128) : bv128;

function $not.i128(i1: i128) : i128;

function {:inline} $load.i128(M: [ref]i128, p: ref) : i128
{
  M[p]
}

function {:inline} $load.bv128(M: [ref]bv128, p: ref) : bv128
{
  M[p]
}

function {:inline} $store.i128(M: [ref]i128, p: ref, v: i128) : [ref]i128
{
  M[p := v]
}

function {:inline} $store.bv128(M: [ref]bv128, p: ref, v: bv128) : [ref]bv128
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $add.i160(i1: i160, i2: i160) : i160
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $sub.i160(i1: i160, i2: i160) : i160
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $mul.i160(i1: i160, i2: i160) : i160
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsmod"} $smod.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsrem"} $srem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $srem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvudiv"} $udiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvurem"} $urem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $urem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvshl"} $shl.bv160(i1: bv160, i2: bv160) : bv160;

function $shl.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvlshr"} $lshr.bv160(i1: bv160, i2: bv160) : bv160;

function $lshr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvashr"} $ashr.bv160(i1: bv160, i2: bv160) : bv160;

function $ashr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvand"} $and.bv160(i1: bv160, i2: bv160) : bv160;

function $and.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvor"} $or.bv160(i1: bv160, i2: bv160) : bv160;

function $or.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvxor"} $xor.bv160(i1: bv160, i2: bv160) : bv160;

function $xor.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvnand"} $nand.bv160(i1: bv160, i2: bv160) : bv160;

function $nand.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvule"} $ule.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ule.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ule.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $ule.i160(i1: i160, i2: i160) : i1
{
  (if $ule.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ult.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ult.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $ult.i160(i1: i160, i2: i160) : i1
{
  (if $ult.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $uge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $uge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $uge.i160(i1: i160, i2: i160) : i1
{
  (if $uge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ugt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ugt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $ugt.i160(i1: i160, i2: i160) : i1
{
  (if $ugt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sle.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sle.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $sle.i160(i1: i160, i2: i160) : i1
{
  (if $sle.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $slt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $slt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $slt.i160(i1: i160, i2: i160) : i1
{
  (if $slt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $sge.i160(i1: i160, i2: i160) : i1
{
  (if $sge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sgt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sgt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $sgt.i160(i1: i160, i2: i160) : i1
{
  (if $sgt.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 == i2
}

function {:inline} $eq.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $eq.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i160.bool(i1: i160, i2: i160) : bool
{
  i1 == i2
}

function {:inline} $eq.i160(i1: i160, i2: i160) : i1
{
  (if $eq.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 != i2
}

function {:inline} $ne.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ne.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i160.bool(i1: i160, i2: i160) : bool
{
  i1 != i2
}

function {:inline} $ne.i160(i1: i160, i2: i160) : i1
{
  (if $ne.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $slt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $sgt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ult.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ugt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $smax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:inline} $umin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $umax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv160(i1: bv160) : bv160;

function $not.i160(i1: i160) : i160;

function {:inline} $load.i160(M: [ref]i160, p: ref) : i160
{
  M[p]
}

function {:inline} $load.bv160(M: [ref]bv160, p: ref) : bv160
{
  M[p]
}

function {:inline} $store.i160(M: [ref]i160, p: ref, v: i160) : [ref]i160
{
  M[p := v]
}

function {:inline} $store.bv160(M: [ref]bv160, p: ref, v: bv160) : [ref]bv160
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $add.i256(i1: i256, i2: i256) : i256
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $sub.i256(i1: i256, i2: i256) : i256
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $mul.i256(i1: i256, i2: i256) : i256
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsmod"} $smod.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsrem"} $srem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $srem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvudiv"} $udiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvurem"} $urem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $urem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvshl"} $shl.bv256(i1: bv256, i2: bv256) : bv256;

function $shl.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvlshr"} $lshr.bv256(i1: bv256, i2: bv256) : bv256;

function $lshr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvashr"} $ashr.bv256(i1: bv256, i2: bv256) : bv256;

function $ashr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvand"} $and.bv256(i1: bv256, i2: bv256) : bv256;

function $and.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvor"} $or.bv256(i1: bv256, i2: bv256) : bv256;

function $or.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvxor"} $xor.bv256(i1: bv256, i2: bv256) : bv256;

function $xor.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvnand"} $nand.bv256(i1: bv256, i2: bv256) : bv256;

function $nand.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvule"} $ule.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ule.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ule.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $ule.i256(i1: i256, i2: i256) : i1
{
  (if $ule.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ult.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ult.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $ult.i256(i1: i256, i2: i256) : i1
{
  (if $ult.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $uge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $uge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $uge.i256(i1: i256, i2: i256) : i1
{
  (if $uge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ugt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ugt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $ugt.i256(i1: i256, i2: i256) : i1
{
  (if $ugt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sle.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sle.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $sle.i256(i1: i256, i2: i256) : i1
{
  (if $sle.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $slt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $slt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $slt.i256(i1: i256, i2: i256) : i1
{
  (if $slt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $sge.i256(i1: i256, i2: i256) : i1
{
  (if $sge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sgt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sgt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $sgt.i256(i1: i256, i2: i256) : i1
{
  (if $sgt.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 == i2
}

function {:inline} $eq.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $eq.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i256.bool(i1: i256, i2: i256) : bool
{
  i1 == i2
}

function {:inline} $eq.i256(i1: i256, i2: i256) : i1
{
  (if $eq.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 != i2
}

function {:inline} $ne.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ne.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i256.bool(i1: i256, i2: i256) : bool
{
  i1 != i2
}

function {:inline} $ne.i256(i1: i256, i2: i256) : i1
{
  (if $ne.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $slt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $sgt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ult.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ugt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $smax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:inline} $umin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $umax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv256(i1: bv256) : bv256;

function $not.i256(i1: i256) : i256;

function {:inline} $load.i256(M: [ref]i256, p: ref) : i256
{
  M[p]
}

function {:inline} $load.bv256(M: [ref]bv256, p: ref) : bv256
{
  M[p]
}

function {:inline} $store.i256(M: [ref]i256, p: ref, v: i256) : [ref]i256
{
  M[p := v]
}

function {:inline} $store.bv256(M: [ref]bv256, p: ref, v: bv256) : [ref]bv256
{
  M[p := v]
}

function {:inline} $trunc.bv5.bv1(i1: bv5) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i5.i1(i1: i5) : i1
{
  i1
}

function {:inline} $zext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $sext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $trunc.bv6.bv1(i1: bv6) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i6.i1(i1: i6) : i1
{
  i1
}

function {:inline} $zext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $sext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv1(i1: bv8) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i8.i1(i1: i8) : i1
{
  i1
}

function {:inline} $zext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $sext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv1(i1: bv16) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i16.i1(i1: i16) : i1
{
  i1
}

function {:inline} $zext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $sext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv1(i1: bv24) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i24.i1(i1: i24) : i1
{
  i1
}

function {:inline} $zext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $sext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv1(i1: bv32) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i32.i1(i1: i32) : i1
{
  i1
}

function {:inline} $zext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $sext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv1(i1: bv40) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i40.i1(i1: i40) : i1
{
  i1
}

function {:inline} $zext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $sext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv1(i1: bv48) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i48.i1(i1: i48) : i1
{
  i1
}

function {:inline} $zext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $sext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv1(i1: bv56) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i56.i1(i1: i56) : i1
{
  i1
}

function {:inline} $zext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $sext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv1(i1: bv64) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i64.i1(i1: i64) : i1
{
  i1
}

function {:inline} $zext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $sext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv1(i1: bv80) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i80.i1(i1: i80) : i1
{
  i1
}

function {:inline} $zext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $sext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv1(i1: bv88) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i88.i1(i1: i88) : i1
{
  i1
}

function {:inline} $zext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $sext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv1(i1: bv96) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i96.i1(i1: i96) : i1
{
  i1
}

function {:inline} $zext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $sext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv1(i1: bv128) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i128.i1(i1: i128) : i1
{
  i1
}

function {:inline} $zext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $sext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv1(i1: bv160) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i160.i1(i1: i160) : i1
{
  i1
}

function {:inline} $zext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $sext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv1(i1: bv256) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i256.i1(i1: i256) : i1
{
  i1
}

function {:inline} $zext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $sext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $trunc.bv6.bv5(i1: bv6) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i6.i5(i1: i6) : i5
{
  i1
}

function {:inline} $zext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $sext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv5(i1: bv8) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i8.i5(i1: i8) : i5
{
  i1
}

function {:inline} $zext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $sext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv5(i1: bv16) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i16.i5(i1: i16) : i5
{
  i1
}

function {:inline} $zext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $sext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv5(i1: bv24) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i24.i5(i1: i24) : i5
{
  i1
}

function {:inline} $zext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $sext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv5(i1: bv32) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i32.i5(i1: i32) : i5
{
  i1
}

function {:inline} $zext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $sext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv5(i1: bv40) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i40.i5(i1: i40) : i5
{
  i1
}

function {:inline} $zext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $sext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv5(i1: bv48) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i48.i5(i1: i48) : i5
{
  i1
}

function {:inline} $zext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $sext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv5(i1: bv56) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i56.i5(i1: i56) : i5
{
  i1
}

function {:inline} $zext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $sext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv5(i1: bv64) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i64.i5(i1: i64) : i5
{
  i1
}

function {:inline} $zext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $sext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv5(i1: bv80) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i80.i5(i1: i80) : i5
{
  i1
}

function {:inline} $zext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $sext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv5(i1: bv88) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i88.i5(i1: i88) : i5
{
  i1
}

function {:inline} $zext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $sext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv5(i1: bv96) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i96.i5(i1: i96) : i5
{
  i1
}

function {:inline} $zext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $sext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv5(i1: bv128) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i128.i5(i1: i128) : i5
{
  i1
}

function {:inline} $zext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $sext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv5(i1: bv160) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i160.i5(i1: i160) : i5
{
  i1
}

function {:inline} $zext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $sext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv5(i1: bv256) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i256.i5(i1: i256) : i5
{
  i1
}

function {:inline} $zext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $sext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $trunc.bv8.bv6(i1: bv8) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i8.i6(i1: i8) : i6
{
  i1
}

function {:inline} $zext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $sext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv6(i1: bv16) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i16.i6(i1: i16) : i6
{
  i1
}

function {:inline} $zext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $sext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv6(i1: bv24) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i24.i6(i1: i24) : i6
{
  i1
}

function {:inline} $zext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $sext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv6(i1: bv32) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i32.i6(i1: i32) : i6
{
  i1
}

function {:inline} $zext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $sext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv6(i1: bv40) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i40.i6(i1: i40) : i6
{
  i1
}

function {:inline} $zext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $sext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv6(i1: bv48) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i48.i6(i1: i48) : i6
{
  i1
}

function {:inline} $zext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $sext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv6(i1: bv56) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i56.i6(i1: i56) : i6
{
  i1
}

function {:inline} $zext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $sext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv6(i1: bv64) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i64.i6(i1: i64) : i6
{
  i1
}

function {:inline} $zext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $sext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv6(i1: bv80) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i80.i6(i1: i80) : i6
{
  i1
}

function {:inline} $zext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $sext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv6(i1: bv88) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i88.i6(i1: i88) : i6
{
  i1
}

function {:inline} $zext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $sext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv6(i1: bv96) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i96.i6(i1: i96) : i6
{
  i1
}

function {:inline} $zext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $sext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv6(i1: bv128) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i128.i6(i1: i128) : i6
{
  i1
}

function {:inline} $zext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $sext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv6(i1: bv160) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i160.i6(i1: i160) : i6
{
  i1
}

function {:inline} $zext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $sext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv6(i1: bv256) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i256.i6(i1: i256) : i6
{
  i1
}

function {:inline} $zext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $sext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $trunc.bv16.bv8(i1: bv16) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i16.i8(i1: i16) : i8
{
  i1
}

function {:inline} $zext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $sext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv8(i1: bv24) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i24.i8(i1: i24) : i8
{
  i1
}

function {:inline} $zext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $sext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv8(i1: bv32) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i32.i8(i1: i32) : i8
{
  i1
}

function {:inline} $zext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $sext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv8(i1: bv40) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i40.i8(i1: i40) : i8
{
  i1
}

function {:inline} $zext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $sext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv8(i1: bv48) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i48.i8(i1: i48) : i8
{
  i1
}

function {:inline} $zext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $sext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv8(i1: bv56) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i56.i8(i1: i56) : i8
{
  i1
}

function {:inline} $zext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $sext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv8(i1: bv64) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i64.i8(i1: i64) : i8
{
  i1
}

function {:inline} $zext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $sext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv8(i1: bv80) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i80.i8(i1: i80) : i8
{
  i1
}

function {:inline} $zext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $sext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv8(i1: bv88) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i88.i8(i1: i88) : i8
{
  i1
}

function {:inline} $zext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $sext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv8(i1: bv96) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i96.i8(i1: i96) : i8
{
  i1
}

function {:inline} $zext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $sext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv8(i1: bv128) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i128.i8(i1: i128) : i8
{
  i1
}

function {:inline} $zext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $sext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv8(i1: bv160) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i160.i8(i1: i160) : i8
{
  i1
}

function {:inline} $zext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $sext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv8(i1: bv256) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i256.i8(i1: i256) : i8
{
  i1
}

function {:inline} $zext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $sext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $trunc.bv24.bv16(i1: bv24) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i24.i16(i1: i24) : i16
{
  i1
}

function {:inline} $zext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $sext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv16(i1: bv32) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i32.i16(i1: i32) : i16
{
  i1
}

function {:inline} $zext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $sext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv16(i1: bv40) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i40.i16(i1: i40) : i16
{
  i1
}

function {:inline} $zext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $sext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv16(i1: bv48) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i48.i16(i1: i48) : i16
{
  i1
}

function {:inline} $zext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $sext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv16(i1: bv56) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i56.i16(i1: i56) : i16
{
  i1
}

function {:inline} $zext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $sext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv16(i1: bv64) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i64.i16(i1: i64) : i16
{
  i1
}

function {:inline} $zext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $sext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv16(i1: bv80) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i80.i16(i1: i80) : i16
{
  i1
}

function {:inline} $zext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $sext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv16(i1: bv88) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i88.i16(i1: i88) : i16
{
  i1
}

function {:inline} $zext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $sext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv16(i1: bv96) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i96.i16(i1: i96) : i16
{
  i1
}

function {:inline} $zext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $sext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv16(i1: bv128) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i128.i16(i1: i128) : i16
{
  i1
}

function {:inline} $zext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $sext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv16(i1: bv160) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i160.i16(i1: i160) : i16
{
  i1
}

function {:inline} $zext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $sext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv16(i1: bv256) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i256.i16(i1: i256) : i16
{
  i1
}

function {:inline} $zext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $sext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $trunc.bv32.bv24(i1: bv32) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i32.i24(i1: i32) : i24
{
  i1
}

function {:inline} $zext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $sext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv24(i1: bv40) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i40.i24(i1: i40) : i24
{
  i1
}

function {:inline} $zext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $sext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv24(i1: bv48) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i48.i24(i1: i48) : i24
{
  i1
}

function {:inline} $zext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $sext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv24(i1: bv56) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i56.i24(i1: i56) : i24
{
  i1
}

function {:inline} $zext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $sext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv24(i1: bv64) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i64.i24(i1: i64) : i24
{
  i1
}

function {:inline} $zext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $sext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv24(i1: bv80) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i80.i24(i1: i80) : i24
{
  i1
}

function {:inline} $zext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $sext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv24(i1: bv88) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i88.i24(i1: i88) : i24
{
  i1
}

function {:inline} $zext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $sext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv24(i1: bv96) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i96.i24(i1: i96) : i24
{
  i1
}

function {:inline} $zext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $sext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv24(i1: bv128) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i128.i24(i1: i128) : i24
{
  i1
}

function {:inline} $zext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $sext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv24(i1: bv160) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i160.i24(i1: i160) : i24
{
  i1
}

function {:inline} $zext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $sext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv24(i1: bv256) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i256.i24(i1: i256) : i24
{
  i1
}

function {:inline} $zext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $sext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $trunc.bv40.bv32(i1: bv40) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i40.i32(i1: i40) : i32
{
  i1
}

function {:inline} $zext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $sext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv32(i1: bv48) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i48.i32(i1: i48) : i32
{
  i1
}

function {:inline} $zext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $sext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv32(i1: bv56) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i56.i32(i1: i56) : i32
{
  i1
}

function {:inline} $zext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $sext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv32(i1: bv64) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i64.i32(i1: i64) : i32
{
  i1
}

function {:inline} $zext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $sext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv32(i1: bv80) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i80.i32(i1: i80) : i32
{
  i1
}

function {:inline} $zext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $sext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv32(i1: bv88) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i88.i32(i1: i88) : i32
{
  i1
}

function {:inline} $zext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $sext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv32(i1: bv96) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i96.i32(i1: i96) : i32
{
  i1
}

function {:inline} $zext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $sext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv32(i1: bv128) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i128.i32(i1: i128) : i32
{
  i1
}

function {:inline} $zext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $sext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv32(i1: bv160) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i160.i32(i1: i160) : i32
{
  i1
}

function {:inline} $zext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $sext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv32(i1: bv256) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i256.i32(i1: i256) : i32
{
  i1
}

function {:inline} $zext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $sext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $trunc.bv48.bv40(i1: bv48) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i48.i40(i1: i48) : i40
{
  i1
}

function {:inline} $zext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $sext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv40(i1: bv56) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i56.i40(i1: i56) : i40
{
  i1
}

function {:inline} $zext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $sext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv40(i1: bv64) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i64.i40(i1: i64) : i40
{
  i1
}

function {:inline} $zext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $sext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv40(i1: bv80) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i80.i40(i1: i80) : i40
{
  i1
}

function {:inline} $zext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $sext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv40(i1: bv88) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i88.i40(i1: i88) : i40
{
  i1
}

function {:inline} $zext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $sext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv40(i1: bv96) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i96.i40(i1: i96) : i40
{
  i1
}

function {:inline} $zext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $sext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv40(i1: bv128) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i128.i40(i1: i128) : i40
{
  i1
}

function {:inline} $zext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $sext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv40(i1: bv160) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i160.i40(i1: i160) : i40
{
  i1
}

function {:inline} $zext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $sext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv40(i1: bv256) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i256.i40(i1: i256) : i40
{
  i1
}

function {:inline} $zext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $sext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $trunc.bv56.bv48(i1: bv56) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i56.i48(i1: i56) : i48
{
  i1
}

function {:inline} $zext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $sext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv48(i1: bv64) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i64.i48(i1: i64) : i48
{
  i1
}

function {:inline} $zext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $sext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv48(i1: bv80) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i80.i48(i1: i80) : i48
{
  i1
}

function {:inline} $zext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $sext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv48(i1: bv88) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i88.i48(i1: i88) : i48
{
  i1
}

function {:inline} $zext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $sext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv48(i1: bv96) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i96.i48(i1: i96) : i48
{
  i1
}

function {:inline} $zext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $sext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv48(i1: bv128) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i128.i48(i1: i128) : i48
{
  i1
}

function {:inline} $zext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $sext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv48(i1: bv160) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i160.i48(i1: i160) : i48
{
  i1
}

function {:inline} $zext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $sext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv48(i1: bv256) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i256.i48(i1: i256) : i48
{
  i1
}

function {:inline} $zext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $sext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $trunc.bv64.bv56(i1: bv64) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i64.i56(i1: i64) : i56
{
  i1
}

function {:inline} $zext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $sext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv56(i1: bv80) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i80.i56(i1: i80) : i56
{
  i1
}

function {:inline} $zext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $sext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv56(i1: bv88) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i88.i56(i1: i88) : i56
{
  i1
}

function {:inline} $zext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $sext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv56(i1: bv96) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i96.i56(i1: i96) : i56
{
  i1
}

function {:inline} $zext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $sext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv56(i1: bv128) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i128.i56(i1: i128) : i56
{
  i1
}

function {:inline} $zext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $sext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv56(i1: bv160) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i160.i56(i1: i160) : i56
{
  i1
}

function {:inline} $zext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $sext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv56(i1: bv256) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i256.i56(i1: i256) : i56
{
  i1
}

function {:inline} $zext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $sext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $trunc.bv80.bv64(i1: bv80) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i80.i64(i1: i80) : i64
{
  i1
}

function {:inline} $zext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $sext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv64(i1: bv88) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i88.i64(i1: i88) : i64
{
  i1
}

function {:inline} $zext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $sext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv64(i1: bv96) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i96.i64(i1: i96) : i64
{
  i1
}

function {:inline} $zext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $sext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv64(i1: bv128) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i128.i64(i1: i128) : i64
{
  i1
}

function {:inline} $zext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $sext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv64(i1: bv160) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i160.i64(i1: i160) : i64
{
  i1
}

function {:inline} $zext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $sext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv64(i1: bv256) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i256.i64(i1: i256) : i64
{
  i1
}

function {:inline} $zext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $sext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $trunc.bv88.bv80(i1: bv88) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i88.i80(i1: i88) : i80
{
  i1
}

function {:inline} $zext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $sext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv80(i1: bv96) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i96.i80(i1: i96) : i80
{
  i1
}

function {:inline} $zext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $sext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv80(i1: bv128) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i128.i80(i1: i128) : i80
{
  i1
}

function {:inline} $zext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $sext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv80(i1: bv160) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i160.i80(i1: i160) : i80
{
  i1
}

function {:inline} $zext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $sext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv80(i1: bv256) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i256.i80(i1: i256) : i80
{
  i1
}

function {:inline} $zext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $sext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $trunc.bv96.bv88(i1: bv96) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i96.i88(i1: i96) : i88
{
  i1
}

function {:inline} $zext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $sext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv88(i1: bv128) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i128.i88(i1: i128) : i88
{
  i1
}

function {:inline} $zext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $sext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv88(i1: bv160) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i160.i88(i1: i160) : i88
{
  i1
}

function {:inline} $zext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $sext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv88(i1: bv256) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i256.i88(i1: i256) : i88
{
  i1
}

function {:inline} $zext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $sext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $trunc.bv128.bv96(i1: bv128) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i128.i96(i1: i128) : i96
{
  i1
}

function {:inline} $zext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $sext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv96(i1: bv160) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i160.i96(i1: i160) : i96
{
  i1
}

function {:inline} $zext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $sext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv96(i1: bv256) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i256.i96(i1: i256) : i96
{
  i1
}

function {:inline} $zext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $sext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $trunc.bv160.bv128(i1: bv160) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i160.i128(i1: i160) : i128
{
  i1
}

function {:inline} $zext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $sext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv128(i1: bv256) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i256.i128(i1: i256) : i128
{
  i1
}

function {:inline} $zext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $sext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $trunc.bv256.bv160(i1: bv256) : bv160
{
  i1[160:0]
}

function {:inline} $trunc.i256.i160(i1: i256) : i160
{
  i1
}

function {:inline} $zext.i160.i256(i1: i160) : i256
{
  i1
}

function {:inline} $sext.i160.i256(i1: i160) : i256
{
  i1
}

procedure corral_assert_not_reachable();



procedure {:entrypoint} main_SeqInstr();
  free requires assertsPassed;
  modifies assertsPassed, $M.4, $M.1, $M.3, $M.0, $M.2, $M.6, $M.32, $M.33, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation {:entrypoint} main_SeqInstr()
{

  start:
    assertsPassed := true;
    call main();
    assume {:OldAssert} !assertsPassed;
    return;
}



implementation inftl_readblock_loop_$bb7(in_$i1: i64, in_$p3: ref, in_$p4: ref, in_$p7: ref, in_$i29: i64, in_$p33: ref, in_$p62: ref, in_$i68: i64, in_$i69: i64, in_$p70: ref, in_$i71: i32, in_$i72: i32, in_$i73: i64, in_$i74: i64, in_$p75: ref, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i64, in_$i85: i64, in_$p86: ref, in_$i87: i8, in_$i88: i32, in_$i89: i32, in_$i78: i32, in_$i90: i1, in_$i91: i1, in_$i92: i32, in_$i93: i1, in_$i94: i1, in_$i97: i32, in_$i98: i1, in_$i108: i64, in_$i109: i64, in_$i110: i64, in_$p111: ref, in_$p112: ref, in_$p113: ref, in_$i114: i16, in_$i115: i32, in_$i116: i32, in_$i117: i1, in_$i66: i32, in_$i67: i32, in_$i118: i32, in_vslice_dummy_var_23: i32) returns (out_$i68: i64, out_$i69: i64, out_$p70: ref, out_$i71: i32, out_$i72: i32, out_$i73: i64, out_$i74: i64, out_$p75: ref, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i64, out_$i85: i64, out_$p86: ref, out_$i87: i8, out_$i88: i32, out_$i89: i32, out_$i78: i32, out_$i90: i1, out_$i91: i1, out_$i92: i32, out_$i93: i1, out_$i94: i1, out_$i97: i32, out_$i98: i1, out_$i108: i64, out_$i109: i64, out_$i110: i64, out_$p111: ref, out_$p112: ref, out_$p113: ref, out_$i114: i16, out_$i115: i32, out_$i116: i32, out_$i117: i1, out_$i66: i32, out_$i67: i32, out_$i118: i32, out_vslice_dummy_var_23: i32)
{

  entry:
    out_$i68, out_$i69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$i78, out_$i90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i97, out_$i98, out_$i108, out_$i109, out_$i110, out_$p111, out_$p112, out_$p113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i66, out_$i67, out_$i118, out_vslice_dummy_var_23 := in_$i68, in_$i69, in_$p70, in_$i71, in_$i72, in_$i73, in_$i74, in_$p75, in_$i76, in_$i77, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$i84, in_$i85, in_$p86, in_$i87, in_$i88, in_$i89, in_$i78, in_$i90, in_$i91, in_$i92, in_$i93, in_$i94, in_$i97, in_$i98, in_$i108, in_$i109, in_$i110, in_$p111, in_$p112, in_$p113, in_$i114, in_$i115, in_$i116, in_$i117, in_$i66, in_$i67, in_$i118, in_vslice_dummy_var_23;
    goto $bb7, exit;

  $bb7:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_140;

  $bb40:
    assume out_$i117 == 1;
    assume {:verifier.code 0} true;
    out_$i66, out_$i67 := out_$i97, out_$i115;
    goto $bb40_dummy;

  corral_source_split_222:
    assume {:verifier.code 0} true;
    out_$i118 := out_$i115;
    assume true;
    goto $bb40;

  corral_source_split_221:
    assume {:verifier.code 0} true;
    out_$i117 := $ugt.i32(out_$i116, out_$i115);
    goto corral_source_split_222;

  corral_source_split_220:
    assume {:verifier.code 0} true;
    out_$i116 := $load.i32($M.1, in_$p62);
    call {:si_unique_call 103} {:cexpr "__cil_tmp80"} boogie_si_record_i32(out_$i116);
    goto corral_source_split_221;

  corral_source_split_219:
    assume {:verifier.code 0} true;
    out_$i115 := $zext.i16.i32(out_$i114);
    call {:si_unique_call 102} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i115);
    goto corral_source_split_220;

  corral_source_split_218:
    assume {:verifier.code 0} true;
    out_$i114 := $load.i16($M.1, out_$p113);
    call {:si_unique_call 101} {:cexpr "__cil_tmp77"} boogie_si_record_i16(out_$i114);
    goto corral_source_split_219;

  corral_source_split_217:
    assume {:verifier.code 0} true;
    out_$p113 := $add.ref(out_$p112, $mul.ref(out_$i108, 2));
    goto corral_source_split_218;

  corral_source_split_216:
    assume {:verifier.code 0} true;
    out_$p112 := $load.ref($M.1, out_$p111);
    goto corral_source_split_217;

  corral_source_split_215:
    assume {:verifier.code 0} true;
    out_$p111 := $i2p.i64.ref(out_$i110);
    goto corral_source_split_216;

  corral_source_split_214:
    assume {:verifier.code 0} true;
    out_$i110 := $add.i64(out_$i109, 544);
    call {:si_unique_call 100} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i110);
    goto corral_source_split_215;

  corral_source_split_213:
    assume {:verifier.code 0} true;
    out_$i109 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 99} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i109);
    goto corral_source_split_214;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i108 := $zext.i32.i64(out_$i67);
    call {:si_unique_call 98} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i108);
    goto corral_source_split_213;

  $bb37:
    assume !(out_$i98 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  corral_source_split_199:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37;

  corral_source_split_198:
    assume {:verifier.code 0} true;
    out_$i98 := $eq.i32(out_$i66, 0);
    goto corral_source_split_199;

  $bb29:
    assume {:verifier.code 0} true;
    out_$i97 := $sub.i32(out_$i66, 1);
    call {:si_unique_call 90} {:cexpr "silly"} boogie_si_record_i32(out_$i97);
    goto corral_source_split_198;

  corral_source_split_189:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_185:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb23;

  corral_source_split_180:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb18:
    assume out_$i93 == 1;
    goto corral_source_split_180;

  corral_source_split_178:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_177:
    assume {:verifier.code 0} true;
    out_$i93 := $eq.i32(out_$i78, 255);
    goto corral_source_split_178;

  $bb16:
    assume !(out_$i91 == 1);
    goto corral_source_split_177;

  corral_source_split_173:
    assume {:verifier.code 0} true;
    out_$i92 := out_$i67;
    assume true;
    goto $bb16;

  corral_source_split_172:
    assume {:verifier.code 0} true;
    out_$i91 := $eq.i32(out_$i78, 85);
    goto corral_source_split_173;

  $bb13:
    assume !(out_$i90 == 1);
    goto corral_source_split_172;

  corral_source_split_168:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13;

  corral_source_split_167:
    assume {:verifier.code 0} true;
    out_$i90 := $eq.i32(out_$i78, 0);
    goto corral_source_split_168;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_167;

  corral_source_split_165:
    assume {:verifier.code 0} true;
    out_$i89 := $or.i32(out_$i88, out_$i83);
    call {:si_unique_call 88} {:cexpr "__cil_tmp65"} boogie_si_record_i32(out_$i89);
    assume {:verifier.code 0} true;
    out_$i78 := out_$i89;
    goto $bb11;

  corral_source_split_153:
    assume {:verifier.code 0} true;
    out_$i78 := 17;
    goto $bb11;

  $bb9:
    assume out_$i77 == 1;
    goto corral_source_split_153;

  corral_source_split_151:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  corral_source_split_150:
    assume {:verifier.code 0} true;
    out_$i77 := $slt.i32(out_$i76, 0);
    goto corral_source_split_151;

  corral_source_split_149:
    assume {:verifier.code 0} true;
    call {:si_unique_call 80} out_$i76 := inftl_read_oob(in_$p33, out_$i74, 8, in_$p4, out_$p75);
    call {:si_unique_call 81} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i76);
    goto corral_source_split_150;

  corral_source_split_148:
    assume {:verifier.code 0} true;
    out_$p75 := $bitcast.ref.ref(in_$p3);
    goto corral_source_split_149;

  corral_source_split_147:
    assume {:verifier.code 0} true;
    out_$i74 := $add.i64(out_$i73, in_$i29);
    call {:si_unique_call 79} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i74);
    goto corral_source_split_148;

  corral_source_split_146:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i32.i64(out_$i72);
    call {:si_unique_call 78} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i73);
    goto corral_source_split_147;

  corral_source_split_145:
    assume {:verifier.code 0} true;
    out_$i72 := $mul.i32(out_$i71, out_$i67);
    call {:si_unique_call 77} {:cexpr "__cil_tmp54"} boogie_si_record_i32(out_$i72);
    goto corral_source_split_146;

  corral_source_split_144:
    assume {:verifier.code 0} true;
    out_$i71 := $load.i32($M.1, out_$p70);
    call {:si_unique_call 76} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i71);
    goto corral_source_split_145;

  corral_source_split_143:
    assume {:verifier.code 0} true;
    out_$p70 := $i2p.i64.ref(out_$i69);
    goto corral_source_split_144;

  corral_source_split_142:
    assume {:verifier.code 0} true;
    out_$i69 := $add.i64(out_$i68, 356);
    call {:si_unique_call 75} {:cexpr "__cil_tmp52"} boogie_si_record_i64(out_$i69);
    goto corral_source_split_143;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i68 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 74} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i68);
    goto corral_source_split_142;

  corral_source_split_140:
    assume {:verifier.code 0} true;
    goto $bb8;

  corral_source_split_164:
    assume {:verifier.code 0} true;
    out_$i88 := $zext.i8.i32(out_$i87);
    call {:si_unique_call 87} {:cexpr "__cil_tmp64"} boogie_si_record_i32(out_$i88);
    goto corral_source_split_165;

  corral_source_split_163:
    assume {:verifier.code 0} true;
    out_$i87 := $load.i8($M.1, out_$p86);
    call {:si_unique_call 86} {:cexpr "__cil_tmp63"} boogie_si_record_i8(out_$i87);
    goto corral_source_split_164;

  corral_source_split_162:
    assume {:verifier.code 0} true;
    out_$p86 := $i2p.i64.ref(out_$i85);
    goto corral_source_split_163;

  corral_source_split_161:
    assume {:verifier.code 0} true;
    out_$i85 := $add.i64(out_$i84, 6);
    call {:si_unique_call 85} {:cexpr "__cil_tmp62"} boogie_si_record_i64(out_$i85);
    goto corral_source_split_162;

  corral_source_split_160:
    assume {:verifier.code 0} true;
    out_$i84 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_161;

  corral_source_split_159:
    assume {:verifier.code 0} true;
    out_$i83 := $zext.i8.i32(out_$i82);
    call {:si_unique_call 84} {:cexpr "__cil_tmp61"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_160;

  corral_source_split_158:
    assume {:verifier.code 0} true;
    out_$i82 := $load.i8($M.1, out_$p81);
    call {:si_unique_call 83} {:cexpr "__cil_tmp60"} boogie_si_record_i8(out_$i82);
    goto corral_source_split_159;

  corral_source_split_157:
    assume {:verifier.code 0} true;
    out_$p81 := $i2p.i64.ref(out_$i80);
    goto corral_source_split_158;

  corral_source_split_156:
    assume {:verifier.code 0} true;
    out_$i80 := $add.i64(out_$i79, 7);
    call {:si_unique_call 82} {:cexpr "__cil_tmp59"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_157;

  corral_source_split_155:
    assume {:verifier.code 0} true;
    out_$i79 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_156;

  $bb10:
    assume !(out_$i77 == 1);
    goto corral_source_split_155;

  $bb21:
    assume out_$i94 == 1;
    goto corral_source_split_185;

  corral_source_split_183:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_182:
    assume {:verifier.code 0} true;
    out_$i94 := $eq.i32(out_$i78, 17);
    goto corral_source_split_183;

  $bb19:
    assume !(out_$i93 == 1);
    goto corral_source_split_182;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 89} out_vslice_dummy_var_23 := printk.ref.i64.i32.i32(.str.33, in_$i1, out_$i67, out_$i78);
    goto corral_source_split_189;

  corral_source_split_187:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i94 == 1);
    goto corral_source_split_187;

  $bb40_dummy:
    call {:si_unique_call 1} out_$i68, out_$i69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$i78, out_$i90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i97, out_$i98, out_$i108, out_$i109, out_$i110, out_$p111, out_$p112, out_$p113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i66, out_$i67, out_$i118, out_vslice_dummy_var_23 := inftl_readblock_loop_$bb7(in_$i1, in_$p3, in_$p4, in_$p7, in_$i29, in_$p33, in_$p62, out_$i68, out_$i69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$i78, out_$i90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i97, out_$i98, out_$i108, out_$i109, out_$i110, out_$p111, out_$p112, out_$p113, out_$i114, out_$i115, out_$i116, out_$i117, out_$i66, out_$i67, out_$i118, out_vslice_dummy_var_23);
    return;

  exit:
    return;
}



procedure inftl_readblock_loop_$bb7(in_$i1: i64, in_$p3: ref, in_$p4: ref, in_$p7: ref, in_$i29: i64, in_$p33: ref, in_$p62: ref, in_$i68: i64, in_$i69: i64, in_$p70: ref, in_$i71: i32, in_$i72: i32, in_$i73: i64, in_$i74: i64, in_$p75: ref, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i64, in_$i85: i64, in_$p86: ref, in_$i87: i8, in_$i88: i32, in_$i89: i32, in_$i78: i32, in_$i90: i1, in_$i91: i1, in_$i92: i32, in_$i93: i1, in_$i94: i1, in_$i97: i32, in_$i98: i1, in_$i108: i64, in_$i109: i64, in_$i110: i64, in_$p111: ref, in_$p112: ref, in_$p113: ref, in_$i114: i16, in_$i115: i32, in_$i116: i32, in_$i117: i1, in_$i66: i32, in_$i67: i32, in_$i118: i32, in_vslice_dummy_var_23: i32) returns (out_$i68: i64, out_$i69: i64, out_$p70: ref, out_$i71: i32, out_$i72: i32, out_$i73: i64, out_$i74: i64, out_$p75: ref, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i64, out_$i85: i64, out_$p86: ref, out_$i87: i8, out_$i88: i32, out_$i89: i32, out_$i78: i32, out_$i90: i1, out_$i91: i1, out_$i92: i32, out_$i93: i1, out_$i94: i1, out_$i97: i32, out_$i98: i1, out_$i108: i64, out_$i109: i64, out_$i110: i64, out_$p111: ref, out_$p112: ref, out_$p113: ref, out_$i114: i16, out_$i115: i32, out_$i116: i32, out_$i117: i1, out_$i66: i32, out_$i67: i32, out_$i118: i32, out_vslice_dummy_var_23: i32);
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation inftl_writeblock_loop_$bb4(in_$i42: i64, in_$p44: ref, in_$i45: i64, in_$i46: i1, in_$p43: ref, in_$i48: i8, in_$i49: i32, in_$i50: i1, in_$p51: ref, in_$p47: ref) returns (out_$p44: ref, out_$i45: i64, out_$i46: i1, out_$p43: ref, out_$i48: i8, out_$i49: i32, out_$i50: i1, out_$p51: ref, out_$p47: ref)
{

  entry:
    out_$p44, out_$i45, out_$i46, out_$p43, out_$i48, out_$i49, out_$i50, out_$p51, out_$p47 := in_$p44, in_$i45, in_$i46, in_$p43, in_$i48, in_$i49, in_$i50, in_$p51, in_$p47;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    goto corral_source_split_294;

  $bb6:
    assume out_$i46 == 1;
    assume {:verifier.code 0} true;
    out_$p43 := out_$p44;
    goto $bb6_dummy;

  corral_source_split_301:
    assume {:verifier.code 0} true;
    out_$p47 := out_$p44;
    assume true;
    goto $bb6;

  corral_source_split_300:
    assume {:verifier.code 0} true;
    out_$i46 := $ult.i64(out_$i45, in_$i42);
    goto corral_source_split_301;

  corral_source_split_299:
    assume {:verifier.code 0} true;
    out_$i45 := $p2i.ref.i64(out_$p44);
    call {:si_unique_call 141} {:cexpr "__cil_tmp31"} boogie_si_record_i64(out_$i45);
    goto corral_source_split_300;

  $bb5:
    assume {:verifier.code 0} true;
    out_$p44 := $add.ref(out_$p43, $mul.ref(1, 1));
    goto corral_source_split_299;

  corral_source_split_305:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb8:
    assume out_$i50 == 1;
    goto corral_source_split_305;

  corral_source_split_297:
    assume {:verifier.code 0} true;
    out_$p51 := out_$p43;
    assume true;
    goto $bb8;

  corral_source_split_296:
    assume {:verifier.code 0} true;
    out_$i50 := $eq.i32(out_$i49, 0);
    goto corral_source_split_297;

  corral_source_split_295:
    assume {:verifier.code 0} true;
    out_$i49 := $sext.i8.i32(out_$i48);
    call {:si_unique_call 140} {:cexpr "__cil_tmp34"} boogie_si_record_i32(out_$i49);
    goto corral_source_split_296;

  corral_source_split_294:
    assume {:verifier.code 0} true;
    out_$i48 := $load.i8($M.1, out_$p43);
    call {:si_unique_call 139} {:cexpr "__cil_tmp32"} boogie_si_record_i8(out_$i48);
    goto corral_source_split_295;

  $bb6_dummy:
    call {:si_unique_call 1} out_$p44, out_$i45, out_$i46, out_$p43, out_$i48, out_$i49, out_$i50, out_$p51, out_$p47 := inftl_writeblock_loop_$bb4(in_$i42, out_$p44, out_$i45, out_$i46, out_$p43, out_$i48, out_$i49, out_$i50, out_$p51, out_$p47);
    return;

  exit:
    return;
}



procedure inftl_writeblock_loop_$bb4(in_$i42: i64, in_$p44: ref, in_$i45: i64, in_$i46: i1, in_$p43: ref, in_$i48: i8, in_$i49: i32, in_$i50: i1, in_$p51: ref, in_$p47: ref) returns (out_$p44: ref, out_$i45: i64, out_$i46: i1, out_$p43: ref, out_$i48: i8, out_$i49: i32, out_$i50: i1, out_$p51: ref, out_$p47: ref);



implementation INFTL_mount_loop_$bb144(in_$p0: ref, in_$p502: ref, in_$i507: i64, in_$i508: i64, in_$i509: i64, in_$p510: ref, in_$p511: ref, in_$p512: ref, in_$i513: i16, in_$i514: i32, in_$i515: i1, in_$i517: i32, in_$i518: i1, in_$i519: i64, in_$i520: i64, in_$i521: i64, in_$p522: ref, in_$p523: ref, in_$p524: ref, in_$i525: i64, in_$i526: i64, in_$i527: i64, in_$p528: ref, in_$p529: ref, in_$p530: ref, in_$i531: i64, in_$i532: i64, in_$i533: i64, in_$p534: ref, in_$p535: ref, in_$p536: ref, in_$i537: i16, in_$i538: i32, in_$i539: i1, in_$i540: i64, in_$i541: i64, in_$i542: i64, in_$i543: i64, in_$p544: ref, in_$i545: i16, in_$i546: i32, in_$i547: i32, in_$i548: i16, in_$p549: ref, in_$i550: i64, in_$i551: i64, in_$p552: ref, in_$i553: i16, in_$i554: i32, in_$i555: i1, in_$i556: i64, in_$i557: i64, in_$i558: i16, in_$p559: ref, in_$i560: i32, in_$i561: i16, in_$i562: i32, in_$i563: i1, in_$i506: i32, in_vslice_dummy_var_46: i32) returns (out_$i507: i64, out_$i508: i64, out_$i509: i64, out_$p510: ref, out_$p511: ref, out_$p512: ref, out_$i513: i16, out_$i514: i32, out_$i515: i1, out_$i517: i32, out_$i518: i1, out_$i519: i64, out_$i520: i64, out_$i521: i64, out_$p522: ref, out_$p523: ref, out_$p524: ref, out_$i525: i64, out_$i526: i64, out_$i527: i64, out_$p528: ref, out_$p529: ref, out_$p530: ref, out_$i531: i64, out_$i532: i64, out_$i533: i64, out_$p534: ref, out_$p535: ref, out_$p536: ref, out_$i537: i16, out_$i538: i32, out_$i539: i1, out_$i540: i64, out_$i541: i64, out_$i542: i64, out_$i543: i64, out_$p544: ref, out_$i545: i16, out_$i546: i32, out_$i547: i32, out_$i548: i16, out_$p549: ref, out_$i550: i64, out_$i551: i64, out_$p552: ref, out_$i553: i16, out_$i554: i32, out_$i555: i1, out_$i556: i64, out_$i557: i64, out_$i558: i16, out_$p559: ref, out_$i560: i32, out_$i561: i16, out_$i562: i32, out_$i563: i1, out_$i506: i32, out_vslice_dummy_var_46: i32)
{

  entry:
    out_$i507, out_$i508, out_$i509, out_$p510, out_$p511, out_$p512, out_$i513, out_$i514, out_$i515, out_$i517, out_$i518, out_$i519, out_$i520, out_$i521, out_$p522, out_$p523, out_$p524, out_$i525, out_$i526, out_$i527, out_$p528, out_$p529, out_$p530, out_$i531, out_$i532, out_$i533, out_$p534, out_$p535, out_$p536, out_$i537, out_$i538, out_$i539, out_$i540, out_$i541, out_$i542, out_$i543, out_$p544, out_$i545, out_$i546, out_$i547, out_$i548, out_$p549, out_$i550, out_$i551, out_$p552, out_$i553, out_$i554, out_$i555, out_$i556, out_$i557, out_$i558, out_$p559, out_$i560, out_$i561, out_$i562, out_$i563, out_$i506, out_vslice_dummy_var_46 := in_$i507, in_$i508, in_$i509, in_$p510, in_$p511, in_$p512, in_$i513, in_$i514, in_$i515, in_$i517, in_$i518, in_$i519, in_$i520, in_$i521, in_$p522, in_$p523, in_$p524, in_$i525, in_$i526, in_$i527, in_$p528, in_$p529, in_$p530, in_$i531, in_$i532, in_$i533, in_$p534, in_$p535, in_$p536, in_$i537, in_$i538, in_$i539, in_$i540, in_$i541, in_$i542, in_$i543, in_$p544, in_$i545, in_$i546, in_$i547, in_$i548, in_$p549, in_$i550, in_$i551, in_$p552, in_$i553, in_$i554, in_$i555, in_$i556, in_$i557, in_$i558, in_$p559, in_$i560, in_$i561, in_$i562, in_$i563, in_$i506, in_vslice_dummy_var_46;
    goto $bb144, exit;

  $bb144:
    assume {:verifier.code 0} true;
    goto corral_source_split_1439;

  $bb158:
    assume out_$i563 == 1;
    assume {:verifier.code 0} true;
    out_$i506 := out_$i560;
    goto $bb158_dummy;

  corral_source_split_1512:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb158;

  corral_source_split_1511:
    assume {:verifier.code 0} true;
    out_$i563 := $uge.i32(out_$i562, out_$i560);
    goto corral_source_split_1512;

  corral_source_split_1510:
    assume {:verifier.code 0} true;
    out_$i562 := $zext.i16.i32(out_$i561);
    call {:si_unique_call 713} {:cexpr "__cil_tmp318"} boogie_si_record_i32(out_$i562);
    goto corral_source_split_1511;

  corral_source_split_1509:
    assume {:verifier.code 0} true;
    out_$i561 := $load.i16($M.1, in_$p502);
    call {:si_unique_call 712} {:cexpr "__cil_tmp317"} boogie_si_record_i16(out_$i561);
    goto corral_source_split_1510;

  $bb157:
    assume {:verifier.code 0} true;
    out_$i560 := $add.i32(out_$i506, 1);
    call {:si_unique_call 711} {:cexpr "block"} boogie_si_record_i32(out_$i560);
    goto corral_source_split_1509;

  $bb153:
    assume !(out_$i539 == 1);
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb156:
    assume {:verifier.code 0} true;
    goto $bb157;

  $bb155:
    assume !(out_$i555 == 1);
    assume {:verifier.code 0} true;
    goto $bb156;

  corral_source_split_1507:
    assume {:verifier.code 0} true;
    goto $bb156;

  corral_source_split_1506:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p559, out_$i558);
    goto corral_source_split_1507;

  corral_source_split_1505:
    assume {:verifier.code 0} true;
    out_$p559 := $i2p.i64.ref(out_$i557);
    goto corral_source_split_1506;

  corral_source_split_1504:
    assume {:verifier.code 0} true;
    out_$i558 := $trunc.i32.i16(out_$i506);
    goto corral_source_split_1505;

  corral_source_split_1503:
    assume {:verifier.code 0} true;
    out_$i557 := $add.i64(out_$i556, 524);
    call {:si_unique_call 710} {:cexpr "__cil_tmp314"} boogie_si_record_i64(out_$i557);
    goto corral_source_split_1504;

  corral_source_split_1502:
    assume {:verifier.code 0} true;
    out_$i556 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 709} {:cexpr "__cil_tmp313"} boogie_si_record_i64(out_$i556);
    goto corral_source_split_1503;

  $bb154:
    assume out_$i555 == 1;
    goto corral_source_split_1502;

  corral_source_split_1500:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb154, $bb155;

  corral_source_split_1499:
    assume {:verifier.code 0} true;
    out_$i555 := $eq.i32(out_$i554, 65535);
    goto corral_source_split_1500;

  corral_source_split_1498:
    assume {:verifier.code 0} true;
    out_$i554 := $zext.i16.i32(out_$i553);
    call {:si_unique_call 708} {:cexpr "__cil_tmp312"} boogie_si_record_i32(out_$i554);
    goto corral_source_split_1499;

  corral_source_split_1497:
    assume {:verifier.code 0} true;
    out_$i553 := $load.i16($M.1, out_$p552);
    call {:si_unique_call 707} {:cexpr "__cil_tmp311"} boogie_si_record_i16(out_$i553);
    goto corral_source_split_1498;

  corral_source_split_1496:
    assume {:verifier.code 0} true;
    out_$p552 := $i2p.i64.ref(out_$i551);
    goto corral_source_split_1497;

  corral_source_split_1495:
    assume {:verifier.code 0} true;
    out_$i551 := $add.i64(out_$i550, 524);
    call {:si_unique_call 706} {:cexpr "__cil_tmp310"} boogie_si_record_i64(out_$i551);
    goto corral_source_split_1496;

  corral_source_split_1494:
    assume {:verifier.code 0} true;
    out_$i550 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 705} {:cexpr "__cil_tmp309"} boogie_si_record_i64(out_$i550);
    goto corral_source_split_1495;

  corral_source_split_1493:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p549, out_$i548);
    goto corral_source_split_1494;

  corral_source_split_1492:
    assume {:verifier.code 0} true;
    out_$p549 := $i2p.i64.ref(out_$i541);
    goto corral_source_split_1493;

  corral_source_split_1491:
    assume {:verifier.code 0} true;
    out_$i548 := $trunc.i32.i16(out_$i547);
    goto corral_source_split_1492;

  corral_source_split_1490:
    assume {:verifier.code 0} true;
    out_$i547 := $add.i32(out_$i546, 1);
    call {:si_unique_call 704} {:cexpr "__cil_tmp308"} boogie_si_record_i32(out_$i547);
    goto corral_source_split_1491;

  corral_source_split_1489:
    assume {:verifier.code 0} true;
    out_$i546 := $zext.i16.i32(out_$i545);
    call {:si_unique_call 703} {:cexpr "__cil_tmp307"} boogie_si_record_i32(out_$i546);
    goto corral_source_split_1490;

  corral_source_split_1488:
    assume {:verifier.code 0} true;
    out_$i545 := $load.i16($M.1, out_$p544);
    call {:si_unique_call 702} {:cexpr "__cil_tmp306"} boogie_si_record_i16(out_$i545);
    goto corral_source_split_1489;

  corral_source_split_1487:
    assume {:verifier.code 0} true;
    out_$p544 := $i2p.i64.ref(out_$i543);
    goto corral_source_split_1488;

  corral_source_split_1486:
    assume {:verifier.code 0} true;
    out_$i543 := $add.i64(out_$i542, 522);
    call {:si_unique_call 701} {:cexpr "__cil_tmp305"} boogie_si_record_i64(out_$i543);
    goto corral_source_split_1487;

  corral_source_split_1485:
    assume {:verifier.code 0} true;
    out_$i542 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 700} {:cexpr "__cil_tmp304"} boogie_si_record_i64(out_$i542);
    goto corral_source_split_1486;

  corral_source_split_1484:
    assume {:verifier.code 0} true;
    out_$i541 := $add.i64(out_$i540, 522);
    call {:si_unique_call 699} {:cexpr "__cil_tmp303"} boogie_si_record_i64(out_$i541);
    goto corral_source_split_1485;

  corral_source_split_1483:
    assume {:verifier.code 0} true;
    out_$i540 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 698} {:cexpr "__cil_tmp302"} boogie_si_record_i64(out_$i540);
    goto corral_source_split_1484;

  $bb152:
    assume out_$i539 == 1;
    goto corral_source_split_1483;

  corral_source_split_1481:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb152, $bb153;

  corral_source_split_1480:
    assume {:verifier.code 0} true;
    out_$i539 := $eq.i32(out_$i538, 65534);
    goto corral_source_split_1481;

  corral_source_split_1479:
    assume {:verifier.code 0} true;
    out_$i538 := $zext.i16.i32(out_$i537);
    call {:si_unique_call 697} {:cexpr "__cil_tmp301"} boogie_si_record_i32(out_$i538);
    goto corral_source_split_1480;

  corral_source_split_1478:
    assume {:verifier.code 0} true;
    out_$i537 := $load.i16($M.1, out_$p536);
    call {:si_unique_call 696} {:cexpr "__cil_tmp300"} boogie_si_record_i16(out_$i537);
    goto corral_source_split_1479;

  corral_source_split_1477:
    assume {:verifier.code 0} true;
    out_$p536 := $add.ref(out_$p535, $mul.ref(out_$i531, 2));
    goto corral_source_split_1478;

  corral_source_split_1476:
    assume {:verifier.code 0} true;
    out_$p535 := $load.ref($M.1, out_$p534);
    goto corral_source_split_1477;

  corral_source_split_1475:
    assume {:verifier.code 0} true;
    out_$p534 := $i2p.i64.ref(out_$i533);
    goto corral_source_split_1476;

  corral_source_split_1474:
    assume {:verifier.code 0} true;
    out_$i533 := $add.i64(out_$i532, 544);
    call {:si_unique_call 695} {:cexpr "__cil_tmp297"} boogie_si_record_i64(out_$i533);
    goto corral_source_split_1475;

  corral_source_split_1473:
    assume {:verifier.code 0} true;
    out_$i532 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 694} {:cexpr "__cil_tmp296"} boogie_si_record_i64(out_$i532);
    goto corral_source_split_1474;

  $bb151:
    assume {:verifier.code 0} true;
    out_$i531 := $zext.i32.i64(out_$i506);
    call {:si_unique_call 693} {:cexpr "__cil_tmp295"} boogie_si_record_i64(out_$i531);
    goto corral_source_split_1473;

  $bb147:
    assume !(out_$i515 == 1);
    assume {:verifier.code 0} true;
    goto $bb151;

  $bb150:
    assume {:verifier.code 0} true;
    goto $bb151;

  corral_source_split_1471:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p530, $sub.i16(0, 2));
    assume {:verifier.code 0} true;
    goto $bb150;

  corral_source_split_1463:
    assume {:verifier.code 0} true;
    goto $bb150;

  corral_source_split_1462:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p524, $sub.i16(0, 4));
    goto corral_source_split_1463;

  corral_source_split_1461:
    assume {:verifier.code 0} true;
    out_$p524 := $add.ref(out_$p523, $mul.ref(out_$i519, 2));
    goto corral_source_split_1462;

  corral_source_split_1460:
    assume {:verifier.code 0} true;
    out_$p523 := $load.ref($M.1, out_$p522);
    goto corral_source_split_1461;

  corral_source_split_1459:
    assume {:verifier.code 0} true;
    out_$p522 := $i2p.i64.ref(out_$i521);
    goto corral_source_split_1460;

  corral_source_split_1458:
    assume {:verifier.code 0} true;
    out_$i521 := $add.i64(out_$i520, 544);
    call {:si_unique_call 689} {:cexpr "__cil_tmp287"} boogie_si_record_i64(out_$i521);
    goto corral_source_split_1459;

  corral_source_split_1457:
    assume {:verifier.code 0} true;
    out_$i520 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 688} {:cexpr "__cil_tmp286"} boogie_si_record_i64(out_$i520);
    goto corral_source_split_1458;

  corral_source_split_1456:
    assume {:verifier.code 0} true;
    out_$i519 := $zext.i32.i64(out_$i506);
    call {:si_unique_call 687} {:cexpr "__cil_tmp285"} boogie_si_record_i64(out_$i519);
    goto corral_source_split_1457;

  $bb148:
    assume out_$i518 == 1;
    goto corral_source_split_1456;

  corral_source_split_1454:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb148, $bb149;

  corral_source_split_1453:
    assume {:verifier.code 0} true;
    out_$i518 := $slt.i32(out_$i517, 0);
    goto corral_source_split_1454;

  corral_source_split_1452:
    assume {:verifier.code 0} true;
    call {:si_unique_call 685} out_$i517 := INFTL_formatblock(in_$p0, out_$i506);
    call {:si_unique_call 686} {:cexpr "tmp___7"} boogie_si_record_i32(out_$i517);
    goto corral_source_split_1453;

  corral_source_split_1451:
    assume {:verifier.code 0} true;
    call {:si_unique_call 684} out_vslice_dummy_var_46 := printk.ref.i32(.str.29, out_$i506);
    goto corral_source_split_1452;

  $bb146:
    assume out_$i515 == 1;
    goto corral_source_split_1451;

  corral_source_split_1449:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb146, $bb147;

  corral_source_split_1448:
    assume {:verifier.code 0} true;
    out_$i515 := $eq.i32(out_$i514, 65533);
    goto corral_source_split_1449;

  corral_source_split_1447:
    assume {:verifier.code 0} true;
    out_$i514 := $zext.i16.i32(out_$i513);
    call {:si_unique_call 683} {:cexpr "__cil_tmp283"} boogie_si_record_i32(out_$i514);
    goto corral_source_split_1448;

  corral_source_split_1446:
    assume {:verifier.code 0} true;
    out_$i513 := $load.i16($M.1, out_$p512);
    call {:si_unique_call 682} {:cexpr "__cil_tmp282"} boogie_si_record_i16(out_$i513);
    goto corral_source_split_1447;

  corral_source_split_1445:
    assume {:verifier.code 0} true;
    out_$p512 := $add.ref(out_$p511, $mul.ref(out_$i507, 2));
    goto corral_source_split_1446;

  corral_source_split_1444:
    assume {:verifier.code 0} true;
    out_$p511 := $load.ref($M.1, out_$p510);
    goto corral_source_split_1445;

  corral_source_split_1443:
    assume {:verifier.code 0} true;
    out_$p510 := $i2p.i64.ref(out_$i509);
    goto corral_source_split_1444;

  corral_source_split_1442:
    assume {:verifier.code 0} true;
    out_$i509 := $add.i64(out_$i508, 544);
    call {:si_unique_call 681} {:cexpr "__cil_tmp279"} boogie_si_record_i64(out_$i509);
    goto corral_source_split_1443;

  corral_source_split_1441:
    assume {:verifier.code 0} true;
    out_$i508 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 680} {:cexpr "__cil_tmp278"} boogie_si_record_i64(out_$i508);
    goto corral_source_split_1442;

  $bb145:
    assume {:verifier.code 0} true;
    out_$i507 := $zext.i32.i64(out_$i506);
    call {:si_unique_call 679} {:cexpr "__cil_tmp277"} boogie_si_record_i64(out_$i507);
    goto corral_source_split_1441;

  corral_source_split_1439:
    assume {:verifier.code 0} true;
    goto $bb145;

  corral_source_split_1470:
    assume {:verifier.code 0} true;
    out_$p530 := $add.ref(out_$p529, $mul.ref(out_$i525, 2));
    goto corral_source_split_1471;

  corral_source_split_1469:
    assume {:verifier.code 0} true;
    out_$p529 := $load.ref($M.1, out_$p528);
    goto corral_source_split_1470;

  corral_source_split_1468:
    assume {:verifier.code 0} true;
    out_$p528 := $i2p.i64.ref(out_$i527);
    goto corral_source_split_1469;

  corral_source_split_1467:
    assume {:verifier.code 0} true;
    out_$i527 := $add.i64(out_$i526, 544);
    call {:si_unique_call 692} {:cexpr "__cil_tmp292"} boogie_si_record_i64(out_$i527);
    goto corral_source_split_1468;

  corral_source_split_1466:
    assume {:verifier.code 0} true;
    out_$i526 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 691} {:cexpr "__cil_tmp291"} boogie_si_record_i64(out_$i526);
    goto corral_source_split_1467;

  corral_source_split_1465:
    assume {:verifier.code 0} true;
    out_$i525 := $zext.i32.i64(out_$i506);
    call {:si_unique_call 690} {:cexpr "__cil_tmp290"} boogie_si_record_i64(out_$i525);
    goto corral_source_split_1466;

  $bb149:
    assume !(out_$i518 == 1);
    goto corral_source_split_1465;

  $bb158_dummy:
    call {:si_unique_call 1} out_$i507, out_$i508, out_$i509, out_$p510, out_$p511, out_$p512, out_$i513, out_$i514, out_$i515, out_$i517, out_$i518, out_$i519, out_$i520, out_$i521, out_$p522, out_$p523, out_$p524, out_$i525, out_$i526, out_$i527, out_$p528, out_$p529, out_$p530, out_$i531, out_$i532, out_$i533, out_$p534, out_$p535, out_$p536, out_$i537, out_$i538, out_$i539, out_$i540, out_$i541, out_$i542, out_$i543, out_$p544, out_$i545, out_$i546, out_$i547, out_$i548, out_$p549, out_$i550, out_$i551, out_$p552, out_$i553, out_$i554, out_$i555, out_$i556, out_$i557, out_$i558, out_$p559, out_$i560, out_$i561, out_$i562, out_$i563, out_$i506, out_vslice_dummy_var_46 := INFTL_mount_loop_$bb144(in_$p0, in_$p502, out_$i507, out_$i508, out_$i509, out_$p510, out_$p511, out_$p512, out_$i513, out_$i514, out_$i515, out_$i517, out_$i518, out_$i519, out_$i520, out_$i521, out_$p522, out_$p523, out_$p524, out_$i525, out_$i526, out_$i527, out_$p528, out_$p529, out_$p530, out_$i531, out_$i532, out_$i533, out_$p534, out_$p535, out_$p536, out_$i537, out_$i538, out_$i539, out_$i540, out_$i541, out_$i542, out_$i543, out_$p544, out_$i545, out_$i546, out_$i547, out_$i548, out_$p549, out_$i550, out_$i551, out_$p552, out_$i553, out_$i554, out_$i555, out_$i556, out_$i557, out_$i558, out_$p559, out_$i560, out_$i561, out_$i562, out_$i563, out_$i506, out_vslice_dummy_var_46);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb144(in_$p0: ref, in_$p502: ref, in_$i507: i64, in_$i508: i64, in_$i509: i64, in_$p510: ref, in_$p511: ref, in_$p512: ref, in_$i513: i16, in_$i514: i32, in_$i515: i1, in_$i517: i32, in_$i518: i1, in_$i519: i64, in_$i520: i64, in_$i521: i64, in_$p522: ref, in_$p523: ref, in_$p524: ref, in_$i525: i64, in_$i526: i64, in_$i527: i64, in_$p528: ref, in_$p529: ref, in_$p530: ref, in_$i531: i64, in_$i532: i64, in_$i533: i64, in_$p534: ref, in_$p535: ref, in_$p536: ref, in_$i537: i16, in_$i538: i32, in_$i539: i1, in_$i540: i64, in_$i541: i64, in_$i542: i64, in_$i543: i64, in_$p544: ref, in_$i545: i16, in_$i546: i32, in_$i547: i32, in_$i548: i16, in_$p549: ref, in_$i550: i64, in_$i551: i64, in_$p552: ref, in_$i553: i16, in_$i554: i32, in_$i555: i1, in_$i556: i64, in_$i557: i64, in_$i558: i16, in_$p559: ref, in_$i560: i32, in_$i561: i16, in_$i562: i32, in_$i563: i1, in_$i506: i32, in_vslice_dummy_var_46: i32) returns (out_$i507: i64, out_$i508: i64, out_$i509: i64, out_$p510: ref, out_$p511: ref, out_$p512: ref, out_$i513: i16, out_$i514: i32, out_$i515: i1, out_$i517: i32, out_$i518: i1, out_$i519: i64, out_$i520: i64, out_$i521: i64, out_$p522: ref, out_$p523: ref, out_$p524: ref, out_$i525: i64, out_$i526: i64, out_$i527: i64, out_$p528: ref, out_$p529: ref, out_$p530: ref, out_$i531: i64, out_$i532: i64, out_$i533: i64, out_$p534: ref, out_$p535: ref, out_$p536: ref, out_$i537: i16, out_$i538: i32, out_$i539: i1, out_$i540: i64, out_$i541: i64, out_$i542: i64, out_$i543: i64, out_$p544: ref, out_$i545: i16, out_$i546: i32, out_$i547: i32, out_$i548: i16, out_$p549: ref, out_$i550: i64, out_$i551: i64, out_$p552: ref, out_$i553: i16, out_$i554: i32, out_$i555: i1, out_$i556: i64, out_$i557: i64, out_$i558: i16, out_$p559: ref, out_$i560: i32, out_$i561: i16, out_$i562: i32, out_$i563: i1, out_$i506: i32, out_vslice_dummy_var_46: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_mount_loop_$bb118(in_$p0: ref, in_$p62: ref, in_$p365: ref, in_$i375: i64, in_$i376: i64, in_$i377: i64, in_$p378: ref, in_$p379: ref, in_$p380: ref, in_$i381: i16, in_$i382: i32, in_$i383: i1, in_$i384: i32, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i64, in_$i393: i64, in_$i394: i64, in_$p395: ref, in_$p396: ref, in_$p397: ref, in_$i398: i16, in_$i399: i32, in_$i400: i1, in_$i401: i64, in_$i402: i64, in_$i403: i64, in_$p404: ref, in_$p405: ref, in_$p406: ref, in_$i407: i16, in_$i408: i32, in_$i410: i64, in_$i411: i64, in_$i412: i64, in_$p413: ref, in_$p414: ref, in_$p415: ref, in_$i416: i32, in_$i417: i64, in_$p418: ref, in_$i419: i8, in_$i420: i32, in_$i421: i1, in_$i422: i32, in_$i423: i32, in_$i424: i32, in_$i438: i32, in_$i439: i32, in_$i440: i8, in_$i441: i64, in_$i442: i64, in_$i443: i64, in_$p444: ref, in_$p445: ref, in_$p446: ref, in_$i447: i16, in_$i448: i32, in_$i449: i32, in_$i450: i16, in_$i451: i32, in_$i452: i1, in_$i371: i8, in_$i372: i32, in_$i373: i32, in_$i374: i32, in_$i453: i32, in_$i349: i32, in_vslice_dummy_var_44: i32) returns (out_$i375: i64, out_$i376: i64, out_$i377: i64, out_$p378: ref, out_$p379: ref, out_$p380: ref, out_$i381: i16, out_$i382: i32, out_$i383: i1, out_$i384: i32, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i64, out_$i393: i64, out_$i394: i64, out_$p395: ref, out_$p396: ref, out_$p397: ref, out_$i398: i16, out_$i399: i32, out_$i400: i1, out_$i401: i64, out_$i402: i64, out_$i403: i64, out_$p404: ref, out_$p405: ref, out_$p406: ref, out_$i407: i16, out_$i408: i32, out_$i410: i64, out_$i411: i64, out_$i412: i64, out_$p413: ref, out_$p414: ref, out_$p415: ref, out_$i416: i32, out_$i417: i64, out_$p418: ref, out_$i419: i8, out_$i420: i32, out_$i421: i1, out_$i422: i32, out_$i423: i32, out_$i424: i32, out_$i438: i32, out_$i439: i32, out_$i440: i8, out_$i441: i64, out_$i442: i64, out_$i443: i64, out_$p444: ref, out_$p445: ref, out_$p446: ref, out_$i447: i16, out_$i448: i32, out_$i449: i32, out_$i450: i16, out_$i451: i32, out_$i452: i1, out_$i371: i8, out_$i372: i32, out_$i373: i32, out_$i374: i32, out_$i453: i32, out_vslice_dummy_var_44: i32)
{

  entry:
    out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_vslice_dummy_var_44 := in_$i375, in_$i376, in_$i377, in_$p378, in_$p379, in_$p380, in_$i381, in_$i382, in_$i383, in_$i384, in_$i387, in_$i388, in_$p389, in_$i390, in_$i391, in_$i392, in_$i393, in_$i394, in_$p395, in_$p396, in_$p397, in_$i398, in_$i399, in_$i400, in_$i401, in_$i402, in_$i403, in_$p404, in_$p405, in_$p406, in_$i407, in_$i408, in_$i410, in_$i411, in_$i412, in_$p413, in_$p414, in_$p415, in_$i416, in_$i417, in_$p418, in_$i419, in_$i420, in_$i421, in_$i422, in_$i423, in_$i424, in_$i438, in_$i439, in_$i440, in_$i441, in_$i442, in_$i443, in_$p444, in_$p445, in_$p446, in_$i447, in_$i448, in_$i449, in_$i450, in_$i451, in_$i452, in_$i371, in_$i372, in_$i373, in_$i374, in_$i453, in_vslice_dummy_var_44;
    goto $bb118, exit;

  $bb118:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1279;

  $bb130:
    assume out_$i452 == 1;
    assume {:verifier.code 0} true;
    out_$i371, out_$i372, out_$i373, out_$i374 := out_$i440, out_$i449, out_$i448, out_$i373;
    goto $bb130_dummy;

  corral_source_split_1371:
    assume {:verifier.code 0} true;
    out_$i453 := out_$i449;
    assume true;
    goto $bb130;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    out_$i452 := $sgt.i32(out_$i451, out_$i449);
    goto corral_source_split_1371;

  corral_source_split_1369:
    assume {:verifier.code 0} true;
    out_$i451 := $zext.i16.i32(out_$i450);
    call {:si_unique_call 651} {:cexpr "__cil_tmp251"} boogie_si_record_i32(out_$i451);
    goto corral_source_split_1370;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    out_$i450 := $load.i16($M.1, in_$p365);
    call {:si_unique_call 650} {:cexpr "__cil_tmp250"} boogie_si_record_i16(out_$i450);
    goto corral_source_split_1369;

  corral_source_split_1367:
    assume {:verifier.code 0} true;
    out_$i449 := $add.i32(out_$i372, 1);
    call {:si_unique_call 649} {:cexpr "i"} boogie_si_record_i32(out_$i449);
    goto corral_source_split_1368;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    out_$i448 := $zext.i16.i32(out_$i447);
    call {:si_unique_call 648} {:cexpr "block"} boogie_si_record_i32(out_$i448);
    goto corral_source_split_1367;

  corral_source_split_1365:
    assume {:verifier.code 0} true;
    out_$i447 := $load.i16($M.1, out_$p446);
    call {:si_unique_call 647} {:cexpr "__cil_tmp247"} boogie_si_record_i16(out_$i447);
    goto corral_source_split_1366;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    out_$p446 := $add.ref(out_$p445, $mul.ref(out_$i441, 2));
    goto corral_source_split_1365;

  corral_source_split_1363:
    assume {:verifier.code 0} true;
    out_$p445 := $load.ref($M.1, out_$p444);
    goto corral_source_split_1364;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    out_$p444 := $i2p.i64.ref(out_$i443);
    goto corral_source_split_1363;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    out_$i443 := $add.i64(out_$i442, 544);
    call {:si_unique_call 646} {:cexpr "__cil_tmp244"} boogie_si_record_i64(out_$i443);
    goto corral_source_split_1362;

  corral_source_split_1360:
    assume {:verifier.code 0} true;
    out_$i442 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 645} {:cexpr "__cil_tmp243"} boogie_si_record_i64(out_$i442);
    goto corral_source_split_1361;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    out_$i441 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 644} {:cexpr "__cil_tmp242"} boogie_si_record_i64(out_$i441);
    goto corral_source_split_1360;

  corral_source_split_1358:
    assume {:verifier.code 0} true;
    out_$i440 := $trunc.i32.i8(out_$i439);
    call {:si_unique_call 643} {:cexpr "ANAC"} boogie_si_record_i8(out_$i440);
    goto corral_source_split_1359;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    out_$i439 := $sub.i32(out_$i438, 1);
    call {:si_unique_call 642} {:cexpr "__cil_tmp241"} boogie_si_record_i32(out_$i439);
    goto corral_source_split_1358;

  $bb129:
    assume {:verifier.code 0} true;
    out_$i438 := $zext.i8.i32(out_$i371);
    call {:si_unique_call 641} {:cexpr "__cil_tmp240"} boogie_si_record_i32(out_$i438);
    goto corral_source_split_1357;

  $bb128:
    assume !(out_$i421 == 1);
    assume {:verifier.code 0} true;
    goto $bb129;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    out_$i422, out_$i423, out_$i424 := out_$i374, out_$i373, out_$i372;
    assume true;
    goto $bb128;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    out_$i421 := $ne.i32(out_$i420, out_$i416);
    goto corral_source_split_1338;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    out_$i420 := $zext.i8.i32(out_$i419);
    call {:si_unique_call 634} {:cexpr "__cil_tmp229"} boogie_si_record_i32(out_$i420);
    goto corral_source_split_1337;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    out_$i419 := $load.i8($M.1, out_$p418);
    call {:si_unique_call 633} {:cexpr "__cil_tmp228"} boogie_si_record_i8(out_$i419);
    goto corral_source_split_1336;

  corral_source_split_1334:
    assume {:verifier.code 0} true;
    out_$p418 := $add.ref(in_$p62, $mul.ref(out_$i417, 1));
    goto corral_source_split_1335;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    out_$i417 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 632} {:cexpr "__cil_tmp226"} boogie_si_record_i64(out_$i417);
    goto corral_source_split_1334;

  $bb126:
    assume {:verifier.code 0} true;
    out_$i416 := $zext.i8.i32(out_$i371);
    call {:si_unique_call 631} {:cexpr "__cil_tmp225"} boogie_si_record_i32(out_$i416);
    goto corral_source_split_1333;

  $bb125:
    assume !(out_$i400 == 1);
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p415, $sub.i16(0, 1));
    goto corral_source_split_1331;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    out_$p415 := $add.ref(out_$p414, $mul.ref(out_$i410, 2));
    goto corral_source_split_1330;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    out_$p414 := $load.ref($M.1, out_$p413);
    goto corral_source_split_1329;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    out_$p413 := $i2p.i64.ref(out_$i412);
    goto corral_source_split_1328;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    out_$i412 := $add.i64(out_$i411, 544);
    call {:si_unique_call 630} {:cexpr "__cil_tmp222"} boogie_si_record_i64(out_$i412);
    goto corral_source_split_1327;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    out_$i411 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 629} {:cexpr "__cil_tmp221"} boogie_si_record_i64(out_$i411);
    goto corral_source_split_1326;

  corral_source_split_1324:
    assume {:verifier.code 0} true;
    out_$i410 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 628} {:cexpr "__cil_tmp220"} boogie_si_record_i64(out_$i410);
    goto corral_source_split_1325;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 627} out_vslice_dummy_var_44 := printk.ref.i32.i32(.str.27, out_$i408, in_$i349);
    goto corral_source_split_1324;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    out_$i408 := $zext.i16.i32(out_$i407);
    call {:si_unique_call 626} {:cexpr "__cil_tmp219"} boogie_si_record_i32(out_$i408);
    goto corral_source_split_1323;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    out_$i407 := $load.i16($M.1, out_$p406);
    call {:si_unique_call 625} {:cexpr "__cil_tmp218"} boogie_si_record_i16(out_$i407);
    goto corral_source_split_1322;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    out_$p406 := $add.ref(out_$p405, $mul.ref(out_$i401, 2));
    goto corral_source_split_1321;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    out_$p405 := $load.ref($M.1, out_$p404);
    goto corral_source_split_1320;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    out_$p404 := $i2p.i64.ref(out_$i403);
    goto corral_source_split_1319;

  corral_source_split_1317:
    assume {:verifier.code 0} true;
    out_$i403 := $add.i64(out_$i402, 544);
    call {:si_unique_call 624} {:cexpr "__cil_tmp215"} boogie_si_record_i64(out_$i403);
    goto corral_source_split_1318;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    out_$i402 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 623} {:cexpr "__cil_tmp214"} boogie_si_record_i64(out_$i402);
    goto corral_source_split_1317;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    out_$i401 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 622} {:cexpr "__cil_tmp213"} boogie_si_record_i64(out_$i401);
    goto corral_source_split_1316;

  $bb124:
    assume out_$i400 == 1;
    goto corral_source_split_1315;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb124, $bb125;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    out_$i400 := $sgt.i32(out_$i399, out_$i391);
    goto corral_source_split_1313;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    out_$i399 := $zext.i16.i32(out_$i398);
    call {:si_unique_call 621} {:cexpr "__cil_tmp212"} boogie_si_record_i32(out_$i399);
    goto corral_source_split_1312;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    out_$i398 := $load.i16($M.1, out_$p397);
    call {:si_unique_call 620} {:cexpr "__cil_tmp211"} boogie_si_record_i16(out_$i398);
    goto corral_source_split_1311;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    out_$p397 := $add.ref(out_$p396, $mul.ref(out_$i392, 2));
    goto corral_source_split_1310;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    out_$p396 := $load.ref($M.1, out_$p395);
    goto corral_source_split_1309;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    out_$p395 := $i2p.i64.ref(out_$i394);
    goto corral_source_split_1308;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    out_$i394 := $add.i64(out_$i393, 544);
    call {:si_unique_call 619} {:cexpr "__cil_tmp208"} boogie_si_record_i64(out_$i394);
    goto corral_source_split_1307;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    out_$i393 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 618} {:cexpr "__cil_tmp207"} boogie_si_record_i64(out_$i393);
    goto corral_source_split_1306;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    out_$i392 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 617} {:cexpr "__cil_tmp206"} boogie_si_record_i64(out_$i392);
    goto corral_source_split_1305;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    out_$i391 := $zext.i16.i32(out_$i390);
    call {:si_unique_call 616} {:cexpr "__cil_tmp205"} boogie_si_record_i32(out_$i391);
    goto corral_source_split_1304;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    out_$i390 := $load.i16($M.1, out_$p389);
    call {:si_unique_call 615} {:cexpr "__cil_tmp204"} boogie_si_record_i16(out_$i390);
    goto corral_source_split_1303;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    out_$p389 := $i2p.i64.ref(out_$i388);
    goto corral_source_split_1302;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    out_$i388 := $add.i64(out_$i387, 520);
    call {:si_unique_call 614} {:cexpr "__cil_tmp203"} boogie_si_record_i64(out_$i388);
    goto corral_source_split_1301;

  $bb123:
    assume {:verifier.code 0} true;
    out_$i387 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 613} {:cexpr "__cil_tmp202"} boogie_si_record_i64(out_$i387);
    goto corral_source_split_1300;

  $bb121:
    assume !(out_$i383 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    out_$i384 := out_$i372;
    assume true;
    goto $bb121;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    out_$i383 := $eq.i32(out_$i382, 65535);
    goto corral_source_split_1289;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    out_$i382 := $zext.i16.i32(out_$i381);
    call {:si_unique_call 609} {:cexpr "__cil_tmp201"} boogie_si_record_i32(out_$i382);
    goto corral_source_split_1288;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    out_$i381 := $load.i16($M.1, out_$p380);
    call {:si_unique_call 608} {:cexpr "__cil_tmp200"} boogie_si_record_i16(out_$i381);
    goto corral_source_split_1287;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    out_$p380 := $add.ref(out_$p379, $mul.ref(out_$i375, 2));
    goto corral_source_split_1286;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    out_$p379 := $load.ref($M.1, out_$p378);
    goto corral_source_split_1285;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    out_$p378 := $i2p.i64.ref(out_$i377);
    goto corral_source_split_1284;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    out_$i377 := $add.i64(out_$i376, 544);
    call {:si_unique_call 607} {:cexpr "__cil_tmp197"} boogie_si_record_i64(out_$i377);
    goto corral_source_split_1283;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    out_$i376 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 606} {:cexpr "__cil_tmp196"} boogie_si_record_i64(out_$i376);
    goto corral_source_split_1282;

  $bb119:
    assume {:verifier.code 0} true;
    out_$i375 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 605} {:cexpr "__cil_tmp195"} boogie_si_record_i64(out_$i375);
    goto corral_source_split_1281;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    goto $bb119;

  $bb130_dummy:
    call {:si_unique_call 1} out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_vslice_dummy_var_44 := INFTL_mount_loop_$bb118(in_$p0, in_$p62, in_$p365, out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, in_$i349, out_vslice_dummy_var_44);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb118(in_$p0: ref, in_$p62: ref, in_$p365: ref, in_$i375: i64, in_$i376: i64, in_$i377: i64, in_$p378: ref, in_$p379: ref, in_$p380: ref, in_$i381: i16, in_$i382: i32, in_$i383: i1, in_$i384: i32, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i64, in_$i393: i64, in_$i394: i64, in_$p395: ref, in_$p396: ref, in_$p397: ref, in_$i398: i16, in_$i399: i32, in_$i400: i1, in_$i401: i64, in_$i402: i64, in_$i403: i64, in_$p404: ref, in_$p405: ref, in_$p406: ref, in_$i407: i16, in_$i408: i32, in_$i410: i64, in_$i411: i64, in_$i412: i64, in_$p413: ref, in_$p414: ref, in_$p415: ref, in_$i416: i32, in_$i417: i64, in_$p418: ref, in_$i419: i8, in_$i420: i32, in_$i421: i1, in_$i422: i32, in_$i423: i32, in_$i424: i32, in_$i438: i32, in_$i439: i32, in_$i440: i8, in_$i441: i64, in_$i442: i64, in_$i443: i64, in_$p444: ref, in_$p445: ref, in_$p446: ref, in_$i447: i16, in_$i448: i32, in_$i449: i32, in_$i450: i16, in_$i451: i32, in_$i452: i1, in_$i371: i8, in_$i372: i32, in_$i373: i32, in_$i374: i32, in_$i453: i32, in_$i349: i32, in_vslice_dummy_var_44: i32) returns (out_$i375: i64, out_$i376: i64, out_$i377: i64, out_$p378: ref, out_$p379: ref, out_$p380: ref, out_$i381: i16, out_$i382: i32, out_$i383: i1, out_$i384: i32, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i64, out_$i393: i64, out_$i394: i64, out_$p395: ref, out_$p396: ref, out_$p397: ref, out_$i398: i16, out_$i399: i32, out_$i400: i1, out_$i401: i64, out_$i402: i64, out_$i403: i64, out_$p404: ref, out_$p405: ref, out_$p406: ref, out_$i407: i16, out_$i408: i32, out_$i410: i64, out_$i411: i64, out_$i412: i64, out_$p413: ref, out_$p414: ref, out_$p415: ref, out_$i416: i32, out_$i417: i64, out_$p418: ref, out_$i419: i8, out_$i420: i32, out_$i421: i1, out_$i422: i32, out_$i423: i32, out_$i424: i32, out_$i438: i32, out_$i439: i32, out_$i440: i8, out_$i441: i64, out_$i442: i64, out_$i443: i64, out_$p444: ref, out_$p445: ref, out_$p446: ref, out_$i447: i16, out_$i448: i32, out_$i449: i32, out_$i450: i16, out_$i451: i32, out_$i452: i1, out_$i371: i8, out_$i372: i32, out_$i373: i32, out_$i374: i32, out_$i453: i32, out_vslice_dummy_var_44: i32);
  modifies $M.1;



implementation INFTL_mount_loop_$bb109(in_$p0: ref, in_$p62: ref, in_$i109: i32, in_$p345: ref, in_$i350: i64, in_$i351: i64, in_$i352: i64, in_$p353: ref, in_$p354: ref, in_$p355: ref, in_$i356: i16, in_$i357: i32, in_$i358: i1, in_$i360: i64, in_$p361: ref, in_$i362: i8, in_$i363: i64, in_$i364: i64, in_$p365: ref, in_$i366: i16, in_$i367: i32, in_$i368: i1, in_$i375: i64, in_$i376: i64, in_$i377: i64, in_$p378: ref, in_$p379: ref, in_$p380: ref, in_$i381: i16, in_$i382: i32, in_$i383: i1, in_$i384: i32, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i64, in_$i393: i64, in_$i394: i64, in_$p395: ref, in_$p396: ref, in_$p397: ref, in_$i398: i16, in_$i399: i32, in_$i400: i1, in_$i401: i64, in_$i402: i64, in_$i403: i64, in_$p404: ref, in_$p405: ref, in_$p406: ref, in_$i407: i16, in_$i408: i32, in_$i410: i64, in_$i411: i64, in_$i412: i64, in_$p413: ref, in_$p414: ref, in_$p415: ref, in_$i416: i32, in_$i417: i64, in_$p418: ref, in_$i419: i8, in_$i420: i32, in_$i421: i1, in_$i422: i32, in_$i423: i32, in_$i424: i32, in_$i425: i64, in_$i426: i64, in_$i427: i64, in_$p428: ref, in_$p429: ref, in_$p430: ref, in_$i431: i16, in_$i432: i64, in_$i433: i64, in_$i434: i64, in_$p435: ref, in_$p436: ref, in_$p437: ref, in_$i438: i32, in_$i439: i32, in_$i440: i8, in_$i441: i64, in_$i442: i64, in_$i443: i64, in_$p444: ref, in_$p445: ref, in_$p446: ref, in_$i447: i16, in_$i448: i32, in_$i449: i32, in_$i450: i16, in_$i451: i32, in_$i452: i1, in_$i371: i8, in_$i372: i32, in_$i373: i32, in_$i374: i32, in_$i453: i32, in_$i369: i32, in_$i370: i32, in_$i385: i32, in_$i386: i32, in_$i454: i64, in_$i455: i64, in_$p456: ref, in_$i457: i32, in_$i458: i1, in_$i359: i32, in_$i459: i32, in_$i460: i16, in_$i461: i32, in_$i462: i1, in_$i349: i32, in_vslice_dummy_var_44: i32) returns (out_$i350: i64, out_$i351: i64, out_$i352: i64, out_$p353: ref, out_$p354: ref, out_$p355: ref, out_$i356: i16, out_$i357: i32, out_$i358: i1, out_$i360: i64, out_$p361: ref, out_$i362: i8, out_$i363: i64, out_$i364: i64, out_$p365: ref, out_$i366: i16, out_$i367: i32, out_$i368: i1, out_$i375: i64, out_$i376: i64, out_$i377: i64, out_$p378: ref, out_$p379: ref, out_$p380: ref, out_$i381: i16, out_$i382: i32, out_$i383: i1, out_$i384: i32, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i64, out_$i393: i64, out_$i394: i64, out_$p395: ref, out_$p396: ref, out_$p397: ref, out_$i398: i16, out_$i399: i32, out_$i400: i1, out_$i401: i64, out_$i402: i64, out_$i403: i64, out_$p404: ref, out_$p405: ref, out_$p406: ref, out_$i407: i16, out_$i408: i32, out_$i410: i64, out_$i411: i64, out_$i412: i64, out_$p413: ref, out_$p414: ref, out_$p415: ref, out_$i416: i32, out_$i417: i64, out_$p418: ref, out_$i419: i8, out_$i420: i32, out_$i421: i1, out_$i422: i32, out_$i423: i32, out_$i424: i32, out_$i425: i64, out_$i426: i64, out_$i427: i64, out_$p428: ref, out_$p429: ref, out_$p430: ref, out_$i431: i16, out_$i432: i64, out_$i433: i64, out_$i434: i64, out_$p435: ref, out_$p436: ref, out_$p437: ref, out_$i438: i32, out_$i439: i32, out_$i440: i8, out_$i441: i64, out_$i442: i64, out_$i443: i64, out_$p444: ref, out_$p445: ref, out_$p446: ref, out_$i447: i16, out_$i448: i32, out_$i449: i32, out_$i450: i16, out_$i451: i32, out_$i452: i1, out_$i371: i8, out_$i372: i32, out_$i373: i32, out_$i374: i32, out_$i453: i32, out_$i369: i32, out_$i370: i32, out_$i385: i32, out_$i386: i32, out_$i454: i64, out_$i455: i64, out_$p456: ref, out_$i457: i32, out_$i458: i1, out_$i359: i32, out_$i459: i32, out_$i460: i16, out_$i461: i32, out_$i462: i1, out_$i349: i32, out_vslice_dummy_var_44: i32)
{

  entry:
    out_$i350, out_$i351, out_$i352, out_$p353, out_$p354, out_$p355, out_$i356, out_$i357, out_$i358, out_$i360, out_$p361, out_$i362, out_$i363, out_$i364, out_$p365, out_$i366, out_$i367, out_$i368, out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i425, out_$i426, out_$i427, out_$p428, out_$p429, out_$p430, out_$i431, out_$i432, out_$i433, out_$i434, out_$p435, out_$p436, out_$p437, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_$i369, out_$i370, out_$i385, out_$i386, out_$i454, out_$i455, out_$p456, out_$i457, out_$i458, out_$i359, out_$i459, out_$i460, out_$i461, out_$i462, out_$i349, out_vslice_dummy_var_44 := in_$i350, in_$i351, in_$i352, in_$p353, in_$p354, in_$p355, in_$i356, in_$i357, in_$i358, in_$i360, in_$p361, in_$i362, in_$i363, in_$i364, in_$p365, in_$i366, in_$i367, in_$i368, in_$i375, in_$i376, in_$i377, in_$p378, in_$p379, in_$p380, in_$i381, in_$i382, in_$i383, in_$i384, in_$i387, in_$i388, in_$p389, in_$i390, in_$i391, in_$i392, in_$i393, in_$i394, in_$p395, in_$p396, in_$p397, in_$i398, in_$i399, in_$i400, in_$i401, in_$i402, in_$i403, in_$p404, in_$p405, in_$p406, in_$i407, in_$i408, in_$i410, in_$i411, in_$i412, in_$p413, in_$p414, in_$p415, in_$i416, in_$i417, in_$p418, in_$i419, in_$i420, in_$i421, in_$i422, in_$i423, in_$i424, in_$i425, in_$i426, in_$i427, in_$p428, in_$p429, in_$p430, in_$i431, in_$i432, in_$i433, in_$i434, in_$p435, in_$p436, in_$p437, in_$i438, in_$i439, in_$i440, in_$i441, in_$i442, in_$i443, in_$p444, in_$p445, in_$p446, in_$i447, in_$i448, in_$i449, in_$i450, in_$i451, in_$i452, in_$i371, in_$i372, in_$i373, in_$i374, in_$i453, in_$i369, in_$i370, in_$i385, in_$i386, in_$i454, in_$i455, in_$p456, in_$i457, in_$i458, in_$i359, in_$i459, in_$i460, in_$i461, in_$i462, in_$i349, in_vslice_dummy_var_44;
    goto $bb109, exit;

  $bb109:
    assume {:verifier.code 0} true;
    goto corral_source_split_1245;

  $bb135:
    assume out_$i462 == 1;
    assume {:verifier.code 0} true;
    out_$i349 := out_$i459;
    goto $bb135_dummy;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb135;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    out_$i462 := $ugt.i32(out_$i461, out_$i459);
    goto corral_source_split_1263;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    out_$i461 := $zext.i16.i32(out_$i460);
    call {:si_unique_call 598} {:cexpr "__cil_tmp259"} boogie_si_record_i32(out_$i461);
    goto corral_source_split_1262;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    out_$i460 := $load.i16($M.1, in_$p345);
    call {:si_unique_call 597} {:cexpr "__cil_tmp258"} boogie_si_record_i16(out_$i460);
    goto corral_source_split_1261;

  corral_source_split_1259:
    assume {:verifier.code 0} true;
    out_$i459 := $add.i32(out_$i359, 1);
    call {:si_unique_call 596} {:cexpr "logical_block"} boogie_si_record_i32(out_$i459);
    goto corral_source_split_1260;

  $bb113:
    assume {:verifier.code 0} true;
    goto corral_source_split_1259;

  $bb134:
    assume {:verifier.code 0} true;
    out_$i359 := out_$i385;
    goto $bb113;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    out_$i359 := out_$i349;
    goto $bb113;

  $bb111:
    assume out_$i358 == 1;
    goto corral_source_split_1257;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb111, $bb112;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    out_$i358 := $ugt.i32(out_$i357, 65531);
    goto corral_source_split_1255;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    out_$i357 := $zext.i16.i32(out_$i356);
    call {:si_unique_call 595} {:cexpr "block"} boogie_si_record_i32(out_$i357);
    goto corral_source_split_1254;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    out_$i356 := $load.i16($M.1, out_$p355);
    call {:si_unique_call 594} {:cexpr "__cil_tmp192"} boogie_si_record_i16(out_$i356);
    goto corral_source_split_1253;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    out_$p355 := $add.ref(out_$p354, $mul.ref(out_$i350, 2));
    goto corral_source_split_1252;

  corral_source_split_1250:
    assume {:verifier.code 0} true;
    out_$p354 := $load.ref($M.1, out_$p353);
    goto corral_source_split_1251;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    out_$p353 := $i2p.i64.ref(out_$i352);
    goto corral_source_split_1250;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    out_$i352 := $add.i64(out_$i351, 552);
    call {:si_unique_call 593} {:cexpr "__cil_tmp189"} boogie_si_record_i64(out_$i352);
    goto corral_source_split_1249;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    out_$i351 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 592} {:cexpr "__cil_tmp188"} boogie_si_record_i64(out_$i351);
    goto corral_source_split_1248;

  $bb110:
    assume {:verifier.code 0} true;
    out_$i350 := $zext.i32.i64(out_$i349);
    call {:si_unique_call 591} {:cexpr "__cil_tmp187"} boogie_si_record_i64(out_$i350);
    goto corral_source_split_1247;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb133:
    assume !(out_$i458 == 1);
    assume {:verifier.code 0} true;
    goto $bb134;

  corral_source_split_1376:
    assume {:verifier.code 0} true;
    goto $bb134;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    call {:si_unique_call 652} format_chain(in_$p0, in_$i109);
    goto corral_source_split_1376;

  $bb132:
    assume out_$i458 == 1;
    goto corral_source_split_1375;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb132, $bb133;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    out_$i458 := $uge.i32(out_$i386, out_$i457);
    goto corral_source_split_1298;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    out_$i457 := $load.i32($M.1, out_$p456);
    call {:si_unique_call 612} {:cexpr "__cil_tmp254"} boogie_si_record_i32(out_$i457);
    goto corral_source_split_1297;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    out_$p456 := $i2p.i64.ref(out_$i455);
    goto corral_source_split_1296;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    out_$i455 := $add.i64(out_$i454, 560);
    call {:si_unique_call 611} {:cexpr "__cil_tmp253"} boogie_si_record_i64(out_$i455);
    goto corral_source_split_1295;

  corral_source_split_1293:
    assume {:verifier.code 0} true;
    out_$i454 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 610} {:cexpr "__cil_tmp252"} boogie_si_record_i64(out_$i454);
    goto corral_source_split_1294;

  $bb122:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1293;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    out_$i385, out_$i386 := out_$i369, out_$i370;
    goto $bb122;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    out_$i385, out_$i386 := out_$i349, out_$i424;
    goto $bb122;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    out_$i385, out_$i386 := out_$i349, out_$i384;
    goto $bb122;

  $bb120:
    assume out_$i383 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1291;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    out_$i384 := out_$i372;
    assume true;
    goto $bb120, $bb121;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    out_$i383 := $eq.i32(out_$i382, 65535);
    goto corral_source_split_1289;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    out_$i382 := $zext.i16.i32(out_$i381);
    call {:si_unique_call 609} {:cexpr "__cil_tmp201"} boogie_si_record_i32(out_$i382);
    goto corral_source_split_1288;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    out_$i381 := $load.i16($M.1, out_$p380);
    call {:si_unique_call 608} {:cexpr "__cil_tmp200"} boogie_si_record_i16(out_$i381);
    goto corral_source_split_1287;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    out_$p380 := $add.ref(out_$p379, $mul.ref(out_$i375, 2));
    goto corral_source_split_1286;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    out_$p379 := $load.ref($M.1, out_$p378);
    goto corral_source_split_1285;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    out_$p378 := $i2p.i64.ref(out_$i377);
    goto corral_source_split_1284;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    out_$i377 := $add.i64(out_$i376, 544);
    call {:si_unique_call 607} {:cexpr "__cil_tmp197"} boogie_si_record_i64(out_$i377);
    goto corral_source_split_1283;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    out_$i376 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 606} {:cexpr "__cil_tmp196"} boogie_si_record_i64(out_$i376);
    goto corral_source_split_1282;

  $bb119:
    assume {:verifier.code 0} true;
    out_$i375 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 605} {:cexpr "__cil_tmp195"} boogie_si_record_i64(out_$i375);
    goto corral_source_split_1281;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    goto $bb119;

  $bb118:
    call out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_vslice_dummy_var_44 := INFTL_mount_loop_$bb118(in_$p0, in_$p62, out_$p365, out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_$i349, out_vslice_dummy_var_44);
    goto $bb118_last;

  $bb118_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1279;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    out_$i371, out_$i372, out_$i373, out_$i374 := out_$i362, 0, out_$i357, 65535;
    goto $bb118;

  $bb130:
    assume out_$i452 == 1;
    assume {:verifier.code 0} true;
    out_$i371, out_$i372, out_$i373, out_$i374 := out_$i440, out_$i449, out_$i448, out_$i373;
    assume false;
    return;

  corral_source_split_1371:
    assume {:verifier.code 0} true;
    out_$i453 := out_$i449;
    assume true;
    goto $bb130, $bb131;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    out_$i452 := $sgt.i32(out_$i451, out_$i449);
    goto corral_source_split_1371;

  corral_source_split_1369:
    assume {:verifier.code 0} true;
    out_$i451 := $zext.i16.i32(out_$i450);
    call {:si_unique_call 651} {:cexpr "__cil_tmp251"} boogie_si_record_i32(out_$i451);
    goto corral_source_split_1370;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    out_$i450 := $load.i16($M.1, out_$p365);
    call {:si_unique_call 650} {:cexpr "__cil_tmp250"} boogie_si_record_i16(out_$i450);
    goto corral_source_split_1369;

  corral_source_split_1367:
    assume {:verifier.code 0} true;
    out_$i449 := $add.i32(out_$i372, 1);
    call {:si_unique_call 649} {:cexpr "i"} boogie_si_record_i32(out_$i449);
    goto corral_source_split_1368;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    out_$i448 := $zext.i16.i32(out_$i447);
    call {:si_unique_call 648} {:cexpr "block"} boogie_si_record_i32(out_$i448);
    goto corral_source_split_1367;

  corral_source_split_1365:
    assume {:verifier.code 0} true;
    out_$i447 := $load.i16($M.1, out_$p446);
    call {:si_unique_call 647} {:cexpr "__cil_tmp247"} boogie_si_record_i16(out_$i447);
    goto corral_source_split_1366;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    out_$p446 := $add.ref(out_$p445, $mul.ref(out_$i441, 2));
    goto corral_source_split_1365;

  corral_source_split_1363:
    assume {:verifier.code 0} true;
    out_$p445 := $load.ref($M.1, out_$p444);
    goto corral_source_split_1364;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    out_$p444 := $i2p.i64.ref(out_$i443);
    goto corral_source_split_1363;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    out_$i443 := $add.i64(out_$i442, 544);
    call {:si_unique_call 646} {:cexpr "__cil_tmp244"} boogie_si_record_i64(out_$i443);
    goto corral_source_split_1362;

  corral_source_split_1360:
    assume {:verifier.code 0} true;
    out_$i442 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 645} {:cexpr "__cil_tmp243"} boogie_si_record_i64(out_$i442);
    goto corral_source_split_1361;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    out_$i441 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 644} {:cexpr "__cil_tmp242"} boogie_si_record_i64(out_$i441);
    goto corral_source_split_1360;

  corral_source_split_1358:
    assume {:verifier.code 0} true;
    out_$i440 := $trunc.i32.i8(out_$i439);
    call {:si_unique_call 643} {:cexpr "ANAC"} boogie_si_record_i8(out_$i440);
    goto corral_source_split_1359;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    out_$i439 := $sub.i32(out_$i438, 1);
    call {:si_unique_call 642} {:cexpr "__cil_tmp241"} boogie_si_record_i32(out_$i439);
    goto corral_source_split_1358;

  $bb129:
    assume {:verifier.code 0} true;
    out_$i438 := $zext.i8.i32(out_$i371);
    call {:si_unique_call 641} {:cexpr "__cil_tmp240"} boogie_si_record_i32(out_$i438);
    goto corral_source_split_1357;

  $bb128:
    assume !(out_$i421 == 1);
    assume {:verifier.code 0} true;
    goto $bb129;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    out_$i422, out_$i423, out_$i424 := out_$i374, out_$i373, out_$i372;
    assume true;
    goto $bb127, $bb128;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    out_$i421 := $ne.i32(out_$i420, out_$i416);
    goto corral_source_split_1338;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    out_$i420 := $zext.i8.i32(out_$i419);
    call {:si_unique_call 634} {:cexpr "__cil_tmp229"} boogie_si_record_i32(out_$i420);
    goto corral_source_split_1337;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    out_$i419 := $load.i8($M.1, out_$p418);
    call {:si_unique_call 633} {:cexpr "__cil_tmp228"} boogie_si_record_i8(out_$i419);
    goto corral_source_split_1336;

  corral_source_split_1334:
    assume {:verifier.code 0} true;
    out_$p418 := $add.ref(in_$p62, $mul.ref(out_$i417, 1));
    goto corral_source_split_1335;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    out_$i417 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 632} {:cexpr "__cil_tmp226"} boogie_si_record_i64(out_$i417);
    goto corral_source_split_1334;

  $bb126:
    assume {:verifier.code 0} true;
    out_$i416 := $zext.i8.i32(out_$i371);
    call {:si_unique_call 631} {:cexpr "__cil_tmp225"} boogie_si_record_i32(out_$i416);
    goto corral_source_split_1333;

  $bb125:
    assume !(out_$i400 == 1);
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    goto $bb126;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p415, $sub.i16(0, 1));
    goto corral_source_split_1331;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    out_$p415 := $add.ref(out_$p414, $mul.ref(out_$i410, 2));
    goto corral_source_split_1330;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    out_$p414 := $load.ref($M.1, out_$p413);
    goto corral_source_split_1329;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    out_$p413 := $i2p.i64.ref(out_$i412);
    goto corral_source_split_1328;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    out_$i412 := $add.i64(out_$i411, 544);
    call {:si_unique_call 630} {:cexpr "__cil_tmp222"} boogie_si_record_i64(out_$i412);
    goto corral_source_split_1327;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    out_$i411 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 629} {:cexpr "__cil_tmp221"} boogie_si_record_i64(out_$i411);
    goto corral_source_split_1326;

  corral_source_split_1324:
    assume {:verifier.code 0} true;
    out_$i410 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 628} {:cexpr "__cil_tmp220"} boogie_si_record_i64(out_$i410);
    goto corral_source_split_1325;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 627} out_vslice_dummy_var_44 := printk.ref.i32.i32(.str.27, out_$i408, out_$i349);
    goto corral_source_split_1324;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    out_$i408 := $zext.i16.i32(out_$i407);
    call {:si_unique_call 626} {:cexpr "__cil_tmp219"} boogie_si_record_i32(out_$i408);
    goto corral_source_split_1323;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    out_$i407 := $load.i16($M.1, out_$p406);
    call {:si_unique_call 625} {:cexpr "__cil_tmp218"} boogie_si_record_i16(out_$i407);
    goto corral_source_split_1322;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    out_$p406 := $add.ref(out_$p405, $mul.ref(out_$i401, 2));
    goto corral_source_split_1321;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    out_$p405 := $load.ref($M.1, out_$p404);
    goto corral_source_split_1320;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    out_$p404 := $i2p.i64.ref(out_$i403);
    goto corral_source_split_1319;

  corral_source_split_1317:
    assume {:verifier.code 0} true;
    out_$i403 := $add.i64(out_$i402, 544);
    call {:si_unique_call 624} {:cexpr "__cil_tmp215"} boogie_si_record_i64(out_$i403);
    goto corral_source_split_1318;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    out_$i402 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 623} {:cexpr "__cil_tmp214"} boogie_si_record_i64(out_$i402);
    goto corral_source_split_1317;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    out_$i401 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 622} {:cexpr "__cil_tmp213"} boogie_si_record_i64(out_$i401);
    goto corral_source_split_1316;

  $bb124:
    assume out_$i400 == 1;
    goto corral_source_split_1315;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb124, $bb125;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    out_$i400 := $sgt.i32(out_$i399, out_$i391);
    goto corral_source_split_1313;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    out_$i399 := $zext.i16.i32(out_$i398);
    call {:si_unique_call 621} {:cexpr "__cil_tmp212"} boogie_si_record_i32(out_$i399);
    goto corral_source_split_1312;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    out_$i398 := $load.i16($M.1, out_$p397);
    call {:si_unique_call 620} {:cexpr "__cil_tmp211"} boogie_si_record_i16(out_$i398);
    goto corral_source_split_1311;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    out_$p397 := $add.ref(out_$p396, $mul.ref(out_$i392, 2));
    goto corral_source_split_1310;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    out_$p396 := $load.ref($M.1, out_$p395);
    goto corral_source_split_1309;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    out_$p395 := $i2p.i64.ref(out_$i394);
    goto corral_source_split_1308;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    out_$i394 := $add.i64(out_$i393, 544);
    call {:si_unique_call 619} {:cexpr "__cil_tmp208"} boogie_si_record_i64(out_$i394);
    goto corral_source_split_1307;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    out_$i393 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 618} {:cexpr "__cil_tmp207"} boogie_si_record_i64(out_$i393);
    goto corral_source_split_1306;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    out_$i392 := $zext.i32.i64(out_$i373);
    call {:si_unique_call 617} {:cexpr "__cil_tmp206"} boogie_si_record_i64(out_$i392);
    goto corral_source_split_1305;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    out_$i391 := $zext.i16.i32(out_$i390);
    call {:si_unique_call 616} {:cexpr "__cil_tmp205"} boogie_si_record_i32(out_$i391);
    goto corral_source_split_1304;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    out_$i390 := $load.i16($M.1, out_$p389);
    call {:si_unique_call 615} {:cexpr "__cil_tmp204"} boogie_si_record_i16(out_$i390);
    goto corral_source_split_1303;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    out_$p389 := $i2p.i64.ref(out_$i388);
    goto corral_source_split_1302;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    out_$i388 := $add.i64(out_$i387, 520);
    call {:si_unique_call 614} {:cexpr "__cil_tmp203"} boogie_si_record_i64(out_$i388);
    goto corral_source_split_1301;

  $bb123:
    assume {:verifier.code 0} true;
    out_$i387 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 613} {:cexpr "__cil_tmp202"} boogie_si_record_i64(out_$i387);
    goto corral_source_split_1300;

  $bb121:
    assume !(out_$i383 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb115:
    assume out_$i368 == 1;
    goto corral_source_split_1275;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    out_$i369, out_$i370 := out_$i349, 0;
    assume true;
    goto $bb115, $bb116;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    out_$i368 := $sgt.i32(out_$i367, 0);
    goto corral_source_split_1273;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    out_$i367 := $zext.i16.i32(out_$i366);
    call {:si_unique_call 604} {:cexpr "__cil_tmp251"} boogie_si_record_i32(out_$i367);
    goto corral_source_split_1272;

  corral_source_split_1270:
    assume {:verifier.code 0} true;
    out_$i366 := $load.i16($M.1, out_$p365);
    call {:si_unique_call 603} {:cexpr "__cil_tmp250"} boogie_si_record_i16(out_$i366);
    goto corral_source_split_1271;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    out_$p365 := $i2p.i64.ref(out_$i364);
    goto corral_source_split_1270;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    out_$i364 := $add.i64(out_$i363, 516);
    call {:si_unique_call 602} {:cexpr "__cil_tmp249"} boogie_si_record_i64(out_$i364);
    goto corral_source_split_1269;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    out_$i363 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 601} {:cexpr "__cil_tmp248"} boogie_si_record_i64(out_$i363);
    goto corral_source_split_1268;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    out_$i362 := $load.i8($M.1, out_$p361);
    call {:si_unique_call 600} {:cexpr "ANAC"} boogie_si_record_i8(out_$i362);
    goto corral_source_split_1267;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    out_$p361 := $add.ref(in_$p62, $mul.ref(out_$i360, 1));
    goto corral_source_split_1266;

  $bb114:
    assume {:verifier.code 0} true;
    out_$i360 := $zext.i32.i64(out_$i357);
    call {:si_unique_call 599} {:cexpr "__cil_tmp193"} boogie_si_record_i64(out_$i360);
    goto corral_source_split_1265;

  $bb112:
    assume !(out_$i358 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p437, $sub.i16(0, 1));
    goto corral_source_split_1355;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    out_$p437 := $add.ref(out_$p436, $mul.ref(out_$i432, 2));
    goto corral_source_split_1354;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    out_$p436 := $load.ref($M.1, out_$p435);
    goto corral_source_split_1353;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    out_$p435 := $i2p.i64.ref(out_$i434);
    goto corral_source_split_1352;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    out_$i434 := $add.i64(out_$i433, 544);
    call {:si_unique_call 640} {:cexpr "__cil_tmp237"} boogie_si_record_i64(out_$i434);
    goto corral_source_split_1351;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    out_$i433 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 639} {:cexpr "__cil_tmp236"} boogie_si_record_i64(out_$i433);
    goto corral_source_split_1350;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    out_$i432 := $zext.i32.i64(out_$i422);
    call {:si_unique_call 638} {:cexpr "__cil_tmp235"} boogie_si_record_i64(out_$i432);
    goto corral_source_split_1349;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p430, out_$i431);
    goto corral_source_split_1348;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    out_$i431 := $trunc.i32.i16(out_$i423);
    goto corral_source_split_1347;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    out_$p430 := $add.ref(out_$p429, $mul.ref(out_$i425, 2));
    goto corral_source_split_1346;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    out_$p429 := $load.ref($M.1, out_$p428);
    goto corral_source_split_1345;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    out_$p428 := $i2p.i64.ref(out_$i427);
    goto corral_source_split_1344;

  corral_source_split_1342:
    assume {:verifier.code 0} true;
    out_$i427 := $add.i64(out_$i426, 552);
    call {:si_unique_call 637} {:cexpr "__cil_tmp232"} boogie_si_record_i64(out_$i427);
    goto corral_source_split_1343;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    out_$i426 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 636} {:cexpr "__cil_tmp231"} boogie_si_record_i64(out_$i426);
    goto corral_source_split_1342;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    out_$i425 := $zext.i32.i64(out_$i349);
    call {:si_unique_call 635} {:cexpr "__cil_tmp230"} boogie_si_record_i64(out_$i425);
    goto corral_source_split_1341;

  $bb127:
    assume out_$i421 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1340;

  $bb117:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1277;

  $bb116:
    assume {:verifier.code 0} true;
    assume !(out_$i368 == 1);
    goto $bb117;

  corral_source_split_1373:
    assume {:verifier.code 0} true;
    out_$i369, out_$i370 := out_$i349, out_$i453;
    goto $bb117;

  $bb131:
    assume !(out_$i452 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1373;

  $bb135_dummy:
    call {:si_unique_call 1} out_$i350, out_$i351, out_$i352, out_$p353, out_$p354, out_$p355, out_$i356, out_$i357, out_$i358, out_$i360, out_$p361, out_$i362, out_$i363, out_$i364, out_$p365, out_$i366, out_$i367, out_$i368, out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i425, out_$i426, out_$i427, out_$p428, out_$p429, out_$p430, out_$i431, out_$i432, out_$i433, out_$i434, out_$p435, out_$p436, out_$p437, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_$i369, out_$i370, out_$i385, out_$i386, out_$i454, out_$i455, out_$p456, out_$i457, out_$i458, out_$i359, out_$i459, out_$i460, out_$i461, out_$i462, out_$i349, out_vslice_dummy_var_44 := INFTL_mount_loop_$bb109(in_$p0, in_$p62, in_$i109, in_$p345, out_$i350, out_$i351, out_$i352, out_$p353, out_$p354, out_$p355, out_$i356, out_$i357, out_$i358, out_$i360, out_$p361, out_$i362, out_$i363, out_$i364, out_$p365, out_$i366, out_$i367, out_$i368, out_$i375, out_$i376, out_$i377, out_$p378, out_$p379, out_$p380, out_$i381, out_$i382, out_$i383, out_$i384, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$i394, out_$p395, out_$p396, out_$p397, out_$i398, out_$i399, out_$i400, out_$i401, out_$i402, out_$i403, out_$p404, out_$p405, out_$p406, out_$i407, out_$i408, out_$i410, out_$i411, out_$i412, out_$p413, out_$p414, out_$p415, out_$i416, out_$i417, out_$p418, out_$i419, out_$i420, out_$i421, out_$i422, out_$i423, out_$i424, out_$i425, out_$i426, out_$i427, out_$p428, out_$p429, out_$p430, out_$i431, out_$i432, out_$i433, out_$i434, out_$p435, out_$p436, out_$p437, out_$i438, out_$i439, out_$i440, out_$i441, out_$i442, out_$i443, out_$p444, out_$p445, out_$p446, out_$i447, out_$i448, out_$i449, out_$i450, out_$i451, out_$i452, out_$i371, out_$i372, out_$i373, out_$i374, out_$i453, out_$i369, out_$i370, out_$i385, out_$i386, out_$i454, out_$i455, out_$p456, out_$i457, out_$i458, out_$i359, out_$i459, out_$i460, out_$i461, out_$i462, out_$i349, out_vslice_dummy_var_44);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb109(in_$p0: ref, in_$p62: ref, in_$i109: i32, in_$p345: ref, in_$i350: i64, in_$i351: i64, in_$i352: i64, in_$p353: ref, in_$p354: ref, in_$p355: ref, in_$i356: i16, in_$i357: i32, in_$i358: i1, in_$i360: i64, in_$p361: ref, in_$i362: i8, in_$i363: i64, in_$i364: i64, in_$p365: ref, in_$i366: i16, in_$i367: i32, in_$i368: i1, in_$i375: i64, in_$i376: i64, in_$i377: i64, in_$p378: ref, in_$p379: ref, in_$p380: ref, in_$i381: i16, in_$i382: i32, in_$i383: i1, in_$i384: i32, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i64, in_$i393: i64, in_$i394: i64, in_$p395: ref, in_$p396: ref, in_$p397: ref, in_$i398: i16, in_$i399: i32, in_$i400: i1, in_$i401: i64, in_$i402: i64, in_$i403: i64, in_$p404: ref, in_$p405: ref, in_$p406: ref, in_$i407: i16, in_$i408: i32, in_$i410: i64, in_$i411: i64, in_$i412: i64, in_$p413: ref, in_$p414: ref, in_$p415: ref, in_$i416: i32, in_$i417: i64, in_$p418: ref, in_$i419: i8, in_$i420: i32, in_$i421: i1, in_$i422: i32, in_$i423: i32, in_$i424: i32, in_$i425: i64, in_$i426: i64, in_$i427: i64, in_$p428: ref, in_$p429: ref, in_$p430: ref, in_$i431: i16, in_$i432: i64, in_$i433: i64, in_$i434: i64, in_$p435: ref, in_$p436: ref, in_$p437: ref, in_$i438: i32, in_$i439: i32, in_$i440: i8, in_$i441: i64, in_$i442: i64, in_$i443: i64, in_$p444: ref, in_$p445: ref, in_$p446: ref, in_$i447: i16, in_$i448: i32, in_$i449: i32, in_$i450: i16, in_$i451: i32, in_$i452: i1, in_$i371: i8, in_$i372: i32, in_$i373: i32, in_$i374: i32, in_$i453: i32, in_$i369: i32, in_$i370: i32, in_$i385: i32, in_$i386: i32, in_$i454: i64, in_$i455: i64, in_$p456: ref, in_$i457: i32, in_$i458: i1, in_$i359: i32, in_$i459: i32, in_$i460: i16, in_$i461: i32, in_$i462: i1, in_$i349: i32, in_vslice_dummy_var_44: i32) returns (out_$i350: i64, out_$i351: i64, out_$i352: i64, out_$p353: ref, out_$p354: ref, out_$p355: ref, out_$i356: i16, out_$i357: i32, out_$i358: i1, out_$i360: i64, out_$p361: ref, out_$i362: i8, out_$i363: i64, out_$i364: i64, out_$p365: ref, out_$i366: i16, out_$i367: i32, out_$i368: i1, out_$i375: i64, out_$i376: i64, out_$i377: i64, out_$p378: ref, out_$p379: ref, out_$p380: ref, out_$i381: i16, out_$i382: i32, out_$i383: i1, out_$i384: i32, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i64, out_$i393: i64, out_$i394: i64, out_$p395: ref, out_$p396: ref, out_$p397: ref, out_$i398: i16, out_$i399: i32, out_$i400: i1, out_$i401: i64, out_$i402: i64, out_$i403: i64, out_$p404: ref, out_$p405: ref, out_$p406: ref, out_$i407: i16, out_$i408: i32, out_$i410: i64, out_$i411: i64, out_$i412: i64, out_$p413: ref, out_$p414: ref, out_$p415: ref, out_$i416: i32, out_$i417: i64, out_$p418: ref, out_$i419: i8, out_$i420: i32, out_$i421: i1, out_$i422: i32, out_$i423: i32, out_$i424: i32, out_$i425: i64, out_$i426: i64, out_$i427: i64, out_$p428: ref, out_$p429: ref, out_$p430: ref, out_$i431: i16, out_$i432: i64, out_$i433: i64, out_$i434: i64, out_$p435: ref, out_$p436: ref, out_$p437: ref, out_$i438: i32, out_$i439: i32, out_$i440: i8, out_$i441: i64, out_$i442: i64, out_$i443: i64, out_$p444: ref, out_$p445: ref, out_$p446: ref, out_$i447: i16, out_$i448: i32, out_$i449: i32, out_$i450: i16, out_$i451: i32, out_$i452: i1, out_$i371: i8, out_$i372: i32, out_$i373: i32, out_$i374: i32, out_$i453: i32, out_$i369: i32, out_$i370: i32, out_$i385: i32, out_$i386: i32, out_$i454: i64, out_$i455: i64, out_$p456: ref, out_$i457: i32, out_$i458: i1, out_$i359: i32, out_$i459: i32, out_$i460: i16, out_$i461: i32, out_$i462: i1, out_$i349: i32, out_vslice_dummy_var_44: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_mount_loop_$bb31(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p11: ref, in_$p62: ref, in_$i121: i32, in_$i122: i32, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i64, in_$i127: i64, in_$i128: i64, in_$p129: ref, in_$p130: ref, in_$p131: ref, in_$i132: i16, in_$i133: i32, in_$i134: i1, in_$i135: i32, in_$i139: i64, in_$i140: i64, in_$p141: ref, in_$i142: i32, in_$i143: i32, in_$i144: i32, in_$i145: i64, in_$p146: ref, in_$i147: i32, in_$i148: i1, in_$i149: i32, in_$i151: i64, in_$i152: i64, in_$p153: ref, in_$i154: i32, in_$i155: i32, in_$i156: i32, in_$i157: i64, in_$p158: ref, in_$i159: i32, in_$i160: i1, in_$i161: i32, in_$p163: ref, in_$i164: i16, in_$i165: i32, in_$i166: i64, in_$i167: i64, in_$p168: ref, in_$i169: i16, in_$i170: i32, in_$i171: i64, in_$i172: i64, in_$p173: ref, in_$i174: i16, in_$i175: i32, in_$i176: i64, in_$i177: i64, in_$p178: ref, in_$i179: i16, in_$i180: i32, in_$i181: i32, in_$i182: i64, in_$p183: ref, in_$i184: i64, in_$i185: i64, in_$p186: ref, in_$i187: i8, in_$i188: i64, in_$i189: i64, in_$p190: ref, in_$i191: i32, in_$i192: i1, in_$i193: i64, in_$i194: i64, in_$p195: ref, in_$i196: i16, in_$i197: i32, in_$i198: i32, in_$i199: i32, in_$i200: i64, in_$i201: i64, in_$i202: i64, in_$p203: ref, in_$p204: ref, in_$p205: ref, in_$i206: i16, in_$i207: i32, in_$i208: i1, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i32, in_$i222: i1, in_$i223: i32, in_$i224: i32, in_$i225: i32, in_$i226: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i249: i64, in_$i250: i64, in_$p251: ref, in_$i252: i32, in_$i253: i1, in_$i254: i32, in_$i255: i32, in_$i256: i32, in_$i260: i64, in_$i261: i64, in_$p262: ref, in_$i263: i32, in_$i264: i1, in_$i265: i1, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i273: i1, in_$i275: i1, in_$i276: i32, in_$i274: i32, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$p281: ref, in_$p282: ref, in_$i283: i1, in_$i284: i64, in_$i285: i64, in_$i286: i64, in_$p287: ref, in_$p288: ref, in_$p289: ref, in_$i290: i16, in_$i291: i1, in_$i292: i32, in_$i293: i64, in_$i294: i64, in_$p295: ref, in_$i296: i16, in_$i297: i32, in_$i298: i1, in_$i299: i32, in_$i300: i32, in_$i303: i32) returns (out_$i121: i32, out_$i122: i32, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i64, out_$i127: i64, out_$i128: i64, out_$p129: ref, out_$p130: ref, out_$p131: ref, out_$i132: i16, out_$i133: i32, out_$i134: i1, out_$i135: i32, out_$i139: i64, out_$i140: i64, out_$p141: ref, out_$i142: i32, out_$i143: i32, out_$i144: i32, out_$i145: i64, out_$p146: ref, out_$i147: i32, out_$i148: i1, out_$i149: i32, out_$i151: i64, out_$i152: i64, out_$p153: ref, out_$i154: i32, out_$i155: i32, out_$i156: i32, out_$i157: i64, out_$p158: ref, out_$i159: i32, out_$i160: i1, out_$i161: i32, out_$p163: ref, out_$i164: i16, out_$i165: i32, out_$i166: i64, out_$i167: i64, out_$p168: ref, out_$i169: i16, out_$i170: i32, out_$i171: i64, out_$i172: i64, out_$p173: ref, out_$i174: i16, out_$i175: i32, out_$i176: i64, out_$i177: i64, out_$p178: ref, out_$i179: i16, out_$i180: i32, out_$i181: i32, out_$i182: i64, out_$p183: ref, out_$i184: i64, out_$i185: i64, out_$p186: ref, out_$i187: i8, out_$i188: i64, out_$i189: i64, out_$p190: ref, out_$i191: i32, out_$i192: i1, out_$i193: i64, out_$i194: i64, out_$p195: ref, out_$i196: i16, out_$i197: i32, out_$i198: i32, out_$i199: i32, out_$i200: i64, out_$i201: i64, out_$i202: i64, out_$p203: ref, out_$p204: ref, out_$p205: ref, out_$i206: i16, out_$i207: i32, out_$i208: i1, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i32, out_$i222: i1, out_$i223: i32, out_$i224: i32, out_$i225: i32, out_$i226: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i249: i64, out_$i250: i64, out_$p251: ref, out_$i252: i32, out_$i253: i1, out_$i254: i32, out_$i255: i32, out_$i256: i32, out_$i260: i64, out_$i261: i64, out_$p262: ref, out_$i263: i32, out_$i264: i1, out_$i265: i1, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i273: i1, out_$i275: i1, out_$i276: i32, out_$i274: i32, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$p281: ref, out_$p282: ref, out_$i283: i1, out_$i284: i64, out_$i285: i64, out_$i286: i64, out_$p287: ref, out_$p288: ref, out_$p289: ref, out_$i290: i16, out_$i291: i1, out_$i292: i32, out_$i293: i64, out_$i294: i64, out_$p295: ref, out_$i296: i16, out_$i297: i32, out_$i298: i1, out_$i299: i32, out_$i300: i32, out_$i303: i32)
{

  entry:
    out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i231, out_$i232, out_$i233, out_$i240, out_$i241, out_$i242, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i303 := in_$i121, in_$i122, in_$i123, in_$i124, in_$i125, in_$i126, in_$i127, in_$i128, in_$p129, in_$p130, in_$p131, in_$i132, in_$i133, in_$i134, in_$i135, in_$i139, in_$i140, in_$p141, in_$i142, in_$i143, in_$i144, in_$i145, in_$p146, in_$i147, in_$i148, in_$i149, in_$i151, in_$i152, in_$p153, in_$i154, in_$i155, in_$i156, in_$i157, in_$p158, in_$i159, in_$i160, in_$i161, in_$p163, in_$i164, in_$i165, in_$i166, in_$i167, in_$p168, in_$i169, in_$i170, in_$i171, in_$i172, in_$p173, in_$i174, in_$i175, in_$i176, in_$i177, in_$p178, in_$i179, in_$i180, in_$i181, in_$i182, in_$p183, in_$i184, in_$i185, in_$p186, in_$i187, in_$i188, in_$i189, in_$p190, in_$i191, in_$i192, in_$i193, in_$i194, in_$p195, in_$i196, in_$i197, in_$i198, in_$i199, in_$i200, in_$i201, in_$i202, in_$p203, in_$p204, in_$p205, in_$i206, in_$i207, in_$i208, in_$i209, in_$i210, in_$i211, in_$i212, in_$i222, in_$i223, in_$i224, in_$i225, in_$i226, in_$i231, in_$i232, in_$i233, in_$i240, in_$i241, in_$i242, in_$i249, in_$i250, in_$p251, in_$i252, in_$i253, in_$i254, in_$i255, in_$i256, in_$i260, in_$i261, in_$p262, in_$i263, in_$i264, in_$i265, in_$i266, in_$i267, in_$i268, in_$i273, in_$i275, in_$i276, in_$i274, in_$i277, in_$i278, in_$i279, in_$p280, in_$p281, in_$p282, in_$i283, in_$i284, in_$i285, in_$i286, in_$p287, in_$p288, in_$p289, in_$i290, in_$i291, in_$i292, in_$i293, in_$i294, in_$p295, in_$i296, in_$i297, in_$i298, in_$i299, in_$i300, in_$i303;
    goto $bb31, exit;

  $bb31:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_962;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    out_$i121, out_$i122, out_$i123, out_$i124 := out_$i303, out_$i274, out_$i124, out_$i199;
    goto corral_source_split_1184_dummy;

  $bb96:
    assume {:verifier.code 0} true;
    out_$i303 := $add.i32(out_$i121, 1);
    call {:si_unique_call 569} {:cexpr "chain_length"} boogie_si_record_i32(out_$i303);
    goto corral_source_split_1184;

  $bb95:
    assume !(out_$i298 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  corral_source_split_1178:
    assume {:verifier.code 0} true;
    out_$i299, out_$i300 := out_$i199, out_$i274;
    assume true;
    goto $bb95;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    out_$i298 := $ult.i32(out_$i297, out_$i199);
    goto corral_source_split_1178;

  corral_source_split_1176:
    assume {:verifier.code 0} true;
    out_$i297 := $zext.i16.i32(out_$i296);
    call {:si_unique_call 566} {:cexpr "__cil_tmp167"} boogie_si_record_i32(out_$i297);
    goto corral_source_split_1177;

  corral_source_split_1175:
    assume {:verifier.code 0} true;
    out_$i296 := $load.i16($M.1, out_$p295);
    call {:si_unique_call 565} {:cexpr "__cil_tmp166"} boogie_si_record_i16(out_$i296);
    goto corral_source_split_1176;

  corral_source_split_1174:
    assume {:verifier.code 0} true;
    out_$p295 := $i2p.i64.ref(out_$i294);
    goto corral_source_split_1175;

  corral_source_split_1173:
    assume {:verifier.code 0} true;
    out_$i294 := $add.i64(out_$i293, 520);
    call {:si_unique_call 564} {:cexpr "__cil_tmp165"} boogie_si_record_i64(out_$i294);
    goto corral_source_split_1174;

  $bb93:
    assume {:verifier.code 0} true;
    out_$i293 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 563} {:cexpr "__cil_tmp164"} boogie_si_record_i64(out_$i293);
    goto corral_source_split_1173;

  $bb92:
    assume !(out_$i291 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  corral_source_split_1169:
    assume {:verifier.code 0} true;
    out_$i292 := out_$i274;
    assume true;
    goto $bb92;

  $bb90:
    assume {:verifier.code 0} true;
    out_$i291 := $eq.i32(out_$i199, 65535);
    goto corral_source_split_1169;

  $bb89:
    assume !(out_$i283 == 1);
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_1167:
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_1166:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p289, out_$i290);
    goto corral_source_split_1167;

  corral_source_split_1165:
    assume {:verifier.code 0} true;
    out_$i290 := $trunc.i32.i16(out_$i124);
    goto corral_source_split_1166;

  corral_source_split_1164:
    assume {:verifier.code 0} true;
    out_$p289 := $add.ref(out_$p288, $mul.ref(out_$i284, 2));
    goto corral_source_split_1165;

  corral_source_split_1163:
    assume {:verifier.code 0} true;
    out_$p288 := $load.ref($M.1, out_$p287);
    goto corral_source_split_1164;

  corral_source_split_1162:
    assume {:verifier.code 0} true;
    out_$p287 := $i2p.i64.ref(out_$i286);
    goto corral_source_split_1163;

  corral_source_split_1161:
    assume {:verifier.code 0} true;
    out_$i286 := $add.i64(out_$i285, 544);
    call {:si_unique_call 562} {:cexpr "__cil_tmp161"} boogie_si_record_i64(out_$i286);
    goto corral_source_split_1162;

  corral_source_split_1160:
    assume {:verifier.code 0} true;
    out_$i285 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 561} {:cexpr "__cil_tmp160"} boogie_si_record_i64(out_$i285);
    goto corral_source_split_1161;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    out_$i284 := $zext.i32.i64(out_$i123);
    call {:si_unique_call 560} {:cexpr "__cil_tmp159"} boogie_si_record_i64(out_$i284);
    goto corral_source_split_1160;

  $bb88:
    assume out_$i283 == 1;
    goto corral_source_split_1159;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  corral_source_split_1154:
    assume {:verifier.code 0} true;
    out_$i283 := $ne.i32(out_$i123, 65535);
    goto corral_source_split_1155;

  corral_source_split_1153:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p282, $sub.i16(0, 1));
    goto corral_source_split_1154;

  corral_source_split_1152:
    assume {:verifier.code 0} true;
    out_$p282 := $add.ref(out_$p281, $mul.ref(out_$i277, 2));
    goto corral_source_split_1153;

  corral_source_split_1151:
    assume {:verifier.code 0} true;
    out_$p281 := $load.ref($M.1, out_$p280);
    goto corral_source_split_1152;

  corral_source_split_1150:
    assume {:verifier.code 0} true;
    out_$p280 := $i2p.i64.ref(out_$i279);
    goto corral_source_split_1151;

  corral_source_split_1149:
    assume {:verifier.code 0} true;
    out_$i279 := $add.i64(out_$i278, 544);
    call {:si_unique_call 559} {:cexpr "__cil_tmp156"} boogie_si_record_i64(out_$i279);
    goto corral_source_split_1150;

  corral_source_split_1148:
    assume {:verifier.code 0} true;
    out_$i278 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 558} {:cexpr "__cil_tmp155"} boogie_si_record_i64(out_$i278);
    goto corral_source_split_1149;

  corral_source_split_1147:
    assume {:verifier.code 0} true;
    out_$i277 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 557} {:cexpr "__cil_tmp154"} boogie_si_record_i64(out_$i277);
    goto corral_source_split_1148;

  $bb84:
    assume {:verifier.code 0} true;
    goto corral_source_split_1147;

  $bb87:
    assume {:verifier.code 0} true;
    out_$i274 := out_$i122;
    goto $bb84;

  corral_source_split_1142:
    assume {:verifier.code 0} true;
    out_$i274 := out_$i165;
    goto $bb84;

  $bb82:
    assume out_$i273 == 1;
    goto corral_source_split_1142;

  corral_source_split_1140:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  $bb81:
    assume {:verifier.code 0} true;
    out_$i273 := $eq.i32(out_$i122, 65535);
    goto corral_source_split_1140;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb73:
    assume !(out_$i264 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb75:
    assume !(out_$i265 == 1);
    assume {:verifier.code 0} true;
    goto $bb79;

  corral_source_split_1130:
    assume {:verifier.code 0} true;
    out_$i266, out_$i267, out_$i268 := out_$i121, out_$i122, out_$i124;
    assume true;
    goto $bb75;

  corral_source_split_1129:
    assume {:verifier.code 0} true;
    out_$i265 := $ne.i32(out_$i199, 65535);
    goto corral_source_split_1130;

  $bb72:
    assume out_$i264 == 1;
    goto corral_source_split_1129;

  corral_source_split_1124:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb72, $bb73;

  corral_source_split_1123:
    assume {:verifier.code 0} true;
    out_$i264 := $ule.i32(out_$i263, out_$i199);
    goto corral_source_split_1124;

  corral_source_split_1122:
    assume {:verifier.code 0} true;
    out_$i263 := $load.i32($M.1, out_$p262);
    call {:si_unique_call 554} {:cexpr "__cil_tmp153"} boogie_si_record_i32(out_$i263);
    goto corral_source_split_1123;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    out_$p262 := $i2p.i64.ref(out_$i261);
    goto corral_source_split_1122;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    out_$i261 := $add.i64(out_$i260, 560);
    call {:si_unique_call 553} {:cexpr "__cil_tmp152"} boogie_si_record_i64(out_$i261);
    goto corral_source_split_1121;

  corral_source_split_1119:
    assume {:verifier.code 0} true;
    out_$i260 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 552} {:cexpr "__cil_tmp151"} boogie_si_record_i64(out_$i260);
    goto corral_source_split_1120;

  $bb70:
    assume !(out_$i253 == 1);
    goto corral_source_split_1119;

  corral_source_split_1115:
    assume {:verifier.code 0} true;
    out_$i254, out_$i255, out_$i256 := out_$i121, out_$i122, out_$i124;
    assume true;
    goto $bb70;

  corral_source_split_1114:
    assume {:verifier.code 0} true;
    out_$i253 := $ule.i32(out_$i252, out_$i165);
    goto corral_source_split_1115;

  corral_source_split_1113:
    assume {:verifier.code 0} true;
    out_$i252 := $load.i32($M.1, out_$p251);
    call {:si_unique_call 551} {:cexpr "__cil_tmp150"} boogie_si_record_i32(out_$i252);
    goto corral_source_split_1114;

  corral_source_split_1112:
    assume {:verifier.code 0} true;
    out_$p251 := $i2p.i64.ref(out_$i250);
    goto corral_source_split_1113;

  corral_source_split_1111:
    assume {:verifier.code 0} true;
    out_$i250 := $add.i64(out_$i249, 560);
    call {:si_unique_call 550} {:cexpr "__cil_tmp149"} boogie_si_record_i64(out_$i250);
    goto corral_source_split_1112;

  $bb68:
    assume {:verifier.code 0} true;
    out_$i249 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 549} {:cexpr "__cil_tmp148"} boogie_si_record_i64(out_$i249);
    goto corral_source_split_1111;

  $bb67:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb66:
    assume !(out_$i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb67;

  corral_source_split_1100:
    assume {:verifier.code 0} true;
    out_$i241, out_$i242 := out_$i122, out_$i124;
    assume true;
    goto $bb66;

  corral_source_split_1099:
    assume {:verifier.code 0} true;
    out_$i240 := $eq.i32(out_$i165, 65535);
    goto corral_source_split_1100;

  $bb64:
    assume !(out_$i231 == 1);
    goto corral_source_split_1099;

  corral_source_split_1088:
    assume {:verifier.code 0} true;
    out_$i232, out_$i233 := out_$i122, out_$i124;
    assume true;
    goto $bb64;

  $bb62:
    assume {:verifier.code 0} true;
    out_$i231 := $eq.i32(out_$i165, 65534);
    goto corral_source_split_1088;

  $bb58:
    assume !(out_$i222 == 1);
    assume {:verifier.code 0} true;
    goto $bb62;

  corral_source_split_1077:
    assume {:verifier.code 0} true;
    out_$i223, out_$i224, out_$i225, out_$i226 := out_$i121, out_$i122, out_$i124, out_$i181;
    assume true;
    goto $bb58;

  $bb56:
    assume {:verifier.code 0} true;
    out_$i222 := $ne.i32(out_$i181, 15465);
    goto corral_source_split_1077;

  $bb49:
    assume !(out_$i208 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  corral_source_split_1059:
    assume {:verifier.code 0} true;
    out_$i209, out_$i210, out_$i211, out_$i212 := out_$i122, out_$i123, out_$i124, out_$i165;
    assume true;
    goto $bb49;

  corral_source_split_1058:
    assume {:verifier.code 0} true;
    out_$i208 := $ne.i32(out_$i207, 65533);
    goto corral_source_split_1059;

  corral_source_split_1057:
    assume {:verifier.code 0} true;
    out_$i207 := $zext.i16.i32(out_$i206);
    call {:si_unique_call 537} {:cexpr "__cil_tmp132"} boogie_si_record_i32(out_$i207);
    goto corral_source_split_1058;

  corral_source_split_1056:
    assume {:verifier.code 0} true;
    out_$i206 := $load.i16($M.1, out_$p205);
    call {:si_unique_call 536} {:cexpr "__cil_tmp131"} boogie_si_record_i16(out_$i206);
    goto corral_source_split_1057;

  corral_source_split_1055:
    assume {:verifier.code 0} true;
    out_$p205 := $add.ref(out_$p204, $mul.ref(out_$i200, 2));
    goto corral_source_split_1056;

  corral_source_split_1054:
    assume {:verifier.code 0} true;
    out_$p204 := $load.ref($M.1, out_$p203);
    goto corral_source_split_1055;

  corral_source_split_1053:
    assume {:verifier.code 0} true;
    out_$p203 := $i2p.i64.ref(out_$i202);
    goto corral_source_split_1054;

  corral_source_split_1052:
    assume {:verifier.code 0} true;
    out_$i202 := $add.i64(out_$i201, 544);
    call {:si_unique_call 535} {:cexpr "__cil_tmp128"} boogie_si_record_i64(out_$i202);
    goto corral_source_split_1053;

  corral_source_split_1051:
    assume {:verifier.code 0} true;
    out_$i201 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 534} {:cexpr "__cil_tmp127"} boogie_si_record_i64(out_$i201);
    goto corral_source_split_1052;

  corral_source_split_1050:
    assume {:verifier.code 0} true;
    out_$i200 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 533} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i200);
    goto corral_source_split_1051;

  $bb47:
    assume {:verifier.code 0} true;
    goto corral_source_split_1050;

  $bb46:
    assume !(out_$i192 == 1);
    assume {:verifier.code 0} true;
    out_$i199 := out_$i170;
    goto $bb47;

  corral_source_split_1048:
    assume {:verifier.code 0} true;
    out_$i199 := out_$i198;
    goto $bb47;

  corral_source_split_1047:
    assume {:verifier.code 0} true;
    out_$i198 := $add.i32(out_$i197, out_$i170);
    call {:si_unique_call 532} {:cexpr "prev_block"} boogie_si_record_i32(out_$i198);
    goto corral_source_split_1048;

  corral_source_split_1046:
    assume {:verifier.code 0} true;
    out_$i197 := $zext.i16.i32(out_$i196);
    call {:si_unique_call 531} {:cexpr "__cil_tmp125"} boogie_si_record_i32(out_$i197);
    goto corral_source_split_1047;

  corral_source_split_1045:
    assume {:verifier.code 0} true;
    out_$i196 := $load.i16($M.1, out_$p195);
    call {:si_unique_call 530} {:cexpr "__cil_tmp124"} boogie_si_record_i16(out_$i196);
    goto corral_source_split_1046;

  corral_source_split_1044:
    assume {:verifier.code 0} true;
    out_$p195 := $i2p.i64.ref(out_$i194);
    goto corral_source_split_1045;

  corral_source_split_1043:
    assume {:verifier.code 0} true;
    out_$i194 := $add.i64(out_$i193, 518);
    call {:si_unique_call 529} {:cexpr "__cil_tmp123"} boogie_si_record_i64(out_$i194);
    goto corral_source_split_1044;

  corral_source_split_1042:
    assume {:verifier.code 0} true;
    out_$i193 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 528} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i193);
    goto corral_source_split_1043;

  $bb45:
    assume out_$i192 == 1;
    goto corral_source_split_1042;

  corral_source_split_1040:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb45, $bb46;

  corral_source_split_1039:
    assume {:verifier.code 0} true;
    out_$i192 := $ugt.i32(out_$i191, out_$i170);
    goto corral_source_split_1040;

  corral_source_split_1038:
    assume {:verifier.code 0} true;
    out_$i191 := $load.i32($M.1, out_$p190);
    call {:si_unique_call 527} {:cexpr "__cil_tmp121"} boogie_si_record_i32(out_$i191);
    goto corral_source_split_1039;

  corral_source_split_1037:
    assume {:verifier.code 0} true;
    out_$p190 := $i2p.i64.ref(out_$i189);
    goto corral_source_split_1038;

  corral_source_split_1036:
    assume {:verifier.code 0} true;
    out_$i189 := $add.i64(out_$i188, 560);
    call {:si_unique_call 526} {:cexpr "__cil_tmp120"} boogie_si_record_i64(out_$i189);
    goto corral_source_split_1037;

  corral_source_split_1035:
    assume {:verifier.code 0} true;
    out_$i188 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 525} {:cexpr "__cil_tmp119"} boogie_si_record_i64(out_$i188);
    goto corral_source_split_1036;

  corral_source_split_1034:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p183, out_$i187);
    goto corral_source_split_1035;

  corral_source_split_1033:
    assume {:verifier.code 0} true;
    out_$i187 := $load.i8($M.1, out_$p186);
    goto corral_source_split_1034;

  corral_source_split_1032:
    assume {:verifier.code 0} true;
    out_$p186 := $i2p.i64.ref(out_$i185);
    goto corral_source_split_1033;

  corral_source_split_1031:
    assume {:verifier.code 0} true;
    out_$i185 := $add.i64(out_$i184, 4);
    call {:si_unique_call 524} {:cexpr "__cil_tmp118"} boogie_si_record_i64(out_$i185);
    goto corral_source_split_1032;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    out_$i184 := $p2i.ref.i64(in_$p1);
    goto corral_source_split_1031;

  corral_source_split_1029:
    assume {:verifier.code 0} true;
    out_$p183 := $add.ref(in_$p62, $mul.ref(out_$i182, 1));
    goto corral_source_split_1030;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    out_$i182 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 523} {:cexpr "__cil_tmp116"} boogie_si_record_i64(out_$i182);
    goto corral_source_split_1029;

  corral_source_split_1027:
    assume {:verifier.code 0} true;
    out_$i181 := $or.i32(out_$i180, out_$i175);
    call {:si_unique_call 522} {:cexpr "__cil_tmp115"} boogie_si_record_i32(out_$i181);
    goto corral_source_split_1028;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    out_$i180 := $zext.i16.i32(out_$i179);
    call {:si_unique_call 521} {:cexpr "__cil_tmp114"} boogie_si_record_i32(out_$i180);
    goto corral_source_split_1027;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    out_$i179 := $load.i16($M.1, out_$p178);
    call {:si_unique_call 520} {:cexpr "__cil_tmp113"} boogie_si_record_i16(out_$i179);
    goto corral_source_split_1026;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    out_$p178 := $i2p.i64.ref(out_$i177);
    goto corral_source_split_1025;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    out_$i177 := $add.i64(out_$i176, 4);
    call {:si_unique_call 519} {:cexpr "__cil_tmp112"} boogie_si_record_i64(out_$i177);
    goto corral_source_split_1024;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    out_$i176 := $p2i.ref.i64(in_$p2);
    goto corral_source_split_1023;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    out_$i175 := $zext.i16.i32(out_$i174);
    call {:si_unique_call 518} {:cexpr "__cil_tmp111"} boogie_si_record_i32(out_$i175);
    goto corral_source_split_1022;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    out_$i174 := $load.i16($M.1, out_$p173);
    call {:si_unique_call 517} {:cexpr "__cil_tmp110"} boogie_si_record_i16(out_$i174);
    goto corral_source_split_1021;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    out_$p173 := $i2p.i64.ref(out_$i172);
    goto corral_source_split_1020;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    out_$i172 := $add.i64(out_$i171, 6);
    call {:si_unique_call 516} {:cexpr "__cil_tmp109"} boogie_si_record_i64(out_$i172);
    goto corral_source_split_1019;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    out_$i171 := $p2i.ref.i64(in_$p2);
    goto corral_source_split_1018;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    out_$i170 := $zext.i16.i32(out_$i169);
    call {:si_unique_call 515} {:cexpr "prev_block"} boogie_si_record_i32(out_$i170);
    goto corral_source_split_1017;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    out_$i169 := $load.i16($M.1, out_$p168);
    call {:si_unique_call 514} {:cexpr "__cil_tmp108"} boogie_si_record_i16(out_$i169);
    goto corral_source_split_1016;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    out_$p168 := $i2p.i64.ref(out_$i167);
    goto corral_source_split_1015;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    out_$i167 := $add.i64(out_$i166, 2);
    call {:si_unique_call 513} {:cexpr "__cil_tmp107"} boogie_si_record_i64(out_$i167);
    goto corral_source_split_1014;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    out_$i166 := $p2i.ref.i64(in_$p1);
    goto corral_source_split_1013;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    out_$i165 := $zext.i16.i32(out_$i164);
    call {:si_unique_call 512} {:cexpr "logical_block"} boogie_si_record_i32(out_$i165);
    goto corral_source_split_1012;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    out_$i164 := $load.i16($M.1, out_$p163);
    call {:si_unique_call 511} {:cexpr "__cil_tmp106"} boogie_si_record_i16(out_$i164);
    goto corral_source_split_1011;

  $bb44:
    assume {:verifier.code 0} true;
    out_$p163 := $bitcast.ref.ref(in_$p1);
    goto corral_source_split_1010;

  $bb43:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb42:
    assume !(out_$i160 == 1);
    assume {:verifier.code 0} true;
    goto $bb43;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    out_$i161 := out_$i122;
    assume true;
    goto $bb42;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    out_$i160 := $slt.i32(out_$i159, 0);
    goto corral_source_split_1005;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    call {:si_unique_call 508} out_$i159 := inftl_read_oob(in_$p11, out_$i157, 8, in_$p3, out_$p158);
    call {:si_unique_call 509} {:cexpr "tmp___4"} boogie_si_record_i32(out_$i159);
    goto corral_source_split_1004;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    out_$p158 := $bitcast.ref.ref(in_$p2);
    goto corral_source_split_1003;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    out_$i157 := $zext.i32.i64(out_$i156);
    call {:si_unique_call 507} {:cexpr "__cil_tmp103"} boogie_si_record_i64(out_$i157);
    goto corral_source_split_1002;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    out_$i156 := $add.i32(out_$i155, 1032);
    call {:si_unique_call 506} {:cexpr "__cil_tmp102"} boogie_si_record_i32(out_$i156);
    goto corral_source_split_1001;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    out_$i155 := $mul.i32(out_$i154, out_$i124);
    call {:si_unique_call 505} {:cexpr "__cil_tmp101"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_1000;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    out_$i154 := $load.i32($M.1, out_$p153);
    call {:si_unique_call 504} {:cexpr "__cil_tmp100"} boogie_si_record_i32(out_$i154);
    goto corral_source_split_999;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    out_$p153 := $i2p.i64.ref(out_$i152);
    goto corral_source_split_998;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    out_$i152 := $add.i64(out_$i151, 356);
    call {:si_unique_call 503} {:cexpr "__cil_tmp99"} boogie_si_record_i64(out_$i152);
    goto corral_source_split_997;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    out_$i151 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 502} {:cexpr "__cil_tmp98"} boogie_si_record_i64(out_$i151);
    goto corral_source_split_996;

  $bb40:
    assume !(out_$i148 == 1);
    goto corral_source_split_995;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    out_$i149 := out_$i122;
    assume true;
    goto $bb40;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    out_$i148 := $slt.i32(out_$i147, 0);
    goto corral_source_split_990;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    call {:si_unique_call 499} out_$i147 := inftl_read_oob(in_$p11, out_$i145, 8, in_$p3, out_$p146);
    call {:si_unique_call 500} {:cexpr "tmp___3"} boogie_si_record_i32(out_$i147);
    goto corral_source_split_989;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    out_$p146 := $bitcast.ref.ref(in_$p1);
    goto corral_source_split_988;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    out_$i145 := $zext.i32.i64(out_$i144);
    call {:si_unique_call 498} {:cexpr "__cil_tmp96"} boogie_si_record_i64(out_$i145);
    goto corral_source_split_987;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    out_$i144 := $add.i32(out_$i143, 8);
    call {:si_unique_call 497} {:cexpr "__cil_tmp95"} boogie_si_record_i32(out_$i144);
    goto corral_source_split_986;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    out_$i143 := $mul.i32(out_$i142, out_$i124);
    call {:si_unique_call 496} {:cexpr "__cil_tmp94"} boogie_si_record_i32(out_$i143);
    goto corral_source_split_985;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    out_$i142 := $load.i32($M.1, out_$p141);
    call {:si_unique_call 495} {:cexpr "__cil_tmp93"} boogie_si_record_i32(out_$i142);
    goto corral_source_split_984;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    out_$p141 := $i2p.i64.ref(out_$i140);
    goto corral_source_split_983;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    out_$i140 := $add.i64(out_$i139, 356);
    call {:si_unique_call 494} {:cexpr "__cil_tmp92"} boogie_si_record_i64(out_$i140);
    goto corral_source_split_982;

  $bb38:
    assume {:verifier.code 0} true;
    out_$i139 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 493} {:cexpr "__cil_tmp91"} boogie_si_record_i64(out_$i139);
    goto corral_source_split_981;

  $bb33:
    assume !(out_$i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb37:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb35:
    assume !(out_$i134 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    out_$i135 := out_$i122;
    assume true;
    goto $bb35;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    out_$i134 := $ne.i32(out_$i133, 65533);
    goto corral_source_split_974;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    out_$i133 := $zext.i16.i32(out_$i132);
    call {:si_unique_call 492} {:cexpr "__cil_tmp90"} boogie_si_record_i32(out_$i133);
    goto corral_source_split_973;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    out_$i132 := $load.i16($M.1, out_$p131);
    call {:si_unique_call 491} {:cexpr "__cil_tmp89"} boogie_si_record_i16(out_$i132);
    goto corral_source_split_972;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    out_$p131 := $add.ref(out_$p130, $mul.ref(out_$i126, 2));
    goto corral_source_split_971;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    out_$p130 := $load.ref($M.1, out_$p129);
    goto corral_source_split_970;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    out_$p129 := $i2p.i64.ref(out_$i128);
    goto corral_source_split_969;

  corral_source_split_967:
    assume {:verifier.code 0} true;
    out_$i128 := $add.i64(out_$i127, 544);
    call {:si_unique_call 490} {:cexpr "__cil_tmp86"} boogie_si_record_i64(out_$i128);
    goto corral_source_split_968;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    out_$i127 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 489} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i127);
    goto corral_source_split_967;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    out_$i126 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 488} {:cexpr "__cil_tmp84"} boogie_si_record_i64(out_$i126);
    goto corral_source_split_966;

  $bb32:
    assume out_$i125 == 1;
    goto corral_source_split_965;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    out_$i125 := $eq.i32(out_$i121, 0);
    goto corral_source_split_963;

  $bb86:
    assume !(out_$i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  corral_source_split_1145:
    assume {:verifier.code 0} true;
    out_$i276 := out_$i122;
    assume true;
    goto $bb86;

  corral_source_split_1144:
    assume {:verifier.code 0} true;
    out_$i275 := $ne.i32(out_$i122, out_$i165);
    goto corral_source_split_1145;

  $bb83:
    assume !(out_$i273 == 1);
    goto corral_source_split_1144;

  corral_source_split_1184_dummy:
    call {:si_unique_call 1} out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i231, out_$i232, out_$i233, out_$i240, out_$i241, out_$i242, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i303 := INFTL_mount_loop_$bb31(in_$p0, in_$p1, in_$p2, in_$p3, in_$p11, in_$p62, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i231, out_$i232, out_$i233, out_$i240, out_$i241, out_$i242, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i303);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb31(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p11: ref, in_$p62: ref, in_$i121: i32, in_$i122: i32, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i64, in_$i127: i64, in_$i128: i64, in_$p129: ref, in_$p130: ref, in_$p131: ref, in_$i132: i16, in_$i133: i32, in_$i134: i1, in_$i135: i32, in_$i139: i64, in_$i140: i64, in_$p141: ref, in_$i142: i32, in_$i143: i32, in_$i144: i32, in_$i145: i64, in_$p146: ref, in_$i147: i32, in_$i148: i1, in_$i149: i32, in_$i151: i64, in_$i152: i64, in_$p153: ref, in_$i154: i32, in_$i155: i32, in_$i156: i32, in_$i157: i64, in_$p158: ref, in_$i159: i32, in_$i160: i1, in_$i161: i32, in_$p163: ref, in_$i164: i16, in_$i165: i32, in_$i166: i64, in_$i167: i64, in_$p168: ref, in_$i169: i16, in_$i170: i32, in_$i171: i64, in_$i172: i64, in_$p173: ref, in_$i174: i16, in_$i175: i32, in_$i176: i64, in_$i177: i64, in_$p178: ref, in_$i179: i16, in_$i180: i32, in_$i181: i32, in_$i182: i64, in_$p183: ref, in_$i184: i64, in_$i185: i64, in_$p186: ref, in_$i187: i8, in_$i188: i64, in_$i189: i64, in_$p190: ref, in_$i191: i32, in_$i192: i1, in_$i193: i64, in_$i194: i64, in_$p195: ref, in_$i196: i16, in_$i197: i32, in_$i198: i32, in_$i199: i32, in_$i200: i64, in_$i201: i64, in_$i202: i64, in_$p203: ref, in_$p204: ref, in_$p205: ref, in_$i206: i16, in_$i207: i32, in_$i208: i1, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i32, in_$i222: i1, in_$i223: i32, in_$i224: i32, in_$i225: i32, in_$i226: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i249: i64, in_$i250: i64, in_$p251: ref, in_$i252: i32, in_$i253: i1, in_$i254: i32, in_$i255: i32, in_$i256: i32, in_$i260: i64, in_$i261: i64, in_$p262: ref, in_$i263: i32, in_$i264: i1, in_$i265: i1, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i273: i1, in_$i275: i1, in_$i276: i32, in_$i274: i32, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$p281: ref, in_$p282: ref, in_$i283: i1, in_$i284: i64, in_$i285: i64, in_$i286: i64, in_$p287: ref, in_$p288: ref, in_$p289: ref, in_$i290: i16, in_$i291: i1, in_$i292: i32, in_$i293: i64, in_$i294: i64, in_$p295: ref, in_$i296: i16, in_$i297: i32, in_$i298: i1, in_$i299: i32, in_$i300: i32, in_$i303: i32) returns (out_$i121: i32, out_$i122: i32, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i64, out_$i127: i64, out_$i128: i64, out_$p129: ref, out_$p130: ref, out_$p131: ref, out_$i132: i16, out_$i133: i32, out_$i134: i1, out_$i135: i32, out_$i139: i64, out_$i140: i64, out_$p141: ref, out_$i142: i32, out_$i143: i32, out_$i144: i32, out_$i145: i64, out_$p146: ref, out_$i147: i32, out_$i148: i1, out_$i149: i32, out_$i151: i64, out_$i152: i64, out_$p153: ref, out_$i154: i32, out_$i155: i32, out_$i156: i32, out_$i157: i64, out_$p158: ref, out_$i159: i32, out_$i160: i1, out_$i161: i32, out_$p163: ref, out_$i164: i16, out_$i165: i32, out_$i166: i64, out_$i167: i64, out_$p168: ref, out_$i169: i16, out_$i170: i32, out_$i171: i64, out_$i172: i64, out_$p173: ref, out_$i174: i16, out_$i175: i32, out_$i176: i64, out_$i177: i64, out_$p178: ref, out_$i179: i16, out_$i180: i32, out_$i181: i32, out_$i182: i64, out_$p183: ref, out_$i184: i64, out_$i185: i64, out_$p186: ref, out_$i187: i8, out_$i188: i64, out_$i189: i64, out_$p190: ref, out_$i191: i32, out_$i192: i1, out_$i193: i64, out_$i194: i64, out_$p195: ref, out_$i196: i16, out_$i197: i32, out_$i198: i32, out_$i199: i32, out_$i200: i64, out_$i201: i64, out_$i202: i64, out_$p203: ref, out_$p204: ref, out_$p205: ref, out_$i206: i16, out_$i207: i32, out_$i208: i1, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i32, out_$i222: i1, out_$i223: i32, out_$i224: i32, out_$i225: i32, out_$i226: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i249: i64, out_$i250: i64, out_$p251: ref, out_$i252: i32, out_$i253: i1, out_$i254: i32, out_$i255: i32, out_$i256: i32, out_$i260: i64, out_$i261: i64, out_$p262: ref, out_$i263: i32, out_$i264: i1, out_$i265: i1, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i273: i1, out_$i275: i1, out_$i276: i32, out_$i274: i32, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$p281: ref, out_$p282: ref, out_$i283: i1, out_$i284: i64, out_$i285: i64, out_$i286: i64, out_$p287: ref, out_$p288: ref, out_$p289: ref, out_$i290: i16, out_$i291: i1, out_$i292: i32, out_$i293: i64, out_$i294: i64, out_$p295: ref, out_$i296: i16, out_$i297: i32, out_$i298: i1, out_$i299: i32, out_$i300: i32, out_$i303: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_mount_loop_$bb25(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p11: ref, in_$p62: ref, in_$p105: ref, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i121: i32, in_$i122: i32, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i64, in_$i127: i64, in_$i128: i64, in_$p129: ref, in_$p130: ref, in_$p131: ref, in_$i132: i16, in_$i133: i32, in_$i134: i1, in_$i135: i32, in_$i139: i64, in_$i140: i64, in_$p141: ref, in_$i142: i32, in_$i143: i32, in_$i144: i32, in_$i145: i64, in_$p146: ref, in_$i147: i32, in_$i148: i1, in_$i149: i32, in_$i150: i32, in_$i151: i64, in_$i152: i64, in_$p153: ref, in_$i154: i32, in_$i155: i32, in_$i156: i32, in_$i157: i64, in_$p158: ref, in_$i159: i32, in_$i160: i1, in_$i161: i32, in_$i162: i32, in_$p163: ref, in_$i164: i16, in_$i165: i32, in_$i166: i64, in_$i167: i64, in_$p168: ref, in_$i169: i16, in_$i170: i32, in_$i171: i64, in_$i172: i64, in_$p173: ref, in_$i174: i16, in_$i175: i32, in_$i176: i64, in_$i177: i64, in_$p178: ref, in_$i179: i16, in_$i180: i32, in_$i181: i32, in_$i182: i64, in_$p183: ref, in_$i184: i64, in_$i185: i64, in_$p186: ref, in_$i187: i8, in_$i188: i64, in_$i189: i64, in_$p190: ref, in_$i191: i32, in_$i192: i1, in_$i193: i64, in_$i194: i64, in_$p195: ref, in_$i196: i16, in_$i197: i32, in_$i198: i32, in_$i199: i32, in_$i200: i64, in_$i201: i64, in_$i202: i64, in_$p203: ref, in_$p204: ref, in_$p205: ref, in_$i206: i16, in_$i207: i32, in_$i208: i1, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i32, in_$i213: i1, in_$i214: i1, in_$i215: i64, in_$i216: i64, in_$i217: i64, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$i221: i16, in_$i222: i1, in_$i223: i32, in_$i224: i32, in_$i225: i32, in_$i226: i32, in_$i228: i1, in_$i229: i32, in_$i230: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i234: i64, in_$i235: i64, in_$i236: i64, in_$p237: ref, in_$p238: ref, in_$p239: ref, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i243: i64, in_$i244: i64, in_$i245: i64, in_$p246: ref, in_$p247: ref, in_$p248: ref, in_$i249: i64, in_$i250: i64, in_$p251: ref, in_$i252: i32, in_$i253: i1, in_$i254: i32, in_$i255: i32, in_$i256: i32, in_$i260: i64, in_$i261: i64, in_$p262: ref, in_$i263: i32, in_$i264: i1, in_$i265: i1, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i269: i1, in_$i271: i32, in_$i272: i32, in_$i273: i1, in_$i275: i1, in_$i276: i32, in_$i274: i32, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$p281: ref, in_$p282: ref, in_$i283: i1, in_$i284: i64, in_$i285: i64, in_$i286: i64, in_$p287: ref, in_$p288: ref, in_$p289: ref, in_$i290: i16, in_$i291: i1, in_$i292: i32, in_$i293: i64, in_$i294: i64, in_$p295: ref, in_$i296: i16, in_$i297: i32, in_$i298: i1, in_$i299: i32, in_$i300: i32, in_$i302: i32, in_$i303: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i304: i1, in_$i305: i64, in_$i306: i64, in_$i307: i64, in_$p308: ref, in_$p309: ref, in_$p310: ref, in_$i311: i16, in_$i120: i32, in_$i312: i32, in_$i313: i16, in_$i314: i32, in_$i315: i1, in_$i110: i32, in_$i316: i32, in_vslice_dummy_var_40: i32, in_vslice_dummy_var_41: i32, in_vslice_dummy_var_42: i32) returns (out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i121: i32, out_$i122: i32, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i64, out_$i127: i64, out_$i128: i64, out_$p129: ref, out_$p130: ref, out_$p131: ref, out_$i132: i16, out_$i133: i32, out_$i134: i1, out_$i135: i32, out_$i139: i64, out_$i140: i64, out_$p141: ref, out_$i142: i32, out_$i143: i32, out_$i144: i32, out_$i145: i64, out_$p146: ref, out_$i147: i32, out_$i148: i1, out_$i149: i32, out_$i150: i32, out_$i151: i64, out_$i152: i64, out_$p153: ref, out_$i154: i32, out_$i155: i32, out_$i156: i32, out_$i157: i64, out_$p158: ref, out_$i159: i32, out_$i160: i1, out_$i161: i32, out_$i162: i32, out_$p163: ref, out_$i164: i16, out_$i165: i32, out_$i166: i64, out_$i167: i64, out_$p168: ref, out_$i169: i16, out_$i170: i32, out_$i171: i64, out_$i172: i64, out_$p173: ref, out_$i174: i16, out_$i175: i32, out_$i176: i64, out_$i177: i64, out_$p178: ref, out_$i179: i16, out_$i180: i32, out_$i181: i32, out_$i182: i64, out_$p183: ref, out_$i184: i64, out_$i185: i64, out_$p186: ref, out_$i187: i8, out_$i188: i64, out_$i189: i64, out_$p190: ref, out_$i191: i32, out_$i192: i1, out_$i193: i64, out_$i194: i64, out_$p195: ref, out_$i196: i16, out_$i197: i32, out_$i198: i32, out_$i199: i32, out_$i200: i64, out_$i201: i64, out_$i202: i64, out_$p203: ref, out_$p204: ref, out_$p205: ref, out_$i206: i16, out_$i207: i32, out_$i208: i1, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i32, out_$i213: i1, out_$i214: i1, out_$i215: i64, out_$i216: i64, out_$i217: i64, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$i221: i16, out_$i222: i1, out_$i223: i32, out_$i224: i32, out_$i225: i32, out_$i226: i32, out_$i228: i1, out_$i229: i32, out_$i230: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i234: i64, out_$i235: i64, out_$i236: i64, out_$p237: ref, out_$p238: ref, out_$p239: ref, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i243: i64, out_$i244: i64, out_$i245: i64, out_$p246: ref, out_$p247: ref, out_$p248: ref, out_$i249: i64, out_$i250: i64, out_$p251: ref, out_$i252: i32, out_$i253: i1, out_$i254: i32, out_$i255: i32, out_$i256: i32, out_$i260: i64, out_$i261: i64, out_$p262: ref, out_$i263: i32, out_$i264: i1, out_$i265: i1, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i269: i1, out_$i271: i32, out_$i272: i32, out_$i273: i1, out_$i275: i1, out_$i276: i32, out_$i274: i32, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$p281: ref, out_$p282: ref, out_$i283: i1, out_$i284: i64, out_$i285: i64, out_$i286: i64, out_$p287: ref, out_$p288: ref, out_$p289: ref, out_$i290: i16, out_$i291: i1, out_$i292: i32, out_$i293: i64, out_$i294: i64, out_$p295: ref, out_$i296: i16, out_$i297: i32, out_$i298: i1, out_$i299: i32, out_$i300: i32, out_$i302: i32, out_$i303: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i304: i1, out_$i305: i64, out_$i306: i64, out_$i307: i64, out_$p308: ref, out_$p309: ref, out_$p310: ref, out_$i311: i16, out_$i120: i32, out_$i312: i32, out_$i313: i16, out_$i314: i32, out_$i315: i1, out_$i110: i32, out_$i316: i32, out_vslice_dummy_var_40: i32, out_vslice_dummy_var_41: i32, out_vslice_dummy_var_42: i32)
{

  entry:
    out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$i221, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$p237, out_$p238, out_$p239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$p246, out_$p247, out_$p248, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i257, out_$i258, out_$i259, out_$i269, out_$i271, out_$i272, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i302, out_$i303, out_$i136, out_$i137, out_$i138, out_$i304, out_$i305, out_$i306, out_$i307, out_$p308, out_$p309, out_$p310, out_$i311, out_$i120, out_$i312, out_$i313, out_$i314, out_$i315, out_$i110, out_$i316, out_vslice_dummy_var_40, out_vslice_dummy_var_41, out_vslice_dummy_var_42 := in_$i111, in_$i112, in_$i113, in_$p114, in_$p115, in_$p116, in_$i117, in_$i118, in_$i119, in_$i121, in_$i122, in_$i123, in_$i124, in_$i125, in_$i126, in_$i127, in_$i128, in_$p129, in_$p130, in_$p131, in_$i132, in_$i133, in_$i134, in_$i135, in_$i139, in_$i140, in_$p141, in_$i142, in_$i143, in_$i144, in_$i145, in_$p146, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i152, in_$p153, in_$i154, in_$i155, in_$i156, in_$i157, in_$p158, in_$i159, in_$i160, in_$i161, in_$i162, in_$p163, in_$i164, in_$i165, in_$i166, in_$i167, in_$p168, in_$i169, in_$i170, in_$i171, in_$i172, in_$p173, in_$i174, in_$i175, in_$i176, in_$i177, in_$p178, in_$i179, in_$i180, in_$i181, in_$i182, in_$p183, in_$i184, in_$i185, in_$p186, in_$i187, in_$i188, in_$i189, in_$p190, in_$i191, in_$i192, in_$i193, in_$i194, in_$p195, in_$i196, in_$i197, in_$i198, in_$i199, in_$i200, in_$i201, in_$i202, in_$p203, in_$p204, in_$p205, in_$i206, in_$i207, in_$i208, in_$i209, in_$i210, in_$i211, in_$i212, in_$i213, in_$i214, in_$i215, in_$i216, in_$i217, in_$p218, in_$p219, in_$p220, in_$i221, in_$i222, in_$i223, in_$i224, in_$i225, in_$i226, in_$i228, in_$i229, in_$i230, in_$i231, in_$i232, in_$i233, in_$i234, in_$i235, in_$i236, in_$p237, in_$p238, in_$p239, in_$i240, in_$i241, in_$i242, in_$i243, in_$i244, in_$i245, in_$p246, in_$p247, in_$p248, in_$i249, in_$i250, in_$p251, in_$i252, in_$i253, in_$i254, in_$i255, in_$i256, in_$i260, in_$i261, in_$p262, in_$i263, in_$i264, in_$i265, in_$i266, in_$i267, in_$i268, in_$i257, in_$i258, in_$i259, in_$i269, in_$i271, in_$i272, in_$i273, in_$i275, in_$i276, in_$i274, in_$i277, in_$i278, in_$i279, in_$p280, in_$p281, in_$p282, in_$i283, in_$i284, in_$i285, in_$i286, in_$p287, in_$p288, in_$p289, in_$i290, in_$i291, in_$i292, in_$i293, in_$i294, in_$p295, in_$i296, in_$i297, in_$i298, in_$i299, in_$i300, in_$i302, in_$i303, in_$i136, in_$i137, in_$i138, in_$i304, in_$i305, in_$i306, in_$i307, in_$p308, in_$p309, in_$p310, in_$i311, in_$i120, in_$i312, in_$i313, in_$i314, in_$i315, in_$i110, in_$i316, in_vslice_dummy_var_40, in_vslice_dummy_var_41, in_vslice_dummy_var_42;
    goto $bb25, exit;

  $bb25:
    assume {:verifier.code 0} true;
    goto corral_source_split_942;

  $bb100:
    assume out_$i315 == 1;
    assume {:verifier.code 0} true;
    out_$i110 := out_$i312;
    goto $bb100_dummy;

  corral_source_split_960:
    assume {:verifier.code 0} true;
    out_$i316 := out_$i312;
    assume true;
    goto $bb100;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    out_$i315 := $uge.i32(out_$i314, out_$i312);
    goto corral_source_split_960;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    out_$i314 := $zext.i16.i32(out_$i313);
    call {:si_unique_call 487} {:cexpr "__cil_tmp176"} boogie_si_record_i32(out_$i314);
    goto corral_source_split_959;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    out_$i313 := $load.i16($M.1, in_$p105);
    call {:si_unique_call 486} {:cexpr "__cil_tmp175"} boogie_si_record_i16(out_$i313);
    goto corral_source_split_958;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    out_$i312 := $add.i32(out_$i120, 1);
    call {:si_unique_call 485} {:cexpr "first_block"} boogie_si_record_i32(out_$i312);
    goto corral_source_split_957;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_956;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i136;
    goto $bb29;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i136;
    goto $bb29;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i110;
    goto $bb29;

  $bb27:
    assume out_$i119 == 1;
    goto corral_source_split_954;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb27, $bb28;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    out_$i119 := $ne.i32(out_$i118, 65533);
    goto corral_source_split_952;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    out_$i118 := $zext.i16.i32(out_$i117);
    call {:si_unique_call 484} {:cexpr "__cil_tmp83"} boogie_si_record_i32(out_$i118);
    goto corral_source_split_951;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    out_$i117 := $load.i16($M.1, out_$p116);
    call {:si_unique_call 483} {:cexpr "__cil_tmp82"} boogie_si_record_i16(out_$i117);
    goto corral_source_split_950;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    out_$p116 := $add.ref(out_$p115, $mul.ref(out_$i111, 2));
    goto corral_source_split_949;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    out_$p115 := $load.ref($M.1, out_$p114);
    goto corral_source_split_948;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    out_$p114 := $i2p.i64.ref(out_$i113);
    goto corral_source_split_947;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    out_$i113 := $add.i64(out_$i112, 544);
    call {:si_unique_call 482} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_946;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    out_$i112 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 481} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i112);
    goto corral_source_split_945;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i111 := $zext.i32.i64(out_$i110);
    call {:si_unique_call 480} {:cexpr "__cil_tmp77"} boogie_si_record_i64(out_$i111);
    goto corral_source_split_944;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    goto $bb26;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    call {:si_unique_call 570} format_chain(in_$p0, out_$i136);
    goto corral_source_split_1187;

  $bb97:
    assume out_$i304 == 1;
    goto corral_source_split_1186;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb97, $bb98;

  corral_source_split_978:
    assume {:verifier.code 0} true;
    out_$i304 := $ne.i32(out_$i137, 0);
    goto corral_source_split_979;

  $bb36:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_978;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, out_$i302, out_$i300;
    goto $bb36;

  corral_source_split_1171:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i292;
    goto $bb36;

  corral_source_split_1157:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i276;
    goto $bb36;

  corral_source_split_1138:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, out_$i272, out_$i258;
    goto $bb36;

  corral_source_split_1109:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i241;
    goto $bb36;

  corral_source_split_1097:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i232;
    goto $bb36;

  corral_source_split_1086:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, out_$i230, out_$i224;
    goto $bb36;

  $bb55:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i209;
    goto $bb36;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, out_$i162, out_$i161;
    goto $bb36;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, out_$i150, out_$i149;
    goto $bb36;

  corral_source_split_976:
    assume {:verifier.code 0} true;
    out_$i136, out_$i137, out_$i138 := out_$i110, 0, out_$i135;
    goto $bb36;

  $bb34:
    assume out_$i134 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_976;

  corral_source_split_974:
    assume {:verifier.code 0} true;
    out_$i135 := out_$i122;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    out_$i134 := $ne.i32(out_$i133, 65533);
    goto corral_source_split_974;

  corral_source_split_972:
    assume {:verifier.code 0} true;
    out_$i133 := $zext.i16.i32(out_$i132);
    call {:si_unique_call 492} {:cexpr "__cil_tmp90"} boogie_si_record_i32(out_$i133);
    goto corral_source_split_973;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    out_$i132 := $load.i16($M.1, out_$p131);
    call {:si_unique_call 491} {:cexpr "__cil_tmp89"} boogie_si_record_i16(out_$i132);
    goto corral_source_split_972;

  corral_source_split_970:
    assume {:verifier.code 0} true;
    out_$p131 := $add.ref(out_$p130, $mul.ref(out_$i126, 2));
    goto corral_source_split_971;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    out_$p130 := $load.ref($M.1, out_$p129);
    goto corral_source_split_970;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    out_$p129 := $i2p.i64.ref(out_$i128);
    goto corral_source_split_969;

  corral_source_split_967:
    assume {:verifier.code 0} true;
    out_$i128 := $add.i64(out_$i127, 544);
    call {:si_unique_call 490} {:cexpr "__cil_tmp86"} boogie_si_record_i64(out_$i128);
    goto corral_source_split_968;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    out_$i127 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 489} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i127);
    goto corral_source_split_967;

  corral_source_split_965:
    assume {:verifier.code 0} true;
    out_$i126 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 488} {:cexpr "__cil_tmp84"} boogie_si_record_i64(out_$i126);
    goto corral_source_split_966;

  $bb32:
    assume out_$i125 == 1;
    goto corral_source_split_965;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  corral_source_split_962:
    assume {:verifier.code 0} true;
    out_$i125 := $eq.i32(out_$i121, 0);
    goto corral_source_split_963;

  $bb31:
    call out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i231, out_$i232, out_$i233, out_$i240, out_$i241, out_$i242, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i303 := INFTL_mount_loop_$bb31(in_$p0, in_$p1, in_$p2, in_$p3, in_$p11, in_$p62, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i231, out_$i232, out_$i233, out_$i240, out_$i241, out_$i242, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i303);
    goto $bb31_last;

  $bb31_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_962;

  $bb30:
    assume {:verifier.code 0} true;
    out_$i121, out_$i122, out_$i123, out_$i124 := 0, 65535, 65535, out_$i110;
    goto $bb31;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    out_$i121, out_$i122, out_$i123, out_$i124 := out_$i303, out_$i274, out_$i124, out_$i199;
    assume false;
    return;

  $bb96:
    assume {:verifier.code 0} true;
    out_$i303 := $add.i32(out_$i121, 1);
    call {:si_unique_call 569} {:cexpr "chain_length"} boogie_si_record_i32(out_$i303);
    goto corral_source_split_1184;

  $bb95:
    assume !(out_$i298 == 1);
    assume {:verifier.code 0} true;
    goto $bb96;

  corral_source_split_1178:
    assume {:verifier.code 0} true;
    out_$i299, out_$i300 := out_$i199, out_$i274;
    assume true;
    goto $bb94, $bb95;

  corral_source_split_1177:
    assume {:verifier.code 0} true;
    out_$i298 := $ult.i32(out_$i297, out_$i199);
    goto corral_source_split_1178;

  corral_source_split_1176:
    assume {:verifier.code 0} true;
    out_$i297 := $zext.i16.i32(out_$i296);
    call {:si_unique_call 566} {:cexpr "__cil_tmp167"} boogie_si_record_i32(out_$i297);
    goto corral_source_split_1177;

  corral_source_split_1175:
    assume {:verifier.code 0} true;
    out_$i296 := $load.i16($M.1, out_$p295);
    call {:si_unique_call 565} {:cexpr "__cil_tmp166"} boogie_si_record_i16(out_$i296);
    goto corral_source_split_1176;

  corral_source_split_1174:
    assume {:verifier.code 0} true;
    out_$p295 := $i2p.i64.ref(out_$i294);
    goto corral_source_split_1175;

  corral_source_split_1173:
    assume {:verifier.code 0} true;
    out_$i294 := $add.i64(out_$i293, 520);
    call {:si_unique_call 564} {:cexpr "__cil_tmp165"} boogie_si_record_i64(out_$i294);
    goto corral_source_split_1174;

  $bb93:
    assume {:verifier.code 0} true;
    out_$i293 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 563} {:cexpr "__cil_tmp164"} boogie_si_record_i64(out_$i293);
    goto corral_source_split_1173;

  $bb92:
    assume !(out_$i291 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  corral_source_split_1169:
    assume {:verifier.code 0} true;
    out_$i292 := out_$i274;
    assume true;
    goto $bb91, $bb92;

  $bb90:
    assume {:verifier.code 0} true;
    out_$i291 := $eq.i32(out_$i199, 65535);
    goto corral_source_split_1169;

  $bb89:
    assume !(out_$i283 == 1);
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_1167:
    assume {:verifier.code 0} true;
    goto $bb90;

  corral_source_split_1166:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p289, out_$i290);
    goto corral_source_split_1167;

  corral_source_split_1165:
    assume {:verifier.code 0} true;
    out_$i290 := $trunc.i32.i16(out_$i124);
    goto corral_source_split_1166;

  corral_source_split_1164:
    assume {:verifier.code 0} true;
    out_$p289 := $add.ref(out_$p288, $mul.ref(out_$i284, 2));
    goto corral_source_split_1165;

  corral_source_split_1163:
    assume {:verifier.code 0} true;
    out_$p288 := $load.ref($M.1, out_$p287);
    goto corral_source_split_1164;

  corral_source_split_1162:
    assume {:verifier.code 0} true;
    out_$p287 := $i2p.i64.ref(out_$i286);
    goto corral_source_split_1163;

  corral_source_split_1161:
    assume {:verifier.code 0} true;
    out_$i286 := $add.i64(out_$i285, 544);
    call {:si_unique_call 562} {:cexpr "__cil_tmp161"} boogie_si_record_i64(out_$i286);
    goto corral_source_split_1162;

  corral_source_split_1160:
    assume {:verifier.code 0} true;
    out_$i285 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 561} {:cexpr "__cil_tmp160"} boogie_si_record_i64(out_$i285);
    goto corral_source_split_1161;

  corral_source_split_1159:
    assume {:verifier.code 0} true;
    out_$i284 := $zext.i32.i64(out_$i123);
    call {:si_unique_call 560} {:cexpr "__cil_tmp159"} boogie_si_record_i64(out_$i284);
    goto corral_source_split_1160;

  $bb88:
    assume out_$i283 == 1;
    goto corral_source_split_1159;

  corral_source_split_1155:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb88, $bb89;

  corral_source_split_1154:
    assume {:verifier.code 0} true;
    out_$i283 := $ne.i32(out_$i123, 65535);
    goto corral_source_split_1155;

  corral_source_split_1153:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p282, $sub.i16(0, 1));
    goto corral_source_split_1154;

  corral_source_split_1152:
    assume {:verifier.code 0} true;
    out_$p282 := $add.ref(out_$p281, $mul.ref(out_$i277, 2));
    goto corral_source_split_1153;

  corral_source_split_1151:
    assume {:verifier.code 0} true;
    out_$p281 := $load.ref($M.1, out_$p280);
    goto corral_source_split_1152;

  corral_source_split_1150:
    assume {:verifier.code 0} true;
    out_$p280 := $i2p.i64.ref(out_$i279);
    goto corral_source_split_1151;

  corral_source_split_1149:
    assume {:verifier.code 0} true;
    out_$i279 := $add.i64(out_$i278, 544);
    call {:si_unique_call 559} {:cexpr "__cil_tmp156"} boogie_si_record_i64(out_$i279);
    goto corral_source_split_1150;

  corral_source_split_1148:
    assume {:verifier.code 0} true;
    out_$i278 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 558} {:cexpr "__cil_tmp155"} boogie_si_record_i64(out_$i278);
    goto corral_source_split_1149;

  corral_source_split_1147:
    assume {:verifier.code 0} true;
    out_$i277 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 557} {:cexpr "__cil_tmp154"} boogie_si_record_i64(out_$i277);
    goto corral_source_split_1148;

  $bb84:
    assume {:verifier.code 0} true;
    goto corral_source_split_1147;

  $bb87:
    assume {:verifier.code 0} true;
    out_$i274 := out_$i122;
    goto $bb84;

  corral_source_split_1142:
    assume {:verifier.code 0} true;
    out_$i274 := out_$i165;
    goto $bb84;

  $bb82:
    assume out_$i273 == 1;
    goto corral_source_split_1142;

  corral_source_split_1140:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  $bb81:
    assume {:verifier.code 0} true;
    out_$i273 := $eq.i32(out_$i122, 65535);
    goto corral_source_split_1140;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb73:
    assume !(out_$i264 == 1);
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb75:
    assume !(out_$i265 == 1);
    assume {:verifier.code 0} true;
    goto $bb79;

  corral_source_split_1130:
    assume {:verifier.code 0} true;
    out_$i266, out_$i267, out_$i268 := out_$i121, out_$i122, out_$i124;
    assume true;
    goto $bb74, $bb75;

  corral_source_split_1129:
    assume {:verifier.code 0} true;
    out_$i265 := $ne.i32(out_$i199, 65535);
    goto corral_source_split_1130;

  $bb72:
    assume out_$i264 == 1;
    goto corral_source_split_1129;

  corral_source_split_1124:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb72, $bb73;

  corral_source_split_1123:
    assume {:verifier.code 0} true;
    out_$i264 := $ule.i32(out_$i263, out_$i199);
    goto corral_source_split_1124;

  corral_source_split_1122:
    assume {:verifier.code 0} true;
    out_$i263 := $load.i32($M.1, out_$p262);
    call {:si_unique_call 554} {:cexpr "__cil_tmp153"} boogie_si_record_i32(out_$i263);
    goto corral_source_split_1123;

  corral_source_split_1121:
    assume {:verifier.code 0} true;
    out_$p262 := $i2p.i64.ref(out_$i261);
    goto corral_source_split_1122;

  corral_source_split_1120:
    assume {:verifier.code 0} true;
    out_$i261 := $add.i64(out_$i260, 560);
    call {:si_unique_call 553} {:cexpr "__cil_tmp152"} boogie_si_record_i64(out_$i261);
    goto corral_source_split_1121;

  corral_source_split_1119:
    assume {:verifier.code 0} true;
    out_$i260 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 552} {:cexpr "__cil_tmp151"} boogie_si_record_i64(out_$i260);
    goto corral_source_split_1120;

  $bb70:
    assume !(out_$i253 == 1);
    goto corral_source_split_1119;

  corral_source_split_1115:
    assume {:verifier.code 0} true;
    out_$i254, out_$i255, out_$i256 := out_$i121, out_$i122, out_$i124;
    assume true;
    goto $bb69, $bb70;

  corral_source_split_1114:
    assume {:verifier.code 0} true;
    out_$i253 := $ule.i32(out_$i252, out_$i165);
    goto corral_source_split_1115;

  corral_source_split_1113:
    assume {:verifier.code 0} true;
    out_$i252 := $load.i32($M.1, out_$p251);
    call {:si_unique_call 551} {:cexpr "__cil_tmp150"} boogie_si_record_i32(out_$i252);
    goto corral_source_split_1114;

  corral_source_split_1112:
    assume {:verifier.code 0} true;
    out_$p251 := $i2p.i64.ref(out_$i250);
    goto corral_source_split_1113;

  corral_source_split_1111:
    assume {:verifier.code 0} true;
    out_$i250 := $add.i64(out_$i249, 560);
    call {:si_unique_call 550} {:cexpr "__cil_tmp149"} boogie_si_record_i64(out_$i250);
    goto corral_source_split_1112;

  $bb68:
    assume {:verifier.code 0} true;
    out_$i249 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 549} {:cexpr "__cil_tmp148"} boogie_si_record_i64(out_$i249);
    goto corral_source_split_1111;

  $bb67:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb66:
    assume !(out_$i240 == 1);
    assume {:verifier.code 0} true;
    goto $bb67;

  corral_source_split_1100:
    assume {:verifier.code 0} true;
    out_$i241, out_$i242 := out_$i122, out_$i124;
    assume true;
    goto $bb65, $bb66;

  corral_source_split_1099:
    assume {:verifier.code 0} true;
    out_$i240 := $eq.i32(out_$i165, 65535);
    goto corral_source_split_1100;

  $bb64:
    assume !(out_$i231 == 1);
    goto corral_source_split_1099;

  corral_source_split_1088:
    assume {:verifier.code 0} true;
    out_$i232, out_$i233 := out_$i122, out_$i124;
    assume true;
    goto $bb63, $bb64;

  $bb62:
    assume {:verifier.code 0} true;
    out_$i231 := $eq.i32(out_$i165, 65534);
    goto corral_source_split_1088;

  $bb58:
    assume !(out_$i222 == 1);
    assume {:verifier.code 0} true;
    goto $bb62;

  corral_source_split_1077:
    assume {:verifier.code 0} true;
    out_$i223, out_$i224, out_$i225, out_$i226 := out_$i121, out_$i122, out_$i124, out_$i181;
    assume true;
    goto $bb57, $bb58;

  $bb56:
    assume {:verifier.code 0} true;
    out_$i222 := $ne.i32(out_$i181, 15465);
    goto corral_source_split_1077;

  $bb49:
    assume !(out_$i208 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  corral_source_split_1059:
    assume {:verifier.code 0} true;
    out_$i209, out_$i210, out_$i211, out_$i212 := out_$i122, out_$i123, out_$i124, out_$i165;
    assume true;
    goto $bb48, $bb49;

  corral_source_split_1058:
    assume {:verifier.code 0} true;
    out_$i208 := $ne.i32(out_$i207, 65533);
    goto corral_source_split_1059;

  corral_source_split_1057:
    assume {:verifier.code 0} true;
    out_$i207 := $zext.i16.i32(out_$i206);
    call {:si_unique_call 537} {:cexpr "__cil_tmp132"} boogie_si_record_i32(out_$i207);
    goto corral_source_split_1058;

  corral_source_split_1056:
    assume {:verifier.code 0} true;
    out_$i206 := $load.i16($M.1, out_$p205);
    call {:si_unique_call 536} {:cexpr "__cil_tmp131"} boogie_si_record_i16(out_$i206);
    goto corral_source_split_1057;

  corral_source_split_1055:
    assume {:verifier.code 0} true;
    out_$p205 := $add.ref(out_$p204, $mul.ref(out_$i200, 2));
    goto corral_source_split_1056;

  corral_source_split_1054:
    assume {:verifier.code 0} true;
    out_$p204 := $load.ref($M.1, out_$p203);
    goto corral_source_split_1055;

  corral_source_split_1053:
    assume {:verifier.code 0} true;
    out_$p203 := $i2p.i64.ref(out_$i202);
    goto corral_source_split_1054;

  corral_source_split_1052:
    assume {:verifier.code 0} true;
    out_$i202 := $add.i64(out_$i201, 544);
    call {:si_unique_call 535} {:cexpr "__cil_tmp128"} boogie_si_record_i64(out_$i202);
    goto corral_source_split_1053;

  corral_source_split_1051:
    assume {:verifier.code 0} true;
    out_$i201 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 534} {:cexpr "__cil_tmp127"} boogie_si_record_i64(out_$i201);
    goto corral_source_split_1052;

  corral_source_split_1050:
    assume {:verifier.code 0} true;
    out_$i200 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 533} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i200);
    goto corral_source_split_1051;

  $bb47:
    assume {:verifier.code 0} true;
    goto corral_source_split_1050;

  $bb46:
    assume !(out_$i192 == 1);
    assume {:verifier.code 0} true;
    out_$i199 := out_$i170;
    goto $bb47;

  corral_source_split_1048:
    assume {:verifier.code 0} true;
    out_$i199 := out_$i198;
    goto $bb47;

  corral_source_split_1047:
    assume {:verifier.code 0} true;
    out_$i198 := $add.i32(out_$i197, out_$i170);
    call {:si_unique_call 532} {:cexpr "prev_block"} boogie_si_record_i32(out_$i198);
    goto corral_source_split_1048;

  corral_source_split_1046:
    assume {:verifier.code 0} true;
    out_$i197 := $zext.i16.i32(out_$i196);
    call {:si_unique_call 531} {:cexpr "__cil_tmp125"} boogie_si_record_i32(out_$i197);
    goto corral_source_split_1047;

  corral_source_split_1045:
    assume {:verifier.code 0} true;
    out_$i196 := $load.i16($M.1, out_$p195);
    call {:si_unique_call 530} {:cexpr "__cil_tmp124"} boogie_si_record_i16(out_$i196);
    goto corral_source_split_1046;

  corral_source_split_1044:
    assume {:verifier.code 0} true;
    out_$p195 := $i2p.i64.ref(out_$i194);
    goto corral_source_split_1045;

  corral_source_split_1043:
    assume {:verifier.code 0} true;
    out_$i194 := $add.i64(out_$i193, 518);
    call {:si_unique_call 529} {:cexpr "__cil_tmp123"} boogie_si_record_i64(out_$i194);
    goto corral_source_split_1044;

  corral_source_split_1042:
    assume {:verifier.code 0} true;
    out_$i193 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 528} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i193);
    goto corral_source_split_1043;

  $bb45:
    assume out_$i192 == 1;
    goto corral_source_split_1042;

  corral_source_split_1040:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb45, $bb46;

  corral_source_split_1039:
    assume {:verifier.code 0} true;
    out_$i192 := $ugt.i32(out_$i191, out_$i170);
    goto corral_source_split_1040;

  corral_source_split_1038:
    assume {:verifier.code 0} true;
    out_$i191 := $load.i32($M.1, out_$p190);
    call {:si_unique_call 527} {:cexpr "__cil_tmp121"} boogie_si_record_i32(out_$i191);
    goto corral_source_split_1039;

  corral_source_split_1037:
    assume {:verifier.code 0} true;
    out_$p190 := $i2p.i64.ref(out_$i189);
    goto corral_source_split_1038;

  corral_source_split_1036:
    assume {:verifier.code 0} true;
    out_$i189 := $add.i64(out_$i188, 560);
    call {:si_unique_call 526} {:cexpr "__cil_tmp120"} boogie_si_record_i64(out_$i189);
    goto corral_source_split_1037;

  corral_source_split_1035:
    assume {:verifier.code 0} true;
    out_$i188 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 525} {:cexpr "__cil_tmp119"} boogie_si_record_i64(out_$i188);
    goto corral_source_split_1036;

  corral_source_split_1034:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p183, out_$i187);
    goto corral_source_split_1035;

  corral_source_split_1033:
    assume {:verifier.code 0} true;
    out_$i187 := $load.i8($M.1, out_$p186);
    goto corral_source_split_1034;

  corral_source_split_1032:
    assume {:verifier.code 0} true;
    out_$p186 := $i2p.i64.ref(out_$i185);
    goto corral_source_split_1033;

  corral_source_split_1031:
    assume {:verifier.code 0} true;
    out_$i185 := $add.i64(out_$i184, 4);
    call {:si_unique_call 524} {:cexpr "__cil_tmp118"} boogie_si_record_i64(out_$i185);
    goto corral_source_split_1032;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    out_$i184 := $p2i.ref.i64(in_$p1);
    goto corral_source_split_1031;

  corral_source_split_1029:
    assume {:verifier.code 0} true;
    out_$p183 := $add.ref(in_$p62, $mul.ref(out_$i182, 1));
    goto corral_source_split_1030;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    out_$i182 := $zext.i32.i64(out_$i124);
    call {:si_unique_call 523} {:cexpr "__cil_tmp116"} boogie_si_record_i64(out_$i182);
    goto corral_source_split_1029;

  corral_source_split_1027:
    assume {:verifier.code 0} true;
    out_$i181 := $or.i32(out_$i180, out_$i175);
    call {:si_unique_call 522} {:cexpr "__cil_tmp115"} boogie_si_record_i32(out_$i181);
    goto corral_source_split_1028;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    out_$i180 := $zext.i16.i32(out_$i179);
    call {:si_unique_call 521} {:cexpr "__cil_tmp114"} boogie_si_record_i32(out_$i180);
    goto corral_source_split_1027;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    out_$i179 := $load.i16($M.1, out_$p178);
    call {:si_unique_call 520} {:cexpr "__cil_tmp113"} boogie_si_record_i16(out_$i179);
    goto corral_source_split_1026;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    out_$p178 := $i2p.i64.ref(out_$i177);
    goto corral_source_split_1025;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    out_$i177 := $add.i64(out_$i176, 4);
    call {:si_unique_call 519} {:cexpr "__cil_tmp112"} boogie_si_record_i64(out_$i177);
    goto corral_source_split_1024;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    out_$i176 := $p2i.ref.i64(in_$p2);
    goto corral_source_split_1023;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    out_$i175 := $zext.i16.i32(out_$i174);
    call {:si_unique_call 518} {:cexpr "__cil_tmp111"} boogie_si_record_i32(out_$i175);
    goto corral_source_split_1022;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    out_$i174 := $load.i16($M.1, out_$p173);
    call {:si_unique_call 517} {:cexpr "__cil_tmp110"} boogie_si_record_i16(out_$i174);
    goto corral_source_split_1021;

  corral_source_split_1019:
    assume {:verifier.code 0} true;
    out_$p173 := $i2p.i64.ref(out_$i172);
    goto corral_source_split_1020;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    out_$i172 := $add.i64(out_$i171, 6);
    call {:si_unique_call 516} {:cexpr "__cil_tmp109"} boogie_si_record_i64(out_$i172);
    goto corral_source_split_1019;

  corral_source_split_1017:
    assume {:verifier.code 0} true;
    out_$i171 := $p2i.ref.i64(in_$p2);
    goto corral_source_split_1018;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    out_$i170 := $zext.i16.i32(out_$i169);
    call {:si_unique_call 515} {:cexpr "prev_block"} boogie_si_record_i32(out_$i170);
    goto corral_source_split_1017;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    out_$i169 := $load.i16($M.1, out_$p168);
    call {:si_unique_call 514} {:cexpr "__cil_tmp108"} boogie_si_record_i16(out_$i169);
    goto corral_source_split_1016;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    out_$p168 := $i2p.i64.ref(out_$i167);
    goto corral_source_split_1015;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    out_$i167 := $add.i64(out_$i166, 2);
    call {:si_unique_call 513} {:cexpr "__cil_tmp107"} boogie_si_record_i64(out_$i167);
    goto corral_source_split_1014;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    out_$i166 := $p2i.ref.i64(in_$p1);
    goto corral_source_split_1013;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    out_$i165 := $zext.i16.i32(out_$i164);
    call {:si_unique_call 512} {:cexpr "logical_block"} boogie_si_record_i32(out_$i165);
    goto corral_source_split_1012;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    out_$i164 := $load.i16($M.1, out_$p163);
    call {:si_unique_call 511} {:cexpr "__cil_tmp106"} boogie_si_record_i16(out_$i164);
    goto corral_source_split_1011;

  $bb44:
    assume {:verifier.code 0} true;
    out_$p163 := $bitcast.ref.ref(in_$p1);
    goto corral_source_split_1010;

  $bb43:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb42:
    assume !(out_$i160 == 1);
    assume {:verifier.code 0} true;
    goto $bb43;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    out_$i161 := out_$i122;
    assume true;
    goto $bb41, $bb42;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    out_$i160 := $slt.i32(out_$i159, 0);
    goto corral_source_split_1005;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    call {:si_unique_call 508} out_$i159 := inftl_read_oob(in_$p11, out_$i157, 8, in_$p3, out_$p158);
    call {:si_unique_call 509} {:cexpr "tmp___4"} boogie_si_record_i32(out_$i159);
    goto corral_source_split_1004;

  corral_source_split_1002:
    assume {:verifier.code 0} true;
    out_$p158 := $bitcast.ref.ref(in_$p2);
    goto corral_source_split_1003;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    out_$i157 := $zext.i32.i64(out_$i156);
    call {:si_unique_call 507} {:cexpr "__cil_tmp103"} boogie_si_record_i64(out_$i157);
    goto corral_source_split_1002;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    out_$i156 := $add.i32(out_$i155, 1032);
    call {:si_unique_call 506} {:cexpr "__cil_tmp102"} boogie_si_record_i32(out_$i156);
    goto corral_source_split_1001;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    out_$i155 := $mul.i32(out_$i154, out_$i124);
    call {:si_unique_call 505} {:cexpr "__cil_tmp101"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_1000;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    out_$i154 := $load.i32($M.1, out_$p153);
    call {:si_unique_call 504} {:cexpr "__cil_tmp100"} boogie_si_record_i32(out_$i154);
    goto corral_source_split_999;

  corral_source_split_997:
    assume {:verifier.code 0} true;
    out_$p153 := $i2p.i64.ref(out_$i152);
    goto corral_source_split_998;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    out_$i152 := $add.i64(out_$i151, 356);
    call {:si_unique_call 503} {:cexpr "__cil_tmp99"} boogie_si_record_i64(out_$i152);
    goto corral_source_split_997;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    out_$i151 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 502} {:cexpr "__cil_tmp98"} boogie_si_record_i64(out_$i151);
    goto corral_source_split_996;

  $bb40:
    assume !(out_$i148 == 1);
    goto corral_source_split_995;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    out_$i149 := out_$i122;
    assume true;
    goto $bb39, $bb40;

  corral_source_split_989:
    assume {:verifier.code 0} true;
    out_$i148 := $slt.i32(out_$i147, 0);
    goto corral_source_split_990;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    call {:si_unique_call 499} out_$i147 := inftl_read_oob(in_$p11, out_$i145, 8, in_$p3, out_$p146);
    call {:si_unique_call 500} {:cexpr "tmp___3"} boogie_si_record_i32(out_$i147);
    goto corral_source_split_989;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    out_$p146 := $bitcast.ref.ref(in_$p1);
    goto corral_source_split_988;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    out_$i145 := $zext.i32.i64(out_$i144);
    call {:si_unique_call 498} {:cexpr "__cil_tmp96"} boogie_si_record_i64(out_$i145);
    goto corral_source_split_987;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    out_$i144 := $add.i32(out_$i143, 8);
    call {:si_unique_call 497} {:cexpr "__cil_tmp95"} boogie_si_record_i32(out_$i144);
    goto corral_source_split_986;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    out_$i143 := $mul.i32(out_$i142, out_$i124);
    call {:si_unique_call 496} {:cexpr "__cil_tmp94"} boogie_si_record_i32(out_$i143);
    goto corral_source_split_985;

  corral_source_split_983:
    assume {:verifier.code 0} true;
    out_$i142 := $load.i32($M.1, out_$p141);
    call {:si_unique_call 495} {:cexpr "__cil_tmp93"} boogie_si_record_i32(out_$i142);
    goto corral_source_split_984;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    out_$p141 := $i2p.i64.ref(out_$i140);
    goto corral_source_split_983;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    out_$i140 := $add.i64(out_$i139, 356);
    call {:si_unique_call 494} {:cexpr "__cil_tmp92"} boogie_si_record_i64(out_$i140);
    goto corral_source_split_982;

  $bb38:
    assume {:verifier.code 0} true;
    out_$i139 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 493} {:cexpr "__cil_tmp91"} boogie_si_record_i64(out_$i139);
    goto corral_source_split_981;

  $bb33:
    assume !(out_$i125 == 1);
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb37:
    assume {:verifier.code 0} true;
    goto $bb38;

  $bb35:
    assume !(out_$i134 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb86:
    assume !(out_$i275 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  corral_source_split_1145:
    assume {:verifier.code 0} true;
    out_$i276 := out_$i122;
    assume true;
    goto $bb85, $bb86;

  corral_source_split_1144:
    assume {:verifier.code 0} true;
    out_$i275 := $ne.i32(out_$i122, out_$i165);
    goto corral_source_split_1145;

  $bb83:
    assume !(out_$i273 == 1);
    goto corral_source_split_1144;

  $bb28:
    assume !(out_$i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    out_$i150 := $add.i32(0, 1);
    call {:si_unique_call 501} {:cexpr "do_format_chain"} boogie_si_record_i32(out_$i150);
    goto corral_source_split_993;

  $bb39:
    assume out_$i148 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_992;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    out_$i162 := $add.i32(0, 1);
    call {:si_unique_call 510} {:cexpr "do_format_chain"} boogie_si_record_i32(out_$i162);
    goto corral_source_split_1008;

  $bb41:
    assume out_$i160 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1007;

  $bb51:
    assume !(out_$i213 == 1);
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb54:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb53:
    assume !(out_$i214 == 1);
    assume {:verifier.code 0} true;
    goto $bb54;

  corral_source_split_1075:
    assume {:verifier.code 0} true;
    goto $bb54;

  corral_source_split_1074:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p220, out_$i221);
    goto corral_source_split_1075;

  corral_source_split_1073:
    assume {:verifier.code 0} true;
    out_$i221 := $trunc.i32.i16(out_$i211);
    goto corral_source_split_1074;

  corral_source_split_1072:
    assume {:verifier.code 0} true;
    out_$p220 := $add.ref(out_$p219, $mul.ref(out_$i215, 2));
    goto corral_source_split_1073;

  corral_source_split_1071:
    assume {:verifier.code 0} true;
    out_$p219 := $load.ref($M.1, out_$p218);
    goto corral_source_split_1072;

  corral_source_split_1070:
    assume {:verifier.code 0} true;
    out_$p218 := $i2p.i64.ref(out_$i217);
    goto corral_source_split_1071;

  corral_source_split_1069:
    assume {:verifier.code 0} true;
    out_$i217 := $add.i64(out_$i216, 544);
    call {:si_unique_call 540} {:cexpr "__cil_tmp135"} boogie_si_record_i64(out_$i217);
    goto corral_source_split_1070;

  corral_source_split_1068:
    assume {:verifier.code 0} true;
    out_$i216 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 539} {:cexpr "__cil_tmp134"} boogie_si_record_i64(out_$i216);
    goto corral_source_split_1069;

  corral_source_split_1067:
    assume {:verifier.code 0} true;
    out_$i215 := $zext.i32.i64(out_$i210);
    call {:si_unique_call 538} {:cexpr "__cil_tmp133"} boogie_si_record_i64(out_$i215);
    goto corral_source_split_1068;

  $bb52:
    assume out_$i214 == 1;
    goto corral_source_split_1067;

  corral_source_split_1065:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb52, $bb53;

  corral_source_split_1064:
    assume {:verifier.code 0} true;
    out_$i214 := $ne.i32(out_$i210, 65535);
    goto corral_source_split_1065;

  $bb50:
    assume out_$i213 == 1;
    goto corral_source_split_1064;

  corral_source_split_1062:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb50, $bb51;

  corral_source_split_1061:
    assume {:verifier.code 0} true;
    out_$i213 := $eq.i32(out_$i212, out_$i209);
    goto corral_source_split_1062;

  $bb48:
    assume out_$i208 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1061;

  $bb61:
    assume {:verifier.code 0} true;
    goto corral_source_split_1086;

  $bb60:
    assume !(out_$i228 == 1);
    assume {:verifier.code 0} true;
    out_$i230 := 0;
    goto $bb61;

  corral_source_split_1084:
    assume {:verifier.code 0} true;
    out_$i230 := out_$i229;
    goto $bb61;

  corral_source_split_1083:
    assume {:verifier.code 0} true;
    out_$i229 := $add.i32(0, 1);
    call {:si_unique_call 542} {:cexpr "do_format_chain"} boogie_si_record_i32(out_$i229);
    goto corral_source_split_1084;

  $bb59:
    assume out_$i228 == 1;
    goto corral_source_split_1083;

  corral_source_split_1081:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb59, $bb60;

  corral_source_split_1080:
    assume {:verifier.code 0} true;
    out_$i228 := $eq.i32(out_$i223, 0);
    goto corral_source_split_1081;

  corral_source_split_1079:
    assume {:verifier.code 0} true;
    call {:si_unique_call 541} out_vslice_dummy_var_40 := printk.ref.i32.i32.i32.i32(.str.23, out_$i225, out_$i110, out_$i223, out_$i226);
    goto corral_source_split_1080;

  $bb57:
    assume out_$i222 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1079;

  corral_source_split_1096:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p239, $sub.i16(0, 2));
    goto corral_source_split_1097;

  corral_source_split_1095:
    assume {:verifier.code 0} true;
    out_$p239 := $add.ref(out_$p238, $mul.ref(out_$i234, 2));
    goto corral_source_split_1096;

  corral_source_split_1094:
    assume {:verifier.code 0} true;
    out_$p238 := $load.ref($M.1, out_$p237);
    goto corral_source_split_1095;

  corral_source_split_1093:
    assume {:verifier.code 0} true;
    out_$p237 := $i2p.i64.ref(out_$i236);
    goto corral_source_split_1094;

  corral_source_split_1092:
    assume {:verifier.code 0} true;
    out_$i236 := $add.i64(out_$i235, 544);
    call {:si_unique_call 545} {:cexpr "__cil_tmp140"} boogie_si_record_i64(out_$i236);
    goto corral_source_split_1093;

  corral_source_split_1091:
    assume {:verifier.code 0} true;
    out_$i235 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 544} {:cexpr "__cil_tmp139"} boogie_si_record_i64(out_$i235);
    goto corral_source_split_1092;

  corral_source_split_1090:
    assume {:verifier.code 0} true;
    out_$i234 := $zext.i32.i64(out_$i233);
    call {:si_unique_call 543} {:cexpr "__cil_tmp138"} boogie_si_record_i64(out_$i234);
    goto corral_source_split_1091;

  $bb63:
    assume out_$i231 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1090;

  corral_source_split_1108:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p248, $sub.i16(0, 2));
    goto corral_source_split_1109;

  corral_source_split_1107:
    assume {:verifier.code 0} true;
    out_$p248 := $add.ref(out_$p247, $mul.ref(out_$i243, 2));
    goto corral_source_split_1108;

  corral_source_split_1106:
    assume {:verifier.code 0} true;
    out_$p247 := $load.ref($M.1, out_$p246);
    goto corral_source_split_1107;

  corral_source_split_1105:
    assume {:verifier.code 0} true;
    out_$p246 := $i2p.i64.ref(out_$i245);
    goto corral_source_split_1106;

  corral_source_split_1104:
    assume {:verifier.code 0} true;
    out_$i245 := $add.i64(out_$i244, 544);
    call {:si_unique_call 548} {:cexpr "__cil_tmp145"} boogie_si_record_i64(out_$i245);
    goto corral_source_split_1105;

  corral_source_split_1103:
    assume {:verifier.code 0} true;
    out_$i244 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 547} {:cexpr "__cil_tmp144"} boogie_si_record_i64(out_$i244);
    goto corral_source_split_1104;

  corral_source_split_1102:
    assume {:verifier.code 0} true;
    out_$i243 := $zext.i32.i64(out_$i242);
    call {:si_unique_call 546} {:cexpr "__cil_tmp143"} boogie_si_record_i64(out_$i243);
    goto corral_source_split_1103;

  $bb65:
    assume out_$i240 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1102;

  $bb78:
    assume {:verifier.code 0} true;
    goto corral_source_split_1138;

  $bb77:
    assume !(out_$i269 == 1);
    assume {:verifier.code 0} true;
    out_$i272 := 0;
    goto $bb78;

  corral_source_split_1136:
    assume {:verifier.code 0} true;
    out_$i272 := out_$i271;
    goto $bb78;

  corral_source_split_1135:
    assume {:verifier.code 0} true;
    out_$i271 := $add.i32(0, 1);
    call {:si_unique_call 556} {:cexpr "do_format_chain"} boogie_si_record_i32(out_$i271);
    goto corral_source_split_1136;

  corral_source_split_1134:
    assume {:verifier.code 0} true;
    call {:si_unique_call 555} out_vslice_dummy_var_41 := printk.ref.i32.i32(.str.24, out_$i259, out_$i110);
    goto corral_source_split_1135;

  $bb76:
    assume out_$i269 == 1;
    goto corral_source_split_1134;

  corral_source_split_1127:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76, $bb77;

  corral_source_split_1126:
    assume {:verifier.code 0} true;
    out_$i269 := $sgt.i32(out_$i257, 0);
    goto corral_source_split_1127;

  $bb71:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1126;

  corral_source_split_1132:
    assume {:verifier.code 0} true;
    out_$i257, out_$i258, out_$i259 := out_$i266, out_$i267, out_$i268;
    goto $bb71;

  corral_source_split_1117:
    assume {:verifier.code 0} true;
    out_$i257, out_$i258, out_$i259 := out_$i254, out_$i255, out_$i256;
    goto $bb71;

  $bb69:
    assume out_$i253 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1117;

  $bb74:
    assume out_$i265 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1132;

  $bb85:
    assume out_$i275 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1157;

  $bb91:
    assume out_$i291 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_1171;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    out_$i302 := $add.i32(0, 1);
    call {:si_unique_call 568} {:cexpr "do_format_chain"} boogie_si_record_i32(out_$i302);
    goto corral_source_split_1182;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    call {:si_unique_call 567} out_vslice_dummy_var_42 := printk.ref.i32.i32(.str.25, out_$i299, out_$i110);
    goto corral_source_split_1181;

  $bb94:
    assume out_$i298 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1180;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p310, out_$i311);
    goto corral_source_split_1196;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    out_$i311 := $trunc.i32.i16(out_$i136);
    goto corral_source_split_1195;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    out_$p310 := $add.ref(out_$p309, $mul.ref(out_$i305, 2));
    goto corral_source_split_1194;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    out_$p309 := $load.ref($M.1, out_$p308);
    goto corral_source_split_1193;

  corral_source_split_1191:
    assume {:verifier.code 0} true;
    out_$p308 := $i2p.i64.ref(out_$i307);
    goto corral_source_split_1192;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    out_$i307 := $add.i64(out_$i306, 552);
    call {:si_unique_call 573} {:cexpr "__cil_tmp170"} boogie_si_record_i64(out_$i307);
    goto corral_source_split_1191;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    out_$i306 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 572} {:cexpr "__cil_tmp169"} boogie_si_record_i64(out_$i306);
    goto corral_source_split_1190;

  $bb99:
    assume {:verifier.code 0} true;
    out_$i305 := $zext.i32.i64(out_$i138);
    call {:si_unique_call 571} {:cexpr "__cil_tmp168"} boogie_si_record_i64(out_$i305);
    goto corral_source_split_1189;

  $bb98:
    assume !(out_$i304 == 1);
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb100_dummy:
    call {:si_unique_call 1} out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$i221, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$p237, out_$p238, out_$p239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$p246, out_$p247, out_$p248, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i257, out_$i258, out_$i259, out_$i269, out_$i271, out_$i272, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i302, out_$i303, out_$i136, out_$i137, out_$i138, out_$i304, out_$i305, out_$i306, out_$i307, out_$p308, out_$p309, out_$p310, out_$i311, out_$i120, out_$i312, out_$i313, out_$i314, out_$i315, out_$i110, out_$i316, out_vslice_dummy_var_40, out_vslice_dummy_var_41, out_vslice_dummy_var_42 := INFTL_mount_loop_$bb25(in_$p0, in_$p1, in_$p2, in_$p3, in_$p11, in_$p62, in_$p105, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$p129, out_$p130, out_$p131, out_$i132, out_$i133, out_$i134, out_$i135, out_$i139, out_$i140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$p153, out_$i154, out_$i155, out_$i156, out_$i157, out_$p158, out_$i159, out_$i160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$i166, out_$i167, out_$p168, out_$i169, out_$i170, out_$i171, out_$i172, out_$p173, out_$i174, out_$i175, out_$i176, out_$i177, out_$p178, out_$i179, out_$i180, out_$i181, out_$i182, out_$p183, out_$i184, out_$i185, out_$p186, out_$i187, out_$i188, out_$i189, out_$p190, out_$i191, out_$i192, out_$i193, out_$i194, out_$p195, out_$i196, out_$i197, out_$i198, out_$i199, out_$i200, out_$i201, out_$i202, out_$p203, out_$p204, out_$p205, out_$i206, out_$i207, out_$i208, out_$i209, out_$i210, out_$i211, out_$i212, out_$i213, out_$i214, out_$i215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$i221, out_$i222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$i236, out_$p237, out_$p238, out_$p239, out_$i240, out_$i241, out_$i242, out_$i243, out_$i244, out_$i245, out_$p246, out_$p247, out_$p248, out_$i249, out_$i250, out_$p251, out_$i252, out_$i253, out_$i254, out_$i255, out_$i256, out_$i260, out_$i261, out_$p262, out_$i263, out_$i264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i257, out_$i258, out_$i259, out_$i269, out_$i271, out_$i272, out_$i273, out_$i275, out_$i276, out_$i274, out_$i277, out_$i278, out_$i279, out_$p280, out_$p281, out_$p282, out_$i283, out_$i284, out_$i285, out_$i286, out_$p287, out_$p288, out_$p289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$i296, out_$i297, out_$i298, out_$i299, out_$i300, out_$i302, out_$i303, out_$i136, out_$i137, out_$i138, out_$i304, out_$i305, out_$i306, out_$i307, out_$p308, out_$p309, out_$p310, out_$i311, out_$i120, out_$i312, out_$i313, out_$i314, out_$i315, out_$i110, out_$i316, out_vslice_dummy_var_40, out_vslice_dummy_var_41, out_vslice_dummy_var_42);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb25(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p11: ref, in_$p62: ref, in_$p105: ref, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i121: i32, in_$i122: i32, in_$i123: i32, in_$i124: i32, in_$i125: i1, in_$i126: i64, in_$i127: i64, in_$i128: i64, in_$p129: ref, in_$p130: ref, in_$p131: ref, in_$i132: i16, in_$i133: i32, in_$i134: i1, in_$i135: i32, in_$i139: i64, in_$i140: i64, in_$p141: ref, in_$i142: i32, in_$i143: i32, in_$i144: i32, in_$i145: i64, in_$p146: ref, in_$i147: i32, in_$i148: i1, in_$i149: i32, in_$i150: i32, in_$i151: i64, in_$i152: i64, in_$p153: ref, in_$i154: i32, in_$i155: i32, in_$i156: i32, in_$i157: i64, in_$p158: ref, in_$i159: i32, in_$i160: i1, in_$i161: i32, in_$i162: i32, in_$p163: ref, in_$i164: i16, in_$i165: i32, in_$i166: i64, in_$i167: i64, in_$p168: ref, in_$i169: i16, in_$i170: i32, in_$i171: i64, in_$i172: i64, in_$p173: ref, in_$i174: i16, in_$i175: i32, in_$i176: i64, in_$i177: i64, in_$p178: ref, in_$i179: i16, in_$i180: i32, in_$i181: i32, in_$i182: i64, in_$p183: ref, in_$i184: i64, in_$i185: i64, in_$p186: ref, in_$i187: i8, in_$i188: i64, in_$i189: i64, in_$p190: ref, in_$i191: i32, in_$i192: i1, in_$i193: i64, in_$i194: i64, in_$p195: ref, in_$i196: i16, in_$i197: i32, in_$i198: i32, in_$i199: i32, in_$i200: i64, in_$i201: i64, in_$i202: i64, in_$p203: ref, in_$p204: ref, in_$p205: ref, in_$i206: i16, in_$i207: i32, in_$i208: i1, in_$i209: i32, in_$i210: i32, in_$i211: i32, in_$i212: i32, in_$i213: i1, in_$i214: i1, in_$i215: i64, in_$i216: i64, in_$i217: i64, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$i221: i16, in_$i222: i1, in_$i223: i32, in_$i224: i32, in_$i225: i32, in_$i226: i32, in_$i228: i1, in_$i229: i32, in_$i230: i32, in_$i231: i1, in_$i232: i32, in_$i233: i32, in_$i234: i64, in_$i235: i64, in_$i236: i64, in_$p237: ref, in_$p238: ref, in_$p239: ref, in_$i240: i1, in_$i241: i32, in_$i242: i32, in_$i243: i64, in_$i244: i64, in_$i245: i64, in_$p246: ref, in_$p247: ref, in_$p248: ref, in_$i249: i64, in_$i250: i64, in_$p251: ref, in_$i252: i32, in_$i253: i1, in_$i254: i32, in_$i255: i32, in_$i256: i32, in_$i260: i64, in_$i261: i64, in_$p262: ref, in_$i263: i32, in_$i264: i1, in_$i265: i1, in_$i266: i32, in_$i267: i32, in_$i268: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i269: i1, in_$i271: i32, in_$i272: i32, in_$i273: i1, in_$i275: i1, in_$i276: i32, in_$i274: i32, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$p281: ref, in_$p282: ref, in_$i283: i1, in_$i284: i64, in_$i285: i64, in_$i286: i64, in_$p287: ref, in_$p288: ref, in_$p289: ref, in_$i290: i16, in_$i291: i1, in_$i292: i32, in_$i293: i64, in_$i294: i64, in_$p295: ref, in_$i296: i16, in_$i297: i32, in_$i298: i1, in_$i299: i32, in_$i300: i32, in_$i302: i32, in_$i303: i32, in_$i136: i32, in_$i137: i32, in_$i138: i32, in_$i304: i1, in_$i305: i64, in_$i306: i64, in_$i307: i64, in_$p308: ref, in_$p309: ref, in_$p310: ref, in_$i311: i16, in_$i120: i32, in_$i312: i32, in_$i313: i16, in_$i314: i32, in_$i315: i1, in_$i110: i32, in_$i316: i32, in_vslice_dummy_var_40: i32, in_vslice_dummy_var_41: i32, in_vslice_dummy_var_42: i32) returns (out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i121: i32, out_$i122: i32, out_$i123: i32, out_$i124: i32, out_$i125: i1, out_$i126: i64, out_$i127: i64, out_$i128: i64, out_$p129: ref, out_$p130: ref, out_$p131: ref, out_$i132: i16, out_$i133: i32, out_$i134: i1, out_$i135: i32, out_$i139: i64, out_$i140: i64, out_$p141: ref, out_$i142: i32, out_$i143: i32, out_$i144: i32, out_$i145: i64, out_$p146: ref, out_$i147: i32, out_$i148: i1, out_$i149: i32, out_$i150: i32, out_$i151: i64, out_$i152: i64, out_$p153: ref, out_$i154: i32, out_$i155: i32, out_$i156: i32, out_$i157: i64, out_$p158: ref, out_$i159: i32, out_$i160: i1, out_$i161: i32, out_$i162: i32, out_$p163: ref, out_$i164: i16, out_$i165: i32, out_$i166: i64, out_$i167: i64, out_$p168: ref, out_$i169: i16, out_$i170: i32, out_$i171: i64, out_$i172: i64, out_$p173: ref, out_$i174: i16, out_$i175: i32, out_$i176: i64, out_$i177: i64, out_$p178: ref, out_$i179: i16, out_$i180: i32, out_$i181: i32, out_$i182: i64, out_$p183: ref, out_$i184: i64, out_$i185: i64, out_$p186: ref, out_$i187: i8, out_$i188: i64, out_$i189: i64, out_$p190: ref, out_$i191: i32, out_$i192: i1, out_$i193: i64, out_$i194: i64, out_$p195: ref, out_$i196: i16, out_$i197: i32, out_$i198: i32, out_$i199: i32, out_$i200: i64, out_$i201: i64, out_$i202: i64, out_$p203: ref, out_$p204: ref, out_$p205: ref, out_$i206: i16, out_$i207: i32, out_$i208: i1, out_$i209: i32, out_$i210: i32, out_$i211: i32, out_$i212: i32, out_$i213: i1, out_$i214: i1, out_$i215: i64, out_$i216: i64, out_$i217: i64, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$i221: i16, out_$i222: i1, out_$i223: i32, out_$i224: i32, out_$i225: i32, out_$i226: i32, out_$i228: i1, out_$i229: i32, out_$i230: i32, out_$i231: i1, out_$i232: i32, out_$i233: i32, out_$i234: i64, out_$i235: i64, out_$i236: i64, out_$p237: ref, out_$p238: ref, out_$p239: ref, out_$i240: i1, out_$i241: i32, out_$i242: i32, out_$i243: i64, out_$i244: i64, out_$i245: i64, out_$p246: ref, out_$p247: ref, out_$p248: ref, out_$i249: i64, out_$i250: i64, out_$p251: ref, out_$i252: i32, out_$i253: i1, out_$i254: i32, out_$i255: i32, out_$i256: i32, out_$i260: i64, out_$i261: i64, out_$p262: ref, out_$i263: i32, out_$i264: i1, out_$i265: i1, out_$i266: i32, out_$i267: i32, out_$i268: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i269: i1, out_$i271: i32, out_$i272: i32, out_$i273: i1, out_$i275: i1, out_$i276: i32, out_$i274: i32, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$p281: ref, out_$p282: ref, out_$i283: i1, out_$i284: i64, out_$i285: i64, out_$i286: i64, out_$p287: ref, out_$p288: ref, out_$p289: ref, out_$i290: i16, out_$i291: i1, out_$i292: i32, out_$i293: i64, out_$i294: i64, out_$p295: ref, out_$i296: i16, out_$i297: i32, out_$i298: i1, out_$i299: i32, out_$i300: i32, out_$i302: i32, out_$i303: i32, out_$i136: i32, out_$i137: i32, out_$i138: i32, out_$i304: i1, out_$i305: i64, out_$i306: i64, out_$i307: i64, out_$p308: ref, out_$p309: ref, out_$p310: ref, out_$i311: i16, out_$i120: i32, out_$i312: i32, out_$i313: i16, out_$i314: i32, out_$i315: i1, out_$i110: i32, out_$i316: i32, out_vslice_dummy_var_40: i32, out_vslice_dummy_var_41: i32, out_vslice_dummy_var_42: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_mount_loop_$bb11(in_$p0: ref, in_$p44: ref, in_$i48: i64, in_$i49: i64, in_$i50: i64, in_$p51: ref, in_$p52: ref, in_$p53: ref, in_$i54: i32, in_$i55: i32, in_$i56: i1, in_$i47: i32) returns (out_$i48: i64, out_$i49: i64, out_$i50: i64, out_$p51: ref, out_$p52: ref, out_$p53: ref, out_$i54: i32, out_$i55: i32, out_$i56: i1, out_$i47: i32)
{

  entry:
    out_$i48, out_$i49, out_$i50, out_$p51, out_$p52, out_$p53, out_$i54, out_$i55, out_$i56, out_$i47 := in_$i48, in_$i49, in_$i50, in_$p51, in_$p52, in_$p53, in_$i54, in_$i55, in_$i56, in_$i47;
    goto $bb11, exit;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_858;

  $bb13:
    assume out_$i56 == 1;
    assume {:verifier.code 0} true;
    out_$i47 := out_$i54;
    goto $bb13_dummy;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13;

  corral_source_split_868:
    assume {:verifier.code 0} true;
    out_$i56 := $ult.i32(out_$i54, out_$i55);
    goto corral_source_split_869;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    out_$i55 := $load.i32($M.1, in_$p44);
    call {:si_unique_call 447} {:cexpr "__cil_tmp51"} boogie_si_record_i32(out_$i55);
    goto corral_source_split_868;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    out_$i54 := $add.i32(out_$i47, 1);
    call {:si_unique_call 446} {:cexpr "i"} boogie_si_record_i32(out_$i54);
    goto corral_source_split_867;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p53, $sub.i16(0, 1));
    goto corral_source_split_866;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    out_$p53 := $add.ref(out_$p52, $mul.ref(out_$i48, 2));
    goto corral_source_split_865;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    out_$p52 := $load.ref($M.1, out_$p51);
    goto corral_source_split_864;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    out_$p51 := $i2p.i64.ref(out_$i50);
    goto corral_source_split_863;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    out_$i50 := $add.i64(out_$i49, 552);
    call {:si_unique_call 445} {:cexpr "__cil_tmp46"} boogie_si_record_i64(out_$i50);
    goto corral_source_split_862;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    out_$i49 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 444} {:cexpr "__cil_tmp45"} boogie_si_record_i64(out_$i49);
    goto corral_source_split_861;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i48 := $sext.i32.i64(out_$i47);
    call {:si_unique_call 443} {:cexpr "__cil_tmp44"} boogie_si_record_i64(out_$i48);
    goto corral_source_split_860;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb13_dummy:
    call {:si_unique_call 1} out_$i48, out_$i49, out_$i50, out_$p51, out_$p52, out_$p53, out_$i54, out_$i55, out_$i56, out_$i47 := INFTL_mount_loop_$bb11(in_$p0, in_$p44, out_$i48, out_$i49, out_$i50, out_$p51, out_$p52, out_$p53, out_$i54, out_$i55, out_$i56, out_$i47);
    return;

  exit:
    return;
}



procedure INFTL_mount_loop_$bb11(in_$p0: ref, in_$p44: ref, in_$i48: i64, in_$i49: i64, in_$i50: i64, in_$p51: ref, in_$p52: ref, in_$p53: ref, in_$i54: i32, in_$i55: i32, in_$i56: i1, in_$i47: i32) returns (out_$i48: i64, out_$i49: i64, out_$i50: i64, out_$p51: ref, out_$p52: ref, out_$p53: ref, out_$i54: i32, out_$i55: i32, out_$i56: i1, out_$i47: i32);
  modifies $M.1;



implementation find_boot_record_loop_$bb111(in_$p0: ref, in_$p713: ref, in_$i717: i64, in_$i718: i64, in_$p719: ref, in_$p720: ref, in_$i721: i64, in_$i722: i64, in_$p723: ref, in_$i724: i32, in_$i725: i32, in_$i726: i32, in_$i727: i64, in_$i728: i32, in_$i729: i1, in_$i730: i64, in_$i731: i64, in_$i732: i64, in_$p733: ref, in_$p734: ref, in_$p735: ref, in_$i736: i64, in_$i737: i64, in_$p738: ref, in_$p739: ref, in_$i740: i64, in_$i741: i64, in_$p742: ref, in_$i743: i32, in_$i744: i32, in_$i745: i32, in_$i746: i1, in_$i716: i32, in_$i710: i32) returns (out_$i717: i64, out_$i718: i64, out_$p719: ref, out_$p720: ref, out_$i721: i64, out_$i722: i64, out_$p723: ref, out_$i724: i32, out_$i725: i32, out_$i726: i32, out_$i727: i64, out_$i728: i32, out_$i729: i1, out_$i730: i64, out_$i731: i64, out_$i732: i64, out_$p733: ref, out_$p734: ref, out_$p735: ref, out_$i736: i64, out_$i737: i64, out_$p738: ref, out_$p739: ref, out_$i740: i64, out_$i741: i64, out_$p742: ref, out_$i743: i32, out_$i744: i32, out_$i745: i32, out_$i746: i1, out_$i716: i32)
{

  entry:
    out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716 := in_$i717, in_$i718, in_$p719, in_$p720, in_$i721, in_$i722, in_$p723, in_$i724, in_$i725, in_$i726, in_$i727, in_$i728, in_$i729, in_$i730, in_$i731, in_$i732, in_$p733, in_$p734, in_$p735, in_$i736, in_$i737, in_$p738, in_$p739, in_$i740, in_$i741, in_$p742, in_$i743, in_$i744, in_$i745, in_$i746, in_$i716;
    goto $bb111, exit;

  $bb111:
    assume {:verifier.code 0} true;
    goto corral_source_split_2458;

  $bb116:
    assume out_$i746 == 1;
    assume {:verifier.code 0} true;
    out_$i716 := out_$i744;
    goto $bb116_dummy;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb116;

  corral_source_split_2492:
    assume {:verifier.code 0} true;
    out_$i746 := $ult.i32(out_$i744, out_$i745);
    goto corral_source_split_2493;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    out_$i745 := $load.i32($M.1, in_$p713);
    call {:si_unique_call 1185} {:cexpr "__cil_tmp491"} boogie_si_record_i32(out_$i745);
    goto corral_source_split_2492;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    out_$i744 := $add.i32(out_$i743, out_$i716);
    call {:si_unique_call 1184} {:cexpr "__cil_tmp488"} boogie_si_record_i32(out_$i744);
    goto corral_source_split_2491;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    out_$i743 := $load.i32($M.1, out_$p742);
    call {:si_unique_call 1183} {:cexpr "__cil_tmp487"} boogie_si_record_i32(out_$i743);
    goto corral_source_split_2490;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    out_$p742 := $i2p.i64.ref(out_$i741);
    goto corral_source_split_2489;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    out_$i741 := $add.i64(out_$i740, 16);
    call {:si_unique_call 1182} {:cexpr "__cil_tmp486"} boogie_si_record_i64(out_$i741);
    goto corral_source_split_2488;

  corral_source_split_2486:
    assume {:verifier.code 0} true;
    out_$i740 := $p2i.ref.i64(out_$p739);
    call {:si_unique_call 1181} {:cexpr "__cil_tmp485"} boogie_si_record_i64(out_$i740);
    goto corral_source_split_2487;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    out_$p739 := $load.ref($M.1, out_$p738);
    goto corral_source_split_2486;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    out_$p738 := $i2p.i64.ref(out_$i737);
    goto corral_source_split_2485;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    out_$i737 := $add.i64(out_$i736, 24);
    call {:si_unique_call 1180} {:cexpr "__cil_tmp483"} boogie_si_record_i64(out_$i737);
    goto corral_source_split_2484;

  $bb115:
    assume {:verifier.code 0} true;
    out_$i736 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1179} {:cexpr "__cil_tmp482"} boogie_si_record_i64(out_$i736);
    goto corral_source_split_2483;

  $bb114:
    assume !(out_$i729 == 1);
    assume {:verifier.code 0} true;
    goto $bb115;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    goto $bb115;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p735, $sub.i16(0, 4));
    goto corral_source_split_2481;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    out_$p735 := $add.ref(out_$p734, $mul.ref(out_$i730, 2));
    goto corral_source_split_2480;

  corral_source_split_2478:
    assume {:verifier.code 0} true;
    out_$p734 := $load.ref($M.1, out_$p733);
    goto corral_source_split_2479;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    out_$p733 := $i2p.i64.ref(out_$i732);
    goto corral_source_split_2478;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    out_$i732 := $add.i64(out_$i731, 544);
    call {:si_unique_call 1178} {:cexpr "__cil_tmp477"} boogie_si_record_i64(out_$i732);
    goto corral_source_split_2477;

  corral_source_split_2475:
    assume {:verifier.code 0} true;
    out_$i731 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1177} {:cexpr "__cil_tmp476"} boogie_si_record_i64(out_$i731);
    goto corral_source_split_2476;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    out_$i730 := $zext.i32.i64(in_$i710);
    call {:si_unique_call 1176} {:cexpr "__cil_tmp475"} boogie_si_record_i64(out_$i730);
    goto corral_source_split_2475;

  $bb113:
    assume out_$i729 == 1;
    goto corral_source_split_2474;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113, $bb114;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    out_$i729 := $ne.i32(out_$i728, 0);
    goto corral_source_split_2472;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1174} out_$i728 := mtd_block_isbad(out_$p720, out_$i727);
    call {:si_unique_call 1175} {:cexpr "tmp___6"} boogie_si_record_i32(out_$i728);
    goto corral_source_split_2471;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    out_$i727 := $zext.i32.i64(out_$i726);
    call {:si_unique_call 1173} {:cexpr "__cil_tmp474"} boogie_si_record_i64(out_$i727);
    goto corral_source_split_2470;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    out_$i726 := $add.i32(out_$i725, out_$i716);
    call {:si_unique_call 1172} {:cexpr "__cil_tmp473"} boogie_si_record_i32(out_$i726);
    goto corral_source_split_2469;

  corral_source_split_2467:
    assume {:verifier.code 0} true;
    out_$i725 := $mul.i32(out_$i724, in_$i710);
    call {:si_unique_call 1171} {:cexpr "__cil_tmp472"} boogie_si_record_i32(out_$i725);
    goto corral_source_split_2468;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    out_$i724 := $load.i32($M.1, out_$p723);
    call {:si_unique_call 1170} {:cexpr "__cil_tmp471"} boogie_si_record_i32(out_$i724);
    goto corral_source_split_2467;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    out_$p723 := $i2p.i64.ref(out_$i722);
    goto corral_source_split_2466;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    out_$i722 := $add.i64(out_$i721, 356);
    call {:si_unique_call 1169} {:cexpr "__cil_tmp470"} boogie_si_record_i64(out_$i722);
    goto corral_source_split_2465;

  corral_source_split_2463:
    assume {:verifier.code 0} true;
    out_$i721 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1168} {:cexpr "__cil_tmp469"} boogie_si_record_i64(out_$i721);
    goto corral_source_split_2464;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    out_$p720 := $load.ref($M.1, out_$p719);
    goto corral_source_split_2463;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    out_$p719 := $i2p.i64.ref(out_$i718);
    goto corral_source_split_2462;

  corral_source_split_2460:
    assume {:verifier.code 0} true;
    out_$i718 := $add.i64(out_$i717, 24);
    call {:si_unique_call 1167} {:cexpr "__cil_tmp466"} boogie_si_record_i64(out_$i718);
    goto corral_source_split_2461;

  $bb112:
    assume {:verifier.code 0} true;
    out_$i717 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1166} {:cexpr "__cil_tmp465"} boogie_si_record_i64(out_$i717);
    goto corral_source_split_2460;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb116_dummy:
    call {:si_unique_call 1} out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716 := find_boot_record_loop_$bb111(in_$p0, in_$p713, out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716, in_$i710);
    return;

  exit:
    return;
}



procedure find_boot_record_loop_$bb111(in_$p0: ref, in_$p713: ref, in_$i717: i64, in_$i718: i64, in_$p719: ref, in_$p720: ref, in_$i721: i64, in_$i722: i64, in_$p723: ref, in_$i724: i32, in_$i725: i32, in_$i726: i32, in_$i727: i64, in_$i728: i32, in_$i729: i1, in_$i730: i64, in_$i731: i64, in_$i732: i64, in_$p733: ref, in_$p734: ref, in_$p735: ref, in_$i736: i64, in_$i737: i64, in_$p738: ref, in_$p739: ref, in_$i740: i64, in_$i741: i64, in_$p742: ref, in_$i743: i32, in_$i744: i32, in_$i745: i32, in_$i746: i1, in_$i716: i32, in_$i710: i32) returns (out_$i717: i64, out_$i718: i64, out_$p719: ref, out_$p720: ref, out_$i721: i64, out_$i722: i64, out_$p723: ref, out_$i724: i32, out_$i725: i32, out_$i726: i32, out_$i727: i64, out_$i728: i32, out_$i729: i1, out_$i730: i64, out_$i731: i64, out_$i732: i64, out_$p733: ref, out_$p734: ref, out_$p735: ref, out_$i736: i64, out_$i737: i64, out_$p738: ref, out_$p739: ref, out_$i740: i64, out_$i741: i64, out_$p742: ref, out_$i743: i32, out_$i744: i32, out_$i745: i32, out_$i746: i1, out_$i716: i32);
  modifies $M.1;



implementation find_boot_record_loop_$bb106(in_$p0: ref, in_$p707: ref, in_$i711: i64, in_$i712: i64, in_$p713: ref, in_$i714: i32, in_$i715: i1, in_$i717: i64, in_$i718: i64, in_$p719: ref, in_$p720: ref, in_$i721: i64, in_$i722: i64, in_$p723: ref, in_$i724: i32, in_$i725: i32, in_$i726: i32, in_$i727: i64, in_$i728: i32, in_$i729: i1, in_$i730: i64, in_$i731: i64, in_$i732: i64, in_$p733: ref, in_$p734: ref, in_$p735: ref, in_$i736: i64, in_$i737: i64, in_$p738: ref, in_$p739: ref, in_$i740: i64, in_$i741: i64, in_$p742: ref, in_$i743: i32, in_$i744: i32, in_$i745: i32, in_$i746: i1, in_$i716: i32, in_$i747: i32, in_$i748: i32, in_$i749: i1, in_$i710: i32) returns (out_$i711: i64, out_$i712: i64, out_$p713: ref, out_$i714: i32, out_$i715: i1, out_$i717: i64, out_$i718: i64, out_$p719: ref, out_$p720: ref, out_$i721: i64, out_$i722: i64, out_$p723: ref, out_$i724: i32, out_$i725: i32, out_$i726: i32, out_$i727: i64, out_$i728: i32, out_$i729: i1, out_$i730: i64, out_$i731: i64, out_$i732: i64, out_$p733: ref, out_$p734: ref, out_$p735: ref, out_$i736: i64, out_$i737: i64, out_$p738: ref, out_$p739: ref, out_$i740: i64, out_$i741: i64, out_$p742: ref, out_$i743: i32, out_$i744: i32, out_$i745: i32, out_$i746: i1, out_$i716: i32, out_$i747: i32, out_$i748: i32, out_$i749: i1, out_$i710: i32)
{

  entry:
    out_$i711, out_$i712, out_$p713, out_$i714, out_$i715, out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716, out_$i747, out_$i748, out_$i749, out_$i710 := in_$i711, in_$i712, in_$p713, in_$i714, in_$i715, in_$i717, in_$i718, in_$p719, in_$p720, in_$i721, in_$i722, in_$p723, in_$i724, in_$i725, in_$i726, in_$i727, in_$i728, in_$i729, in_$i730, in_$i731, in_$i732, in_$p733, in_$p734, in_$p735, in_$i736, in_$i737, in_$p738, in_$p739, in_$i740, in_$i741, in_$p742, in_$i743, in_$i744, in_$i745, in_$i746, in_$i716, in_$i747, in_$i748, in_$i749, in_$i710;
    goto $bb106, exit;

  $bb106:
    assume {:verifier.code 0} true;
    goto corral_source_split_2448;

  $bb119:
    assume out_$i749 == 1;
    assume {:verifier.code 0} true;
    out_$i710 := out_$i747;
    goto $bb119_dummy;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb119;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    out_$i749 := $ugt.i32(out_$i748, out_$i747);
    goto corral_source_split_2499;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    out_$i748 := $load.i32($M.1, in_$p707);
    call {:si_unique_call 1187} {:cexpr "__cil_tmp495"} boogie_si_record_i32(out_$i748);
    goto corral_source_split_2498;

  $bb118:
    assume {:verifier.code 0} true;
    out_$i747 := $add.i32(out_$i710, 1);
    call {:si_unique_call 1186} {:cexpr "i"} boogie_si_record_i32(out_$i747);
    goto corral_source_split_2497;

  $bb110:
    assume {:verifier.code 0} true;
    goto $bb118;

  $bb109:
    assume {:verifier.code 0} true;
    assume !(out_$i715 == 1);
    goto $bb110;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb117:
    assume !(out_$i746 == 1);
    goto corral_source_split_2495;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb116, $bb117;

  corral_source_split_2492:
    assume {:verifier.code 0} true;
    out_$i746 := $ult.i32(out_$i744, out_$i745);
    goto corral_source_split_2493;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    out_$i745 := $load.i32($M.1, out_$p713);
    call {:si_unique_call 1185} {:cexpr "__cil_tmp491"} boogie_si_record_i32(out_$i745);
    goto corral_source_split_2492;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    out_$i744 := $add.i32(out_$i743, out_$i716);
    call {:si_unique_call 1184} {:cexpr "__cil_tmp488"} boogie_si_record_i32(out_$i744);
    goto corral_source_split_2491;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    out_$i743 := $load.i32($M.1, out_$p742);
    call {:si_unique_call 1183} {:cexpr "__cil_tmp487"} boogie_si_record_i32(out_$i743);
    goto corral_source_split_2490;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    out_$p742 := $i2p.i64.ref(out_$i741);
    goto corral_source_split_2489;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    out_$i741 := $add.i64(out_$i740, 16);
    call {:si_unique_call 1182} {:cexpr "__cil_tmp486"} boogie_si_record_i64(out_$i741);
    goto corral_source_split_2488;

  corral_source_split_2486:
    assume {:verifier.code 0} true;
    out_$i740 := $p2i.ref.i64(out_$p739);
    call {:si_unique_call 1181} {:cexpr "__cil_tmp485"} boogie_si_record_i64(out_$i740);
    goto corral_source_split_2487;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    out_$p739 := $load.ref($M.1, out_$p738);
    goto corral_source_split_2486;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    out_$p738 := $i2p.i64.ref(out_$i737);
    goto corral_source_split_2485;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    out_$i737 := $add.i64(out_$i736, 24);
    call {:si_unique_call 1180} {:cexpr "__cil_tmp483"} boogie_si_record_i64(out_$i737);
    goto corral_source_split_2484;

  $bb115:
    assume {:verifier.code 0} true;
    out_$i736 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1179} {:cexpr "__cil_tmp482"} boogie_si_record_i64(out_$i736);
    goto corral_source_split_2483;

  $bb114:
    assume !(out_$i729 == 1);
    assume {:verifier.code 0} true;
    goto $bb115;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    goto $bb115;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p735, $sub.i16(0, 4));
    goto corral_source_split_2481;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    out_$p735 := $add.ref(out_$p734, $mul.ref(out_$i730, 2));
    goto corral_source_split_2480;

  corral_source_split_2478:
    assume {:verifier.code 0} true;
    out_$p734 := $load.ref($M.1, out_$p733);
    goto corral_source_split_2479;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    out_$p733 := $i2p.i64.ref(out_$i732);
    goto corral_source_split_2478;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    out_$i732 := $add.i64(out_$i731, 544);
    call {:si_unique_call 1178} {:cexpr "__cil_tmp477"} boogie_si_record_i64(out_$i732);
    goto corral_source_split_2477;

  corral_source_split_2475:
    assume {:verifier.code 0} true;
    out_$i731 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1177} {:cexpr "__cil_tmp476"} boogie_si_record_i64(out_$i731);
    goto corral_source_split_2476;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    out_$i730 := $zext.i32.i64(out_$i710);
    call {:si_unique_call 1176} {:cexpr "__cil_tmp475"} boogie_si_record_i64(out_$i730);
    goto corral_source_split_2475;

  $bb113:
    assume out_$i729 == 1;
    goto corral_source_split_2474;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113, $bb114;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    out_$i729 := $ne.i32(out_$i728, 0);
    goto corral_source_split_2472;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1174} out_$i728 := mtd_block_isbad(out_$p720, out_$i727);
    call {:si_unique_call 1175} {:cexpr "tmp___6"} boogie_si_record_i32(out_$i728);
    goto corral_source_split_2471;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    out_$i727 := $zext.i32.i64(out_$i726);
    call {:si_unique_call 1173} {:cexpr "__cil_tmp474"} boogie_si_record_i64(out_$i727);
    goto corral_source_split_2470;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    out_$i726 := $add.i32(out_$i725, out_$i716);
    call {:si_unique_call 1172} {:cexpr "__cil_tmp473"} boogie_si_record_i32(out_$i726);
    goto corral_source_split_2469;

  corral_source_split_2467:
    assume {:verifier.code 0} true;
    out_$i725 := $mul.i32(out_$i724, out_$i710);
    call {:si_unique_call 1171} {:cexpr "__cil_tmp472"} boogie_si_record_i32(out_$i725);
    goto corral_source_split_2468;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    out_$i724 := $load.i32($M.1, out_$p723);
    call {:si_unique_call 1170} {:cexpr "__cil_tmp471"} boogie_si_record_i32(out_$i724);
    goto corral_source_split_2467;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    out_$p723 := $i2p.i64.ref(out_$i722);
    goto corral_source_split_2466;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    out_$i722 := $add.i64(out_$i721, 356);
    call {:si_unique_call 1169} {:cexpr "__cil_tmp470"} boogie_si_record_i64(out_$i722);
    goto corral_source_split_2465;

  corral_source_split_2463:
    assume {:verifier.code 0} true;
    out_$i721 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1168} {:cexpr "__cil_tmp469"} boogie_si_record_i64(out_$i721);
    goto corral_source_split_2464;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    out_$p720 := $load.ref($M.1, out_$p719);
    goto corral_source_split_2463;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    out_$p719 := $i2p.i64.ref(out_$i718);
    goto corral_source_split_2462;

  corral_source_split_2460:
    assume {:verifier.code 0} true;
    out_$i718 := $add.i64(out_$i717, 24);
    call {:si_unique_call 1167} {:cexpr "__cil_tmp466"} boogie_si_record_i64(out_$i718);
    goto corral_source_split_2461;

  $bb112:
    assume {:verifier.code 0} true;
    out_$i717 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1166} {:cexpr "__cil_tmp465"} boogie_si_record_i64(out_$i717);
    goto corral_source_split_2460;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb111:
    call out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716 := find_boot_record_loop_$bb111(in_$p0, out_$p713, out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716, out_$i710);
    goto $bb111_last;

  $bb111_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_2458;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    out_$i716 := 0;
    goto $bb111;

  $bb116:
    assume out_$i746 == 1;
    assume {:verifier.code 0} true;
    out_$i716 := out_$i744;
    assume false;
    return;

  $bb108:
    assume out_$i715 == 1;
    goto corral_source_split_2456;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb108, $bb109;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    out_$i715 := $ult.i32(0, out_$i714);
    goto corral_source_split_2454;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    out_$i714 := $load.i32($M.1, out_$p713);
    call {:si_unique_call 1165} {:cexpr "__cil_tmp491"} boogie_si_record_i32(out_$i714);
    goto corral_source_split_2453;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    out_$p713 := $i2p.i64.ref(out_$i712);
    goto corral_source_split_2452;

  corral_source_split_2450:
    assume {:verifier.code 0} true;
    out_$i712 := $add.i64(out_$i711, 356);
    call {:si_unique_call 1164} {:cexpr "__cil_tmp490"} boogie_si_record_i64(out_$i712);
    goto corral_source_split_2451;

  $bb107:
    assume {:verifier.code 0} true;
    out_$i711 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1163} {:cexpr "__cil_tmp489"} boogie_si_record_i64(out_$i711);
    goto corral_source_split_2450;

  corral_source_split_2448:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb119_dummy:
    call {:si_unique_call 1} out_$i711, out_$i712, out_$p713, out_$i714, out_$i715, out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716, out_$i747, out_$i748, out_$i749, out_$i710 := find_boot_record_loop_$bb106(in_$p0, in_$p707, out_$i711, out_$i712, out_$p713, out_$i714, out_$i715, out_$i717, out_$i718, out_$p719, out_$p720, out_$i721, out_$i722, out_$p723, out_$i724, out_$i725, out_$i726, out_$i727, out_$i728, out_$i729, out_$i730, out_$i731, out_$i732, out_$p733, out_$p734, out_$p735, out_$i736, out_$i737, out_$p738, out_$p739, out_$i740, out_$i741, out_$p742, out_$i743, out_$i744, out_$i745, out_$i746, out_$i716, out_$i747, out_$i748, out_$i749, out_$i710);
    return;

  exit:
    return;
}



procedure find_boot_record_loop_$bb106(in_$p0: ref, in_$p707: ref, in_$i711: i64, in_$i712: i64, in_$p713: ref, in_$i714: i32, in_$i715: i1, in_$i717: i64, in_$i718: i64, in_$p719: ref, in_$p720: ref, in_$i721: i64, in_$i722: i64, in_$p723: ref, in_$i724: i32, in_$i725: i32, in_$i726: i32, in_$i727: i64, in_$i728: i32, in_$i729: i1, in_$i730: i64, in_$i731: i64, in_$i732: i64, in_$p733: ref, in_$p734: ref, in_$p735: ref, in_$i736: i64, in_$i737: i64, in_$p738: ref, in_$p739: ref, in_$i740: i64, in_$i741: i64, in_$p742: ref, in_$i743: i32, in_$i744: i32, in_$i745: i32, in_$i746: i1, in_$i716: i32, in_$i747: i32, in_$i748: i32, in_$i749: i1, in_$i710: i32) returns (out_$i711: i64, out_$i712: i64, out_$p713: ref, out_$i714: i32, out_$i715: i1, out_$i717: i64, out_$i718: i64, out_$p719: ref, out_$p720: ref, out_$i721: i64, out_$i722: i64, out_$p723: ref, out_$i724: i32, out_$i725: i32, out_$i726: i32, out_$i727: i64, out_$i728: i32, out_$i729: i1, out_$i730: i64, out_$i731: i64, out_$i732: i64, out_$p733: ref, out_$p734: ref, out_$p735: ref, out_$i736: i64, out_$i737: i64, out_$p738: ref, out_$p739: ref, out_$i740: i64, out_$i741: i64, out_$p742: ref, out_$i743: i32, out_$i744: i32, out_$i745: i32, out_$i746: i1, out_$i716: i32, out_$i747: i32, out_$i748: i32, out_$i749: i1, out_$i710: i32);
  modifies $M.1;



implementation find_boot_record_loop_$bb98(in_$p0: ref, in_$p686: ref, in_$i690: i64, in_$i691: i64, in_$i692: i64, in_$p693: ref, in_$p694: ref, in_$p695: ref, in_$i696: i32, in_$i697: i32, in_$i698: i1, in_$i689: i32) returns (out_$i690: i64, out_$i691: i64, out_$i692: i64, out_$p693: ref, out_$p694: ref, out_$p695: ref, out_$i696: i32, out_$i697: i32, out_$i698: i1, out_$i689: i32)
{

  entry:
    out_$i690, out_$i691, out_$i692, out_$p693, out_$p694, out_$p695, out_$i696, out_$i697, out_$i698, out_$i689 := in_$i690, in_$i691, in_$i692, in_$p693, in_$p694, in_$p695, in_$i696, in_$i697, in_$i698, in_$i689;
    goto $bb98, exit;

  $bb98:
    assume {:verifier.code 0} true;
    goto corral_source_split_2418;

  $bb100:
    assume out_$i698 == 1;
    assume {:verifier.code 0} true;
    out_$i689 := out_$i696;
    goto $bb100_dummy;

  corral_source_split_2429:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb100;

  corral_source_split_2428:
    assume {:verifier.code 0} true;
    out_$i698 := $ugt.i32(out_$i697, out_$i696);
    goto corral_source_split_2429;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    out_$i697 := $load.i32($M.1, in_$p686);
    call {:si_unique_call 1156} {:cexpr "__cil_tmp458"} boogie_si_record_i32(out_$i697);
    goto corral_source_split_2428;

  corral_source_split_2426:
    assume {:verifier.code 0} true;
    out_$i696 := $add.i32(out_$i689, 1);
    call {:si_unique_call 1155} {:cexpr "i"} boogie_si_record_i32(out_$i696);
    goto corral_source_split_2427;

  corral_source_split_2425:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p695, $sub.i16(0, 3));
    goto corral_source_split_2426;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    out_$p695 := $add.ref(out_$p694, $mul.ref(out_$i690, 2));
    goto corral_source_split_2425;

  corral_source_split_2423:
    assume {:verifier.code 0} true;
    out_$p694 := $load.ref($M.1, out_$p693);
    goto corral_source_split_2424;

  corral_source_split_2422:
    assume {:verifier.code 0} true;
    out_$p693 := $i2p.i64.ref(out_$i692);
    goto corral_source_split_2423;

  corral_source_split_2421:
    assume {:verifier.code 0} true;
    out_$i692 := $add.i64(out_$i691, 544);
    call {:si_unique_call 1154} {:cexpr "__cil_tmp453"} boogie_si_record_i64(out_$i692);
    goto corral_source_split_2422;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    out_$i691 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1153} {:cexpr "__cil_tmp452"} boogie_si_record_i64(out_$i691);
    goto corral_source_split_2421;

  $bb99:
    assume {:verifier.code 0} true;
    out_$i690 := $zext.i32.i64(out_$i689);
    call {:si_unique_call 1152} {:cexpr "__cil_tmp451"} boogie_si_record_i64(out_$i690);
    goto corral_source_split_2420;

  corral_source_split_2418:
    assume {:verifier.code 0} true;
    goto $bb99;

  $bb100_dummy:
    call {:si_unique_call 1} out_$i690, out_$i691, out_$i692, out_$p693, out_$p694, out_$p695, out_$i696, out_$i697, out_$i698, out_$i689 := find_boot_record_loop_$bb98(in_$p0, in_$p686, out_$i690, out_$i691, out_$i692, out_$p693, out_$p694, out_$p695, out_$i696, out_$i697, out_$i698, out_$i689);
    return;

  exit:
    return;
}



procedure find_boot_record_loop_$bb98(in_$p0: ref, in_$p686: ref, in_$i690: i64, in_$i691: i64, in_$i692: i64, in_$p693: ref, in_$p694: ref, in_$p695: ref, in_$i696: i32, in_$i697: i32, in_$i698: i1, in_$i689: i32) returns (out_$i690: i64, out_$i691: i64, out_$i692: i64, out_$p693: ref, out_$p694: ref, out_$p695: ref, out_$i696: i32, out_$i697: i32, out_$i698: i1, out_$i689: i32);
  modifies $M.1;



implementation find_boot_record_loop_$bb90(in_$p0: ref, in_$p669: ref, in_$i674: i64, in_$i675: i64, in_$i676: i64, in_$p677: ref, in_$p678: ref, in_$p679: ref, in_$i680: i32, in_$i681: i32, in_$i682: i1, in_$i673: i32, in_$i683: i32) returns (out_$i674: i64, out_$i675: i64, out_$i676: i64, out_$p677: ref, out_$p678: ref, out_$p679: ref, out_$i680: i32, out_$i681: i32, out_$i682: i1, out_$i673: i32, out_$i683: i32)
{

  entry:
    out_$i674, out_$i675, out_$i676, out_$p677, out_$p678, out_$p679, out_$i680, out_$i681, out_$i682, out_$i673, out_$i683 := in_$i674, in_$i675, in_$i676, in_$p677, in_$p678, in_$p679, in_$i680, in_$i681, in_$i682, in_$i673, in_$i683;
    goto $bb90, exit;

  $bb90:
    assume {:verifier.code 0} true;
    goto corral_source_split_2395;

  $bb92:
    assume out_$i682 == 1;
    assume {:verifier.code 0} true;
    out_$i673 := out_$i680;
    goto $bb92_dummy;

  corral_source_split_2406:
    assume {:verifier.code 0} true;
    out_$i683 := out_$i680;
    assume true;
    goto $bb92;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    out_$i682 := $ugt.i32(out_$i681, out_$i680);
    goto corral_source_split_2406;

  corral_source_split_2404:
    assume {:verifier.code 0} true;
    out_$i681 := $load.i32($M.1, in_$p669);
    call {:si_unique_call 1148} {:cexpr "__cil_tmp450"} boogie_si_record_i32(out_$i681);
    goto corral_source_split_2405;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    out_$i680 := $add.i32(out_$i673, 1);
    call {:si_unique_call 1147} {:cexpr "i"} boogie_si_record_i32(out_$i680);
    goto corral_source_split_2404;

  corral_source_split_2402:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p679, $sub.i16(0, 4));
    goto corral_source_split_2403;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    out_$p679 := $add.ref(out_$p678, $mul.ref(out_$i674, 2));
    goto corral_source_split_2402;

  corral_source_split_2400:
    assume {:verifier.code 0} true;
    out_$p678 := $load.ref($M.1, out_$p677);
    goto corral_source_split_2401;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    out_$p677 := $i2p.i64.ref(out_$i676);
    goto corral_source_split_2400;

  corral_source_split_2398:
    assume {:verifier.code 0} true;
    out_$i676 := $add.i64(out_$i675, 544);
    call {:si_unique_call 1146} {:cexpr "__cil_tmp445"} boogie_si_record_i64(out_$i676);
    goto corral_source_split_2399;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    out_$i675 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1145} {:cexpr "__cil_tmp444"} boogie_si_record_i64(out_$i675);
    goto corral_source_split_2398;

  $bb91:
    assume {:verifier.code 0} true;
    out_$i674 := $zext.i32.i64(out_$i673);
    call {:si_unique_call 1144} {:cexpr "__cil_tmp443"} boogie_si_record_i64(out_$i674);
    goto corral_source_split_2397;

  corral_source_split_2395:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb92_dummy:
    call {:si_unique_call 1} out_$i674, out_$i675, out_$i676, out_$p677, out_$p678, out_$p679, out_$i680, out_$i681, out_$i682, out_$i673, out_$i683 := find_boot_record_loop_$bb90(in_$p0, in_$p669, out_$i674, out_$i675, out_$i676, out_$p677, out_$p678, out_$p679, out_$i680, out_$i681, out_$i682, out_$i673, out_$i683);
    return;

  exit:
    return;
}



procedure find_boot_record_loop_$bb90(in_$p0: ref, in_$p669: ref, in_$i674: i64, in_$i675: i64, in_$i676: i64, in_$p677: ref, in_$p678: ref, in_$p679: ref, in_$i680: i32, in_$i681: i32, in_$i682: i1, in_$i673: i32, in_$i683: i32) returns (out_$i674: i64, out_$i675: i64, out_$i676: i64, out_$p677: ref, out_$p678: ref, out_$p679: ref, out_$i680: i32, out_$i681: i32, out_$i682: i1, out_$i673: i32, out_$i683: i32);
  modifies $M.1;



implementation find_boot_record_loop_$bb7(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p13: ref, in_$p73: ref, in_$i77: i64, in_$i78: i64, in_$p79: ref, in_$i80: i32, in_$i81: i32, in_$i82: i64, in_$p83: ref, in_$i84: i32, in_$i85: i64, in_$i86: i1, in_$i87: i1, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i32, in_$i92: i32, in_$i93: i64, in_$i94: i64, in_$p95: ref, in_$p96: ref, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i32, in_$i102: i32, in_$i103: i1, in_$i105: i64, in_$i106: i1, in_$p107: ref, in_$i108: i32, in_$i109: i1, in_$i110: i64, in_$i111: i64, in_$p112: ref, in_$i113: i32, in_$i114: i32, in_$i115: i32, in_$i116: i64, in_$p117: ref, in_$i118: i32, in_$i119: i1, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i124: i32, in_$i125: i32, in_$i126: i64, in_$i127: i64, in_$p128: ref, in_$p129: ref, in_$i130: i64, in_$i131: i64, in_$p132: ref, in_$i133: i32, in_$i120: i32, in_$i754: i32, in_$i755: i32, in_$i756: i1, in_$i76: i32, in_vslice_dummy_var_48: i32, in_vslice_dummy_var_49: i32, in_vslice_dummy_var_50: i32) returns (out_$i77: i64, out_$i78: i64, out_$p79: ref, out_$i80: i32, out_$i81: i32, out_$i82: i64, out_$p83: ref, out_$i84: i32, out_$i85: i64, out_$i86: i1, out_$i87: i1, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i32, out_$i92: i32, out_$i93: i64, out_$i94: i64, out_$p95: ref, out_$p96: ref, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i32, out_$i102: i32, out_$i103: i1, out_$i105: i64, out_$i106: i1, out_$p107: ref, out_$i108: i32, out_$i109: i1, out_$i110: i64, out_$i111: i64, out_$p112: ref, out_$i113: i32, out_$i114: i32, out_$i115: i32, out_$i116: i64, out_$p117: ref, out_$i118: i32, out_$i119: i1, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i124: i32, out_$i125: i32, out_$i126: i64, out_$i127: i64, out_$p128: ref, out_$p129: ref, out_$i130: i64, out_$i131: i64, out_$p132: ref, out_$i133: i32, out_$i120: i32, out_$i754: i32, out_$i755: i32, out_$i756: i1, out_$i76: i32, out_vslice_dummy_var_48: i32, out_vslice_dummy_var_49: i32, out_vslice_dummy_var_50: i32)
{

  entry:
    out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$p95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i102, out_$i103, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126, out_$i127, out_$p128, out_$p129, out_$i130, out_$i131, out_$p132, out_$i133, out_$i120, out_$i754, out_$i755, out_$i756, out_$i76, out_vslice_dummy_var_48, out_vslice_dummy_var_49, out_vslice_dummy_var_50 := in_$i77, in_$i78, in_$p79, in_$i80, in_$i81, in_$i82, in_$p83, in_$i84, in_$i85, in_$i86, in_$i87, in_$i88, in_$i89, in_$p90, in_$i91, in_$i92, in_$i93, in_$i94, in_$p95, in_$p96, in_$i97, in_$i98, in_$p99, in_$i100, in_$i102, in_$i103, in_$i105, in_$i106, in_$p107, in_$i108, in_$i109, in_$i110, in_$i111, in_$p112, in_$i113, in_$i114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$i121, in_$i122, in_$p123, in_$i124, in_$i125, in_$i126, in_$i127, in_$p128, in_$p129, in_$i130, in_$i131, in_$p132, in_$i133, in_$i120, in_$i754, in_$i755, in_$i756, in_$i76, in_vslice_dummy_var_48, in_vslice_dummy_var_49, in_vslice_dummy_var_50;
    goto $bb7, exit;

  $bb7:
    assume {:verifier.code 0} true;
    goto corral_source_split_1606;

  $bb122:
    assume out_$i756 == 1;
    assume {:verifier.code 0} true;
    out_$i76 := out_$i754;
    goto $bb122_dummy;

  corral_source_split_1645:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb122;

  corral_source_split_1644:
    assume {:verifier.code 0} true;
    out_$i756 := $ugt.i32(out_$i755, out_$i754);
    goto corral_source_split_1645;

  corral_source_split_1643:
    assume {:verifier.code 0} true;
    out_$i755 := $load.i32($M.1, in_$p73);
    call {:si_unique_call 782} {:cexpr "__cil_tmp500"} boogie_si_record_i32(out_$i755);
    goto corral_source_split_1644;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i754 := $add.i32(out_$i76, 1);
    call {:si_unique_call 781} {:cexpr "block"} boogie_si_record_i32(out_$i754);
    goto corral_source_split_1643;

  corral_source_split_1684:
    assume {:verifier.code 0} true;
    goto $bb17;

  corral_source_split_1657:
    assume {:verifier.code 0} true;
    goto $bb17;

  corral_source_split_1650:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb12:
    assume !(out_$i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb14:
    assume !(out_$i103 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  corral_source_split_1641:
    assume {:verifier.code 0} true;
    goto $bb15;

  corral_source_split_1640:
    assume {:verifier.code 0} true;
    call {:si_unique_call 780} out_vslice_dummy_var_49 := printk.ref(.str.81);
    goto corral_source_split_1641;

  $bb13:
    assume out_$i103 == 1;
    goto corral_source_split_1640;

  corral_source_split_1638:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  corral_source_split_1637:
    assume {:verifier.code 0} true;
    out_$i103 := $eq.i32(out_$i102, 0);
    goto corral_source_split_1638;

  corral_source_split_1636:
    assume {:verifier.code 0} true;
    out_$i102 := $sub.i32(5, 1);
    call {:si_unique_call 779} {:cexpr "warncount"} boogie_si_record_i32(out_$i102);
    goto corral_source_split_1637;

  corral_source_split_1635:
    assume {:verifier.code 0} true;
    call {:si_unique_call 778} out_vslice_dummy_var_48 := printk.ref.i32.i32.i32(.str.80, out_$i92, out_$i100, out_$i84);
    goto corral_source_split_1636;

  corral_source_split_1634:
    assume {:verifier.code 0} true;
    out_$i100 := $load.i32($M.1, out_$p99);
    call {:si_unique_call 777} {:cexpr "__cil_tmp83"} boogie_si_record_i32(out_$i100);
    goto corral_source_split_1635;

  corral_source_split_1633:
    assume {:verifier.code 0} true;
    out_$p99 := $i2p.i64.ref(out_$i98);
    goto corral_source_split_1634;

  corral_source_split_1632:
    assume {:verifier.code 0} true;
    out_$i98 := $add.i64(out_$i97, 64);
    call {:si_unique_call 776} {:cexpr "__cil_tmp82"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_1633;

  corral_source_split_1631:
    assume {:verifier.code 0} true;
    out_$i97 := $p2i.ref.i64(out_$p96);
    call {:si_unique_call 775} {:cexpr "__cil_tmp81"} boogie_si_record_i64(out_$i97);
    goto corral_source_split_1632;

  corral_source_split_1630:
    assume {:verifier.code 0} true;
    out_$p96 := $load.ref($M.1, out_$p95);
    goto corral_source_split_1631;

  corral_source_split_1629:
    assume {:verifier.code 0} true;
    out_$p95 := $i2p.i64.ref(out_$i94);
    goto corral_source_split_1630;

  corral_source_split_1628:
    assume {:verifier.code 0} true;
    out_$i94 := $add.i64(out_$i93, 24);
    call {:si_unique_call 774} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i94);
    goto corral_source_split_1629;

  corral_source_split_1627:
    assume {:verifier.code 0} true;
    out_$i93 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 773} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i93);
    goto corral_source_split_1628;

  corral_source_split_1626:
    assume {:verifier.code 0} true;
    out_$i92 := $mul.i32(out_$i91, out_$i76);
    call {:si_unique_call 772} {:cexpr "__cil_tmp76"} boogie_si_record_i32(out_$i92);
    goto corral_source_split_1627;

  corral_source_split_1625:
    assume {:verifier.code 0} true;
    out_$i91 := $load.i32($M.1, out_$p90);
    call {:si_unique_call 771} {:cexpr "__cil_tmp75"} boogie_si_record_i32(out_$i91);
    goto corral_source_split_1626;

  corral_source_split_1624:
    assume {:verifier.code 0} true;
    out_$p90 := $i2p.i64.ref(out_$i89);
    goto corral_source_split_1625;

  corral_source_split_1623:
    assume {:verifier.code 0} true;
    out_$i89 := $add.i64(out_$i88, 356);
    call {:si_unique_call 770} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i89);
    goto corral_source_split_1624;

  corral_source_split_1622:
    assume {:verifier.code 0} true;
    out_$i88 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 769} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i88);
    goto corral_source_split_1623;

  $bb11:
    assume out_$i87 == 1;
    goto corral_source_split_1622;

  corral_source_split_1620:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11, $bb12;

  corral_source_split_1619:
    assume {:verifier.code 0} true;
    out_$i87 := $ne.i32(5, 0);
    goto corral_source_split_1620;

  $bb9:
    assume out_$i86 == 1;
    goto corral_source_split_1619;

  corral_source_split_1617:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  corral_source_split_1616:
    assume {:verifier.code 0} true;
    out_$i86 := $ne.i64(out_$i85, 512);
    goto corral_source_split_1617;

  corral_source_split_1615:
    assume {:verifier.code 0} true;
    out_$i85 := $load.i64($M.2, in_$p3);
    call {:si_unique_call 768} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i85);
    goto corral_source_split_1616;

  corral_source_split_1614:
    assume {:verifier.code 0} true;
    call {:si_unique_call 766} out_$i84 := mtd_read(in_$p13, out_$i82, 512, in_$p3, out_$p83);
    call {:si_unique_call 767} {:cexpr "ret"} boogie_si_record_i32(out_$i84);
    goto corral_source_split_1615;

  corral_source_split_1613:
    assume {:verifier.code 0} true;
    out_$p83 := $bitcast.ref.ref(in_$p2);
    goto corral_source_split_1614;

  corral_source_split_1612:
    assume {:verifier.code 0} true;
    out_$i82 := $zext.i32.i64(out_$i81);
    call {:si_unique_call 765} {:cexpr "__cil_tmp69"} boogie_si_record_i64(out_$i82);
    goto corral_source_split_1613;

  corral_source_split_1611:
    assume {:verifier.code 0} true;
    out_$i81 := $mul.i32(out_$i80, out_$i76);
    call {:si_unique_call 764} {:cexpr "__cil_tmp68"} boogie_si_record_i32(out_$i81);
    goto corral_source_split_1612;

  corral_source_split_1610:
    assume {:verifier.code 0} true;
    out_$i80 := $load.i32($M.1, out_$p79);
    call {:si_unique_call 763} {:cexpr "__cil_tmp67"} boogie_si_record_i32(out_$i80);
    goto corral_source_split_1611;

  corral_source_split_1609:
    assume {:verifier.code 0} true;
    out_$p79 := $i2p.i64.ref(out_$i78);
    goto corral_source_split_1610;

  corral_source_split_1608:
    assume {:verifier.code 0} true;
    out_$i78 := $add.i64(out_$i77, 356);
    call {:si_unique_call 762} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i78);
    goto corral_source_split_1609;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i77 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 761} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i77);
    goto corral_source_split_1608;

  corral_source_split_1606:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb19:
    assume out_$i106 == 1;
    goto corral_source_split_1650;

  corral_source_split_1648:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  corral_source_split_1647:
    assume {:verifier.code 0} true;
    out_$i106 := $ule.i64(out_$i105, 5);
    goto corral_source_split_1648;

  $bb18:
    assume {:verifier.code 0} true;
    out_$i105 := $load.i64($M.2, in_$p3);
    call {:si_unique_call 783} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i105);
    goto corral_source_split_1647;

  $bb10:
    assume !(out_$i86 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb21:
    assume out_$i109 == 1;
    goto corral_source_split_1657;

  corral_source_split_1655:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_1654:
    assume {:verifier.code 0} true;
    out_$i109 := $ne.i32(out_$i108, 0);
    goto corral_source_split_1655;

  corral_source_split_1653:
    assume {:verifier.code 0} true;
    call {:si_unique_call 784} out_$i108 := memcmp(out_$p107, .str.82, 6);
    call {:si_unique_call 785} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i108);
    goto corral_source_split_1654;

  corral_source_split_1652:
    assume {:verifier.code 0} true;
    out_$p107 := $bitcast.ref.ref(in_$p2);
    goto corral_source_split_1653;

  $bb20:
    assume !(out_$i106 == 1);
    goto corral_source_split_1652;

  corral_source_split_1683:
    assume {:verifier.code 0} true;
    call {:si_unique_call 803} out_vslice_dummy_var_50 := printk.ref.i32.i32.i32(.str.83, out_$i125, out_$i133, out_$i118);
    goto corral_source_split_1684;

  corral_source_split_1682:
    assume {:verifier.code 0} true;
    out_$i133 := $load.i32($M.1, out_$p132);
    call {:si_unique_call 802} {:cexpr "__cil_tmp105"} boogie_si_record_i32(out_$i133);
    goto corral_source_split_1683;

  corral_source_split_1681:
    assume {:verifier.code 0} true;
    out_$p132 := $i2p.i64.ref(out_$i131);
    goto corral_source_split_1682;

  corral_source_split_1680:
    assume {:verifier.code 0} true;
    out_$i131 := $add.i64(out_$i130, 64);
    call {:si_unique_call 801} {:cexpr "__cil_tmp104"} boogie_si_record_i64(out_$i131);
    goto corral_source_split_1681;

  corral_source_split_1679:
    assume {:verifier.code 0} true;
    out_$i130 := $p2i.ref.i64(out_$p129);
    call {:si_unique_call 800} {:cexpr "__cil_tmp103"} boogie_si_record_i64(out_$i130);
    goto corral_source_split_1680;

  corral_source_split_1678:
    assume {:verifier.code 0} true;
    out_$p129 := $load.ref($M.1, out_$p128);
    goto corral_source_split_1679;

  corral_source_split_1677:
    assume {:verifier.code 0} true;
    out_$p128 := $i2p.i64.ref(out_$i127);
    goto corral_source_split_1678;

  corral_source_split_1676:
    assume {:verifier.code 0} true;
    out_$i127 := $add.i64(out_$i126, 24);
    call {:si_unique_call 799} {:cexpr "__cil_tmp101"} boogie_si_record_i64(out_$i127);
    goto corral_source_split_1677;

  corral_source_split_1675:
    assume {:verifier.code 0} true;
    out_$i126 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 798} {:cexpr "__cil_tmp100"} boogie_si_record_i64(out_$i126);
    goto corral_source_split_1676;

  corral_source_split_1674:
    assume {:verifier.code 0} true;
    out_$i125 := $mul.i32(out_$i124, out_$i76);
    call {:si_unique_call 797} {:cexpr "__cil_tmp98"} boogie_si_record_i32(out_$i125);
    goto corral_source_split_1675;

  corral_source_split_1673:
    assume {:verifier.code 0} true;
    out_$i124 := $load.i32($M.1, out_$p123);
    call {:si_unique_call 796} {:cexpr "__cil_tmp97"} boogie_si_record_i32(out_$i124);
    goto corral_source_split_1674;

  corral_source_split_1672:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_1673;

  corral_source_split_1671:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, 356);
    call {:si_unique_call 795} {:cexpr "__cil_tmp96"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_1672;

  corral_source_split_1670:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 794} {:cexpr "__cil_tmp95"} boogie_si_record_i64(out_$i121);
    goto corral_source_split_1671;

  $bb25:
    assume out_$i119 == 1;
    goto corral_source_split_1670;

  corral_source_split_1668:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i76;
    assume true;
    goto $bb25;

  corral_source_split_1667:
    assume {:verifier.code 0} true;
    out_$i119 := $slt.i32(out_$i118, 0);
    goto corral_source_split_1668;

  corral_source_split_1666:
    assume {:verifier.code 0} true;
    call {:si_unique_call 792} out_$i118 := inftl_read_oob(in_$p13, out_$i116, 8, in_$p3, out_$p117);
    call {:si_unique_call 793} {:cexpr "ret"} boogie_si_record_i32(out_$i118);
    goto corral_source_split_1667;

  corral_source_split_1665:
    assume {:verifier.code 0} true;
    out_$p117 := $bitcast.ref.ref(in_$p1);
    goto corral_source_split_1666;

  corral_source_split_1664:
    assume {:verifier.code 0} true;
    out_$i116 := $zext.i32.i64(out_$i115);
    call {:si_unique_call 791} {:cexpr "__cil_tmp93"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_1665;

  corral_source_split_1663:
    assume {:verifier.code 0} true;
    out_$i115 := $add.i32(out_$i114, 520);
    call {:si_unique_call 790} {:cexpr "__cil_tmp92"} boogie_si_record_i32(out_$i115);
    goto corral_source_split_1664;

  corral_source_split_1662:
    assume {:verifier.code 0} true;
    out_$i114 := $mul.i32(out_$i113, out_$i76);
    call {:si_unique_call 789} {:cexpr "__cil_tmp91"} boogie_si_record_i32(out_$i114);
    goto corral_source_split_1663;

  corral_source_split_1661:
    assume {:verifier.code 0} true;
    out_$i113 := $load.i32($M.1, out_$p112);
    call {:si_unique_call 788} {:cexpr "__cil_tmp90"} boogie_si_record_i32(out_$i113);
    goto corral_source_split_1662;

  corral_source_split_1660:
    assume {:verifier.code 0} true;
    out_$p112 := $i2p.i64.ref(out_$i111);
    goto corral_source_split_1661;

  corral_source_split_1659:
    assume {:verifier.code 0} true;
    out_$i111 := $add.i64(out_$i110, 356);
    call {:si_unique_call 787} {:cexpr "__cil_tmp89"} boogie_si_record_i64(out_$i111);
    goto corral_source_split_1660;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i110 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 786} {:cexpr "__cil_tmp88"} boogie_si_record_i64(out_$i110);
    goto corral_source_split_1659;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i109 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb122_dummy:
    call {:si_unique_call 1} out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$p95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i102, out_$i103, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126, out_$i127, out_$p128, out_$p129, out_$i130, out_$i131, out_$p132, out_$i133, out_$i120, out_$i754, out_$i755, out_$i756, out_$i76, out_vslice_dummy_var_48, out_vslice_dummy_var_49, out_vslice_dummy_var_50 := find_boot_record_loop_$bb7(in_$p0, in_$p1, in_$p2, in_$p3, in_$p13, in_$p73, out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$p95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i102, out_$i103, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126, out_$i127, out_$p128, out_$p129, out_$i130, out_$i131, out_$p132, out_$i133, out_$i120, out_$i754, out_$i755, out_$i756, out_$i76, out_vslice_dummy_var_48, out_vslice_dummy_var_49, out_vslice_dummy_var_50);
    return;

  exit:
    return;
}



procedure find_boot_record_loop_$bb7(in_$p0: ref, in_$p1: ref, in_$p2: ref, in_$p3: ref, in_$p13: ref, in_$p73: ref, in_$i77: i64, in_$i78: i64, in_$p79: ref, in_$i80: i32, in_$i81: i32, in_$i82: i64, in_$p83: ref, in_$i84: i32, in_$i85: i64, in_$i86: i1, in_$i87: i1, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i32, in_$i92: i32, in_$i93: i64, in_$i94: i64, in_$p95: ref, in_$p96: ref, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i32, in_$i102: i32, in_$i103: i1, in_$i105: i64, in_$i106: i1, in_$p107: ref, in_$i108: i32, in_$i109: i1, in_$i110: i64, in_$i111: i64, in_$p112: ref, in_$i113: i32, in_$i114: i32, in_$i115: i32, in_$i116: i64, in_$p117: ref, in_$i118: i32, in_$i119: i1, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i124: i32, in_$i125: i32, in_$i126: i64, in_$i127: i64, in_$p128: ref, in_$p129: ref, in_$i130: i64, in_$i131: i64, in_$p132: ref, in_$i133: i32, in_$i120: i32, in_$i754: i32, in_$i755: i32, in_$i756: i1, in_$i76: i32, in_vslice_dummy_var_48: i32, in_vslice_dummy_var_49: i32, in_vslice_dummy_var_50: i32) returns (out_$i77: i64, out_$i78: i64, out_$p79: ref, out_$i80: i32, out_$i81: i32, out_$i82: i64, out_$p83: ref, out_$i84: i32, out_$i85: i64, out_$i86: i1, out_$i87: i1, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i32, out_$i92: i32, out_$i93: i64, out_$i94: i64, out_$p95: ref, out_$p96: ref, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i32, out_$i102: i32, out_$i103: i1, out_$i105: i64, out_$i106: i1, out_$p107: ref, out_$i108: i32, out_$i109: i1, out_$i110: i64, out_$i111: i64, out_$p112: ref, out_$i113: i32, out_$i114: i32, out_$i115: i32, out_$i116: i64, out_$p117: ref, out_$i118: i32, out_$i119: i1, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i124: i32, out_$i125: i32, out_$i126: i64, out_$i127: i64, out_$p128: ref, out_$p129: ref, out_$i130: i64, out_$i131: i64, out_$p132: ref, out_$i133: i32, out_$i120: i32, out_$i754: i32, out_$i755: i32, out_$i756: i1, out_$i76: i32, out_vslice_dummy_var_48: i32, out_vslice_dummy_var_49: i32, out_vslice_dummy_var_50: i32);
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation format_chain_loop_$bb1(in_$p0: ref, in_$i3: i32, in_$i4: i64, in_$i5: i64, in_$i6: i64, in_$p7: ref, in_$p8: ref, in_$p9: ref, in_$i10: i16, in_$i11: i32, in_$i13: i32, in_$i14: i1, in_$i15: i64, in_$i16: i64, in_$i17: i64, in_$p18: ref, in_$p19: ref, in_$p20: ref, in_$i21: i64, in_$i22: i64, in_$i23: i64, in_$p24: ref, in_$p25: ref, in_$p26: ref, in_$i27: i1, in_$i28: i64, in_$i29: i64, in_$p30: ref, in_$i31: i16, in_$i32: i32, in_$i33: i1, in_vslice_dummy_var_75: i32) returns (out_$i3: i32, out_$i4: i64, out_$i5: i64, out_$i6: i64, out_$p7: ref, out_$p8: ref, out_$p9: ref, out_$i10: i16, out_$i11: i32, out_$i13: i32, out_$i14: i1, out_$i15: i64, out_$i16: i64, out_$i17: i64, out_$p18: ref, out_$p19: ref, out_$p20: ref, out_$i21: i64, out_$i22: i64, out_$i23: i64, out_$p24: ref, out_$p25: ref, out_$p26: ref, out_$i27: i1, out_$i28: i64, out_$i29: i64, out_$p30: ref, out_$i31: i16, out_$i32: i32, out_$i33: i1, out_vslice_dummy_var_75: i32)
{

  entry:
    out_$i3, out_$i4, out_$i5, out_$i6, out_$p7, out_$p8, out_$p9, out_$i10, out_$i11, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$p18, out_$p19, out_$p20, out_$i21, out_$i22, out_$i23, out_$p24, out_$p25, out_$p26, out_$i27, out_$i28, out_$i29, out_$p30, out_$i31, out_$i32, out_$i33, out_vslice_dummy_var_75 := in_$i3, in_$i4, in_$i5, in_$i6, in_$p7, in_$p8, in_$p9, in_$i10, in_$i11, in_$i13, in_$i14, in_$i15, in_$i16, in_$i17, in_$p18, in_$p19, in_$p20, in_$i21, in_$i22, in_$i23, in_$p24, in_$p25, in_$p26, in_$i27, in_$i28, in_$i29, in_$p30, in_$i31, in_$i32, in_$i33, in_vslice_dummy_var_75;
    goto $bb1, exit;

  $bb1:
    assume {:verifier.code 0} true;
    goto corral_source_split_2959;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i3 := out_$i11;
    goto $bb11_dummy;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb9:
    assume !(out_$i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  corral_source_split_2999:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9;

  corral_source_split_2998:
    assume {:verifier.code 0} true;
    out_$i33 := $ule.i32(out_$i32, out_$i11);
    goto corral_source_split_2999;

  corral_source_split_2997:
    assume {:verifier.code 0} true;
    out_$i32 := $zext.i16.i32(out_$i31);
    call {:si_unique_call 1223} {:cexpr "__cil_tmp26"} boogie_si_record_i32(out_$i32);
    goto corral_source_split_2998;

  corral_source_split_2996:
    assume {:verifier.code 0} true;
    out_$i31 := $load.i16($M.1, out_$p30);
    call {:si_unique_call 1222} {:cexpr "__cil_tmp25"} boogie_si_record_i16(out_$i31);
    goto corral_source_split_2997;

  corral_source_split_2995:
    assume {:verifier.code 0} true;
    out_$p30 := $i2p.i64.ref(out_$i29);
    goto corral_source_split_2996;

  corral_source_split_2994:
    assume {:verifier.code 0} true;
    out_$i29 := $add.i64(out_$i28, 520);
    call {:si_unique_call 1221} {:cexpr "__cil_tmp24"} boogie_si_record_i64(out_$i29);
    goto corral_source_split_2995;

  corral_source_split_2993:
    assume {:verifier.code 0} true;
    out_$i28 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1220} {:cexpr "__cil_tmp23"} boogie_si_record_i64(out_$i28);
    goto corral_source_split_2994;

  $bb6:
    assume !(out_$i27 == 1);
    goto corral_source_split_2993;

  corral_source_split_2989:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb6;

  $bb4:
    assume {:verifier.code 0} true;
    out_$i27 := $eq.i32(out_$i11, 65535);
    goto corral_source_split_2989;

  corral_source_split_2987:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p26, $sub.i16(0, 2));
    assume {:verifier.code 0} true;
    goto $bb4;

  corral_source_split_2979:
    assume {:verifier.code 0} true;
    goto $bb4;

  corral_source_split_2978:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p20, $sub.i16(0, 4));
    goto corral_source_split_2979;

  corral_source_split_2977:
    assume {:verifier.code 0} true;
    out_$p20 := $add.ref(out_$p19, $mul.ref(out_$i15, 2));
    goto corral_source_split_2978;

  corral_source_split_2976:
    assume {:verifier.code 0} true;
    out_$p19 := $load.ref($M.1, out_$p18);
    goto corral_source_split_2977;

  corral_source_split_2975:
    assume {:verifier.code 0} true;
    out_$p18 := $i2p.i64.ref(out_$i17);
    goto corral_source_split_2976;

  corral_source_split_2974:
    assume {:verifier.code 0} true;
    out_$i17 := $add.i64(out_$i16, 544);
    call {:si_unique_call 1216} {:cexpr "__cil_tmp15"} boogie_si_record_i64(out_$i17);
    goto corral_source_split_2975;

  corral_source_split_2973:
    assume {:verifier.code 0} true;
    out_$i16 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1215} {:cexpr "__cil_tmp14"} boogie_si_record_i64(out_$i16);
    goto corral_source_split_2974;

  corral_source_split_2972:
    assume {:verifier.code 0} true;
    out_$i15 := $zext.i32.i64(out_$i3);
    call {:si_unique_call 1214} {:cexpr "__cil_tmp13"} boogie_si_record_i64(out_$i15);
    goto corral_source_split_2973;

  $bb2:
    assume out_$i14 == 1;
    goto corral_source_split_2972;

  corral_source_split_2970:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb2, $bb3;

  corral_source_split_2969:
    assume {:verifier.code 0} true;
    out_$i14 := $slt.i32(out_$i13, 0);
    goto corral_source_split_2970;

  corral_source_split_2968:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1212} out_$i13 := INFTL_formatblock(in_$p0, out_$i3);
    call {:si_unique_call 1213} {:cexpr "tmp"} boogie_si_record_i32(out_$i13);
    goto corral_source_split_2969;

  corral_source_split_2967:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1211} out_vslice_dummy_var_75 := printk.ref.i32(.str.99, out_$i3);
    goto corral_source_split_2968;

  corral_source_split_2966:
    assume {:verifier.code 0} true;
    out_$i11 := $zext.i16.i32(out_$i10);
    call {:si_unique_call 1210} {:cexpr "block1"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_2967;

  corral_source_split_2965:
    assume {:verifier.code 0} true;
    out_$i10 := $load.i16($M.1, out_$p9);
    call {:si_unique_call 1209} {:cexpr "__cil_tmp11"} boogie_si_record_i16(out_$i10);
    goto corral_source_split_2966;

  corral_source_split_2964:
    assume {:verifier.code 0} true;
    out_$p9 := $add.ref(out_$p8, $mul.ref(out_$i4, 2));
    goto corral_source_split_2965;

  corral_source_split_2963:
    assume {:verifier.code 0} true;
    out_$p8 := $load.ref($M.1, out_$p7);
    goto corral_source_split_2964;

  corral_source_split_2962:
    assume {:verifier.code 0} true;
    out_$p7 := $i2p.i64.ref(out_$i6);
    goto corral_source_split_2963;

  corral_source_split_2961:
    assume {:verifier.code 0} true;
    out_$i6 := $add.i64(out_$i5, 544);
    call {:si_unique_call 1208} {:cexpr "__cil_tmp8"} boogie_si_record_i64(out_$i6);
    goto corral_source_split_2962;

  corral_source_split_2960:
    assume {:verifier.code 0} true;
    out_$i5 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1207} {:cexpr "__cil_tmp7"} boogie_si_record_i64(out_$i5);
    goto corral_source_split_2961;

  corral_source_split_2959:
    assume {:verifier.code 0} true;
    out_$i4 := $zext.i32.i64(out_$i3);
    call {:si_unique_call 1206} {:cexpr "__cil_tmp6"} boogie_si_record_i64(out_$i4);
    goto corral_source_split_2960;

  corral_source_split_2986:
    assume {:verifier.code 0} true;
    out_$p26 := $add.ref(out_$p25, $mul.ref(out_$i21, 2));
    goto corral_source_split_2987;

  corral_source_split_2985:
    assume {:verifier.code 0} true;
    out_$p25 := $load.ref($M.1, out_$p24);
    goto corral_source_split_2986;

  corral_source_split_2984:
    assume {:verifier.code 0} true;
    out_$p24 := $i2p.i64.ref(out_$i23);
    goto corral_source_split_2985;

  corral_source_split_2983:
    assume {:verifier.code 0} true;
    out_$i23 := $add.i64(out_$i22, 544);
    call {:si_unique_call 1219} {:cexpr "__cil_tmp20"} boogie_si_record_i64(out_$i23);
    goto corral_source_split_2984;

  corral_source_split_2982:
    assume {:verifier.code 0} true;
    out_$i22 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1218} {:cexpr "__cil_tmp19"} boogie_si_record_i64(out_$i22);
    goto corral_source_split_2983;

  corral_source_split_2981:
    assume {:verifier.code 0} true;
    out_$i21 := $zext.i32.i64(out_$i3);
    call {:si_unique_call 1217} {:cexpr "__cil_tmp18"} boogie_si_record_i64(out_$i21);
    goto corral_source_split_2982;

  $bb3:
    assume !(out_$i14 == 1);
    goto corral_source_split_2981;

  $bb11_dummy:
    call {:si_unique_call 1} out_$i3, out_$i4, out_$i5, out_$i6, out_$p7, out_$p8, out_$p9, out_$i10, out_$i11, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$p18, out_$p19, out_$p20, out_$i21, out_$i22, out_$i23, out_$p24, out_$p25, out_$p26, out_$i27, out_$i28, out_$i29, out_$p30, out_$i31, out_$i32, out_$i33, out_vslice_dummy_var_75 := format_chain_loop_$bb1(in_$p0, out_$i3, out_$i4, out_$i5, out_$i6, out_$p7, out_$p8, out_$p9, out_$i10, out_$i11, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$p18, out_$p19, out_$p20, out_$i21, out_$i22, out_$i23, out_$p24, out_$p25, out_$p26, out_$i27, out_$i28, out_$i29, out_$p30, out_$i31, out_$i32, out_$i33, out_vslice_dummy_var_75);
    return;

  exit:
    return;
}



procedure format_chain_loop_$bb1(in_$p0: ref, in_$i3: i32, in_$i4: i64, in_$i5: i64, in_$i6: i64, in_$p7: ref, in_$p8: ref, in_$p9: ref, in_$i10: i16, in_$i11: i32, in_$i13: i32, in_$i14: i1, in_$i15: i64, in_$i16: i64, in_$i17: i64, in_$p18: ref, in_$p19: ref, in_$p20: ref, in_$i21: i64, in_$i22: i64, in_$i23: i64, in_$p24: ref, in_$p25: ref, in_$p26: ref, in_$i27: i1, in_$i28: i64, in_$i29: i64, in_$p30: ref, in_$i31: i16, in_$i32: i32, in_$i33: i1, in_vslice_dummy_var_75: i32) returns (out_$i3: i32, out_$i4: i64, out_$i5: i64, out_$i6: i64, out_$p7: ref, out_$p8: ref, out_$p9: ref, out_$i10: i16, out_$i11: i32, out_$i13: i32, out_$i14: i1, out_$i15: i64, out_$i16: i64, out_$i17: i64, out_$p18: ref, out_$p19: ref, out_$p20: ref, out_$i21: i64, out_$i22: i64, out_$i23: i64, out_$p24: ref, out_$p25: ref, out_$p26: ref, out_$i27: i1, out_$i28: i64, out_$i29: i64, out_$p30: ref, out_$i31: i16, out_$i32: i32, out_$i33: i1, out_vslice_dummy_var_75: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_dumptables_loop_$bb30(in_$p0: ref, in_$p7: ref, in_$p8: ref, in_$p207: ref, in_$i209: i32, in_$i210: i1, in_$p211: ref, in_$i212: i64, in_$i213: i64, in_$p214: ref, in_$i215: i64, in_$i216: i64, in_$p217: ref, in_$i218: i64, in_$i219: i64, in_$p220: ref, in_$i221: i64, in_$i222: i64, in_$p223: ref, in_$i224: i64, in_$i225: i64, in_$p226: ref, in_$i227: i64, in_$i228: i64, in_$p229: ref, in_$i230: i8, in_$i231: i64, in_$i232: i64, in_$i233: i32, in_$i234: i64, in_$i235: i1, in_$p237: ref, in_$i238: i64, in_$i239: i64, in_$p240: ref, in_$i241: i64, in_$i242: i64, in_$p243: ref, in_$i244: i64, in_$i245: i64, in_$p246: ref, in_$i247: i64, in_$i248: i64, in_$p249: ref, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i64, in_$i254: i64, in_$p255: ref, in_$i256: i8, in_$i257: i64, in_$i258: i64, in_$i259: i32, in_$i260: i64, in_$i261: i1, in_$i262: i64, in_$i263: i64, in_$i264: i64, in_$p265: ref, in_$p266: ref, in_$p267: ref, in_$i268: i16, in_$i269: i32, in_$i271: i32, in_$i272: i16, in_$i273: i32, in_$i274: i1, in_$i208: i32, in_vslice_dummy_var_82: i32, in_vslice_dummy_var_83: i32) returns (out_$i209: i32, out_$i210: i1, out_$p211: ref, out_$i212: i64, out_$i213: i64, out_$p214: ref, out_$i215: i64, out_$i216: i64, out_$p217: ref, out_$i218: i64, out_$i219: i64, out_$p220: ref, out_$i221: i64, out_$i222: i64, out_$p223: ref, out_$i224: i64, out_$i225: i64, out_$p226: ref, out_$i227: i64, out_$i228: i64, out_$p229: ref, out_$i230: i8, out_$i231: i64, out_$i232: i64, out_$i233: i32, out_$i234: i64, out_$i235: i1, out_$p237: ref, out_$i238: i64, out_$i239: i64, out_$p240: ref, out_$i241: i64, out_$i242: i64, out_$p243: ref, out_$i244: i64, out_$i245: i64, out_$p246: ref, out_$i247: i64, out_$i248: i64, out_$p249: ref, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i64, out_$i254: i64, out_$p255: ref, out_$i256: i8, out_$i257: i64, out_$i258: i64, out_$i259: i32, out_$i260: i64, out_$i261: i1, out_$i262: i64, out_$i263: i64, out_$i264: i64, out_$p265: ref, out_$p266: ref, out_$p267: ref, out_$i268: i16, out_$i269: i32, out_$i271: i32, out_$i272: i16, out_$i273: i32, out_$i274: i1, out_$i208: i32, out_vslice_dummy_var_82: i32, out_vslice_dummy_var_83: i32)
{

  entry:
    out_$i209, out_$i210, out_$p211, out_$i212, out_$i213, out_$p214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$p220, out_$i221, out_$i222, out_$p223, out_$i224, out_$i225, out_$p226, out_$i227, out_$i228, out_$p229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$p237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$p265, out_$p266, out_$p267, out_$i268, out_$i269, out_$i271, out_$i272, out_$i273, out_$i274, out_$i208, out_vslice_dummy_var_82, out_vslice_dummy_var_83 := in_$i209, in_$i210, in_$p211, in_$i212, in_$i213, in_$p214, in_$i215, in_$i216, in_$p217, in_$i218, in_$i219, in_$p220, in_$i221, in_$i222, in_$p223, in_$i224, in_$i225, in_$p226, in_$i227, in_$i228, in_$p229, in_$i230, in_$i231, in_$i232, in_$i233, in_$i234, in_$i235, in_$p237, in_$i238, in_$i239, in_$p240, in_$i241, in_$i242, in_$p243, in_$i244, in_$i245, in_$p246, in_$i247, in_$i248, in_$p249, in_$i250, in_$i251, in_$p252, in_$i253, in_$i254, in_$p255, in_$i256, in_$i257, in_$i258, in_$i259, in_$i260, in_$i261, in_$i262, in_$i263, in_$i264, in_$p265, in_$p266, in_$p267, in_$i268, in_$i269, in_$i271, in_$i272, in_$i273, in_$i274, in_$i208, in_vslice_dummy_var_82, in_vslice_dummy_var_83;
    goto $bb30, exit;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_3264;

  $bb41:
    assume out_$i274 == 1;
    assume {:verifier.code 0} true;
    out_$i208 := out_$i271;
    goto $bb41_dummy;

  corral_source_split_3351:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41;

  corral_source_split_3350:
    assume {:verifier.code 0} true;
    out_$i274 := $sge.i32(out_$i273, out_$i271);
    goto corral_source_split_3351;

  corral_source_split_3349:
    assume {:verifier.code 0} true;
    out_$i273 := $zext.i16.i32(out_$i272);
    call {:si_unique_call 1366} {:cexpr "__cil_tmp144"} boogie_si_record_i32(out_$i273);
    goto corral_source_split_3350;

  corral_source_split_3348:
    assume {:verifier.code 0} true;
    out_$i272 := $load.i16($M.1, in_$p207);
    call {:si_unique_call 1365} {:cexpr "__cil_tmp143"} boogie_si_record_i16(out_$i272);
    goto corral_source_split_3349;

  $bb40:
    assume {:verifier.code 0} true;
    out_$i271 := $add.i32(out_$i208, 1);
    call {:si_unique_call 1364} {:cexpr "i"} boogie_si_record_i32(out_$i271);
    goto corral_source_split_3348;

  $bb39:
    assume !(out_$i261 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  corral_source_split_3346:
    assume {:verifier.code 0} true;
    goto $bb40;

  corral_source_split_3345:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1363} out_vslice_dummy_var_83 := __dynamic_pr_debug.ref.ref.i32(in_$p8, .str.9, out_$i269);
    goto corral_source_split_3346;

  corral_source_split_3344:
    assume {:verifier.code 0} true;
    out_$i269 := $zext.i16.i32(out_$i268);
    call {:si_unique_call 1362} {:cexpr "__cil_tmp140"} boogie_si_record_i32(out_$i269);
    goto corral_source_split_3345;

  corral_source_split_3343:
    assume {:verifier.code 0} true;
    out_$i268 := $load.i16($M.1, out_$p267);
    call {:si_unique_call 1361} {:cexpr "__cil_tmp139"} boogie_si_record_i16(out_$i268);
    goto corral_source_split_3344;

  corral_source_split_3342:
    assume {:verifier.code 0} true;
    out_$p267 := $add.ref(out_$p266, $mul.ref(out_$i262, 2));
    goto corral_source_split_3343;

  corral_source_split_3341:
    assume {:verifier.code 0} true;
    out_$p266 := $load.ref($M.1, out_$p265);
    goto corral_source_split_3342;

  corral_source_split_3340:
    assume {:verifier.code 0} true;
    out_$p265 := $i2p.i64.ref(out_$i264);
    goto corral_source_split_3341;

  corral_source_split_3339:
    assume {:verifier.code 0} true;
    out_$i264 := $add.i64(out_$i263, 544);
    call {:si_unique_call 1360} {:cexpr "__cil_tmp136"} boogie_si_record_i64(out_$i264);
    goto corral_source_split_3340;

  corral_source_split_3338:
    assume {:verifier.code 0} true;
    out_$i263 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1359} {:cexpr "__cil_tmp135"} boogie_si_record_i64(out_$i263);
    goto corral_source_split_3339;

  corral_source_split_3337:
    assume {:verifier.code 0} true;
    out_$i262 := $sext.i32.i64(out_$i208);
    call {:si_unique_call 1358} {:cexpr "__cil_tmp134"} boogie_si_record_i64(out_$i262);
    goto corral_source_split_3338;

  $bb38:
    assume out_$i261 == 1;
    goto corral_source_split_3337;

  corral_source_split_3335:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  corral_source_split_3334:
    assume {:verifier.code 0} true;
    out_$i261 := $ne.i64(out_$i260, 0);
    goto corral_source_split_3335;

  corral_source_split_3333:
    assume {:verifier.code 0} true;
    out_$i260 := $sext.i32.i64(out_$i259);
    call {:si_unique_call 1357} {:cexpr "tmp___6"} boogie_si_record_i64(out_$i260);
    goto corral_source_split_3334;

  corral_source_split_3332:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1356} out_$i259 := __builtinx_expect.i64.i64(out_$i258, 0);
    goto corral_source_split_3333;

  corral_source_split_3331:
    assume {:verifier.code 0} true;
    out_$i258 := $and.i64(out_$i257, 1);
    call {:si_unique_call 1355} {:cexpr "__cil_tmp133"} boogie_si_record_i64(out_$i258);
    goto corral_source_split_3332;

  corral_source_split_3330:
    assume {:verifier.code 0} true;
    out_$i257 := $zext.i8.i64(out_$i256);
    call {:si_unique_call 1354} {:cexpr "__cil_tmp132"} boogie_si_record_i64(out_$i257);
    goto corral_source_split_3331;

  corral_source_split_3329:
    assume {:verifier.code 0} true;
    out_$i256 := $load.i8($M.1, out_$p255);
    call {:si_unique_call 1353} {:cexpr "__cil_tmp131"} boogie_si_record_i8(out_$i256);
    goto corral_source_split_3330;

  corral_source_split_3328:
    assume {:verifier.code 0} true;
    out_$p255 := $i2p.i64.ref(out_$i254);
    goto corral_source_split_3329;

  corral_source_split_3327:
    assume {:verifier.code 0} true;
    out_$i254 := $add.i64(out_$i253, 35);
    call {:si_unique_call 1352} {:cexpr "__cil_tmp130"} boogie_si_record_i64(out_$i254);
    goto corral_source_split_3328;

  corral_source_split_3326:
    assume {:verifier.code 0} true;
    out_$i253 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3327;

  corral_source_split_3325:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p252, 0);
    goto corral_source_split_3326;

  corral_source_split_3324:
    assume {:verifier.code 0} true;
    out_$p252 := $i2p.i64.ref(out_$i251);
    goto corral_source_split_3325;

  corral_source_split_3323:
    assume {:verifier.code 0} true;
    out_$i251 := $add.i64(out_$i250, 35);
    call {:si_unique_call 1351} {:cexpr "__cil_tmp129"} boogie_si_record_i64(out_$i251);
    goto corral_source_split_3324;

  corral_source_split_3322:
    assume {:verifier.code 0} true;
    out_$i250 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3323;

  corral_source_split_3321:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p249, 502);
    goto corral_source_split_3322;

  corral_source_split_3320:
    assume {:verifier.code 0} true;
    out_$p249 := $i2p.i64.ref(out_$i248);
    goto corral_source_split_3321;

  corral_source_split_3319:
    assume {:verifier.code 0} true;
    out_$i248 := $add.i64(out_$i247, 32);
    call {:si_unique_call 1350} {:cexpr "__cil_tmp128"} boogie_si_record_i64(out_$i248);
    goto corral_source_split_3320;

  corral_source_split_3318:
    assume {:verifier.code 0} true;
    out_$i247 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3319;

  corral_source_split_3317:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p246, .str.9);
    goto corral_source_split_3318;

  corral_source_split_3316:
    assume {:verifier.code 0} true;
    out_$p246 := $i2p.i64.ref(out_$i245);
    goto corral_source_split_3317;

  corral_source_split_3315:
    assume {:verifier.code 0} true;
    out_$i245 := $add.i64(out_$i244, 24);
    call {:si_unique_call 1349} {:cexpr "__cil_tmp127"} boogie_si_record_i64(out_$i245);
    goto corral_source_split_3316;

  corral_source_split_3314:
    assume {:verifier.code 0} true;
    out_$i244 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3315;

  corral_source_split_3313:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p243, .str.2);
    goto corral_source_split_3314;

  corral_source_split_3312:
    assume {:verifier.code 0} true;
    out_$p243 := $i2p.i64.ref(out_$i242);
    goto corral_source_split_3313;

  corral_source_split_3311:
    assume {:verifier.code 0} true;
    out_$i242 := $add.i64(out_$i241, 16);
    call {:si_unique_call 1348} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i242);
    goto corral_source_split_3312;

  corral_source_split_3310:
    assume {:verifier.code 0} true;
    out_$i241 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3311;

  corral_source_split_3309:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p240, .str.5);
    goto corral_source_split_3310;

  corral_source_split_3308:
    assume {:verifier.code 0} true;
    out_$p240 := $i2p.i64.ref(out_$i239);
    goto corral_source_split_3309;

  corral_source_split_3307:
    assume {:verifier.code 0} true;
    out_$i239 := $add.i64(out_$i238, 8);
    call {:si_unique_call 1347} {:cexpr "__cil_tmp125"} boogie_si_record_i64(out_$i239);
    goto corral_source_split_3308;

  corral_source_split_3306:
    assume {:verifier.code 0} true;
    out_$i238 := $p2i.ref.i64(in_$p8);
    goto corral_source_split_3307;

  corral_source_split_3305:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p237, .str);
    goto corral_source_split_3306;

  $bb37:
    assume {:verifier.code 0} true;
    out_$p237 := $bitcast.ref.ref(in_$p8);
    goto corral_source_split_3305;

  $bb33:
    assume !(out_$i210 == 1);
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb36:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb35:
    assume !(out_$i235 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  corral_source_split_3303:
    assume {:verifier.code 0} true;
    goto $bb36;

  corral_source_split_3302:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1346} out_vslice_dummy_var_82 := __dynamic_pr_debug.ref.ref.i32(in_$p7, .str.8, out_$i208);
    goto corral_source_split_3303;

  $bb34:
    assume out_$i235 == 1;
    goto corral_source_split_3302;

  corral_source_split_3300:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_3299:
    assume {:verifier.code 0} true;
    out_$i235 := $ne.i64(out_$i234, 0);
    goto corral_source_split_3300;

  corral_source_split_3298:
    assume {:verifier.code 0} true;
    out_$i234 := $sext.i32.i64(out_$i233);
    call {:si_unique_call 1345} {:cexpr "tmp___5"} boogie_si_record_i64(out_$i234);
    goto corral_source_split_3299;

  corral_source_split_3297:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1344} out_$i233 := __builtinx_expect.i64.i64(out_$i232, 0);
    goto corral_source_split_3298;

  corral_source_split_3296:
    assume {:verifier.code 0} true;
    out_$i232 := $and.i64(out_$i231, 1);
    call {:si_unique_call 1343} {:cexpr "__cil_tmp123"} boogie_si_record_i64(out_$i232);
    goto corral_source_split_3297;

  corral_source_split_3295:
    assume {:verifier.code 0} true;
    out_$i231 := $zext.i8.i64(out_$i230);
    call {:si_unique_call 1342} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i231);
    goto corral_source_split_3296;

  corral_source_split_3294:
    assume {:verifier.code 0} true;
    out_$i230 := $load.i8($M.1, out_$p229);
    call {:si_unique_call 1341} {:cexpr "__cil_tmp121"} boogie_si_record_i8(out_$i230);
    goto corral_source_split_3295;

  corral_source_split_3293:
    assume {:verifier.code 0} true;
    out_$p229 := $i2p.i64.ref(out_$i228);
    goto corral_source_split_3294;

  corral_source_split_3292:
    assume {:verifier.code 0} true;
    out_$i228 := $add.i64(out_$i227, 35);
    call {:si_unique_call 1340} {:cexpr "__cil_tmp120"} boogie_si_record_i64(out_$i228);
    goto corral_source_split_3293;

  corral_source_split_3291:
    assume {:verifier.code 0} true;
    out_$i227 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3292;

  corral_source_split_3290:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p226, 0);
    goto corral_source_split_3291;

  corral_source_split_3289:
    assume {:verifier.code 0} true;
    out_$p226 := $i2p.i64.ref(out_$i225);
    goto corral_source_split_3290;

  corral_source_split_3288:
    assume {:verifier.code 0} true;
    out_$i225 := $add.i64(out_$i224, 35);
    call {:si_unique_call 1339} {:cexpr "__cil_tmp119"} boogie_si_record_i64(out_$i225);
    goto corral_source_split_3289;

  corral_source_split_3287:
    assume {:verifier.code 0} true;
    out_$i224 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3288;

  corral_source_split_3286:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p223, 501);
    goto corral_source_split_3287;

  corral_source_split_3285:
    assume {:verifier.code 0} true;
    out_$p223 := $i2p.i64.ref(out_$i222);
    goto corral_source_split_3286;

  corral_source_split_3284:
    assume {:verifier.code 0} true;
    out_$i222 := $add.i64(out_$i221, 32);
    call {:si_unique_call 1338} {:cexpr "__cil_tmp118"} boogie_si_record_i64(out_$i222);
    goto corral_source_split_3285;

  corral_source_split_3283:
    assume {:verifier.code 0} true;
    out_$i221 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3284;

  corral_source_split_3282:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p220, .str.8);
    goto corral_source_split_3283;

  corral_source_split_3281:
    assume {:verifier.code 0} true;
    out_$p220 := $i2p.i64.ref(out_$i219);
    goto corral_source_split_3282;

  corral_source_split_3280:
    assume {:verifier.code 0} true;
    out_$i219 := $add.i64(out_$i218, 24);
    call {:si_unique_call 1337} {:cexpr "__cil_tmp117"} boogie_si_record_i64(out_$i219);
    goto corral_source_split_3281;

  corral_source_split_3279:
    assume {:verifier.code 0} true;
    out_$i218 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3280;

  corral_source_split_3278:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p217, .str.2);
    goto corral_source_split_3279;

  corral_source_split_3277:
    assume {:verifier.code 0} true;
    out_$p217 := $i2p.i64.ref(out_$i216);
    goto corral_source_split_3278;

  corral_source_split_3276:
    assume {:verifier.code 0} true;
    out_$i216 := $add.i64(out_$i215, 16);
    call {:si_unique_call 1336} {:cexpr "__cil_tmp116"} boogie_si_record_i64(out_$i216);
    goto corral_source_split_3277;

  corral_source_split_3275:
    assume {:verifier.code 0} true;
    out_$i215 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3276;

  corral_source_split_3274:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p214, .str.5);
    goto corral_source_split_3275;

  corral_source_split_3273:
    assume {:verifier.code 0} true;
    out_$p214 := $i2p.i64.ref(out_$i213);
    goto corral_source_split_3274;

  corral_source_split_3272:
    assume {:verifier.code 0} true;
    out_$i213 := $add.i64(out_$i212, 8);
    call {:si_unique_call 1335} {:cexpr "__cil_tmp115"} boogie_si_record_i64(out_$i213);
    goto corral_source_split_3273;

  corral_source_split_3271:
    assume {:verifier.code 0} true;
    out_$i212 := $p2i.ref.i64(in_$p7);
    goto corral_source_split_3272;

  corral_source_split_3270:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p211, .str);
    goto corral_source_split_3271;

  corral_source_split_3269:
    assume {:verifier.code 0} true;
    out_$p211 := $bitcast.ref.ref(in_$p7);
    goto corral_source_split_3270;

  $bb32:
    assume out_$i210 == 1;
    goto corral_source_split_3269;

  corral_source_split_3267:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  corral_source_split_3266:
    assume {:verifier.code 0} true;
    out_$i210 := $eq.i32(out_$i209, 0);
    goto corral_source_split_3267;

  $bb31:
    assume {:verifier.code 0} true;
    out_$i209 := $and.i32(out_$i208, 7);
    call {:si_unique_call 1334} {:cexpr "__cil_tmp113"} boogie_si_record_i32(out_$i209);
    goto corral_source_split_3266;

  corral_source_split_3264:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb41_dummy:
    call {:si_unique_call 1} out_$i209, out_$i210, out_$p211, out_$i212, out_$i213, out_$p214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$p220, out_$i221, out_$i222, out_$p223, out_$i224, out_$i225, out_$p226, out_$i227, out_$i228, out_$p229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$p237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$p265, out_$p266, out_$p267, out_$i268, out_$i269, out_$i271, out_$i272, out_$i273, out_$i274, out_$i208, out_vslice_dummy_var_82, out_vslice_dummy_var_83 := INFTL_dumptables_loop_$bb30(in_$p0, in_$p7, in_$p8, in_$p207, out_$i209, out_$i210, out_$p211, out_$i212, out_$i213, out_$p214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$p220, out_$i221, out_$i222, out_$p223, out_$i224, out_$i225, out_$p226, out_$i227, out_$i228, out_$p229, out_$i230, out_$i231, out_$i232, out_$i233, out_$i234, out_$i235, out_$p237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$i263, out_$i264, out_$p265, out_$p266, out_$p267, out_$i268, out_$i269, out_$i271, out_$i272, out_$i273, out_$i274, out_$i208, out_vslice_dummy_var_82, out_vslice_dummy_var_83);
    return;

  exit:
    return;
}



procedure INFTL_dumptables_loop_$bb30(in_$p0: ref, in_$p7: ref, in_$p8: ref, in_$p207: ref, in_$i209: i32, in_$i210: i1, in_$p211: ref, in_$i212: i64, in_$i213: i64, in_$p214: ref, in_$i215: i64, in_$i216: i64, in_$p217: ref, in_$i218: i64, in_$i219: i64, in_$p220: ref, in_$i221: i64, in_$i222: i64, in_$p223: ref, in_$i224: i64, in_$i225: i64, in_$p226: ref, in_$i227: i64, in_$i228: i64, in_$p229: ref, in_$i230: i8, in_$i231: i64, in_$i232: i64, in_$i233: i32, in_$i234: i64, in_$i235: i1, in_$p237: ref, in_$i238: i64, in_$i239: i64, in_$p240: ref, in_$i241: i64, in_$i242: i64, in_$p243: ref, in_$i244: i64, in_$i245: i64, in_$p246: ref, in_$i247: i64, in_$i248: i64, in_$p249: ref, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i64, in_$i254: i64, in_$p255: ref, in_$i256: i8, in_$i257: i64, in_$i258: i64, in_$i259: i32, in_$i260: i64, in_$i261: i1, in_$i262: i64, in_$i263: i64, in_$i264: i64, in_$p265: ref, in_$p266: ref, in_$p267: ref, in_$i268: i16, in_$i269: i32, in_$i271: i32, in_$i272: i16, in_$i273: i32, in_$i274: i1, in_$i208: i32, in_vslice_dummy_var_82: i32, in_vslice_dummy_var_83: i32) returns (out_$i209: i32, out_$i210: i1, out_$p211: ref, out_$i212: i64, out_$i213: i64, out_$p214: ref, out_$i215: i64, out_$i216: i64, out_$p217: ref, out_$i218: i64, out_$i219: i64, out_$p220: ref, out_$i221: i64, out_$i222: i64, out_$p223: ref, out_$i224: i64, out_$i225: i64, out_$p226: ref, out_$i227: i64, out_$i228: i64, out_$p229: ref, out_$i230: i8, out_$i231: i64, out_$i232: i64, out_$i233: i32, out_$i234: i64, out_$i235: i1, out_$p237: ref, out_$i238: i64, out_$i239: i64, out_$p240: ref, out_$i241: i64, out_$i242: i64, out_$p243: ref, out_$i244: i64, out_$i245: i64, out_$p246: ref, out_$i247: i64, out_$i248: i64, out_$p249: ref, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i64, out_$i254: i64, out_$p255: ref, out_$i256: i8, out_$i257: i64, out_$i258: i64, out_$i259: i32, out_$i260: i64, out_$i261: i1, out_$i262: i64, out_$i263: i64, out_$i264: i64, out_$p265: ref, out_$p266: ref, out_$p267: ref, out_$i268: i16, out_$i269: i32, out_$i271: i32, out_$i272: i16, out_$i273: i32, out_$i274: i1, out_$i208: i32, out_vslice_dummy_var_82: i32, out_vslice_dummy_var_83: i32);
  modifies $M.1, $M.3;



implementation INFTL_dumptables_loop_$bb10(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p70: ref, in_$i74: i32, in_$i75: i1, in_$p76: ref, in_$i77: i64, in_$i78: i64, in_$p79: ref, in_$i80: i64, in_$i81: i64, in_$p82: ref, in_$i83: i64, in_$i84: i64, in_$p85: ref, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i64, in_$i93: i64, in_$p94: ref, in_$i95: i8, in_$i96: i64, in_$i97: i64, in_$i98: i32, in_$i99: i64, in_$i100: i1, in_$p102: ref, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$p108: ref, in_$i109: i64, in_$i110: i64, in_$p111: ref, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i8, in_$i122: i64, in_$i123: i64, in_$i124: i32, in_$i125: i64, in_$i126: i1, in_$i127: i64, in_$i128: i64, in_$i129: i64, in_$p130: ref, in_$p131: ref, in_$p132: ref, in_$i133: i16, in_$i134: i32, in_$i136: i32, in_$i137: i32, in_$i138: i1, in_$i73: i32, in_vslice_dummy_var_78: i32, in_vslice_dummy_var_79: i32) returns (out_$i74: i32, out_$i75: i1, out_$p76: ref, out_$i77: i64, out_$i78: i64, out_$p79: ref, out_$i80: i64, out_$i81: i64, out_$p82: ref, out_$i83: i64, out_$i84: i64, out_$p85: ref, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i64, out_$i93: i64, out_$p94: ref, out_$i95: i8, out_$i96: i64, out_$i97: i64, out_$i98: i32, out_$i99: i64, out_$i100: i1, out_$p102: ref, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$p108: ref, out_$i109: i64, out_$i110: i64, out_$p111: ref, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i8, out_$i122: i64, out_$i123: i64, out_$i124: i32, out_$i125: i64, out_$i126: i1, out_$i127: i64, out_$i128: i64, out_$i129: i64, out_$p130: ref, out_$p131: ref, out_$p132: ref, out_$i133: i16, out_$i134: i32, out_$i136: i32, out_$i137: i32, out_$i138: i1, out_$i73: i32, out_vslice_dummy_var_78: i32, out_vslice_dummy_var_79: i32)
{

  entry:
    out_$i74, out_$i75, out_$p76, out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$i100, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$p111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$p130, out_$p131, out_$p132, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$i73, out_vslice_dummy_var_78, out_vslice_dummy_var_79 := in_$i74, in_$i75, in_$p76, in_$i77, in_$i78, in_$p79, in_$i80, in_$i81, in_$p82, in_$i83, in_$i84, in_$p85, in_$i86, in_$i87, in_$p88, in_$i89, in_$i90, in_$p91, in_$i92, in_$i93, in_$p94, in_$i95, in_$i96, in_$i97, in_$i98, in_$i99, in_$i100, in_$p102, in_$i103, in_$i104, in_$p105, in_$i106, in_$i107, in_$p108, in_$i109, in_$i110, in_$p111, in_$i112, in_$i113, in_$p114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$p120, in_$i121, in_$i122, in_$i123, in_$i124, in_$i125, in_$i126, in_$i127, in_$i128, in_$i129, in_$p130, in_$p131, in_$p132, in_$i133, in_$i134, in_$i136, in_$i137, in_$i138, in_$i73, in_vslice_dummy_var_78, in_vslice_dummy_var_79;
    goto $bb10, exit;

  $bb10:
    assume {:verifier.code 0} true;
    goto corral_source_split_3086;

  $bb21:
    assume out_$i138 == 1;
    assume {:verifier.code 0} true;
    out_$i73 := out_$i136;
    goto $bb21_dummy;

  corral_source_split_3172:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21;

  corral_source_split_3171:
    assume {:verifier.code 0} true;
    out_$i138 := $ult.i32(out_$i136, out_$i137);
    goto corral_source_split_3172;

  corral_source_split_3170:
    assume {:verifier.code 0} true;
    out_$i137 := $load.i32($M.1, in_$p70);
    call {:si_unique_call 1296} {:cexpr "__cil_tmp79"} boogie_si_record_i32(out_$i137);
    goto corral_source_split_3171;

  $bb20:
    assume {:verifier.code 0} true;
    out_$i136 := $add.i32(out_$i73, 1);
    call {:si_unique_call 1295} {:cexpr "i"} boogie_si_record_i32(out_$i136);
    goto corral_source_split_3170;

  $bb19:
    assume !(out_$i126 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  corral_source_split_3168:
    assume {:verifier.code 0} true;
    goto $bb20;

  corral_source_split_3167:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1294} out_vslice_dummy_var_79 := __dynamic_pr_debug.ref.ref.i32(in_$p4, .str.9, out_$i134);
    goto corral_source_split_3168;

  corral_source_split_3166:
    assume {:verifier.code 0} true;
    out_$i134 := $zext.i16.i32(out_$i133);
    call {:si_unique_call 1293} {:cexpr "__cil_tmp76"} boogie_si_record_i32(out_$i134);
    goto corral_source_split_3167;

  corral_source_split_3165:
    assume {:verifier.code 0} true;
    out_$i133 := $load.i16($M.1, out_$p132);
    call {:si_unique_call 1292} {:cexpr "__cil_tmp75"} boogie_si_record_i16(out_$i133);
    goto corral_source_split_3166;

  corral_source_split_3164:
    assume {:verifier.code 0} true;
    out_$p132 := $add.ref(out_$p131, $mul.ref(out_$i127, 2));
    goto corral_source_split_3165;

  corral_source_split_3163:
    assume {:verifier.code 0} true;
    out_$p131 := $load.ref($M.1, out_$p130);
    goto corral_source_split_3164;

  corral_source_split_3162:
    assume {:verifier.code 0} true;
    out_$p130 := $i2p.i64.ref(out_$i129);
    goto corral_source_split_3163;

  corral_source_split_3161:
    assume {:verifier.code 0} true;
    out_$i129 := $add.i64(out_$i128, 552);
    call {:si_unique_call 1291} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i129);
    goto corral_source_split_3162;

  corral_source_split_3160:
    assume {:verifier.code 0} true;
    out_$i128 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1290} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i128);
    goto corral_source_split_3161;

  corral_source_split_3159:
    assume {:verifier.code 0} true;
    out_$i127 := $sext.i32.i64(out_$i73);
    call {:si_unique_call 1289} {:cexpr "__cil_tmp70"} boogie_si_record_i64(out_$i127);
    goto corral_source_split_3160;

  $bb18:
    assume out_$i126 == 1;
    goto corral_source_split_3159;

  corral_source_split_3157:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_3156:
    assume {:verifier.code 0} true;
    out_$i126 := $ne.i64(out_$i125, 0);
    goto corral_source_split_3157;

  corral_source_split_3155:
    assume {:verifier.code 0} true;
    out_$i125 := $sext.i32.i64(out_$i124);
    call {:si_unique_call 1288} {:cexpr "tmp___2"} boogie_si_record_i64(out_$i125);
    goto corral_source_split_3156;

  corral_source_split_3154:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1287} out_$i124 := __builtinx_expect.i64.i64(out_$i123, 0);
    goto corral_source_split_3155;

  corral_source_split_3153:
    assume {:verifier.code 0} true;
    out_$i123 := $and.i64(out_$i122, 1);
    call {:si_unique_call 1286} {:cexpr "__cil_tmp69"} boogie_si_record_i64(out_$i123);
    goto corral_source_split_3154;

  corral_source_split_3152:
    assume {:verifier.code 0} true;
    out_$i122 := $zext.i8.i64(out_$i121);
    call {:si_unique_call 1285} {:cexpr "__cil_tmp68"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_3153;

  corral_source_split_3151:
    assume {:verifier.code 0} true;
    out_$i121 := $load.i8($M.1, out_$p120);
    call {:si_unique_call 1284} {:cexpr "__cil_tmp67"} boogie_si_record_i8(out_$i121);
    goto corral_source_split_3152;

  corral_source_split_3150:
    assume {:verifier.code 0} true;
    out_$p120 := $i2p.i64.ref(out_$i119);
    goto corral_source_split_3151;

  corral_source_split_3149:
    assume {:verifier.code 0} true;
    out_$i119 := $add.i64(out_$i118, 35);
    call {:si_unique_call 1283} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i119);
    goto corral_source_split_3150;

  corral_source_split_3148:
    assume {:verifier.code 0} true;
    out_$i118 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3149;

  corral_source_split_3147:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p117, 0);
    goto corral_source_split_3148;

  corral_source_split_3146:
    assume {:verifier.code 0} true;
    out_$p117 := $i2p.i64.ref(out_$i116);
    goto corral_source_split_3147;

  corral_source_split_3145:
    assume {:verifier.code 0} true;
    out_$i116 := $add.i64(out_$i115, 35);
    call {:si_unique_call 1282} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_3146;

  corral_source_split_3144:
    assume {:verifier.code 0} true;
    out_$i115 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3145;

  corral_source_split_3143:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p114, 492);
    goto corral_source_split_3144;

  corral_source_split_3142:
    assume {:verifier.code 0} true;
    out_$p114 := $i2p.i64.ref(out_$i113);
    goto corral_source_split_3143;

  corral_source_split_3141:
    assume {:verifier.code 0} true;
    out_$i113 := $add.i64(out_$i112, 32);
    call {:si_unique_call 1281} {:cexpr "__cil_tmp64"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_3142;

  corral_source_split_3140:
    assume {:verifier.code 0} true;
    out_$i112 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3141;

  corral_source_split_3139:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p111, .str.9);
    goto corral_source_split_3140;

  corral_source_split_3138:
    assume {:verifier.code 0} true;
    out_$p111 := $i2p.i64.ref(out_$i110);
    goto corral_source_split_3139;

  corral_source_split_3137:
    assume {:verifier.code 0} true;
    out_$i110 := $add.i64(out_$i109, 24);
    call {:si_unique_call 1280} {:cexpr "__cil_tmp63"} boogie_si_record_i64(out_$i110);
    goto corral_source_split_3138;

  corral_source_split_3136:
    assume {:verifier.code 0} true;
    out_$i109 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3137;

  corral_source_split_3135:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p108, .str.2);
    goto corral_source_split_3136;

  corral_source_split_3134:
    assume {:verifier.code 0} true;
    out_$p108 := $i2p.i64.ref(out_$i107);
    goto corral_source_split_3135;

  corral_source_split_3133:
    assume {:verifier.code 0} true;
    out_$i107 := $add.i64(out_$i106, 16);
    call {:si_unique_call 1279} {:cexpr "__cil_tmp62"} boogie_si_record_i64(out_$i107);
    goto corral_source_split_3134;

  corral_source_split_3132:
    assume {:verifier.code 0} true;
    out_$i106 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3133;

  corral_source_split_3131:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p105, .str.5);
    goto corral_source_split_3132;

  corral_source_split_3130:
    assume {:verifier.code 0} true;
    out_$p105 := $i2p.i64.ref(out_$i104);
    goto corral_source_split_3131;

  corral_source_split_3129:
    assume {:verifier.code 0} true;
    out_$i104 := $add.i64(out_$i103, 8);
    call {:si_unique_call 1278} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_3130;

  corral_source_split_3128:
    assume {:verifier.code 0} true;
    out_$i103 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3129;

  corral_source_split_3127:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p102, .str);
    goto corral_source_split_3128;

  $bb17:
    assume {:verifier.code 0} true;
    out_$p102 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_3127;

  $bb13:
    assume !(out_$i75 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb15:
    assume !(out_$i100 == 1);
    assume {:verifier.code 0} true;
    goto $bb16;

  corral_source_split_3125:
    assume {:verifier.code 0} true;
    goto $bb16;

  corral_source_split_3124:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1277} out_vslice_dummy_var_78 := __dynamic_pr_debug.ref.ref.i32(in_$p3, .str.8, out_$i73);
    goto corral_source_split_3125;

  $bb14:
    assume out_$i100 == 1;
    goto corral_source_split_3124;

  corral_source_split_3122:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb14, $bb15;

  corral_source_split_3121:
    assume {:verifier.code 0} true;
    out_$i100 := $ne.i64(out_$i99, 0);
    goto corral_source_split_3122;

  corral_source_split_3120:
    assume {:verifier.code 0} true;
    out_$i99 := $sext.i32.i64(out_$i98);
    call {:si_unique_call 1276} {:cexpr "tmp___1"} boogie_si_record_i64(out_$i99);
    goto corral_source_split_3121;

  corral_source_split_3119:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1275} out_$i98 := __builtinx_expect.i64.i64(out_$i97, 0);
    goto corral_source_split_3120;

  corral_source_split_3118:
    assume {:verifier.code 0} true;
    out_$i97 := $and.i64(out_$i96, 1);
    call {:si_unique_call 1274} {:cexpr "__cil_tmp59"} boogie_si_record_i64(out_$i97);
    goto corral_source_split_3119;

  corral_source_split_3117:
    assume {:verifier.code 0} true;
    out_$i96 := $zext.i8.i64(out_$i95);
    call {:si_unique_call 1273} {:cexpr "__cil_tmp58"} boogie_si_record_i64(out_$i96);
    goto corral_source_split_3118;

  corral_source_split_3116:
    assume {:verifier.code 0} true;
    out_$i95 := $load.i8($M.1, out_$p94);
    call {:si_unique_call 1272} {:cexpr "__cil_tmp57"} boogie_si_record_i8(out_$i95);
    goto corral_source_split_3117;

  corral_source_split_3115:
    assume {:verifier.code 0} true;
    out_$p94 := $i2p.i64.ref(out_$i93);
    goto corral_source_split_3116;

  corral_source_split_3114:
    assume {:verifier.code 0} true;
    out_$i93 := $add.i64(out_$i92, 35);
    call {:si_unique_call 1271} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i93);
    goto corral_source_split_3115;

  corral_source_split_3113:
    assume {:verifier.code 0} true;
    out_$i92 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3114;

  corral_source_split_3112:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p91, 0);
    goto corral_source_split_3113;

  corral_source_split_3111:
    assume {:verifier.code 0} true;
    out_$p91 := $i2p.i64.ref(out_$i90);
    goto corral_source_split_3112;

  corral_source_split_3110:
    assume {:verifier.code 0} true;
    out_$i90 := $add.i64(out_$i89, 35);
    call {:si_unique_call 1270} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i90);
    goto corral_source_split_3111;

  corral_source_split_3109:
    assume {:verifier.code 0} true;
    out_$i89 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3110;

  corral_source_split_3108:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p88, 491);
    goto corral_source_split_3109;

  corral_source_split_3107:
    assume {:verifier.code 0} true;
    out_$p88 := $i2p.i64.ref(out_$i87);
    goto corral_source_split_3108;

  corral_source_split_3106:
    assume {:verifier.code 0} true;
    out_$i87 := $add.i64(out_$i86, 32);
    call {:si_unique_call 1269} {:cexpr "__cil_tmp54"} boogie_si_record_i64(out_$i87);
    goto corral_source_split_3107;

  corral_source_split_3105:
    assume {:verifier.code 0} true;
    out_$i86 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3106;

  corral_source_split_3104:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p85, .str.8);
    goto corral_source_split_3105;

  corral_source_split_3103:
    assume {:verifier.code 0} true;
    out_$p85 := $i2p.i64.ref(out_$i84);
    goto corral_source_split_3104;

  corral_source_split_3102:
    assume {:verifier.code 0} true;
    out_$i84 := $add.i64(out_$i83, 24);
    call {:si_unique_call 1268} {:cexpr "__cil_tmp53"} boogie_si_record_i64(out_$i84);
    goto corral_source_split_3103;

  corral_source_split_3101:
    assume {:verifier.code 0} true;
    out_$i83 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3102;

  corral_source_split_3100:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p82, .str.2);
    goto corral_source_split_3101;

  corral_source_split_3099:
    assume {:verifier.code 0} true;
    out_$p82 := $i2p.i64.ref(out_$i81);
    goto corral_source_split_3100;

  corral_source_split_3098:
    assume {:verifier.code 0} true;
    out_$i81 := $add.i64(out_$i80, 16);
    call {:si_unique_call 1267} {:cexpr "__cil_tmp52"} boogie_si_record_i64(out_$i81);
    goto corral_source_split_3099;

  corral_source_split_3097:
    assume {:verifier.code 0} true;
    out_$i80 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3098;

  corral_source_split_3096:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p79, .str.5);
    goto corral_source_split_3097;

  corral_source_split_3095:
    assume {:verifier.code 0} true;
    out_$p79 := $i2p.i64.ref(out_$i78);
    goto corral_source_split_3096;

  corral_source_split_3094:
    assume {:verifier.code 0} true;
    out_$i78 := $add.i64(out_$i77, 8);
    call {:si_unique_call 1266} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i78);
    goto corral_source_split_3095;

  corral_source_split_3093:
    assume {:verifier.code 0} true;
    out_$i77 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3094;

  corral_source_split_3092:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p76, .str);
    goto corral_source_split_3093;

  corral_source_split_3091:
    assume {:verifier.code 0} true;
    out_$p76 := $bitcast.ref.ref(in_$p3);
    goto corral_source_split_3092;

  $bb12:
    assume out_$i75 == 1;
    goto corral_source_split_3091;

  corral_source_split_3089:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  corral_source_split_3088:
    assume {:verifier.code 0} true;
    out_$i75 := $eq.i32(out_$i74, 0);
    goto corral_source_split_3089;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i74 := $and.i32(out_$i73, 7);
    call {:si_unique_call 1265} {:cexpr "__cil_tmp49"} boogie_si_record_i32(out_$i74);
    goto corral_source_split_3088;

  corral_source_split_3086:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb21_dummy:
    call {:si_unique_call 1} out_$i74, out_$i75, out_$p76, out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$i100, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$p111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$p130, out_$p131, out_$p132, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$i73, out_vslice_dummy_var_78, out_vslice_dummy_var_79 := INFTL_dumptables_loop_$bb10(in_$p0, in_$p3, in_$p4, in_$p70, out_$i74, out_$i75, out_$p76, out_$i77, out_$i78, out_$p79, out_$i80, out_$i81, out_$p82, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$p94, out_$i95, out_$i96, out_$i97, out_$i98, out_$i99, out_$i100, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$p111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$i123, out_$i124, out_$i125, out_$i126, out_$i127, out_$i128, out_$i129, out_$p130, out_$p131, out_$p132, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$i73, out_vslice_dummy_var_78, out_vslice_dummy_var_79);
    return;

  exit:
    return;
}



procedure INFTL_dumptables_loop_$bb10(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p70: ref, in_$i74: i32, in_$i75: i1, in_$p76: ref, in_$i77: i64, in_$i78: i64, in_$p79: ref, in_$i80: i64, in_$i81: i64, in_$p82: ref, in_$i83: i64, in_$i84: i64, in_$p85: ref, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i64, in_$i93: i64, in_$p94: ref, in_$i95: i8, in_$i96: i64, in_$i97: i64, in_$i98: i32, in_$i99: i64, in_$i100: i1, in_$p102: ref, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$p108: ref, in_$i109: i64, in_$i110: i64, in_$p111: ref, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i8, in_$i122: i64, in_$i123: i64, in_$i124: i32, in_$i125: i64, in_$i126: i1, in_$i127: i64, in_$i128: i64, in_$i129: i64, in_$p130: ref, in_$p131: ref, in_$p132: ref, in_$i133: i16, in_$i134: i32, in_$i136: i32, in_$i137: i32, in_$i138: i1, in_$i73: i32, in_vslice_dummy_var_78: i32, in_vslice_dummy_var_79: i32) returns (out_$i74: i32, out_$i75: i1, out_$p76: ref, out_$i77: i64, out_$i78: i64, out_$p79: ref, out_$i80: i64, out_$i81: i64, out_$p82: ref, out_$i83: i64, out_$i84: i64, out_$p85: ref, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i64, out_$i93: i64, out_$p94: ref, out_$i95: i8, out_$i96: i64, out_$i97: i64, out_$i98: i32, out_$i99: i64, out_$i100: i1, out_$p102: ref, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$p108: ref, out_$i109: i64, out_$i110: i64, out_$p111: ref, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i8, out_$i122: i64, out_$i123: i64, out_$i124: i32, out_$i125: i64, out_$i126: i1, out_$i127: i64, out_$i128: i64, out_$i129: i64, out_$p130: ref, out_$p131: ref, out_$p132: ref, out_$i133: i16, out_$i134: i32, out_$i136: i32, out_$i137: i32, out_$i138: i1, out_$i73: i32, out_vslice_dummy_var_78: i32, out_vslice_dummy_var_79: i32);
  modifies $M.1, $M.3;



implementation INFTL_dumpVUchains_loop_$bb22(in_$p0: ref, in_$p4: ref, in_$p106: ref, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i120: i64, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$p124: ref, in_$p125: ref, in_$i126: i16, in_$i127: i32, in_$p128: ref, in_$i129: i64, in_$i130: i64, in_$p131: ref, in_$i132: i64, in_$i133: i64, in_$p134: ref, in_$i135: i64, in_$i136: i64, in_$p137: ref, in_$i138: i64, in_$i139: i64, in_$p140: ref, in_$i141: i64, in_$i142: i64, in_$p143: ref, in_$i144: i64, in_$i145: i64, in_$p146: ref, in_$i147: i8, in_$i148: i64, in_$i149: i64, in_$i150: i32, in_$i151: i64, in_$i152: i1, in_$i154: i32, in_$i155: i32, in_$i156: i1, in_$i109: i32, in_$i110: i32, in_vslice_dummy_var_90: i32) returns (out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i120: i64, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$p124: ref, out_$p125: ref, out_$i126: i16, out_$i127: i32, out_$p128: ref, out_$i129: i64, out_$i130: i64, out_$p131: ref, out_$i132: i64, out_$i133: i64, out_$p134: ref, out_$i135: i64, out_$i136: i64, out_$p137: ref, out_$i138: i64, out_$i139: i64, out_$p140: ref, out_$i141: i64, out_$i142: i64, out_$p143: ref, out_$i144: i64, out_$i145: i64, out_$p146: ref, out_$i147: i8, out_$i148: i64, out_$i149: i64, out_$i150: i32, out_$i151: i64, out_$i152: i1, out_$i154: i32, out_$i155: i32, out_$i156: i1, out_$i109: i32, out_$i110: i32, out_vslice_dummy_var_90: i32)
{

  entry:
    out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_vslice_dummy_var_90 := in_$i111, in_$i112, in_$i113, in_$p114, in_$p115, in_$p116, in_$i117, in_$i118, in_$i119, in_$i120, in_$i121, in_$i122, in_$p123, in_$p124, in_$p125, in_$i126, in_$i127, in_$p128, in_$i129, in_$i130, in_$p131, in_$i132, in_$i133, in_$p134, in_$i135, in_$i136, in_$p137, in_$i138, in_$i139, in_$p140, in_$i141, in_$i142, in_$p143, in_$i144, in_$i145, in_$p146, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i152, in_$i154, in_$i155, in_$i156, in_$i109, in_$i110, in_vslice_dummy_var_90;
    goto $bb22, exit;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3656;

  $bb31:
    assume out_$i156 == 1;
    assume {:verifier.code 0} true;
    out_$i109, out_$i110 := out_$i154, out_$i127;
    goto $bb31_dummy;

  corral_source_split_3747:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    out_$i156 := $ult.i32(out_$i154, out_$i155);
    goto corral_source_split_3747;

  corral_source_split_3745:
    assume {:verifier.code 0} true;
    out_$i155 := $load.i32($M.1, in_$p106);
    call {:si_unique_call 1536} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_3746;

  $bb30:
    assume {:verifier.code 0} true;
    out_$i154 := $add.i32(out_$i109, 1);
    call {:si_unique_call 1535} {:cexpr "i"} boogie_si_record_i32(out_$i154);
    goto corral_source_split_3745;

  $bb29:
    assume !(out_$i152 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1534} out_vslice_dummy_var_90 := __dynamic_pr_debug.ref.ref.i32(in_$p4, .str.16, out_$i127);
    goto corral_source_split_3743;

  $bb28:
    assume out_$i152 == 1;
    goto corral_source_split_3742;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_3739:
    assume {:verifier.code 0} true;
    out_$i152 := $ne.i64(out_$i151, 0);
    goto corral_source_split_3740;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    out_$i151 := $sext.i32.i64(out_$i150);
    call {:si_unique_call 1533} {:cexpr "tmp___2"} boogie_si_record_i64(out_$i151);
    goto corral_source_split_3739;

  corral_source_split_3737:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1532} out_$i150 := __builtinx_expect.i64.i64(out_$i149, 0);
    goto corral_source_split_3738;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    out_$i149 := $and.i64(out_$i148, 1);
    call {:si_unique_call 1531} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i149);
    goto corral_source_split_3737;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    out_$i148 := $zext.i8.i64(out_$i147);
    call {:si_unique_call 1530} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i148);
    goto corral_source_split_3736;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    out_$i147 := $load.i8($M.1, out_$p146);
    call {:si_unique_call 1529} {:cexpr "__cil_tmp77"} boogie_si_record_i8(out_$i147);
    goto corral_source_split_3735;

  corral_source_split_3733:
    assume {:verifier.code 0} true;
    out_$p146 := $i2p.i64.ref(out_$i145);
    goto corral_source_split_3734;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    out_$i145 := $add.i64(out_$i144, 35);
    call {:si_unique_call 1528} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i145);
    goto corral_source_split_3733;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    out_$i144 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3732;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p143, 0);
    goto corral_source_split_3731;

  corral_source_split_3729:
    assume {:verifier.code 0} true;
    out_$p143 := $i2p.i64.ref(out_$i142);
    goto corral_source_split_3730;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    out_$i142 := $add.i64(out_$i141, 35);
    call {:si_unique_call 1527} {:cexpr "__cil_tmp75"} boogie_si_record_i64(out_$i142);
    goto corral_source_split_3729;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    out_$i141 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3728;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p140, 543);
    goto corral_source_split_3727;

  corral_source_split_3725:
    assume {:verifier.code 0} true;
    out_$p140 := $i2p.i64.ref(out_$i139);
    goto corral_source_split_3726;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    out_$i139 := $add.i64(out_$i138, 32);
    call {:si_unique_call 1526} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i139);
    goto corral_source_split_3725;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    out_$i138 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3724;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p137, .str.16);
    goto corral_source_split_3723;

  corral_source_split_3721:
    assume {:verifier.code 0} true;
    out_$p137 := $i2p.i64.ref(out_$i136);
    goto corral_source_split_3722;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    out_$i136 := $add.i64(out_$i135, 24);
    call {:si_unique_call 1525} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i136);
    goto corral_source_split_3721;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    out_$i135 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3720;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p134, .str.2);
    goto corral_source_split_3719;

  corral_source_split_3717:
    assume {:verifier.code 0} true;
    out_$p134 := $i2p.i64.ref(out_$i133);
    goto corral_source_split_3718;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    out_$i133 := $add.i64(out_$i132, 16);
    call {:si_unique_call 1524} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i133);
    goto corral_source_split_3717;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    out_$i132 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3716;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p131, .str.13);
    goto corral_source_split_3715;

  corral_source_split_3713:
    assume {:verifier.code 0} true;
    out_$p131 := $i2p.i64.ref(out_$i130);
    goto corral_source_split_3714;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    out_$i130 := $add.i64(out_$i129, 8);
    call {:si_unique_call 1523} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i130);
    goto corral_source_split_3713;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    out_$i129 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3712;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p128, .str);
    goto corral_source_split_3711;

  corral_source_split_3709:
    assume {:verifier.code 0} true;
    out_$p128 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_3710;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    out_$i127 := $zext.i16.i32(out_$i126);
    call {:si_unique_call 1522} {:cexpr "block"} boogie_si_record_i32(out_$i127);
    goto corral_source_split_3709;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    out_$i126 := $load.i16($M.1, out_$p125);
    call {:si_unique_call 1521} {:cexpr "__cil_tmp69"} boogie_si_record_i16(out_$i126);
    goto corral_source_split_3708;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    out_$p125 := $add.ref(out_$p124, $mul.ref(out_$i120, 2));
    goto corral_source_split_3707;

  corral_source_split_3705:
    assume {:verifier.code 0} true;
    out_$p124 := $load.ref($M.1, out_$p123);
    goto corral_source_split_3706;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_3705;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, 544);
    call {:si_unique_call 1520} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_3704;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1519} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i121);
    goto corral_source_split_3703;

  $bb27:
    assume {:verifier.code 0} true;
    out_$i120 := $sext.i32.i64(out_$i110);
    call {:si_unique_call 1518} {:cexpr "__cil_tmp64"} boogie_si_record_i64(out_$i120);
    goto corral_source_split_3702;

  $bb25:
    assume !(out_$i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25;

  corral_source_split_3665:
    assume {:verifier.code 0} true;
    out_$i119 := $eq.i32(out_$i118, 65535);
    goto corral_source_split_3666;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    out_$i118 := $zext.i16.i32(out_$i117);
    call {:si_unique_call 1506} {:cexpr "__cil_tmp63"} boogie_si_record_i32(out_$i118);
    goto corral_source_split_3665;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    out_$i117 := $load.i16($M.1, out_$p116);
    call {:si_unique_call 1505} {:cexpr "__cil_tmp62"} boogie_si_record_i16(out_$i117);
    goto corral_source_split_3664;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    out_$p116 := $add.ref(out_$p115, $mul.ref(out_$i111, 2));
    goto corral_source_split_3663;

  corral_source_split_3661:
    assume {:verifier.code 0} true;
    out_$p115 := $load.ref($M.1, out_$p114);
    goto corral_source_split_3662;

  corral_source_split_3660:
    assume {:verifier.code 0} true;
    out_$p114 := $i2p.i64.ref(out_$i113);
    goto corral_source_split_3661;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    out_$i113 := $add.i64(out_$i112, 544);
    call {:si_unique_call 1504} {:cexpr "__cil_tmp59"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_3660;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    out_$i112 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1503} {:cexpr "__cil_tmp58"} boogie_si_record_i64(out_$i112);
    goto corral_source_split_3659;

  $bb23:
    assume {:verifier.code 0} true;
    out_$i111 := $sext.i32.i64(out_$i110);
    call {:si_unique_call 1502} {:cexpr "__cil_tmp57"} boogie_si_record_i64(out_$i111);
    goto corral_source_split_3658;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb31_dummy:
    call {:si_unique_call 1} out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_vslice_dummy_var_90 := INFTL_dumpVUchains_loop_$bb22(in_$p0, in_$p4, in_$p106, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_vslice_dummy_var_90);
    return;

  exit:
    return;
}



procedure INFTL_dumpVUchains_loop_$bb22(in_$p0: ref, in_$p4: ref, in_$p106: ref, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i120: i64, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$p124: ref, in_$p125: ref, in_$i126: i16, in_$i127: i32, in_$p128: ref, in_$i129: i64, in_$i130: i64, in_$p131: ref, in_$i132: i64, in_$i133: i64, in_$p134: ref, in_$i135: i64, in_$i136: i64, in_$p137: ref, in_$i138: i64, in_$i139: i64, in_$p140: ref, in_$i141: i64, in_$i142: i64, in_$p143: ref, in_$i144: i64, in_$i145: i64, in_$p146: ref, in_$i147: i8, in_$i148: i64, in_$i149: i64, in_$i150: i32, in_$i151: i64, in_$i152: i1, in_$i154: i32, in_$i155: i32, in_$i156: i1, in_$i109: i32, in_$i110: i32, in_vslice_dummy_var_90: i32) returns (out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i120: i64, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$p124: ref, out_$p125: ref, out_$i126: i16, out_$i127: i32, out_$p128: ref, out_$i129: i64, out_$i130: i64, out_$p131: ref, out_$i132: i64, out_$i133: i64, out_$p134: ref, out_$i135: i64, out_$i136: i64, out_$p137: ref, out_$i138: i64, out_$i139: i64, out_$p140: ref, out_$i141: i64, out_$i142: i64, out_$p143: ref, out_$i144: i64, out_$i145: i64, out_$p146: ref, out_$i147: i8, out_$i148: i64, out_$i149: i64, out_$i150: i32, out_$i151: i64, out_$i152: i1, out_$i154: i32, out_$i155: i32, out_$i156: i1, out_$i109: i32, out_$i110: i32, out_vslice_dummy_var_90: i32);
  modifies $M.1, $M.3;



implementation INFTL_dumpVUchains_loop_$bb10(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p61: ref, in_$i65: i64, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$p69: ref, in_$p70: ref, in_$i71: i16, in_$i72: i32, in_$i73: i64, in_$i74: i64, in_$p75: ref, in_$i76: i32, in_$i77: i1, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i64, in_$i86: i64, in_$p87: ref, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i64, in_$i92: i64, in_$p93: ref, in_$i94: i64, in_$i95: i64, in_$p96: ref, in_$i97: i8, in_$i98: i64, in_$i99: i64, in_$i100: i32, in_$i101: i64, in_$i102: i1, in_$i104: i64, in_$i105: i64, in_$p106: ref, in_$i107: i32, in_$i108: i1, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i120: i64, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$p124: ref, in_$p125: ref, in_$i126: i16, in_$i127: i32, in_$p128: ref, in_$i129: i64, in_$i130: i64, in_$p131: ref, in_$i132: i64, in_$i133: i64, in_$p134: ref, in_$i135: i64, in_$i136: i64, in_$p137: ref, in_$i138: i64, in_$i139: i64, in_$p140: ref, in_$i141: i64, in_$i142: i64, in_$p143: ref, in_$i144: i64, in_$i145: i64, in_$p146: ref, in_$i147: i8, in_$i148: i64, in_$i149: i64, in_$i150: i32, in_$i151: i64, in_$i152: i1, in_$i154: i32, in_$i155: i32, in_$i156: i1, in_$i109: i32, in_$i110: i32, in_$p157: ref, in_$i158: i64, in_$i159: i64, in_$p160: ref, in_$i161: i64, in_$i162: i64, in_$p163: ref, in_$i164: i64, in_$i165: i64, in_$p166: ref, in_$i167: i64, in_$i168: i64, in_$p169: ref, in_$i170: i64, in_$i171: i64, in_$p172: ref, in_$i173: i64, in_$i174: i64, in_$p175: ref, in_$i176: i8, in_$i177: i64, in_$i178: i64, in_$i179: i32, in_$i180: i64, in_$i181: i1, in_$i183: i32, in_$i184: i32, in_$i185: i1, in_$i64: i32, in_vslice_dummy_var_89: i32, in_vslice_dummy_var_90: i32, in_vslice_dummy_var_91: i32) returns (out_$i65: i64, out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$p69: ref, out_$p70: ref, out_$i71: i16, out_$i72: i32, out_$i73: i64, out_$i74: i64, out_$p75: ref, out_$i76: i32, out_$i77: i1, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i64, out_$i86: i64, out_$p87: ref, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i64, out_$i92: i64, out_$p93: ref, out_$i94: i64, out_$i95: i64, out_$p96: ref, out_$i97: i8, out_$i98: i64, out_$i99: i64, out_$i100: i32, out_$i101: i64, out_$i102: i1, out_$i104: i64, out_$i105: i64, out_$p106: ref, out_$i107: i32, out_$i108: i1, out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i120: i64, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$p124: ref, out_$p125: ref, out_$i126: i16, out_$i127: i32, out_$p128: ref, out_$i129: i64, out_$i130: i64, out_$p131: ref, out_$i132: i64, out_$i133: i64, out_$p134: ref, out_$i135: i64, out_$i136: i64, out_$p137: ref, out_$i138: i64, out_$i139: i64, out_$p140: ref, out_$i141: i64, out_$i142: i64, out_$p143: ref, out_$i144: i64, out_$i145: i64, out_$p146: ref, out_$i147: i8, out_$i148: i64, out_$i149: i64, out_$i150: i32, out_$i151: i64, out_$i152: i1, out_$i154: i32, out_$i155: i32, out_$i156: i1, out_$i109: i32, out_$i110: i32, out_$p157: ref, out_$i158: i64, out_$i159: i64, out_$p160: ref, out_$i161: i64, out_$i162: i64, out_$p163: ref, out_$i164: i64, out_$i165: i64, out_$p166: ref, out_$i167: i64, out_$i168: i64, out_$p169: ref, out_$i170: i64, out_$i171: i64, out_$p172: ref, out_$i173: i64, out_$i174: i64, out_$p175: ref, out_$i176: i8, out_$i177: i64, out_$i178: i64, out_$i179: i32, out_$i180: i64, out_$i181: i1, out_$i183: i32, out_$i184: i32, out_$i185: i1, out_$i64: i32, out_vslice_dummy_var_89: i32, out_vslice_dummy_var_90: i32, out_vslice_dummy_var_91: i32)
{

  entry:
    out_$i65, out_$i66, out_$i67, out_$p68, out_$p69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$p87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_$p157, out_$i158, out_$i159, out_$p160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$p166, out_$i167, out_$i168, out_$p169, out_$i170, out_$i171, out_$p172, out_$i173, out_$i174, out_$p175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i183, out_$i184, out_$i185, out_$i64, out_vslice_dummy_var_89, out_vslice_dummy_var_90, out_vslice_dummy_var_91 := in_$i65, in_$i66, in_$i67, in_$p68, in_$p69, in_$p70, in_$i71, in_$i72, in_$i73, in_$i74, in_$p75, in_$i76, in_$i77, in_$p78, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$p84, in_$i85, in_$i86, in_$p87, in_$i88, in_$i89, in_$p90, in_$i91, in_$i92, in_$p93, in_$i94, in_$i95, in_$p96, in_$i97, in_$i98, in_$i99, in_$i100, in_$i101, in_$i102, in_$i104, in_$i105, in_$p106, in_$i107, in_$i108, in_$i111, in_$i112, in_$i113, in_$p114, in_$p115, in_$p116, in_$i117, in_$i118, in_$i119, in_$i120, in_$i121, in_$i122, in_$p123, in_$p124, in_$p125, in_$i126, in_$i127, in_$p128, in_$i129, in_$i130, in_$p131, in_$i132, in_$i133, in_$p134, in_$i135, in_$i136, in_$p137, in_$i138, in_$i139, in_$p140, in_$i141, in_$i142, in_$p143, in_$i144, in_$i145, in_$p146, in_$i147, in_$i148, in_$i149, in_$i150, in_$i151, in_$i152, in_$i154, in_$i155, in_$i156, in_$i109, in_$i110, in_$p157, in_$i158, in_$i159, in_$p160, in_$i161, in_$i162, in_$p163, in_$i164, in_$i165, in_$p166, in_$i167, in_$i168, in_$p169, in_$i170, in_$i171, in_$p172, in_$i173, in_$i174, in_$p175, in_$i176, in_$i177, in_$i178, in_$i179, in_$i180, in_$i181, in_$i183, in_$i184, in_$i185, in_$i64, in_vslice_dummy_var_89, in_vslice_dummy_var_90, in_vslice_dummy_var_91;
    goto $bb10, exit;

  $bb10:
    assume {:verifier.code 0} true;
    goto corral_source_split_3591;

  $bb36:
    assume out_$i185 == 1;
    assume {:verifier.code 0} true;
    out_$i64 := out_$i183;
    goto $bb36_dummy;

  corral_source_split_3611:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb36;

  corral_source_split_3610:
    assume {:verifier.code 0} true;
    out_$i185 := $ult.i32(out_$i183, out_$i184);
    goto corral_source_split_3611;

  corral_source_split_3609:
    assume {:verifier.code 0} true;
    out_$i184 := $load.i32($M.1, in_$p61);
    call {:si_unique_call 1486} {:cexpr "__cil_tmp96"} boogie_si_record_i32(out_$i184);
    goto corral_source_split_3610;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i183 := $add.i32(out_$i64, 1);
    call {:si_unique_call 1485} {:cexpr "logical"} boogie_si_record_i32(out_$i183);
    goto corral_source_split_3609;

  $bb35:
    assume {:verifier.code 0} true;
    goto $bb14;

  corral_source_split_3607:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb12:
    assume out_$i77 == 1;
    goto corral_source_split_3607;

  corral_source_split_3605:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  corral_source_split_3604:
    assume {:verifier.code 0} true;
    out_$i77 := $ugt.i32(out_$i72, out_$i76);
    goto corral_source_split_3605;

  corral_source_split_3603:
    assume {:verifier.code 0} true;
    out_$i76 := $load.i32($M.1, out_$p75);
    call {:si_unique_call 1484} {:cexpr "__cil_tmp45"} boogie_si_record_i32(out_$i76);
    goto corral_source_split_3604;

  corral_source_split_3602:
    assume {:verifier.code 0} true;
    out_$p75 := $i2p.i64.ref(out_$i74);
    goto corral_source_split_3603;

  corral_source_split_3601:
    assume {:verifier.code 0} true;
    out_$i74 := $add.i64(out_$i73, 560);
    call {:si_unique_call 1483} {:cexpr "__cil_tmp44"} boogie_si_record_i64(out_$i74);
    goto corral_source_split_3602;

  corral_source_split_3600:
    assume {:verifier.code 0} true;
    out_$i73 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1482} {:cexpr "__cil_tmp43"} boogie_si_record_i64(out_$i73);
    goto corral_source_split_3601;

  corral_source_split_3599:
    assume {:verifier.code 0} true;
    out_$i72 := $zext.i16.i32(out_$i71);
    call {:si_unique_call 1481} {:cexpr "block"} boogie_si_record_i32(out_$i72);
    goto corral_source_split_3600;

  corral_source_split_3598:
    assume {:verifier.code 0} true;
    out_$i71 := $load.i16($M.1, out_$p70);
    call {:si_unique_call 1480} {:cexpr "__cil_tmp42"} boogie_si_record_i16(out_$i71);
    goto corral_source_split_3599;

  corral_source_split_3597:
    assume {:verifier.code 0} true;
    out_$p70 := $add.ref(out_$p69, $mul.ref(out_$i65, 2));
    goto corral_source_split_3598;

  corral_source_split_3596:
    assume {:verifier.code 0} true;
    out_$p69 := $load.ref($M.1, out_$p68);
    goto corral_source_split_3597;

  corral_source_split_3595:
    assume {:verifier.code 0} true;
    out_$p68 := $i2p.i64.ref(out_$i67);
    goto corral_source_split_3596;

  corral_source_split_3594:
    assume {:verifier.code 0} true;
    out_$i67 := $add.i64(out_$i66, 552);
    call {:si_unique_call 1479} {:cexpr "__cil_tmp39"} boogie_si_record_i64(out_$i67);
    goto corral_source_split_3595;

  corral_source_split_3593:
    assume {:verifier.code 0} true;
    out_$i66 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1478} {:cexpr "__cil_tmp38"} boogie_si_record_i64(out_$i66);
    goto corral_source_split_3594;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i65 := $sext.i32.i64(out_$i64);
    call {:si_unique_call 1477} {:cexpr "__cil_tmp37"} boogie_si_record_i64(out_$i65);
    goto corral_source_split_3593;

  corral_source_split_3591:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb34:
    assume !(out_$i181 == 1);
    assume {:verifier.code 0} true;
    goto $bb35;

  corral_source_split_3752:
    assume {:verifier.code 0} true;
    goto $bb35;

  corral_source_split_3751:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1537} out_vslice_dummy_var_91 := __dynamic_pr_debug.ref.ref(in_$p5, .str.17);
    goto corral_source_split_3752;

  $bb33:
    assume out_$i181 == 1;
    goto corral_source_split_3751;

  corral_source_split_3700:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb33, $bb34;

  corral_source_split_3699:
    assume {:verifier.code 0} true;
    out_$i181 := $ne.i64(out_$i180, 0);
    goto corral_source_split_3700;

  corral_source_split_3698:
    assume {:verifier.code 0} true;
    out_$i180 := $sext.i32.i64(out_$i179);
    call {:si_unique_call 1517} {:cexpr "tmp___3"} boogie_si_record_i64(out_$i180);
    goto corral_source_split_3699;

  corral_source_split_3697:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1516} out_$i179 := __builtinx_expect.i64.i64(out_$i178, 0);
    goto corral_source_split_3698;

  corral_source_split_3696:
    assume {:verifier.code 0} true;
    out_$i178 := $and.i64(out_$i177, 1);
    call {:si_unique_call 1515} {:cexpr "__cil_tmp93"} boogie_si_record_i64(out_$i178);
    goto corral_source_split_3697;

  corral_source_split_3695:
    assume {:verifier.code 0} true;
    out_$i177 := $zext.i8.i64(out_$i176);
    call {:si_unique_call 1514} {:cexpr "__cil_tmp92"} boogie_si_record_i64(out_$i177);
    goto corral_source_split_3696;

  corral_source_split_3694:
    assume {:verifier.code 0} true;
    out_$i176 := $load.i8($M.1, out_$p175);
    call {:si_unique_call 1513} {:cexpr "__cil_tmp91"} boogie_si_record_i8(out_$i176);
    goto corral_source_split_3695;

  corral_source_split_3693:
    assume {:verifier.code 0} true;
    out_$p175 := $i2p.i64.ref(out_$i174);
    goto corral_source_split_3694;

  corral_source_split_3692:
    assume {:verifier.code 0} true;
    out_$i174 := $add.i64(out_$i173, 35);
    call {:si_unique_call 1512} {:cexpr "__cil_tmp90"} boogie_si_record_i64(out_$i174);
    goto corral_source_split_3693;

  corral_source_split_3691:
    assume {:verifier.code 0} true;
    out_$i173 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3692;

  corral_source_split_3690:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p172, 0);
    goto corral_source_split_3691;

  corral_source_split_3689:
    assume {:verifier.code 0} true;
    out_$p172 := $i2p.i64.ref(out_$i171);
    goto corral_source_split_3690;

  corral_source_split_3688:
    assume {:verifier.code 0} true;
    out_$i171 := $add.i64(out_$i170, 35);
    call {:si_unique_call 1511} {:cexpr "__cil_tmp89"} boogie_si_record_i64(out_$i171);
    goto corral_source_split_3689;

  corral_source_split_3687:
    assume {:verifier.code 0} true;
    out_$i170 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3688;

  corral_source_split_3686:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p169, 545);
    goto corral_source_split_3687;

  corral_source_split_3685:
    assume {:verifier.code 0} true;
    out_$p169 := $i2p.i64.ref(out_$i168);
    goto corral_source_split_3686;

  corral_source_split_3684:
    assume {:verifier.code 0} true;
    out_$i168 := $add.i64(out_$i167, 32);
    call {:si_unique_call 1510} {:cexpr "__cil_tmp88"} boogie_si_record_i64(out_$i168);
    goto corral_source_split_3685;

  corral_source_split_3683:
    assume {:verifier.code 0} true;
    out_$i167 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3684;

  corral_source_split_3682:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p166, .str.17);
    goto corral_source_split_3683;

  corral_source_split_3681:
    assume {:verifier.code 0} true;
    out_$p166 := $i2p.i64.ref(out_$i165);
    goto corral_source_split_3682;

  corral_source_split_3680:
    assume {:verifier.code 0} true;
    out_$i165 := $add.i64(out_$i164, 24);
    call {:si_unique_call 1509} {:cexpr "__cil_tmp87"} boogie_si_record_i64(out_$i165);
    goto corral_source_split_3681;

  corral_source_split_3679:
    assume {:verifier.code 0} true;
    out_$i164 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3680;

  corral_source_split_3678:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p163, .str.2);
    goto corral_source_split_3679;

  corral_source_split_3677:
    assume {:verifier.code 0} true;
    out_$p163 := $i2p.i64.ref(out_$i162);
    goto corral_source_split_3678;

  corral_source_split_3676:
    assume {:verifier.code 0} true;
    out_$i162 := $add.i64(out_$i161, 16);
    call {:si_unique_call 1508} {:cexpr "__cil_tmp86"} boogie_si_record_i64(out_$i162);
    goto corral_source_split_3677;

  corral_source_split_3675:
    assume {:verifier.code 0} true;
    out_$i161 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3676;

  corral_source_split_3674:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p160, .str.13);
    goto corral_source_split_3675;

  corral_source_split_3673:
    assume {:verifier.code 0} true;
    out_$p160 := $i2p.i64.ref(out_$i159);
    goto corral_source_split_3674;

  corral_source_split_3672:
    assume {:verifier.code 0} true;
    out_$i159 := $add.i64(out_$i158, 8);
    call {:si_unique_call 1507} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i159);
    goto corral_source_split_3673;

  corral_source_split_3671:
    assume {:verifier.code 0} true;
    out_$i158 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_3672;

  corral_source_split_3670:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p157, .str);
    goto corral_source_split_3671;

  $bb26:
    assume {:verifier.code 0} true;
    out_$p157 := $bitcast.ref.ref(in_$p5);
    goto corral_source_split_3670;

  $bb21:
    assume {:verifier.code 0} true;
    goto $bb26;

  corral_source_split_3668:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb24:
    assume out_$i119 == 1;
    goto corral_source_split_3668;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb24, $bb25;

  corral_source_split_3665:
    assume {:verifier.code 0} true;
    out_$i119 := $eq.i32(out_$i118, 65535);
    goto corral_source_split_3666;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    out_$i118 := $zext.i16.i32(out_$i117);
    call {:si_unique_call 1506} {:cexpr "__cil_tmp63"} boogie_si_record_i32(out_$i118);
    goto corral_source_split_3665;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    out_$i117 := $load.i16($M.1, out_$p116);
    call {:si_unique_call 1505} {:cexpr "__cil_tmp62"} boogie_si_record_i16(out_$i117);
    goto corral_source_split_3664;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    out_$p116 := $add.ref(out_$p115, $mul.ref(out_$i111, 2));
    goto corral_source_split_3663;

  corral_source_split_3661:
    assume {:verifier.code 0} true;
    out_$p115 := $load.ref($M.1, out_$p114);
    goto corral_source_split_3662;

  corral_source_split_3660:
    assume {:verifier.code 0} true;
    out_$p114 := $i2p.i64.ref(out_$i113);
    goto corral_source_split_3661;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    out_$i113 := $add.i64(out_$i112, 544);
    call {:si_unique_call 1504} {:cexpr "__cil_tmp59"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_3660;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    out_$i112 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1503} {:cexpr "__cil_tmp58"} boogie_si_record_i64(out_$i112);
    goto corral_source_split_3659;

  $bb23:
    assume {:verifier.code 0} true;
    out_$i111 := $sext.i32.i64(out_$i110);
    call {:si_unique_call 1502} {:cexpr "__cil_tmp57"} boogie_si_record_i64(out_$i111);
    goto corral_source_split_3658;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb22:
    call out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_vslice_dummy_var_90 := INFTL_dumpVUchains_loop_$bb22(in_$p0, in_$p4, out_$p106, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_vslice_dummy_var_90);
    goto $bb22_last;

  $bb22_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3656;

  corral_source_split_3654:
    assume {:verifier.code 0} true;
    out_$i109, out_$i110 := 0, out_$i72;
    goto $bb22;

  $bb31:
    assume out_$i156 == 1;
    assume {:verifier.code 0} true;
    out_$i109, out_$i110 := out_$i154, out_$i127;
    assume false;
    return;

  corral_source_split_3747:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    out_$i156 := $ult.i32(out_$i154, out_$i155);
    goto corral_source_split_3747;

  corral_source_split_3745:
    assume {:verifier.code 0} true;
    out_$i155 := $load.i32($M.1, out_$p106);
    call {:si_unique_call 1536} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i155);
    goto corral_source_split_3746;

  $bb30:
    assume {:verifier.code 0} true;
    out_$i154 := $add.i32(out_$i109, 1);
    call {:si_unique_call 1535} {:cexpr "i"} boogie_si_record_i32(out_$i154);
    goto corral_source_split_3745;

  $bb29:
    assume !(out_$i152 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    goto $bb30;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1534} out_vslice_dummy_var_90 := __dynamic_pr_debug.ref.ref.i32(in_$p4, .str.16, out_$i127);
    goto corral_source_split_3743;

  $bb28:
    assume out_$i152 == 1;
    goto corral_source_split_3742;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_3739:
    assume {:verifier.code 0} true;
    out_$i152 := $ne.i64(out_$i151, 0);
    goto corral_source_split_3740;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    out_$i151 := $sext.i32.i64(out_$i150);
    call {:si_unique_call 1533} {:cexpr "tmp___2"} boogie_si_record_i64(out_$i151);
    goto corral_source_split_3739;

  corral_source_split_3737:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1532} out_$i150 := __builtinx_expect.i64.i64(out_$i149, 0);
    goto corral_source_split_3738;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    out_$i149 := $and.i64(out_$i148, 1);
    call {:si_unique_call 1531} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i149);
    goto corral_source_split_3737;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    out_$i148 := $zext.i8.i64(out_$i147);
    call {:si_unique_call 1530} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i148);
    goto corral_source_split_3736;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    out_$i147 := $load.i8($M.1, out_$p146);
    call {:si_unique_call 1529} {:cexpr "__cil_tmp77"} boogie_si_record_i8(out_$i147);
    goto corral_source_split_3735;

  corral_source_split_3733:
    assume {:verifier.code 0} true;
    out_$p146 := $i2p.i64.ref(out_$i145);
    goto corral_source_split_3734;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    out_$i145 := $add.i64(out_$i144, 35);
    call {:si_unique_call 1528} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i145);
    goto corral_source_split_3733;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    out_$i144 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3732;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p143, 0);
    goto corral_source_split_3731;

  corral_source_split_3729:
    assume {:verifier.code 0} true;
    out_$p143 := $i2p.i64.ref(out_$i142);
    goto corral_source_split_3730;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    out_$i142 := $add.i64(out_$i141, 35);
    call {:si_unique_call 1527} {:cexpr "__cil_tmp75"} boogie_si_record_i64(out_$i142);
    goto corral_source_split_3729;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    out_$i141 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3728;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p140, 543);
    goto corral_source_split_3727;

  corral_source_split_3725:
    assume {:verifier.code 0} true;
    out_$p140 := $i2p.i64.ref(out_$i139);
    goto corral_source_split_3726;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    out_$i139 := $add.i64(out_$i138, 32);
    call {:si_unique_call 1526} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i139);
    goto corral_source_split_3725;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    out_$i138 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3724;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p137, .str.16);
    goto corral_source_split_3723;

  corral_source_split_3721:
    assume {:verifier.code 0} true;
    out_$p137 := $i2p.i64.ref(out_$i136);
    goto corral_source_split_3722;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    out_$i136 := $add.i64(out_$i135, 24);
    call {:si_unique_call 1525} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i136);
    goto corral_source_split_3721;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    out_$i135 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3720;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p134, .str.2);
    goto corral_source_split_3719;

  corral_source_split_3717:
    assume {:verifier.code 0} true;
    out_$p134 := $i2p.i64.ref(out_$i133);
    goto corral_source_split_3718;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    out_$i133 := $add.i64(out_$i132, 16);
    call {:si_unique_call 1524} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i133);
    goto corral_source_split_3717;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    out_$i132 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3716;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p131, .str.13);
    goto corral_source_split_3715;

  corral_source_split_3713:
    assume {:verifier.code 0} true;
    out_$p131 := $i2p.i64.ref(out_$i130);
    goto corral_source_split_3714;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    out_$i130 := $add.i64(out_$i129, 8);
    call {:si_unique_call 1523} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i130);
    goto corral_source_split_3713;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    out_$i129 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_3712;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p128, .str);
    goto corral_source_split_3711;

  corral_source_split_3709:
    assume {:verifier.code 0} true;
    out_$p128 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_3710;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    out_$i127 := $zext.i16.i32(out_$i126);
    call {:si_unique_call 1522} {:cexpr "block"} boogie_si_record_i32(out_$i127);
    goto corral_source_split_3709;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    out_$i126 := $load.i16($M.1, out_$p125);
    call {:si_unique_call 1521} {:cexpr "__cil_tmp69"} boogie_si_record_i16(out_$i126);
    goto corral_source_split_3708;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    out_$p125 := $add.ref(out_$p124, $mul.ref(out_$i120, 2));
    goto corral_source_split_3707;

  corral_source_split_3705:
    assume {:verifier.code 0} true;
    out_$p124 := $load.ref($M.1, out_$p123);
    goto corral_source_split_3706;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_3705;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, 544);
    call {:si_unique_call 1520} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_3704;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1519} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i121);
    goto corral_source_split_3703;

  $bb27:
    assume {:verifier.code 0} true;
    out_$i120 := $sext.i32.i64(out_$i110);
    call {:si_unique_call 1518} {:cexpr "__cil_tmp64"} boogie_si_record_i64(out_$i120);
    goto corral_source_split_3702;

  $bb25:
    assume !(out_$i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb19:
    assume out_$i108 == 1;
    goto corral_source_split_3654;

  corral_source_split_3652:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  corral_source_split_3651:
    assume {:verifier.code 0} true;
    out_$i108 := $ult.i32(0, out_$i107);
    goto corral_source_split_3652;

  corral_source_split_3650:
    assume {:verifier.code 0} true;
    out_$i107 := $load.i32($M.1, out_$p106);
    call {:si_unique_call 1501} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i107);
    goto corral_source_split_3651;

  corral_source_split_3649:
    assume {:verifier.code 0} true;
    out_$p106 := $i2p.i64.ref(out_$i105);
    goto corral_source_split_3650;

  corral_source_split_3648:
    assume {:verifier.code 0} true;
    out_$i105 := $add.i64(out_$i104, 560);
    call {:si_unique_call 1500} {:cexpr "__cil_tmp81"} boogie_si_record_i64(out_$i105);
    goto corral_source_split_3649;

  $bb18:
    assume {:verifier.code 0} true;
    out_$i104 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1499} {:cexpr "__cil_tmp80"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_3648;

  $bb17:
    assume !(out_$i102 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  corral_source_split_3646:
    assume {:verifier.code 0} true;
    goto $bb18;

  corral_source_split_3645:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1498} out_vslice_dummy_var_89 := __dynamic_pr_debug.ref.ref.i32.i32(in_$p3, .str.15, out_$i64, out_$i72);
    goto corral_source_split_3646;

  $bb16:
    assume out_$i102 == 1;
    goto corral_source_split_3645;

  corral_source_split_3643:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  corral_source_split_3642:
    assume {:verifier.code 0} true;
    out_$i102 := $ne.i64(out_$i101, 0);
    goto corral_source_split_3643;

  corral_source_split_3641:
    assume {:verifier.code 0} true;
    out_$i101 := $sext.i32.i64(out_$i100);
    call {:si_unique_call 1497} {:cexpr "tmp___1"} boogie_si_record_i64(out_$i101);
    goto corral_source_split_3642;

  corral_source_split_3640:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1496} out_$i100 := __builtinx_expect.i64.i64(out_$i99, 0);
    goto corral_source_split_3641;

  corral_source_split_3639:
    assume {:verifier.code 0} true;
    out_$i99 := $and.i64(out_$i98, 1);
    call {:si_unique_call 1495} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i99);
    goto corral_source_split_3640;

  corral_source_split_3638:
    assume {:verifier.code 0} true;
    out_$i98 := $zext.i8.i64(out_$i97);
    call {:si_unique_call 1494} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_3639;

  corral_source_split_3637:
    assume {:verifier.code 0} true;
    out_$i97 := $load.i8($M.1, out_$p96);
    call {:si_unique_call 1493} {:cexpr "__cil_tmp54"} boogie_si_record_i8(out_$i97);
    goto corral_source_split_3638;

  corral_source_split_3636:
    assume {:verifier.code 0} true;
    out_$p96 := $i2p.i64.ref(out_$i95);
    goto corral_source_split_3637;

  corral_source_split_3635:
    assume {:verifier.code 0} true;
    out_$i95 := $add.i64(out_$i94, 35);
    call {:si_unique_call 1492} {:cexpr "__cil_tmp53"} boogie_si_record_i64(out_$i95);
    goto corral_source_split_3636;

  corral_source_split_3634:
    assume {:verifier.code 0} true;
    out_$i94 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3635;

  corral_source_split_3633:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p93, 0);
    goto corral_source_split_3634;

  corral_source_split_3632:
    assume {:verifier.code 0} true;
    out_$p93 := $i2p.i64.ref(out_$i92);
    goto corral_source_split_3633;

  corral_source_split_3631:
    assume {:verifier.code 0} true;
    out_$i92 := $add.i64(out_$i91, 35);
    call {:si_unique_call 1491} {:cexpr "__cil_tmp52"} boogie_si_record_i64(out_$i92);
    goto corral_source_split_3632;

  corral_source_split_3630:
    assume {:verifier.code 0} true;
    out_$i91 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3631;

  corral_source_split_3629:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p90, 538);
    goto corral_source_split_3630;

  corral_source_split_3628:
    assume {:verifier.code 0} true;
    out_$p90 := $i2p.i64.ref(out_$i89);
    goto corral_source_split_3629;

  corral_source_split_3627:
    assume {:verifier.code 0} true;
    out_$i89 := $add.i64(out_$i88, 32);
    call {:si_unique_call 1490} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i89);
    goto corral_source_split_3628;

  corral_source_split_3626:
    assume {:verifier.code 0} true;
    out_$i88 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3627;

  corral_source_split_3625:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p87, .str.15);
    goto corral_source_split_3626;

  corral_source_split_3624:
    assume {:verifier.code 0} true;
    out_$p87 := $i2p.i64.ref(out_$i86);
    goto corral_source_split_3625;

  corral_source_split_3623:
    assume {:verifier.code 0} true;
    out_$i86 := $add.i64(out_$i85, 24);
    call {:si_unique_call 1489} {:cexpr "__cil_tmp50"} boogie_si_record_i64(out_$i86);
    goto corral_source_split_3624;

  corral_source_split_3622:
    assume {:verifier.code 0} true;
    out_$i85 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3623;

  corral_source_split_3621:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p84, .str.2);
    goto corral_source_split_3622;

  corral_source_split_3620:
    assume {:verifier.code 0} true;
    out_$p84 := $i2p.i64.ref(out_$i83);
    goto corral_source_split_3621;

  corral_source_split_3619:
    assume {:verifier.code 0} true;
    out_$i83 := $add.i64(out_$i82, 16);
    call {:si_unique_call 1488} {:cexpr "__cil_tmp49"} boogie_si_record_i64(out_$i83);
    goto corral_source_split_3620;

  corral_source_split_3618:
    assume {:verifier.code 0} true;
    out_$i82 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3619;

  corral_source_split_3617:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p81, .str.13);
    goto corral_source_split_3618;

  corral_source_split_3616:
    assume {:verifier.code 0} true;
    out_$p81 := $i2p.i64.ref(out_$i80);
    goto corral_source_split_3617;

  corral_source_split_3615:
    assume {:verifier.code 0} true;
    out_$i80 := $add.i64(out_$i79, 8);
    call {:si_unique_call 1487} {:cexpr "__cil_tmp48"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_3616;

  corral_source_split_3614:
    assume {:verifier.code 0} true;
    out_$i79 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_3615;

  corral_source_split_3613:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p78, .str);
    goto corral_source_split_3614;

  $bb15:
    assume {:verifier.code 0} true;
    out_$p78 := $bitcast.ref.ref(in_$p3);
    goto corral_source_split_3613;

  $bb13:
    assume !(out_$i77 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb20:
    assume {:verifier.code 0} true;
    assume !(out_$i108 == 1);
    goto $bb21;

  corral_source_split_3749:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb32:
    assume !(out_$i156 == 1);
    goto corral_source_split_3749;

  $bb36_dummy:
    call {:si_unique_call 1} out_$i65, out_$i66, out_$i67, out_$p68, out_$p69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$p87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_$p157, out_$i158, out_$i159, out_$p160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$p166, out_$i167, out_$i168, out_$p169, out_$i170, out_$i171, out_$p172, out_$i173, out_$i174, out_$p175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i183, out_$i184, out_$i185, out_$i64, out_vslice_dummy_var_89, out_vslice_dummy_var_90, out_vslice_dummy_var_91 := INFTL_dumpVUchains_loop_$bb10(in_$p0, in_$p3, in_$p4, in_$p5, in_$p61, out_$i65, out_$i66, out_$i67, out_$p68, out_$p69, out_$p70, out_$i71, out_$i72, out_$i73, out_$i74, out_$p75, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$p87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i111, out_$i112, out_$i113, out_$p114, out_$p115, out_$p116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i121, out_$i122, out_$p123, out_$p124, out_$p125, out_$i126, out_$i127, out_$p128, out_$i129, out_$i130, out_$p131, out_$i132, out_$i133, out_$p134, out_$i135, out_$i136, out_$p137, out_$i138, out_$i139, out_$p140, out_$i141, out_$i142, out_$p143, out_$i144, out_$i145, out_$p146, out_$i147, out_$i148, out_$i149, out_$i150, out_$i151, out_$i152, out_$i154, out_$i155, out_$i156, out_$i109, out_$i110, out_$p157, out_$i158, out_$i159, out_$p160, out_$i161, out_$i162, out_$p163, out_$i164, out_$i165, out_$p166, out_$i167, out_$i168, out_$p169, out_$i170, out_$i171, out_$p172, out_$i173, out_$i174, out_$p175, out_$i176, out_$i177, out_$i178, out_$i179, out_$i180, out_$i181, out_$i183, out_$i184, out_$i185, out_$i64, out_vslice_dummy_var_89, out_vslice_dummy_var_90, out_vslice_dummy_var_91);
    return;

  exit:
    return;
}



procedure INFTL_dumpVUchains_loop_$bb10(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p61: ref, in_$i65: i64, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$p69: ref, in_$p70: ref, in_$i71: i16, in_$i72: i32, in_$i73: i64, in_$i74: i64, in_$p75: ref, in_$i76: i32, in_$i77: i1, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i64, in_$i86: i64, in_$p87: ref, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i64, in_$i92: i64, in_$p93: ref, in_$i94: i64, in_$i95: i64, in_$p96: ref, in_$i97: i8, in_$i98: i64, in_$i99: i64, in_$i100: i32, in_$i101: i64, in_$i102: i1, in_$i104: i64, in_$i105: i64, in_$p106: ref, in_$i107: i32, in_$i108: i1, in_$i111: i64, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$p115: ref, in_$p116: ref, in_$i117: i16, in_$i118: i32, in_$i119: i1, in_$i120: i64, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$p124: ref, in_$p125: ref, in_$i126: i16, in_$i127: i32, in_$p128: ref, in_$i129: i64, in_$i130: i64, in_$p131: ref, in_$i132: i64, in_$i133: i64, in_$p134: ref, in_$i135: i64, in_$i136: i64, in_$p137: ref, in_$i138: i64, in_$i139: i64, in_$p140: ref, in_$i141: i64, in_$i142: i64, in_$p143: ref, in_$i144: i64, in_$i145: i64, in_$p146: ref, in_$i147: i8, in_$i148: i64, in_$i149: i64, in_$i150: i32, in_$i151: i64, in_$i152: i1, in_$i154: i32, in_$i155: i32, in_$i156: i1, in_$i109: i32, in_$i110: i32, in_$p157: ref, in_$i158: i64, in_$i159: i64, in_$p160: ref, in_$i161: i64, in_$i162: i64, in_$p163: ref, in_$i164: i64, in_$i165: i64, in_$p166: ref, in_$i167: i64, in_$i168: i64, in_$p169: ref, in_$i170: i64, in_$i171: i64, in_$p172: ref, in_$i173: i64, in_$i174: i64, in_$p175: ref, in_$i176: i8, in_$i177: i64, in_$i178: i64, in_$i179: i32, in_$i180: i64, in_$i181: i1, in_$i183: i32, in_$i184: i32, in_$i185: i1, in_$i64: i32, in_vslice_dummy_var_89: i32, in_vslice_dummy_var_90: i32, in_vslice_dummy_var_91: i32) returns (out_$i65: i64, out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$p69: ref, out_$p70: ref, out_$i71: i16, out_$i72: i32, out_$i73: i64, out_$i74: i64, out_$p75: ref, out_$i76: i32, out_$i77: i1, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i64, out_$i86: i64, out_$p87: ref, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i64, out_$i92: i64, out_$p93: ref, out_$i94: i64, out_$i95: i64, out_$p96: ref, out_$i97: i8, out_$i98: i64, out_$i99: i64, out_$i100: i32, out_$i101: i64, out_$i102: i1, out_$i104: i64, out_$i105: i64, out_$p106: ref, out_$i107: i32, out_$i108: i1, out_$i111: i64, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$p115: ref, out_$p116: ref, out_$i117: i16, out_$i118: i32, out_$i119: i1, out_$i120: i64, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$p124: ref, out_$p125: ref, out_$i126: i16, out_$i127: i32, out_$p128: ref, out_$i129: i64, out_$i130: i64, out_$p131: ref, out_$i132: i64, out_$i133: i64, out_$p134: ref, out_$i135: i64, out_$i136: i64, out_$p137: ref, out_$i138: i64, out_$i139: i64, out_$p140: ref, out_$i141: i64, out_$i142: i64, out_$p143: ref, out_$i144: i64, out_$i145: i64, out_$p146: ref, out_$i147: i8, out_$i148: i64, out_$i149: i64, out_$i150: i32, out_$i151: i64, out_$i152: i1, out_$i154: i32, out_$i155: i32, out_$i156: i1, out_$i109: i32, out_$i110: i32, out_$p157: ref, out_$i158: i64, out_$i159: i64, out_$p160: ref, out_$i161: i64, out_$i162: i64, out_$p163: ref, out_$i164: i64, out_$i165: i64, out_$p166: ref, out_$i167: i64, out_$i168: i64, out_$p169: ref, out_$i170: i64, out_$i171: i64, out_$p172: ref, out_$i173: i64, out_$i174: i64, out_$p175: ref, out_$i176: i8, out_$i177: i64, out_$i178: i64, out_$i179: i32, out_$i180: i64, out_$i181: i1, out_$i183: i32, out_$i184: i32, out_$i185: i1, out_$i64: i32, out_vslice_dummy_var_89: i32, out_vslice_dummy_var_90: i32, out_vslice_dummy_var_91: i32);
  modifies $M.1, $M.3;



implementation INFTL_formatblock_loop_$bb7(in_$p0: ref, in_$p7: ref, in_$p67: ref, in_$i71: i64, in_$i72: i64, in_$p73: ref, in_$p74: ref, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i8, in_$i80: i32, in_$i81: i1, in_$i83: i64, in_$i84: i64, in_$p85: ref, in_$i86: i64, in_$i87: i32, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i64, in_$i92: i32, in_$i93: i32, in_$i94: i1, in_$i95: i64, in_$i96: i64, in_$p97: ref, in_$i98: i64, in_$i99: i32, in_$i100: i32, in_$i101: i64, in_$i102: i64, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$i108: i64, in_$p109: ref, in_$i110: i64, in_$i111: i64, in_$p112: ref, in_$i113: i32, in_$i114: i1, in_$i70: i32, in_vslice_dummy_var_94: i32) returns (out_$i71: i64, out_$i72: i64, out_$p73: ref, out_$p74: ref, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i8, out_$i80: i32, out_$i81: i1, out_$i83: i64, out_$i84: i64, out_$p85: ref, out_$i86: i64, out_$i87: i32, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i64, out_$i92: i32, out_$i93: i32, out_$i94: i1, out_$i95: i64, out_$i96: i64, out_$p97: ref, out_$i98: i64, out_$i99: i32, out_$i100: i32, out_$i101: i64, out_$i102: i64, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$i108: i64, out_$p109: ref, out_$i110: i64, out_$i111: i64, out_$p112: ref, out_$i113: i32, out_$i114: i1, out_$i70: i32, out_vslice_dummy_var_94: i32)
{

  entry:
    out_$i71, out_$i72, out_$p73, out_$p74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i95, out_$i96, out_$p97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i70, out_vslice_dummy_var_94 := in_$i71, in_$i72, in_$p73, in_$p74, in_$i76, in_$i77, in_$p78, in_$i79, in_$i80, in_$i81, in_$i83, in_$i84, in_$p85, in_$i86, in_$i87, in_$i88, in_$i89, in_$p90, in_$i91, in_$i92, in_$i93, in_$i94, in_$i95, in_$i96, in_$p97, in_$i98, in_$i99, in_$i100, in_$i101, in_$i102, in_$i103, in_$i104, in_$p105, in_$i106, in_$i107, in_$i108, in_$p109, in_$i110, in_$i111, in_$p112, in_$i113, in_$i114, in_$i70, in_vslice_dummy_var_94;
    goto $bb7, exit;

  $bb7:
    assume {:verifier.code 0} true;
    goto corral_source_split_3873;

  $bb16:
    assume out_$i114 == 1;
    assume {:verifier.code 0} true;
    out_$i70 := out_$i100;
    goto $bb16_dummy;

  corral_source_split_3935:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16;

  corral_source_split_3934:
    assume {:verifier.code 0} true;
    out_$i114 := $ult.i32(out_$i100, out_$i113);
    goto corral_source_split_3935;

  corral_source_split_3933:
    assume {:verifier.code 0} true;
    out_$i113 := $load.i32($M.1, in_$p67);
    call {:si_unique_call 1627} {:cexpr "__cil_tmp79"} boogie_si_record_i32(out_$i113);
    goto corral_source_split_3934;

  corral_source_split_3932:
    assume {:verifier.code 0} true;
    $M.1 := $store.i64($M.1, out_$p112, out_$i111);
    goto corral_source_split_3933;

  corral_source_split_3931:
    assume {:verifier.code 0} true;
    out_$p112 := $i2p.i64.ref(out_$i102);
    goto corral_source_split_3932;

  corral_source_split_3930:
    assume {:verifier.code 0} true;
    out_$i111 := $add.i64(out_$i110, out_$i106);
    goto corral_source_split_3931;

  corral_source_split_3929:
    assume {:verifier.code 0} true;
    out_$i110 := $load.i64($M.1, out_$p109);
    call {:si_unique_call 1626} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i110);
    goto corral_source_split_3930;

  corral_source_split_3928:
    assume {:verifier.code 0} true;
    out_$p109 := $i2p.i64.ref(out_$i108);
    goto corral_source_split_3929;

  corral_source_split_3927:
    assume {:verifier.code 0} true;
    out_$i108 := $add.i64(out_$i107, 8);
    call {:si_unique_call 1625} {:cexpr "__cil_tmp75"} boogie_si_record_i64(out_$i108);
    goto corral_source_split_3928;

  corral_source_split_3926:
    assume {:verifier.code 0} true;
    out_$i107 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1624} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i107);
    goto corral_source_split_3927;

  corral_source_split_3925:
    assume {:verifier.code 0} true;
    out_$i106 := $load.i64($M.1, out_$p105);
    call {:si_unique_call 1623} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i106);
    goto corral_source_split_3926;

  corral_source_split_3924:
    assume {:verifier.code 0} true;
    out_$p105 := $i2p.i64.ref(out_$i104);
    goto corral_source_split_3925;

  corral_source_split_3923:
    assume {:verifier.code 0} true;
    out_$i104 := $add.i64(out_$i103, 16);
    call {:si_unique_call 1622} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_3924;

  corral_source_split_3922:
    assume {:verifier.code 0} true;
    out_$i103 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1621} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i103);
    goto corral_source_split_3923;

  corral_source_split_3921:
    assume {:verifier.code 0} true;
    out_$i102 := $add.i64(out_$i101, 8);
    call {:si_unique_call 1620} {:cexpr "__cil_tmp70"} boogie_si_record_i64(out_$i102);
    goto corral_source_split_3922;

  corral_source_split_3920:
    assume {:verifier.code 0} true;
    out_$i101 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1619} {:cexpr "__cil_tmp69"} boogie_si_record_i64(out_$i101);
    goto corral_source_split_3921;

  corral_source_split_3919:
    assume {:verifier.code 0} true;
    out_$i100 := $add.i32(out_$i99, out_$i70);
    call {:si_unique_call 1618} {:cexpr "__cil_tmp68"} boogie_si_record_i32(out_$i100);
    goto corral_source_split_3920;

  corral_source_split_3918:
    assume {:verifier.code 0} true;
    out_$i99 := $trunc.i64.i32(out_$i98);
    call {:si_unique_call 1617} {:cexpr "__cil_tmp67"} boogie_si_record_i32(out_$i99);
    goto corral_source_split_3919;

  corral_source_split_3917:
    assume {:verifier.code 0} true;
    out_$i98 := $load.i64($M.1, out_$p97);
    call {:si_unique_call 1616} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_3918;

  corral_source_split_3916:
    assume {:verifier.code 0} true;
    out_$p97 := $i2p.i64.ref(out_$i96);
    goto corral_source_split_3917;

  corral_source_split_3915:
    assume {:verifier.code 0} true;
    out_$i96 := $add.i64(out_$i95, 16);
    call {:si_unique_call 1615} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i96);
    goto corral_source_split_3916;

  $bb15:
    assume {:verifier.code 0} true;
    out_$i95 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1614} {:cexpr "__cil_tmp64"} boogie_si_record_i64(out_$i95);
    goto corral_source_split_3915;

  $bb14:
    assume !(out_$i94 == 1);
    assume {:verifier.code 0} true;
    goto $bb15;

  corral_source_split_3911:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb14;

  corral_source_split_3910:
    assume {:verifier.code 0} true;
    out_$i94 := $ne.i32(out_$i93, 0);
    goto corral_source_split_3911;

  corral_source_split_3909:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1612} out_$i93 := check_free_sectors(in_$p0, out_$i87, out_$i92, 1);
    call {:si_unique_call 1613} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i93);
    goto corral_source_split_3910;

  corral_source_split_3908:
    assume {:verifier.code 0} true;
    out_$i92 := $trunc.i64.i32(out_$i91);
    call {:si_unique_call 1611} {:cexpr "__cil_tmp62"} boogie_si_record_i32(out_$i92);
    goto corral_source_split_3909;

  corral_source_split_3907:
    assume {:verifier.code 0} true;
    out_$i91 := $load.i64($M.1, out_$p90);
    call {:si_unique_call 1610} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i91);
    goto corral_source_split_3908;

  corral_source_split_3906:
    assume {:verifier.code 0} true;
    out_$p90 := $i2p.i64.ref(out_$i89);
    goto corral_source_split_3907;

  corral_source_split_3905:
    assume {:verifier.code 0} true;
    out_$i89 := $add.i64(out_$i88, 16);
    call {:si_unique_call 1609} {:cexpr "__cil_tmp60"} boogie_si_record_i64(out_$i89);
    goto corral_source_split_3906;

  corral_source_split_3904:
    assume {:verifier.code 0} true;
    out_$i88 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1608} {:cexpr "__cil_tmp59"} boogie_si_record_i64(out_$i88);
    goto corral_source_split_3905;

  corral_source_split_3903:
    assume {:verifier.code 0} true;
    out_$i87 := $trunc.i64.i32(out_$i86);
    call {:si_unique_call 1607} {:cexpr "__cil_tmp58"} boogie_si_record_i32(out_$i87);
    goto corral_source_split_3904;

  corral_source_split_3902:
    assume {:verifier.code 0} true;
    out_$i86 := $load.i64($M.1, out_$p85);
    call {:si_unique_call 1606} {:cexpr "__cil_tmp57"} boogie_si_record_i64(out_$i86);
    goto corral_source_split_3903;

  corral_source_split_3901:
    assume {:verifier.code 0} true;
    out_$p85 := $i2p.i64.ref(out_$i84);
    goto corral_source_split_3902;

  corral_source_split_3900:
    assume {:verifier.code 0} true;
    out_$i84 := $add.i64(out_$i83, 8);
    call {:si_unique_call 1605} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i84);
    goto corral_source_split_3901;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i83 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1604} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i83);
    goto corral_source_split_3900;

  $bb10:
    assume !(out_$i81 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_3885:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10;

  corral_source_split_3884:
    assume {:verifier.code 0} true;
    out_$i81 := $eq.i32(out_$i80, 16);
    goto corral_source_split_3885;

  corral_source_split_3883:
    assume {:verifier.code 0} true;
    out_$i80 := $zext.i8.i32(out_$i79);
    call {:si_unique_call 1596} {:cexpr "__cil_tmp54"} boogie_si_record_i32(out_$i80);
    goto corral_source_split_3884;

  corral_source_split_3882:
    assume {:verifier.code 0} true;
    out_$i79 := $load.i8($M.1, out_$p78);
    call {:si_unique_call 1595} {:cexpr "__cil_tmp53"} boogie_si_record_i8(out_$i79);
    goto corral_source_split_3883;

  corral_source_split_3881:
    assume {:verifier.code 0} true;
    out_$p78 := $i2p.i64.ref(out_$i77);
    goto corral_source_split_3882;

  corral_source_split_3880:
    assume {:verifier.code 0} true;
    out_$i77 := $add.i64(out_$i76, 72);
    call {:si_unique_call 1594} {:cexpr "__cil_tmp52"} boogie_si_record_i64(out_$i77);
    goto corral_source_split_3881;

  corral_source_split_3879:
    assume {:verifier.code 0} true;
    out_$i76 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 1593} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i76);
    goto corral_source_split_3880;

  corral_source_split_3878:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1592} out_vslice_dummy_var_94 := mtd_erase(out_$p74, in_$p7);
    goto corral_source_split_3879;

  corral_source_split_3877:
    assume {:verifier.code 0} true;
    out_$p74 := $load.ref($M.1, out_$p73);
    goto corral_source_split_3878;

  corral_source_split_3876:
    assume {:verifier.code 0} true;
    out_$p73 := $i2p.i64.ref(out_$i72);
    goto corral_source_split_3877;

  corral_source_split_3875:
    assume {:verifier.code 0} true;
    out_$i72 := $add.i64(out_$i71, 24);
    call {:si_unique_call 1591} {:cexpr "__cil_tmp49"} boogie_si_record_i64(out_$i72);
    goto corral_source_split_3876;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i71 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1590} {:cexpr "__cil_tmp48"} boogie_si_record_i64(out_$i71);
    goto corral_source_split_3875;

  corral_source_split_3873:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb16_dummy:
    call {:si_unique_call 1} out_$i71, out_$i72, out_$p73, out_$p74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i95, out_$i96, out_$p97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i70, out_vslice_dummy_var_94 := INFTL_formatblock_loop_$bb7(in_$p0, in_$p7, in_$p67, out_$i71, out_$i72, out_$p73, out_$p74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i83, out_$i84, out_$p85, out_$i86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$i93, out_$i94, out_$i95, out_$i96, out_$p97, out_$i98, out_$i99, out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$p112, out_$i113, out_$i114, out_$i70, out_vslice_dummy_var_94);
    return;

  exit:
    return;
}



procedure INFTL_formatblock_loop_$bb7(in_$p0: ref, in_$p7: ref, in_$p67: ref, in_$i71: i64, in_$i72: i64, in_$p73: ref, in_$p74: ref, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i8, in_$i80: i32, in_$i81: i1, in_$i83: i64, in_$i84: i64, in_$p85: ref, in_$i86: i64, in_$i87: i32, in_$i88: i64, in_$i89: i64, in_$p90: ref, in_$i91: i64, in_$i92: i32, in_$i93: i32, in_$i94: i1, in_$i95: i64, in_$i96: i64, in_$p97: ref, in_$i98: i64, in_$i99: i32, in_$i100: i32, in_$i101: i64, in_$i102: i64, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$i108: i64, in_$p109: ref, in_$i110: i64, in_$i111: i64, in_$p112: ref, in_$i113: i32, in_$i114: i1, in_$i70: i32, in_vslice_dummy_var_94: i32) returns (out_$i71: i64, out_$i72: i64, out_$p73: ref, out_$p74: ref, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i8, out_$i80: i32, out_$i81: i1, out_$i83: i64, out_$i84: i64, out_$p85: ref, out_$i86: i64, out_$i87: i32, out_$i88: i64, out_$i89: i64, out_$p90: ref, out_$i91: i64, out_$i92: i32, out_$i93: i32, out_$i94: i1, out_$i95: i64, out_$i96: i64, out_$p97: ref, out_$i98: i64, out_$i99: i32, out_$i100: i32, out_$i101: i64, out_$i102: i64, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$i108: i64, out_$p109: ref, out_$i110: i64, out_$i111: i64, out_$p112: ref, out_$i113: i32, out_$i114: i1, out_$i70: i32, out_vslice_dummy_var_94: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation check_free_sectors_loop_$bb4(in_$i2: i32, in_$i3: i32, in_$p4: ref, in_$p5: ref, in_$p21: ref, in_$i25: i64, in_$p26: ref, in_$i27: i32, in_$i28: i1, in_$p30: ref, in_$i31: i32, in_$i32: i1, in_$i33: i1, in_$i34: i64, in_$i35: i64, in_$i36: i64, in_$p37: ref, in_$i38: i32, in_$i39: i64, in_$p40: ref, in_$p41: ref, in_$i42: i32, in_$i43: i1, in_$p44: ref, in_$p45: ref, in_$i46: i64, in_$i47: i64, in_$p48: ref, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i53: i32, in_$i54: i1, in_$i23: i32, in_$i24: i32) returns (out_$i25: i64, out_$p26: ref, out_$i27: i32, out_$i28: i1, out_$p30: ref, out_$i31: i32, out_$i32: i1, out_$i33: i1, out_$i34: i64, out_$i35: i64, out_$i36: i64, out_$p37: ref, out_$i38: i32, out_$i39: i64, out_$p40: ref, out_$p41: ref, out_$i42: i32, out_$i43: i1, out_$p44: ref, out_$p45: ref, out_$i46: i64, out_$i47: i64, out_$p48: ref, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i53: i32, out_$i54: i1, out_$i23: i32, out_$i24: i32)
{

  entry:
    out_$i25, out_$p26, out_$i27, out_$i28, out_$p30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p44, out_$p45, out_$i46, out_$i47, out_$p48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i23, out_$i24 := in_$i25, in_$p26, in_$i27, in_$i28, in_$p30, in_$i31, in_$i32, in_$i33, in_$i34, in_$i35, in_$i36, in_$p37, in_$i38, in_$i39, in_$p40, in_$p41, in_$i42, in_$i43, in_$p44, in_$p45, in_$i46, in_$i47, in_$p48, in_$i49, in_$i50, in_$i51, in_$i52, in_$i53, in_$i54, in_$i23, in_$i24;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4016;

  $bb22:
    assume out_$i54 == 1;
    assume {:verifier.code 0} true;
    out_$i23, out_$i24 := out_$i53, out_$i52;
    goto $bb22_dummy;

  corral_source_split_4062:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22;

  corral_source_split_4061:
    assume {:verifier.code 0} true;
    out_$i54 := $slt.i32(out_$i53, in_$i2);
    goto corral_source_split_4062;

  corral_source_split_4060:
    assume {:verifier.code 0} true;
    out_$i53 := $add.i32(out_$i23, 512);
    call {:si_unique_call 1688} {:cexpr "i"} boogie_si_record_i32(out_$i53);
    goto corral_source_split_4061;

  $bb21:
    assume {:verifier.code 0} true;
    out_$i52 := $add.i32(out_$i24, 512);
    call {:si_unique_call 1687} {:cexpr "address"} boogie_si_record_i32(out_$i52);
    goto corral_source_split_4060;

  $bb14:
    assume !(out_$i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb20:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb19:
    assume !(out_$i51 == 1);
    assume {:verifier.code 0} true;
    goto $bb20;

  corral_source_split_4056:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19;

  corral_source_split_4055:
    assume {:verifier.code 0} true;
    out_$i51 := $ne.i32(out_$i50, 0);
    goto corral_source_split_4056;

  corral_source_split_4054:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1685} out_$i50 := memcmpb(out_$p45, 255, out_$i49);
    call {:si_unique_call 1686} {:cexpr "tmp___3"} boogie_si_record_i32(out_$i50);
    goto corral_source_split_4055;

  corral_source_split_4053:
    assume {:verifier.code 0} true;
    out_$i49 := $load.i32($M.1, out_$p48);
    call {:si_unique_call 1684} {:cexpr "__cil_tmp43"} boogie_si_record_i32(out_$i49);
    goto corral_source_split_4054;

  corral_source_split_4052:
    assume {:verifier.code 0} true;
    out_$p48 := $i2p.i64.ref(out_$i47);
    goto corral_source_split_4053;

  corral_source_split_4051:
    assume {:verifier.code 0} true;
    out_$i47 := $add.i64(out_$i46, 28);
    call {:si_unique_call 1683} {:cexpr "__cil_tmp42"} boogie_si_record_i64(out_$i47);
    goto corral_source_split_4052;

  corral_source_split_4050:
    assume {:verifier.code 0} true;
    out_$i46 := $p2i.ref.i64(in_$p21);
    call {:si_unique_call 1682} {:cexpr "__cil_tmp41"} boogie_si_record_i64(out_$i46);
    goto corral_source_split_4051;

  corral_source_split_4049:
    assume {:verifier.code 0} true;
    out_$p45 := $add.ref(out_$p44, $mul.ref(512, 1));
    goto corral_source_split_4050;

  $bb17:
    assume {:verifier.code 0} true;
    out_$p44 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_4049;

  $bb16:
    assume !(out_$i43 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  corral_source_split_4045:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16;

  corral_source_split_4044:
    assume {:verifier.code 0} true;
    out_$i43 := $slt.i32(out_$i42, 0);
    goto corral_source_split_4045;

  corral_source_split_4043:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1680} out_$i42 := inftl_read_oob(in_$p21, out_$i34, out_$i39, in_$p5, out_$p41);
    call {:si_unique_call 1681} {:cexpr "tmp___2"} boogie_si_record_i32(out_$i42);
    goto corral_source_split_4044;

  corral_source_split_4042:
    assume {:verifier.code 0} true;
    out_$p41 := $add.ref(out_$p40, $mul.ref(512, 1));
    goto corral_source_split_4043;

  corral_source_split_4041:
    assume {:verifier.code 0} true;
    out_$p40 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_4042;

  corral_source_split_4040:
    assume {:verifier.code 0} true;
    out_$i39 := $zext.i32.i64(out_$i38);
    call {:si_unique_call 1679} {:cexpr "__cil_tmp36"} boogie_si_record_i64(out_$i39);
    goto corral_source_split_4041;

  corral_source_split_4039:
    assume {:verifier.code 0} true;
    out_$i38 := $load.i32($M.1, out_$p37);
    call {:si_unique_call 1678} {:cexpr "__cil_tmp35"} boogie_si_record_i32(out_$i38);
    goto corral_source_split_4040;

  corral_source_split_4038:
    assume {:verifier.code 0} true;
    out_$p37 := $i2p.i64.ref(out_$i36);
    goto corral_source_split_4039;

  corral_source_split_4037:
    assume {:verifier.code 0} true;
    out_$i36 := $add.i64(out_$i35, 28);
    call {:si_unique_call 1677} {:cexpr "__cil_tmp34"} boogie_si_record_i64(out_$i36);
    goto corral_source_split_4038;

  corral_source_split_4036:
    assume {:verifier.code 0} true;
    out_$i35 := $p2i.ref.i64(in_$p21);
    call {:si_unique_call 1676} {:cexpr "__cil_tmp33"} boogie_si_record_i64(out_$i35);
    goto corral_source_split_4037;

  corral_source_split_4035:
    assume {:verifier.code 0} true;
    out_$i34 := $zext.i32.i64(out_$i24);
    call {:si_unique_call 1675} {:cexpr "__cil_tmp32"} boogie_si_record_i64(out_$i34);
    goto corral_source_split_4036;

  $bb13:
    assume out_$i33 == 1;
    goto corral_source_split_4035;

  corral_source_split_4033:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i33 := $ne.i32(in_$i3, 0);
    goto corral_source_split_4033;

  $bb11:
    assume !(out_$i32 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_4029:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11;

  corral_source_split_4028:
    assume {:verifier.code 0} true;
    out_$i32 := $ne.i32(out_$i31, 0);
    goto corral_source_split_4029;

  corral_source_split_4027:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1673} out_$i31 := memcmpb(out_$p30, 255, 512);
    call {:si_unique_call 1674} {:cexpr "tmp___1"} boogie_si_record_i32(out_$i31);
    goto corral_source_split_4028;

  $bb9:
    assume {:verifier.code 0} true;
    out_$p30 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_4027;

  $bb7:
    assume !(out_$i28 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  corral_source_split_4021:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7;

  corral_source_split_4020:
    assume {:verifier.code 0} true;
    out_$i28 := $ne.i32(out_$i27, 0);
    goto corral_source_split_4021;

  corral_source_split_4019:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1671} out_$i27 := mtd_read(in_$p21, out_$i25, 512, in_$p5, out_$p26);
    call {:si_unique_call 1672} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i27);
    goto corral_source_split_4020;

  corral_source_split_4018:
    assume {:verifier.code 0} true;
    out_$p26 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_4019;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i25 := $zext.i32.i64(out_$i24);
    call {:si_unique_call 1670} {:cexpr "__cil_tmp29"} boogie_si_record_i64(out_$i25);
    goto corral_source_split_4018;

  corral_source_split_4016:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb22_dummy:
    call {:si_unique_call 1} out_$i25, out_$p26, out_$i27, out_$i28, out_$p30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p44, out_$p45, out_$i46, out_$i47, out_$p48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i23, out_$i24 := check_free_sectors_loop_$bb4(in_$i2, in_$i3, in_$p4, in_$p5, in_$p21, out_$i25, out_$p26, out_$i27, out_$i28, out_$p30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$p37, out_$i38, out_$i39, out_$p40, out_$p41, out_$i42, out_$i43, out_$p44, out_$p45, out_$i46, out_$i47, out_$p48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i23, out_$i24);
    return;

  exit:
    return;
}



procedure check_free_sectors_loop_$bb4(in_$i2: i32, in_$i3: i32, in_$p4: ref, in_$p5: ref, in_$p21: ref, in_$i25: i64, in_$p26: ref, in_$i27: i32, in_$i28: i1, in_$p30: ref, in_$i31: i32, in_$i32: i1, in_$i33: i1, in_$i34: i64, in_$i35: i64, in_$i36: i64, in_$p37: ref, in_$i38: i32, in_$i39: i64, in_$p40: ref, in_$p41: ref, in_$i42: i32, in_$i43: i1, in_$p44: ref, in_$p45: ref, in_$i46: i64, in_$i47: i64, in_$p48: ref, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i53: i32, in_$i54: i1, in_$i23: i32, in_$i24: i32) returns (out_$i25: i64, out_$p26: ref, out_$i27: i32, out_$i28: i1, out_$p30: ref, out_$i31: i32, out_$i32: i1, out_$i33: i1, out_$i34: i64, out_$i35: i64, out_$i36: i64, out_$p37: ref, out_$i38: i32, out_$i39: i64, out_$p40: ref, out_$p41: ref, out_$i42: i32, out_$i43: i1, out_$p44: ref, out_$p45: ref, out_$i46: i64, out_$i47: i64, out_$p48: ref, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i53: i32, out_$i54: i1, out_$i23: i32, out_$i24: i32);
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation memcmpb_loop_$bb4(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$i5: i64, in_$p6: ref, in_$i7: i8, in_$i8: i32, in_$i9: i1, in_$i11: i32, in_$i12: i1, in_$i4: i32) returns (out_$i5: i64, out_$p6: ref, out_$i7: i8, out_$i8: i32, out_$i9: i1, out_$i11: i32, out_$i12: i1, out_$i4: i32)
{

  entry:
    out_$i5, out_$p6, out_$i7, out_$i8, out_$i9, out_$i11, out_$i12, out_$i4 := in_$i5, in_$p6, in_$i7, in_$i8, in_$i9, in_$i11, in_$i12, in_$i4;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    goto corral_source_split_4152;

  $bb10:
    assume out_$i12 == 1;
    assume {:verifier.code 0} true;
    out_$i4 := out_$i11;
    goto $bb10_dummy;

  corral_source_split_4165:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10;

  corral_source_split_4164:
    assume {:verifier.code 0} true;
    out_$i12 := $slt.i32(out_$i11, in_$i2);
    goto corral_source_split_4165;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i11 := $add.i32(out_$i4, 1);
    call {:si_unique_call 1740} {:cexpr "i"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_4164;

  $bb7:
    assume !(out_$i9 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  corral_source_split_4158:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7;

  corral_source_split_4157:
    assume {:verifier.code 0} true;
    out_$i9 := $ne.i32(out_$i8, in_$i1);
    goto corral_source_split_4158;

  corral_source_split_4156:
    assume {:verifier.code 0} true;
    out_$i8 := $zext.i8.i32(out_$i7);
    call {:si_unique_call 1739} {:cexpr "__cil_tmp9"} boogie_si_record_i32(out_$i8);
    goto corral_source_split_4157;

  corral_source_split_4155:
    assume {:verifier.code 0} true;
    out_$i7 := $load.i8($M.1, out_$p6);
    call {:si_unique_call 1738} {:cexpr "__cil_tmp8"} boogie_si_record_i8(out_$i7);
    goto corral_source_split_4156;

  corral_source_split_4154:
    assume {:verifier.code 0} true;
    out_$p6 := $add.ref(in_$p0, $mul.ref(out_$i5, 1));
    goto corral_source_split_4155;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i5 := $sext.i32.i64(out_$i4);
    call {:si_unique_call 1737} {:cexpr "__cil_tmp5"} boogie_si_record_i64(out_$i5);
    goto corral_source_split_4154;

  corral_source_split_4152:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb10_dummy:
    call {:si_unique_call 1} out_$i5, out_$p6, out_$i7, out_$i8, out_$i9, out_$i11, out_$i12, out_$i4 := memcmpb_loop_$bb4(in_$p0, in_$i1, in_$i2, out_$i5, out_$p6, out_$i7, out_$i8, out_$i9, out_$i11, out_$i12, out_$i4);
    return;

  exit:
    return;
}



procedure memcmpb_loop_$bb4(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$i5: i64, in_$p6: ref, in_$i7: i8, in_$i8: i32, in_$i9: i1, in_$i11: i32, in_$i12: i1, in_$i4: i32) returns (out_$i5: i64, out_$p6: ref, out_$i7: i8, out_$i8: i32, out_$i9: i1, out_$i11: i32, out_$i12: i1, out_$i4: i32);



implementation INFTL_findwriteunit_loop_$bb8(in_$p0: ref, in_$i1: i32, in_$p3: ref, in_$p4: ref, in_$p6: ref, in_$i21: i64, in_$p25: ref, in_$p62: ref, in_$i70: i64, in_$i71: i64, in_$p72: ref, in_$i73: i32, in_$i74: i32, in_$i75: i64, in_$i76: i64, in_$p77: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i64, in_$i85: i64, in_$p86: ref, in_$i87: i8, in_$i88: i32, in_$i89: i32, in_$p90: ref, in_$i91: i64, in_$i92: i64, in_$p93: ref, in_$i94: i64, in_$i95: i64, in_$p96: ref, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$p108: ref, in_$i109: i8, in_$i110: i64, in_$i111: i64, in_$i112: i32, in_$i113: i64, in_$i114: i1, in_$i116: i1, in_$i117: i1, in_$i118: i32, in_$i119: i1, in_$i120: i32, in_$i122: i1, in_$i123: i32, in_$i125: i32, in_$i126: i1, in_$i129: i64, in_$i130: i64, in_$i131: i64, in_$p132: ref, in_$p133: ref, in_$p134: ref, in_$i135: i16, in_$i136: i32, in_$i137: i16, in_$i138: i32, in_$i139: i1, in_$i67: i32, in_$i68: i32, in_$i69: i32, in_$i140: i32, in_vslice_dummy_var_99: i32, in_vslice_dummy_var_100: i32) returns (out_$i70: i64, out_$i71: i64, out_$p72: ref, out_$i73: i32, out_$i74: i32, out_$i75: i64, out_$i76: i64, out_$p77: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i64, out_$i85: i64, out_$p86: ref, out_$i87: i8, out_$i88: i32, out_$i89: i32, out_$p90: ref, out_$i91: i64, out_$i92: i64, out_$p93: ref, out_$i94: i64, out_$i95: i64, out_$p96: ref, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$p108: ref, out_$i109: i8, out_$i110: i64, out_$i111: i64, out_$i112: i32, out_$i113: i64, out_$i114: i1, out_$i116: i1, out_$i117: i1, out_$i118: i32, out_$i119: i1, out_$i120: i32, out_$i122: i1, out_$i123: i32, out_$i125: i32, out_$i126: i1, out_$i129: i64, out_$i130: i64, out_$i131: i64, out_$p132: ref, out_$p133: ref, out_$p134: ref, out_$i135: i16, out_$i136: i32, out_$i137: i16, out_$i138: i32, out_$i139: i1, out_$i67: i32, out_$i68: i32, out_$i69: i32, out_$i140: i32, out_vslice_dummy_var_99: i32, out_vslice_dummy_var_100: i32)
{

  entry:
    out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i75, out_$i76, out_$p77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i114, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i122, out_$i123, out_$i125, out_$i126, out_$i129, out_$i130, out_$i131, out_$p132, out_$p133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i67, out_$i68, out_$i69, out_$i140, out_vslice_dummy_var_99, out_vslice_dummy_var_100 := in_$i70, in_$i71, in_$p72, in_$i73, in_$i74, in_$i75, in_$i76, in_$p77, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$i84, in_$i85, in_$p86, in_$i87, in_$i88, in_$i89, in_$p90, in_$i91, in_$i92, in_$p93, in_$i94, in_$i95, in_$p96, in_$i97, in_$i98, in_$p99, in_$i100, in_$i101, in_$p102, in_$i103, in_$i104, in_$p105, in_$i106, in_$i107, in_$p108, in_$i109, in_$i110, in_$i111, in_$i112, in_$i113, in_$i114, in_$i116, in_$i117, in_$i118, in_$i119, in_$i120, in_$i122, in_$i123, in_$i125, in_$i126, in_$i129, in_$i130, in_$i131, in_$p132, in_$p133, in_$p134, in_$i135, in_$i136, in_$i137, in_$i138, in_$i139, in_$i67, in_$i68, in_$i69, in_$i140, in_vslice_dummy_var_99, in_vslice_dummy_var_100;
    goto $bb8, exit;

  $bb8:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4309;

  $bb41:
    assume out_$i139 == 1;
    assume {:verifier.code 0} true;
    out_$i67, out_$i68, out_$i69 := out_$i136, out_$i123, out_$i125;
    goto $bb41_dummy;

  corral_source_split_4413:
    assume {:verifier.code 0} true;
    out_$i140 := out_$i123;
    assume true;
    goto $bb41;

  corral_source_split_4412:
    assume {:verifier.code 0} true;
    out_$i139 := $uge.i32(out_$i138, out_$i136);
    goto corral_source_split_4413;

  corral_source_split_4411:
    assume {:verifier.code 0} true;
    out_$i138 := $zext.i16.i32(out_$i137);
    call {:si_unique_call 1851} {:cexpr "__cil_tmp102"} boogie_si_record_i32(out_$i138);
    goto corral_source_split_4412;

  corral_source_split_4410:
    assume {:verifier.code 0} true;
    out_$i137 := $load.i16($M.1, in_$p62);
    call {:si_unique_call 1850} {:cexpr "__cil_tmp101"} boogie_si_record_i16(out_$i137);
    goto corral_source_split_4411;

  corral_source_split_4409:
    assume {:verifier.code 0} true;
    out_$i136 := $zext.i16.i32(out_$i135);
    call {:si_unique_call 1849} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i136);
    goto corral_source_split_4410;

  corral_source_split_4408:
    assume {:verifier.code 0} true;
    out_$i135 := $load.i16($M.1, out_$p134);
    call {:si_unique_call 1848} {:cexpr "__cil_tmp98"} boogie_si_record_i16(out_$i135);
    goto corral_source_split_4409;

  corral_source_split_4407:
    assume {:verifier.code 0} true;
    out_$p134 := $add.ref(out_$p133, $mul.ref(out_$i129, 2));
    goto corral_source_split_4408;

  corral_source_split_4406:
    assume {:verifier.code 0} true;
    out_$p133 := $load.ref($M.1, out_$p132);
    goto corral_source_split_4407;

  corral_source_split_4405:
    assume {:verifier.code 0} true;
    out_$p132 := $i2p.i64.ref(out_$i131);
    goto corral_source_split_4406;

  corral_source_split_4404:
    assume {:verifier.code 0} true;
    out_$i131 := $add.i64(out_$i130, 544);
    call {:si_unique_call 1847} {:cexpr "__cil_tmp95"} boogie_si_record_i64(out_$i131);
    goto corral_source_split_4405;

  corral_source_split_4403:
    assume {:verifier.code 0} true;
    out_$i130 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1846} {:cexpr "__cil_tmp94"} boogie_si_record_i64(out_$i130);
    goto corral_source_split_4404;

  $bb40:
    assume {:verifier.code 0} true;
    out_$i129 := $zext.i32.i64(out_$i67);
    call {:si_unique_call 1845} {:cexpr "__cil_tmp93"} boogie_si_record_i64(out_$i129);
    goto corral_source_split_4403;

  $bb38:
    assume !(out_$i126 == 1);
    assume {:verifier.code 0} true;
    goto $bb40;

  corral_source_split_4393:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38;

  corral_source_split_4392:
    assume {:verifier.code 0} true;
    out_$i126 := $eq.i32(out_$i69, 0);
    goto corral_source_split_4393;

  corral_source_split_4391:
    assume {:verifier.code 0} true;
    out_$i125 := $sub.i32(out_$i69, 1);
    call {:si_unique_call 1843} {:cexpr "silly"} boogie_si_record_i32(out_$i125);
    goto corral_source_split_4392;

  $bb29:
    assume {:verifier.code 0} true;
    goto corral_source_split_4391;

  $bb25:
    assume {:verifier.code 0} true;
    out_$i123 := out_$i68;
    goto $bb29;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i123 := out_$i68;
    goto $bb29;

  $bb15:
    assume {:verifier.code 0} true;
    out_$i123 := out_$i67;
    goto $bb29;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb13:
    assume out_$i116 == 1;
    goto corral_source_split_4368;

  corral_source_split_4366:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i116 := $eq.i32(out_$i89, 255);
    goto corral_source_split_4366;

  $bb11:
    assume !(out_$i114 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_4364:
    assume {:verifier.code 0} true;
    goto $bb12;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1842} out_vslice_dummy_var_100 := __dynamic_pr_debug.ref.ref.i32.i32.i32(in_$p6, .str.40, in_$i1, out_$i68, out_$i89);
    goto corral_source_split_4364;

  $bb10:
    assume out_$i114 == 1;
    goto corral_source_split_4363;

  corral_source_split_4361:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    out_$i114 := $ne.i64(out_$i113, 0);
    goto corral_source_split_4361;

  corral_source_split_4359:
    assume {:verifier.code 0} true;
    out_$i113 := $sext.i32.i64(out_$i112);
    call {:si_unique_call 1841} {:cexpr "tmp___0"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_4360;

  corral_source_split_4358:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1840} out_$i112 := __builtinx_expect.i64.i64(out_$i111, 0);
    goto corral_source_split_4359;

  corral_source_split_4357:
    assume {:verifier.code 0} true;
    out_$i111 := $and.i64(out_$i110, 1);
    call {:si_unique_call 1839} {:cexpr "__cil_tmp92"} boogie_si_record_i64(out_$i111);
    goto corral_source_split_4358;

  corral_source_split_4356:
    assume {:verifier.code 0} true;
    out_$i110 := $zext.i8.i64(out_$i109);
    call {:si_unique_call 1838} {:cexpr "__cil_tmp91"} boogie_si_record_i64(out_$i110);
    goto corral_source_split_4357;

  corral_source_split_4355:
    assume {:verifier.code 0} true;
    out_$i109 := $load.i8($M.1, out_$p108);
    call {:si_unique_call 1837} {:cexpr "__cil_tmp90"} boogie_si_record_i8(out_$i109);
    goto corral_source_split_4356;

  corral_source_split_4354:
    assume {:verifier.code 0} true;
    out_$p108 := $i2p.i64.ref(out_$i107);
    goto corral_source_split_4355;

  corral_source_split_4353:
    assume {:verifier.code 0} true;
    out_$i107 := $add.i64(out_$i106, 35);
    call {:si_unique_call 1836} {:cexpr "__cil_tmp89"} boogie_si_record_i64(out_$i107);
    goto corral_source_split_4354;

  corral_source_split_4352:
    assume {:verifier.code 0} true;
    out_$i106 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4353;

  corral_source_split_4351:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p105, 0);
    goto corral_source_split_4352;

  corral_source_split_4350:
    assume {:verifier.code 0} true;
    out_$p105 := $i2p.i64.ref(out_$i104);
    goto corral_source_split_4351;

  corral_source_split_4349:
    assume {:verifier.code 0} true;
    out_$i104 := $add.i64(out_$i103, 35);
    call {:si_unique_call 1835} {:cexpr "__cil_tmp88"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_4350;

  corral_source_split_4348:
    assume {:verifier.code 0} true;
    out_$i103 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4349;

  corral_source_split_4347:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p102, 518);
    goto corral_source_split_4348;

  corral_source_split_4346:
    assume {:verifier.code 0} true;
    out_$p102 := $i2p.i64.ref(out_$i101);
    goto corral_source_split_4347;

  corral_source_split_4345:
    assume {:verifier.code 0} true;
    out_$i101 := $add.i64(out_$i100, 32);
    call {:si_unique_call 1834} {:cexpr "__cil_tmp87"} boogie_si_record_i64(out_$i101);
    goto corral_source_split_4346;

  corral_source_split_4344:
    assume {:verifier.code 0} true;
    out_$i100 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4345;

  corral_source_split_4343:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p99, .str.40);
    goto corral_source_split_4344;

  corral_source_split_4342:
    assume {:verifier.code 0} true;
    out_$p99 := $i2p.i64.ref(out_$i98);
    goto corral_source_split_4343;

  corral_source_split_4341:
    assume {:verifier.code 0} true;
    out_$i98 := $add.i64(out_$i97, 24);
    call {:si_unique_call 1833} {:cexpr "__cil_tmp86"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_4342;

  corral_source_split_4340:
    assume {:verifier.code 0} true;
    out_$i97 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4341;

  corral_source_split_4339:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p96, .str.31);
    goto corral_source_split_4340;

  corral_source_split_4338:
    assume {:verifier.code 0} true;
    out_$p96 := $i2p.i64.ref(out_$i95);
    goto corral_source_split_4339;

  corral_source_split_4337:
    assume {:verifier.code 0} true;
    out_$i95 := $add.i64(out_$i94, 16);
    call {:si_unique_call 1832} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i95);
    goto corral_source_split_4338;

  corral_source_split_4336:
    assume {:verifier.code 0} true;
    out_$i94 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4337;

  corral_source_split_4335:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p93, .str.38);
    goto corral_source_split_4336;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    out_$p93 := $i2p.i64.ref(out_$i92);
    goto corral_source_split_4335;

  corral_source_split_4333:
    assume {:verifier.code 0} true;
    out_$i92 := $add.i64(out_$i91, 8);
    call {:si_unique_call 1831} {:cexpr "__cil_tmp84"} boogie_si_record_i64(out_$i92);
    goto corral_source_split_4334;

  corral_source_split_4332:
    assume {:verifier.code 0} true;
    out_$i91 := $p2i.ref.i64(in_$p6);
    goto corral_source_split_4333;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p90, .str);
    goto corral_source_split_4332;

  corral_source_split_4330:
    assume {:verifier.code 0} true;
    out_$p90 := $bitcast.ref.ref(in_$p6);
    goto corral_source_split_4331;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    out_$i89 := $or.i32(out_$i88, out_$i83);
    call {:si_unique_call 1830} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i89);
    goto corral_source_split_4330;

  corral_source_split_4328:
    assume {:verifier.code 0} true;
    out_$i88 := $zext.i8.i32(out_$i87);
    call {:si_unique_call 1829} {:cexpr "__cil_tmp81"} boogie_si_record_i32(out_$i88);
    goto corral_source_split_4329;

  corral_source_split_4327:
    assume {:verifier.code 0} true;
    out_$i87 := $load.i8($M.1, out_$p86);
    call {:si_unique_call 1828} {:cexpr "__cil_tmp80"} boogie_si_record_i8(out_$i87);
    goto corral_source_split_4328;

  corral_source_split_4326:
    assume {:verifier.code 0} true;
    out_$p86 := $i2p.i64.ref(out_$i85);
    goto corral_source_split_4327;

  corral_source_split_4325:
    assume {:verifier.code 0} true;
    out_$i85 := $add.i64(out_$i84, 6);
    call {:si_unique_call 1827} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i85);
    goto corral_source_split_4326;

  corral_source_split_4324:
    assume {:verifier.code 0} true;
    out_$i84 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_4325;

  corral_source_split_4323:
    assume {:verifier.code 0} true;
    out_$i83 := $zext.i8.i32(out_$i82);
    call {:si_unique_call 1826} {:cexpr "__cil_tmp78"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_4324;

  corral_source_split_4322:
    assume {:verifier.code 0} true;
    out_$i82 := $load.i8($M.1, out_$p81);
    call {:si_unique_call 1825} {:cexpr "__cil_tmp77"} boogie_si_record_i8(out_$i82);
    goto corral_source_split_4323;

  corral_source_split_4321:
    assume {:verifier.code 0} true;
    out_$p81 := $i2p.i64.ref(out_$i80);
    goto corral_source_split_4322;

  corral_source_split_4320:
    assume {:verifier.code 0} true;
    out_$i80 := $add.i64(out_$i79, 7);
    call {:si_unique_call 1824} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_4321;

  corral_source_split_4319:
    assume {:verifier.code 0} true;
    out_$i79 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_4320;

  corral_source_split_4318:
    assume {:verifier.code 0} true;
    call {:si_unique_call 1823} out_vslice_dummy_var_99 := inftl_read_oob(in_$p25, out_$i76, 8, in_$p4, out_$p77);
    goto corral_source_split_4319;

  corral_source_split_4317:
    assume {:verifier.code 0} true;
    out_$p77 := $bitcast.ref.ref(in_$p3);
    goto corral_source_split_4318;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    out_$i76 := $add.i64(out_$i75, in_$i21);
    call {:si_unique_call 1822} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i76);
    goto corral_source_split_4317;

  corral_source_split_4315:
    assume {:verifier.code 0} true;
    out_$i75 := $zext.i32.i64(out_$i74);
    call {:si_unique_call 1821} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i75);
    goto corral_source_split_4316;

  corral_source_split_4314:
    assume {:verifier.code 0} true;
    out_$i74 := $mul.i32(out_$i73, out_$i67);
    call {:si_unique_call 1820} {:cexpr "__cil_tmp71"} boogie_si_record_i32(out_$i74);
    goto corral_source_split_4315;

  corral_source_split_4313:
    assume {:verifier.code 0} true;
    out_$i73 := $load.i32($M.1, out_$p72);
    call {:si_unique_call 1819} {:cexpr "__cil_tmp70"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_4314;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    out_$p72 := $i2p.i64.ref(out_$i71);
    goto corral_source_split_4313;

  corral_source_split_4311:
    assume {:verifier.code 0} true;
    out_$i71 := $add.i64(out_$i70, 356);
    call {:si_unique_call 1818} {:cexpr "__cil_tmp69"} boogie_si_record_i64(out_$i71);
    goto corral_source_split_4312;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i70 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 1817} {:cexpr "__cil_tmp68"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_4311;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    goto $bb9;

  corral_source_split_4385:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume out_$i122 == 1;
    goto corral_source_split_4385;

  corral_source_split_4381:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  corral_source_split_4380:
    assume {:verifier.code 0} true;
    out_$i122 := $eq.i32(out_$i89, 17);
    goto corral_source_split_4381;

  $bb20:
    assume !(out_$i119 == 1);
    goto corral_source_split_4380;

  corral_source_split_4376:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i68;
    assume true;
    goto $bb20;

  corral_source_split_4375:
    assume {:verifier.code 0} true;
    out_$i119 := $eq.i32(out_$i89, 85);
    goto corral_source_split_4376;

  $bb17:
    assume !(out_$i117 == 1);
    goto corral_source_split_4375;

  corral_source_split_4371:
    assume {:verifier.code 0} true;
    out_$i118 := out_$i68;
    assume true;
    goto $bb17;

  corral_source_split_4370:
    assume {:verifier.code 0} true;
    out_$i117 := $eq.i32(out_$i89, 0);
    goto corral_source_split_4371;

  $bb14:
    assume !(out_$i116 == 1);
    goto corral_source_split_4370;

  corral_source_split_4387:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb23:
    assume !(out_$i122 == 1);
    goto corral_source_split_4387;

  $bb41_dummy:
    call {:si_unique_call 1} out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i75, out_$i76, out_$p77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i114, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i122, out_$i123, out_$i125, out_$i126, out_$i129, out_$i130, out_$i131, out_$p132, out_$p133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i67, out_$i68, out_$i69, out_$i140, out_vslice_dummy_var_99, out_vslice_dummy_var_100 := INFTL_findwriteunit_loop_$bb8(in_$p0, in_$i1, in_$p3, in_$p4, in_$p6, in_$i21, in_$p25, in_$p62, out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i75, out_$i76, out_$p77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$p86, out_$i87, out_$i88, out_$i89, out_$p90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$p105, out_$i106, out_$i107, out_$p108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i114, out_$i116, out_$i117, out_$i118, out_$i119, out_$i120, out_$i122, out_$i123, out_$i125, out_$i126, out_$i129, out_$i130, out_$i131, out_$p132, out_$p133, out_$p134, out_$i135, out_$i136, out_$i137, out_$i138, out_$i139, out_$i67, out_$i68, out_$i69, out_$i140, out_vslice_dummy_var_99, out_vslice_dummy_var_100);
    return;

  exit:
    return;
}



procedure INFTL_findwriteunit_loop_$bb8(in_$p0: ref, in_$i1: i32, in_$p3: ref, in_$p4: ref, in_$p6: ref, in_$i21: i64, in_$p25: ref, in_$p62: ref, in_$i70: i64, in_$i71: i64, in_$p72: ref, in_$i73: i32, in_$i74: i32, in_$i75: i64, in_$i76: i64, in_$p77: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i64, in_$i85: i64, in_$p86: ref, in_$i87: i8, in_$i88: i32, in_$i89: i32, in_$p90: ref, in_$i91: i64, in_$i92: i64, in_$p93: ref, in_$i94: i64, in_$i95: i64, in_$p96: ref, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i64, in_$i104: i64, in_$p105: ref, in_$i106: i64, in_$i107: i64, in_$p108: ref, in_$i109: i8, in_$i110: i64, in_$i111: i64, in_$i112: i32, in_$i113: i64, in_$i114: i1, in_$i116: i1, in_$i117: i1, in_$i118: i32, in_$i119: i1, in_$i120: i32, in_$i122: i1, in_$i123: i32, in_$i125: i32, in_$i126: i1, in_$i129: i64, in_$i130: i64, in_$i131: i64, in_$p132: ref, in_$p133: ref, in_$p134: ref, in_$i135: i16, in_$i136: i32, in_$i137: i16, in_$i138: i32, in_$i139: i1, in_$i67: i32, in_$i68: i32, in_$i69: i32, in_$i140: i32, in_vslice_dummy_var_99: i32, in_vslice_dummy_var_100: i32) returns (out_$i70: i64, out_$i71: i64, out_$p72: ref, out_$i73: i32, out_$i74: i32, out_$i75: i64, out_$i76: i64, out_$p77: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i64, out_$i85: i64, out_$p86: ref, out_$i87: i8, out_$i88: i32, out_$i89: i32, out_$p90: ref, out_$i91: i64, out_$i92: i64, out_$p93: ref, out_$i94: i64, out_$i95: i64, out_$p96: ref, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i64, out_$i104: i64, out_$p105: ref, out_$i106: i64, out_$i107: i64, out_$p108: ref, out_$i109: i8, out_$i110: i64, out_$i111: i64, out_$i112: i32, out_$i113: i64, out_$i114: i1, out_$i116: i1, out_$i117: i1, out_$i118: i32, out_$i119: i1, out_$i120: i32, out_$i122: i1, out_$i123: i32, out_$i125: i32, out_$i126: i1, out_$i129: i64, out_$i130: i64, out_$i131: i64, out_$p132: ref, out_$p133: ref, out_$p134: ref, out_$i135: i16, out_$i136: i32, out_$i137: i16, out_$i138: i32, out_$i139: i1, out_$i67: i32, out_$i68: i32, out_$i69: i32, out_$i140: i32, out_vslice_dummy_var_99: i32, out_vslice_dummy_var_100: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_deleteblock_loop_$bb7(in_$p0: ref, in_$i1: i32, in_$p2: ref, in_$p3: ref, in_$i26: i64, in_$p30: ref, in_$p59: ref, in_$i65: i64, in_$i66: i64, in_$p67: ref, in_$i68: i32, in_$i69: i32, in_$i70: i64, in_$i71: i64, in_$p72: ref, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i8, in_$i80: i32, in_$i81: i64, in_$i82: i64, in_$p83: ref, in_$i84: i8, in_$i85: i32, in_$i86: i32, in_$i75: i32, in_$i87: i1, in_$i88: i1, in_$i89: i1, in_$i90: i1, in_$i91: i32, in_$i94: i32, in_$i95: i1, in_$i104: i64, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$p108: ref, in_$p109: ref, in_$i110: i16, in_$i111: i32, in_$i112: i32, in_$i113: i1, in_$i63: i32, in_$i64: i32, in_$i114: i32, in_vslice_dummy_var_109: i32) returns (out_$i65: i64, out_$i66: i64, out_$p67: ref, out_$i68: i32, out_$i69: i32, out_$i70: i64, out_$i71: i64, out_$p72: ref, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i8, out_$i80: i32, out_$i81: i64, out_$i82: i64, out_$p83: ref, out_$i84: i8, out_$i85: i32, out_$i86: i32, out_$i75: i32, out_$i87: i1, out_$i88: i1, out_$i89: i1, out_$i90: i1, out_$i91: i32, out_$i94: i32, out_$i95: i1, out_$i104: i64, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$p108: ref, out_$p109: ref, out_$i110: i16, out_$i111: i32, out_$i112: i32, out_$i113: i1, out_$i63: i32, out_$i64: i32, out_$i114: i32, out_vslice_dummy_var_109: i32)
{

  entry:
    out_$i65, out_$i66, out_$p67, out_$i68, out_$i69, out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i75, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91, out_$i94, out_$i95, out_$i104, out_$i105, out_$i106, out_$p107, out_$p108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i63, out_$i64, out_$i114, out_vslice_dummy_var_109 := in_$i65, in_$i66, in_$p67, in_$i68, in_$i69, in_$i70, in_$i71, in_$p72, in_$i73, in_$i74, in_$i76, in_$i77, in_$p78, in_$i79, in_$i80, in_$i81, in_$i82, in_$p83, in_$i84, in_$i85, in_$i86, in_$i75, in_$i87, in_$i88, in_$i89, in_$i90, in_$i91, in_$i94, in_$i95, in_$i104, in_$i105, in_$i106, in_$p107, in_$p108, in_$p109, in_$i110, in_$i111, in_$i112, in_$i113, in_$i63, in_$i64, in_$i114, in_vslice_dummy_var_109;
    goto $bb7, exit;

  $bb7:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4809;

  $bb40:
    assume out_$i113 == 1;
    assume {:verifier.code 0} true;
    out_$i63, out_$i64 := out_$i94, out_$i111;
    goto $bb40_dummy;

  corral_source_split_4888:
    assume {:verifier.code 0} true;
    out_$i114 := out_$i111;
    assume true;
    goto $bb40;

  corral_source_split_4887:
    assume {:verifier.code 0} true;
    out_$i113 := $ugt.i32(out_$i112, out_$i111);
    goto corral_source_split_4888;

  corral_source_split_4886:
    assume {:verifier.code 0} true;
    out_$i112 := $load.i32($M.1, in_$p59);
    call {:si_unique_call 2075} {:cexpr "__cil_tmp75"} boogie_si_record_i32(out_$i112);
    goto corral_source_split_4887;

  corral_source_split_4885:
    assume {:verifier.code 0} true;
    out_$i111 := $zext.i16.i32(out_$i110);
    call {:si_unique_call 2074} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i111);
    goto corral_source_split_4886;

  corral_source_split_4884:
    assume {:verifier.code 0} true;
    out_$i110 := $load.i16($M.1, out_$p109);
    call {:si_unique_call 2073} {:cexpr "__cil_tmp72"} boogie_si_record_i16(out_$i110);
    goto corral_source_split_4885;

  corral_source_split_4883:
    assume {:verifier.code 0} true;
    out_$p109 := $add.ref(out_$p108, $mul.ref(out_$i104, 2));
    goto corral_source_split_4884;

  corral_source_split_4882:
    assume {:verifier.code 0} true;
    out_$p108 := $load.ref($M.1, out_$p107);
    goto corral_source_split_4883;

  corral_source_split_4881:
    assume {:verifier.code 0} true;
    out_$p107 := $i2p.i64.ref(out_$i106);
    goto corral_source_split_4882;

  corral_source_split_4880:
    assume {:verifier.code 0} true;
    out_$i106 := $add.i64(out_$i105, 544);
    call {:si_unique_call 2072} {:cexpr "__cil_tmp69"} boogie_si_record_i64(out_$i106);
    goto corral_source_split_4881;

  corral_source_split_4879:
    assume {:verifier.code 0} true;
    out_$i105 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2071} {:cexpr "__cil_tmp68"} boogie_si_record_i64(out_$i105);
    goto corral_source_split_4880;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i104 := $zext.i32.i64(out_$i64);
    call {:si_unique_call 2070} {:cexpr "__cil_tmp67"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_4879;

  $bb37:
    assume !(out_$i95 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  corral_source_split_4863:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37;

  corral_source_split_4862:
    assume {:verifier.code 0} true;
    out_$i95 := $eq.i32(out_$i63, 0);
    goto corral_source_split_4863;

  $bb28:
    assume {:verifier.code 0} true;
    out_$i94 := $sub.i32(out_$i63, 1);
    call {:si_unique_call 2063} {:cexpr "silly"} boogie_si_record_i32(out_$i94);
    goto corral_source_split_4862;

  corral_source_split_4858:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb28;

  corral_source_split_4844:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb14:
    assume {:verifier.code 0} true;
    goto $bb17;

  corral_source_split_4839:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb12:
    assume out_$i87 == 1;
    goto corral_source_split_4839;

  corral_source_split_4837:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb12, $bb13;

  corral_source_split_4836:
    assume {:verifier.code 0} true;
    out_$i87 := $eq.i32(out_$i75, 255);
    goto corral_source_split_4837;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_4836;

  corral_source_split_4834:
    assume {:verifier.code 0} true;
    out_$i86 := $or.i32(out_$i85, out_$i80);
    call {:si_unique_call 2061} {:cexpr "__cil_tmp61"} boogie_si_record_i32(out_$i86);
    assume {:verifier.code 0} true;
    out_$i75 := out_$i86;
    goto $bb11;

  corral_source_split_4822:
    assume {:verifier.code 0} true;
    out_$i75 := 17;
    goto $bb11;

  $bb9:
    assume out_$i74 == 1;
    goto corral_source_split_4822;

  corral_source_split_4820:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9, $bb10;

  corral_source_split_4819:
    assume {:verifier.code 0} true;
    out_$i74 := $slt.i32(out_$i73, 0);
    goto corral_source_split_4820;

  corral_source_split_4818:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2053} out_$i73 := inftl_read_oob(in_$p30, out_$i71, 8, in_$p2, out_$p72);
    call {:si_unique_call 2054} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_4819;

  corral_source_split_4817:
    assume {:verifier.code 0} true;
    out_$p72 := $bitcast.ref.ref(in_$p3);
    goto corral_source_split_4818;

  corral_source_split_4816:
    assume {:verifier.code 0} true;
    out_$i71 := $add.i64(out_$i70, in_$i26);
    call {:si_unique_call 2052} {:cexpr "__cil_tmp52"} boogie_si_record_i64(out_$i71);
    goto corral_source_split_4817;

  corral_source_split_4815:
    assume {:verifier.code 0} true;
    out_$i70 := $zext.i32.i64(out_$i69);
    call {:si_unique_call 2051} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_4816;

  corral_source_split_4814:
    assume {:verifier.code 0} true;
    out_$i69 := $mul.i32(out_$i68, out_$i64);
    call {:si_unique_call 2050} {:cexpr "__cil_tmp50"} boogie_si_record_i32(out_$i69);
    goto corral_source_split_4815;

  corral_source_split_4813:
    assume {:verifier.code 0} true;
    out_$i68 := $load.i32($M.1, out_$p67);
    call {:si_unique_call 2049} {:cexpr "__cil_tmp49"} boogie_si_record_i32(out_$i68);
    goto corral_source_split_4814;

  corral_source_split_4812:
    assume {:verifier.code 0} true;
    out_$p67 := $i2p.i64.ref(out_$i66);
    goto corral_source_split_4813;

  corral_source_split_4811:
    assume {:verifier.code 0} true;
    out_$i66 := $add.i64(out_$i65, 356);
    call {:si_unique_call 2048} {:cexpr "__cil_tmp48"} boogie_si_record_i64(out_$i66);
    goto corral_source_split_4812;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i65 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2047} {:cexpr "__cil_tmp47"} boogie_si_record_i64(out_$i65);
    goto corral_source_split_4811;

  corral_source_split_4809:
    assume {:verifier.code 0} true;
    goto $bb8;

  corral_source_split_4833:
    assume {:verifier.code 0} true;
    out_$i85 := $zext.i8.i32(out_$i84);
    call {:si_unique_call 2060} {:cexpr "__cil_tmp60"} boogie_si_record_i32(out_$i85);
    goto corral_source_split_4834;

  corral_source_split_4832:
    assume {:verifier.code 0} true;
    out_$i84 := $load.i8($M.1, out_$p83);
    call {:si_unique_call 2059} {:cexpr "__cil_tmp59"} boogie_si_record_i8(out_$i84);
    goto corral_source_split_4833;

  corral_source_split_4831:
    assume {:verifier.code 0} true;
    out_$p83 := $i2p.i64.ref(out_$i82);
    goto corral_source_split_4832;

  corral_source_split_4830:
    assume {:verifier.code 0} true;
    out_$i82 := $add.i64(out_$i81, 6);
    call {:si_unique_call 2058} {:cexpr "__cil_tmp58"} boogie_si_record_i64(out_$i82);
    goto corral_source_split_4831;

  corral_source_split_4829:
    assume {:verifier.code 0} true;
    out_$i81 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_4830;

  corral_source_split_4828:
    assume {:verifier.code 0} true;
    out_$i80 := $zext.i8.i32(out_$i79);
    call {:si_unique_call 2057} {:cexpr "__cil_tmp57"} boogie_si_record_i32(out_$i80);
    goto corral_source_split_4829;

  corral_source_split_4827:
    assume {:verifier.code 0} true;
    out_$i79 := $load.i8($M.1, out_$p78);
    call {:si_unique_call 2056} {:cexpr "__cil_tmp56"} boogie_si_record_i8(out_$i79);
    goto corral_source_split_4828;

  corral_source_split_4826:
    assume {:verifier.code 0} true;
    out_$p78 := $i2p.i64.ref(out_$i77);
    goto corral_source_split_4827;

  corral_source_split_4825:
    assume {:verifier.code 0} true;
    out_$i77 := $add.i64(out_$i76, 7);
    call {:si_unique_call 2055} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i77);
    goto corral_source_split_4826;

  corral_source_split_4824:
    assume {:verifier.code 0} true;
    out_$i76 := $p2i.ref.i64(in_$p3);
    goto corral_source_split_4825;

  $bb10:
    assume !(out_$i74 == 1);
    goto corral_source_split_4824;

  $bb15:
    assume out_$i88 == 1;
    goto corral_source_split_4844;

  corral_source_split_4842:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15, $bb16;

  corral_source_split_4841:
    assume {:verifier.code 0} true;
    out_$i88 := $eq.i32(out_$i75, 17);
    goto corral_source_split_4842;

  $bb13:
    assume !(out_$i87 == 1);
    goto corral_source_split_4841;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2062} out_vslice_dummy_var_109 := printk.ref.i32.i32.i32(.str.62, in_$i1, out_$i64, out_$i75);
    goto corral_source_split_4858;

  corral_source_split_4856:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i90 == 1);
    goto corral_source_split_4856;

  corral_source_split_4852:
    assume {:verifier.code 0} true;
    out_$i91 := out_$i64;
    assume true;
    goto $bb22;

  corral_source_split_4851:
    assume {:verifier.code 0} true;
    out_$i90 := $eq.i32(out_$i75, 85);
    goto corral_source_split_4852;

  $bb19:
    assume !(out_$i89 == 1);
    goto corral_source_split_4851;

  corral_source_split_4847:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19;

  corral_source_split_4846:
    assume {:verifier.code 0} true;
    out_$i89 := $eq.i32(out_$i75, 0);
    goto corral_source_split_4847;

  $bb16:
    assume !(out_$i88 == 1);
    goto corral_source_split_4846;

  $bb40_dummy:
    call {:si_unique_call 1} out_$i65, out_$i66, out_$p67, out_$i68, out_$i69, out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i75, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91, out_$i94, out_$i95, out_$i104, out_$i105, out_$i106, out_$p107, out_$p108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i63, out_$i64, out_$i114, out_vslice_dummy_var_109 := INFTL_deleteblock_loop_$bb7(in_$p0, in_$i1, in_$p2, in_$p3, in_$i26, in_$p30, in_$p59, out_$i65, out_$i66, out_$p67, out_$i68, out_$i69, out_$i70, out_$i71, out_$p72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$i81, out_$i82, out_$p83, out_$i84, out_$i85, out_$i86, out_$i75, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91, out_$i94, out_$i95, out_$i104, out_$i105, out_$i106, out_$p107, out_$p108, out_$p109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i63, out_$i64, out_$i114, out_vslice_dummy_var_109);
    return;

  exit:
    return;
}



procedure INFTL_deleteblock_loop_$bb7(in_$p0: ref, in_$i1: i32, in_$p2: ref, in_$p3: ref, in_$i26: i64, in_$p30: ref, in_$p59: ref, in_$i65: i64, in_$i66: i64, in_$p67: ref, in_$i68: i32, in_$i69: i32, in_$i70: i64, in_$i71: i64, in_$p72: ref, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i8, in_$i80: i32, in_$i81: i64, in_$i82: i64, in_$p83: ref, in_$i84: i8, in_$i85: i32, in_$i86: i32, in_$i75: i32, in_$i87: i1, in_$i88: i1, in_$i89: i1, in_$i90: i1, in_$i91: i32, in_$i94: i32, in_$i95: i1, in_$i104: i64, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$p108: ref, in_$p109: ref, in_$i110: i16, in_$i111: i32, in_$i112: i32, in_$i113: i1, in_$i63: i32, in_$i64: i32, in_$i114: i32, in_vslice_dummy_var_109: i32) returns (out_$i65: i64, out_$i66: i64, out_$p67: ref, out_$i68: i32, out_$i69: i32, out_$i70: i64, out_$i71: i64, out_$p72: ref, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i8, out_$i80: i32, out_$i81: i64, out_$i82: i64, out_$p83: ref, out_$i84: i8, out_$i85: i32, out_$i86: i32, out_$i75: i32, out_$i87: i1, out_$i88: i1, out_$i89: i1, out_$i90: i1, out_$i91: i32, out_$i94: i32, out_$i95: i1, out_$i104: i64, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$p108: ref, out_$p109: ref, out_$i110: i16, out_$i111: i32, out_$i112: i32, out_$i113: i1, out_$i63: i32, out_$i64: i32, out_$i114: i32, out_vslice_dummy_var_109: i32);
  modifies $M.0, $M.1, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_trydeletechain_loop_$bb90()
{

  entry:
    goto $bb90, exit;

  $bb90:
    assume {:verifier.code 0} true;
    goto $bb90_dummy;

  $bb90_dummy:
    call {:si_unique_call 1} INFTL_trydeletechain_loop_$bb90();
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb90();



implementation INFTL_trydeletechain_loop_$bb86(in_$p0: ref, in_$p230: ref, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i64, in_$i246: i32, in_$i247: i64, in_$i248: i1, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$p253: ref, in_$p254: ref, in_$i255: i16, in_$i256: i32, in_$i257: i64, in_$p258: ref, in_$p259: ref, in_$i260: i16, in_$i261: i32, in_$i262: i1, in_$i238: i32, in_$i263: i32, in_$p264: ref) returns (out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i64, out_$i246: i32, out_$i247: i64, out_$i248: i1, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$p253: ref, out_$p254: ref, out_$i255: i16, out_$i256: i32, out_$i257: i64, out_$p258: ref, out_$p259: ref, out_$i260: i16, out_$i261: i32, out_$i262: i1, out_$i238: i32, out_$i263: i32, out_$p264: ref)
{

  entry:
    out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264 := in_$i239, in_$i240, in_$p241, in_$i242, in_$i243, in_$i244, in_$i245, in_$i246, in_$i247, in_$i248, in_$i249, in_$i250, in_$i251, in_$p252, in_$p253, in_$p254, in_$i255, in_$i256, in_$i257, in_$p258, in_$p259, in_$i260, in_$i261, in_$i262, in_$i238, in_$i263, in_$p264;
    goto $bb86, exit;

  $bb86:
    assume {:verifier.code 0} true;
    goto corral_source_split_5259;

  $bb92:
    assume out_$i262 == 1;
    assume {:verifier.code 0} true;
    out_$i238 := out_$i256;
    goto $bb92_dummy;

  corral_source_split_5287:
    assume {:verifier.code 0} true;
    out_$i263, out_$p264 := out_$i256, out_$p254;
    assume true;
    goto $bb92;

  corral_source_split_5286:
    assume {:verifier.code 0} true;
    out_$i262 := $ne.i32(out_$i261, 65535);
    goto corral_source_split_5287;

  corral_source_split_5285:
    assume {:verifier.code 0} true;
    out_$i261 := $zext.i16.i32(out_$i260);
    call {:si_unique_call 2233} {:cexpr "__cil_tmp138"} boogie_si_record_i32(out_$i261);
    goto corral_source_split_5286;

  corral_source_split_5284:
    assume {:verifier.code 0} true;
    out_$i260 := $load.i16($M.1, out_$p259);
    call {:si_unique_call 2232} {:cexpr "__cil_tmp137"} boogie_si_record_i16(out_$i260);
    goto corral_source_split_5285;

  corral_source_split_5283:
    assume {:verifier.code 0} true;
    out_$p259 := $add.ref(out_$p258, $mul.ref(out_$i257, 2));
    goto corral_source_split_5284;

  corral_source_split_5282:
    assume {:verifier.code 0} true;
    out_$p258 := $load.ref($M.1, in_$p230);
    goto corral_source_split_5283;

  corral_source_split_5281:
    assume {:verifier.code 0} true;
    out_$i257 := $zext.i32.i64(out_$i256);
    call {:si_unique_call 2231} {:cexpr "__cil_tmp132"} boogie_si_record_i64(out_$i257);
    goto corral_source_split_5282;

  corral_source_split_5280:
    assume {:verifier.code 0} true;
    out_$i256 := $zext.i16.i32(out_$i255);
    call {:si_unique_call 2230} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i256);
    goto corral_source_split_5281;

  corral_source_split_5279:
    assume {:verifier.code 0} true;
    out_$i255 := $load.i16($M.1, out_$p254);
    call {:si_unique_call 2229} {:cexpr "__cil_tmp131"} boogie_si_record_i16(out_$i255);
    goto corral_source_split_5280;

  corral_source_split_5278:
    assume {:verifier.code 0} true;
    out_$p254 := $add.ref(out_$p253, $mul.ref(out_$i249, 2));
    goto corral_source_split_5279;

  corral_source_split_5277:
    assume {:verifier.code 0} true;
    out_$p253 := $load.ref($M.1, out_$p252);
    goto corral_source_split_5278;

  corral_source_split_5276:
    assume {:verifier.code 0} true;
    out_$p252 := $i2p.i64.ref(out_$i251);
    goto corral_source_split_5277;

  corral_source_split_5275:
    assume {:verifier.code 0} true;
    out_$i251 := $add.i64(out_$i250, 544);
    call {:si_unique_call 2228} {:cexpr "__cil_tmp129"} boogie_si_record_i64(out_$i251);
    goto corral_source_split_5276;

  corral_source_split_5274:
    assume {:verifier.code 0} true;
    out_$i250 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2227} {:cexpr "__cil_tmp128"} boogie_si_record_i64(out_$i250);
    goto corral_source_split_5275;

  $bb91:
    assume {:verifier.code 0} true;
    out_$i249 := $zext.i32.i64(out_$i238);
    call {:si_unique_call 2226} {:cexpr "__cil_tmp127"} boogie_si_record_i64(out_$i249);
    goto corral_source_split_5274;

  $bb89:
    assume !(out_$i248 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  corral_source_split_5270:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb89;

  corral_source_split_5269:
    assume {:verifier.code 0} true;
    out_$i248 := $ne.i64(out_$i247, 0);
    goto corral_source_split_5270;

  corral_source_split_5268:
    assume {:verifier.code 0} true;
    out_$i247 := $sext.i32.i64(out_$i246);
    call {:si_unique_call 2224} {:cexpr "tmp___4"} boogie_si_record_i64(out_$i247);
    goto corral_source_split_5269;

  corral_source_split_5267:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2223} out_$i246 := __builtinx_expect.i64.i64(out_$i245, 0);
    goto corral_source_split_5268;

  corral_source_split_5266:
    assume {:verifier.code 0} true;
    out_$i245 := $sext.i32.i64(out_$i244);
    call {:si_unique_call 2222} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i245);
    goto corral_source_split_5267;

  corral_source_split_5265:
    assume {:verifier.code 0} true;
    out_$i244 := $zext.i1.i32(out_$i243);
    call {:si_unique_call 2221} {:cexpr "__cil_tmp125"} boogie_si_record_i32(out_$i244);
    goto corral_source_split_5266;

  corral_source_split_5264:
    assume {:verifier.code 0} true;
    out_$i243 := $ule.i32(out_$i242, out_$i238);
    goto corral_source_split_5265;

  corral_source_split_5263:
    assume {:verifier.code 0} true;
    out_$i242 := $load.i32($M.1, out_$p241);
    call {:si_unique_call 2220} {:cexpr "__cil_tmp124"} boogie_si_record_i32(out_$i242);
    goto corral_source_split_5264;

  corral_source_split_5262:
    assume {:verifier.code 0} true;
    out_$p241 := $i2p.i64.ref(out_$i240);
    goto corral_source_split_5263;

  corral_source_split_5261:
    assume {:verifier.code 0} true;
    out_$i240 := $add.i64(out_$i239, 560);
    call {:si_unique_call 2219} {:cexpr "__cil_tmp123"} boogie_si_record_i64(out_$i240);
    goto corral_source_split_5262;

  $bb87:
    assume {:verifier.code 0} true;
    out_$i239 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2218} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i239);
    goto corral_source_split_5261;

  corral_source_split_5259:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb92_dummy:
    call {:si_unique_call 1} out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264 := INFTL_trydeletechain_loop_$bb86(in_$p0, in_$p230, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264);
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb86(in_$p0: ref, in_$p230: ref, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i64, in_$i246: i32, in_$i247: i64, in_$i248: i1, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$p253: ref, in_$p254: ref, in_$i255: i16, in_$i256: i32, in_$i257: i64, in_$p258: ref, in_$p259: ref, in_$i260: i16, in_$i261: i32, in_$i262: i1, in_$i238: i32, in_$i263: i32, in_$p264: ref) returns (out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i64, out_$i246: i32, out_$i247: i64, out_$i248: i1, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$p253: ref, out_$p254: ref, out_$i255: i16, out_$i256: i32, out_$i257: i64, out_$p258: ref, out_$p259: ref, out_$i260: i16, out_$i261: i32, out_$i262: i1, out_$i238: i32, out_$i263: i32, out_$p264: ref);



implementation INFTL_trydeletechain_loop_$bb77(in_$p0: ref, in_$i1: i32, in_$p9: ref, in_$i188: i64, in_$p191: ref, in_$i200: i32, in_$i198: i32, in_$p199: ref, in_$i227: i64, in_$i228: i64, in_$i229: i64, in_$p230: ref, in_$p231: ref, in_$p232: ref, in_$i233: i16, in_$i234: i32, in_$i235: i1, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i64, in_$i246: i32, in_$i247: i64, in_$i248: i1, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$p253: ref, in_$p254: ref, in_$i255: i16, in_$i256: i32, in_$i257: i64, in_$p258: ref, in_$p259: ref, in_$i260: i16, in_$i261: i32, in_$i262: i1, in_$i238: i32, in_$i263: i32, in_$p264: ref, in_$i236: i32, in_$p237: ref, in_$p265: ref, in_$i266: i64, in_$i267: i64, in_$p268: ref, in_$i269: i64, in_$i270: i64, in_$p271: ref, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i64, in_$i276: i64, in_$p277: ref, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$i281: i64, in_$i282: i64, in_$p283: ref, in_$i284: i8, in_$i285: i64, in_$i286: i64, in_$i287: i32, in_$i288: i64, in_$i289: i1, in_$i291: i32, in_$i292: i1, in_$i293: i64, in_$i294: i64, in_$i295: i64, in_$p296: ref, in_$p297: ref, in_$p298: ref, in_$i299: i64, in_$i300: i64, in_$i301: i64, in_$p302: ref, in_$p303: ref, in_$p304: ref, in_$i305: i64, in_$i306: i64, in_$i307: i64, in_$i308: i64, in_$p309: ref, in_$i310: i16, in_$i311: i32, in_$i312: i32, in_$i313: i16, in_$p314: ref, in_$p316: ref, in_$p317: ref, in_$i318: i16, in_$i319: i32, in_$i320: i1, in_vslice_dummy_var_117: i32, in_vslice_dummy_var_118: i32) returns (out_$i200: i32, out_$i198: i32, out_$p199: ref, out_$i227: i64, out_$i228: i64, out_$i229: i64, out_$p230: ref, out_$p231: ref, out_$p232: ref, out_$i233: i16, out_$i234: i32, out_$i235: i1, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i64, out_$i246: i32, out_$i247: i64, out_$i248: i1, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$p253: ref, out_$p254: ref, out_$i255: i16, out_$i256: i32, out_$i257: i64, out_$p258: ref, out_$p259: ref, out_$i260: i16, out_$i261: i32, out_$i262: i1, out_$i238: i32, out_$i263: i32, out_$p264: ref, out_$i236: i32, out_$p237: ref, out_$p265: ref, out_$i266: i64, out_$i267: i64, out_$p268: ref, out_$i269: i64, out_$i270: i64, out_$p271: ref, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i64, out_$i276: i64, out_$p277: ref, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$i281: i64, out_$i282: i64, out_$p283: ref, out_$i284: i8, out_$i285: i64, out_$i286: i64, out_$i287: i32, out_$i288: i64, out_$i289: i1, out_$i291: i32, out_$i292: i1, out_$i293: i64, out_$i294: i64, out_$i295: i64, out_$p296: ref, out_$p297: ref, out_$p298: ref, out_$i299: i64, out_$i300: i64, out_$i301: i64, out_$p302: ref, out_$p303: ref, out_$p304: ref, out_$i305: i64, out_$i306: i64, out_$i307: i64, out_$i308: i64, out_$p309: ref, out_$i310: i16, out_$i311: i32, out_$i312: i32, out_$i313: i16, out_$p314: ref, out_$p316: ref, out_$p317: ref, out_$i318: i16, out_$i319: i32, out_$i320: i1, out_vslice_dummy_var_117: i32, out_vslice_dummy_var_118: i32)
{

  entry:
    out_$i200, out_$i198, out_$p199, out_$i227, out_$i228, out_$i229, out_$p230, out_$p231, out_$p232, out_$i233, out_$i234, out_$i235, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264, out_$i236, out_$p237, out_$p265, out_$i266, out_$i267, out_$p268, out_$i269, out_$i270, out_$p271, out_$i272, out_$i273, out_$p274, out_$i275, out_$i276, out_$p277, out_$i278, out_$i279, out_$p280, out_$i281, out_$i282, out_$p283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$p296, out_$p297, out_$p298, out_$i299, out_$i300, out_$i301, out_$p302, out_$p303, out_$p304, out_$i305, out_$i306, out_$i307, out_$i308, out_$p309, out_$i310, out_$i311, out_$i312, out_$i313, out_$p314, out_$p316, out_$p317, out_$i318, out_$i319, out_$i320, out_vslice_dummy_var_117, out_vslice_dummy_var_118 := in_$i200, in_$i198, in_$p199, in_$i227, in_$i228, in_$i229, in_$p230, in_$p231, in_$p232, in_$i233, in_$i234, in_$i235, in_$i239, in_$i240, in_$p241, in_$i242, in_$i243, in_$i244, in_$i245, in_$i246, in_$i247, in_$i248, in_$i249, in_$i250, in_$i251, in_$p252, in_$p253, in_$p254, in_$i255, in_$i256, in_$i257, in_$p258, in_$p259, in_$i260, in_$i261, in_$i262, in_$i238, in_$i263, in_$p264, in_$i236, in_$p237, in_$p265, in_$i266, in_$i267, in_$p268, in_$i269, in_$i270, in_$p271, in_$i272, in_$i273, in_$p274, in_$i275, in_$i276, in_$p277, in_$i278, in_$i279, in_$p280, in_$i281, in_$i282, in_$p283, in_$i284, in_$i285, in_$i286, in_$i287, in_$i288, in_$i289, in_$i291, in_$i292, in_$i293, in_$i294, in_$i295, in_$p296, in_$p297, in_$p298, in_$i299, in_$i300, in_$i301, in_$p302, in_$p303, in_$p304, in_$i305, in_$i306, in_$i307, in_$i308, in_$p309, in_$i310, in_$i311, in_$i312, in_$i313, in_$p314, in_$p316, in_$p317, in_$i318, in_$i319, in_$i320, in_vslice_dummy_var_117, in_vslice_dummy_var_118;
    goto $bb77, exit;

  $bb77:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb101:
    assume !(out_$i320 == 1);
    assume {:verifier.code 0} true;
    out_$i198, out_$p199 := out_$i319, out_$p317;
    goto $bb101_dummy;

  corral_source_split_5364:
    assume {:verifier.code 0} true;
    out_$i200 := out_$i319;
    assume true;
    goto $bb101;

  corral_source_split_5363:
    assume {:verifier.code 0} true;
    out_$i320 := $eq.i32(out_$i319, 65535);
    goto corral_source_split_5364;

  corral_source_split_5362:
    assume {:verifier.code 0} true;
    out_$i319 := $zext.i16.i32(out_$i318);
    call {:si_unique_call 2264} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i319);
    goto corral_source_split_5363;

  corral_source_split_5361:
    assume {:verifier.code 0} true;
    out_$i318 := $load.i16($M.1, out_$p317);
    call {:si_unique_call 2263} {:cexpr "__cil_tmp111"} boogie_si_record_i16(out_$i318);
    goto corral_source_split_5362;

  corral_source_split_5360:
    assume {:verifier.code 0} true;
    out_$p317 := $add.ref(out_$p316, $mul.ref(in_$i188, 2));
    goto corral_source_split_5361;

  corral_source_split_5359:
    assume {:verifier.code 0} true;
    out_$p316 := $load.ref($M.1, in_$p191);
    goto corral_source_split_5360;

  corral_source_split_5358:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2262} out_vslice_dummy_var_118 := _cond_resched();
    goto corral_source_split_5359;

  corral_source_split_5357:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2261} __might_sleep(.str.31, 767, 0);
    goto corral_source_split_5358;

  $bb100:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p237, $sub.i16(0, 1));
    goto corral_source_split_5357;

  corral_source_split_5355:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p314, out_$i313);
    assume {:verifier.code 0} true;
    goto $bb100;

  corral_source_split_5336:
    assume {:verifier.code 0} true;
    goto $bb100;

  corral_source_split_5335:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p298, $sub.i16(0, 4));
    goto corral_source_split_5336;

  corral_source_split_5334:
    assume {:verifier.code 0} true;
    out_$p298 := $add.ref(out_$p297, $mul.ref(out_$i293, 2));
    goto corral_source_split_5335;

  corral_source_split_5333:
    assume {:verifier.code 0} true;
    out_$p297 := $load.ref($M.1, out_$p296);
    goto corral_source_split_5334;

  corral_source_split_5332:
    assume {:verifier.code 0} true;
    out_$p296 := $i2p.i64.ref(out_$i295);
    goto corral_source_split_5333;

  corral_source_split_5331:
    assume {:verifier.code 0} true;
    out_$i295 := $add.i64(out_$i294, 544);
    call {:si_unique_call 2250} {:cexpr "__cil_tmp152"} boogie_si_record_i64(out_$i295);
    goto corral_source_split_5332;

  corral_source_split_5330:
    assume {:verifier.code 0} true;
    out_$i294 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2249} {:cexpr "__cil_tmp151"} boogie_si_record_i64(out_$i294);
    goto corral_source_split_5331;

  corral_source_split_5329:
    assume {:verifier.code 0} true;
    out_$i293 := $zext.i32.i64(out_$i236);
    call {:si_unique_call 2248} {:cexpr "__cil_tmp150"} boogie_si_record_i64(out_$i293);
    goto corral_source_split_5330;

  $bb98:
    assume out_$i292 == 1;
    goto corral_source_split_5329;

  corral_source_split_5327:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb98, $bb99;

  corral_source_split_5326:
    assume {:verifier.code 0} true;
    out_$i292 := $slt.i32(out_$i291, 0);
    goto corral_source_split_5327;

  $bb97:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2246} out_$i291 := INFTL_formatblock(in_$p0, out_$i236);
    call {:si_unique_call 2247} {:cexpr "tmp___6"} boogie_si_record_i32(out_$i291);
    goto corral_source_split_5326;

  $bb96:
    assume !(out_$i289 == 1);
    assume {:verifier.code 0} true;
    goto $bb97;

  corral_source_split_5324:
    assume {:verifier.code 0} true;
    goto $bb97;

  corral_source_split_5323:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2245} out_vslice_dummy_var_117 := __dynamic_pr_debug.ref.ref.i32.i32(in_$p9, .str.68, out_$i236, in_$i1);
    goto corral_source_split_5324;

  $bb95:
    assume out_$i289 == 1;
    goto corral_source_split_5323;

  corral_source_split_5321:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb95, $bb96;

  corral_source_split_5320:
    assume {:verifier.code 0} true;
    out_$i289 := $ne.i64(out_$i288, 0);
    goto corral_source_split_5321;

  corral_source_split_5319:
    assume {:verifier.code 0} true;
    out_$i288 := $sext.i32.i64(out_$i287);
    call {:si_unique_call 2244} {:cexpr "tmp___5"} boogie_si_record_i64(out_$i288);
    goto corral_source_split_5320;

  corral_source_split_5318:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2243} out_$i287 := __builtinx_expect.i64.i64(out_$i286, 0);
    goto corral_source_split_5319;

  corral_source_split_5317:
    assume {:verifier.code 0} true;
    out_$i286 := $and.i64(out_$i285, 1);
    call {:si_unique_call 2242} {:cexpr "__cil_tmp148"} boogie_si_record_i64(out_$i286);
    goto corral_source_split_5318;

  corral_source_split_5316:
    assume {:verifier.code 0} true;
    out_$i285 := $zext.i8.i64(out_$i284);
    call {:si_unique_call 2241} {:cexpr "__cil_tmp147"} boogie_si_record_i64(out_$i285);
    goto corral_source_split_5317;

  corral_source_split_5315:
    assume {:verifier.code 0} true;
    out_$i284 := $load.i8($M.1, out_$p283);
    call {:si_unique_call 2240} {:cexpr "__cil_tmp146"} boogie_si_record_i8(out_$i284);
    goto corral_source_split_5316;

  corral_source_split_5314:
    assume {:verifier.code 0} true;
    out_$p283 := $i2p.i64.ref(out_$i282);
    goto corral_source_split_5315;

  corral_source_split_5313:
    assume {:verifier.code 0} true;
    out_$i282 := $add.i64(out_$i281, 35);
    call {:si_unique_call 2239} {:cexpr "__cil_tmp145"} boogie_si_record_i64(out_$i282);
    goto corral_source_split_5314;

  corral_source_split_5312:
    assume {:verifier.code 0} true;
    out_$i281 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5313;

  corral_source_split_5311:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p280, 0);
    goto corral_source_split_5312;

  corral_source_split_5310:
    assume {:verifier.code 0} true;
    out_$p280 := $i2p.i64.ref(out_$i279);
    goto corral_source_split_5311;

  corral_source_split_5309:
    assume {:verifier.code 0} true;
    out_$i279 := $add.i64(out_$i278, 35);
    call {:si_unique_call 2238} {:cexpr "__cil_tmp144"} boogie_si_record_i64(out_$i279);
    goto corral_source_split_5310;

  corral_source_split_5308:
    assume {:verifier.code 0} true;
    out_$i278 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5309;

  corral_source_split_5307:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p277, 748);
    goto corral_source_split_5308;

  corral_source_split_5306:
    assume {:verifier.code 0} true;
    out_$p277 := $i2p.i64.ref(out_$i276);
    goto corral_source_split_5307;

  corral_source_split_5305:
    assume {:verifier.code 0} true;
    out_$i276 := $add.i64(out_$i275, 32);
    call {:si_unique_call 2237} {:cexpr "__cil_tmp143"} boogie_si_record_i64(out_$i276);
    goto corral_source_split_5306;

  corral_source_split_5304:
    assume {:verifier.code 0} true;
    out_$i275 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5305;

  corral_source_split_5303:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p274, .str.68);
    goto corral_source_split_5304;

  corral_source_split_5302:
    assume {:verifier.code 0} true;
    out_$p274 := $i2p.i64.ref(out_$i273);
    goto corral_source_split_5303;

  corral_source_split_5301:
    assume {:verifier.code 0} true;
    out_$i273 := $add.i64(out_$i272, 24);
    call {:si_unique_call 2236} {:cexpr "__cil_tmp142"} boogie_si_record_i64(out_$i273);
    goto corral_source_split_5302;

  corral_source_split_5300:
    assume {:verifier.code 0} true;
    out_$i272 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5301;

  corral_source_split_5299:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p271, .str.31);
    goto corral_source_split_5300;

  corral_source_split_5298:
    assume {:verifier.code 0} true;
    out_$p271 := $i2p.i64.ref(out_$i270);
    goto corral_source_split_5299;

  corral_source_split_5297:
    assume {:verifier.code 0} true;
    out_$i270 := $add.i64(out_$i269, 16);
    call {:si_unique_call 2235} {:cexpr "__cil_tmp141"} boogie_si_record_i64(out_$i270);
    goto corral_source_split_5298;

  corral_source_split_5296:
    assume {:verifier.code 0} true;
    out_$i269 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5297;

  corral_source_split_5295:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p268, .str.63);
    goto corral_source_split_5296;

  corral_source_split_5294:
    assume {:verifier.code 0} true;
    out_$p268 := $i2p.i64.ref(out_$i267);
    goto corral_source_split_5295;

  corral_source_split_5293:
    assume {:verifier.code 0} true;
    out_$i267 := $add.i64(out_$i266, 8);
    call {:si_unique_call 2234} {:cexpr "__cil_tmp140"} boogie_si_record_i64(out_$i267);
    goto corral_source_split_5294;

  corral_source_split_5292:
    assume {:verifier.code 0} true;
    out_$i266 := $p2i.ref.i64(in_$p9);
    goto corral_source_split_5293;

  corral_source_split_5291:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p265, .str);
    goto corral_source_split_5292;

  $bb94:
    assume {:verifier.code 0} true;
    out_$p265 := $bitcast.ref.ref(in_$p9);
    goto corral_source_split_5291;

  corral_source_split_5257:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb85:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5257;

  $bb84:
    assume {:verifier.code 0} true;
    assume !(out_$i235 == 1);
    goto $bb85;

  corral_source_split_5289:
    assume {:verifier.code 0} true;
    out_$i236, out_$p237 := out_$i263, out_$p264;
    goto $bb85;

  $bb93:
    assume !(out_$i262 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5289;

  corral_source_split_5287:
    assume {:verifier.code 0} true;
    out_$i263, out_$p264 := out_$i256, out_$p254;
    assume true;
    goto $bb92, $bb93;

  corral_source_split_5286:
    assume {:verifier.code 0} true;
    out_$i262 := $ne.i32(out_$i261, 65535);
    goto corral_source_split_5287;

  corral_source_split_5285:
    assume {:verifier.code 0} true;
    out_$i261 := $zext.i16.i32(out_$i260);
    call {:si_unique_call 2233} {:cexpr "__cil_tmp138"} boogie_si_record_i32(out_$i261);
    goto corral_source_split_5286;

  corral_source_split_5284:
    assume {:verifier.code 0} true;
    out_$i260 := $load.i16($M.1, out_$p259);
    call {:si_unique_call 2232} {:cexpr "__cil_tmp137"} boogie_si_record_i16(out_$i260);
    goto corral_source_split_5285;

  corral_source_split_5283:
    assume {:verifier.code 0} true;
    out_$p259 := $add.ref(out_$p258, $mul.ref(out_$i257, 2));
    goto corral_source_split_5284;

  corral_source_split_5282:
    assume {:verifier.code 0} true;
    out_$p258 := $load.ref($M.1, out_$p230);
    goto corral_source_split_5283;

  corral_source_split_5281:
    assume {:verifier.code 0} true;
    out_$i257 := $zext.i32.i64(out_$i256);
    call {:si_unique_call 2231} {:cexpr "__cil_tmp132"} boogie_si_record_i64(out_$i257);
    goto corral_source_split_5282;

  corral_source_split_5280:
    assume {:verifier.code 0} true;
    out_$i256 := $zext.i16.i32(out_$i255);
    call {:si_unique_call 2230} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i256);
    goto corral_source_split_5281;

  corral_source_split_5279:
    assume {:verifier.code 0} true;
    out_$i255 := $load.i16($M.1, out_$p254);
    call {:si_unique_call 2229} {:cexpr "__cil_tmp131"} boogie_si_record_i16(out_$i255);
    goto corral_source_split_5280;

  corral_source_split_5278:
    assume {:verifier.code 0} true;
    out_$p254 := $add.ref(out_$p253, $mul.ref(out_$i249, 2));
    goto corral_source_split_5279;

  corral_source_split_5277:
    assume {:verifier.code 0} true;
    out_$p253 := $load.ref($M.1, out_$p252);
    goto corral_source_split_5278;

  corral_source_split_5276:
    assume {:verifier.code 0} true;
    out_$p252 := $i2p.i64.ref(out_$i251);
    goto corral_source_split_5277;

  corral_source_split_5275:
    assume {:verifier.code 0} true;
    out_$i251 := $add.i64(out_$i250, 544);
    call {:si_unique_call 2228} {:cexpr "__cil_tmp129"} boogie_si_record_i64(out_$i251);
    goto corral_source_split_5276;

  corral_source_split_5274:
    assume {:verifier.code 0} true;
    out_$i250 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2227} {:cexpr "__cil_tmp128"} boogie_si_record_i64(out_$i250);
    goto corral_source_split_5275;

  $bb91:
    assume {:verifier.code 0} true;
    out_$i249 := $zext.i32.i64(out_$i238);
    call {:si_unique_call 2226} {:cexpr "__cil_tmp127"} boogie_si_record_i64(out_$i249);
    goto corral_source_split_5274;

  $bb89:
    assume !(out_$i248 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  corral_source_split_5270:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb89;

  corral_source_split_5269:
    assume {:verifier.code 0} true;
    out_$i248 := $ne.i64(out_$i247, 0);
    goto corral_source_split_5270;

  corral_source_split_5268:
    assume {:verifier.code 0} true;
    out_$i247 := $sext.i32.i64(out_$i246);
    call {:si_unique_call 2224} {:cexpr "tmp___4"} boogie_si_record_i64(out_$i247);
    goto corral_source_split_5269;

  corral_source_split_5267:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2223} out_$i246 := __builtinx_expect.i64.i64(out_$i245, 0);
    goto corral_source_split_5268;

  corral_source_split_5266:
    assume {:verifier.code 0} true;
    out_$i245 := $sext.i32.i64(out_$i244);
    call {:si_unique_call 2222} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i245);
    goto corral_source_split_5267;

  corral_source_split_5265:
    assume {:verifier.code 0} true;
    out_$i244 := $zext.i1.i32(out_$i243);
    call {:si_unique_call 2221} {:cexpr "__cil_tmp125"} boogie_si_record_i32(out_$i244);
    goto corral_source_split_5266;

  corral_source_split_5264:
    assume {:verifier.code 0} true;
    out_$i243 := $ule.i32(out_$i242, out_$i238);
    goto corral_source_split_5265;

  corral_source_split_5263:
    assume {:verifier.code 0} true;
    out_$i242 := $load.i32($M.1, out_$p241);
    call {:si_unique_call 2220} {:cexpr "__cil_tmp124"} boogie_si_record_i32(out_$i242);
    goto corral_source_split_5264;

  corral_source_split_5262:
    assume {:verifier.code 0} true;
    out_$p241 := $i2p.i64.ref(out_$i240);
    goto corral_source_split_5263;

  corral_source_split_5261:
    assume {:verifier.code 0} true;
    out_$i240 := $add.i64(out_$i239, 560);
    call {:si_unique_call 2219} {:cexpr "__cil_tmp123"} boogie_si_record_i64(out_$i240);
    goto corral_source_split_5262;

  $bb87:
    assume {:verifier.code 0} true;
    out_$i239 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2218} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i239);
    goto corral_source_split_5261;

  corral_source_split_5259:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb86:
    call out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264 := INFTL_trydeletechain_loop_$bb86(in_$p0, out_$p230, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264);
    goto $bb86_last;

  $bb86_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5259;

  corral_source_split_5255:
    assume {:verifier.code 0} true;
    out_$i238 := out_$i198;
    goto $bb86;

  $bb92:
    assume out_$i262 == 1;
    assume {:verifier.code 0} true;
    out_$i238 := out_$i256;
    assume false;
    return;

  $bb83:
    assume out_$i235 == 1;
    goto corral_source_split_5255;

  corral_source_split_5253:
    assume {:verifier.code 0} true;
    out_$i236, out_$p237 := out_$i198, out_$p199;
    assume true;
    goto $bb83, $bb84;

  corral_source_split_5252:
    assume {:verifier.code 0} true;
    out_$i235 := $ne.i32(out_$i234, 65535);
    goto corral_source_split_5253;

  corral_source_split_5251:
    assume {:verifier.code 0} true;
    out_$i234 := $zext.i16.i32(out_$i233);
    call {:si_unique_call 2217} {:cexpr "__cil_tmp138"} boogie_si_record_i32(out_$i234);
    goto corral_source_split_5252;

  corral_source_split_5250:
    assume {:verifier.code 0} true;
    out_$i233 := $load.i16($M.1, out_$p232);
    call {:si_unique_call 2216} {:cexpr "__cil_tmp137"} boogie_si_record_i16(out_$i233);
    goto corral_source_split_5251;

  corral_source_split_5249:
    assume {:verifier.code 0} true;
    out_$p232 := $add.ref(out_$p231, $mul.ref(out_$i227, 2));
    goto corral_source_split_5250;

  corral_source_split_5248:
    assume {:verifier.code 0} true;
    out_$p231 := $load.ref($M.1, out_$p230);
    goto corral_source_split_5249;

  corral_source_split_5247:
    assume {:verifier.code 0} true;
    out_$p230 := $i2p.i64.ref(out_$i229);
    goto corral_source_split_5248;

  corral_source_split_5246:
    assume {:verifier.code 0} true;
    out_$i229 := $add.i64(out_$i228, 544);
    call {:si_unique_call 2215} {:cexpr "__cil_tmp134"} boogie_si_record_i64(out_$i229);
    goto corral_source_split_5247;

  corral_source_split_5245:
    assume {:verifier.code 0} true;
    out_$i228 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2214} {:cexpr "__cil_tmp133"} boogie_si_record_i64(out_$i228);
    goto corral_source_split_5246;

  $bb82:
    assume {:verifier.code 0} true;
    out_$i227 := $zext.i32.i64(out_$i198);
    call {:si_unique_call 2213} {:cexpr "__cil_tmp132"} boogie_si_record_i64(out_$i227);
    goto corral_source_split_5245;

  corral_source_split_5354:
    assume {:verifier.code 0} true;
    out_$p314 := $i2p.i64.ref(out_$i306);
    goto corral_source_split_5355;

  corral_source_split_5353:
    assume {:verifier.code 0} true;
    out_$i313 := $trunc.i32.i16(out_$i312);
    goto corral_source_split_5354;

  corral_source_split_5352:
    assume {:verifier.code 0} true;
    out_$i312 := $add.i32(out_$i311, 1);
    call {:si_unique_call 2260} {:cexpr "__cil_tmp166"} boogie_si_record_i32(out_$i312);
    goto corral_source_split_5353;

  corral_source_split_5351:
    assume {:verifier.code 0} true;
    out_$i311 := $zext.i16.i32(out_$i310);
    call {:si_unique_call 2259} {:cexpr "__cil_tmp165"} boogie_si_record_i32(out_$i311);
    goto corral_source_split_5352;

  corral_source_split_5350:
    assume {:verifier.code 0} true;
    out_$i310 := $load.i16($M.1, out_$p309);
    call {:si_unique_call 2258} {:cexpr "__cil_tmp164"} boogie_si_record_i16(out_$i310);
    goto corral_source_split_5351;

  corral_source_split_5349:
    assume {:verifier.code 0} true;
    out_$p309 := $i2p.i64.ref(out_$i308);
    goto corral_source_split_5350;

  corral_source_split_5348:
    assume {:verifier.code 0} true;
    out_$i308 := $add.i64(out_$i307, 522);
    call {:si_unique_call 2257} {:cexpr "__cil_tmp163"} boogie_si_record_i64(out_$i308);
    goto corral_source_split_5349;

  corral_source_split_5347:
    assume {:verifier.code 0} true;
    out_$i307 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2256} {:cexpr "__cil_tmp162"} boogie_si_record_i64(out_$i307);
    goto corral_source_split_5348;

  corral_source_split_5346:
    assume {:verifier.code 0} true;
    out_$i306 := $add.i64(out_$i305, 522);
    call {:si_unique_call 2255} {:cexpr "__cil_tmp161"} boogie_si_record_i64(out_$i306);
    goto corral_source_split_5347;

  corral_source_split_5345:
    assume {:verifier.code 0} true;
    out_$i305 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2254} {:cexpr "__cil_tmp160"} boogie_si_record_i64(out_$i305);
    goto corral_source_split_5346;

  corral_source_split_5344:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p304, $sub.i16(0, 2));
    goto corral_source_split_5345;

  corral_source_split_5343:
    assume {:verifier.code 0} true;
    out_$p304 := $add.ref(out_$p303, $mul.ref(out_$i299, 2));
    goto corral_source_split_5344;

  corral_source_split_5342:
    assume {:verifier.code 0} true;
    out_$p303 := $load.ref($M.1, out_$p302);
    goto corral_source_split_5343;

  corral_source_split_5341:
    assume {:verifier.code 0} true;
    out_$p302 := $i2p.i64.ref(out_$i301);
    goto corral_source_split_5342;

  corral_source_split_5340:
    assume {:verifier.code 0} true;
    out_$i301 := $add.i64(out_$i300, 544);
    call {:si_unique_call 2253} {:cexpr "__cil_tmp157"} boogie_si_record_i64(out_$i301);
    goto corral_source_split_5341;

  corral_source_split_5339:
    assume {:verifier.code 0} true;
    out_$i300 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2252} {:cexpr "__cil_tmp156"} boogie_si_record_i64(out_$i300);
    goto corral_source_split_5340;

  corral_source_split_5338:
    assume {:verifier.code 0} true;
    out_$i299 := $zext.i32.i64(out_$i236);
    call {:si_unique_call 2251} {:cexpr "__cil_tmp155"} boogie_si_record_i64(out_$i299);
    goto corral_source_split_5339;

  $bb99:
    assume !(out_$i292 == 1);
    goto corral_source_split_5338;

  $bb101_dummy:
    call {:si_unique_call 1} out_$i200, out_$i198, out_$p199, out_$i227, out_$i228, out_$i229, out_$p230, out_$p231, out_$p232, out_$i233, out_$i234, out_$i235, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264, out_$i236, out_$p237, out_$p265, out_$i266, out_$i267, out_$p268, out_$i269, out_$i270, out_$p271, out_$i272, out_$i273, out_$p274, out_$i275, out_$i276, out_$p277, out_$i278, out_$i279, out_$p280, out_$i281, out_$i282, out_$p283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$p296, out_$p297, out_$p298, out_$i299, out_$i300, out_$i301, out_$p302, out_$p303, out_$p304, out_$i305, out_$i306, out_$i307, out_$i308, out_$p309, out_$i310, out_$i311, out_$i312, out_$i313, out_$p314, out_$p316, out_$p317, out_$i318, out_$i319, out_$i320, out_vslice_dummy_var_117, out_vslice_dummy_var_118 := INFTL_trydeletechain_loop_$bb77(in_$p0, in_$i1, in_$p9, in_$i188, in_$p191, out_$i200, out_$i198, out_$p199, out_$i227, out_$i228, out_$i229, out_$p230, out_$p231, out_$p232, out_$i233, out_$i234, out_$i235, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$i244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$p253, out_$p254, out_$i255, out_$i256, out_$i257, out_$p258, out_$p259, out_$i260, out_$i261, out_$i262, out_$i238, out_$i263, out_$p264, out_$i236, out_$p237, out_$p265, out_$i266, out_$i267, out_$p268, out_$i269, out_$i270, out_$p271, out_$i272, out_$i273, out_$p274, out_$i275, out_$i276, out_$p277, out_$i278, out_$i279, out_$p280, out_$i281, out_$i282, out_$p283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$p296, out_$p297, out_$p298, out_$i299, out_$i300, out_$i301, out_$p302, out_$p303, out_$p304, out_$i305, out_$i306, out_$i307, out_$i308, out_$p309, out_$i310, out_$i311, out_$i312, out_$i313, out_$p314, out_$p316, out_$p317, out_$i318, out_$i319, out_$i320, out_vslice_dummy_var_117, out_vslice_dummy_var_118);
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb77(in_$p0: ref, in_$i1: i32, in_$p9: ref, in_$i188: i64, in_$p191: ref, in_$i200: i32, in_$i198: i32, in_$p199: ref, in_$i227: i64, in_$i228: i64, in_$i229: i64, in_$p230: ref, in_$p231: ref, in_$p232: ref, in_$i233: i16, in_$i234: i32, in_$i235: i1, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i32, in_$i243: i1, in_$i244: i32, in_$i245: i64, in_$i246: i32, in_$i247: i64, in_$i248: i1, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$p253: ref, in_$p254: ref, in_$i255: i16, in_$i256: i32, in_$i257: i64, in_$p258: ref, in_$p259: ref, in_$i260: i16, in_$i261: i32, in_$i262: i1, in_$i238: i32, in_$i263: i32, in_$p264: ref, in_$i236: i32, in_$p237: ref, in_$p265: ref, in_$i266: i64, in_$i267: i64, in_$p268: ref, in_$i269: i64, in_$i270: i64, in_$p271: ref, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i64, in_$i276: i64, in_$p277: ref, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$i281: i64, in_$i282: i64, in_$p283: ref, in_$i284: i8, in_$i285: i64, in_$i286: i64, in_$i287: i32, in_$i288: i64, in_$i289: i1, in_$i291: i32, in_$i292: i1, in_$i293: i64, in_$i294: i64, in_$i295: i64, in_$p296: ref, in_$p297: ref, in_$p298: ref, in_$i299: i64, in_$i300: i64, in_$i301: i64, in_$p302: ref, in_$p303: ref, in_$p304: ref, in_$i305: i64, in_$i306: i64, in_$i307: i64, in_$i308: i64, in_$p309: ref, in_$i310: i16, in_$i311: i32, in_$i312: i32, in_$i313: i16, in_$p314: ref, in_$p316: ref, in_$p317: ref, in_$i318: i16, in_$i319: i32, in_$i320: i1, in_vslice_dummy_var_117: i32, in_vslice_dummy_var_118: i32) returns (out_$i200: i32, out_$i198: i32, out_$p199: ref, out_$i227: i64, out_$i228: i64, out_$i229: i64, out_$p230: ref, out_$p231: ref, out_$p232: ref, out_$i233: i16, out_$i234: i32, out_$i235: i1, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i32, out_$i243: i1, out_$i244: i32, out_$i245: i64, out_$i246: i32, out_$i247: i64, out_$i248: i1, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$p253: ref, out_$p254: ref, out_$i255: i16, out_$i256: i32, out_$i257: i64, out_$p258: ref, out_$p259: ref, out_$i260: i16, out_$i261: i32, out_$i262: i1, out_$i238: i32, out_$i263: i32, out_$p264: ref, out_$i236: i32, out_$p237: ref, out_$p265: ref, out_$i266: i64, out_$i267: i64, out_$p268: ref, out_$i269: i64, out_$i270: i64, out_$p271: ref, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i64, out_$i276: i64, out_$p277: ref, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$i281: i64, out_$i282: i64, out_$p283: ref, out_$i284: i8, out_$i285: i64, out_$i286: i64, out_$i287: i32, out_$i288: i64, out_$i289: i1, out_$i291: i32, out_$i292: i1, out_$i293: i64, out_$i294: i64, out_$i295: i64, out_$p296: ref, out_$p297: ref, out_$p298: ref, out_$i299: i64, out_$i300: i64, out_$i301: i64, out_$p302: ref, out_$p303: ref, out_$p304: ref, out_$i305: i64, out_$i306: i64, out_$i307: i64, out_$i308: i64, out_$p309: ref, out_$i310: i16, out_$i311: i32, out_$i312: i32, out_$i313: i16, out_$p314: ref, out_$p316: ref, out_$p317: ref, out_$i318: i16, out_$i319: i32, out_$i320: i1, out_vslice_dummy_var_117: i32, out_vslice_dummy_var_118: i32);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_trydeletechain_loop_$bb63(in_$p2: ref, in_$p144: ref, in_$i149: i64, in_$i150: i64, in_$p151: ref, in_$i152: i64, in_$i153: i64, in_$p154: ref, in_$i155: i8, in_$i156: i32, in_$i157: i1, in_$i158: i32, in_$i159: i32, in_$i160: i32, in_$i161: i1, in_$i148: i32) returns (out_$i149: i64, out_$i150: i64, out_$p151: ref, out_$i152: i64, out_$i153: i64, out_$p154: ref, out_$i155: i8, out_$i156: i32, out_$i157: i1, out_$i158: i32, out_$i159: i32, out_$i160: i32, out_$i161: i1, out_$i148: i32)
{

  entry:
    out_$i149, out_$i150, out_$p151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i148 := in_$i149, in_$i150, in_$p151, in_$i152, in_$i153, in_$p154, in_$i155, in_$i156, in_$i157, in_$i158, in_$i159, in_$i160, in_$i161, in_$i148;
    goto $bb63, exit;

  $bb63:
    assume {:verifier.code 0} true;
    goto corral_source_split_5139;

  $bb68:
    assume out_$i161 == 1;
    assume {:verifier.code 0} true;
    out_$i148 := out_$i158;
    goto $bb68_dummy;

  corral_source_split_5156:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb68;

  corral_source_split_5155:
    assume {:verifier.code 0} true;
    out_$i161 := $ult.i32(out_$i158, out_$i160);
    goto corral_source_split_5156;

  corral_source_split_5154:
    assume {:verifier.code 0} true;
    out_$i160 := $udiv.i32(out_$i159, 512);
    call {:si_unique_call 2183} {:cexpr "__cil_tmp95"} boogie_si_record_i32(out_$i160);
    goto corral_source_split_5155;

  corral_source_split_5153:
    assume {:verifier.code 0} true;
    out_$i159 := $load.i32($M.1, in_$p144);
    call {:si_unique_call 2182} {:cexpr "__cil_tmp94"} boogie_si_record_i32(out_$i159);
    goto corral_source_split_5154;

  $bb67:
    assume {:verifier.code 0} true;
    out_$i158 := $add.i32(out_$i148, 1);
    call {:si_unique_call 2181} {:cexpr "block"} boogie_si_record_i32(out_$i158);
    goto corral_source_split_5153;

  $bb66:
    assume !(out_$i157 == 1);
    assume {:verifier.code 0} true;
    goto $bb67;

  corral_source_split_5149:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb66;

  corral_source_split_5148:
    assume {:verifier.code 0} true;
    out_$i157 := $ne.i32(out_$i156, 0);
    goto corral_source_split_5149;

  corral_source_split_5147:
    assume {:verifier.code 0} true;
    out_$i156 := $zext.i8.i32(out_$i155);
    call {:si_unique_call 2180} {:cexpr "__cil_tmp91"} boogie_si_record_i32(out_$i156);
    goto corral_source_split_5148;

  corral_source_split_5146:
    assume {:verifier.code 0} true;
    out_$i155 := $load.i8($M.1, out_$p154);
    call {:si_unique_call 2179} {:cexpr "__cil_tmp90"} boogie_si_record_i8(out_$i155);
    goto corral_source_split_5147;

  corral_source_split_5145:
    assume {:verifier.code 0} true;
    out_$p154 := $i2p.i64.ref(out_$i153);
    goto corral_source_split_5146;

  corral_source_split_5144:
    assume {:verifier.code 0} true;
    out_$i153 := $add.i64(out_$i152, out_$i150);
    call {:si_unique_call 2178} {:cexpr "__cil_tmp89"} boogie_si_record_i64(out_$i153);
    goto corral_source_split_5145;

  corral_source_split_5143:
    assume {:verifier.code 0} true;
    out_$i152 := $p2i.ref.i64(out_$p151);
    goto corral_source_split_5144;

  corral_source_split_5142:
    assume {:verifier.code 0} true;
    out_$p151 := $add.ref($add.ref(in_$p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5143;

  corral_source_split_5141:
    assume {:verifier.code 0} true;
    out_$i150 := $mul.i64(out_$i149, 1);
    call {:si_unique_call 2177} {:cexpr "__cil_tmp88"} boogie_si_record_i64(out_$i150);
    goto corral_source_split_5142;

  $bb64:
    assume {:verifier.code 0} true;
    out_$i149 := $sext.i32.i64(out_$i148);
    goto corral_source_split_5141;

  corral_source_split_5139:
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb68_dummy:
    call {:si_unique_call 1} out_$i149, out_$i150, out_$p151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i148 := INFTL_trydeletechain_loop_$bb63(in_$p2, in_$p144, out_$i149, out_$i150, out_$p151, out_$i152, out_$i153, out_$p154, out_$i155, out_$i156, out_$i157, out_$i158, out_$i159, out_$i160, out_$i161, out_$i148);
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb63(in_$p2: ref, in_$p144: ref, in_$i149: i64, in_$i150: i64, in_$p151: ref, in_$i152: i64, in_$i153: i64, in_$p154: ref, in_$i155: i8, in_$i156: i32, in_$i157: i1, in_$i158: i32, in_$i159: i32, in_$i160: i32, in_$i161: i1, in_$i148: i32) returns (out_$i149: i64, out_$i150: i64, out_$p151: ref, out_$i152: i64, out_$i153: i64, out_$p154: ref, out_$i155: i8, out_$i156: i32, out_$i157: i1, out_$i158: i32, out_$i159: i32, out_$i160: i32, out_$i161: i1, out_$i148: i32);



implementation INFTL_trydeletechain_loop_$bb16(in_$p0: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p13: ref, in_$p61: ref, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i8, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i1, in_$i85: i32, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i32, in_$i92: i64, in_$p93: ref, in_$i94: i32, in_$i95: i1, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i8, in_$i101: i32, in_$i102: i64, in_$i103: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i96: i32, in_$i108: i1, in_$i109: i1, in_$i110: i1, in_$i111: i1, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i75: i32, in_$i125: i32, in_$i126: i32, in_$i127: i32, in_$i128: i1, in_$i65: i32, in_$i58: i32, in_vslice_dummy_var_113: i32) returns (out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i8, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i1, out_$i85: i32, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i32, out_$i92: i64, out_$p93: ref, out_$i94: i32, out_$i95: i1, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i8, out_$i101: i32, out_$i102: i64, out_$i103: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i96: i32, out_$i108: i1, out_$i109: i1, out_$i110: i1, out_$i111: i1, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i75: i32, out_$i125: i32, out_$i126: i32, out_$i127: i32, out_$i128: i1, out_$i65: i32, out_vslice_dummy_var_113: i32)
{

  entry:
    out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_vslice_dummy_var_113 := in_$i66, in_$i67, in_$p68, in_$i69, in_$i70, in_$p71, in_$i72, in_$i73, in_$i74, in_$i76, in_$i77, in_$p78, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$i84, in_$i85, in_$i86, in_$i87, in_$p88, in_$i89, in_$i90, in_$i91, in_$i92, in_$p93, in_$i94, in_$i95, in_$i97, in_$i98, in_$p99, in_$i100, in_$i101, in_$i102, in_$i103, in_$p104, in_$i105, in_$i106, in_$i107, in_$i96, in_$i108, in_$i109, in_$i110, in_$i111, in_$i112, in_$i113, in_$p114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$p120, in_$i121, in_$i122, in_$p123, in_$i75, in_$i125, in_$i126, in_$i127, in_$i128, in_$i65, in_vslice_dummy_var_113;
    goto $bb16, exit;

  $bb16:
    assume {:verifier.code 0} true;
    goto corral_source_split_5008;

  $bb51:
    assume out_$i128 == 1;
    assume {:verifier.code 0} true;
    out_$i65 := out_$i125;
    goto $bb51_dummy;

  corral_source_split_5037:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51;

  corral_source_split_5036:
    assume {:verifier.code 0} true;
    out_$i128 := $ult.i32(out_$i125, out_$i127);
    goto corral_source_split_5037;

  corral_source_split_5035:
    assume {:verifier.code 0} true;
    out_$i127 := $udiv.i32(out_$i126, 512);
    call {:si_unique_call 2143} {:cexpr "__cil_tmp77"} boogie_si_record_i32(out_$i127);
    goto corral_source_split_5036;

  corral_source_split_5034:
    assume {:verifier.code 0} true;
    out_$i126 := $load.i32($M.1, in_$p61);
    call {:si_unique_call 2142} {:cexpr "__cil_tmp76"} boogie_si_record_i32(out_$i126);
    goto corral_source_split_5035;

  corral_source_split_5033:
    assume {:verifier.code 0} true;
    out_$i125 := $add.i32(out_$i75, 1);
    call {:si_unique_call 2141} {:cexpr "block"} boogie_si_record_i32(out_$i125);
    goto corral_source_split_5034;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5033;

  $bb44:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5103:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5091:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5039:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5020:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  $bb18:
    assume out_$i74 == 1;
    goto corral_source_split_5020;

  corral_source_split_5018:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_5017:
    assume {:verifier.code 0} true;
    out_$i74 := $ne.i32(out_$i73, 0);
    goto corral_source_split_5018;

  corral_source_split_5016:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i8.i32(out_$i72);
    call {:si_unique_call 2136} {:cexpr "__cil_tmp49"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_5017;

  corral_source_split_5015:
    assume {:verifier.code 0} true;
    out_$i72 := $load.i8($M.1, out_$p71);
    call {:si_unique_call 2135} {:cexpr "__cil_tmp48"} boogie_si_record_i8(out_$i72);
    goto corral_source_split_5016;

  corral_source_split_5014:
    assume {:verifier.code 0} true;
    out_$p71 := $i2p.i64.ref(out_$i70);
    goto corral_source_split_5015;

  corral_source_split_5013:
    assume {:verifier.code 0} true;
    out_$i70 := $add.i64(out_$i69, out_$i67);
    call {:si_unique_call 2134} {:cexpr "__cil_tmp47"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_5014;

  corral_source_split_5012:
    assume {:verifier.code 0} true;
    out_$i69 := $p2i.ref.i64(out_$p68);
    goto corral_source_split_5013;

  corral_source_split_5011:
    assume {:verifier.code 0} true;
    out_$p68 := $add.ref($add.ref(in_$p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5012;

  corral_source_split_5010:
    assume {:verifier.code 0} true;
    out_$i67 := $mul.i64(out_$i66, 1);
    call {:si_unique_call 2133} {:cexpr "__cil_tmp46"} boogie_si_record_i64(out_$i67);
    goto corral_source_split_5011;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i66 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5010;

  corral_source_split_5008:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb21:
    assume out_$i84 == 1;
    goto corral_source_split_5039;

  corral_source_split_5031:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_5030:
    assume {:verifier.code 0} true;
    out_$i84 := $ne.i32(out_$i83, 0);
    goto corral_source_split_5031;

  corral_source_split_5029:
    assume {:verifier.code 0} true;
    out_$i83 := $zext.i8.i32(out_$i82);
    call {:si_unique_call 2140} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_5030;

  corral_source_split_5028:
    assume {:verifier.code 0} true;
    out_$i82 := $load.i8($M.1, out_$p81);
    call {:si_unique_call 2139} {:cexpr "__cil_tmp52"} boogie_si_record_i8(out_$i82);
    goto corral_source_split_5029;

  corral_source_split_5027:
    assume {:verifier.code 0} true;
    out_$p81 := $i2p.i64.ref(out_$i80);
    goto corral_source_split_5028;

  corral_source_split_5026:
    assume {:verifier.code 0} true;
    out_$i80 := $add.i64(out_$i79, out_$i77);
    call {:si_unique_call 2138} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_5027;

  corral_source_split_5025:
    assume {:verifier.code 0} true;
    out_$i79 := $p2i.ref.i64(out_$p78);
    goto corral_source_split_5026;

  corral_source_split_5024:
    assume {:verifier.code 0} true;
    out_$p78 := $add.ref($add.ref(in_$p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5025;

  corral_source_split_5023:
    assume {:verifier.code 0} true;
    out_$i77 := $mul.i64(out_$i76, 1);
    call {:si_unique_call 2137} {:cexpr "__cil_tmp50"} boogie_si_record_i64(out_$i77);
    goto corral_source_split_5024;

  corral_source_split_5022:
    assume {:verifier.code 0} true;
    out_$i76 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5023;

  $bb19:
    assume !(out_$i74 == 1);
    goto corral_source_split_5022;

  corral_source_split_5090:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p117, 1);
    goto corral_source_split_5091;

  corral_source_split_5089:
    assume {:verifier.code 0} true;
    out_$p117 := $i2p.i64.ref(out_$i116);
    goto corral_source_split_5090;

  corral_source_split_5088:
    assume {:verifier.code 0} true;
    out_$i116 := $add.i64(out_$i115, out_$i113);
    call {:si_unique_call 2161} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_5089;

  corral_source_split_5087:
    assume {:verifier.code 0} true;
    out_$i115 := $p2i.ref.i64(out_$p114);
    goto corral_source_split_5088;

  corral_source_split_5086:
    assume {:verifier.code 0} true;
    out_$p114 := $add.ref($add.ref(in_$p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5087;

  corral_source_split_5085:
    assume {:verifier.code 0} true;
    out_$i113 := $mul.i64(out_$i112, 1);
    call {:si_unique_call 2160} {:cexpr "__cil_tmp70"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_5086;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i112 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5085;

  corral_source_split_5080:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb34:
    assume out_$i110 == 1;
    goto corral_source_split_5080;

  corral_source_split_5078:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_5077:
    assume {:verifier.code 0} true;
    out_$i110 := $eq.i32(out_$i96, 85);
    goto corral_source_split_5078;

  $bb32:
    assume !(out_$i109 == 1);
    goto corral_source_split_5077;

  corral_source_split_5073:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_5072:
    assume {:verifier.code 0} true;
    out_$i109 := $eq.i32(out_$i96, 17);
    goto corral_source_split_5073;

  $bb29:
    assume !(out_$i108 == 1);
    goto corral_source_split_5072;

  corral_source_split_5068:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_5067:
    assume {:verifier.code 0} true;
    out_$i108 := $eq.i32(out_$i96, 255);
    goto corral_source_split_5068;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5067;

  corral_source_split_5065:
    assume {:verifier.code 0} true;
    out_$i107 := $or.i32(out_$i106, out_$i101);
    call {:si_unique_call 2159} {:cexpr "__cil_tmp69"} boogie_si_record_i32(out_$i107);
    assume {:verifier.code 0} true;
    out_$i96 := out_$i107;
    goto $bb27;

  corral_source_split_5053:
    assume {:verifier.code 0} true;
    out_$i96 := 17;
    goto $bb27;

  $bb25:
    assume out_$i95 == 1;
    goto corral_source_split_5053;

  corral_source_split_5051:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  corral_source_split_5050:
    assume {:verifier.code 0} true;
    out_$i95 := $slt.i32(out_$i94, 0);
    goto corral_source_split_5051;

  corral_source_split_5049:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2151} out_$i94 := inftl_read_oob(in_$p13, out_$i92, 8, in_$p5, out_$p93);
    call {:si_unique_call 2152} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i94);
    goto corral_source_split_5050;

  corral_source_split_5048:
    assume {:verifier.code 0} true;
    out_$p93 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_5049;

  corral_source_split_5047:
    assume {:verifier.code 0} true;
    out_$i92 := $zext.i32.i64(out_$i91);
    call {:si_unique_call 2150} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i92);
    goto corral_source_split_5048;

  corral_source_split_5046:
    assume {:verifier.code 0} true;
    out_$i91 := $add.i32(out_$i90, out_$i85);
    call {:si_unique_call 2149} {:cexpr "__cil_tmp60"} boogie_si_record_i32(out_$i91);
    goto corral_source_split_5047;

  corral_source_split_5045:
    assume {:verifier.code 0} true;
    out_$i90 := $mul.i32(out_$i89, in_$i58);
    call {:si_unique_call 2148} {:cexpr "__cil_tmp59"} boogie_si_record_i32(out_$i90);
    goto corral_source_split_5046;

  corral_source_split_5044:
    assume {:verifier.code 0} true;
    out_$i89 := $load.i32($M.1, out_$p88);
    call {:si_unique_call 2147} {:cexpr "__cil_tmp58"} boogie_si_record_i32(out_$i89);
    goto corral_source_split_5045;

  corral_source_split_5043:
    assume {:verifier.code 0} true;
    out_$p88 := $i2p.i64.ref(out_$i87);
    goto corral_source_split_5044;

  corral_source_split_5042:
    assume {:verifier.code 0} true;
    out_$i87 := $add.i64(out_$i86, 356);
    call {:si_unique_call 2146} {:cexpr "__cil_tmp57"} boogie_si_record_i64(out_$i87);
    goto corral_source_split_5043;

  corral_source_split_5041:
    assume {:verifier.code 0} true;
    out_$i86 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2145} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i86);
    goto corral_source_split_5042;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i85 := $mul.i32(out_$i65, 512);
    call {:si_unique_call 2144} {:cexpr "__cil_tmp54"} boogie_si_record_i32(out_$i85);
    goto corral_source_split_5041;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i84 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  corral_source_split_5064:
    assume {:verifier.code 0} true;
    out_$i106 := $zext.i8.i32(out_$i105);
    call {:si_unique_call 2158} {:cexpr "__cil_tmp68"} boogie_si_record_i32(out_$i106);
    goto corral_source_split_5065;

  corral_source_split_5063:
    assume {:verifier.code 0} true;
    out_$i105 := $load.i8($M.1, out_$p104);
    call {:si_unique_call 2157} {:cexpr "__cil_tmp67"} boogie_si_record_i8(out_$i105);
    goto corral_source_split_5064;

  corral_source_split_5062:
    assume {:verifier.code 0} true;
    out_$p104 := $i2p.i64.ref(out_$i103);
    goto corral_source_split_5063;

  corral_source_split_5061:
    assume {:verifier.code 0} true;
    out_$i103 := $add.i64(out_$i102, 6);
    call {:si_unique_call 2156} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i103);
    goto corral_source_split_5062;

  corral_source_split_5060:
    assume {:verifier.code 0} true;
    out_$i102 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_5061;

  corral_source_split_5059:
    assume {:verifier.code 0} true;
    out_$i101 := $zext.i8.i32(out_$i100);
    call {:si_unique_call 2155} {:cexpr "__cil_tmp65"} boogie_si_record_i32(out_$i101);
    goto corral_source_split_5060;

  corral_source_split_5058:
    assume {:verifier.code 0} true;
    out_$i100 := $load.i8($M.1, out_$p99);
    call {:si_unique_call 2154} {:cexpr "__cil_tmp64"} boogie_si_record_i8(out_$i100);
    goto corral_source_split_5059;

  corral_source_split_5057:
    assume {:verifier.code 0} true;
    out_$p99 := $i2p.i64.ref(out_$i98);
    goto corral_source_split_5058;

  corral_source_split_5056:
    assume {:verifier.code 0} true;
    out_$i98 := $add.i64(out_$i97, 7);
    call {:si_unique_call 2153} {:cexpr "__cil_tmp63"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_5057;

  corral_source_split_5055:
    assume {:verifier.code 0} true;
    out_$i97 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_5056;

  $bb26:
    assume !(out_$i95 == 1);
    goto corral_source_split_5055;

  corral_source_split_5102:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p123, 1);
    goto corral_source_split_5103;

  corral_source_split_5101:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_5102;

  corral_source_split_5100:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, out_$i119);
    call {:si_unique_call 2163} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_5101;

  corral_source_split_5099:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(out_$p120);
    goto corral_source_split_5100;

  corral_source_split_5098:
    assume {:verifier.code 0} true;
    out_$p120 := $add.ref($add.ref(in_$p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5099;

  corral_source_split_5097:
    assume {:verifier.code 0} true;
    out_$i119 := $mul.i64(out_$i118, 1);
    call {:si_unique_call 2162} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i119);
    goto corral_source_split_5098;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i118 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5097;

  corral_source_split_5093:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb37:
    assume out_$i111 == 1;
    goto corral_source_split_5093;

  corral_source_split_5083:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  corral_source_split_5082:
    assume {:verifier.code 0} true;
    out_$i111 := $eq.i32(out_$i96, 0);
    goto corral_source_split_5083;

  $bb35:
    assume !(out_$i110 == 1);
    goto corral_source_split_5082;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  corral_source_split_5075:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  corral_source_split_5070:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i108 == 1;
    goto corral_source_split_5070;

  $bb31:
    assume out_$i109 == 1;
    goto corral_source_split_5075;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb47;

  corral_source_split_5105:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2164} out_vslice_dummy_var_113 := printk.ref.i32.i32.i32(.str.62, out_$i65, in_$i58, out_$i96);
    goto corral_source_split_5105;

  corral_source_split_5095:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb38:
    assume !(out_$i111 == 1);
    goto corral_source_split_5095;

  $bb51_dummy:
    call {:si_unique_call 1} out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_vslice_dummy_var_113 := INFTL_trydeletechain_loop_$bb16(in_$p0, in_$p2, in_$p3, in_$p4, in_$p5, in_$p13, in_$p61, out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, in_$i58, out_vslice_dummy_var_113);
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb16(in_$p0: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p13: ref, in_$p61: ref, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i8, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i1, in_$i85: i32, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i32, in_$i92: i64, in_$p93: ref, in_$i94: i32, in_$i95: i1, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i8, in_$i101: i32, in_$i102: i64, in_$i103: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i96: i32, in_$i108: i1, in_$i109: i1, in_$i110: i1, in_$i111: i1, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i75: i32, in_$i125: i32, in_$i126: i32, in_$i127: i32, in_$i128: i1, in_$i65: i32, in_$i58: i32, in_vslice_dummy_var_113: i32) returns (out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i8, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i1, out_$i85: i32, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i32, out_$i92: i64, out_$p93: ref, out_$i94: i32, out_$i95: i1, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i8, out_$i101: i32, out_$i102: i64, out_$i103: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i96: i32, out_$i108: i1, out_$i109: i1, out_$i110: i1, out_$i111: i1, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i75: i32, out_$i125: i32, out_$i126: i32, out_$i127: i32, out_$i128: i1, out_$i65: i32, out_vslice_dummy_var_113: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_trydeletechain_loop_$bb11(in_$p0: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p13: ref, in_$p54: ref, in_$i59: i64, in_$i60: i64, in_$p61: ref, in_$i62: i32, in_$i63: i32, in_$i64: i1, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i8, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i1, in_$i85: i32, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i32, in_$i92: i64, in_$p93: ref, in_$i94: i32, in_$i95: i1, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i8, in_$i101: i32, in_$i102: i64, in_$i103: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i96: i32, in_$i108: i1, in_$i109: i1, in_$i110: i1, in_$i111: i1, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i75: i32, in_$i125: i32, in_$i126: i32, in_$i127: i32, in_$i128: i1, in_$i65: i32, in_$i129: i32, in_$i130: i1, in_$i132: i64, in_$i133: i64, in_$i134: i64, in_$p135: ref, in_$p136: ref, in_$p137: ref, in_$i138: i16, in_$i139: i32, in_$i140: i32, in_$i141: i1, in_$i57: i32, in_$i58: i32, in_vslice_dummy_var_113: i32) returns (out_$i59: i64, out_$i60: i64, out_$p61: ref, out_$i62: i32, out_$i63: i32, out_$i64: i1, out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i8, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i1, out_$i85: i32, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i32, out_$i92: i64, out_$p93: ref, out_$i94: i32, out_$i95: i1, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i8, out_$i101: i32, out_$i102: i64, out_$i103: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i96: i32, out_$i108: i1, out_$i109: i1, out_$i110: i1, out_$i111: i1, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i75: i32, out_$i125: i32, out_$i126: i32, out_$i127: i32, out_$i128: i1, out_$i65: i32, out_$i129: i32, out_$i130: i1, out_$i132: i64, out_$i133: i64, out_$i134: i64, out_$p135: ref, out_$p136: ref, out_$p137: ref, out_$i138: i16, out_$i139: i32, out_$i140: i32, out_$i141: i1, out_$i57: i32, out_$i58: i32, out_vslice_dummy_var_113: i32)
{

  entry:
    out_$i59, out_$i60, out_$p61, out_$i62, out_$i63, out_$i64, out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_$i129, out_$i130, out_$i132, out_$i133, out_$i134, out_$p135, out_$p136, out_$p137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i57, out_$i58, out_vslice_dummy_var_113 := in_$i59, in_$i60, in_$p61, in_$i62, in_$i63, in_$i64, in_$i66, in_$i67, in_$p68, in_$i69, in_$i70, in_$p71, in_$i72, in_$i73, in_$i74, in_$i76, in_$i77, in_$p78, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$i84, in_$i85, in_$i86, in_$i87, in_$p88, in_$i89, in_$i90, in_$i91, in_$i92, in_$p93, in_$i94, in_$i95, in_$i97, in_$i98, in_$p99, in_$i100, in_$i101, in_$i102, in_$i103, in_$p104, in_$i105, in_$i106, in_$i107, in_$i96, in_$i108, in_$i109, in_$i110, in_$i111, in_$i112, in_$i113, in_$p114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$p120, in_$i121, in_$i122, in_$p123, in_$i75, in_$i125, in_$i126, in_$i127, in_$i128, in_$i65, in_$i129, in_$i130, in_$i132, in_$i133, in_$i134, in_$p135, in_$p136, in_$p137, in_$i138, in_$i139, in_$i140, in_$i141, in_$i57, in_$i58, in_vslice_dummy_var_113;
    goto $bb11, exit;

  $bb11:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4997;

  $bb57:
    assume out_$i141 == 1;
    assume {:verifier.code 0} true;
    out_$i57, out_$i58 := out_$i129, out_$i139;
    goto $bb57_dummy;

  corral_source_split_5126:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb57;

  corral_source_split_5125:
    assume {:verifier.code 0} true;
    out_$i141 := $ugt.i32(out_$i140, out_$i139);
    goto corral_source_split_5126;

  corral_source_split_5124:
    assume {:verifier.code 0} true;
    out_$i140 := $load.i32($M.1, in_$p54);
    call {:si_unique_call 2172} {:cexpr "__cil_tmp87"} boogie_si_record_i32(out_$i140);
    goto corral_source_split_5125;

  corral_source_split_5123:
    assume {:verifier.code 0} true;
    out_$i139 := $zext.i16.i32(out_$i138);
    call {:si_unique_call 2171} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i139);
    goto corral_source_split_5124;

  corral_source_split_5122:
    assume {:verifier.code 0} true;
    out_$i138 := $load.i16($M.1, out_$p137);
    call {:si_unique_call 2170} {:cexpr "__cil_tmp84"} boogie_si_record_i16(out_$i138);
    goto corral_source_split_5123;

  corral_source_split_5121:
    assume {:verifier.code 0} true;
    out_$p137 := $add.ref(out_$p136, $mul.ref(out_$i132, 2));
    goto corral_source_split_5122;

  corral_source_split_5120:
    assume {:verifier.code 0} true;
    out_$p136 := $load.ref($M.1, out_$p135);
    goto corral_source_split_5121;

  corral_source_split_5119:
    assume {:verifier.code 0} true;
    out_$p135 := $i2p.i64.ref(out_$i134);
    goto corral_source_split_5120;

  corral_source_split_5118:
    assume {:verifier.code 0} true;
    out_$i134 := $add.i64(out_$i133, 544);
    call {:si_unique_call 2169} {:cexpr "__cil_tmp81"} boogie_si_record_i64(out_$i134);
    goto corral_source_split_5119;

  corral_source_split_5117:
    assume {:verifier.code 0} true;
    out_$i133 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2168} {:cexpr "__cil_tmp80"} boogie_si_record_i64(out_$i133);
    goto corral_source_split_5118;

  $bb56:
    assume {:verifier.code 0} true;
    out_$i132 := $zext.i32.i64(out_$i58);
    call {:si_unique_call 2167} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i132);
    goto corral_source_split_5117;

  $bb55:
    assume !(out_$i130 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  corral_source_split_5112:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55;

  corral_source_split_5111:
    assume {:verifier.code 0} true;
    out_$i130 := $eq.i32(out_$i57, 0);
    goto corral_source_split_5112;

  $bb53:
    assume {:verifier.code 0} true;
    out_$i129 := $sub.i32(out_$i57, 1);
    call {:si_unique_call 2165} {:cexpr "silly"} boogie_si_record_i32(out_$i129);
    goto corral_source_split_5111;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb14:
    assume {:verifier.code 0} true;
    assume !(out_$i64 == 1);
    goto $bb15;

  corral_source_split_5109:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb52:
    assume !(out_$i128 == 1);
    goto corral_source_split_5109;

  corral_source_split_5037:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  corral_source_split_5036:
    assume {:verifier.code 0} true;
    out_$i128 := $ult.i32(out_$i125, out_$i127);
    goto corral_source_split_5037;

  corral_source_split_5035:
    assume {:verifier.code 0} true;
    out_$i127 := $udiv.i32(out_$i126, 512);
    call {:si_unique_call 2143} {:cexpr "__cil_tmp77"} boogie_si_record_i32(out_$i127);
    goto corral_source_split_5036;

  corral_source_split_5034:
    assume {:verifier.code 0} true;
    out_$i126 := $load.i32($M.1, out_$p61);
    call {:si_unique_call 2142} {:cexpr "__cil_tmp76"} boogie_si_record_i32(out_$i126);
    goto corral_source_split_5035;

  corral_source_split_5033:
    assume {:verifier.code 0} true;
    out_$i125 := $add.i32(out_$i75, 1);
    call {:si_unique_call 2141} {:cexpr "block"} boogie_si_record_i32(out_$i125);
    goto corral_source_split_5034;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5033;

  $bb44:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5103:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5091:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5039:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  corral_source_split_5020:
    assume {:verifier.code 0} true;
    out_$i75 := out_$i65;
    goto $bb20;

  $bb18:
    assume out_$i74 == 1;
    goto corral_source_split_5020;

  corral_source_split_5018:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_5017:
    assume {:verifier.code 0} true;
    out_$i74 := $ne.i32(out_$i73, 0);
    goto corral_source_split_5018;

  corral_source_split_5016:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i8.i32(out_$i72);
    call {:si_unique_call 2136} {:cexpr "__cil_tmp49"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_5017;

  corral_source_split_5015:
    assume {:verifier.code 0} true;
    out_$i72 := $load.i8($M.1, out_$p71);
    call {:si_unique_call 2135} {:cexpr "__cil_tmp48"} boogie_si_record_i8(out_$i72);
    goto corral_source_split_5016;

  corral_source_split_5014:
    assume {:verifier.code 0} true;
    out_$p71 := $i2p.i64.ref(out_$i70);
    goto corral_source_split_5015;

  corral_source_split_5013:
    assume {:verifier.code 0} true;
    out_$i70 := $add.i64(out_$i69, out_$i67);
    call {:si_unique_call 2134} {:cexpr "__cil_tmp47"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_5014;

  corral_source_split_5012:
    assume {:verifier.code 0} true;
    out_$i69 := $p2i.ref.i64(out_$p68);
    goto corral_source_split_5013;

  corral_source_split_5011:
    assume {:verifier.code 0} true;
    out_$p68 := $add.ref($add.ref(in_$p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5012;

  corral_source_split_5010:
    assume {:verifier.code 0} true;
    out_$i67 := $mul.i64(out_$i66, 1);
    call {:si_unique_call 2133} {:cexpr "__cil_tmp46"} boogie_si_record_i64(out_$i67);
    goto corral_source_split_5011;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i66 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5010;

  corral_source_split_5008:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb16:
    call out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_vslice_dummy_var_113 := INFTL_trydeletechain_loop_$bb16(in_$p0, in_$p2, in_$p3, in_$p4, in_$p5, in_$p13, out_$p61, out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_$i58, out_vslice_dummy_var_113);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5008;

  corral_source_split_5006:
    assume {:verifier.code 0} true;
    out_$i65 := 0;
    goto $bb16;

  $bb51:
    assume out_$i128 == 1;
    assume {:verifier.code 0} true;
    out_$i65 := out_$i125;
    assume false;
    return;

  $bb13:
    assume out_$i64 == 1;
    goto corral_source_split_5006;

  corral_source_split_5004:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  corral_source_split_5003:
    assume {:verifier.code 0} true;
    out_$i64 := $ult.i32(0, out_$i63);
    goto corral_source_split_5004;

  corral_source_split_5002:
    assume {:verifier.code 0} true;
    out_$i63 := $udiv.i32(out_$i62, 512);
    call {:si_unique_call 2132} {:cexpr "__cil_tmp77"} boogie_si_record_i32(out_$i63);
    goto corral_source_split_5003;

  corral_source_split_5001:
    assume {:verifier.code 0} true;
    out_$i62 := $load.i32($M.1, out_$p61);
    call {:si_unique_call 2131} {:cexpr "__cil_tmp76"} boogie_si_record_i32(out_$i62);
    goto corral_source_split_5002;

  corral_source_split_5000:
    assume {:verifier.code 0} true;
    out_$p61 := $i2p.i64.ref(out_$i60);
    goto corral_source_split_5001;

  corral_source_split_4999:
    assume {:verifier.code 0} true;
    out_$i60 := $add.i64(out_$i59, 356);
    call {:si_unique_call 2130} {:cexpr "__cil_tmp75"} boogie_si_record_i64(out_$i60);
    goto corral_source_split_5000;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i59 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2129} {:cexpr "__cil_tmp74"} boogie_si_record_i64(out_$i59);
    goto corral_source_split_4999;

  corral_source_split_4997:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb21:
    assume out_$i84 == 1;
    goto corral_source_split_5039;

  corral_source_split_5031:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_5030:
    assume {:verifier.code 0} true;
    out_$i84 := $ne.i32(out_$i83, 0);
    goto corral_source_split_5031;

  corral_source_split_5029:
    assume {:verifier.code 0} true;
    out_$i83 := $zext.i8.i32(out_$i82);
    call {:si_unique_call 2140} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_5030;

  corral_source_split_5028:
    assume {:verifier.code 0} true;
    out_$i82 := $load.i8($M.1, out_$p81);
    call {:si_unique_call 2139} {:cexpr "__cil_tmp52"} boogie_si_record_i8(out_$i82);
    goto corral_source_split_5029;

  corral_source_split_5027:
    assume {:verifier.code 0} true;
    out_$p81 := $i2p.i64.ref(out_$i80);
    goto corral_source_split_5028;

  corral_source_split_5026:
    assume {:verifier.code 0} true;
    out_$i80 := $add.i64(out_$i79, out_$i77);
    call {:si_unique_call 2138} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_5027;

  corral_source_split_5025:
    assume {:verifier.code 0} true;
    out_$i79 := $p2i.ref.i64(out_$p78);
    goto corral_source_split_5026;

  corral_source_split_5024:
    assume {:verifier.code 0} true;
    out_$p78 := $add.ref($add.ref(in_$p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5025;

  corral_source_split_5023:
    assume {:verifier.code 0} true;
    out_$i77 := $mul.i64(out_$i76, 1);
    call {:si_unique_call 2137} {:cexpr "__cil_tmp50"} boogie_si_record_i64(out_$i77);
    goto corral_source_split_5024;

  corral_source_split_5022:
    assume {:verifier.code 0} true;
    out_$i76 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5023;

  $bb19:
    assume !(out_$i74 == 1);
    goto corral_source_split_5022;

  corral_source_split_5090:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p117, 1);
    goto corral_source_split_5091;

  corral_source_split_5089:
    assume {:verifier.code 0} true;
    out_$p117 := $i2p.i64.ref(out_$i116);
    goto corral_source_split_5090;

  corral_source_split_5088:
    assume {:verifier.code 0} true;
    out_$i116 := $add.i64(out_$i115, out_$i113);
    call {:si_unique_call 2161} {:cexpr "__cil_tmp71"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_5089;

  corral_source_split_5087:
    assume {:verifier.code 0} true;
    out_$i115 := $p2i.ref.i64(out_$p114);
    goto corral_source_split_5088;

  corral_source_split_5086:
    assume {:verifier.code 0} true;
    out_$p114 := $add.ref($add.ref(in_$p2, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5087;

  corral_source_split_5085:
    assume {:verifier.code 0} true;
    out_$i113 := $mul.i64(out_$i112, 1);
    call {:si_unique_call 2160} {:cexpr "__cil_tmp70"} boogie_si_record_i64(out_$i113);
    goto corral_source_split_5086;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i112 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5085;

  corral_source_split_5080:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb34:
    assume out_$i110 == 1;
    goto corral_source_split_5080;

  corral_source_split_5078:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_5077:
    assume {:verifier.code 0} true;
    out_$i110 := $eq.i32(out_$i96, 85);
    goto corral_source_split_5078;

  $bb32:
    assume !(out_$i109 == 1);
    goto corral_source_split_5077;

  corral_source_split_5073:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_5072:
    assume {:verifier.code 0} true;
    out_$i109 := $eq.i32(out_$i96, 17);
    goto corral_source_split_5073;

  $bb29:
    assume !(out_$i108 == 1);
    goto corral_source_split_5072;

  corral_source_split_5068:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_5067:
    assume {:verifier.code 0} true;
    out_$i108 := $eq.i32(out_$i96, 255);
    goto corral_source_split_5068;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5067;

  corral_source_split_5065:
    assume {:verifier.code 0} true;
    out_$i107 := $or.i32(out_$i106, out_$i101);
    call {:si_unique_call 2159} {:cexpr "__cil_tmp69"} boogie_si_record_i32(out_$i107);
    assume {:verifier.code 0} true;
    out_$i96 := out_$i107;
    goto $bb27;

  corral_source_split_5053:
    assume {:verifier.code 0} true;
    out_$i96 := 17;
    goto $bb27;

  $bb25:
    assume out_$i95 == 1;
    goto corral_source_split_5053;

  corral_source_split_5051:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  corral_source_split_5050:
    assume {:verifier.code 0} true;
    out_$i95 := $slt.i32(out_$i94, 0);
    goto corral_source_split_5051;

  corral_source_split_5049:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2151} out_$i94 := inftl_read_oob(in_$p13, out_$i92, 8, in_$p5, out_$p93);
    call {:si_unique_call 2152} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i94);
    goto corral_source_split_5050;

  corral_source_split_5048:
    assume {:verifier.code 0} true;
    out_$p93 := $bitcast.ref.ref(in_$p4);
    goto corral_source_split_5049;

  corral_source_split_5047:
    assume {:verifier.code 0} true;
    out_$i92 := $zext.i32.i64(out_$i91);
    call {:si_unique_call 2150} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i92);
    goto corral_source_split_5048;

  corral_source_split_5046:
    assume {:verifier.code 0} true;
    out_$i91 := $add.i32(out_$i90, out_$i85);
    call {:si_unique_call 2149} {:cexpr "__cil_tmp60"} boogie_si_record_i32(out_$i91);
    goto corral_source_split_5047;

  corral_source_split_5045:
    assume {:verifier.code 0} true;
    out_$i90 := $mul.i32(out_$i89, out_$i58);
    call {:si_unique_call 2148} {:cexpr "__cil_tmp59"} boogie_si_record_i32(out_$i90);
    goto corral_source_split_5046;

  corral_source_split_5044:
    assume {:verifier.code 0} true;
    out_$i89 := $load.i32($M.1, out_$p88);
    call {:si_unique_call 2147} {:cexpr "__cil_tmp58"} boogie_si_record_i32(out_$i89);
    goto corral_source_split_5045;

  corral_source_split_5043:
    assume {:verifier.code 0} true;
    out_$p88 := $i2p.i64.ref(out_$i87);
    goto corral_source_split_5044;

  corral_source_split_5042:
    assume {:verifier.code 0} true;
    out_$i87 := $add.i64(out_$i86, 356);
    call {:si_unique_call 2146} {:cexpr "__cil_tmp57"} boogie_si_record_i64(out_$i87);
    goto corral_source_split_5043;

  corral_source_split_5041:
    assume {:verifier.code 0} true;
    out_$i86 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2145} {:cexpr "__cil_tmp56"} boogie_si_record_i64(out_$i86);
    goto corral_source_split_5042;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i85 := $mul.i32(out_$i65, 512);
    call {:si_unique_call 2144} {:cexpr "__cil_tmp54"} boogie_si_record_i32(out_$i85);
    goto corral_source_split_5041;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i84 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  corral_source_split_5064:
    assume {:verifier.code 0} true;
    out_$i106 := $zext.i8.i32(out_$i105);
    call {:si_unique_call 2158} {:cexpr "__cil_tmp68"} boogie_si_record_i32(out_$i106);
    goto corral_source_split_5065;

  corral_source_split_5063:
    assume {:verifier.code 0} true;
    out_$i105 := $load.i8($M.1, out_$p104);
    call {:si_unique_call 2157} {:cexpr "__cil_tmp67"} boogie_si_record_i8(out_$i105);
    goto corral_source_split_5064;

  corral_source_split_5062:
    assume {:verifier.code 0} true;
    out_$p104 := $i2p.i64.ref(out_$i103);
    goto corral_source_split_5063;

  corral_source_split_5061:
    assume {:verifier.code 0} true;
    out_$i103 := $add.i64(out_$i102, 6);
    call {:si_unique_call 2156} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i103);
    goto corral_source_split_5062;

  corral_source_split_5060:
    assume {:verifier.code 0} true;
    out_$i102 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_5061;

  corral_source_split_5059:
    assume {:verifier.code 0} true;
    out_$i101 := $zext.i8.i32(out_$i100);
    call {:si_unique_call 2155} {:cexpr "__cil_tmp65"} boogie_si_record_i32(out_$i101);
    goto corral_source_split_5060;

  corral_source_split_5058:
    assume {:verifier.code 0} true;
    out_$i100 := $load.i8($M.1, out_$p99);
    call {:si_unique_call 2154} {:cexpr "__cil_tmp64"} boogie_si_record_i8(out_$i100);
    goto corral_source_split_5059;

  corral_source_split_5057:
    assume {:verifier.code 0} true;
    out_$p99 := $i2p.i64.ref(out_$i98);
    goto corral_source_split_5058;

  corral_source_split_5056:
    assume {:verifier.code 0} true;
    out_$i98 := $add.i64(out_$i97, 7);
    call {:si_unique_call 2153} {:cexpr "__cil_tmp63"} boogie_si_record_i64(out_$i98);
    goto corral_source_split_5057;

  corral_source_split_5055:
    assume {:verifier.code 0} true;
    out_$i97 := $p2i.ref.i64(in_$p4);
    goto corral_source_split_5056;

  $bb26:
    assume !(out_$i95 == 1);
    goto corral_source_split_5055;

  corral_source_split_5102:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p123, 1);
    goto corral_source_split_5103;

  corral_source_split_5101:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_5102;

  corral_source_split_5100:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, out_$i119);
    call {:si_unique_call 2163} {:cexpr "__cil_tmp73"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_5101;

  corral_source_split_5099:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(out_$p120);
    goto corral_source_split_5100;

  corral_source_split_5098:
    assume {:verifier.code 0} true;
    out_$p120 := $add.ref($add.ref(in_$p3, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5099;

  corral_source_split_5097:
    assume {:verifier.code 0} true;
    out_$i119 := $mul.i64(out_$i118, 1);
    call {:si_unique_call 2162} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i119);
    goto corral_source_split_5098;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i118 := $sext.i32.i64(out_$i65);
    goto corral_source_split_5097;

  corral_source_split_5093:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb37:
    assume out_$i111 == 1;
    goto corral_source_split_5093;

  corral_source_split_5083:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  corral_source_split_5082:
    assume {:verifier.code 0} true;
    out_$i111 := $eq.i32(out_$i96, 0);
    goto corral_source_split_5083;

  $bb35:
    assume !(out_$i110 == 1);
    goto corral_source_split_5082;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  corral_source_split_5075:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  corral_source_split_5070:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i108 == 1;
    goto corral_source_split_5070;

  $bb31:
    assume out_$i109 == 1;
    goto corral_source_split_5075;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb47;

  corral_source_split_5105:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2164} out_vslice_dummy_var_113 := printk.ref.i32.i32.i32(.str.62, out_$i65, out_$i58, out_$i96);
    goto corral_source_split_5105;

  corral_source_split_5095:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb38:
    assume !(out_$i111 == 1);
    goto corral_source_split_5095;

  $bb57_dummy:
    call {:si_unique_call 1} out_$i59, out_$i60, out_$p61, out_$i62, out_$i63, out_$i64, out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_$i129, out_$i130, out_$i132, out_$i133, out_$i134, out_$p135, out_$p136, out_$p137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i57, out_$i58, out_vslice_dummy_var_113 := INFTL_trydeletechain_loop_$bb11(in_$p0, in_$p2, in_$p3, in_$p4, in_$p5, in_$p13, in_$p54, out_$i59, out_$i60, out_$p61, out_$i62, out_$i63, out_$i64, out_$i66, out_$i67, out_$p68, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$i74, out_$i76, out_$i77, out_$p78, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$p88, out_$i89, out_$i90, out_$i91, out_$i92, out_$p93, out_$i94, out_$i95, out_$i97, out_$i98, out_$p99, out_$i100, out_$i101, out_$i102, out_$i103, out_$p104, out_$i105, out_$i106, out_$i107, out_$i96, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$p114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$p120, out_$i121, out_$i122, out_$p123, out_$i75, out_$i125, out_$i126, out_$i127, out_$i128, out_$i65, out_$i129, out_$i130, out_$i132, out_$i133, out_$i134, out_$p135, out_$p136, out_$p137, out_$i138, out_$i139, out_$i140, out_$i141, out_$i57, out_$i58, out_vslice_dummy_var_113);
    return;

  exit:
    return;
}



procedure INFTL_trydeletechain_loop_$bb11(in_$p0: ref, in_$p2: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p13: ref, in_$p54: ref, in_$i59: i64, in_$i60: i64, in_$p61: ref, in_$i62: i32, in_$i63: i32, in_$i64: i1, in_$i66: i64, in_$i67: i64, in_$p68: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i8, in_$i73: i32, in_$i74: i1, in_$i76: i64, in_$i77: i64, in_$p78: ref, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i8, in_$i83: i32, in_$i84: i1, in_$i85: i32, in_$i86: i64, in_$i87: i64, in_$p88: ref, in_$i89: i32, in_$i90: i32, in_$i91: i32, in_$i92: i64, in_$p93: ref, in_$i94: i32, in_$i95: i1, in_$i97: i64, in_$i98: i64, in_$p99: ref, in_$i100: i8, in_$i101: i32, in_$i102: i64, in_$i103: i64, in_$p104: ref, in_$i105: i8, in_$i106: i32, in_$i107: i32, in_$i96: i32, in_$i108: i1, in_$i109: i1, in_$i110: i1, in_$i111: i1, in_$i112: i64, in_$i113: i64, in_$p114: ref, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$p120: ref, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i75: i32, in_$i125: i32, in_$i126: i32, in_$i127: i32, in_$i128: i1, in_$i65: i32, in_$i129: i32, in_$i130: i1, in_$i132: i64, in_$i133: i64, in_$i134: i64, in_$p135: ref, in_$p136: ref, in_$p137: ref, in_$i138: i16, in_$i139: i32, in_$i140: i32, in_$i141: i1, in_$i57: i32, in_$i58: i32, in_vslice_dummy_var_113: i32) returns (out_$i59: i64, out_$i60: i64, out_$p61: ref, out_$i62: i32, out_$i63: i32, out_$i64: i1, out_$i66: i64, out_$i67: i64, out_$p68: ref, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i8, out_$i73: i32, out_$i74: i1, out_$i76: i64, out_$i77: i64, out_$p78: ref, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i8, out_$i83: i32, out_$i84: i1, out_$i85: i32, out_$i86: i64, out_$i87: i64, out_$p88: ref, out_$i89: i32, out_$i90: i32, out_$i91: i32, out_$i92: i64, out_$p93: ref, out_$i94: i32, out_$i95: i1, out_$i97: i64, out_$i98: i64, out_$p99: ref, out_$i100: i8, out_$i101: i32, out_$i102: i64, out_$i103: i64, out_$p104: ref, out_$i105: i8, out_$i106: i32, out_$i107: i32, out_$i96: i32, out_$i108: i1, out_$i109: i1, out_$i110: i1, out_$i111: i1, out_$i112: i64, out_$i113: i64, out_$p114: ref, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$p120: ref, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i75: i32, out_$i125: i32, out_$i126: i32, out_$i127: i32, out_$i128: i1, out_$i65: i32, out_$i129: i32, out_$i130: i1, out_$i132: i64, out_$i133: i64, out_$i134: i64, out_$p135: ref, out_$p136: ref, out_$p137: ref, out_$i138: i16, out_$i139: i32, out_$i140: i32, out_$i141: i1, out_$i57: i32, out_$i58: i32, out_vslice_dummy_var_113: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_findfreeblock_loop_$bb17(in_$p0: ref, in_$p80: ref, in_$i89: i16, in_$i90: i32, in_$i91: i64, in_$p92: ref, in_$p93: ref, in_$i94: i16, in_$i95: i32, in_$i96: i1, in_$i97: i16, in_$i87: i32, in_$i88: i16, in_$i101: i32, in_$i102: i32, in_$i103: i16, in_$i104: i64, in_$i105: i64, in_$p106: ref, in_$i107: i16, in_$i108: i32, in_$i109: i32, in_$i110: i1, in_$i111: i16, in_$i112: i32, in_$i113: i1, in_$i120: i32, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i124: i16, in_$i125: i32, in_$i126: i1) returns (out_$i89: i16, out_$i90: i32, out_$i91: i64, out_$p92: ref, out_$p93: ref, out_$i94: i16, out_$i95: i32, out_$i96: i1, out_$i97: i16, out_$i87: i32, out_$i88: i16, out_$i101: i32, out_$i102: i32, out_$i103: i16, out_$i104: i64, out_$i105: i64, out_$p106: ref, out_$i107: i16, out_$i108: i32, out_$i109: i32, out_$i110: i1, out_$i111: i16, out_$i112: i32, out_$i113: i1, out_$i120: i32, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i124: i16, out_$i125: i32, out_$i126: i1)
{

  entry:
    out_$i89, out_$i90, out_$i91, out_$p92, out_$p93, out_$i94, out_$i95, out_$i96, out_$i97, out_$i87, out_$i88, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i120, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126 := in_$i89, in_$i90, in_$i91, in_$p92, in_$p93, in_$i94, in_$i95, in_$i96, in_$i97, in_$i87, in_$i88, in_$i101, in_$i102, in_$i103, in_$i104, in_$i105, in_$p106, in_$i107, in_$i108, in_$i109, in_$i110, in_$i111, in_$i112, in_$i113, in_$i120, in_$i121, in_$i122, in_$p123, in_$i124, in_$i125, in_$i126;
    goto $bb17, exit;

  $bb17:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb20:
    assume !(out_$i96 == 1);
    assume {:verifier.code 0} true;
    out_$i87, out_$i88 := out_$i90, out_$i89;
    goto $bb20_dummy;

  corral_source_split_5492:
    assume {:verifier.code 0} true;
    out_$i97 := out_$i89;
    assume true;
    goto $bb20;

  corral_source_split_5491:
    assume {:verifier.code 0} true;
    out_$i96 := $eq.i32(out_$i95, 65534);
    goto corral_source_split_5492;

  corral_source_split_5490:
    assume {:verifier.code 0} true;
    out_$i95 := $zext.i16.i32(out_$i94);
    call {:si_unique_call 2319} {:cexpr "__cil_tmp49"} boogie_si_record_i32(out_$i95);
    goto corral_source_split_5491;

  corral_source_split_5489:
    assume {:verifier.code 0} true;
    out_$i94 := $load.i16($M.1, out_$p93);
    call {:si_unique_call 2318} {:cexpr "__cil_tmp48"} boogie_si_record_i16(out_$i94);
    goto corral_source_split_5490;

  corral_source_split_5488:
    assume {:verifier.code 0} true;
    out_$p93 := $add.ref(out_$p92, $mul.ref(out_$i91, 2));
    goto corral_source_split_5489;

  corral_source_split_5487:
    assume {:verifier.code 0} true;
    out_$p92 := $load.ref($M.1, in_$p80);
    goto corral_source_split_5488;

  corral_source_split_5486:
    assume {:verifier.code 0} true;
    out_$i91 := $zext.i16.i64(out_$i89);
    call {:si_unique_call 2317} {:cexpr "__cil_tmp43"} boogie_si_record_i64(out_$i91);
    goto corral_source_split_5487;

  $bb18:
    assume out_$i126 == 1;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5486;

  corral_source_split_5527:
    assume {:verifier.code 0} true;
    out_$i89, out_$i90 := out_$i111, out_$i112;
    assume true;
    goto $bb18;

  corral_source_split_5526:
    assume {:verifier.code 0} true;
    out_$i126 := $ne.i32(out_$i125, out_$i120);
    goto corral_source_split_5527;

  corral_source_split_5525:
    assume {:verifier.code 0} true;
    out_$i125 := $zext.i16.i32(out_$i124);
    call {:si_unique_call 2338} {:cexpr "__cil_tmp68"} boogie_si_record_i32(out_$i125);
    goto corral_source_split_5526;

  corral_source_split_5524:
    assume {:verifier.code 0} true;
    out_$i124 := $load.i16($M.1, out_$p123);
    call {:si_unique_call 2337} {:cexpr "__cil_tmp67"} boogie_si_record_i16(out_$i124);
    goto corral_source_split_5525;

  corral_source_split_5523:
    assume {:verifier.code 0} true;
    out_$p123 := $i2p.i64.ref(out_$i122);
    goto corral_source_split_5524;

  corral_source_split_5522:
    assume {:verifier.code 0} true;
    out_$i122 := $add.i64(out_$i121, 524);
    call {:si_unique_call 2336} {:cexpr "__cil_tmp66"} boogie_si_record_i64(out_$i122);
    goto corral_source_split_5523;

  corral_source_split_5521:
    assume {:verifier.code 0} true;
    out_$i121 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2335} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i121);
    goto corral_source_split_5522;

  $bb27:
    assume {:verifier.code 0} true;
    out_$i120 := $zext.i16.i32(out_$i111);
    call {:si_unique_call 2334} {:cexpr "__cil_tmp64"} boogie_si_record_i32(out_$i120);
    goto corral_source_split_5521;

  $bb26:
    assume !(out_$i113 == 1);
    assume {:verifier.code 0} true;
    goto $bb27;

  corral_source_split_5511:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26;

  corral_source_split_5510:
    assume {:verifier.code 0} true;
    out_$i113 := $eq.i32(out_$i87, 0);
    goto corral_source_split_5511;

  corral_source_split_5509:
    assume {:verifier.code 0} true;
    out_$i112 := $sub.i32(out_$i87, 1);
    call {:si_unique_call 2328} {:cexpr "silly"} boogie_si_record_i32(out_$i112);
    goto corral_source_split_5510;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_5509;

  $bb23:
    assume !(out_$i110 == 1);
    assume {:verifier.code 0} true;
    out_$i111 := out_$i103;
    goto $bb24;

  corral_source_split_5507:
    assume {:verifier.code 0} true;
    out_$i111 := 0;
    goto $bb24;

  $bb22:
    assume out_$i110 == 1;
    goto corral_source_split_5507;

  corral_source_split_5505:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  corral_source_split_5504:
    assume {:verifier.code 0} true;
    out_$i110 := $sgt.i32(out_$i109, out_$i108);
    goto corral_source_split_5505;

  corral_source_split_5503:
    assume {:verifier.code 0} true;
    out_$i109 := $zext.i16.i32(out_$i103);
    call {:si_unique_call 2327} {:cexpr "__cil_tmp59"} boogie_si_record_i32(out_$i109);
    goto corral_source_split_5504;

  corral_source_split_5502:
    assume {:verifier.code 0} true;
    out_$i108 := $zext.i16.i32(out_$i107);
    call {:si_unique_call 2326} {:cexpr "__cil_tmp57"} boogie_si_record_i32(out_$i108);
    goto corral_source_split_5503;

  corral_source_split_5501:
    assume {:verifier.code 0} true;
    out_$i107 := $load.i16($M.1, out_$p106);
    call {:si_unique_call 2325} {:cexpr "__cil_tmp56"} boogie_si_record_i16(out_$i107);
    goto corral_source_split_5502;

  corral_source_split_5500:
    assume {:verifier.code 0} true;
    out_$p106 := $i2p.i64.ref(out_$i105);
    goto corral_source_split_5501;

  corral_source_split_5499:
    assume {:verifier.code 0} true;
    out_$i105 := $add.i64(out_$i104, 520);
    call {:si_unique_call 2324} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i105);
    goto corral_source_split_5500;

  corral_source_split_5498:
    assume {:verifier.code 0} true;
    out_$i104 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2323} {:cexpr "__cil_tmp54"} boogie_si_record_i64(out_$i104);
    goto corral_source_split_5499;

  corral_source_split_5497:
    assume {:verifier.code 0} true;
    out_$i103 := $trunc.i32.i16(out_$i102);
    call {:si_unique_call 2322} {:cexpr "pot"} boogie_si_record_i16(out_$i103);
    goto corral_source_split_5498;

  corral_source_split_5496:
    assume {:verifier.code 0} true;
    out_$i102 := $add.i32(out_$i101, 1);
    call {:si_unique_call 2321} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i102);
    goto corral_source_split_5497;

  $bb21:
    assume {:verifier.code 0} true;
    out_$i101 := $zext.i16.i32(out_$i88);
    call {:si_unique_call 2320} {:cexpr "__cil_tmp52"} boogie_si_record_i32(out_$i101);
    goto corral_source_split_5496;

  $bb20_dummy:
    call {:si_unique_call 1} out_$i89, out_$i90, out_$i91, out_$p92, out_$p93, out_$i94, out_$i95, out_$i96, out_$i97, out_$i87, out_$i88, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i120, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126 := INFTL_findfreeblock_loop_$bb17(in_$p0, in_$p80, out_$i89, out_$i90, out_$i91, out_$p92, out_$p93, out_$i94, out_$i95, out_$i96, out_$i97, out_$i87, out_$i88, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$p106, out_$i107, out_$i108, out_$i109, out_$i110, out_$i111, out_$i112, out_$i113, out_$i120, out_$i121, out_$i122, out_$p123, out_$i124, out_$i125, out_$i126);
    return;

  exit:
    return;
}



procedure INFTL_findfreeblock_loop_$bb17(in_$p0: ref, in_$p80: ref, in_$i89: i16, in_$i90: i32, in_$i91: i64, in_$p92: ref, in_$p93: ref, in_$i94: i16, in_$i95: i32, in_$i96: i1, in_$i97: i16, in_$i87: i32, in_$i88: i16, in_$i101: i32, in_$i102: i32, in_$i103: i16, in_$i104: i64, in_$i105: i64, in_$p106: ref, in_$i107: i16, in_$i108: i32, in_$i109: i32, in_$i110: i1, in_$i111: i16, in_$i112: i32, in_$i113: i1, in_$i120: i32, in_$i121: i64, in_$i122: i64, in_$p123: ref, in_$i124: i16, in_$i125: i32, in_$i126: i1) returns (out_$i89: i16, out_$i90: i32, out_$i91: i64, out_$p92: ref, out_$p93: ref, out_$i94: i16, out_$i95: i32, out_$i96: i1, out_$i97: i16, out_$i87: i32, out_$i88: i16, out_$i101: i32, out_$i102: i32, out_$i103: i16, out_$i104: i64, out_$i105: i64, out_$p106: ref, out_$i107: i16, out_$i108: i32, out_$i109: i32, out_$i110: i1, out_$i111: i16, out_$i112: i32, out_$i113: i1, out_$i120: i32, out_$i121: i64, out_$i122: i64, out_$p123: ref, out_$i124: i16, out_$i125: i32, out_$i126: i1);



implementation INFTL_makefreeblock_loop_$bb12(in_$p0: ref, in_$p49: ref, in_$i56: i32, in_$i57: i32, in_$i58: i16, in_$i59: i64, in_$i60: i64, in_$i61: i64, in_$p62: ref, in_$p63: ref, in_$p64: ref, in_$i65: i16, in_$i66: i32, in_$i67: i1, in_$i68: i16, in_$i73: i32, in_$i74: i16, in_$i75: i32, in_$i76: i1, in_$i54: i16, in_$i55: i16, in_$i77: i16) returns (out_$i56: i32, out_$i57: i32, out_$i58: i16, out_$i59: i64, out_$i60: i64, out_$i61: i64, out_$p62: ref, out_$p63: ref, out_$p64: ref, out_$i65: i16, out_$i66: i32, out_$i67: i1, out_$i68: i16, out_$i73: i32, out_$i74: i16, out_$i75: i32, out_$i76: i1, out_$i54: i16, out_$i55: i16, out_$i77: i16)
{

  entry:
    out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77 := in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$p62, in_$p63, in_$p64, in_$i65, in_$i66, in_$i67, in_$i68, in_$i73, in_$i74, in_$i75, in_$i76, in_$i54, in_$i55, in_$i77;
    goto $bb12, exit;

  $bb12:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5598;

  $bb18:
    assume out_$i76 == 1;
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i65, out_$i58;
    goto $bb18_dummy;

  corral_source_split_5626:
    assume {:verifier.code 0} true;
    out_$i77 := out_$i58;
    assume true;
    goto $bb18;

  corral_source_split_5625:
    assume {:verifier.code 0} true;
    out_$i76 := $sge.i32(out_$i75, out_$i73);
    goto corral_source_split_5626;

  corral_source_split_5624:
    assume {:verifier.code 0} true;
    out_$i75 := $zext.i16.i32(out_$i74);
    call {:si_unique_call 2380} {:cexpr "__cil_tmp40"} boogie_si_record_i32(out_$i75);
    goto corral_source_split_5625;

  corral_source_split_5623:
    assume {:verifier.code 0} true;
    out_$i74 := $load.i16($M.1, in_$p49);
    call {:si_unique_call 2379} {:cexpr "__cil_tmp39"} boogie_si_record_i16(out_$i74);
    goto corral_source_split_5624;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i16.i32(out_$i65);
    call {:si_unique_call 2378} {:cexpr "__cil_tmp36"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_5623;

  $bb15:
    assume !(out_$i67 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  corral_source_split_5611:
    assume {:verifier.code 0} true;
    out_$i68 := out_$i65;
    assume true;
    goto $bb15;

  corral_source_split_5610:
    assume {:verifier.code 0} true;
    out_$i67 := $ugt.i32(out_$i66, 65280);
    goto corral_source_split_5611;

  corral_source_split_5609:
    assume {:verifier.code 0} true;
    out_$i66 := $zext.i16.i32(out_$i58);
    call {:si_unique_call 2372} {:cexpr "__cil_tmp33"} boogie_si_record_i32(out_$i66);
    goto corral_source_split_5610;

  corral_source_split_5608:
    assume {:verifier.code 0} true;
    out_$i65 := $load.i16($M.1, out_$p64);
    call {:si_unique_call 2371} {:cexpr "EUN"} boogie_si_record_i16(out_$i65);
    goto corral_source_split_5609;

  corral_source_split_5607:
    assume {:verifier.code 0} true;
    out_$p64 := $add.ref(out_$p63, $mul.ref(out_$i59, 2));
    goto corral_source_split_5608;

  corral_source_split_5606:
    assume {:verifier.code 0} true;
    out_$p63 := $load.ref($M.1, out_$p62);
    goto corral_source_split_5607;

  corral_source_split_5605:
    assume {:verifier.code 0} true;
    out_$p62 := $i2p.i64.ref(out_$i61);
    goto corral_source_split_5606;

  corral_source_split_5604:
    assume {:verifier.code 0} true;
    out_$i61 := $add.i64(out_$i60, 544);
    call {:si_unique_call 2370} {:cexpr "__cil_tmp30"} boogie_si_record_i64(out_$i61);
    goto corral_source_split_5605;

  corral_source_split_5603:
    assume {:verifier.code 0} true;
    out_$i60 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2369} {:cexpr "__cil_tmp29"} boogie_si_record_i64(out_$i60);
    goto corral_source_split_5604;

  corral_source_split_5602:
    assume {:verifier.code 0} true;
    out_$i59 := $zext.i16.i64(out_$i54);
    call {:si_unique_call 2368} {:cexpr "__cil_tmp28"} boogie_si_record_i64(out_$i59);
    goto corral_source_split_5603;

  corral_source_split_5601:
    assume {:verifier.code 0} true;
    out_$i58 := $trunc.i32.i16(out_$i57);
    call {:si_unique_call 2367} {:cexpr "thislen"} boogie_si_record_i16(out_$i58);
    goto corral_source_split_5602;

  corral_source_split_5600:
    assume {:verifier.code 0} true;
    out_$i57 := $add.i32(out_$i56, 1);
    call {:si_unique_call 2366} {:cexpr "__cil_tmp27"} boogie_si_record_i32(out_$i57);
    goto corral_source_split_5601;

  $bb13:
    assume {:verifier.code 0} true;
    out_$i56 := $zext.i16.i32(out_$i55);
    call {:si_unique_call 2365} {:cexpr "__cil_tmp26"} boogie_si_record_i32(out_$i56);
    goto corral_source_split_5600;

  corral_source_split_5598:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb18_dummy:
    call {:si_unique_call 1} out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77 := INFTL_makefreeblock_loop_$bb12(in_$p0, in_$p49, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77);
    return;

  exit:
    return;
}



procedure INFTL_makefreeblock_loop_$bb12(in_$p0: ref, in_$p49: ref, in_$i56: i32, in_$i57: i32, in_$i58: i16, in_$i59: i64, in_$i60: i64, in_$i61: i64, in_$p62: ref, in_$p63: ref, in_$p64: ref, in_$i65: i16, in_$i66: i32, in_$i67: i1, in_$i68: i16, in_$i73: i32, in_$i74: i16, in_$i75: i32, in_$i76: i1, in_$i54: i16, in_$i55: i16, in_$i77: i16) returns (out_$i56: i32, out_$i57: i32, out_$i58: i16, out_$i59: i64, out_$i60: i64, out_$i61: i64, out_$p62: ref, out_$p63: ref, out_$p64: ref, out_$i65: i16, out_$i66: i32, out_$i67: i1, out_$i68: i16, out_$i73: i32, out_$i74: i16, out_$i75: i32, out_$i76: i1, out_$i54: i16, out_$i55: i16, out_$i77: i16);



implementation INFTL_makefreeblock_loop_$bb7(in_$p0: ref, in_$p31: ref, in_$i39: i64, in_$i40: i64, in_$i41: i64, in_$p42: ref, in_$p43: ref, in_$p44: ref, in_$i45: i16, in_$i46: i32, in_$i47: i64, in_$i48: i64, in_$p49: ref, in_$i50: i16, in_$i51: i32, in_$i52: i1, in_$i56: i32, in_$i57: i32, in_$i58: i16, in_$i59: i64, in_$i60: i64, in_$i61: i64, in_$p62: ref, in_$p63: ref, in_$p64: ref, in_$i65: i16, in_$i66: i32, in_$i67: i1, in_$i68: i16, in_$i69: i32, in_$i70: i32, in_$i73: i32, in_$i74: i16, in_$i75: i32, in_$i76: i1, in_$i54: i16, in_$i55: i16, in_$i77: i16, in_$i53: i16, in_$i72: i16, in_$i78: i32, in_$i79: i32, in_$i80: i1, in_$i81: i16, in_$i82: i16, in_$i83: i32, in_$i84: i32, in_$i85: i16, in_$i86: i32, in_$i87: i32, in_$i88: i1, in_$i36: i16, in_$i37: i16, in_$i38: i16, in_$i89: i16, in_$i90: i16, in_vslice_dummy_var_123: i32) returns (out_$i39: i64, out_$i40: i64, out_$i41: i64, out_$p42: ref, out_$p43: ref, out_$p44: ref, out_$i45: i16, out_$i46: i32, out_$i47: i64, out_$i48: i64, out_$p49: ref, out_$i50: i16, out_$i51: i32, out_$i52: i1, out_$i56: i32, out_$i57: i32, out_$i58: i16, out_$i59: i64, out_$i60: i64, out_$i61: i64, out_$p62: ref, out_$p63: ref, out_$p64: ref, out_$i65: i16, out_$i66: i32, out_$i67: i1, out_$i68: i16, out_$i69: i32, out_$i70: i32, out_$i73: i32, out_$i74: i16, out_$i75: i32, out_$i76: i1, out_$i54: i16, out_$i55: i16, out_$i77: i16, out_$i53: i16, out_$i72: i16, out_$i78: i32, out_$i79: i32, out_$i80: i1, out_$i81: i16, out_$i82: i16, out_$i83: i32, out_$i84: i32, out_$i85: i16, out_$i86: i32, out_$i87: i32, out_$i88: i1, out_$i36: i16, out_$i37: i16, out_$i38: i16, out_$i89: i16, out_$i90: i16, out_vslice_dummy_var_123: i32)
{

  entry:
    out_$i39, out_$i40, out_$i41, out_$p42, out_$p43, out_$p44, out_$i45, out_$i46, out_$i47, out_$i48, out_$p49, out_$i50, out_$i51, out_$i52, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77, out_$i53, out_$i72, out_$i78, out_$i79, out_$i80, out_$i81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i36, out_$i37, out_$i38, out_$i89, out_$i90, out_vslice_dummy_var_123 := in_$i39, in_$i40, in_$i41, in_$p42, in_$p43, in_$p44, in_$i45, in_$i46, in_$i47, in_$i48, in_$p49, in_$i50, in_$i51, in_$i52, in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$p62, in_$p63, in_$p64, in_$i65, in_$i66, in_$i67, in_$i68, in_$i69, in_$i70, in_$i73, in_$i74, in_$i75, in_$i76, in_$i54, in_$i55, in_$i77, in_$i53, in_$i72, in_$i78, in_$i79, in_$i80, in_$i81, in_$i82, in_$i83, in_$i84, in_$i85, in_$i86, in_$i87, in_$i88, in_$i36, in_$i37, in_$i38, in_$i89, in_$i90, in_vslice_dummy_var_123;
    goto $bb7, exit;

  $bb7:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5577;

  $bb23:
    assume out_$i88 == 1;
    assume {:verifier.code 0} true;
    out_$i36, out_$i37, out_$i38 := out_$i85, out_$i82, out_$i81;
    goto $bb23_dummy;

  corral_source_split_5638:
    assume {:verifier.code 0} true;
    out_$i89, out_$i90 := out_$i81, out_$i82;
    assume true;
    goto $bb23;

  corral_source_split_5637:
    assume {:verifier.code 0} true;
    out_$i88 := $ult.i32(out_$i87, out_$i86);
    goto corral_source_split_5638;

  corral_source_split_5636:
    assume {:verifier.code 0} true;
    out_$i87 := $zext.i16.i32(out_$i85);
    call {:si_unique_call 2385} {:cexpr "__cil_tmp48"} boogie_si_record_i32(out_$i87);
    goto corral_source_split_5637;

  corral_source_split_5635:
    assume {:verifier.code 0} true;
    out_$i86 := $load.i32($M.1, in_$p31);
    call {:si_unique_call 2384} {:cexpr "__cil_tmp47"} boogie_si_record_i32(out_$i86);
    goto corral_source_split_5636;

  corral_source_split_5634:
    assume {:verifier.code 0} true;
    out_$i85 := $trunc.i32.i16(out_$i84);
    call {:si_unique_call 2383} {:cexpr "chain"} boogie_si_record_i16(out_$i85);
    goto corral_source_split_5635;

  corral_source_split_5633:
    assume {:verifier.code 0} true;
    out_$i84 := $add.i32(out_$i83, 1);
    call {:si_unique_call 2382} {:cexpr "__cil_tmp44"} boogie_si_record_i32(out_$i84);
    goto corral_source_split_5634;

  corral_source_split_5632:
    assume {:verifier.code 0} true;
    out_$i83 := $zext.i16.i32(out_$i36);
    call {:si_unique_call 2381} {:cexpr "__cil_tmp43"} boogie_si_record_i32(out_$i83);
    goto corral_source_split_5633;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5632;

  $bb21:
    assume !(out_$i80 == 1);
    assume {:verifier.code 0} true;
    out_$i81, out_$i82 := out_$i38, out_$i37;
    goto $bb22;

  corral_source_split_5630:
    assume {:verifier.code 0} true;
    out_$i81, out_$i82 := out_$i72, out_$i36;
    goto $bb22;

  $bb20:
    assume out_$i80 == 1;
    goto corral_source_split_5630;

  corral_source_split_5621:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  corral_source_split_5620:
    assume {:verifier.code 0} true;
    out_$i80 := $sgt.i32(out_$i79, out_$i78);
    goto corral_source_split_5621;

  corral_source_split_5619:
    assume {:verifier.code 0} true;
    out_$i79 := $zext.i16.i32(out_$i72);
    call {:si_unique_call 2377} {:cexpr "__cil_tmp42"} boogie_si_record_i32(out_$i79);
    goto corral_source_split_5620;

  corral_source_split_5618:
    assume {:verifier.code 0} true;
    out_$i78 := $zext.i16.i32(out_$i38);
    call {:si_unique_call 2376} {:cexpr "__cil_tmp41"} boogie_si_record_i32(out_$i78);
    goto corral_source_split_5619;

  $bb16:
    assume {:verifier.code 0} true;
    goto corral_source_split_5618;

  corral_source_split_5596:
    assume {:verifier.code 0} true;
    out_$i72 := out_$i53;
    goto $bb16;

  corral_source_split_5616:
    assume {:verifier.code 0} true;
    out_$i72 := 0;
    goto $bb16;

  corral_source_split_5615:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2375} out_vslice_dummy_var_123 := printk.ref.i32.i32(.str.51, out_$i69, out_$i70);
    goto corral_source_split_5616;

  corral_source_split_5614:
    assume {:verifier.code 0} true;
    out_$i70 := $zext.i16.i32(out_$i68);
    call {:si_unique_call 2374} {:cexpr "__cil_tmp35"} boogie_si_record_i32(out_$i70);
    goto corral_source_split_5615;

  corral_source_split_5613:
    assume {:verifier.code 0} true;
    out_$i69 := $zext.i16.i32(out_$i36);
    call {:si_unique_call 2373} {:cexpr "__cil_tmp34"} boogie_si_record_i32(out_$i69);
    goto corral_source_split_5614;

  $bb14:
    assume out_$i67 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_5613;

  corral_source_split_5611:
    assume {:verifier.code 0} true;
    out_$i68 := out_$i65;
    assume true;
    goto $bb14, $bb15;

  corral_source_split_5610:
    assume {:verifier.code 0} true;
    out_$i67 := $ugt.i32(out_$i66, 65280);
    goto corral_source_split_5611;

  corral_source_split_5609:
    assume {:verifier.code 0} true;
    out_$i66 := $zext.i16.i32(out_$i58);
    call {:si_unique_call 2372} {:cexpr "__cil_tmp33"} boogie_si_record_i32(out_$i66);
    goto corral_source_split_5610;

  corral_source_split_5608:
    assume {:verifier.code 0} true;
    out_$i65 := $load.i16($M.1, out_$p64);
    call {:si_unique_call 2371} {:cexpr "EUN"} boogie_si_record_i16(out_$i65);
    goto corral_source_split_5609;

  corral_source_split_5607:
    assume {:verifier.code 0} true;
    out_$p64 := $add.ref(out_$p63, $mul.ref(out_$i59, 2));
    goto corral_source_split_5608;

  corral_source_split_5606:
    assume {:verifier.code 0} true;
    out_$p63 := $load.ref($M.1, out_$p62);
    goto corral_source_split_5607;

  corral_source_split_5605:
    assume {:verifier.code 0} true;
    out_$p62 := $i2p.i64.ref(out_$i61);
    goto corral_source_split_5606;

  corral_source_split_5604:
    assume {:verifier.code 0} true;
    out_$i61 := $add.i64(out_$i60, 544);
    call {:si_unique_call 2370} {:cexpr "__cil_tmp30"} boogie_si_record_i64(out_$i61);
    goto corral_source_split_5605;

  corral_source_split_5603:
    assume {:verifier.code 0} true;
    out_$i60 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2369} {:cexpr "__cil_tmp29"} boogie_si_record_i64(out_$i60);
    goto corral_source_split_5604;

  corral_source_split_5602:
    assume {:verifier.code 0} true;
    out_$i59 := $zext.i16.i64(out_$i54);
    call {:si_unique_call 2368} {:cexpr "__cil_tmp28"} boogie_si_record_i64(out_$i59);
    goto corral_source_split_5603;

  corral_source_split_5601:
    assume {:verifier.code 0} true;
    out_$i58 := $trunc.i32.i16(out_$i57);
    call {:si_unique_call 2367} {:cexpr "thislen"} boogie_si_record_i16(out_$i58);
    goto corral_source_split_5602;

  corral_source_split_5600:
    assume {:verifier.code 0} true;
    out_$i57 := $add.i32(out_$i56, 1);
    call {:si_unique_call 2366} {:cexpr "__cil_tmp27"} boogie_si_record_i32(out_$i57);
    goto corral_source_split_5601;

  $bb13:
    assume {:verifier.code 0} true;
    out_$i56 := $zext.i16.i32(out_$i55);
    call {:si_unique_call 2365} {:cexpr "__cil_tmp26"} boogie_si_record_i32(out_$i56);
    goto corral_source_split_5600;

  corral_source_split_5598:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb12:
    call out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77 := INFTL_makefreeblock_loop_$bb12(in_$p0, out_$p49, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77);
    goto $bb12_last;

  $bb12_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5598;

  corral_source_split_5594:
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i45, 0;
    goto $bb12;

  $bb18:
    assume out_$i76 == 1;
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i65, out_$i58;
    assume false;
    return;

  corral_source_split_5626:
    assume {:verifier.code 0} true;
    out_$i77 := out_$i58;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_5625:
    assume {:verifier.code 0} true;
    out_$i76 := $sge.i32(out_$i75, out_$i73);
    goto corral_source_split_5626;

  corral_source_split_5624:
    assume {:verifier.code 0} true;
    out_$i75 := $zext.i16.i32(out_$i74);
    call {:si_unique_call 2380} {:cexpr "__cil_tmp40"} boogie_si_record_i32(out_$i75);
    goto corral_source_split_5625;

  corral_source_split_5623:
    assume {:verifier.code 0} true;
    out_$i74 := $load.i16($M.1, out_$p49);
    call {:si_unique_call 2379} {:cexpr "__cil_tmp39"} boogie_si_record_i16(out_$i74);
    goto corral_source_split_5624;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i73 := $zext.i16.i32(out_$i65);
    call {:si_unique_call 2378} {:cexpr "__cil_tmp36"} boogie_si_record_i32(out_$i73);
    goto corral_source_split_5623;

  $bb15:
    assume !(out_$i67 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb9:
    assume out_$i52 == 1;
    goto corral_source_split_5594;

  corral_source_split_5592:
    assume {:verifier.code 0} true;
    out_$i53 := 0;
    assume true;
    goto $bb9, $bb10;

  corral_source_split_5591:
    assume {:verifier.code 0} true;
    out_$i52 := $sge.i32(out_$i51, out_$i46);
    goto corral_source_split_5592;

  corral_source_split_5590:
    assume {:verifier.code 0} true;
    out_$i51 := $zext.i16.i32(out_$i50);
    call {:si_unique_call 2364} {:cexpr "__cil_tmp40"} boogie_si_record_i32(out_$i51);
    goto corral_source_split_5591;

  corral_source_split_5589:
    assume {:verifier.code 0} true;
    out_$i50 := $load.i16($M.1, out_$p49);
    call {:si_unique_call 2363} {:cexpr "__cil_tmp39"} boogie_si_record_i16(out_$i50);
    goto corral_source_split_5590;

  corral_source_split_5588:
    assume {:verifier.code 0} true;
    out_$p49 := $i2p.i64.ref(out_$i48);
    goto corral_source_split_5589;

  corral_source_split_5587:
    assume {:verifier.code 0} true;
    out_$i48 := $add.i64(out_$i47, 520);
    call {:si_unique_call 2362} {:cexpr "__cil_tmp38"} boogie_si_record_i64(out_$i48);
    goto corral_source_split_5588;

  corral_source_split_5586:
    assume {:verifier.code 0} true;
    out_$i47 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2361} {:cexpr "__cil_tmp37"} boogie_si_record_i64(out_$i47);
    goto corral_source_split_5587;

  corral_source_split_5585:
    assume {:verifier.code 0} true;
    out_$i46 := $zext.i16.i32(out_$i45);
    call {:si_unique_call 2360} {:cexpr "__cil_tmp36"} boogie_si_record_i32(out_$i46);
    goto corral_source_split_5586;

  corral_source_split_5584:
    assume {:verifier.code 0} true;
    out_$i45 := $load.i16($M.1, out_$p44);
    call {:si_unique_call 2359} {:cexpr "EUN"} boogie_si_record_i16(out_$i45);
    goto corral_source_split_5585;

  corral_source_split_5583:
    assume {:verifier.code 0} true;
    out_$p44 := $add.ref(out_$p43, $mul.ref(out_$i39, 2));
    goto corral_source_split_5584;

  corral_source_split_5582:
    assume {:verifier.code 0} true;
    out_$p43 := $load.ref($M.1, out_$p42);
    goto corral_source_split_5583;

  corral_source_split_5581:
    assume {:verifier.code 0} true;
    out_$p42 := $i2p.i64.ref(out_$i41);
    goto corral_source_split_5582;

  corral_source_split_5580:
    assume {:verifier.code 0} true;
    out_$i41 := $add.i64(out_$i40, 552);
    call {:si_unique_call 2358} {:cexpr "__cil_tmp23"} boogie_si_record_i64(out_$i41);
    goto corral_source_split_5581;

  corral_source_split_5579:
    assume {:verifier.code 0} true;
    out_$i40 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2357} {:cexpr "__cil_tmp22"} boogie_si_record_i64(out_$i40);
    goto corral_source_split_5580;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i39 := $zext.i16.i64(out_$i36);
    call {:si_unique_call 2356} {:cexpr "__cil_tmp21"} boogie_si_record_i64(out_$i39);
    goto corral_source_split_5579;

  corral_source_split_5577:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb11:
    assume {:verifier.code 0} true;
    goto corral_source_split_5596;

  $bb10:
    assume {:verifier.code 0} true;
    assume !(out_$i52 == 1);
    goto $bb11;

  corral_source_split_5628:
    assume {:verifier.code 0} true;
    out_$i53 := out_$i77;
    goto $bb11;

  $bb19:
    assume !(out_$i76 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_5628;

  $bb23_dummy:
    call {:si_unique_call 1} out_$i39, out_$i40, out_$i41, out_$p42, out_$p43, out_$p44, out_$i45, out_$i46, out_$i47, out_$i48, out_$p49, out_$i50, out_$i51, out_$i52, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77, out_$i53, out_$i72, out_$i78, out_$i79, out_$i80, out_$i81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i36, out_$i37, out_$i38, out_$i89, out_$i90, out_vslice_dummy_var_123 := INFTL_makefreeblock_loop_$bb7(in_$p0, in_$p31, out_$i39, out_$i40, out_$i41, out_$p42, out_$p43, out_$p44, out_$i45, out_$i46, out_$i47, out_$i48, out_$p49, out_$i50, out_$i51, out_$i52, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$p62, out_$p63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i68, out_$i69, out_$i70, out_$i73, out_$i74, out_$i75, out_$i76, out_$i54, out_$i55, out_$i77, out_$i53, out_$i72, out_$i78, out_$i79, out_$i80, out_$i81, out_$i82, out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i36, out_$i37, out_$i38, out_$i89, out_$i90, out_vslice_dummy_var_123);
    return;

  exit:
    return;
}



procedure INFTL_makefreeblock_loop_$bb7(in_$p0: ref, in_$p31: ref, in_$i39: i64, in_$i40: i64, in_$i41: i64, in_$p42: ref, in_$p43: ref, in_$p44: ref, in_$i45: i16, in_$i46: i32, in_$i47: i64, in_$i48: i64, in_$p49: ref, in_$i50: i16, in_$i51: i32, in_$i52: i1, in_$i56: i32, in_$i57: i32, in_$i58: i16, in_$i59: i64, in_$i60: i64, in_$i61: i64, in_$p62: ref, in_$p63: ref, in_$p64: ref, in_$i65: i16, in_$i66: i32, in_$i67: i1, in_$i68: i16, in_$i69: i32, in_$i70: i32, in_$i73: i32, in_$i74: i16, in_$i75: i32, in_$i76: i1, in_$i54: i16, in_$i55: i16, in_$i77: i16, in_$i53: i16, in_$i72: i16, in_$i78: i32, in_$i79: i32, in_$i80: i1, in_$i81: i16, in_$i82: i16, in_$i83: i32, in_$i84: i32, in_$i85: i16, in_$i86: i32, in_$i87: i32, in_$i88: i1, in_$i36: i16, in_$i37: i16, in_$i38: i16, in_$i89: i16, in_$i90: i16, in_vslice_dummy_var_123: i32) returns (out_$i39: i64, out_$i40: i64, out_$i41: i64, out_$p42: ref, out_$p43: ref, out_$p44: ref, out_$i45: i16, out_$i46: i32, out_$i47: i64, out_$i48: i64, out_$p49: ref, out_$i50: i16, out_$i51: i32, out_$i52: i1, out_$i56: i32, out_$i57: i32, out_$i58: i16, out_$i59: i64, out_$i60: i64, out_$i61: i64, out_$p62: ref, out_$p63: ref, out_$p64: ref, out_$i65: i16, out_$i66: i32, out_$i67: i1, out_$i68: i16, out_$i69: i32, out_$i70: i32, out_$i73: i32, out_$i74: i16, out_$i75: i32, out_$i76: i1, out_$i54: i16, out_$i55: i16, out_$i77: i16, out_$i53: i16, out_$i72: i16, out_$i78: i32, out_$i79: i32, out_$i80: i1, out_$i81: i16, out_$i82: i16, out_$i83: i32, out_$i84: i32, out_$i85: i16, out_$i86: i32, out_$i87: i32, out_$i88: i1, out_$i36: i16, out_$i37: i16, out_$i38: i16, out_$i89: i16, out_$i90: i16, out_vslice_dummy_var_123: i32);



implementation nrbits_loop_$bb4(in_$i0: i32, in_$i1: i32, in_$i6: i32, in_$i7: i32, in_$i8: i1, in_$i9: i32, in_$i10: i32, in_$i11: i32, in_$i12: i1, in_$i4: i32, in_$i5: i32, in_$i13: i32) returns (out_$i6: i32, out_$i7: i32, out_$i8: i1, out_$i9: i32, out_$i10: i32, out_$i11: i32, out_$i12: i1, out_$i4: i32, out_$i5: i32, out_$i13: i32)
{

  entry:
    out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i4, out_$i5, out_$i13 := in_$i6, in_$i7, in_$i8, in_$i9, in_$i10, in_$i11, in_$i12, in_$i4, in_$i5, in_$i13;
    goto $bb4, exit;

  $bb4:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5660;

  $bb6:
    assume out_$i12 == 1;
    assume {:verifier.code 0} true;
    out_$i4, out_$i5 := out_$i10, out_$i11;
    goto $bb6_dummy;

  corral_source_split_5668:
    assume {:verifier.code 0} true;
    out_$i13 := out_$i10;
    assume true;
    goto $bb6;

  corral_source_split_5667:
    assume {:verifier.code 0} true;
    out_$i12 := $slt.i32(out_$i11, in_$i1);
    goto corral_source_split_5668;

  corral_source_split_5666:
    assume {:verifier.code 0} true;
    out_$i11 := $add.i32(out_$i5, 1);
    call {:si_unique_call 2397} {:cexpr "i"} boogie_si_record_i32(out_$i11);
    goto corral_source_split_5667;

  corral_source_split_5665:
    assume {:verifier.code 0} true;
    out_$i10 := $add.i32(out_$i9, out_$i4);
    call {:si_unique_call 2396} {:cexpr "total"} boogie_si_record_i32(out_$i10);
    goto corral_source_split_5666;

  corral_source_split_5664:
    assume {:verifier.code 0} true;
    out_$i9 := $zext.i1.i32(out_$i8);
    call {:si_unique_call 2395} {:cexpr "__cil_tmp8"} boogie_si_record_i32(out_$i9);
    goto corral_source_split_5665;

  corral_source_split_5663:
    assume {:verifier.code 0} true;
    out_$i8 := $ne.i32(out_$i7, 0);
    goto corral_source_split_5664;

  corral_source_split_5662:
    assume {:verifier.code 0} true;
    out_$i7 := $and.i32(out_$i6, in_$i0);
    call {:si_unique_call 2394} {:cexpr "__cil_tmp7"} boogie_si_record_i32(out_$i7);
    goto corral_source_split_5663;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i6 := $shl.i32(1, out_$i5);
    call {:si_unique_call 2393} {:cexpr "__cil_tmp5"} boogie_si_record_i32(out_$i6);
    goto corral_source_split_5662;

  corral_source_split_5660:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb6_dummy:
    call {:si_unique_call 1} out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i4, out_$i5, out_$i13 := nrbits_loop_$bb4(in_$i0, in_$i1, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i4, out_$i5, out_$i13);
    return;

  exit:
    return;
}



procedure nrbits_loop_$bb4(in_$i0: i32, in_$i1: i32, in_$i6: i32, in_$i7: i32, in_$i8: i1, in_$i9: i32, in_$i10: i32, in_$i11: i32, in_$i12: i1, in_$i4: i32, in_$i5: i32, in_$i13: i32) returns (out_$i6: i32, out_$i7: i32, out_$i8: i1, out_$i9: i32, out_$i10: i32, out_$i11: i32, out_$i12: i1, out_$i4: i32, out_$i5: i32, out_$i13: i32);



implementation INFTL_foldchain_loop_$bb100(in_$p0: ref, in_$p339: ref, in_$i348: i64, in_$i349: i64, in_$i350: i64, in_$p351: ref, in_$p352: ref, in_$p353: ref, in_$i354: i16, in_$i355: i32, in_$i356: i64, in_$p357: ref, in_$p358: ref, in_$i359: i16, in_$i360: i32, in_$i361: i1, in_$i347: i32, in_$i362: i32, in_$i363: i32) returns (out_$i348: i64, out_$i349: i64, out_$i350: i64, out_$p351: ref, out_$p352: ref, out_$p353: ref, out_$i354: i16, out_$i355: i32, out_$i356: i64, out_$p357: ref, out_$p358: ref, out_$i359: i16, out_$i360: i32, out_$i361: i1, out_$i347: i32, out_$i362: i32, out_$i363: i32)
{

  entry:
    out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363 := in_$i348, in_$i349, in_$i350, in_$p351, in_$p352, in_$p353, in_$i354, in_$i355, in_$i356, in_$p357, in_$p358, in_$i359, in_$i360, in_$i361, in_$i347, in_$i362, in_$i363;
    goto $bb100, exit;

  $bb100:
    assume {:verifier.code 0} true;
    goto corral_source_split_6131;

  $bb102:
    assume out_$i361 == 1;
    assume {:verifier.code 0} true;
    out_$i347 := out_$i355;
    goto $bb102_dummy;

  corral_source_split_6146:
    assume {:verifier.code 0} true;
    out_$i362, out_$i363 := out_$i347, out_$i355;
    assume true;
    goto $bb102;

  corral_source_split_6145:
    assume {:verifier.code 0} true;
    out_$i361 := $ne.i32(out_$i360, 65535);
    goto corral_source_split_6146;

  corral_source_split_6144:
    assume {:verifier.code 0} true;
    out_$i360 := $zext.i16.i32(out_$i359);
    call {:si_unique_call 2594} {:cexpr "__cil_tmp209"} boogie_si_record_i32(out_$i360);
    goto corral_source_split_6145;

  corral_source_split_6143:
    assume {:verifier.code 0} true;
    out_$i359 := $load.i16($M.1, out_$p358);
    call {:si_unique_call 2593} {:cexpr "__cil_tmp208"} boogie_si_record_i16(out_$i359);
    goto corral_source_split_6144;

  corral_source_split_6142:
    assume {:verifier.code 0} true;
    out_$p358 := $add.ref(out_$p357, $mul.ref(out_$i356, 2));
    goto corral_source_split_6143;

  corral_source_split_6141:
    assume {:verifier.code 0} true;
    out_$p357 := $load.ref($M.1, in_$p339);
    goto corral_source_split_6142;

  corral_source_split_6140:
    assume {:verifier.code 0} true;
    out_$i356 := $zext.i32.i64(out_$i355);
    call {:si_unique_call 2592} {:cexpr "__cil_tmp203"} boogie_si_record_i64(out_$i356);
    goto corral_source_split_6141;

  corral_source_split_6139:
    assume {:verifier.code 0} true;
    out_$i355 := $zext.i16.i32(out_$i354);
    call {:si_unique_call 2591} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i355);
    goto corral_source_split_6140;

  corral_source_split_6138:
    assume {:verifier.code 0} true;
    out_$i354 := $load.i16($M.1, out_$p353);
    call {:si_unique_call 2590} {:cexpr "__cil_tmp202"} boogie_si_record_i16(out_$i354);
    goto corral_source_split_6139;

  corral_source_split_6137:
    assume {:verifier.code 0} true;
    out_$p353 := $add.ref(out_$p352, $mul.ref(out_$i348, 2));
    goto corral_source_split_6138;

  corral_source_split_6136:
    assume {:verifier.code 0} true;
    out_$p352 := $load.ref($M.1, out_$p351);
    goto corral_source_split_6137;

  corral_source_split_6135:
    assume {:verifier.code 0} true;
    out_$p351 := $i2p.i64.ref(out_$i350);
    goto corral_source_split_6136;

  corral_source_split_6134:
    assume {:verifier.code 0} true;
    out_$i350 := $add.i64(out_$i349, 544);
    call {:si_unique_call 2589} {:cexpr "__cil_tmp199"} boogie_si_record_i64(out_$i350);
    goto corral_source_split_6135;

  corral_source_split_6133:
    assume {:verifier.code 0} true;
    out_$i349 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2588} {:cexpr "__cil_tmp198"} boogie_si_record_i64(out_$i349);
    goto corral_source_split_6134;

  $bb101:
    assume {:verifier.code 0} true;
    out_$i348 := $zext.i32.i64(out_$i347);
    call {:si_unique_call 2587} {:cexpr "__cil_tmp197"} boogie_si_record_i64(out_$i348);
    goto corral_source_split_6133;

  corral_source_split_6131:
    assume {:verifier.code 0} true;
    goto $bb101;

  $bb102_dummy:
    call {:si_unique_call 1} out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363 := INFTL_foldchain_loop_$bb100(in_$p0, in_$p339, out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363);
    return;

  exit:
    return;
}



procedure INFTL_foldchain_loop_$bb100(in_$p0: ref, in_$p339: ref, in_$i348: i64, in_$i349: i64, in_$i350: i64, in_$p351: ref, in_$p352: ref, in_$p353: ref, in_$i354: i16, in_$i355: i32, in_$i356: i64, in_$p357: ref, in_$p358: ref, in_$i359: i16, in_$i360: i32, in_$i361: i1, in_$i347: i32, in_$i362: i32, in_$i363: i32) returns (out_$i348: i64, out_$i349: i64, out_$i350: i64, out_$p351: ref, out_$p352: ref, out_$p353: ref, out_$i354: i16, out_$i355: i32, out_$i356: i64, out_$p357: ref, out_$p358: ref, out_$i359: i16, out_$i360: i32, out_$i361: i1, out_$i347: i32, out_$i362: i32, out_$i363: i32);



implementation INFTL_foldchain_loop_$bb96(in_$p0: ref, in_$i1: i32, in_$i51: i32, in_$i328: i64, in_$i329: i64, in_$i330: i64, in_$p331: ref, in_$p332: ref, in_$p333: ref, in_$i334: i16, in_$i335: i32, in_$i336: i64, in_$i337: i64, in_$i338: i64, in_$p339: ref, in_$p340: ref, in_$p341: ref, in_$i342: i16, in_$i343: i32, in_$i344: i1, in_$i348: i64, in_$i349: i64, in_$i350: i64, in_$p351: ref, in_$p352: ref, in_$p353: ref, in_$i354: i16, in_$i355: i32, in_$i356: i64, in_$p357: ref, in_$p358: ref, in_$i359: i16, in_$i360: i32, in_$i361: i1, in_$i347: i32, in_$i362: i32, in_$i363: i32, in_$i345: i32, in_$i346: i32, in_$i364: i1, in_$i365: i64, in_$i366: i64, in_$i367: i64, in_$p368: ref, in_$p369: ref, in_$p370: ref, in_$i371: i32, in_$i372: i1, in_$i373: i64, in_$i374: i64, in_$i375: i64, in_$p376: ref, in_$p377: ref, in_$p378: ref, in_$i379: i64, in_$i380: i64, in_$i381: i64, in_$p382: ref, in_$p383: ref, in_$p384: ref, in_$i385: i64, in_$i386: i64, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i32, in_$i393: i16, in_$p394: ref) returns (out_$i328: i64, out_$i329: i64, out_$i330: i64, out_$p331: ref, out_$p332: ref, out_$p333: ref, out_$i334: i16, out_$i335: i32, out_$i336: i64, out_$i337: i64, out_$i338: i64, out_$p339: ref, out_$p340: ref, out_$p341: ref, out_$i342: i16, out_$i343: i32, out_$i344: i1, out_$i348: i64, out_$i349: i64, out_$i350: i64, out_$p351: ref, out_$p352: ref, out_$p353: ref, out_$i354: i16, out_$i355: i32, out_$i356: i64, out_$p357: ref, out_$p358: ref, out_$i359: i16, out_$i360: i32, out_$i361: i1, out_$i347: i32, out_$i362: i32, out_$i363: i32, out_$i345: i32, out_$i346: i32, out_$i364: i1, out_$i365: i64, out_$i366: i64, out_$i367: i64, out_$p368: ref, out_$p369: ref, out_$p370: ref, out_$i371: i32, out_$i372: i1, out_$i373: i64, out_$i374: i64, out_$i375: i64, out_$p376: ref, out_$p377: ref, out_$p378: ref, out_$i379: i64, out_$i380: i64, out_$i381: i64, out_$p382: ref, out_$p383: ref, out_$p384: ref, out_$i385: i64, out_$i386: i64, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i32, out_$i393: i16, out_$p394: ref)
{

  entry:
    out_$i328, out_$i329, out_$i330, out_$p331, out_$p332, out_$p333, out_$i334, out_$i335, out_$i336, out_$i337, out_$i338, out_$p339, out_$p340, out_$p341, out_$i342, out_$i343, out_$i344, out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363, out_$i345, out_$i346, out_$i364, out_$i365, out_$i366, out_$i367, out_$p368, out_$p369, out_$p370, out_$i371, out_$i372, out_$i373, out_$i374, out_$i375, out_$p376, out_$p377, out_$p378, out_$i379, out_$i380, out_$i381, out_$p382, out_$p383, out_$p384, out_$i385, out_$i386, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$p394 := in_$i328, in_$i329, in_$i330, in_$p331, in_$p332, in_$p333, in_$i334, in_$i335, in_$i336, in_$i337, in_$i338, in_$p339, in_$p340, in_$p341, in_$i342, in_$i343, in_$i344, in_$i348, in_$i349, in_$i350, in_$p351, in_$p352, in_$p353, in_$i354, in_$i355, in_$i356, in_$p357, in_$p358, in_$i359, in_$i360, in_$i361, in_$i347, in_$i362, in_$i363, in_$i345, in_$i346, in_$i364, in_$i365, in_$i366, in_$i367, in_$p368, in_$p369, in_$p370, in_$i371, in_$i372, in_$i373, in_$i374, in_$i375, in_$p376, in_$p377, in_$p378, in_$i379, in_$i380, in_$i381, in_$p382, in_$p383, in_$p384, in_$i385, in_$i386, in_$i387, in_$i388, in_$p389, in_$i390, in_$i391, in_$i392, in_$i393, in_$p394;
    goto $bb96, exit;

  $bb96:
    assume {:verifier.code 0} true;
    out_$i328 := $zext.i32.i64(in_$i1);
    call {:si_unique_call 2577} {:cexpr "__cil_tmp191"} boogie_si_record_i64(out_$i328);
    goto corral_source_split_6109;

  $bb111:
    assume {:verifier.code 0} true;
    goto $bb111_dummy;

  corral_source_split_6192:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p394, out_$i393);
    assume {:verifier.code 0} true;
    goto $bb111;

  corral_source_split_6173:
    assume {:verifier.code 0} true;
    goto $bb111;

  corral_source_split_6172:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p378, $sub.i16(0, 4));
    goto corral_source_split_6173;

  corral_source_split_6171:
    assume {:verifier.code 0} true;
    out_$p378 := $add.ref(out_$p377, $mul.ref(out_$i373, 2));
    goto corral_source_split_6172;

  corral_source_split_6170:
    assume {:verifier.code 0} true;
    out_$p377 := $load.ref($M.1, out_$p376);
    goto corral_source_split_6171;

  corral_source_split_6169:
    assume {:verifier.code 0} true;
    out_$p376 := $i2p.i64.ref(out_$i375);
    goto corral_source_split_6170;

  corral_source_split_6168:
    assume {:verifier.code 0} true;
    out_$i375 := $add.i64(out_$i374, 544);
    call {:si_unique_call 2602} {:cexpr "__cil_tmp218"} boogie_si_record_i64(out_$i375);
    goto corral_source_split_6169;

  corral_source_split_6167:
    assume {:verifier.code 0} true;
    out_$i374 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2601} {:cexpr "__cil_tmp217"} boogie_si_record_i64(out_$i374);
    goto corral_source_split_6168;

  corral_source_split_6166:
    assume {:verifier.code 0} true;
    out_$i373 := $zext.i32.i64(out_$i346);
    call {:si_unique_call 2600} {:cexpr "__cil_tmp216"} boogie_si_record_i64(out_$i373);
    goto corral_source_split_6167;

  $bb109:
    assume out_$i372 == 1;
    goto corral_source_split_6166;

  corral_source_split_6164:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb109, $bb110;

  corral_source_split_6163:
    assume {:verifier.code 0} true;
    out_$i372 := $slt.i32(out_$i371, 0);
    goto corral_source_split_6164;

  corral_source_split_6162:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2598} out_$i371 := INFTL_formatblock(in_$p0, out_$i346);
    call {:si_unique_call 2599} {:cexpr "tmp___6"} boogie_si_record_i32(out_$i371);
    goto corral_source_split_6163;

  corral_source_split_6161:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p370, $sub.i16(0, 1));
    goto corral_source_split_6162;

  corral_source_split_6160:
    assume {:verifier.code 0} true;
    out_$p370 := $add.ref(out_$p369, $mul.ref(out_$i365, 2));
    goto corral_source_split_6161;

  corral_source_split_6159:
    assume {:verifier.code 0} true;
    out_$p369 := $load.ref($M.1, out_$p368);
    goto corral_source_split_6160;

  corral_source_split_6158:
    assume {:verifier.code 0} true;
    out_$p368 := $i2p.i64.ref(out_$i367);
    goto corral_source_split_6159;

  corral_source_split_6157:
    assume {:verifier.code 0} true;
    out_$i367 := $add.i64(out_$i366, 544);
    call {:si_unique_call 2597} {:cexpr "__cil_tmp212"} boogie_si_record_i64(out_$i367);
    goto corral_source_split_6158;

  corral_source_split_6156:
    assume {:verifier.code 0} true;
    out_$i366 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2596} {:cexpr "__cil_tmp211"} boogie_si_record_i64(out_$i366);
    goto corral_source_split_6157;

  $bb108:
    assume {:verifier.code 0} true;
    out_$i365 := $zext.i32.i64(out_$i345);
    call {:si_unique_call 2595} {:cexpr "__cil_tmp210"} boogie_si_record_i64(out_$i365);
    goto corral_source_split_6156;

  $bb106:
    assume !(out_$i364 == 1);
    assume {:verifier.code 0} true;
    goto $bb108;

  corral_source_split_6150:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb106;

  $bb104:
    assume {:verifier.code 0} true;
    out_$i364 := $eq.i32(out_$i346, in_$i51);
    goto corral_source_split_6150;

  corral_source_split_6129:
    assume {:verifier.code 0} true;
    goto $bb104;

  $bb99:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_6129;

  $bb98:
    assume {:verifier.code 0} true;
    assume !(out_$i344 == 1);
    goto $bb99;

  corral_source_split_6148:
    assume {:verifier.code 0} true;
    out_$i345, out_$i346 := out_$i362, out_$i363;
    goto $bb99;

  $bb103:
    assume !(out_$i361 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_6148;

  corral_source_split_6146:
    assume {:verifier.code 0} true;
    out_$i362, out_$i363 := out_$i347, out_$i355;
    assume true;
    goto $bb102, $bb103;

  corral_source_split_6145:
    assume {:verifier.code 0} true;
    out_$i361 := $ne.i32(out_$i360, 65535);
    goto corral_source_split_6146;

  corral_source_split_6144:
    assume {:verifier.code 0} true;
    out_$i360 := $zext.i16.i32(out_$i359);
    call {:si_unique_call 2594} {:cexpr "__cil_tmp209"} boogie_si_record_i32(out_$i360);
    goto corral_source_split_6145;

  corral_source_split_6143:
    assume {:verifier.code 0} true;
    out_$i359 := $load.i16($M.1, out_$p358);
    call {:si_unique_call 2593} {:cexpr "__cil_tmp208"} boogie_si_record_i16(out_$i359);
    goto corral_source_split_6144;

  corral_source_split_6142:
    assume {:verifier.code 0} true;
    out_$p358 := $add.ref(out_$p357, $mul.ref(out_$i356, 2));
    goto corral_source_split_6143;

  corral_source_split_6141:
    assume {:verifier.code 0} true;
    out_$p357 := $load.ref($M.1, out_$p339);
    goto corral_source_split_6142;

  corral_source_split_6140:
    assume {:verifier.code 0} true;
    out_$i356 := $zext.i32.i64(out_$i355);
    call {:si_unique_call 2592} {:cexpr "__cil_tmp203"} boogie_si_record_i64(out_$i356);
    goto corral_source_split_6141;

  corral_source_split_6139:
    assume {:verifier.code 0} true;
    out_$i355 := $zext.i16.i32(out_$i354);
    call {:si_unique_call 2591} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i355);
    goto corral_source_split_6140;

  corral_source_split_6138:
    assume {:verifier.code 0} true;
    out_$i354 := $load.i16($M.1, out_$p353);
    call {:si_unique_call 2590} {:cexpr "__cil_tmp202"} boogie_si_record_i16(out_$i354);
    goto corral_source_split_6139;

  corral_source_split_6137:
    assume {:verifier.code 0} true;
    out_$p353 := $add.ref(out_$p352, $mul.ref(out_$i348, 2));
    goto corral_source_split_6138;

  corral_source_split_6136:
    assume {:verifier.code 0} true;
    out_$p352 := $load.ref($M.1, out_$p351);
    goto corral_source_split_6137;

  corral_source_split_6135:
    assume {:verifier.code 0} true;
    out_$p351 := $i2p.i64.ref(out_$i350);
    goto corral_source_split_6136;

  corral_source_split_6134:
    assume {:verifier.code 0} true;
    out_$i350 := $add.i64(out_$i349, 544);
    call {:si_unique_call 2589} {:cexpr "__cil_tmp199"} boogie_si_record_i64(out_$i350);
    goto corral_source_split_6135;

  corral_source_split_6133:
    assume {:verifier.code 0} true;
    out_$i349 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2588} {:cexpr "__cil_tmp198"} boogie_si_record_i64(out_$i349);
    goto corral_source_split_6134;

  $bb101:
    assume {:verifier.code 0} true;
    out_$i348 := $zext.i32.i64(out_$i347);
    call {:si_unique_call 2587} {:cexpr "__cil_tmp197"} boogie_si_record_i64(out_$i348);
    goto corral_source_split_6133;

  corral_source_split_6131:
    assume {:verifier.code 0} true;
    goto $bb101;

  $bb100:
    call out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363 := INFTL_foldchain_loop_$bb100(in_$p0, out_$p339, out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363);
    goto $bb100_last;

  $bb100_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_6131;

  corral_source_split_6127:
    assume {:verifier.code 0} true;
    out_$i347 := out_$i335;
    goto $bb100;

  $bb102:
    assume out_$i361 == 1;
    assume {:verifier.code 0} true;
    out_$i347 := out_$i355;
    assume false;
    return;

  $bb97:
    assume out_$i344 == 1;
    goto corral_source_split_6127;

  corral_source_split_6125:
    assume {:verifier.code 0} true;
    out_$i345, out_$i346 := 65535, out_$i335;
    assume true;
    goto $bb97, $bb98;

  corral_source_split_6124:
    assume {:verifier.code 0} true;
    out_$i344 := $ne.i32(out_$i343, 65535);
    goto corral_source_split_6125;

  corral_source_split_6123:
    assume {:verifier.code 0} true;
    out_$i343 := $zext.i16.i32(out_$i342);
    call {:si_unique_call 2586} {:cexpr "__cil_tmp209"} boogie_si_record_i32(out_$i343);
    goto corral_source_split_6124;

  corral_source_split_6122:
    assume {:verifier.code 0} true;
    out_$i342 := $load.i16($M.1, out_$p341);
    call {:si_unique_call 2585} {:cexpr "__cil_tmp208"} boogie_si_record_i16(out_$i342);
    goto corral_source_split_6123;

  corral_source_split_6121:
    assume {:verifier.code 0} true;
    out_$p341 := $add.ref(out_$p340, $mul.ref(out_$i336, 2));
    goto corral_source_split_6122;

  corral_source_split_6120:
    assume {:verifier.code 0} true;
    out_$p340 := $load.ref($M.1, out_$p339);
    goto corral_source_split_6121;

  corral_source_split_6119:
    assume {:verifier.code 0} true;
    out_$p339 := $i2p.i64.ref(out_$i338);
    goto corral_source_split_6120;

  corral_source_split_6118:
    assume {:verifier.code 0} true;
    out_$i338 := $add.i64(out_$i337, 544);
    call {:si_unique_call 2584} {:cexpr "__cil_tmp205"} boogie_si_record_i64(out_$i338);
    goto corral_source_split_6119;

  corral_source_split_6117:
    assume {:verifier.code 0} true;
    out_$i337 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2583} {:cexpr "__cil_tmp204"} boogie_si_record_i64(out_$i337);
    goto corral_source_split_6118;

  corral_source_split_6116:
    assume {:verifier.code 0} true;
    out_$i336 := $zext.i32.i64(out_$i335);
    call {:si_unique_call 2582} {:cexpr "__cil_tmp203"} boogie_si_record_i64(out_$i336);
    goto corral_source_split_6117;

  corral_source_split_6115:
    assume {:verifier.code 0} true;
    out_$i335 := $zext.i16.i32(out_$i334);
    call {:si_unique_call 2581} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i335);
    goto corral_source_split_6116;

  corral_source_split_6114:
    assume {:verifier.code 0} true;
    out_$i334 := $load.i16($M.1, out_$p333);
    call {:si_unique_call 2580} {:cexpr "__cil_tmp196"} boogie_si_record_i16(out_$i334);
    goto corral_source_split_6115;

  corral_source_split_6113:
    assume {:verifier.code 0} true;
    out_$p333 := $add.ref(out_$p332, $mul.ref(out_$i328, 2));
    goto corral_source_split_6114;

  corral_source_split_6112:
    assume {:verifier.code 0} true;
    out_$p332 := $load.ref($M.1, out_$p331);
    goto corral_source_split_6113;

  corral_source_split_6111:
    assume {:verifier.code 0} true;
    out_$p331 := $i2p.i64.ref(out_$i330);
    goto corral_source_split_6112;

  corral_source_split_6110:
    assume {:verifier.code 0} true;
    out_$i330 := $add.i64(out_$i329, 552);
    call {:si_unique_call 2579} {:cexpr "__cil_tmp193"} boogie_si_record_i64(out_$i330);
    goto corral_source_split_6111;

  corral_source_split_6109:
    assume {:verifier.code 0} true;
    out_$i329 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2578} {:cexpr "__cil_tmp192"} boogie_si_record_i64(out_$i329);
    goto corral_source_split_6110;

  corral_source_split_6191:
    assume {:verifier.code 0} true;
    out_$p394 := $i2p.i64.ref(out_$i386);
    goto corral_source_split_6192;

  corral_source_split_6190:
    assume {:verifier.code 0} true;
    out_$i393 := $trunc.i32.i16(out_$i392);
    goto corral_source_split_6191;

  corral_source_split_6189:
    assume {:verifier.code 0} true;
    out_$i392 := $add.i32(out_$i391, 1);
    call {:si_unique_call 2612} {:cexpr "__cil_tmp232"} boogie_si_record_i32(out_$i392);
    goto corral_source_split_6190;

  corral_source_split_6188:
    assume {:verifier.code 0} true;
    out_$i391 := $zext.i16.i32(out_$i390);
    call {:si_unique_call 2611} {:cexpr "__cil_tmp231"} boogie_si_record_i32(out_$i391);
    goto corral_source_split_6189;

  corral_source_split_6187:
    assume {:verifier.code 0} true;
    out_$i390 := $load.i16($M.1, out_$p389);
    call {:si_unique_call 2610} {:cexpr "__cil_tmp230"} boogie_si_record_i16(out_$i390);
    goto corral_source_split_6188;

  corral_source_split_6186:
    assume {:verifier.code 0} true;
    out_$p389 := $i2p.i64.ref(out_$i388);
    goto corral_source_split_6187;

  corral_source_split_6185:
    assume {:verifier.code 0} true;
    out_$i388 := $add.i64(out_$i387, 522);
    call {:si_unique_call 2609} {:cexpr "__cil_tmp229"} boogie_si_record_i64(out_$i388);
    goto corral_source_split_6186;

  corral_source_split_6184:
    assume {:verifier.code 0} true;
    out_$i387 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2608} {:cexpr "__cil_tmp228"} boogie_si_record_i64(out_$i387);
    goto corral_source_split_6185;

  corral_source_split_6183:
    assume {:verifier.code 0} true;
    out_$i386 := $add.i64(out_$i385, 522);
    call {:si_unique_call 2607} {:cexpr "__cil_tmp227"} boogie_si_record_i64(out_$i386);
    goto corral_source_split_6184;

  corral_source_split_6182:
    assume {:verifier.code 0} true;
    out_$i385 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2606} {:cexpr "__cil_tmp226"} boogie_si_record_i64(out_$i385);
    goto corral_source_split_6183;

  corral_source_split_6181:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p384, $sub.i16(0, 2));
    goto corral_source_split_6182;

  corral_source_split_6180:
    assume {:verifier.code 0} true;
    out_$p384 := $add.ref(out_$p383, $mul.ref(out_$i379, 2));
    goto corral_source_split_6181;

  corral_source_split_6179:
    assume {:verifier.code 0} true;
    out_$p383 := $load.ref($M.1, out_$p382);
    goto corral_source_split_6180;

  corral_source_split_6178:
    assume {:verifier.code 0} true;
    out_$p382 := $i2p.i64.ref(out_$i381);
    goto corral_source_split_6179;

  corral_source_split_6177:
    assume {:verifier.code 0} true;
    out_$i381 := $add.i64(out_$i380, 544);
    call {:si_unique_call 2605} {:cexpr "__cil_tmp223"} boogie_si_record_i64(out_$i381);
    goto corral_source_split_6178;

  corral_source_split_6176:
    assume {:verifier.code 0} true;
    out_$i380 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2604} {:cexpr "__cil_tmp222"} boogie_si_record_i64(out_$i380);
    goto corral_source_split_6177;

  corral_source_split_6175:
    assume {:verifier.code 0} true;
    out_$i379 := $zext.i32.i64(out_$i346);
    call {:si_unique_call 2603} {:cexpr "__cil_tmp221"} boogie_si_record_i64(out_$i379);
    goto corral_source_split_6176;

  $bb110:
    assume !(out_$i372 == 1);
    goto corral_source_split_6175;

  $bb111_dummy:
    call {:si_unique_call 1} out_$i328, out_$i329, out_$i330, out_$p331, out_$p332, out_$p333, out_$i334, out_$i335, out_$i336, out_$i337, out_$i338, out_$p339, out_$p340, out_$p341, out_$i342, out_$i343, out_$i344, out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363, out_$i345, out_$i346, out_$i364, out_$i365, out_$i366, out_$i367, out_$p368, out_$p369, out_$p370, out_$i371, out_$i372, out_$i373, out_$i374, out_$i375, out_$p376, out_$p377, out_$p378, out_$i379, out_$i380, out_$i381, out_$p382, out_$p383, out_$p384, out_$i385, out_$i386, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$p394 := INFTL_foldchain_loop_$bb96(in_$p0, in_$i1, in_$i51, out_$i328, out_$i329, out_$i330, out_$p331, out_$p332, out_$p333, out_$i334, out_$i335, out_$i336, out_$i337, out_$i338, out_$p339, out_$p340, out_$p341, out_$i342, out_$i343, out_$i344, out_$i348, out_$i349, out_$i350, out_$p351, out_$p352, out_$p353, out_$i354, out_$i355, out_$i356, out_$p357, out_$p358, out_$i359, out_$i360, out_$i361, out_$i347, out_$i362, out_$i363, out_$i345, out_$i346, out_$i364, out_$i365, out_$i366, out_$i367, out_$p368, out_$p369, out_$p370, out_$i371, out_$i372, out_$i373, out_$i374, out_$i375, out_$p376, out_$p377, out_$p378, out_$i379, out_$i380, out_$i381, out_$p382, out_$p383, out_$p384, out_$i385, out_$i386, out_$i387, out_$i388, out_$p389, out_$i390, out_$i391, out_$i392, out_$i393, out_$p394);
    return;

  exit:
    return;
}



procedure INFTL_foldchain_loop_$bb96(in_$p0: ref, in_$i1: i32, in_$i51: i32, in_$i328: i64, in_$i329: i64, in_$i330: i64, in_$p331: ref, in_$p332: ref, in_$p333: ref, in_$i334: i16, in_$i335: i32, in_$i336: i64, in_$i337: i64, in_$i338: i64, in_$p339: ref, in_$p340: ref, in_$p341: ref, in_$i342: i16, in_$i343: i32, in_$i344: i1, in_$i348: i64, in_$i349: i64, in_$i350: i64, in_$p351: ref, in_$p352: ref, in_$p353: ref, in_$i354: i16, in_$i355: i32, in_$i356: i64, in_$p357: ref, in_$p358: ref, in_$i359: i16, in_$i360: i32, in_$i361: i1, in_$i347: i32, in_$i362: i32, in_$i363: i32, in_$i345: i32, in_$i346: i32, in_$i364: i1, in_$i365: i64, in_$i366: i64, in_$i367: i64, in_$p368: ref, in_$p369: ref, in_$p370: ref, in_$i371: i32, in_$i372: i1, in_$i373: i64, in_$i374: i64, in_$i375: i64, in_$p376: ref, in_$p377: ref, in_$p378: ref, in_$i379: i64, in_$i380: i64, in_$i381: i64, in_$p382: ref, in_$p383: ref, in_$p384: ref, in_$i385: i64, in_$i386: i64, in_$i387: i64, in_$i388: i64, in_$p389: ref, in_$i390: i16, in_$i391: i32, in_$i392: i32, in_$i393: i16, in_$p394: ref) returns (out_$i328: i64, out_$i329: i64, out_$i330: i64, out_$p331: ref, out_$p332: ref, out_$p333: ref, out_$i334: i16, out_$i335: i32, out_$i336: i64, out_$i337: i64, out_$i338: i64, out_$p339: ref, out_$p340: ref, out_$p341: ref, out_$i342: i16, out_$i343: i32, out_$i344: i1, out_$i348: i64, out_$i349: i64, out_$i350: i64, out_$p351: ref, out_$p352: ref, out_$p353: ref, out_$i354: i16, out_$i355: i32, out_$i356: i64, out_$p357: ref, out_$p358: ref, out_$i359: i16, out_$i360: i32, out_$i361: i1, out_$i347: i32, out_$i362: i32, out_$i363: i32, out_$i345: i32, out_$i346: i32, out_$i364: i1, out_$i365: i64, out_$i366: i64, out_$i367: i64, out_$p368: ref, out_$p369: ref, out_$p370: ref, out_$i371: i32, out_$i372: i1, out_$i373: i64, out_$i374: i64, out_$i375: i64, out_$p376: ref, out_$p377: ref, out_$p378: ref, out_$i379: i64, out_$i380: i64, out_$i381: i64, out_$p382: ref, out_$p383: ref, out_$p384: ref, out_$i385: i64, out_$i386: i64, out_$i387: i64, out_$i388: i64, out_$p389: ref, out_$i390: i16, out_$i391: i32, out_$i392: i32, out_$i393: i16, out_$p394: ref);
  modifies $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_foldchain_loop_$bb66(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$p3: ref, in_$p5: ref, in_$p6: ref, in_$p9: ref, in_$p10: ref, in_$p15: ref, in_$i51: i32, in_$p174: ref, in_$i179: i64, in_$i180: i64, in_$p181: ref, in_$i182: i64, in_$i183: i64, in_$p184: ref, in_$i185: i16, in_$i186: i32, in_$i187: i1, in_$i189: i64, in_$i190: i64, in_$p191: ref, in_$i192: i32, in_$i193: i32, in_$i194: i32, in_$i195: i32, in_$i196: i1, in_$i197: i64, in_$i198: i64, in_$p199: ref, in_$i200: i64, in_$i201: i64, in_$p202: ref, in_$i203: i16, in_$i204: i32, in_$i205: i1, in_$i206: i32, in_$i207: i64, in_$i208: i64, in_$p209: ref, in_$i210: i64, in_$i211: i64, in_$p212: ref, in_$i213: i16, in_$i214: i32, in_$i215: i64, in_$i216: i64, in_$p217: ref, in_$i218: i32, in_$i219: i32, in_$i220: i32, in_$i221: i64, in_$p222: ref, in_$i223: i32, in_$i224: i1, in_$i225: i32, in_$i226: i1, in_$i227: i32, in_$i228: i64, in_$i229: i64, in_$p230: ref, in_$i231: i64, in_$i232: i64, in_$p233: ref, in_$i234: i16, in_$i235: i32, in_$i236: i64, in_$i237: i64, in_$p238: ref, in_$i239: i32, in_$i240: i32, in_$i241: i32, in_$i242: i64, in_$p243: ref, in_$i244: i32, in_$i245: i1, in_$p246: ref, in_$i247: i64, in_$i248: i64, in_$p249: ref, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i64, in_$i254: i64, in_$p255: ref, in_$i256: i64, in_$i257: i64, in_$p258: ref, in_$i259: i64, in_$i260: i64, in_$p261: ref, in_$i262: i64, in_$i263: i64, in_$p264: ref, in_$i265: i8, in_$i266: i64, in_$i267: i64, in_$i268: i32, in_$i269: i64, in_$i270: i1, in_$p272: ref, in_$i273: i64, in_$i274: i64, in_$p275: ref, in_$i276: i64, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$i281: i8, in_$p282: ref, in_$i283: i64, in_$i284: i64, in_$p285: ref, in_$p286: ref, in_$i287: i32, in_$i288: i64, in_$i289: i64, in_$p290: ref, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i64, in_$p295: ref, in_$p296: ref, in_$i188: i32, in_$i298: i32, in_$i299: i32, in_$i300: i32, in_$i301: i1, in_$i178: i32, in_cmdloc_dummy_var_20: [ref]i8, in_cmdloc_dummy_var_21: [ref]i8, in_vslice_dummy_var_130: i32, in_vslice_dummy_var_131: i32) returns (out_$i179: i64, out_$i180: i64, out_$p181: ref, out_$i182: i64, out_$i183: i64, out_$p184: ref, out_$i185: i16, out_$i186: i32, out_$i187: i1, out_$i189: i64, out_$i190: i64, out_$p191: ref, out_$i192: i32, out_$i193: i32, out_$i194: i32, out_$i195: i32, out_$i196: i1, out_$i197: i64, out_$i198: i64, out_$p199: ref, out_$i200: i64, out_$i201: i64, out_$p202: ref, out_$i203: i16, out_$i204: i32, out_$i205: i1, out_$i206: i32, out_$i207: i64, out_$i208: i64, out_$p209: ref, out_$i210: i64, out_$i211: i64, out_$p212: ref, out_$i213: i16, out_$i214: i32, out_$i215: i64, out_$i216: i64, out_$p217: ref, out_$i218: i32, out_$i219: i32, out_$i220: i32, out_$i221: i64, out_$p222: ref, out_$i223: i32, out_$i224: i1, out_$i225: i32, out_$i226: i1, out_$i227: i32, out_$i228: i64, out_$i229: i64, out_$p230: ref, out_$i231: i64, out_$i232: i64, out_$p233: ref, out_$i234: i16, out_$i235: i32, out_$i236: i64, out_$i237: i64, out_$p238: ref, out_$i239: i32, out_$i240: i32, out_$i241: i32, out_$i242: i64, out_$p243: ref, out_$i244: i32, out_$i245: i1, out_$p246: ref, out_$i247: i64, out_$i248: i64, out_$p249: ref, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i64, out_$i254: i64, out_$p255: ref, out_$i256: i64, out_$i257: i64, out_$p258: ref, out_$i259: i64, out_$i260: i64, out_$p261: ref, out_$i262: i64, out_$i263: i64, out_$p264: ref, out_$i265: i8, out_$i266: i64, out_$i267: i64, out_$i268: i32, out_$i269: i64, out_$i270: i1, out_$p272: ref, out_$i273: i64, out_$i274: i64, out_$p275: ref, out_$i276: i64, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$i281: i8, out_$p282: ref, out_$i283: i64, out_$i284: i64, out_$p285: ref, out_$p286: ref, out_$i287: i32, out_$i288: i64, out_$i289: i64, out_$p290: ref, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i64, out_$p295: ref, out_$p296: ref, out_$i188: i32, out_$i298: i32, out_$i299: i32, out_$i300: i32, out_$i301: i1, out_$i178: i32, out_cmdloc_dummy_var_20: [ref]i8, out_cmdloc_dummy_var_21: [ref]i8, out_vslice_dummy_var_130: i32, out_vslice_dummy_var_131: i32)
{

  entry:
    out_$i179, out_$i180, out_$p181, out_$i182, out_$i183, out_$p184, out_$i185, out_$i186, out_$i187, out_$i189, out_$i190, out_$p191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$p199, out_$i200, out_$i201, out_$p202, out_$i203, out_$i204, out_$i205, out_$i206, out_$i207, out_$i208, out_$p209, out_$i210, out_$i211, out_$p212, out_$i213, out_$i214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$i220, out_$i221, out_$p222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i229, out_$p230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$p238, out_$i239, out_$i240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$p258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i263, out_$p264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$p272, out_$i273, out_$i274, out_$p275, out_$i276, out_$i277, out_$i278, out_$i279, out_$p280, out_$i281, out_$p282, out_$i283, out_$i284, out_$p285, out_$p286, out_$i287, out_$i288, out_$i289, out_$p290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$p296, out_$i188, out_$i298, out_$i299, out_$i300, out_$i301, out_$i178, out_cmdloc_dummy_var_20, out_cmdloc_dummy_var_21, out_vslice_dummy_var_130, out_vslice_dummy_var_131 := in_$i179, in_$i180, in_$p181, in_$i182, in_$i183, in_$p184, in_$i185, in_$i186, in_$i187, in_$i189, in_$i190, in_$p191, in_$i192, in_$i193, in_$i194, in_$i195, in_$i196, in_$i197, in_$i198, in_$p199, in_$i200, in_$i201, in_$p202, in_$i203, in_$i204, in_$i205, in_$i206, in_$i207, in_$i208, in_$p209, in_$i210, in_$i211, in_$p212, in_$i213, in_$i214, in_$i215, in_$i216, in_$p217, in_$i218, in_$i219, in_$i220, in_$i221, in_$p222, in_$i223, in_$i224, in_$i225, in_$i226, in_$i227, in_$i228, in_$i229, in_$p230, in_$i231, in_$i232, in_$p233, in_$i234, in_$i235, in_$i236, in_$i237, in_$p238, in_$i239, in_$i240, in_$i241, in_$i242, in_$p243, in_$i244, in_$i245, in_$p246, in_$i247, in_$i248, in_$p249, in_$i250, in_$i251, in_$p252, in_$i253, in_$i254, in_$p255, in_$i256, in_$i257, in_$p258, in_$i259, in_$i260, in_$p261, in_$i262, in_$i263, in_$p264, in_$i265, in_$i266, in_$i267, in_$i268, in_$i269, in_$i270, in_$p272, in_$i273, in_$i274, in_$p275, in_$i276, in_$i277, in_$i278, in_$i279, in_$p280, in_$i281, in_$p282, in_$i283, in_$i284, in_$p285, in_$p286, in_$i287, in_$i288, in_$i289, in_$p290, in_$i291, in_$i292, in_$i293, in_$i294, in_$p295, in_$p296, in_$i188, in_$i298, in_$i299, in_$i300, in_$i301, in_$i178, in_cmdloc_dummy_var_20, in_cmdloc_dummy_var_21, in_vslice_dummy_var_130, in_vslice_dummy_var_131;
    goto $bb66, exit;

  $bb66:
    assume {:verifier.code 0} true;
    goto corral_source_split_5917;

  $bb90:
    assume out_$i301 == 1;
    assume {:verifier.code 0} true;
    out_$i178 := out_$i298;
    goto $bb90_dummy;

  corral_source_split_5945:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb90;

  corral_source_split_5944:
    assume {:verifier.code 0} true;
    out_$i301 := $ult.i32(out_$i298, out_$i300);
    goto corral_source_split_5945;

  corral_source_split_5943:
    assume {:verifier.code 0} true;
    out_$i300 := $udiv.i32(out_$i299, 512);
    call {:si_unique_call 2506} {:cexpr "__cil_tmp179"} boogie_si_record_i32(out_$i300);
    goto corral_source_split_5944;

  corral_source_split_5942:
    assume {:verifier.code 0} true;
    out_$i299 := $load.i32($M.1, in_$p174);
    call {:si_unique_call 2505} {:cexpr "__cil_tmp178"} boogie_si_record_i32(out_$i299);
    goto corral_source_split_5943;

  corral_source_split_5941:
    assume {:verifier.code 0} true;
    out_$i298 := $add.i32(out_$i188, 1);
    call {:si_unique_call 2504} {:cexpr "block"} boogie_si_record_i32(out_$i298);
    goto corral_source_split_5942;

  $bb70:
    assume {:verifier.code 0} true;
    goto corral_source_split_5941;

  corral_source_split_6070:
    assume {:verifier.code 0} true;
    out_$i188 := out_$i178;
    goto $bb70;

  corral_source_split_5959:
    assume {:verifier.code 0} true;
    out_$i188 := out_$i178;
    goto $bb70;

  corral_source_split_5947:
    assume {:verifier.code 0} true;
    out_$i188 := out_$i178;
    goto $bb70;

  corral_source_split_5929:
    assume {:verifier.code 0} true;
    out_$i188 := out_$i178;
    goto $bb70;

  $bb68:
    assume out_$i187 == 1;
    goto corral_source_split_5929;

  corral_source_split_5927:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb68, $bb69;

  corral_source_split_5926:
    assume {:verifier.code 0} true;
    out_$i187 := $eq.i32(out_$i186, in_$i51);
    goto corral_source_split_5927;

  corral_source_split_5925:
    assume {:verifier.code 0} true;
    out_$i186 := $zext.i16.i32(out_$i185);
    call {:si_unique_call 2497} {:cexpr "__cil_tmp107"} boogie_si_record_i32(out_$i186);
    goto corral_source_split_5926;

  corral_source_split_5924:
    assume {:verifier.code 0} true;
    out_$i185 := $load.i16($M.1, out_$p184);
    call {:si_unique_call 2496} {:cexpr "__cil_tmp106"} boogie_si_record_i16(out_$i185);
    goto corral_source_split_5925;

  corral_source_split_5923:
    assume {:verifier.code 0} true;
    out_$p184 := $i2p.i64.ref(out_$i183);
    goto corral_source_split_5924;

  corral_source_split_5922:
    assume {:verifier.code 0} true;
    out_$i183 := $add.i64(out_$i182, out_$i180);
    call {:si_unique_call 2495} {:cexpr "__cil_tmp105"} boogie_si_record_i64(out_$i183);
    goto corral_source_split_5923;

  corral_source_split_5921:
    assume {:verifier.code 0} true;
    out_$i182 := $p2i.ref.i64(out_$p181);
    goto corral_source_split_5922;

  corral_source_split_5920:
    assume {:verifier.code 0} true;
    out_$p181 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5921;

  corral_source_split_5919:
    assume {:verifier.code 0} true;
    out_$i180 := $mul.i64(out_$i179, 2);
    call {:si_unique_call 2494} {:cexpr "__cil_tmp104"} boogie_si_record_i64(out_$i180);
    goto corral_source_split_5920;

  $bb67:
    assume {:verifier.code 0} true;
    out_$i179 := $sext.i32.i64(out_$i178);
    goto corral_source_split_5919;

  corral_source_split_5917:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb71:
    assume out_$i196 == 1;
    goto corral_source_split_5947;

  corral_source_split_5939:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb71, $bb72;

  corral_source_split_5938:
    assume {:verifier.code 0} true;
    out_$i196 := $eq.i32(out_$i195, in_$i2);
    goto corral_source_split_5939;

  corral_source_split_5937:
    assume {:verifier.code 0} true;
    out_$i195 := $add.i32(out_$i194, out_$i178);
    call {:si_unique_call 2503} {:cexpr "__cil_tmp114"} boogie_si_record_i32(out_$i195);
    goto corral_source_split_5938;

  corral_source_split_5936:
    assume {:verifier.code 0} true;
    out_$i194 := $mul.i32(out_$i193, in_$i1);
    call {:si_unique_call 2502} {:cexpr "__cil_tmp113"} boogie_si_record_i32(out_$i194);
    goto corral_source_split_5937;

  corral_source_split_5935:
    assume {:verifier.code 0} true;
    out_$i193 := $udiv.i32(out_$i192, 512);
    call {:si_unique_call 2501} {:cexpr "__cil_tmp112"} boogie_si_record_i32(out_$i193);
    goto corral_source_split_5936;

  corral_source_split_5934:
    assume {:verifier.code 0} true;
    out_$i192 := $load.i32($M.1, out_$p191);
    call {:si_unique_call 2500} {:cexpr "__cil_tmp111"} boogie_si_record_i32(out_$i192);
    goto corral_source_split_5935;

  corral_source_split_5933:
    assume {:verifier.code 0} true;
    out_$p191 := $i2p.i64.ref(out_$i190);
    goto corral_source_split_5934;

  corral_source_split_5932:
    assume {:verifier.code 0} true;
    out_$i190 := $add.i64(out_$i189, 356);
    call {:si_unique_call 2499} {:cexpr "__cil_tmp110"} boogie_si_record_i64(out_$i190);
    goto corral_source_split_5933;

  corral_source_split_5931:
    assume {:verifier.code 0} true;
    out_$i189 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2498} {:cexpr "__cil_tmp109"} boogie_si_record_i64(out_$i189);
    goto corral_source_split_5932;

  $bb69:
    assume !(out_$i187 == 1);
    goto corral_source_split_5931;

  $bb75:
    assume out_$i205 == 1;
    goto corral_source_split_5959;

  corral_source_split_5957:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb75, $bb76;

  corral_source_split_5956:
    assume {:verifier.code 0} true;
    out_$i205 := $eq.i32(out_$i204, 65535);
    goto corral_source_split_5957;

  corral_source_split_5955:
    assume {:verifier.code 0} true;
    out_$i204 := $zext.i16.i32(out_$i203);
    call {:si_unique_call 2510} {:cexpr "__cil_tmp118"} boogie_si_record_i32(out_$i204);
    goto corral_source_split_5956;

  corral_source_split_5954:
    assume {:verifier.code 0} true;
    out_$i203 := $load.i16($M.1, out_$p202);
    call {:si_unique_call 2509} {:cexpr "__cil_tmp117"} boogie_si_record_i16(out_$i203);
    goto corral_source_split_5955;

  corral_source_split_5953:
    assume {:verifier.code 0} true;
    out_$p202 := $i2p.i64.ref(out_$i201);
    goto corral_source_split_5954;

  corral_source_split_5952:
    assume {:verifier.code 0} true;
    out_$i201 := $add.i64(out_$i200, out_$i198);
    call {:si_unique_call 2508} {:cexpr "__cil_tmp116"} boogie_si_record_i64(out_$i201);
    goto corral_source_split_5953;

  corral_source_split_5951:
    assume {:verifier.code 0} true;
    out_$i200 := $p2i.ref.i64(out_$p199);
    goto corral_source_split_5952;

  corral_source_split_5950:
    assume {:verifier.code 0} true;
    out_$p199 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5951;

  corral_source_split_5949:
    assume {:verifier.code 0} true;
    out_$i198 := $mul.i64(out_$i197, 2);
    call {:si_unique_call 2507} {:cexpr "__cil_tmp115"} boogie_si_record_i64(out_$i198);
    goto corral_source_split_5950;

  $bb74:
    assume {:verifier.code 0} true;
    out_$i197 := $sext.i32.i64(out_$i178);
    goto corral_source_split_5949;

  $bb73:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb72:
    assume !(out_$i196 == 1);
    assume {:verifier.code 0} true;
    goto $bb73;

  corral_source_split_6069:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2564} out_vslice_dummy_var_131 := inftl_write(out_$p286, out_$i294, 512, in_$p6, out_$p295, out_$p296);
    goto corral_source_split_6070;

  corral_source_split_6068:
    assume {:verifier.code 0} true;
    out_$p296 := $bitcast.ref.ref(in_$p5);
    goto corral_source_split_6069;

  corral_source_split_6067:
    assume {:verifier.code 0} true;
    out_$p295 := $bitcast.ref.ref(in_$p9);
    goto corral_source_split_6068;

  corral_source_split_6066:
    assume {:verifier.code 0} true;
    out_$i294 := $zext.i32.i64(out_$i293);
    call {:si_unique_call 2563} {:cexpr "__cil_tmp173"} boogie_si_record_i64(out_$i294);
    goto corral_source_split_6067;

  corral_source_split_6065:
    assume {:verifier.code 0} true;
    out_$i293 := $add.i32(out_$i292, out_$i287);
    call {:si_unique_call 2562} {:cexpr "__cil_tmp172"} boogie_si_record_i32(out_$i293);
    goto corral_source_split_6066;

  corral_source_split_6064:
    assume {:verifier.code 0} true;
    out_$i292 := $mul.i32(out_$i291, in_$i51);
    call {:si_unique_call 2561} {:cexpr "__cil_tmp171"} boogie_si_record_i32(out_$i292);
    goto corral_source_split_6065;

  corral_source_split_6063:
    assume {:verifier.code 0} true;
    out_$i291 := $load.i32($M.1, out_$p290);
    call {:si_unique_call 2560} {:cexpr "__cil_tmp170"} boogie_si_record_i32(out_$i291);
    goto corral_source_split_6064;

  corral_source_split_6062:
    assume {:verifier.code 0} true;
    out_$p290 := $i2p.i64.ref(out_$i289);
    goto corral_source_split_6063;

  corral_source_split_6061:
    assume {:verifier.code 0} true;
    out_$i289 := $add.i64(out_$i288, 356);
    call {:si_unique_call 2559} {:cexpr "__cil_tmp169"} boogie_si_record_i64(out_$i289);
    goto corral_source_split_6062;

  corral_source_split_6060:
    assume {:verifier.code 0} true;
    out_$i288 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2558} {:cexpr "__cil_tmp168"} boogie_si_record_i64(out_$i288);
    goto corral_source_split_6061;

  corral_source_split_6059:
    assume {:verifier.code 0} true;
    out_$i287 := $mul.i32(out_$i178, 512);
    call {:si_unique_call 2557} {:cexpr "__cil_tmp166"} boogie_si_record_i32(out_$i287);
    goto corral_source_split_6060;

  corral_source_split_6058:
    assume {:verifier.code 0} true;
    out_$p286 := $load.ref($M.1, out_$p285);
    goto corral_source_split_6059;

  corral_source_split_6057:
    assume {:verifier.code 0} true;
    out_$p285 := $i2p.i64.ref(out_$i284);
    goto corral_source_split_6058;

  corral_source_split_6056:
    assume {:verifier.code 0} true;
    out_$i284 := $add.i64(out_$i283, 24);
    call {:si_unique_call 2556} {:cexpr "__cil_tmp164"} boogie_si_record_i64(out_$i284);
    goto corral_source_split_6057;

  corral_source_split_6055:
    assume {:verifier.code 0} true;
    out_$i283 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2555} {:cexpr "__cil_tmp163"} boogie_si_record_i64(out_$i283);
    goto corral_source_split_6056;

  corral_source_split_6054:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p282, out_$i281);
    goto corral_source_split_6055;

  corral_source_split_6053:
    assume {:verifier.code 0} true;
    out_$p282 := $i2p.i64.ref(out_$i277);
    goto corral_source_split_6054;

  corral_source_split_6052:
    assume {:verifier.code 0} true;
    out_$i281 := $load.i8($M.1, out_$p280);
    goto corral_source_split_6053;

  corral_source_split_6051:
    assume {:verifier.code 0} true;
    out_$p280 := $i2p.i64.ref(out_$i279);
    goto corral_source_split_6052;

  corral_source_split_6050:
    assume {:verifier.code 0} true;
    out_$i279 := $add.i64(out_$i278, 7);
    call {:si_unique_call 2554} {:cexpr "__cil_tmp161"} boogie_si_record_i64(out_$i279);
    goto corral_source_split_6051;

  corral_source_split_6049:
    assume {:verifier.code 0} true;
    out_$i278 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_6050;

  corral_source_split_6048:
    assume {:verifier.code 0} true;
    out_$i277 := $add.i64(out_$i276, 6);
    call {:si_unique_call 2553} {:cexpr "__cil_tmp159"} boogie_si_record_i64(out_$i277);
    goto corral_source_split_6049;

  corral_source_split_6047:
    assume {:verifier.code 0} true;
    out_$i276 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_6048;

  corral_source_split_6046:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p275, 85);
    goto corral_source_split_6047;

  corral_source_split_6045:
    assume {:verifier.code 0} true;
    out_$p275 := $i2p.i64.ref(out_$i274);
    goto corral_source_split_6046;

  corral_source_split_6044:
    assume {:verifier.code 0} true;
    out_$i274 := $add.i64(out_$i273, 7);
    call {:si_unique_call 2552} {:cexpr "__cil_tmp157"} boogie_si_record_i64(out_$i274);
    goto corral_source_split_6045;

  corral_source_split_6043:
    assume {:verifier.code 0} true;
    out_$i273 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_6044;

  corral_source_split_6042:
    assume {:verifier.code 0} true;
    out_cmdloc_dummy_var_20 := $M.1;
    call {:si_unique_call 2551} out_cmdloc_dummy_var_21 := $memset.i8(out_cmdloc_dummy_var_20, out_$p272, $sub.i8(0, 1), 16, $zext.i32.i64(1), 0 == 1);
    $M.1 := out_cmdloc_dummy_var_21;
    goto corral_source_split_6043;

  $bb89:
    assume {:verifier.code 0} true;
    out_$p272 := $bitcast.ref.ref(in_$p5);
    goto corral_source_split_6042;

  $bb79:
    assume !(out_$i224 == 1);
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb88:
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb81:
    assume !(out_$i226 == 1);
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb83:
    assume !(out_$i245 == 1);
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb85:
    assume !(out_$i270 == 1);
    assume {:verifier.code 0} true;
    goto $bb86;

  corral_source_split_6040:
    assume {:verifier.code 0} true;
    goto $bb86;

  corral_source_split_6039:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2550} out_vslice_dummy_var_130 := __dynamic_pr_debug.ref.ref(in_$p10, .str.58);
    goto corral_source_split_6040;

  $bb84:
    assume out_$i270 == 1;
    goto corral_source_split_6039;

  corral_source_split_6037:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb84, $bb85;

  corral_source_split_6036:
    assume {:verifier.code 0} true;
    out_$i270 := $ne.i64(out_$i269, 0);
    goto corral_source_split_6037;

  corral_source_split_6035:
    assume {:verifier.code 0} true;
    out_$i269 := $sext.i32.i64(out_$i268);
    call {:si_unique_call 2549} {:cexpr "tmp___3"} boogie_si_record_i64(out_$i269);
    goto corral_source_split_6036;

  corral_source_split_6034:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2548} out_$i268 := __builtinx_expect.i64.i64(out_$i267, 0);
    goto corral_source_split_6035;

  corral_source_split_6033:
    assume {:verifier.code 0} true;
    out_$i267 := $and.i64(out_$i266, 1);
    call {:si_unique_call 2547} {:cexpr "__cil_tmp154"} boogie_si_record_i64(out_$i267);
    goto corral_source_split_6034;

  corral_source_split_6032:
    assume {:verifier.code 0} true;
    out_$i266 := $zext.i8.i64(out_$i265);
    call {:si_unique_call 2546} {:cexpr "__cil_tmp153"} boogie_si_record_i64(out_$i266);
    goto corral_source_split_6033;

  corral_source_split_6031:
    assume {:verifier.code 0} true;
    out_$i265 := $load.i8($M.1, out_$p264);
    call {:si_unique_call 2545} {:cexpr "__cil_tmp152"} boogie_si_record_i8(out_$i265);
    goto corral_source_split_6032;

  corral_source_split_6030:
    assume {:verifier.code 0} true;
    out_$p264 := $i2p.i64.ref(out_$i263);
    goto corral_source_split_6031;

  corral_source_split_6029:
    assume {:verifier.code 0} true;
    out_$i263 := $add.i64(out_$i262, 35);
    call {:si_unique_call 2544} {:cexpr "__cil_tmp151"} boogie_si_record_i64(out_$i263);
    goto corral_source_split_6030;

  corral_source_split_6028:
    assume {:verifier.code 0} true;
    out_$i262 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6029;

  corral_source_split_6027:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p261, 0);
    goto corral_source_split_6028;

  corral_source_split_6026:
    assume {:verifier.code 0} true;
    out_$p261 := $i2p.i64.ref(out_$i260);
    goto corral_source_split_6027;

  corral_source_split_6025:
    assume {:verifier.code 0} true;
    out_$i260 := $add.i64(out_$i259, 35);
    call {:si_unique_call 2543} {:cexpr "__cil_tmp150"} boogie_si_record_i64(out_$i260);
    goto corral_source_split_6026;

  corral_source_split_6024:
    assume {:verifier.code 0} true;
    out_$i259 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6025;

  corral_source_split_6023:
    assume {:verifier.code 0} true;
    $M.1 := $store.i32($M.1, out_$p258, 373);
    goto corral_source_split_6024;

  corral_source_split_6022:
    assume {:verifier.code 0} true;
    out_$p258 := $i2p.i64.ref(out_$i257);
    goto corral_source_split_6023;

  corral_source_split_6021:
    assume {:verifier.code 0} true;
    out_$i257 := $add.i64(out_$i256, 32);
    call {:si_unique_call 2542} {:cexpr "__cil_tmp149"} boogie_si_record_i64(out_$i257);
    goto corral_source_split_6022;

  corral_source_split_6020:
    assume {:verifier.code 0} true;
    out_$i256 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6021;

  corral_source_split_6019:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p255, .str.58);
    goto corral_source_split_6020;

  corral_source_split_6018:
    assume {:verifier.code 0} true;
    out_$p255 := $i2p.i64.ref(out_$i254);
    goto corral_source_split_6019;

  corral_source_split_6017:
    assume {:verifier.code 0} true;
    out_$i254 := $add.i64(out_$i253, 24);
    call {:si_unique_call 2541} {:cexpr "__cil_tmp148"} boogie_si_record_i64(out_$i254);
    goto corral_source_split_6018;

  corral_source_split_6016:
    assume {:verifier.code 0} true;
    out_$i253 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6017;

  corral_source_split_6015:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p252, .str.31);
    goto corral_source_split_6016;

  corral_source_split_6014:
    assume {:verifier.code 0} true;
    out_$p252 := $i2p.i64.ref(out_$i251);
    goto corral_source_split_6015;

  corral_source_split_6013:
    assume {:verifier.code 0} true;
    out_$i251 := $add.i64(out_$i250, 16);
    call {:si_unique_call 2540} {:cexpr "__cil_tmp147"} boogie_si_record_i64(out_$i251);
    goto corral_source_split_6014;

  corral_source_split_6012:
    assume {:verifier.code 0} true;
    out_$i250 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6013;

  corral_source_split_6011:
    assume {:verifier.code 0} true;
    $M.1 := $store.ref($M.1, out_$p249, .str.53);
    goto corral_source_split_6012;

  corral_source_split_6010:
    assume {:verifier.code 0} true;
    out_$p249 := $i2p.i64.ref(out_$i248);
    goto corral_source_split_6011;

  corral_source_split_6009:
    assume {:verifier.code 0} true;
    out_$i248 := $add.i64(out_$i247, 8);
    call {:si_unique_call 2539} {:cexpr "__cil_tmp146"} boogie_si_record_i64(out_$i248);
    goto corral_source_split_6010;

  corral_source_split_6008:
    assume {:verifier.code 0} true;
    out_$i247 := $p2i.ref.i64(in_$p10);
    goto corral_source_split_6009;

  corral_source_split_6007:
    assume {:verifier.code 0} true;
    $M.3 := $store.ref($M.3, out_$p246, .str);
    goto corral_source_split_6008;

  corral_source_split_6006:
    assume {:verifier.code 0} true;
    out_$p246 := $bitcast.ref.ref(in_$p10);
    goto corral_source_split_6007;

  $bb82:
    assume out_$i245 == 1;
    goto corral_source_split_6006;

  corral_source_split_6004:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb82, $bb83;

  corral_source_split_6003:
    assume {:verifier.code 0} true;
    out_$i245 := $ne.i32(out_$i244, $sub.i32(0, 5));
    goto corral_source_split_6004;

  corral_source_split_6002:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2537} out_$i244 := mtd_read(in_$p15, out_$i242, 512, in_$p6, out_$p243);
    call {:si_unique_call 2538} {:cexpr "ret"} boogie_si_record_i32(out_$i244);
    goto corral_source_split_6003;

  corral_source_split_6001:
    assume {:verifier.code 0} true;
    out_$p243 := $bitcast.ref.ref(in_$p9);
    goto corral_source_split_6002;

  corral_source_split_6000:
    assume {:verifier.code 0} true;
    out_$i242 := $zext.i32.i64(out_$i241);
    call {:si_unique_call 2536} {:cexpr "__cil_tmp143"} boogie_si_record_i64(out_$i242);
    goto corral_source_split_6001;

  corral_source_split_5999:
    assume {:verifier.code 0} true;
    out_$i241 := $add.i32(out_$i240, out_$i227);
    call {:si_unique_call 2535} {:cexpr "__cil_tmp142"} boogie_si_record_i32(out_$i241);
    goto corral_source_split_6000;

  corral_source_split_5998:
    assume {:verifier.code 0} true;
    out_$i240 := $mul.i32(out_$i239, out_$i235);
    call {:si_unique_call 2534} {:cexpr "__cil_tmp141"} boogie_si_record_i32(out_$i240);
    goto corral_source_split_5999;

  corral_source_split_5997:
    assume {:verifier.code 0} true;
    out_$i239 := $load.i32($M.1, out_$p238);
    call {:si_unique_call 2533} {:cexpr "__cil_tmp140"} boogie_si_record_i32(out_$i239);
    goto corral_source_split_5998;

  corral_source_split_5996:
    assume {:verifier.code 0} true;
    out_$p238 := $i2p.i64.ref(out_$i237);
    goto corral_source_split_5997;

  corral_source_split_5995:
    assume {:verifier.code 0} true;
    out_$i237 := $add.i64(out_$i236, 356);
    call {:si_unique_call 2532} {:cexpr "__cil_tmp139"} boogie_si_record_i64(out_$i237);
    goto corral_source_split_5996;

  corral_source_split_5994:
    assume {:verifier.code 0} true;
    out_$i236 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2531} {:cexpr "__cil_tmp138"} boogie_si_record_i64(out_$i236);
    goto corral_source_split_5995;

  corral_source_split_5993:
    assume {:verifier.code 0} true;
    out_$i235 := $zext.i16.i32(out_$i234);
    call {:si_unique_call 2530} {:cexpr "__cil_tmp137"} boogie_si_record_i32(out_$i235);
    goto corral_source_split_5994;

  corral_source_split_5992:
    assume {:verifier.code 0} true;
    out_$i234 := $load.i16($M.1, out_$p233);
    call {:si_unique_call 2529} {:cexpr "__cil_tmp136"} boogie_si_record_i16(out_$i234);
    goto corral_source_split_5993;

  corral_source_split_5991:
    assume {:verifier.code 0} true;
    out_$p233 := $i2p.i64.ref(out_$i232);
    goto corral_source_split_5992;

  corral_source_split_5990:
    assume {:verifier.code 0} true;
    out_$i232 := $add.i64(out_$i231, out_$i229);
    call {:si_unique_call 2528} {:cexpr "__cil_tmp135"} boogie_si_record_i64(out_$i232);
    goto corral_source_split_5991;

  corral_source_split_5989:
    assume {:verifier.code 0} true;
    out_$i231 := $p2i.ref.i64(out_$p230);
    goto corral_source_split_5990;

  corral_source_split_5988:
    assume {:verifier.code 0} true;
    out_$p230 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5989;

  corral_source_split_5987:
    assume {:verifier.code 0} true;
    out_$i229 := $mul.i64(out_$i228, 2);
    call {:si_unique_call 2527} {:cexpr "__cil_tmp134"} boogie_si_record_i64(out_$i229);
    goto corral_source_split_5988;

  corral_source_split_5986:
    assume {:verifier.code 0} true;
    out_$i228 := $sext.i32.i64(out_$i178);
    goto corral_source_split_5987;

  corral_source_split_5985:
    assume {:verifier.code 0} true;
    out_$i227 := $mul.i32(out_$i178, 512);
    call {:si_unique_call 2526} {:cexpr "__cil_tmp132"} boogie_si_record_i32(out_$i227);
    goto corral_source_split_5986;

  $bb80:
    assume out_$i226 == 1;
    goto corral_source_split_5985;

  corral_source_split_5983:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb80, $bb81;

  corral_source_split_5982:
    assume {:verifier.code 0} true;
    out_$i226 := $eq.i32(out_$i225, 0);
    goto corral_source_split_5983;

  corral_source_split_5981:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2524} out_$i225 := mtd_is_bitflip(out_$i223);
    call {:si_unique_call 2525} {:cexpr "tmp___4"} boogie_si_record_i32(out_$i225);
    goto corral_source_split_5982;

  $bb78:
    assume out_$i224 == 1;
    goto corral_source_split_5981;

  corral_source_split_5979:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb78, $bb79;

  corral_source_split_5978:
    assume {:verifier.code 0} true;
    out_$i224 := $slt.i32(out_$i223, 0);
    goto corral_source_split_5979;

  corral_source_split_5977:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2522} out_$i223 := mtd_read(in_$p15, out_$i221, 512, in_$p6, out_$p222);
    call {:si_unique_call 2523} {:cexpr "ret"} boogie_si_record_i32(out_$i223);
    goto corral_source_split_5978;

  corral_source_split_5976:
    assume {:verifier.code 0} true;
    out_$p222 := $bitcast.ref.ref(in_$p9);
    goto corral_source_split_5977;

  corral_source_split_5975:
    assume {:verifier.code 0} true;
    out_$i221 := $zext.i32.i64(out_$i220);
    call {:si_unique_call 2521} {:cexpr "__cil_tmp130"} boogie_si_record_i64(out_$i221);
    goto corral_source_split_5976;

  corral_source_split_5974:
    assume {:verifier.code 0} true;
    out_$i220 := $add.i32(out_$i219, out_$i206);
    call {:si_unique_call 2520} {:cexpr "__cil_tmp129"} boogie_si_record_i32(out_$i220);
    goto corral_source_split_5975;

  corral_source_split_5973:
    assume {:verifier.code 0} true;
    out_$i219 := $mul.i32(out_$i218, out_$i214);
    call {:si_unique_call 2519} {:cexpr "__cil_tmp128"} boogie_si_record_i32(out_$i219);
    goto corral_source_split_5974;

  corral_source_split_5972:
    assume {:verifier.code 0} true;
    out_$i218 := $load.i32($M.1, out_$p217);
    call {:si_unique_call 2518} {:cexpr "__cil_tmp127"} boogie_si_record_i32(out_$i218);
    goto corral_source_split_5973;

  corral_source_split_5971:
    assume {:verifier.code 0} true;
    out_$p217 := $i2p.i64.ref(out_$i216);
    goto corral_source_split_5972;

  corral_source_split_5970:
    assume {:verifier.code 0} true;
    out_$i216 := $add.i64(out_$i215, 356);
    call {:si_unique_call 2517} {:cexpr "__cil_tmp126"} boogie_si_record_i64(out_$i216);
    goto corral_source_split_5971;

  corral_source_split_5969:
    assume {:verifier.code 0} true;
    out_$i215 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2516} {:cexpr "__cil_tmp125"} boogie_si_record_i64(out_$i215);
    goto corral_source_split_5970;

  corral_source_split_5968:
    assume {:verifier.code 0} true;
    out_$i214 := $zext.i16.i32(out_$i213);
    call {:si_unique_call 2515} {:cexpr "__cil_tmp124"} boogie_si_record_i32(out_$i214);
    goto corral_source_split_5969;

  corral_source_split_5967:
    assume {:verifier.code 0} true;
    out_$i213 := $load.i16($M.1, out_$p212);
    call {:si_unique_call 2514} {:cexpr "__cil_tmp123"} boogie_si_record_i16(out_$i213);
    goto corral_source_split_5968;

  corral_source_split_5966:
    assume {:verifier.code 0} true;
    out_$p212 := $i2p.i64.ref(out_$i211);
    goto corral_source_split_5967;

  corral_source_split_5965:
    assume {:verifier.code 0} true;
    out_$i211 := $add.i64(out_$i210, out_$i208);
    call {:si_unique_call 2513} {:cexpr "__cil_tmp122"} boogie_si_record_i64(out_$i211);
    goto corral_source_split_5966;

  corral_source_split_5964:
    assume {:verifier.code 0} true;
    out_$i210 := $p2i.ref.i64(out_$p209);
    goto corral_source_split_5965;

  corral_source_split_5963:
    assume {:verifier.code 0} true;
    out_$p209 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5964;

  corral_source_split_5962:
    assume {:verifier.code 0} true;
    out_$i208 := $mul.i64(out_$i207, 2);
    call {:si_unique_call 2512} {:cexpr "__cil_tmp121"} boogie_si_record_i64(out_$i208);
    goto corral_source_split_5963;

  corral_source_split_5961:
    assume {:verifier.code 0} true;
    out_$i207 := $sext.i32.i64(out_$i178);
    goto corral_source_split_5962;

  $bb77:
    assume {:verifier.code 0} true;
    out_$i206 := $mul.i32(out_$i178, 512);
    call {:si_unique_call 2511} {:cexpr "__cil_tmp119"} boogie_si_record_i32(out_$i206);
    goto corral_source_split_5961;

  $bb76:
    assume !(out_$i205 == 1);
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb90_dummy:
    call {:si_unique_call 1} out_$i179, out_$i180, out_$p181, out_$i182, out_$i183, out_$p184, out_$i185, out_$i186, out_$i187, out_$i189, out_$i190, out_$p191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$p199, out_$i200, out_$i201, out_$p202, out_$i203, out_$i204, out_$i205, out_$i206, out_$i207, out_$i208, out_$p209, out_$i210, out_$i211, out_$p212, out_$i213, out_$i214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$i220, out_$i221, out_$p222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i229, out_$p230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$p238, out_$i239, out_$i240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$p258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i263, out_$p264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$p272, out_$i273, out_$i274, out_$p275, out_$i276, out_$i277, out_$i278, out_$i279, out_$p280, out_$i281, out_$p282, out_$i283, out_$i284, out_$p285, out_$p286, out_$i287, out_$i288, out_$i289, out_$p290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$p296, out_$i188, out_$i298, out_$i299, out_$i300, out_$i301, out_$i178, out_cmdloc_dummy_var_20, out_cmdloc_dummy_var_21, out_vslice_dummy_var_130, out_vslice_dummy_var_131 := INFTL_foldchain_loop_$bb66(in_$p0, in_$i1, in_$i2, in_$p3, in_$p5, in_$p6, in_$p9, in_$p10, in_$p15, in_$i51, in_$p174, out_$i179, out_$i180, out_$p181, out_$i182, out_$i183, out_$p184, out_$i185, out_$i186, out_$i187, out_$i189, out_$i190, out_$p191, out_$i192, out_$i193, out_$i194, out_$i195, out_$i196, out_$i197, out_$i198, out_$p199, out_$i200, out_$i201, out_$p202, out_$i203, out_$i204, out_$i205, out_$i206, out_$i207, out_$i208, out_$p209, out_$i210, out_$i211, out_$p212, out_$i213, out_$i214, out_$i215, out_$i216, out_$p217, out_$i218, out_$i219, out_$i220, out_$i221, out_$p222, out_$i223, out_$i224, out_$i225, out_$i226, out_$i227, out_$i228, out_$i229, out_$p230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$p238, out_$i239, out_$i240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$p246, out_$i247, out_$i248, out_$p249, out_$i250, out_$i251, out_$p252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i257, out_$p258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i263, out_$p264, out_$i265, out_$i266, out_$i267, out_$i268, out_$i269, out_$i270, out_$p272, out_$i273, out_$i274, out_$p275, out_$i276, out_$i277, out_$i278, out_$i279, out_$p280, out_$i281, out_$p282, out_$i283, out_$i284, out_$p285, out_$p286, out_$i287, out_$i288, out_$i289, out_$p290, out_$i291, out_$i292, out_$i293, out_$i294, out_$p295, out_$p296, out_$i188, out_$i298, out_$i299, out_$i300, out_$i301, out_$i178, out_cmdloc_dummy_var_20, out_cmdloc_dummy_var_21, out_vslice_dummy_var_130, out_vslice_dummy_var_131);
    return;

  exit:
    return;
}



procedure INFTL_foldchain_loop_$bb66(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$p3: ref, in_$p5: ref, in_$p6: ref, in_$p9: ref, in_$p10: ref, in_$p15: ref, in_$i51: i32, in_$p174: ref, in_$i179: i64, in_$i180: i64, in_$p181: ref, in_$i182: i64, in_$i183: i64, in_$p184: ref, in_$i185: i16, in_$i186: i32, in_$i187: i1, in_$i189: i64, in_$i190: i64, in_$p191: ref, in_$i192: i32, in_$i193: i32, in_$i194: i32, in_$i195: i32, in_$i196: i1, in_$i197: i64, in_$i198: i64, in_$p199: ref, in_$i200: i64, in_$i201: i64, in_$p202: ref, in_$i203: i16, in_$i204: i32, in_$i205: i1, in_$i206: i32, in_$i207: i64, in_$i208: i64, in_$p209: ref, in_$i210: i64, in_$i211: i64, in_$p212: ref, in_$i213: i16, in_$i214: i32, in_$i215: i64, in_$i216: i64, in_$p217: ref, in_$i218: i32, in_$i219: i32, in_$i220: i32, in_$i221: i64, in_$p222: ref, in_$i223: i32, in_$i224: i1, in_$i225: i32, in_$i226: i1, in_$i227: i32, in_$i228: i64, in_$i229: i64, in_$p230: ref, in_$i231: i64, in_$i232: i64, in_$p233: ref, in_$i234: i16, in_$i235: i32, in_$i236: i64, in_$i237: i64, in_$p238: ref, in_$i239: i32, in_$i240: i32, in_$i241: i32, in_$i242: i64, in_$p243: ref, in_$i244: i32, in_$i245: i1, in_$p246: ref, in_$i247: i64, in_$i248: i64, in_$p249: ref, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i64, in_$i254: i64, in_$p255: ref, in_$i256: i64, in_$i257: i64, in_$p258: ref, in_$i259: i64, in_$i260: i64, in_$p261: ref, in_$i262: i64, in_$i263: i64, in_$p264: ref, in_$i265: i8, in_$i266: i64, in_$i267: i64, in_$i268: i32, in_$i269: i64, in_$i270: i1, in_$p272: ref, in_$i273: i64, in_$i274: i64, in_$p275: ref, in_$i276: i64, in_$i277: i64, in_$i278: i64, in_$i279: i64, in_$p280: ref, in_$i281: i8, in_$p282: ref, in_$i283: i64, in_$i284: i64, in_$p285: ref, in_$p286: ref, in_$i287: i32, in_$i288: i64, in_$i289: i64, in_$p290: ref, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i64, in_$p295: ref, in_$p296: ref, in_$i188: i32, in_$i298: i32, in_$i299: i32, in_$i300: i32, in_$i301: i1, in_$i178: i32, in_cmdloc_dummy_var_20: [ref]i8, in_cmdloc_dummy_var_21: [ref]i8, in_vslice_dummy_var_130: i32, in_vslice_dummy_var_131: i32) returns (out_$i179: i64, out_$i180: i64, out_$p181: ref, out_$i182: i64, out_$i183: i64, out_$p184: ref, out_$i185: i16, out_$i186: i32, out_$i187: i1, out_$i189: i64, out_$i190: i64, out_$p191: ref, out_$i192: i32, out_$i193: i32, out_$i194: i32, out_$i195: i32, out_$i196: i1, out_$i197: i64, out_$i198: i64, out_$p199: ref, out_$i200: i64, out_$i201: i64, out_$p202: ref, out_$i203: i16, out_$i204: i32, out_$i205: i1, out_$i206: i32, out_$i207: i64, out_$i208: i64, out_$p209: ref, out_$i210: i64, out_$i211: i64, out_$p212: ref, out_$i213: i16, out_$i214: i32, out_$i215: i64, out_$i216: i64, out_$p217: ref, out_$i218: i32, out_$i219: i32, out_$i220: i32, out_$i221: i64, out_$p222: ref, out_$i223: i32, out_$i224: i1, out_$i225: i32, out_$i226: i1, out_$i227: i32, out_$i228: i64, out_$i229: i64, out_$p230: ref, out_$i231: i64, out_$i232: i64, out_$p233: ref, out_$i234: i16, out_$i235: i32, out_$i236: i64, out_$i237: i64, out_$p238: ref, out_$i239: i32, out_$i240: i32, out_$i241: i32, out_$i242: i64, out_$p243: ref, out_$i244: i32, out_$i245: i1, out_$p246: ref, out_$i247: i64, out_$i248: i64, out_$p249: ref, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i64, out_$i254: i64, out_$p255: ref, out_$i256: i64, out_$i257: i64, out_$p258: ref, out_$i259: i64, out_$i260: i64, out_$p261: ref, out_$i262: i64, out_$i263: i64, out_$p264: ref, out_$i265: i8, out_$i266: i64, out_$i267: i64, out_$i268: i32, out_$i269: i64, out_$i270: i1, out_$p272: ref, out_$i273: i64, out_$i274: i64, out_$p275: ref, out_$i276: i64, out_$i277: i64, out_$i278: i64, out_$i279: i64, out_$p280: ref, out_$i281: i8, out_$p282: ref, out_$i283: i64, out_$i284: i64, out_$p285: ref, out_$p286: ref, out_$i287: i32, out_$i288: i64, out_$i289: i64, out_$p290: ref, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i64, out_$p295: ref, out_$p296: ref, out_$i188: i32, out_$i298: i32, out_$i299: i32, out_$i300: i32, out_$i301: i1, out_$i178: i32, out_cmdloc_dummy_var_20: [ref]i8, out_cmdloc_dummy_var_21: [ref]i8, out_vslice_dummy_var_130: i32, out_vslice_dummy_var_131: i32);
  modifies $M.0, $M.1, $M.2, $M.3, $CurrAddr, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_foldchain_loop_$bb16(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p15: ref, in_$p64: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i64, in_$i73: i64, in_$p74: ref, in_$i75: i16, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i8, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i32, in_$i93: i32, in_$i94: i32, in_$i95: i64, in_$p96: ref, in_$i97: i32, in_$i98: i1, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i8, in_$i104: i32, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$i108: i8, in_$i109: i32, in_$i110: i32, in_$i99: i32, in_$i111: i1, in_$i112: i1, in_$i113: i1, in_$i114: i1, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$i120: i16, in_$p121: ref, in_$i122: i64, in_$i123: i64, in_$p124: ref, in_$i125: i64, in_$i126: i64, in_$p127: ref, in_$i78: i32, in_$i129: i32, in_$i130: i32, in_$i131: i32, in_$i132: i1, in_$i68: i32, in_$i61: i32, in_vslice_dummy_var_127: i32) returns (out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i64, out_$i73: i64, out_$p74: ref, out_$i75: i16, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i8, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i32, out_$i93: i32, out_$i94: i32, out_$i95: i64, out_$p96: ref, out_$i97: i32, out_$i98: i1, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i8, out_$i104: i32, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$i108: i8, out_$i109: i32, out_$i110: i32, out_$i99: i32, out_$i111: i1, out_$i112: i1, out_$i113: i1, out_$i114: i1, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$i120: i16, out_$p121: ref, out_$i122: i64, out_$i123: i64, out_$p124: ref, out_$i125: i64, out_$i126: i64, out_$p127: ref, out_$i78: i32, out_$i129: i32, out_$i130: i32, out_$i131: i32, out_$i132: i1, out_$i68: i32, out_vslice_dummy_var_127: i32)
{

  entry:
    out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_vslice_dummy_var_127 := in_$i69, in_$i70, in_$p71, in_$i72, in_$i73, in_$p74, in_$i75, in_$i76, in_$i77, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$p84, in_$i85, in_$i86, in_$i87, in_$i88, in_$i89, in_$i90, in_$p91, in_$i92, in_$i93, in_$i94, in_$i95, in_$p96, in_$i97, in_$i98, in_$i100, in_$i101, in_$p102, in_$i103, in_$i104, in_$i105, in_$i106, in_$p107, in_$i108, in_$i109, in_$i110, in_$i99, in_$i111, in_$i112, in_$i113, in_$i114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$i120, in_$p121, in_$i122, in_$i123, in_$p124, in_$i125, in_$i126, in_$p127, in_$i78, in_$i129, in_$i130, in_$i131, in_$i132, in_$i68, in_vslice_dummy_var_127;
    goto $bb16, exit;

  $bb16:
    assume {:verifier.code 0} true;
    goto corral_source_split_5750;

  $bb51:
    assume out_$i132 == 1;
    assume {:verifier.code 0} true;
    out_$i68 := out_$i129;
    goto $bb51_dummy;

  corral_source_split_5779:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51;

  corral_source_split_5778:
    assume {:verifier.code 0} true;
    out_$i132 := $ult.i32(out_$i129, out_$i131);
    goto corral_source_split_5779;

  corral_source_split_5777:
    assume {:verifier.code 0} true;
    out_$i131 := $udiv.i32(out_$i130, 512);
    call {:si_unique_call 2448} {:cexpr "__cil_tmp83"} boogie_si_record_i32(out_$i131);
    goto corral_source_split_5778;

  corral_source_split_5776:
    assume {:verifier.code 0} true;
    out_$i130 := $load.i32($M.1, in_$p64);
    call {:si_unique_call 2447} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i130);
    goto corral_source_split_5777;

  corral_source_split_5775:
    assume {:verifier.code 0} true;
    out_$i129 := $add.i32(out_$i78, 1);
    call {:si_unique_call 2446} {:cexpr "block"} boogie_si_record_i32(out_$i129);
    goto corral_source_split_5776;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5775;

  $bb44:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5846:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5834:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5781:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5762:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  $bb18:
    assume out_$i77 == 1;
    goto corral_source_split_5762;

  corral_source_split_5760:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_5759:
    assume {:verifier.code 0} true;
    out_$i77 := $ne.i32(out_$i76, 65535);
    goto corral_source_split_5760;

  corral_source_split_5758:
    assume {:verifier.code 0} true;
    out_$i76 := $zext.i16.i32(out_$i75);
    call {:si_unique_call 2441} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i76);
    goto corral_source_split_5759;

  corral_source_split_5757:
    assume {:verifier.code 0} true;
    out_$i75 := $load.i16($M.1, out_$p74);
    call {:si_unique_call 2440} {:cexpr "__cil_tmp52"} boogie_si_record_i16(out_$i75);
    goto corral_source_split_5758;

  corral_source_split_5756:
    assume {:verifier.code 0} true;
    out_$p74 := $i2p.i64.ref(out_$i73);
    goto corral_source_split_5757;

  corral_source_split_5755:
    assume {:verifier.code 0} true;
    out_$i73 := $add.i64(out_$i72, out_$i70);
    call {:si_unique_call 2439} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i73);
    goto corral_source_split_5756;

  corral_source_split_5754:
    assume {:verifier.code 0} true;
    out_$i72 := $p2i.ref.i64(out_$p71);
    goto corral_source_split_5755;

  corral_source_split_5753:
    assume {:verifier.code 0} true;
    out_$p71 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5754;

  corral_source_split_5752:
    assume {:verifier.code 0} true;
    out_$i70 := $mul.i64(out_$i69, 2);
    call {:si_unique_call 2438} {:cexpr "__cil_tmp50"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_5753;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i69 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5752;

  corral_source_split_5750:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb21:
    assume out_$i87 == 1;
    goto corral_source_split_5781;

  corral_source_split_5773:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_5772:
    assume {:verifier.code 0} true;
    out_$i87 := $ne.i32(out_$i86, 0);
    goto corral_source_split_5773;

  corral_source_split_5771:
    assume {:verifier.code 0} true;
    out_$i86 := $zext.i8.i32(out_$i85);
    call {:si_unique_call 2445} {:cexpr "__cil_tmp57"} boogie_si_record_i32(out_$i86);
    goto corral_source_split_5772;

  corral_source_split_5770:
    assume {:verifier.code 0} true;
    out_$i85 := $load.i8($M.1, out_$p84);
    call {:si_unique_call 2444} {:cexpr "__cil_tmp56"} boogie_si_record_i8(out_$i85);
    goto corral_source_split_5771;

  corral_source_split_5769:
    assume {:verifier.code 0} true;
    out_$p84 := $i2p.i64.ref(out_$i83);
    goto corral_source_split_5770;

  corral_source_split_5768:
    assume {:verifier.code 0} true;
    out_$i83 := $add.i64(out_$i82, out_$i80);
    call {:si_unique_call 2443} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i83);
    goto corral_source_split_5769;

  corral_source_split_5767:
    assume {:verifier.code 0} true;
    out_$i82 := $p2i.ref.i64(out_$p81);
    goto corral_source_split_5768;

  corral_source_split_5766:
    assume {:verifier.code 0} true;
    out_$p81 := $add.ref($add.ref(in_$p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5767;

  corral_source_split_5765:
    assume {:verifier.code 0} true;
    out_$i80 := $mul.i64(out_$i79, 1);
    call {:si_unique_call 2442} {:cexpr "__cil_tmp54"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_5766;

  corral_source_split_5764:
    assume {:verifier.code 0} true;
    out_$i79 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5765;

  $bb19:
    assume !(out_$i77 == 1);
    goto corral_source_split_5764;

  corral_source_split_5833:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p121, out_$i120);
    goto corral_source_split_5834;

  corral_source_split_5832:
    assume {:verifier.code 0} true;
    out_$p121 := $i2p.i64.ref(out_$i119);
    goto corral_source_split_5833;

  corral_source_split_5831:
    assume {:verifier.code 0} true;
    out_$i120 := $trunc.i32.i16(in_$i61);
    goto corral_source_split_5832;

  corral_source_split_5830:
    assume {:verifier.code 0} true;
    out_$i119 := $add.i64(out_$i118, out_$i116);
    call {:si_unique_call 2466} {:cexpr "__cil_tmp77"} boogie_si_record_i64(out_$i119);
    goto corral_source_split_5831;

  corral_source_split_5829:
    assume {:verifier.code 0} true;
    out_$i118 := $p2i.ref.i64(out_$p117);
    goto corral_source_split_5830;

  corral_source_split_5828:
    assume {:verifier.code 0} true;
    out_$p117 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5829;

  corral_source_split_5827:
    assume {:verifier.code 0} true;
    out_$i116 := $mul.i64(out_$i115, 2);
    call {:si_unique_call 2465} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_5828;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i115 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5827;

  corral_source_split_5822:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb34:
    assume out_$i113 == 1;
    goto corral_source_split_5822;

  corral_source_split_5820:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_5819:
    assume {:verifier.code 0} true;
    out_$i113 := $eq.i32(out_$i99, 85);
    goto corral_source_split_5820;

  $bb32:
    assume !(out_$i112 == 1);
    goto corral_source_split_5819;

  corral_source_split_5815:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_5814:
    assume {:verifier.code 0} true;
    out_$i112 := $eq.i32(out_$i99, 17);
    goto corral_source_split_5815;

  $bb29:
    assume !(out_$i111 == 1);
    goto corral_source_split_5814;

  corral_source_split_5810:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_5809:
    assume {:verifier.code 0} true;
    out_$i111 := $eq.i32(out_$i99, 255);
    goto corral_source_split_5810;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5809;

  corral_source_split_5807:
    assume {:verifier.code 0} true;
    out_$i110 := $or.i32(out_$i109, out_$i104);
    call {:si_unique_call 2464} {:cexpr "__cil_tmp75"} boogie_si_record_i32(out_$i110);
    assume {:verifier.code 0} true;
    out_$i99 := out_$i110;
    goto $bb27;

  corral_source_split_5795:
    assume {:verifier.code 0} true;
    out_$i99 := 17;
    goto $bb27;

  $bb25:
    assume out_$i98 == 1;
    goto corral_source_split_5795;

  corral_source_split_5793:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  corral_source_split_5792:
    assume {:verifier.code 0} true;
    out_$i98 := $slt.i32(out_$i97, 0);
    goto corral_source_split_5793;

  corral_source_split_5791:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2456} out_$i97 := inftl_read_oob(in_$p15, out_$i95, 16, in_$p6, out_$p96);
    call {:si_unique_call 2457} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i97);
    goto corral_source_split_5792;

  corral_source_split_5790:
    assume {:verifier.code 0} true;
    out_$p96 := $bitcast.ref.ref(in_$p5);
    goto corral_source_split_5791;

  corral_source_split_5789:
    assume {:verifier.code 0} true;
    out_$i95 := $zext.i32.i64(out_$i94);
    call {:si_unique_call 2455} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i95);
    goto corral_source_split_5790;

  corral_source_split_5788:
    assume {:verifier.code 0} true;
    out_$i94 := $add.i32(out_$i93, out_$i88);
    call {:si_unique_call 2454} {:cexpr "__cil_tmp64"} boogie_si_record_i32(out_$i94);
    goto corral_source_split_5789;

  corral_source_split_5787:
    assume {:verifier.code 0} true;
    out_$i93 := $mul.i32(out_$i92, in_$i61);
    call {:si_unique_call 2453} {:cexpr "__cil_tmp63"} boogie_si_record_i32(out_$i93);
    goto corral_source_split_5788;

  corral_source_split_5786:
    assume {:verifier.code 0} true;
    out_$i92 := $load.i32($M.1, out_$p91);
    call {:si_unique_call 2452} {:cexpr "__cil_tmp62"} boogie_si_record_i32(out_$i92);
    goto corral_source_split_5787;

  corral_source_split_5785:
    assume {:verifier.code 0} true;
    out_$p91 := $i2p.i64.ref(out_$i90);
    goto corral_source_split_5786;

  corral_source_split_5784:
    assume {:verifier.code 0} true;
    out_$i90 := $add.i64(out_$i89, 356);
    call {:si_unique_call 2451} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i90);
    goto corral_source_split_5785;

  corral_source_split_5783:
    assume {:verifier.code 0} true;
    out_$i89 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2450} {:cexpr "__cil_tmp60"} boogie_si_record_i64(out_$i89);
    goto corral_source_split_5784;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i88 := $mul.i32(out_$i68, 512);
    call {:si_unique_call 2449} {:cexpr "__cil_tmp58"} boogie_si_record_i32(out_$i88);
    goto corral_source_split_5783;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  corral_source_split_5806:
    assume {:verifier.code 0} true;
    out_$i109 := $zext.i8.i32(out_$i108);
    call {:si_unique_call 2463} {:cexpr "__cil_tmp74"} boogie_si_record_i32(out_$i109);
    goto corral_source_split_5807;

  corral_source_split_5805:
    assume {:verifier.code 0} true;
    out_$i108 := $load.i8($M.1, out_$p107);
    call {:si_unique_call 2462} {:cexpr "__cil_tmp73"} boogie_si_record_i8(out_$i108);
    goto corral_source_split_5806;

  corral_source_split_5804:
    assume {:verifier.code 0} true;
    out_$p107 := $i2p.i64.ref(out_$i106);
    goto corral_source_split_5805;

  corral_source_split_5803:
    assume {:verifier.code 0} true;
    out_$i106 := $add.i64(out_$i105, 6);
    call {:si_unique_call 2461} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i106);
    goto corral_source_split_5804;

  corral_source_split_5802:
    assume {:verifier.code 0} true;
    out_$i105 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_5803;

  corral_source_split_5801:
    assume {:verifier.code 0} true;
    out_$i104 := $zext.i8.i32(out_$i103);
    call {:si_unique_call 2460} {:cexpr "__cil_tmp70"} boogie_si_record_i32(out_$i104);
    goto corral_source_split_5802;

  corral_source_split_5800:
    assume {:verifier.code 0} true;
    out_$i103 := $load.i8($M.1, out_$p102);
    call {:si_unique_call 2459} {:cexpr "__cil_tmp69"} boogie_si_record_i8(out_$i103);
    goto corral_source_split_5801;

  corral_source_split_5799:
    assume {:verifier.code 0} true;
    out_$p102 := $i2p.i64.ref(out_$i101);
    goto corral_source_split_5800;

  corral_source_split_5798:
    assume {:verifier.code 0} true;
    out_$i101 := $add.i64(out_$i100, 7);
    call {:si_unique_call 2458} {:cexpr "__cil_tmp68"} boogie_si_record_i64(out_$i101);
    goto corral_source_split_5799;

  corral_source_split_5797:
    assume {:verifier.code 0} true;
    out_$i100 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_5798;

  $bb26:
    assume !(out_$i98 == 1);
    goto corral_source_split_5797;

  corral_source_split_5845:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p127, 1);
    goto corral_source_split_5846;

  corral_source_split_5844:
    assume {:verifier.code 0} true;
    out_$p127 := $i2p.i64.ref(out_$i126);
    goto corral_source_split_5845;

  corral_source_split_5843:
    assume {:verifier.code 0} true;
    out_$i126 := $add.i64(out_$i125, out_$i123);
    call {:si_unique_call 2468} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i126);
    goto corral_source_split_5844;

  corral_source_split_5842:
    assume {:verifier.code 0} true;
    out_$i125 := $p2i.ref.i64(out_$p124);
    goto corral_source_split_5843;

  corral_source_split_5841:
    assume {:verifier.code 0} true;
    out_$p124 := $add.ref($add.ref(in_$p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5842;

  corral_source_split_5840:
    assume {:verifier.code 0} true;
    out_$i123 := $mul.i64(out_$i122, 1);
    call {:si_unique_call 2467} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i123);
    goto corral_source_split_5841;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i122 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5840;

  corral_source_split_5836:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb37:
    assume out_$i114 == 1;
    goto corral_source_split_5836;

  corral_source_split_5825:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  corral_source_split_5824:
    assume {:verifier.code 0} true;
    out_$i114 := $eq.i32(out_$i99, 0);
    goto corral_source_split_5825;

  $bb35:
    assume !(out_$i113 == 1);
    goto corral_source_split_5824;

  corral_source_split_5848:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  corral_source_split_5817:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  corral_source_split_5812:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i111 == 1;
    goto corral_source_split_5812;

  $bb31:
    assume out_$i112 == 1;
    goto corral_source_split_5817;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2469} out_vslice_dummy_var_127 := printk.ref.i32.i32.i32(.str.56, out_$i68, in_$i61, out_$i99);
    goto corral_source_split_5848;

  corral_source_split_5838:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb38:
    assume !(out_$i114 == 1);
    goto corral_source_split_5838;

  $bb51_dummy:
    call {:si_unique_call 1} out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_vslice_dummy_var_127 := INFTL_foldchain_loop_$bb16(in_$p0, in_$p3, in_$p4, in_$p5, in_$p6, in_$p15, in_$p64, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, in_$i61, out_vslice_dummy_var_127);
    return;

  exit:
    return;
}



procedure INFTL_foldchain_loop_$bb16(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p15: ref, in_$p64: ref, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i64, in_$i73: i64, in_$p74: ref, in_$i75: i16, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i8, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i32, in_$i93: i32, in_$i94: i32, in_$i95: i64, in_$p96: ref, in_$i97: i32, in_$i98: i1, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i8, in_$i104: i32, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$i108: i8, in_$i109: i32, in_$i110: i32, in_$i99: i32, in_$i111: i1, in_$i112: i1, in_$i113: i1, in_$i114: i1, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$i120: i16, in_$p121: ref, in_$i122: i64, in_$i123: i64, in_$p124: ref, in_$i125: i64, in_$i126: i64, in_$p127: ref, in_$i78: i32, in_$i129: i32, in_$i130: i32, in_$i131: i32, in_$i132: i1, in_$i68: i32, in_$i61: i32, in_vslice_dummy_var_127: i32) returns (out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i64, out_$i73: i64, out_$p74: ref, out_$i75: i16, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i8, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i32, out_$i93: i32, out_$i94: i32, out_$i95: i64, out_$p96: ref, out_$i97: i32, out_$i98: i1, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i8, out_$i104: i32, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$i108: i8, out_$i109: i32, out_$i110: i32, out_$i99: i32, out_$i111: i1, out_$i112: i1, out_$i113: i1, out_$i114: i1, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$i120: i16, out_$p121: ref, out_$i122: i64, out_$i123: i64, out_$p124: ref, out_$i125: i64, out_$i126: i64, out_$p127: ref, out_$i78: i32, out_$i129: i32, out_$i130: i32, out_$i131: i32, out_$i132: i1, out_$i68: i32, out_vslice_dummy_var_127: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation INFTL_foldchain_loop_$bb11(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p15: ref, in_$p57: ref, in_$i62: i64, in_$i63: i64, in_$p64: ref, in_$i65: i32, in_$i66: i32, in_$i67: i1, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i64, in_$i73: i64, in_$p74: ref, in_$i75: i16, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i8, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i32, in_$i93: i32, in_$i94: i32, in_$i95: i64, in_$p96: ref, in_$i97: i32, in_$i98: i1, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i8, in_$i104: i32, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$i108: i8, in_$i109: i32, in_$i110: i32, in_$i99: i32, in_$i111: i1, in_$i112: i1, in_$i113: i1, in_$i114: i1, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$i120: i16, in_$p121: ref, in_$i122: i64, in_$i123: i64, in_$p124: ref, in_$i125: i64, in_$i126: i64, in_$p127: ref, in_$i78: i32, in_$i129: i32, in_$i130: i32, in_$i131: i32, in_$i132: i1, in_$i68: i32, in_$i133: i32, in_$i134: i1, in_$i136: i64, in_$i137: i64, in_$i138: i64, in_$p139: ref, in_$p140: ref, in_$p141: ref, in_$i142: i16, in_$i143: i32, in_$i144: i32, in_$i145: i1, in_$i60: i32, in_$i61: i32, in_vslice_dummy_var_127: i32) returns (out_$i62: i64, out_$i63: i64, out_$p64: ref, out_$i65: i32, out_$i66: i32, out_$i67: i1, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i64, out_$i73: i64, out_$p74: ref, out_$i75: i16, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i8, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i32, out_$i93: i32, out_$i94: i32, out_$i95: i64, out_$p96: ref, out_$i97: i32, out_$i98: i1, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i8, out_$i104: i32, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$i108: i8, out_$i109: i32, out_$i110: i32, out_$i99: i32, out_$i111: i1, out_$i112: i1, out_$i113: i1, out_$i114: i1, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$i120: i16, out_$p121: ref, out_$i122: i64, out_$i123: i64, out_$p124: ref, out_$i125: i64, out_$i126: i64, out_$p127: ref, out_$i78: i32, out_$i129: i32, out_$i130: i32, out_$i131: i32, out_$i132: i1, out_$i68: i32, out_$i133: i32, out_$i134: i1, out_$i136: i64, out_$i137: i64, out_$i138: i64, out_$p139: ref, out_$p140: ref, out_$p141: ref, out_$i142: i16, out_$i143: i32, out_$i144: i32, out_$i145: i1, out_$i60: i32, out_$i61: i32, out_vslice_dummy_var_127: i32)
{

  entry:
    out_$i62, out_$i63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$p139, out_$p140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i60, out_$i61, out_vslice_dummy_var_127 := in_$i62, in_$i63, in_$p64, in_$i65, in_$i66, in_$i67, in_$i69, in_$i70, in_$p71, in_$i72, in_$i73, in_$p74, in_$i75, in_$i76, in_$i77, in_$i79, in_$i80, in_$p81, in_$i82, in_$i83, in_$p84, in_$i85, in_$i86, in_$i87, in_$i88, in_$i89, in_$i90, in_$p91, in_$i92, in_$i93, in_$i94, in_$i95, in_$p96, in_$i97, in_$i98, in_$i100, in_$i101, in_$p102, in_$i103, in_$i104, in_$i105, in_$i106, in_$p107, in_$i108, in_$i109, in_$i110, in_$i99, in_$i111, in_$i112, in_$i113, in_$i114, in_$i115, in_$i116, in_$p117, in_$i118, in_$i119, in_$i120, in_$p121, in_$i122, in_$i123, in_$p124, in_$i125, in_$i126, in_$p127, in_$i78, in_$i129, in_$i130, in_$i131, in_$i132, in_$i68, in_$i133, in_$i134, in_$i136, in_$i137, in_$i138, in_$p139, in_$p140, in_$p141, in_$i142, in_$i143, in_$i144, in_$i145, in_$i60, in_$i61, in_vslice_dummy_var_127;
    goto $bb11, exit;

  $bb11:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_5739;

  $bb57:
    assume out_$i145 == 1;
    assume {:verifier.code 0} true;
    out_$i60, out_$i61 := out_$i133, out_$i143;
    goto $bb57_dummy;

  corral_source_split_5869:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb57;

  corral_source_split_5868:
    assume {:verifier.code 0} true;
    out_$i145 := $ugt.i32(out_$i144, out_$i143);
    goto corral_source_split_5869;

  corral_source_split_5867:
    assume {:verifier.code 0} true;
    out_$i144 := $load.i32($M.1, in_$p57);
    call {:si_unique_call 2477} {:cexpr "__cil_tmp93"} boogie_si_record_i32(out_$i144);
    goto corral_source_split_5868;

  corral_source_split_5866:
    assume {:verifier.code 0} true;
    out_$i143 := $zext.i16.i32(out_$i142);
    call {:si_unique_call 2476} {:cexpr "thisEUN"} boogie_si_record_i32(out_$i143);
    goto corral_source_split_5867;

  corral_source_split_5865:
    assume {:verifier.code 0} true;
    out_$i142 := $load.i16($M.1, out_$p141);
    call {:si_unique_call 2475} {:cexpr "__cil_tmp90"} boogie_si_record_i16(out_$i142);
    goto corral_source_split_5866;

  corral_source_split_5864:
    assume {:verifier.code 0} true;
    out_$p141 := $add.ref(out_$p140, $mul.ref(out_$i136, 2));
    goto corral_source_split_5865;

  corral_source_split_5863:
    assume {:verifier.code 0} true;
    out_$p140 := $load.ref($M.1, out_$p139);
    goto corral_source_split_5864;

  corral_source_split_5862:
    assume {:verifier.code 0} true;
    out_$p139 := $i2p.i64.ref(out_$i138);
    goto corral_source_split_5863;

  corral_source_split_5861:
    assume {:verifier.code 0} true;
    out_$i138 := $add.i64(out_$i137, 544);
    call {:si_unique_call 2474} {:cexpr "__cil_tmp87"} boogie_si_record_i64(out_$i138);
    goto corral_source_split_5862;

  corral_source_split_5860:
    assume {:verifier.code 0} true;
    out_$i137 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2473} {:cexpr "__cil_tmp86"} boogie_si_record_i64(out_$i137);
    goto corral_source_split_5861;

  $bb56:
    assume {:verifier.code 0} true;
    out_$i136 := $zext.i32.i64(out_$i61);
    call {:si_unique_call 2472} {:cexpr "__cil_tmp85"} boogie_si_record_i64(out_$i136);
    goto corral_source_split_5860;

  $bb55:
    assume !(out_$i134 == 1);
    assume {:verifier.code 0} true;
    goto $bb56;

  corral_source_split_5855:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb55;

  corral_source_split_5854:
    assume {:verifier.code 0} true;
    out_$i134 := $eq.i32(out_$i60, 0);
    goto corral_source_split_5855;

  $bb53:
    assume {:verifier.code 0} true;
    out_$i133 := $sub.i32(out_$i60, 1);
    call {:si_unique_call 2470} {:cexpr "silly"} boogie_si_record_i32(out_$i133);
    goto corral_source_split_5854;

  $bb15:
    assume {:verifier.code 0} true;
    goto $bb53;

  $bb14:
    assume {:verifier.code 0} true;
    assume !(out_$i67 == 1);
    goto $bb15;

  corral_source_split_5852:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb52:
    assume !(out_$i132 == 1);
    goto corral_source_split_5852;

  corral_source_split_5779:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb51, $bb52;

  corral_source_split_5778:
    assume {:verifier.code 0} true;
    out_$i132 := $ult.i32(out_$i129, out_$i131);
    goto corral_source_split_5779;

  corral_source_split_5777:
    assume {:verifier.code 0} true;
    out_$i131 := $udiv.i32(out_$i130, 512);
    call {:si_unique_call 2448} {:cexpr "__cil_tmp83"} boogie_si_record_i32(out_$i131);
    goto corral_source_split_5778;

  corral_source_split_5776:
    assume {:verifier.code 0} true;
    out_$i130 := $load.i32($M.1, out_$p64);
    call {:si_unique_call 2447} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i130);
    goto corral_source_split_5777;

  corral_source_split_5775:
    assume {:verifier.code 0} true;
    out_$i129 := $add.i32(out_$i78, 1);
    call {:si_unique_call 2446} {:cexpr "block"} boogie_si_record_i32(out_$i129);
    goto corral_source_split_5776;

  $bb20:
    assume {:verifier.code 0} true;
    goto corral_source_split_5775;

  $bb44:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5846:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5834:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5781:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  corral_source_split_5762:
    assume {:verifier.code 0} true;
    out_$i78 := out_$i68;
    goto $bb20;

  $bb18:
    assume out_$i77 == 1;
    goto corral_source_split_5762;

  corral_source_split_5760:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  corral_source_split_5759:
    assume {:verifier.code 0} true;
    out_$i77 := $ne.i32(out_$i76, 65535);
    goto corral_source_split_5760;

  corral_source_split_5758:
    assume {:verifier.code 0} true;
    out_$i76 := $zext.i16.i32(out_$i75);
    call {:si_unique_call 2441} {:cexpr "__cil_tmp53"} boogie_si_record_i32(out_$i76);
    goto corral_source_split_5759;

  corral_source_split_5757:
    assume {:verifier.code 0} true;
    out_$i75 := $load.i16($M.1, out_$p74);
    call {:si_unique_call 2440} {:cexpr "__cil_tmp52"} boogie_si_record_i16(out_$i75);
    goto corral_source_split_5758;

  corral_source_split_5756:
    assume {:verifier.code 0} true;
    out_$p74 := $i2p.i64.ref(out_$i73);
    goto corral_source_split_5757;

  corral_source_split_5755:
    assume {:verifier.code 0} true;
    out_$i73 := $add.i64(out_$i72, out_$i70);
    call {:si_unique_call 2439} {:cexpr "__cil_tmp51"} boogie_si_record_i64(out_$i73);
    goto corral_source_split_5756;

  corral_source_split_5754:
    assume {:verifier.code 0} true;
    out_$i72 := $p2i.ref.i64(out_$p71);
    goto corral_source_split_5755;

  corral_source_split_5753:
    assume {:verifier.code 0} true;
    out_$p71 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5754;

  corral_source_split_5752:
    assume {:verifier.code 0} true;
    out_$i70 := $mul.i64(out_$i69, 2);
    call {:si_unique_call 2438} {:cexpr "__cil_tmp50"} boogie_si_record_i64(out_$i70);
    goto corral_source_split_5753;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i69 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5752;

  corral_source_split_5750:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb16:
    call out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_vslice_dummy_var_127 := INFTL_foldchain_loop_$bb16(in_$p0, in_$p3, in_$p4, in_$p5, in_$p6, in_$p15, out_$p64, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_$i61, out_vslice_dummy_var_127);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_5750;

  corral_source_split_5748:
    assume {:verifier.code 0} true;
    out_$i68 := 0;
    goto $bb16;

  $bb51:
    assume out_$i132 == 1;
    assume {:verifier.code 0} true;
    out_$i68 := out_$i129;
    assume false;
    return;

  $bb13:
    assume out_$i67 == 1;
    goto corral_source_split_5748;

  corral_source_split_5746:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  corral_source_split_5745:
    assume {:verifier.code 0} true;
    out_$i67 := $ult.i32(0, out_$i66);
    goto corral_source_split_5746;

  corral_source_split_5744:
    assume {:verifier.code 0} true;
    out_$i66 := $udiv.i32(out_$i65, 512);
    call {:si_unique_call 2437} {:cexpr "__cil_tmp83"} boogie_si_record_i32(out_$i66);
    goto corral_source_split_5745;

  corral_source_split_5743:
    assume {:verifier.code 0} true;
    out_$i65 := $load.i32($M.1, out_$p64);
    call {:si_unique_call 2436} {:cexpr "__cil_tmp82"} boogie_si_record_i32(out_$i65);
    goto corral_source_split_5744;

  corral_source_split_5742:
    assume {:verifier.code 0} true;
    out_$p64 := $i2p.i64.ref(out_$i63);
    goto corral_source_split_5743;

  corral_source_split_5741:
    assume {:verifier.code 0} true;
    out_$i63 := $add.i64(out_$i62, 356);
    call {:si_unique_call 2435} {:cexpr "__cil_tmp81"} boogie_si_record_i64(out_$i63);
    goto corral_source_split_5742;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i62 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2434} {:cexpr "__cil_tmp80"} boogie_si_record_i64(out_$i62);
    goto corral_source_split_5741;

  corral_source_split_5739:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb21:
    assume out_$i87 == 1;
    goto corral_source_split_5781;

  corral_source_split_5773:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21, $bb22;

  corral_source_split_5772:
    assume {:verifier.code 0} true;
    out_$i87 := $ne.i32(out_$i86, 0);
    goto corral_source_split_5773;

  corral_source_split_5771:
    assume {:verifier.code 0} true;
    out_$i86 := $zext.i8.i32(out_$i85);
    call {:si_unique_call 2445} {:cexpr "__cil_tmp57"} boogie_si_record_i32(out_$i86);
    goto corral_source_split_5772;

  corral_source_split_5770:
    assume {:verifier.code 0} true;
    out_$i85 := $load.i8($M.1, out_$p84);
    call {:si_unique_call 2444} {:cexpr "__cil_tmp56"} boogie_si_record_i8(out_$i85);
    goto corral_source_split_5771;

  corral_source_split_5769:
    assume {:verifier.code 0} true;
    out_$p84 := $i2p.i64.ref(out_$i83);
    goto corral_source_split_5770;

  corral_source_split_5768:
    assume {:verifier.code 0} true;
    out_$i83 := $add.i64(out_$i82, out_$i80);
    call {:si_unique_call 2443} {:cexpr "__cil_tmp55"} boogie_si_record_i64(out_$i83);
    goto corral_source_split_5769;

  corral_source_split_5767:
    assume {:verifier.code 0} true;
    out_$i82 := $p2i.ref.i64(out_$p81);
    goto corral_source_split_5768;

  corral_source_split_5766:
    assume {:verifier.code 0} true;
    out_$p81 := $add.ref($add.ref(in_$p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5767;

  corral_source_split_5765:
    assume {:verifier.code 0} true;
    out_$i80 := $mul.i64(out_$i79, 1);
    call {:si_unique_call 2442} {:cexpr "__cil_tmp54"} boogie_si_record_i64(out_$i80);
    goto corral_source_split_5766;

  corral_source_split_5764:
    assume {:verifier.code 0} true;
    out_$i79 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5765;

  $bb19:
    assume !(out_$i77 == 1);
    goto corral_source_split_5764;

  corral_source_split_5833:
    assume {:verifier.code 0} true;
    $M.1 := $store.i16($M.1, out_$p121, out_$i120);
    goto corral_source_split_5834;

  corral_source_split_5832:
    assume {:verifier.code 0} true;
    out_$p121 := $i2p.i64.ref(out_$i119);
    goto corral_source_split_5833;

  corral_source_split_5831:
    assume {:verifier.code 0} true;
    out_$i120 := $trunc.i32.i16(out_$i61);
    goto corral_source_split_5832;

  corral_source_split_5830:
    assume {:verifier.code 0} true;
    out_$i119 := $add.i64(out_$i118, out_$i116);
    call {:si_unique_call 2466} {:cexpr "__cil_tmp77"} boogie_si_record_i64(out_$i119);
    goto corral_source_split_5831;

  corral_source_split_5829:
    assume {:verifier.code 0} true;
    out_$i118 := $p2i.ref.i64(out_$p117);
    goto corral_source_split_5830;

  corral_source_split_5828:
    assume {:verifier.code 0} true;
    out_$p117 := $add.ref($add.ref(in_$p3, $mul.ref(0, 128)), $mul.ref(0, 2));
    goto corral_source_split_5829;

  corral_source_split_5827:
    assume {:verifier.code 0} true;
    out_$i116 := $mul.i64(out_$i115, 2);
    call {:si_unique_call 2465} {:cexpr "__cil_tmp76"} boogie_si_record_i64(out_$i116);
    goto corral_source_split_5828;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i115 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5827;

  corral_source_split_5822:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb34:
    assume out_$i113 == 1;
    goto corral_source_split_5822;

  corral_source_split_5820:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb34, $bb35;

  corral_source_split_5819:
    assume {:verifier.code 0} true;
    out_$i113 := $eq.i32(out_$i99, 85);
    goto corral_source_split_5820;

  $bb32:
    assume !(out_$i112 == 1);
    goto corral_source_split_5819;

  corral_source_split_5815:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  corral_source_split_5814:
    assume {:verifier.code 0} true;
    out_$i112 := $eq.i32(out_$i99, 17);
    goto corral_source_split_5815;

  $bb29:
    assume !(out_$i111 == 1);
    goto corral_source_split_5814;

  corral_source_split_5810:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  corral_source_split_5809:
    assume {:verifier.code 0} true;
    out_$i111 := $eq.i32(out_$i99, 255);
    goto corral_source_split_5810;

  $bb27:
    assume {:verifier.code 0} true;
    goto corral_source_split_5809;

  corral_source_split_5807:
    assume {:verifier.code 0} true;
    out_$i110 := $or.i32(out_$i109, out_$i104);
    call {:si_unique_call 2464} {:cexpr "__cil_tmp75"} boogie_si_record_i32(out_$i110);
    assume {:verifier.code 0} true;
    out_$i99 := out_$i110;
    goto $bb27;

  corral_source_split_5795:
    assume {:verifier.code 0} true;
    out_$i99 := 17;
    goto $bb27;

  $bb25:
    assume out_$i98 == 1;
    goto corral_source_split_5795;

  corral_source_split_5793:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb25, $bb26;

  corral_source_split_5792:
    assume {:verifier.code 0} true;
    out_$i98 := $slt.i32(out_$i97, 0);
    goto corral_source_split_5793;

  corral_source_split_5791:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2456} out_$i97 := inftl_read_oob(in_$p15, out_$i95, 16, in_$p6, out_$p96);
    call {:si_unique_call 2457} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i97);
    goto corral_source_split_5792;

  corral_source_split_5790:
    assume {:verifier.code 0} true;
    out_$p96 := $bitcast.ref.ref(in_$p5);
    goto corral_source_split_5791;

  corral_source_split_5789:
    assume {:verifier.code 0} true;
    out_$i95 := $zext.i32.i64(out_$i94);
    call {:si_unique_call 2455} {:cexpr "__cil_tmp65"} boogie_si_record_i64(out_$i95);
    goto corral_source_split_5790;

  corral_source_split_5788:
    assume {:verifier.code 0} true;
    out_$i94 := $add.i32(out_$i93, out_$i88);
    call {:si_unique_call 2454} {:cexpr "__cil_tmp64"} boogie_si_record_i32(out_$i94);
    goto corral_source_split_5789;

  corral_source_split_5787:
    assume {:verifier.code 0} true;
    out_$i93 := $mul.i32(out_$i92, out_$i61);
    call {:si_unique_call 2453} {:cexpr "__cil_tmp63"} boogie_si_record_i32(out_$i93);
    goto corral_source_split_5788;

  corral_source_split_5786:
    assume {:verifier.code 0} true;
    out_$i92 := $load.i32($M.1, out_$p91);
    call {:si_unique_call 2452} {:cexpr "__cil_tmp62"} boogie_si_record_i32(out_$i92);
    goto corral_source_split_5787;

  corral_source_split_5785:
    assume {:verifier.code 0} true;
    out_$p91 := $i2p.i64.ref(out_$i90);
    goto corral_source_split_5786;

  corral_source_split_5784:
    assume {:verifier.code 0} true;
    out_$i90 := $add.i64(out_$i89, 356);
    call {:si_unique_call 2451} {:cexpr "__cil_tmp61"} boogie_si_record_i64(out_$i90);
    goto corral_source_split_5785;

  corral_source_split_5783:
    assume {:verifier.code 0} true;
    out_$i89 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 2450} {:cexpr "__cil_tmp60"} boogie_si_record_i64(out_$i89);
    goto corral_source_split_5784;

  $bb24:
    assume {:verifier.code 0} true;
    out_$i88 := $mul.i32(out_$i68, 512);
    call {:si_unique_call 2449} {:cexpr "__cil_tmp58"} boogie_si_record_i32(out_$i88);
    goto corral_source_split_5783;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume !(out_$i87 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  corral_source_split_5806:
    assume {:verifier.code 0} true;
    out_$i109 := $zext.i8.i32(out_$i108);
    call {:si_unique_call 2463} {:cexpr "__cil_tmp74"} boogie_si_record_i32(out_$i109);
    goto corral_source_split_5807;

  corral_source_split_5805:
    assume {:verifier.code 0} true;
    out_$i108 := $load.i8($M.1, out_$p107);
    call {:si_unique_call 2462} {:cexpr "__cil_tmp73"} boogie_si_record_i8(out_$i108);
    goto corral_source_split_5806;

  corral_source_split_5804:
    assume {:verifier.code 0} true;
    out_$p107 := $i2p.i64.ref(out_$i106);
    goto corral_source_split_5805;

  corral_source_split_5803:
    assume {:verifier.code 0} true;
    out_$i106 := $add.i64(out_$i105, 6);
    call {:si_unique_call 2461} {:cexpr "__cil_tmp72"} boogie_si_record_i64(out_$i106);
    goto corral_source_split_5804;

  corral_source_split_5802:
    assume {:verifier.code 0} true;
    out_$i105 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_5803;

  corral_source_split_5801:
    assume {:verifier.code 0} true;
    out_$i104 := $zext.i8.i32(out_$i103);
    call {:si_unique_call 2460} {:cexpr "__cil_tmp70"} boogie_si_record_i32(out_$i104);
    goto corral_source_split_5802;

  corral_source_split_5800:
    assume {:verifier.code 0} true;
    out_$i103 := $load.i8($M.1, out_$p102);
    call {:si_unique_call 2459} {:cexpr "__cil_tmp69"} boogie_si_record_i8(out_$i103);
    goto corral_source_split_5801;

  corral_source_split_5799:
    assume {:verifier.code 0} true;
    out_$p102 := $i2p.i64.ref(out_$i101);
    goto corral_source_split_5800;

  corral_source_split_5798:
    assume {:verifier.code 0} true;
    out_$i101 := $add.i64(out_$i100, 7);
    call {:si_unique_call 2458} {:cexpr "__cil_tmp68"} boogie_si_record_i64(out_$i101);
    goto corral_source_split_5799;

  corral_source_split_5797:
    assume {:verifier.code 0} true;
    out_$i100 := $p2i.ref.i64(in_$p5);
    goto corral_source_split_5798;

  $bb26:
    assume !(out_$i98 == 1);
    goto corral_source_split_5797;

  corral_source_split_5845:
    assume {:verifier.code 0} true;
    $M.1 := $store.i8($M.1, out_$p127, 1);
    goto corral_source_split_5846;

  corral_source_split_5844:
    assume {:verifier.code 0} true;
    out_$p127 := $i2p.i64.ref(out_$i126);
    goto corral_source_split_5845;

  corral_source_split_5843:
    assume {:verifier.code 0} true;
    out_$i126 := $add.i64(out_$i125, out_$i123);
    call {:si_unique_call 2468} {:cexpr "__cil_tmp79"} boogie_si_record_i64(out_$i126);
    goto corral_source_split_5844;

  corral_source_split_5842:
    assume {:verifier.code 0} true;
    out_$i125 := $p2i.ref.i64(out_$p124);
    goto corral_source_split_5843;

  corral_source_split_5841:
    assume {:verifier.code 0} true;
    out_$p124 := $add.ref($add.ref(in_$p4, $mul.ref(0, 64)), $mul.ref(0, 1));
    goto corral_source_split_5842;

  corral_source_split_5840:
    assume {:verifier.code 0} true;
    out_$i123 := $mul.i64(out_$i122, 1);
    call {:si_unique_call 2467} {:cexpr "__cil_tmp78"} boogie_si_record_i64(out_$i123);
    goto corral_source_split_5841;

  $bb39:
    assume {:verifier.code 0} true;
    out_$i122 := $sext.i32.i64(out_$i68);
    goto corral_source_split_5840;

  corral_source_split_5836:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb37:
    assume out_$i114 == 1;
    goto corral_source_split_5836;

  corral_source_split_5825:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  corral_source_split_5824:
    assume {:verifier.code 0} true;
    out_$i114 := $eq.i32(out_$i99, 0);
    goto corral_source_split_5825;

  $bb35:
    assume !(out_$i113 == 1);
    goto corral_source_split_5824;

  corral_source_split_5848:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb33:
    assume {:verifier.code 0} true;
    goto $bb44;

  corral_source_split_5817:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb33;

  corral_source_split_5812:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb28:
    assume out_$i111 == 1;
    goto corral_source_split_5812;

  $bb31:
    assume out_$i112 == 1;
    goto corral_source_split_5817;

  $bb40:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2469} out_vslice_dummy_var_127 := printk.ref.i32.i32.i32(.str.56, out_$i68, out_$i61, out_$i99);
    goto corral_source_split_5848;

  corral_source_split_5838:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb38:
    assume !(out_$i114 == 1);
    goto corral_source_split_5838;

  $bb57_dummy:
    call {:si_unique_call 1} out_$i62, out_$i63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$p139, out_$p140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i60, out_$i61, out_vslice_dummy_var_127 := INFTL_foldchain_loop_$bb11(in_$p0, in_$p3, in_$p4, in_$p5, in_$p6, in_$p15, in_$p57, out_$i62, out_$i63, out_$p64, out_$i65, out_$i66, out_$i67, out_$i69, out_$i70, out_$p71, out_$i72, out_$i73, out_$p74, out_$i75, out_$i76, out_$i77, out_$i79, out_$i80, out_$p81, out_$i82, out_$i83, out_$p84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$p91, out_$i92, out_$i93, out_$i94, out_$i95, out_$p96, out_$i97, out_$i98, out_$i100, out_$i101, out_$p102, out_$i103, out_$i104, out_$i105, out_$i106, out_$p107, out_$i108, out_$i109, out_$i110, out_$i99, out_$i111, out_$i112, out_$i113, out_$i114, out_$i115, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$p121, out_$i122, out_$i123, out_$p124, out_$i125, out_$i126, out_$p127, out_$i78, out_$i129, out_$i130, out_$i131, out_$i132, out_$i68, out_$i133, out_$i134, out_$i136, out_$i137, out_$i138, out_$p139, out_$p140, out_$p141, out_$i142, out_$i143, out_$i144, out_$i145, out_$i60, out_$i61, out_vslice_dummy_var_127);
    return;

  exit:
    return;
}



procedure INFTL_foldchain_loop_$bb11(in_$p0: ref, in_$p3: ref, in_$p4: ref, in_$p5: ref, in_$p6: ref, in_$p15: ref, in_$p57: ref, in_$i62: i64, in_$i63: i64, in_$p64: ref, in_$i65: i32, in_$i66: i32, in_$i67: i1, in_$i69: i64, in_$i70: i64, in_$p71: ref, in_$i72: i64, in_$i73: i64, in_$p74: ref, in_$i75: i16, in_$i76: i32, in_$i77: i1, in_$i79: i64, in_$i80: i64, in_$p81: ref, in_$i82: i64, in_$i83: i64, in_$p84: ref, in_$i85: i8, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i64, in_$i90: i64, in_$p91: ref, in_$i92: i32, in_$i93: i32, in_$i94: i32, in_$i95: i64, in_$p96: ref, in_$i97: i32, in_$i98: i1, in_$i100: i64, in_$i101: i64, in_$p102: ref, in_$i103: i8, in_$i104: i32, in_$i105: i64, in_$i106: i64, in_$p107: ref, in_$i108: i8, in_$i109: i32, in_$i110: i32, in_$i99: i32, in_$i111: i1, in_$i112: i1, in_$i113: i1, in_$i114: i1, in_$i115: i64, in_$i116: i64, in_$p117: ref, in_$i118: i64, in_$i119: i64, in_$i120: i16, in_$p121: ref, in_$i122: i64, in_$i123: i64, in_$p124: ref, in_$i125: i64, in_$i126: i64, in_$p127: ref, in_$i78: i32, in_$i129: i32, in_$i130: i32, in_$i131: i32, in_$i132: i1, in_$i68: i32, in_$i133: i32, in_$i134: i1, in_$i136: i64, in_$i137: i64, in_$i138: i64, in_$p139: ref, in_$p140: ref, in_$p141: ref, in_$i142: i16, in_$i143: i32, in_$i144: i32, in_$i145: i1, in_$i60: i32, in_$i61: i32, in_vslice_dummy_var_127: i32) returns (out_$i62: i64, out_$i63: i64, out_$p64: ref, out_$i65: i32, out_$i66: i32, out_$i67: i1, out_$i69: i64, out_$i70: i64, out_$p71: ref, out_$i72: i64, out_$i73: i64, out_$p74: ref, out_$i75: i16, out_$i76: i32, out_$i77: i1, out_$i79: i64, out_$i80: i64, out_$p81: ref, out_$i82: i64, out_$i83: i64, out_$p84: ref, out_$i85: i8, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i64, out_$i90: i64, out_$p91: ref, out_$i92: i32, out_$i93: i32, out_$i94: i32, out_$i95: i64, out_$p96: ref, out_$i97: i32, out_$i98: i1, out_$i100: i64, out_$i101: i64, out_$p102: ref, out_$i103: i8, out_$i104: i32, out_$i105: i64, out_$i106: i64, out_$p107: ref, out_$i108: i8, out_$i109: i32, out_$i110: i32, out_$i99: i32, out_$i111: i1, out_$i112: i1, out_$i113: i1, out_$i114: i1, out_$i115: i64, out_$i116: i64, out_$p117: ref, out_$i118: i64, out_$i119: i64, out_$i120: i16, out_$p121: ref, out_$i122: i64, out_$i123: i64, out_$p124: ref, out_$i125: i64, out_$i126: i64, out_$p127: ref, out_$i78: i32, out_$i129: i32, out_$i130: i32, out_$i131: i32, out_$i132: i1, out_$i68: i32, out_$i133: i32, out_$i134: i1, out_$i136: i64, out_$i137: i64, out_$i138: i64, out_$p139: ref, out_$p140: ref, out_$p141: ref, out_$i142: i16, out_$i143: i32, out_$i144: i32, out_$i145: i1, out_$i60: i32, out_$i61: i32, out_vslice_dummy_var_127: i32);
  modifies $M.1, $M.0, $M.2, $CurrAddr, $M.3, $M.7, $M.8, $M.9, $M.10;



implementation main_loop_$bb8(in_$i4: i32, in_$i5: i1, in_$i6: i1, in_$i7: i1, in_$i8: i1, in_$i9: i1, in_$i13: i32, in_$i14: i1, in_vslice_dummy_var_133: i32, in_vslice_dummy_var_134: i32, in_vslice_dummy_var_135: i32) returns (out_$i4: i32, out_$i5: i1, out_$i6: i1, out_$i7: i1, out_$i8: i1, out_$i9: i1, out_$i13: i32, out_$i14: i1, out_vslice_dummy_var_133: i32, out_vslice_dummy_var_134: i32, out_vslice_dummy_var_135: i32)
{

  entry:
    out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i13, out_$i14, out_vslice_dummy_var_133, out_vslice_dummy_var_134, out_vslice_dummy_var_135 := in_$i4, in_$i5, in_$i6, in_$i7, in_$i8, in_$i9, in_$i13, in_$i14, in_vslice_dummy_var_133, in_vslice_dummy_var_134, in_vslice_dummy_var_135;
    goto $bb8, exit;

  $bb8:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb37:
    assume {:verifier.code 0} true;
    assume out_$i14 == 1;
    goto $bb37_dummy;

  corral_source_split_6254:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37;

  corral_source_split_6253:
    assume {:verifier.code 0} true;
    out_$i14 := $ne.i32(out_$i13, 0);
    goto corral_source_split_6254;

  $bb29:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2632} out_$i13 := __VERIFIER_nondet_int();
    call {:si_unique_call 2633} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i13);
    call {:si_unique_call 2634} {:cexpr "tmp___1"} boogie_si_record_i32(out_$i13);
    goto corral_source_split_6253;

  $bb25:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_6249:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_6243:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_6236:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_6229:
    assume {:verifier.code 0} true;
    goto $bb29;

  corral_source_split_6222:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb12:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2627} out_vslice_dummy_var_133 := inftl_getgeo($u2, $u3);
    goto corral_source_split_6222;

  corral_source_split_6217:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb10:
    assume out_$i5 == 1;
    goto corral_source_split_6217;

  corral_source_split_6215:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb10, $bb11;

  corral_source_split_6214:
    assume {:verifier.code 0} true;
    out_$i5 := $eq.i32(out_$i4, 0);
    goto corral_source_split_6215;

  $bb9:
    assume {:verifier.code 1} true;
    call {:si_unique_call 2624} out_$i4 := __VERIFIER_nondet_int();
    call {:si_unique_call 2625} {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32(out_$i4);
    call {:si_unique_call 2626} {:cexpr "tmp___0"} boogie_si_record_i32(out_$i4);
    goto corral_source_split_6214;

  $bb15:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2628} out_vslice_dummy_var_134 := inftl_readblock($u2, $u4, $u5);
    goto corral_source_split_6229;

  corral_source_split_6224:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb13:
    assume out_$i6 == 1;
    goto corral_source_split_6224;

  corral_source_split_6220:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb13, $bb14;

  corral_source_split_6219:
    assume {:verifier.code 0} true;
    out_$i6 := $eq.i32(out_$i4, 1);
    goto corral_source_split_6220;

  $bb11:
    assume !(out_$i5 == 1);
    goto corral_source_split_6219;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2629} out_vslice_dummy_var_135 := inftl_writeblock($u2, $u4, $u5);
    goto corral_source_split_6236;

  corral_source_split_6231:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb16:
    assume out_$i7 == 1;
    goto corral_source_split_6231;

  corral_source_split_6227:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb16, $bb17;

  corral_source_split_6226:
    assume {:verifier.code 0} true;
    out_$i7 := $eq.i32(out_$i4, 2);
    goto corral_source_split_6227;

  $bb14:
    assume !(out_$i6 == 1);
    goto corral_source_split_6226;

  SeqInstr_36:
    goto corral_source_split_6243;

  SeqInstr_35:
    assume assertsPassed;
    goto SeqInstr_36;

  $bb21:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2630} inftl_add_mtd($u6, $u7);
    goto SeqInstr_35;

  corral_source_split_6238:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb19:
    assume out_$i8 == 1;
    goto corral_source_split_6238;

  corral_source_split_6234:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb19, $bb20;

  corral_source_split_6233:
    assume {:verifier.code 0} true;
    out_$i8 := $eq.i32(out_$i4, 3);
    goto corral_source_split_6234;

  $bb17:
    assume !(out_$i7 == 1);
    goto corral_source_split_6233;

  $bb24:
    assume {:verifier.code 0} true;
    call {:si_unique_call 2631} inftl_remove_dev($u2);
    goto corral_source_split_6249;

  corral_source_split_6245:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb22:
    assume out_$i9 == 1;
    goto corral_source_split_6245;

  corral_source_split_6241:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb22, $bb23;

  corral_source_split_6240:
    assume {:verifier.code 0} true;
    out_$i9 := $eq.i32(out_$i4, 4);
    goto corral_source_split_6241;

  $bb20:
    assume !(out_$i8 == 1);
    goto corral_source_split_6240;

  corral_source_split_6247:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb23:
    assume !(out_$i9 == 1);
    goto corral_source_split_6247;

  $bb37_dummy:
    call {:si_unique_call 1} out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i13, out_$i14, out_vslice_dummy_var_133, out_vslice_dummy_var_134, out_vslice_dummy_var_135 := main_loop_$bb8(out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i13, out_$i14, out_vslice_dummy_var_133, out_vslice_dummy_var_134, out_vslice_dummy_var_135);
    return;

  exit:
    return;
}



procedure main_loop_$bb8(in_$i4: i32, in_$i5: i1, in_$i6: i1, in_$i7: i1, in_$i8: i1, in_$i9: i1, in_$i13: i32, in_$i14: i1, in_vslice_dummy_var_133: i32, in_vslice_dummy_var_134: i32, in_vslice_dummy_var_135: i32) returns (out_$i4: i32, out_$i5: i1, out_$i6: i1, out_$i7: i1, out_$i8: i1, out_$i9: i1, out_$i13: i32, out_$i14: i1, out_vslice_dummy_var_133: i32, out_vslice_dummy_var_134: i32, out_vslice_dummy_var_135: i32);
  modifies $M.4, $M.1, $M.3, $M.0, $M.2, $CurrAddr, $M.7, $M.8, $M.9, $M.10, assertsPassed;


