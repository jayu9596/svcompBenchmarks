type i1 = int;

type i5 = int;

type i6 = int;

type i8 = int;

type i16 = int;

type i24 = int;

type i32 = int;

type i40 = int;

type i48 = int;

type i56 = int;

type i64 = int;

type i80 = int;

type i88 = int;

type i96 = int;

type i128 = int;

type i160 = int;

type i256 = int;

type ref = i64;

type float;

const $0: i32;

axiom $0 == 0;

const $1: i32;

axiom $1 == 1;

const $0.ref: ref;

axiom $0.ref == 0;

const $1.ref: ref;

axiom $1.ref == 1;

const $2.ref: ref;

axiom $2.ref == 2;

const $3.ref: ref;

axiom $3.ref == 3;

const $4.ref: ref;

axiom $4.ref == 4;

const $5.ref: ref;

axiom $5.ref == 5;

const $6.ref: ref;

axiom $6.ref == 6;

const $7.ref: ref;

axiom $7.ref == 7;

const $8.ref: ref;

axiom $8.ref == 8;

const $9.ref: ref;

axiom $9.ref == 9;

const $10.ref: ref;

axiom $10.ref == 10;

const $11.ref: ref;

axiom $11.ref == 11;

const $12.ref: ref;

axiom $12.ref == 12;

const $13.ref: ref;

axiom $13.ref == 13;

const $14.ref: ref;

axiom $14.ref == 14;

const $1024.ref: ref;

axiom $1024.ref == 1024;

axiom $GLOBALS_BOTTOM == $sub.ref(0, 441396);

axiom $EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32816));

axiom $MALLOC_TOP == 9223372036854775807;

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) : bv64;

function {:builtin "bv2int"} $bv2int.64(i: bv64) : i64;

function {:inline} $p2i.ref.i8(p: ref) : i8
{
  $trunc.i64.i8(p)
}

function {:inline} $i2p.i8.ref(i: i8) : ref
{
  $zext.i8.i64(i)
}

function {:inline} $p2i.ref.i16(p: ref) : i16
{
  $trunc.i64.i16(p)
}

function {:inline} $i2p.i16.ref(i: i16) : ref
{
  $zext.i16.i64(i)
}

function {:inline} $p2i.ref.i32(p: ref) : i32
{
  $trunc.i64.i32(p)
}

function {:inline} $i2p.i32.ref(i: i32) : ref
{
  $zext.i32.i64(i)
}

function {:inline} $p2i.ref.i64(p: ref) : i64
{
  p
}

function {:inline} $i2p.i64.ref(i: i64) : ref
{
  i
}

function {:inline} $eq.ref(p1: ref, p2: ref) : i1
{
  (if $eq.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $eq.ref.bool(p1: ref, p2: ref) : bool
{
  $eq.i64.bool(p1, p2)
}

function {:inline} $ne.ref(p1: ref, p2: ref) : i1
{
  (if $ne.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ne.ref.bool(p1: ref, p2: ref) : bool
{
  $ne.i64.bool(p1, p2)
}

function {:inline} $ugt.ref(p1: ref, p2: ref) : i1
{
  (if $ugt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ugt.ref.bool(p1: ref, p2: ref) : bool
{
  $ugt.i64.bool(p1, p2)
}

function {:inline} $uge.ref(p1: ref, p2: ref) : i1
{
  (if $uge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $uge.ref.bool(p1: ref, p2: ref) : bool
{
  $uge.i64.bool(p1, p2)
}

function {:inline} $ult.ref(p1: ref, p2: ref) : i1
{
  (if $ult.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ult.ref.bool(p1: ref, p2: ref) : bool
{
  $ult.i64.bool(p1, p2)
}

function {:inline} $ule.ref(p1: ref, p2: ref) : i1
{
  (if $ule.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $ule.ref.bool(p1: ref, p2: ref) : bool
{
  $ule.i64.bool(p1, p2)
}

function {:inline} $sgt.ref(p1: ref, p2: ref) : i1
{
  (if $sgt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sgt.ref.bool(p1: ref, p2: ref) : bool
{
  $sgt.i64.bool(p1, p2)
}

function {:inline} $sge.ref(p1: ref, p2: ref) : i1
{
  (if $sge.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sge.ref.bool(p1: ref, p2: ref) : bool
{
  $sge.i64.bool(p1, p2)
}

function {:inline} $slt.ref(p1: ref, p2: ref) : i1
{
  (if $slt.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $slt.ref.bool(p1: ref, p2: ref) : bool
{
  $slt.i64.bool(p1, p2)
}

function {:inline} $sle.ref(p1: ref, p2: ref) : i1
{
  (if $sle.i64.bool(p1, p2) then 1 else 0)
}

function {:inline} $sle.ref.bool(p1: ref, p2: ref) : bool
{
  $sle.i64.bool(p1, p2)
}

function {:inline} $add.ref(p1: ref, p2: ref) : ref
{
  $add.i64(p1, p2)
}

function {:inline} $sub.ref(p1: ref, p2: ref) : ref
{
  $sub.i64(p1, p2)
}

function {:inline} $mul.ref(p1: ref, p2: ref) : ref
{
  $mul.i64(p1, p2)
}

const LDV_IN_INTERRUPT: ref;

axiom LDV_IN_INTERRUPT == $sub.ref(0, 1028);

const ldv_mutex: ref;

axiom ldv_mutex == $sub.ref(0, 2056);

const aty_dac_ibm514: ref;

axiom aty_dac_ibm514 == $sub.ref(0, 3088);

const {:count 5} postdividers: ref;

axiom postdividers == $sub.ref(0, 4117);

const {:count 7} RGB514_clocks: ref;

axiom RGB514_clocks == $sub.ref(0, 5197);

const {:count 3} tab: ref;

axiom tab == $sub.ref(0, 6236);

const {:count 16} cursor_bits_lookup: ref;

axiom cursor_bits_lookup == $sub.ref(0, 7276);

const fb_list: ref;

axiom fb_list == $sub.ref(0, 8308);

const default_var: ref;

axiom default_var == $sub.ref(0, 9492);

const defmode: ref;

axiom defmode == $sub.ref(0, 10580);

const aty_bl_data: ref;

axiom aty_bl_data == $sub.ref(0, 11636);

const backlight: ref;

axiom backlight == $sub.ref(0, 12664);

const atyfb_ops: ref;

axiom atyfb_ops == $sub.ref(0, 13880);

const {:count 5} ram_wram: ref;

axiom ram_wram == $sub.ref(0, 14909);

const {:count 8} aty_ct_ram: ref;

axiom aty_ct_ram == $sub.ref(0, 15997);

const {:count 21} ram_sdram32: ref;

axiom ram_sdram32 == $sub.ref(0, 17042);

const {:count 12} ram_sgram: ref;

axiom ram_sgram == $sub.ref(0, 18078);

const {:count 12} ram_sdram: ref;

axiom ram_sdram == $sub.ref(0, 19114);

const {:count 4} ram_edo: ref;

axiom ram_edo == $sub.ref(0, 20142);

const {:count 4} ram_off: ref;

axiom ram_off == $sub.ref(0, 21170);

const {:count 8} aty_xl_ram: ref;

axiom aty_xl_ram == $sub.ref(0, 22258);

const {:count 5} ram_resv: ref;

axiom ram_resv == $sub.ref(0, 23287);

const {:count 5} ram_vram: ref;

axiom ram_vram == $sub.ref(0, 24316);

const {:count 5} ram_dram: ref;

axiom ram_dram == $sub.ref(0, 25345);

const {:count 8} aty_gx_ram: ref;

axiom aty_gx_ram == $sub.ref(0, 26433);

const __key___5: ref;

axiom __key___5 == $sub.ref(0, 27465);

const __key___4: ref;

axiom __key___4 == $sub.ref(0, 28497);

const {:count 35} aty_chips: ref;

axiom aty_chips == $sub.ref(0, 30921);

const atyfb_fix: ref;

axiom atyfb_fix == $sub.ref(0, 32025);

const {:count 5} StretchLoops: ref;

axiom StretchLoops == $sub.ref(0, 33054);

const {:count 7} __param_str_nomtrr: ref;

axiom __param_str_nomtrr == $sub.ref(0, 34085);

const {:count 5} __param_str_mode: ref;

axiom __param_str_mode == $sub.ref(0, 35114);

const comp_sync: ref;

axiom comp_sync == $sub.ref(0, 36142);

const {:count 10} __param_str_comp_sync: ref;

axiom __param_str_comp_sync == $sub.ref(0, 37176);

const {:count 5} __param_str_xclk: ref;

axiom __param_str_xclk == $sub.ref(0, 38205);

const {:count 5} __param_str_mclk: ref;

axiom __param_str_mclk == $sub.ref(0, 39234);

const {:count 4} __param_str_pll: ref;

axiom __param_str_pll == $sub.ref(0, 40262);

const {:count 5} __param_str_vram: ref;

axiom __param_str_vram == $sub.ref(0, 41291);

const {:count 8} __param_str_noaccel: ref;

axiom __param_str_noaccel == $sub.ref(0, 42323);

const atyfb_reboot_notifier: ref;

axiom atyfb_reboot_notifier == $sub.ref(0, 43371);

const atyfb_reboot_ids: ref;

axiom atyfb_reboot_ids == $sub.ref(0, 44739);

const reboot_info: ref;

axiom reboot_info == $sub.ref(0, 45771);

const reboot_lock: ref;

axiom reboot_lock == $sub.ref(0, 46867);

const atyfb_driver: ref;

axiom atyfb_driver == $sub.ref(0, 48139);

const {:count 35} atyfb_pci_tbl: ref;

axiom atyfb_pci_tbl == $sub.ref(0, 50283);

const {:count 9} lt_lcd_regs: ref;

axiom lt_lcd_regs == $sub.ref(0, 51343);

const res_atyfb_pci_probe_44: ref;

axiom res_atyfb_pci_probe_44 == $sub.ref(0, 52371);

const mode: ref;

axiom mode == $sub.ref(0, 53403);

const xclk: ref;

axiom xclk == $sub.ref(0, 54431);

const mclk: ref;

axiom mclk == $sub.ref(0, 55459);

const pll: ref;

axiom pll == $sub.ref(0, 56487);

const vram: ref;

axiom vram == $sub.ref(0, 57515);

const nomtrr: ref;

axiom nomtrr == $sub.ref(0, 58540);

const noaccel: ref;

axiom noaccel == $sub.ref(0, 59565);

const aty_pll_ct: ref;

axiom aty_pll_ct == $sub.ref(0, 60637);

const aty_dac_ct: ref;

axiom aty_dac_ct == $sub.ref(0, 61669);

const aty_pll_unsupported: ref;

axiom aty_pll_unsupported == $sub.ref(0, 62741);

const aty_dac_unsupported: ref;

axiom aty_dac_unsupported == $sub.ref(0, 63773);

const aty_pll_att20c408: ref;

axiom aty_pll_att20c408 == $sub.ref(0, 64845);

const aty_pll_ch8398: ref;

axiom aty_pll_ch8398 == $sub.ref(0, 65917);

const aty_pll_stg1703: ref;

axiom aty_pll_stg1703 == $sub.ref(0, 66989);

const aty_pll_ati18818_1: ref;

axiom aty_pll_ati18818_1 == $sub.ref(0, 68061);

const aty_dac_att21c498: ref;

axiom aty_dac_att21c498 == $sub.ref(0, 69093);

const aty_dac_ati68860b: ref;

axiom aty_dac_ati68860b == $sub.ref(0, 70125);

const aty_pll_ibm514: ref;

axiom aty_pll_ibm514 == $sub.ref(0, 71197);

const {:count 48} __mod_nomtrr4031: ref;

axiom __mod_nomtrr4031 == $sub.ref(0, 72269);

const {:count 21} __mod_nomtrrtype4030: ref;

axiom __mod_nomtrrtype4030 == $sub.ref(0, 73314);

const __param_nomtrr: ref;

axiom __param_nomtrr == $sub.ref(0, 74370);

const {:count 69} __mod_mode4028: ref;

axiom __mod_mode4028 == $sub.ref(0, 75463);

const {:count 20} __mod_modetype4027: ref;

axiom __mod_modetype4027 == $sub.ref(0, 76507);

const __param_mode: ref;

axiom __param_mode == $sub.ref(0, 77563);

const {:count 64} __mod_comp_sync4026: ref;

axiom __mod_comp_sync4026 == $sub.ref(0, 78651);

const {:count 23} __mod_comp_synctype4025: ref;

axiom __mod_comp_synctype4025 == $sub.ref(0, 79698);

const __param_comp_sync: ref;

axiom __param_comp_sync == $sub.ref(0, 80754);

const {:count 49} __mod_xclk4024: ref;

axiom __mod_xclk4024 == $sub.ref(0, 81827);

const {:count 18} __mod_xclktype4023: ref;

axiom __mod_xclktype4023 == $sub.ref(0, 82869);

const __param_xclk: ref;

axiom __param_xclk == $sub.ref(0, 83925);

const {:count 37} __mod_mclk4022: ref;

axiom __mod_mclk4022 == $sub.ref(0, 84986);

const {:count 18} __mod_mclktype4021: ref;

axiom __mod_mclktype4021 == $sub.ref(0, 86028);

const __param_mclk: ref;

axiom __param_mclk == $sub.ref(0, 87084);

const {:count 35} __mod_pll4020: ref;

axiom __mod_pll4020 == $sub.ref(0, 88143);

const {:count 17} __mod_plltype4019: ref;

axiom __mod_plltype4019 == $sub.ref(0, 89184);

const __param_pll: ref;

axiom __param_pll == $sub.ref(0, 90240);

const {:count 42} __mod_vram4018: ref;

axiom __mod_vram4018 == $sub.ref(0, 91306);

const {:count 18} __mod_vramtype4017: ref;

axiom __mod_vramtype4017 == $sub.ref(0, 92348);

const __param_vram: ref;

axiom __param_vram == $sub.ref(0, 93404);

const {:count 40} __mod_noaccel4016: ref;

axiom __mod_noaccel4016 == $sub.ref(0, 94468);

const {:count 22} __mod_noacceltype4015: ref;

axiom __mod_noacceltype4015 == $sub.ref(0, 95514);

const __param_noaccel: ref;

axiom __param_noaccel == $sub.ref(0, 96570);

const {:count 12} __mod_license4014: ref;

axiom __mod_license4014 == $sub.ref(0, 97606);

const {:count 46} __mod_description4013: ref;

axiom __mod_description4013 == $sub.ref(0, 98676);

const param_ops_bool: ref;

axiom param_ops_bool == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32776));

const param_ops_int: ref;

axiom param_ops_int == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32784));

const param_ops_charp: ref;

axiom param_ops_charp == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32792));

const {:count 41} .str.80: ref;

axiom .str.80 == $sub.ref(0, 99741);

const {:count 29} .str.81: ref;

axiom .str.81 == $sub.ref(0, 100794);

const {:count 29} .str.82: ref;

axiom .str.82 == $sub.ref(0, 101847);

const {:count 29} .str.79: ref;

axiom .str.79 == $sub.ref(0, 102900);

const .str: ref;

axiom .str == $sub.ref(0, 103930);

const {:count 28} .str.5: ref;

axiom .str.5 == $sub.ref(0, 104982);

const {:count 23} .str.6: ref;

axiom .str.6 == $sub.ref(0, 106029);

const {:count 32} .str.7: ref;

axiom .str.7 == $sub.ref(0, 107085);

const {:count 81} .str.8: ref;

axiom .str.8 == $sub.ref(0, 108190);

const {:count 63} .str.9: ref;

axiom .str.9 == $sub.ref(0, 109277);

const {:count 127} .str.10: ref;

axiom .str.10 == $sub.ref(0, 110428);

const {:count 35} .str.11: ref;

axiom .str.11 == $sub.ref(0, 111487);

const {:count 40} .str.12: ref;

axiom .str.12 == $sub.ref(0, 112551);

const {:count 36} .str.13: ref;

axiom .str.13 == $sub.ref(0, 113611);

const {:count 35} .str.14: ref;

axiom .str.14 == $sub.ref(0, 114670);

const {:count 41} .str.15: ref;

axiom .str.15 == $sub.ref(0, 115735);

const {:count 36} .str.16: ref;

axiom .str.16 == $sub.ref(0, 116795);

const iomem_resource: ref;

axiom iomem_resource == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32800));

const {:count 25} .str.2: ref;

axiom .str.2 == $sub.ref(0, 117844);

const {:count 36} .str.20: ref;

axiom .str.20 == $sub.ref(0, 118904);

const {:count 49} .str.21: ref;

axiom .str.21 == $sub.ref(0, 119977);

const {:count 18} .str.65: ref;

axiom .str.65 == $sub.ref(0, 121019);

const {:count 25} .str.66: ref;

axiom .str.66 == $sub.ref(0, 122068);

const {:count 51} .str.67: ref;

axiom .str.67 == $sub.ref(0, 123143);

const {:count 50} .str.68: ref;

axiom .str.68 == $sub.ref(0, 124217);

const {:count 9} .str.69: ref;

axiom .str.69 == $sub.ref(0, 125250);

const {:count 10} .str.70: ref;

axiom .str.70 == $sub.ref(0, 126284);

const {:count 70} .str.71: ref;

axiom .str.71 == $sub.ref(0, 127378);

const {:count 40} .str.72: ref;

axiom .str.72 == $sub.ref(0, 128442);

const {:count 4} .str.73: ref;

axiom .str.73 == $sub.ref(0, 129470);

const {:count 4} .str.74: ref;

axiom .str.74 == $sub.ref(0, 130498);

const {:count 46} .str.75: ref;

axiom .str.75 == $sub.ref(0, 131568);

const {:count 31} .str.17: ref;

axiom .str.17 == $sub.ref(0, 132623);

const {:count 8} .str.76: ref;

axiom .str.76 == $sub.ref(0, 133655);

const {:count 39} .str.77: ref;

axiom .str.77 == $sub.ref(0, 134718);

const {:count 33} .str.78: ref;

axiom .str.78 == $sub.ref(0, 135775);

const {:count 45} .str.22: ref;

axiom .str.22 == $sub.ref(0, 136844);

const {:count 26} .str.23: ref;

axiom .str.23 == $sub.ref(0, 137894);

const {:count 27} .str.24: ref;

axiom .str.24 == $sub.ref(0, 138945);

const {:count 27} .str.25: ref;

axiom .str.25 == $sub.ref(0, 139996);

const {:count 27} .str.26: ref;

axiom .str.26 == $sub.ref(0, 141047);

const {:count 23} .str.27: ref;

axiom .str.27 == $sub.ref(0, 142094);

const {:count 24} .str.28: ref;

axiom .str.28 == $sub.ref(0, 143142);

const {:count 34} .str.29: ref;

axiom .str.29 == $sub.ref(0, 144200);

const {:count 16} .str.3: ref;

axiom .str.3 == $sub.ref(0, 145240);

const {:count 23} .str.30: ref;

axiom .str.30 == $sub.ref(0, 146287);

const {:count 23} .str.31: ref;

axiom .str.31 == $sub.ref(0, 147334);

const {:count 21} .str.32: ref;

axiom .str.32 == $sub.ref(0, 148379);

const {:count 21} .str.33: ref;

axiom .str.33 == $sub.ref(0, 149424);

const {:count 21} .str.34: ref;

axiom .str.34 == $sub.ref(0, 150469);

const {:count 21} .str.35: ref;

axiom .str.35 == $sub.ref(0, 151514);

const {:count 20} .str.36: ref;

axiom .str.36 == $sub.ref(0, 152558);

const {:count 22} .str.37: ref;

axiom .str.37 == $sub.ref(0, 153604);

const {:count 24} .str.38: ref;

axiom .str.38 == $sub.ref(0, 154652);

const {:count 23} .str.39: ref;

axiom .str.39 == $sub.ref(0, 155699);

const {:count 22} .str.40: ref;

axiom .str.40 == $sub.ref(0, 156745);

const {:count 29} .str.41: ref;

axiom .str.41 == $sub.ref(0, 157798);

const {:count 29} .str.42: ref;

axiom .str.42 == $sub.ref(0, 158851);

const {:count 29} .str.43: ref;

axiom .str.43 == $sub.ref(0, 159904);

const {:count 29} .str.44: ref;

axiom .str.44 == $sub.ref(0, 160957);

const {:count 34} .str.45: ref;

axiom .str.45 == $sub.ref(0, 162015);

const {:count 37} .str.46: ref;

axiom .str.46 == $sub.ref(0, 163076);

const {:count 34} .str.47: ref;

axiom .str.47 == $sub.ref(0, 164134);

const {:count 35} .str.48: ref;

axiom .str.48 == $sub.ref(0, 165193);

const {:count 47} .str.49: ref;

axiom .str.49 == $sub.ref(0, 166264);

const {:count 32} .str.50: ref;

axiom .str.50 == $sub.ref(0, 167320);

const {:count 32} .str.51: ref;

axiom .str.51 == $sub.ref(0, 168376);

const {:count 32} .str.52: ref;

axiom .str.52 == $sub.ref(0, 169432);

const {:count 32} .str.53: ref;

axiom .str.53 == $sub.ref(0, 170488);

const {:count 32} .str.54: ref;

axiom .str.54 == $sub.ref(0, 171544);

const {:count 31} .str.55: ref;

axiom .str.55 == $sub.ref(0, 172599);

const {:count 31} .str.56: ref;

axiom .str.56 == $sub.ref(0, 173654);

const {:count 31} .str.57: ref;

axiom .str.57 == $sub.ref(0, 174709);

const {:count 31} .str.58: ref;

axiom .str.58 == $sub.ref(0, 175764);

const {:count 31} .str.59: ref;

axiom .str.59 == $sub.ref(0, 176819);

const {:count 31} .str.60: ref;

axiom .str.60 == $sub.ref(0, 177874);

const {:count 41} .str.61: ref;

axiom .str.61 == $sub.ref(0, 178939);

const {:count 39} .str.62: ref;

axiom .str.62 == $sub.ref(0, 180002);

const {:count 38} .str.63: ref;

axiom .str.63 == $sub.ref(0, 181064);

const {:count 36} .str.64: ref;

axiom .str.64 == $sub.ref(0, 182124);

const __this_module: ref;

axiom __this_module == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32808));

const current_task: ref;

axiom current_task == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32816));

const {:count 36} .str.18: ref;

axiom .str.18 == $sub.ref(0, 183184);

const {:count 23} .str.19: ref;

axiom .str.19 == $sub.ref(0, 184231);

const {:count 26} llvm.used: ref;

axiom llvm.used == $sub.ref(0, 185463);

const env_value_str: ref;

axiom env_value_str == $sub.ref(0, 186495);

const {:count 3} .str.1.93: ref;

axiom .str.1.93 == $sub.ref(0, 187522);

const {:count 14} .str.388: ref;

axiom .str.388 == $sub.ref(0, 188560);

const errno_global: ref;

axiom errno_global == $sub.ref(0, 189588);

const aty_set_dac_514: ref;

axiom aty_set_dac_514 == $sub.ref(0, 190620);

procedure aty_set_dac_514($p0: ref, $p1: ref, $i2: i32, $i3: i32) returns ($r: i32);



const llvm.dbg.declare: ref;

axiom llvm.dbg.declare == $sub.ref(0, 191652);

procedure llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);



const aty_st_514: ref;

axiom aty_st_514 == $sub.ref(0, 192684);

procedure aty_st_514($i0: i32, $i1: i8, $p2: ref);



const aty_st_8: ref;

axiom aty_st_8 == $sub.ref(0, 193716);

procedure aty_st_8($i0: i32, $i1: i8, $p2: ref);



const writeb: ref;

axiom writeb == $sub.ref(0, 194748);

procedure writeb($i0: i8, $p1: ref);



const aty_var_to_pll_514: ref;

axiom aty_var_to_pll_514 == $sub.ref(0, 195780);

procedure aty_var_to_pll_514($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_514_to_var: ref;

axiom aty_pll_514_to_var == $sub.ref(0, 196812);

procedure aty_pll_514_to_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll_514: ref;

axiom aty_set_pll_514 == $sub.ref(0, 197844);

procedure aty_set_pll_514($p0: ref, $p1: ref);



const aty_set_dac_ATI68860_B: ref;

axiom aty_set_dac_ATI68860_B == $sub.ref(0, 198876);

procedure aty_set_dac_ATI68860_B($p0: ref, $p1: ref, $i2: i32, $i3: i32) returns ($r: i32);



const aty_ld_8: ref;

axiom aty_ld_8 == $sub.ref(0, 199908);

procedure aty_ld_8($i0: i32, $p1: ref) returns ($r: i8);



const aty_st_le32: ref;

axiom aty_st_le32 == $sub.ref(0, 200940);

procedure aty_st_le32($i0: i32, $i1: i32, $p2: ref);



const writel: ref;

axiom writel == $sub.ref(0, 201972);

procedure writel($i0: i32, $p1: ref);



const readb: ref;

axiom readb == $sub.ref(0, 203004);

procedure readb($p0: ref) returns ($r: i8);



const aty_set_dac_ATT21C498: ref;

axiom aty_set_dac_ATT21C498 == $sub.ref(0, 204036);

procedure aty_set_dac_ATT21C498($p0: ref, $p1: ref, $i2: i32, $i3: i32) returns ($r: i32);



const aty_dac_waste4: ref;

axiom aty_dac_waste4 == $sub.ref(0, 205068);

procedure aty_dac_waste4($p0: ref);



const aty_var_to_pll_18818: ref;

axiom aty_var_to_pll_18818 == $sub.ref(0, 206100);

procedure aty_var_to_pll_18818($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_18818_to_var: ref;

axiom aty_pll_18818_to_var == $sub.ref(0, 207132);

procedure aty_pll_18818_to_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll18818: ref;

axiom aty_set_pll18818 == $sub.ref(0, 208164);

procedure aty_set_pll18818($p0: ref, $p1: ref);



const ___udelay: ref;

axiom ___udelay == $sub.ref(0, 209196);

procedure ___udelay($i0: i64);



const aty_StrobeClock: ref;

axiom aty_StrobeClock == $sub.ref(0, 210228);

procedure aty_StrobeClock($p0: ref);



const aty_ICS2595_put1bit: ref;

axiom aty_ICS2595_put1bit == $sub.ref(0, 211260);

procedure aty_ICS2595_put1bit($i0: i8, $p1: ref);



const aty_var_to_pll_1703: ref;

axiom aty_var_to_pll_1703 == $sub.ref(0, 212292);

procedure aty_var_to_pll_1703($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_1703_to_var: ref;

axiom aty_pll_1703_to_var == $sub.ref(0, 213324);

procedure aty_pll_1703_to_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll_1703: ref;

axiom aty_set_pll_1703 == $sub.ref(0, 214356);

procedure aty_set_pll_1703($p0: ref, $p1: ref);



const aty_var_to_pll_8398: ref;

axiom aty_var_to_pll_8398 == $sub.ref(0, 215388);

procedure aty_var_to_pll_8398($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_8398_to_var: ref;

axiom aty_pll_8398_to_var == $sub.ref(0, 216420);

procedure aty_pll_8398_to_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll_8398: ref;

axiom aty_set_pll_8398 == $sub.ref(0, 217452);

procedure aty_set_pll_8398($p0: ref, $p1: ref);



const aty_var_to_pll_408: ref;

axiom aty_var_to_pll_408 == $sub.ref(0, 218484);

procedure aty_var_to_pll_408($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_408_to_var: ref;

axiom aty_pll_408_to_var == $sub.ref(0, 219516);

procedure aty_pll_408_to_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll_408: ref;

axiom aty_set_pll_408 == $sub.ref(0, 220548);

procedure aty_set_pll_408($p0: ref, $p1: ref);



const aty_set_dac_unsupported: ref;

axiom aty_set_dac_unsupported == $sub.ref(0, 221580);

procedure aty_set_dac_unsupported($p0: ref, $p1: ref, $i2: i32, $i3: i32) returns ($r: i32);



const dummy: ref;

axiom dummy == $sub.ref(0, 222612);

procedure dummy() returns ($r: i32);



const dummy___0: ref;

axiom dummy___0 == $sub.ref(0, 223644);

procedure dummy___0() returns ($r: i32);



const aty_var_to_pll_ct: ref;

axiom aty_var_to_pll_ct == $sub.ref(0, 224676);

procedure aty_var_to_pll_ct($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const aty_pll_to_var_ct: ref;

axiom aty_pll_to_var_ct == $sub.ref(0, 225708);

procedure aty_pll_to_var_ct($p0: ref, $p1: ref) returns ($r: i32);



const aty_set_pll_ct: ref;

axiom aty_set_pll_ct == $sub.ref(0, 226740);

procedure aty_set_pll_ct($p0: ref, $p1: ref);



const aty_get_pll_ct: ref;

axiom aty_get_pll_ct == $sub.ref(0, 227772);

procedure aty_get_pll_ct($p0: ref, $p1: ref);



const aty_init_pll_ct: ref;

axiom aty_init_pll_ct == $sub.ref(0, 228804);

procedure aty_init_pll_ct($p0: ref, $p1: ref) returns ($r: i32);



const aty_resume_pll_ct: ref;

axiom aty_resume_pll_ct == $sub.ref(0, 229836);

procedure aty_resume_pll_ct($p0: ref, $p1: ref);



const aty_st_pll_ct: ref;

axiom aty_st_pll_ct == $sub.ref(0, 230868);

procedure aty_st_pll_ct($i0: i32, $i1: i8, $p2: ref);



const aty_ld_pll_ct: ref;

axiom aty_ld_pll_ct == $sub.ref(0, 231900);

procedure aty_ld_pll_ct($i0: i32, $p1: ref) returns ($r: i8);



const printk: ref;

axiom printk == $sub.ref(0, 232932);

procedure printk.ref.i32($p0: ref, p.1: i32) returns ($r: i32);



procedure printk.ref.ref.i32.i32($p0: ref, p.1: ref, p.2: i32, p.3: i32) returns ($r: i32);



procedure printk.ref($p0: ref) returns ($r: i32);



procedure printk.ref.ref($p0: ref, p.1: ref) returns ($r: i32);



procedure printk.ref.i32.ref.ref($p0: ref, p.1: i32, p.2: ref, p.3: ref) returns ($r: i32);



procedure printk.ref.i32.i32.ref.ref.i32.i32.i32($p0: ref, p.1: i32, p.2: i32, p.3: ref, p.4: ref, p.5: i32, p.6: i32, p.7: i32) returns ($r: i32);



procedure printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32) returns ($r: i32);



const aty_ld_le32: ref;

axiom aty_ld_le32 == $sub.ref(0, 233964);

procedure aty_ld_le32($i0: i32, $p1: ref) returns ($r: i32);



const readl: ref;

axiom readl == $sub.ref(0, 234996);

procedure readl($p0: ref) returns ($r: i32);



const aty_ld_lcd: ref;

axiom aty_ld_lcd == $sub.ref(0, 236028);

procedure aty_ld_lcd($i0: i32, $p1: ref) returns ($r: i32);



const aty_st_lcd: ref;

axiom aty_st_lcd == $sub.ref(0, 237060);

procedure aty_st_lcd($i0: i32, $i1: i32, $p2: ref);



const aty_valid_pll_ct: ref;

axiom aty_valid_pll_ct == $sub.ref(0, 238092);

procedure aty_valid_pll_ct($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



const aty_dsp_gt: ref;

axiom aty_dsp_gt == $sub.ref(0, 239124);

procedure aty_dsp_gt($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



const atyfb_pci_probe: ref;

axiom atyfb_pci_probe == $sub.ref(0, 240156);

procedure atyfb_pci_probe($p0: ref, $p1: ref) returns ($r: i32);



const atyfb_pci_remove: ref;

axiom atyfb_pci_remove == $sub.ref(0, 241188);

procedure atyfb_pci_remove($p0: ref);



const atyfb_pci_suspend: ref;

axiom atyfb_pci_suspend == $sub.ref(0, 242220);

procedure atyfb_pci_suspend($p0: ref, $i1: i32) returns ($r: i32);



const atyfb_pci_resume: ref;

axiom atyfb_pci_resume == $sub.ref(0, 243252);

procedure atyfb_pci_resume($p0: ref) returns ($r: i32);



const pci_get_drvdata: ref;

axiom pci_get_drvdata == $sub.ref(0, 244284);

procedure pci_get_drvdata($p0: ref) returns ($r: ref);



const console_lock: ref;

axiom console_lock == $sub.ref(0, 245316);

procedure console_lock();



const aty_resume_chip: ref;

axiom aty_resume_chip == $sub.ref(0, 246348);

procedure aty_resume_chip($p0: ref);



const atyfb_set_par: ref;

axiom atyfb_set_par == $sub.ref(0, 247380);

procedure atyfb_set_par($p0: ref) returns ($r: i32);



const fb_set_suspend: ref;

axiom fb_set_suspend == $sub.ref(0, 248412);

procedure fb_set_suspend($p0: ref, $i1: i32);



const atyfb_blank: ref;

axiom atyfb_blank == $sub.ref(0, 249444);

procedure atyfb_blank($i0: i32, $p1: ref) returns ($r: i32);



const console_unlock: ref;

axiom console_unlock == $sub.ref(0, 250476);

procedure console_unlock();



const aty_var_to_crtc: ref;

axiom aty_var_to_crtc == $sub.ref(0, 251508);

procedure aty_var_to_crtc($p0: ref, $p1: ref, $p2: ref) returns ($r: i32);



const atyfb_get_pixclock: ref;

axiom atyfb_get_pixclock == $sub.ref(0, 252540);

procedure atyfb_get_pixclock($p0: ref, $p1: ref) returns ($r: i32);



const atyfb_sync: ref;

axiom atyfb_sync == $sub.ref(0, 253572);

procedure atyfb_sync($p0: ref) returns ($r: i32);



const wait_for_idle: ref;

axiom wait_for_idle == $sub.ref(0, 254604);

procedure wait_for_idle($p0: ref);



const aty_set_crtc: ref;

axiom aty_set_crtc == $sub.ref(0, 255636);

procedure aty_set_crtc($p0: ref, $p1: ref);



const calc_line_length: ref;

axiom calc_line_length == $sub.ref(0, 256668);

procedure calc_line_length($p0: ref, $i1: i32, $i2: i32) returns ($r: i32);



const aty_init_engine: ref;

axiom aty_init_engine == $sub.ref(0, 257700);

procedure aty_init_engine($p0: ref, $p1: ref);



const reset_GTC_3D_engine: ref;

axiom reset_GTC_3D_engine == $sub.ref(0, 258732);

procedure reset_GTC_3D_engine($p0: ref);



const aty_reset_engine: ref;

axiom aty_reset_engine == $sub.ref(0, 259764);

procedure aty_reset_engine($p0: ref);



const wait_for_fifo: ref;

axiom wait_for_fifo == $sub.ref(0, 260796);

procedure wait_for_fifo($i0: i16, $p1: ref);



const ATIReduceRatio: ref;

axiom ATIReduceRatio == $sub.ref(0, 261828);

procedure ATIReduceRatio($p0: ref, $p1: ref);



const dev_get_drvdata: ref;

axiom dev_get_drvdata == $sub.ref(0, 262860);

procedure dev_get_drvdata($p0: ref) returns ($r: ref);



const external_alloc: ref;

axiom external_alloc == $sub.ref(0, 263892);

procedure external_alloc() returns ($r: ref);



const pci_save_state: ref;

axiom pci_save_state == $sub.ref(0, 264924);

procedure pci_save_state($p0: ref) returns ($r: i32);



const pci_choose_state: ref;

axiom pci_choose_state == $sub.ref(0, 265956);

procedure pci_choose_state($p0: ref, $i1: i32) returns ($r: i32);



const pci_set_power_state: ref;

axiom pci_set_power_state == $sub.ref(0, 266988);

procedure pci_set_power_state($p0: ref, $i1: i32) returns ($r: i32);



const mutex_lock: ref;

axiom mutex_lock == $sub.ref(0, 268020);

procedure mutex_lock($p0: ref);



const mutex_unlock: ref;

axiom mutex_unlock == $sub.ref(0, 269052);

procedure mutex_unlock($p0: ref);



const atyfb_remove: ref;

axiom atyfb_remove == $sub.ref(0, 270084);

procedure atyfb_remove($p0: ref);



const unregister_framebuffer: ref;

axiom unregister_framebuffer == $sub.ref(0, 271116);

procedure unregister_framebuffer($p0: ref) returns ($r: i32);



const aty_bl_exit: ref;

axiom aty_bl_exit == $sub.ref(0, 272148);

procedure aty_bl_exit($p0: ref);



const mtrr_del: ref;

axiom mtrr_del == $sub.ref(0, 273180);

procedure mtrr_del($i0: i32, $i1: i64, $i2: i64) returns ($r: i32);



const iounmap: ref;

axiom iounmap == $sub.ref(0, 274212);

procedure iounmap($p0: ref);



const __release_region: ref;

axiom __release_region == $sub.ref(0, 275244);

procedure __release_region($p0: ref, $i1: i64, $i2: i64);



const framebuffer_release: ref;

axiom framebuffer_release == $sub.ref(0, 276276);

procedure framebuffer_release($p0: ref);



const backlight_device_unregister: ref;

axiom backlight_device_unregister == $sub.ref(0, 277308);

procedure backlight_device_unregister($p0: ref);



const ldv_blast_assert: ref;

axiom ldv_blast_assert == $sub.ref(0, 278340);

procedure ldv_blast_assert();



const pci_enable_device: ref;

axiom pci_enable_device == $sub.ref(0, 279372);

procedure pci_enable_device($p0: ref) returns ($r: i32);



const resource_size: ref;

axiom resource_size == $sub.ref(0, 280404);

procedure resource_size($p0: ref) returns ($r: i64);



const __request_region: ref;

axiom __request_region == $sub.ref(0, 281436);

procedure __request_region($p0: ref, $i1: i64, $i2: i64, $p3: ref, $i4: i32) returns ($r: ref);



const framebuffer_alloc: ref;

axiom framebuffer_alloc == $sub.ref(0, 282468);

procedure framebuffer_alloc($i0: i64, $p1: ref) returns ($r: ref);



const llvm.memcpy.p0i8.p0i8.i64: ref;

axiom llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 283500);

procedure llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);



const atyfb_setup_generic: ref;

axiom atyfb_setup_generic == $sub.ref(0, 284532);

procedure atyfb_setup_generic($p0: ref, $p1: ref, $i2: i64) returns ($r: i32);



const pci_set_drvdata: ref;

axiom pci_set_drvdata == $sub.ref(0, 285564);

procedure pci_set_drvdata($p0: ref, $p1: ref);



const aty_init: ref;

axiom aty_init == $sub.ref(0, 286596);

procedure aty_init($p0: ref) returns ($r: i32);



const __init_waitqueue_head: ref;

axiom __init_waitqueue_head == $sub.ref(0, 287628);

procedure __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);



const spinlock_check: ref;

axiom spinlock_check == $sub.ref(0, 288660);

procedure spinlock_check($p0: ref) returns ($r: ref);



const __raw_spin_lock_init: ref;

axiom __raw_spin_lock_init == $sub.ref(0, 289692);

procedure __raw_spin_lock_init($p0: ref, $p1: ref, $p2: ref);



const aty_calc_mem_refresh: ref;

axiom aty_calc_mem_refresh == $sub.ref(0, 290724);

procedure aty_calc_mem_refresh($p0: ref, $i1: i32);



const aty_get_crtc: ref;

axiom aty_get_crtc == $sub.ref(0, 291756);

procedure aty_get_crtc($p0: ref, $p1: ref);



const mtrr_add: ref;

axiom mtrr_add == $sub.ref(0, 292788);

procedure mtrr_add($i0: i64, $i1: i64, $i2: i32, $i3: i1) returns ($r: i32);



const aty_bl_init: ref;

axiom aty_bl_init == $sub.ref(0, 293820);

procedure aty_bl_init($p0: ref);



const llvm.memset.p0i8.i64: ref;

axiom llvm.memset.p0i8.i64 == $sub.ref(0, 294852);

procedure llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);



const fb_find_mode: ref;

axiom fb_find_mode == $sub.ref(0, 295884);

procedure fb_find_mode($p0: ref, $p1: ref, $p2: ref, $p3: ref, $i4: i32, $p5: ref, $i6: i32) returns ($r: i32);



const atyfb_check_var: ref;

axiom atyfb_check_var == $sub.ref(0, 296916);

procedure atyfb_check_var($p0: ref, $p1: ref) returns ($r: i32);



const aty_init_cursor: ref;

axiom aty_init_cursor == $sub.ref(0, 297948);

procedure aty_init_cursor($p0: ref) returns ($r: i32);



const fb_alloc_cmap: ref;

axiom fb_alloc_cmap == $sub.ref(0, 298980);

procedure fb_alloc_cmap($p0: ref, $i1: i32, $i2: i32) returns ($r: i32);



const register_framebuffer: ref;

axiom register_framebuffer == $sub.ref(0, 300012);

procedure register_framebuffer($p0: ref) returns ($r: i32);



const fb_dealloc_cmap: ref;

axiom fb_dealloc_cmap == $sub.ref(0, 301044);

procedure fb_dealloc_cmap($p0: ref);



const atyfb_cursor: ref;

axiom atyfb_cursor == $sub.ref(0, 302076);

procedure atyfb_cursor($p0: ref, $p1: ref) returns ($r: i32);



const memset_io: ref;

axiom memset_io == $sub.ref(0, 303108);

procedure memset_io($p0: ref, $i1: i8, $i2: i64);



const __writeb: ref;

axiom __writeb == $sub.ref(0, 304140);

procedure __writeb($i0: i8, $p1: ref);



const memcpy: ref;

axiom memcpy == $sub.ref(0, 305172);

procedure memcpy($p0: ref, $p1: ref, $i2: i64) returns ($r: ref);



const aty_crtc_to_var: ref;

axiom aty_crtc_to_var == $sub.ref(0, 306204);

procedure aty_crtc_to_var($p0: ref, $p1: ref) returns ($r: i32);



const snprintf: ref;

axiom snprintf == $sub.ref(0, 307236);

procedure snprintf.ref.i64.ref.i32($p0: ref, $i1: i64, $p2: ref, p.3: i32) returns ($r: i32);



const backlight_device_register: ref;

axiom backlight_device_register == $sub.ref(0, 308268);

procedure backlight_device_register($p0: ref, $p1: ref, $p2: ref, $p3: ref, $p4: ref) returns ($r: ref);



const IS_ERR: ref;

axiom IS_ERR == $sub.ref(0, 309300);

procedure IS_ERR($p0: ref) returns ($r: i64);



const fb_bl_default_curve: ref;

axiom fb_bl_default_curve == $sub.ref(0, 310332);

procedure fb_bl_default_curve($p0: ref, $i1: i8, $i2: i8, $i3: i8);



const backlight_update_status: ref;

axiom backlight_update_status == $sub.ref(0, 311364);

procedure backlight_update_status($p0: ref);



const ldv__builtin_expect: ref;

axiom ldv__builtin_expect == $sub.ref(0, 312396);

procedure ldv__builtin_expect($i0: i64, $i1: i64) returns ($r: i64);



const dev_set_drvdata: ref;

axiom dev_set_drvdata == $sub.ref(0, 313428);

procedure dev_set_drvdata($p0: ref, $p1: ref) returns ($r: i32);



const ioremap: ref;

axiom ioremap == $sub.ref(0, 314460);

procedure ioremap($i0: i64, $i1: i64) returns ($r: ref);



const pci_read_config_word: ref;

axiom pci_read_config_word == $sub.ref(0, 315492);

procedure pci_read_config_word($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



const pci_write_config_word: ref;

axiom pci_write_config_word == $sub.ref(0, 316524);

procedure pci_write_config_word($p0: ref, $i1: i32, $i2: i16) returns ($r: i32);



const correct_chipset: ref;

axiom correct_chipset == $sub.ref(0, 317556);

procedure correct_chipset($p0: ref) returns ($r: i32);



const inb: ref;

axiom inb == $sub.ref(0, 318588);

procedure inb($i0: i32) returns ($r: i8);



const pci_bus_write_config_word: ref;

axiom pci_bus_write_config_word == $sub.ref(0, 319620);

procedure pci_bus_write_config_word($p0: ref, $i1: i32, $i2: i32, $i3: i16) returns ($r: i32);



const pci_bus_read_config_word: ref;

axiom pci_bus_read_config_word == $sub.ref(0, 320652);

procedure pci_bus_read_config_word($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const ioremap_nocache: ref;

axiom ioremap_nocache == $sub.ref(0, 321684);

procedure ioremap_nocache($i0: i64, $i1: i64) returns ($r: ref);



const atyfb_reboot_notify: ref;

axiom atyfb_reboot_notify == $sub.ref(0, 322716);

procedure atyfb_reboot_notify($p0: ref, $i1: i64, $p2: ref) returns ($r: i32);



const lock_fb_info: ref;

axiom lock_fb_info == $sub.ref(0, 323748);

procedure lock_fb_info($p0: ref) returns ($r: i32);



const unlock_fb_info: ref;

axiom unlock_fb_info == $sub.ref(0, 324780);

procedure unlock_fb_info($p0: ref);



const atyfb_open: ref;

axiom atyfb_open == $sub.ref(0, 325812);

procedure atyfb_open($p0: ref, $i1: i32) returns ($r: i32);



const atyfb_release: ref;

axiom atyfb_release == $sub.ref(0, 326844);

procedure atyfb_release($p0: ref, $i1: i32) returns ($r: i32);



const atyfb_setcolreg: ref;

axiom atyfb_setcolreg == $sub.ref(0, 327876);

procedure atyfb_setcolreg($i0: i32, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref) returns ($r: i32);



const atyfb_pan_display: ref;

axiom atyfb_pan_display == $sub.ref(0, 328908);

procedure atyfb_pan_display($p0: ref, $p1: ref) returns ($r: i32);



const atyfb_fillrect: ref;

axiom atyfb_fillrect == $sub.ref(0, 329940);

procedure atyfb_fillrect($p0: ref, $p1: ref);



const atyfb_copyarea: ref;

axiom atyfb_copyarea == $sub.ref(0, 330972);

procedure atyfb_copyarea($p0: ref, $p1: ref);



const atyfb_imageblit: ref;

axiom atyfb_imageblit == $sub.ref(0, 332004);

procedure atyfb_imageblit($p0: ref, $p1: ref);



const atyfb_ioctl: ref;

axiom atyfb_ioctl == $sub.ref(0, 333036);

procedure atyfb_ioctl($p0: ref, $i1: i32, $i2: i64) returns ($r: i32);



const might_fault: ref;

axiom might_fault == $sub.ref(0, 334068);

procedure might_fault();



const aty_waitforvblank: ref;

axiom aty_waitforvblank == $sub.ref(0, 335100);

procedure aty_waitforvblank($p0: ref, $i1: i32) returns ($r: i32);



const aty_enable_irq: ref;

axiom aty_enable_irq == $sub.ref(0, 336132);

procedure aty_enable_irq($p0: ref, $i1: i32) returns ($r: i32);



const autoremove_wake_function: ref;

axiom autoremove_wake_function == $sub.ref(0, 337164);

procedure autoremove_wake_function($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



const prepare_to_wait: ref;

axiom prepare_to_wait == $sub.ref(0, 338196);

procedure prepare_to_wait($p0: ref, $p1: ref, $i2: i32);



const signal_pending: ref;

axiom signal_pending == $sub.ref(0, 339228);

procedure signal_pending($p0: ref) returns ($r: i32);



const schedule_timeout: ref;

axiom schedule_timeout == $sub.ref(0, 340260);

procedure schedule_timeout($i0: i64) returns ($r: i64);



const finish_wait: ref;

axiom finish_wait == $sub.ref(0, 341292);

procedure finish_wait($p0: ref, $p1: ref);



const test_tsk_thread_flag: ref;

axiom test_tsk_thread_flag == $sub.ref(0, 342324);

procedure test_tsk_thread_flag($p0: ref, $i1: i32) returns ($r: i32);



const test_ti_thread_flag: ref;

axiom test_ti_thread_flag == $sub.ref(0, 343356);

procedure test_ti_thread_flag($p0: ref, $i1: i32) returns ($r: i32);



const variable_test_bit: ref;

axiom variable_test_bit == $sub.ref(0, 344388);

procedure variable_test_bit($i0: i32, $p1: ref) returns ($r: i32);



const test_and_set_bit: ref;

axiom test_and_set_bit == $sub.ref(0, 345420);

procedure test_and_set_bit($i0: i32, $p1: ref) returns ($r: i32);



const spin_lock_irq: ref;

axiom spin_lock_irq == $sub.ref(0, 346452);

procedure spin_lock_irq($p0: ref);



const spin_unlock_irq: ref;

axiom spin_unlock_irq == $sub.ref(0, 347484);

procedure spin_unlock_irq($p0: ref);



const aty_irq: ref;

axiom aty_irq == $sub.ref(0, 348516);

procedure aty_irq($i0: i32, $p1: ref) returns ($r: i32);



const request_irq: ref;

axiom request_irq == $sub.ref(0, 349548);

procedure request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref) returns ($r: i32);



const request_threaded_irq: ref;

axiom request_threaded_irq == $sub.ref(0, 350580);

procedure request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref) returns ($r: i32);



const spin_lock: ref;

axiom spin_lock == $sub.ref(0, 351612);

procedure spin_lock($p0: ref);



const __wake_up: ref;

axiom __wake_up == $sub.ref(0, 352644);

procedure __wake_up($p0: ref, $i1: i32, $i2: i32, $p3: ref);



const spin_unlock: ref;

axiom spin_unlock == $sub.ref(0, 353676);

procedure spin_unlock($p0: ref);



const _raw_spin_unlock: ref;

axiom _raw_spin_unlock == $sub.ref(0, 354708);

procedure _raw_spin_unlock($p0: ref);



const _raw_spin_lock: ref;

axiom _raw_spin_lock == $sub.ref(0, 355740);

procedure _raw_spin_lock($p0: ref);



const _raw_spin_unlock_irq: ref;

axiom _raw_spin_unlock_irq == $sub.ref(0, 356772);

procedure _raw_spin_unlock_irq($p0: ref);



const _raw_spin_lock_irq: ref;

axiom _raw_spin_lock_irq == $sub.ref(0, 357804);

procedure _raw_spin_lock_irq($p0: ref);



const __might_sleep: ref;

axiom __might_sleep == $sub.ref(0, 358836);

procedure __might_sleep($p0: ref, $i1: i32, $i2: i32);



const cfb_imageblit: ref;

axiom cfb_imageblit == $sub.ref(0, 359868);

procedure cfb_imageblit($p0: ref, $p1: ref);



const rotation24bpp: ref;

axiom rotation24bpp == $sub.ref(0, 360900);

procedure rotation24bpp($i0: i32, $i1: i32) returns ($r: i32);



const draw_rect: ref;

axiom draw_rect == $sub.ref(0, 361932);

procedure draw_rect($i0: i16, $i1: i16, $i2: i16, $i3: i16, $p4: ref);



const __le32_to_cpup: ref;

axiom __le32_to_cpup == $sub.ref(0, 362964);

procedure __le32_to_cpup($p0: ref) returns ($r: i32);



const cfb_copyarea: ref;

axiom cfb_copyarea == $sub.ref(0, 363996);

procedure cfb_copyarea($p0: ref, $p1: ref);



const cfb_fillrect: ref;

axiom cfb_fillrect == $sub.ref(0, 365028);

procedure cfb_fillrect($p0: ref, $p1: ref);



const set_off_pitch: ref;

axiom set_off_pitch == $sub.ref(0, 366060);

procedure set_off_pitch($p0: ref, $p1: ref);



const aty_st_pal: ref;

axiom aty_st_pal == $sub.ref(0, 367092);

procedure aty_st_pal($i0: i32, $i1: i32, $i2: i32, $i3: i32, $p4: ref);



const aty_disable_irq: ref;

axiom aty_disable_irq == $sub.ref(0, 368124);

procedure aty_disable_irq($p0: ref) returns ($r: i32);



const test_and_clear_bit: ref;

axiom test_and_clear_bit == $sub.ref(0, 369156);

procedure test_and_clear_bit($i0: i32, $p1: ref) returns ($r: i32);



const free_irq: ref;

axiom free_irq == $sub.ref(0, 370188);

procedure free_irq($i0: i32, $p1: ref);



const aty_bl_update_status: ref;

axiom aty_bl_update_status == $sub.ref(0, 371220);

procedure aty_bl_update_status($p0: ref) returns ($r: i32);



const aty_bl_get_brightness: ref;

axiom aty_bl_get_brightness == $sub.ref(0, 372252);

procedure aty_bl_get_brightness($p0: ref) returns ($r: i32);



const bl_get_data: ref;

axiom bl_get_data == $sub.ref(0, 373284);

procedure bl_get_data($p0: ref) returns ($r: ref);



const aty_bl_get_level_brightness: ref;

axiom aty_bl_get_level_brightness == $sub.ref(0, 374316);

procedure aty_bl_get_level_brightness($p0: ref, $i1: i32) returns ($r: i32);



const atyfb_init: ref;

axiom atyfb_init == $sub.ref(0, 375348);

procedure atyfb_init() returns ($r: i32);



const __pci_register_driver: ref;

axiom __pci_register_driver == $sub.ref(0, 376380);

procedure __pci_register_driver($p0: ref, $p1: ref, $p2: ref) returns ($r: i32);



const dmi_check_system: ref;

axiom dmi_check_system == $sub.ref(0, 377412);

procedure dmi_check_system($p0: ref) returns ($r: i32);



const register_reboot_notifier: ref;

axiom register_reboot_notifier == $sub.ref(0, 378444);

procedure register_reboot_notifier($p0: ref) returns ($r: i32);



const atyfb_exit: ref;

axiom atyfb_exit == $sub.ref(0, 379476);

procedure atyfb_exit();



const unregister_reboot_notifier: ref;

axiom unregister_reboot_notifier == $sub.ref(0, 380508);

procedure unregister_reboot_notifier($p0: ref) returns ($r: i32);



const pci_unregister_driver: ref;

axiom pci_unregister_driver == $sub.ref(0, 381540);

procedure pci_unregister_driver($p0: ref);



const main: ref;

axiom main == $sub.ref(0, 382572);

procedure {:entrypoint} main();



const ldv_initialize: ref;

axiom ldv_initialize == $sub.ref(0, 383604);

procedure ldv_initialize();



const ldv_check_return_value: ref;

axiom ldv_check_return_value == $sub.ref(0, 384636);

procedure ldv_check_return_value($i0: i32);



const ldv_check_final_state: ref;

axiom ldv_check_final_state == $sub.ref(0, 385668);

procedure ldv_check_final_state();



const __VERIFIER_assume: ref;

axiom __VERIFIER_assume == $sub.ref(0, 386700);

procedure __VERIFIER_assume($i0: i32);



const __SMACK_code: ref;

axiom __SMACK_code == $sub.ref(0, 387732);

procedure __SMACK_code.ref($p0: ref);



procedure __SMACK_code.ref.i32($p0: ref, p.1: i32);



const __SMACK_dummy: ref;

axiom __SMACK_dummy == $sub.ref(0, 388764);

procedure __SMACK_dummy($i0: i32);



const __VERIFIER_error: ref;

axiom __VERIFIER_error == $sub.ref(0, 389796);

procedure __VERIFIER_error();



const __SMACK_check_overflow: ref;

axiom __SMACK_check_overflow == $sub.ref(0, 390828);

procedure __SMACK_check_overflow($i0: i32);



const __SMACK_nondet_char: ref;

axiom __SMACK_nondet_char == $sub.ref(0, 391860);

procedure __SMACK_nondet_char() returns ($r: i8);



const __SMACK_nondet_signed_char: ref;

axiom __SMACK_nondet_signed_char == $sub.ref(0, 392892);

procedure __SMACK_nondet_signed_char() returns ($r: i8);



const __SMACK_nondet_unsigned_char: ref;

axiom __SMACK_nondet_unsigned_char == $sub.ref(0, 393924);

procedure __SMACK_nondet_unsigned_char() returns ($r: i8);



const __SMACK_nondet_short: ref;

axiom __SMACK_nondet_short == $sub.ref(0, 394956);

procedure __SMACK_nondet_short() returns ($r: i16);



const __SMACK_nondet_signed_short: ref;

axiom __SMACK_nondet_signed_short == $sub.ref(0, 395988);

procedure __SMACK_nondet_signed_short() returns ($r: i16);



const __SMACK_nondet_signed_short_int: ref;

axiom __SMACK_nondet_signed_short_int == $sub.ref(0, 397020);

procedure __SMACK_nondet_signed_short_int() returns ($r: i16);



const __SMACK_nondet_unsigned_short: ref;

axiom __SMACK_nondet_unsigned_short == $sub.ref(0, 398052);

procedure __SMACK_nondet_unsigned_short() returns ($r: i16);



const __SMACK_nondet_unsigned_short_int: ref;

axiom __SMACK_nondet_unsigned_short_int == $sub.ref(0, 399084);

procedure __SMACK_nondet_unsigned_short_int() returns ($r: i16);



const __VERIFIER_nondet_int: ref;

axiom __VERIFIER_nondet_int == $sub.ref(0, 400116);

procedure __VERIFIER_nondet_int() returns ($r: i32);



const __SMACK_nondet_int: ref;

axiom __SMACK_nondet_int == $sub.ref(0, 401148);

procedure __SMACK_nondet_int() returns ($r: i32);



const __SMACK_nondet_signed_int: ref;

axiom __SMACK_nondet_signed_int == $sub.ref(0, 402180);

procedure __SMACK_nondet_signed_int() returns ($r: i32);



const __SMACK_nondet_unsigned: ref;

axiom __SMACK_nondet_unsigned == $sub.ref(0, 403212);

procedure __SMACK_nondet_unsigned() returns ($r: i32);



const __SMACK_nondet_unsigned_int: ref;

axiom __SMACK_nondet_unsigned_int == $sub.ref(0, 404244);

procedure __SMACK_nondet_unsigned_int() returns ($r: i32);



const __VERIFIER_nondet_long: ref;

axiom __VERIFIER_nondet_long == $sub.ref(0, 405276);

procedure __VERIFIER_nondet_long() returns ($r: i64);



const __SMACK_nondet_long: ref;

axiom __SMACK_nondet_long == $sub.ref(0, 406308);

procedure __SMACK_nondet_long() returns ($r: i64);



const __SMACK_nondet_long_int: ref;

axiom __SMACK_nondet_long_int == $sub.ref(0, 407340);

procedure __SMACK_nondet_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long: ref;

axiom __SMACK_nondet_signed_long == $sub.ref(0, 408372);

procedure __SMACK_nondet_signed_long() returns ($r: i64);



const __SMACK_nondet_signed_long_int: ref;

axiom __SMACK_nondet_signed_long_int == $sub.ref(0, 409404);

procedure __SMACK_nondet_signed_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long: ref;

axiom __SMACK_nondet_unsigned_long == $sub.ref(0, 410436);

procedure __SMACK_nondet_unsigned_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_int: ref;

axiom __SMACK_nondet_unsigned_long_int == $sub.ref(0, 411468);

procedure __SMACK_nondet_unsigned_long_int() returns ($r: i64);



const __SMACK_nondet_long_long: ref;

axiom __SMACK_nondet_long_long == $sub.ref(0, 412500);

procedure __SMACK_nondet_long_long() returns ($r: i64);



const __SMACK_nondet_long_long_int: ref;

axiom __SMACK_nondet_long_long_int == $sub.ref(0, 413532);

procedure __SMACK_nondet_long_long_int() returns ($r: i64);



const __SMACK_nondet_signed_long_long: ref;

axiom __SMACK_nondet_signed_long_long == $sub.ref(0, 414564);

procedure __SMACK_nondet_signed_long_long() returns ($r: i64);



const __SMACK_nondet_signed_long_long_int: ref;

axiom __SMACK_nondet_signed_long_long_int == $sub.ref(0, 415596);

procedure __SMACK_nondet_signed_long_long_int() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long: ref;

axiom __SMACK_nondet_unsigned_long_long == $sub.ref(0, 416628);

procedure __SMACK_nondet_unsigned_long_long() returns ($r: i64);



const __SMACK_nondet_unsigned_long_long_int: ref;

axiom __SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 417660);

procedure __SMACK_nondet_unsigned_long_long_int() returns ($r: i64);



const __VERIFIER_nondet_pointer: ref;

axiom __VERIFIER_nondet_pointer == $sub.ref(0, 418692);

procedure __VERIFIER_nondet_pointer() returns ($r: ref);



const __VERIFIER_nondet: ref;

axiom __VERIFIER_nondet == $sub.ref(0, 419724);

procedure __VERIFIER_nondet() returns ($r: ref);



const __SMACK_decls: ref;

axiom __SMACK_decls == $sub.ref(0, 420756);

function {:inline} $bitcast.ref.ref(i: ref) : ref
{
  i
}

function {:inline} $zext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 1bv8)
}

function {:inline} $zext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 1bv16)
}

function {:inline} $zext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 1bv24)
}

function {:inline} $zext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 1bv32)
}

function {:inline} $zext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1bv40)
}

function {:inline} $zext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 1bv48)
}

function {:inline} $zext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 1bv56)
}

function {:inline} $zext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 1bv64)
}

function {:inline} $zext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1bv80)
}

function {:inline} $zext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 1bv88)
}

function {:inline} $zext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 1bv96)
}

function {:inline} $zext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 1bv128)
}

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) : bv128;

function {:inline} $sext.bv1.bv8(i: bv1) : bv8
{
  (if i == 0bv1 then 0bv8 else 255bv8)
}

function {:inline} $sext.bv1.bv16(i: bv1) : bv16
{
  (if i == 0bv1 then 0bv16 else 65535bv16)
}

function {:inline} $sext.bv1.bv24(i: bv1) : bv24
{
  (if i == 0bv1 then 0bv24 else 16777215bv24)
}

function {:inline} $sext.bv1.bv32(i: bv1) : bv32
{
  (if i == 0bv1 then 0bv32 else 4294967295bv32)
}

function {:inline} $sext.bv1.bv40(i: bv1) : bv40
{
  (if i == 0bv1 then 0bv40 else 1099511627775bv40)
}

function {:inline} $sext.bv1.bv48(i: bv1) : bv48
{
  (if i == 0bv1 then 0bv48 else 281474976710655bv48)
}

function {:inline} $sext.bv1.bv56(i: bv1) : bv56
{
  (if i == 0bv1 then 0bv56 else 72057594037927935bv56)
}

function {:inline} $sext.bv1.bv64(i: bv1) : bv64
{
  (if i == 0bv1 then 0bv64 else 18446744073709551615bv64)
}

function {:inline} $sext.bv1.bv80(i: bv1) : bv80
{
  (if i == 0bv1 then 0bv80 else 1208925819614629174706175bv80)
}

function {:inline} $sext.bv1.bv88(i: bv1) : bv88
{
  (if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88)
}

function {:inline} $sext.bv1.bv96(i: bv1) : bv96
{
  (if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96)
}

function {:inline} $sext.bv1.bv128(i: bv1) : bv128
{
  (if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128)
}

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) : bv16;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) : bv24;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) : bv32;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) : bv40;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) : bv48;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) : bv56;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) : bv64;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv8.bv80(i: bv8) : bv80;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) : bv88;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) : bv96;

function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) : bv24;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) : bv32;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) : bv40;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) : bv48;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) : bv56;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) : bv64;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv16.bv80(i: bv16) : bv80;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) : bv88;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) : bv96;

function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) : bv32;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) : bv40;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) : bv48;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) : bv56;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) : bv64;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv24.bv80(i: bv24) : bv80;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) : bv88;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) : bv96;

function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) : bv40;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) : bv48;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) : bv56;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) : bv64;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv32.bv80(i: bv32) : bv80;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) : bv88;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) : bv96;

function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) : bv48;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) : bv56;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) : bv64;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv40.bv80(i: bv40) : bv80;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) : bv88;

function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) : bv96;

function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) : bv56;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) : bv64;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv48.bv80(i: bv48) : bv80;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) : bv88;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) : bv96;

function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) : bv64;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv56.bv80(i: bv56) : bv80;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) : bv88;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) : bv96;

function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) : bv128;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv64.bv80(i: bv64) : bv80;

function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) : bv88;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) : bv96;

function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv80.bv88(i: bv80) : bv88;

function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv80.bv96(i: bv80) : bv96;

function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv80.bv128(i: bv80) : bv128;

function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) : bv96;

function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) : bv128;

function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) : bv128;

function {:builtin "div"} $div(i1: int, i2: int) : int;

function {:builtin "mod"} $mod(i1: int, i2: int) : int;

function {:builtin "rem"} $rem(i1: int, i2: int) : int;

function {:inline} $min(i1: int, i2: int) : int
{
  (if i1 < i2 then i1 else i2)
}

function {:inline} $max(i1: int, i2: int) : int
{
  (if i1 > i2 then i1 else i2)
}

axiom $and.i1(0, 0) == 0;

axiom $and.i1(0, 1) == 0;

axiom $and.i1(1, 0) == 0;

axiom $and.i1(1, 1) == 1;

axiom $or.i1(0, 0) == 0;

axiom $or.i1(0, 1) == 1;

axiom $or.i1(1, 0) == 1;

axiom $or.i1(1, 1) == 1;

axiom $xor.i1(0, 0) == 0;

axiom $xor.i1(0, 1) == 1;

axiom $xor.i1(1, 0) == 1;

axiom $xor.i1(1, 1) == 0;

axiom $and.i32(32, 16) == 0;

function $fp(ipart: int, fpart: int, epart: int) : float;

function $fadd.float(i1: float, i2: float) : float;

function $fsub.float(i1: float, i2: float) : float;

function $fmul.float(i1: float, i2: float) : float;

function $fdiv.float(i1: float, i2: float) : float;

function $frem.float(i1: float, i2: float) : float;

function {:inline} $ffalse.float.bool(i1: float, i2: float) : bool
{
  false
}

function {:inline} $ftrue.float.bool(i1: float, i2: float) : bool
{
  true
}

function $foeq.float.bool(i1: float, i2: float) : bool;

function $foge.float.bool(i1: float, i2: float) : bool;

function $fogt.float.bool(i1: float, i2: float) : bool;

function $fole.float.bool(i1: float, i2: float) : bool;

function $folt.float.bool(i1: float, i2: float) : bool;

function $fone.float.bool(i1: float, i2: float) : bool;

function $ford.float.bool(i1: float, i2: float) : bool;

function $fueq.float.bool(i1: float, i2: float) : bool;

function $fuge.float.bool(i1: float, i2: float) : bool;

function $fugt.float.bool(i1: float, i2: float) : bool;

function $fule.float.bool(i1: float, i2: float) : bool;

function $fult.float.bool(i1: float, i2: float) : bool;

function $fune.float.bool(i1: float, i2: float) : bool;

function $funo.float.bool(i1: float, i2: float) : bool;

function $fp2si.float.i128(i: float) : i128;

function $fp2ui.float.i128(i: float) : i128;

function $fp2si.float.i96(i: float) : i96;

function $fp2ui.float.i96(i: float) : i96;

function $fp2si.float.i88(i: float) : i88;

function $fp2ui.float.i88(i: float) : i88;

function $fp2si.float.i80(i: float) : i80;

function $fp2ui.float.i80(i: float) : i80;

function $fp2si.float.i64(i: float) : i64;

function $fp2ui.float.i64(i: float) : i64;

function $fp2si.float.i56(i: float) : i56;

function $fp2ui.float.i56(i: float) : i56;

function $fp2si.float.i48(i: float) : i48;

function $fp2ui.float.i48(i: float) : i48;

function $fp2si.float.i40(i: float) : i40;

function $fp2ui.float.i40(i: float) : i40;

function $fp2si.float.i32(i: float) : i32;

function $fp2ui.float.i32(i: float) : i32;

function $fp2si.float.i24(i: float) : i24;

function $fp2ui.float.i24(i: float) : i24;

function $fp2si.float.i16(i: float) : i16;

function $fp2ui.float.i16(i: float) : i16;

function $fp2si.float.i8(i: float) : i8;

function $fp2ui.float.i8(i: float) : i8;

function $fp2si.float.i1(i: float) : i1;

function $fp2ui.float.i1(i: float) : i1;

function $si2fp.i128.float(i: i128) : float;

function $ui2fp.i128.float(i: i128) : float;

function $si2fp.i96.float(i: i96) : float;

function $ui2fp.i96.float(i: i96) : float;

function $si2fp.i88.float(i: i88) : float;

function $ui2fp.i88.float(i: i88) : float;

function $si2fp.i80.float(i: i80) : float;

function $ui2fp.i80.float(i: i80) : float;

function $si2fp.i64.float(i: i64) : float;

function $ui2fp.i64.float(i: i64) : float;

function $si2fp.i56.float(i: i56) : float;

function $ui2fp.i56.float(i: i56) : float;

function $si2fp.i48.float(i: i48) : float;

function $ui2fp.i48.float(i: i48) : float;

function $si2fp.i40.float(i: i40) : float;

function $ui2fp.i40.float(i: i40) : float;

function $si2fp.i32.float(i: i32) : float;

function $ui2fp.i32.float(i: i32) : float;

function $si2fp.i24.float(i: i24) : float;

function $ui2fp.i24.float(i: i24) : float;

function $si2fp.i16.float(i: i16) : float;

function $ui2fp.i16.float(i: i16) : float;

function $si2fp.i8.float(i: i8) : float;

function $ui2fp.i8.float(i: i8) : float;

function $si2fp.i1.float(i: i1) : float;

function $ui2fp.i1.float(i: i1) : float;

function $fp2si.float.bv128(i: float) : bv128;

function $fp2ui.float.bv128(i: float) : bv128;

function $fp2si.float.bv96(i: float) : bv96;

function $fp2ui.float.bv96(i: float) : bv96;

function $fp2si.float.bv88(i: float) : bv88;

function $fp2ui.float.bv88(i: float) : bv88;

function $fp2si.float.bv80(i: float) : bv80;

function $fp2ui.float.bv80(i: float) : bv80;

function $fp2si.float.bv64(i: float) : bv64;

function $fp2ui.float.bv64(i: float) : bv64;

function $fp2si.float.bv56(i: float) : bv56;

function $fp2ui.float.bv56(i: float) : bv56;

function $fp2si.float.bv48(i: float) : bv48;

function $fp2ui.float.bv48(i: float) : bv48;

function $fp2si.float.bv40(i: float) : bv40;

function $fp2ui.float.bv40(i: float) : bv40;

function $fp2si.float.bv32(i: float) : bv32;

function $fp2ui.float.bv32(i: float) : bv32;

function $fp2si.float.bv24(i: float) : bv24;

function $fp2ui.float.bv24(i: float) : bv24;

function $fp2si.float.bv16(i: float) : bv16;

function $fp2ui.float.bv16(i: float) : bv16;

function $fp2si.float.bv8(i: float) : bv8;

function $fp2ui.float.bv8(i: float) : bv8;

function $fp2si.float.bv1(i: float) : bv1;

function $fp2ui.float.bv1(i: float) : bv1;

function $si2fp.bv128.float(i: bv128) : float;

function $ui2fp.bv128.float(i: bv128) : float;

function $si2fp.bv96.float(i: bv96) : float;

function $ui2fp.bv96.float(i: bv96) : float;

function $si2fp.bv88.float(i: bv88) : float;

function $ui2fp.bv88.float(i: bv88) : float;

function $si2fp.bv80.float(i: bv80) : float;

function $ui2fp.bv80.float(i: bv80) : float;

function $si2fp.bv64.float(i: bv64) : float;

function $ui2fp.bv64.float(i: bv64) : float;

function $si2fp.bv56.float(i: bv56) : float;

function $ui2fp.bv56.float(i: bv56) : float;

function $si2fp.bv48.float(i: bv48) : float;

function $ui2fp.bv48.float(i: bv48) : float;

function $si2fp.bv40.float(i: bv40) : float;

function $ui2fp.bv40.float(i: bv40) : float;

function $si2fp.bv32.float(i: bv32) : float;

function $ui2fp.bv32.float(i: bv32) : float;

function $si2fp.bv24.float(i: bv24) : float;

function $ui2fp.bv24.float(i: bv24) : float;

function $si2fp.bv16.float(i: bv16) : float;

function $ui2fp.bv16.float(i: bv16) : float;

function $si2fp.bv8.float(i: bv8) : float;

function $ui2fp.bv8.float(i: bv8) : float;

function $si2fp.bv1.float(i: bv1) : float;

function $ui2fp.bv1.float(i: bv1) : float;

function $fptrunc.float.float(i: float) : float;

function $fpext.float.float(i: float) : float;

function $bitcast.float.i1(i: float) : i1;

function $bitcast.float.bv1(i: float) : bv1;

function $bitcast.i1.float(i: i1) : float;

function $bitcast.bv1.float(i: bv1) : float;

function $bitcast.float.i8(i: float) : i8;

function $bitcast.float.bv8(i: float) : bv8;

function $bitcast.i8.float(i: i8) : float;

function $bitcast.bv8.float(i: bv8) : float;

function $bitcast.float.i16(i: float) : i16;

function $bitcast.float.bv16(i: float) : bv16;

function $bitcast.i16.float(i: i16) : float;

function $bitcast.bv16.float(i: bv16) : float;

function $bitcast.float.i32(i: float) : i32;

function $bitcast.float.bv32(i: float) : bv32;

function $bitcast.i32.float(i: i32) : float;

function $bitcast.bv32.float(i: bv32) : float;

function $bitcast.float.i64(i: float) : i64;

function $bitcast.float.bv64(i: float) : bv64;

function $bitcast.i64.float(i: i64) : float;

function $bitcast.bv64.float(i: bv64) : float;

function $bitcast.float.i80(i: float) : i80;

function $bitcast.float.bv80(i: float) : bv80;

function $bitcast.i80.float(i: i80) : float;

function $bitcast.bv80.float(i: bv80) : float;

const $GLOBALS_BOTTOM: ref;

const $EXTERNS_BOTTOM: ref;

const $MALLOC_TOP: ref;

function {:inline} $isExternal(p: ref) : bool
{
  $slt.ref.bool(p, $EXTERNS_BOTTOM)
}

function {:inline} $load.bytes.bv16(M: [ref]bv8, p: ref) : bv16
{
  $load.bytes.bv8(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv24(M: [ref]bv8, p: ref) : bv24
{
  $load.bytes.bv16(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv32(M: [ref]bv8, p: ref) : bv32
{
  $load.bytes.bv24(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv40(M: [ref]bv8, p: ref) : bv40
{
  $load.bytes.bv32(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv48(M: [ref]bv8, p: ref) : bv48
{
  $load.bytes.bv40(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv56(M: [ref]bv8, p: ref) : bv56
{
  $load.bytes.bv48(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv64(M: [ref]bv8, p: ref) : bv64
{
  $load.bytes.bv56(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv72(M: [ref]bv8, p: ref) : bv72
{
  $load.bytes.bv64(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv80(M: [ref]bv8, p: ref) : bv80
{
  $load.bytes.bv72(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv88(M: [ref]bv8, p: ref) : bv88
{
  $load.bytes.bv80(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv96(M: [ref]bv8, p: ref) : bv96
{
  $load.bytes.bv88(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv104(M: [ref]bv8, p: ref) : bv104
{
  $load.bytes.bv96(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv112(M: [ref]bv8, p: ref) : bv112
{
  $load.bytes.bv104(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv120(M: [ref]bv8, p: ref) : bv120
{
  $load.bytes.bv112(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv128(M: [ref]bv8, p: ref) : bv128
{
  $load.bytes.bv120(M, $add.ref(p, $1.ref)) ++ $load.bytes.bv8(M, p)
}

function {:inline} $load.bytes.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $load.bytes.bv1(M: [ref]bv8, p: ref) : bv1
{
  $trunc.bv8.bv1(M[p])
}

function {:inline} $store.bytes.bv16(M: [ref]bv8, p: ref, v: bv16) : [ref]bv8
{
  $store.bytes.bv8(M, $add.ref(p, $1.ref), v[16:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv24(M: [ref]bv8, p: ref, v: bv24) : [ref]bv8
{
  $store.bytes.bv16(M, $add.ref(p, $1.ref), v[24:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv32(M: [ref]bv8, p: ref, v: bv32) : [ref]bv8
{
  $store.bytes.bv24(M, $add.ref(p, $1.ref), v[32:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv40(M: [ref]bv8, p: ref, v: bv40) : [ref]bv8
{
  $store.bytes.bv32(M, $add.ref(p, $1.ref), v[40:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv48(M: [ref]bv8, p: ref, v: bv48) : [ref]bv8
{
  $store.bytes.bv40(M, $add.ref(p, $1.ref), v[48:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv56(M: [ref]bv8, p: ref, v: bv56) : [ref]bv8
{
  $store.bytes.bv48(M, $add.ref(p, $1.ref), v[56:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv64(M: [ref]bv8, p: ref, v: bv64) : [ref]bv8
{
  $store.bytes.bv56(M, $add.ref(p, $1.ref), v[64:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv72(M: [ref]bv8, p: ref, v: bv72) : [ref]bv8
{
  $store.bytes.bv64(M, $add.ref(p, $1.ref), v[72:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv80(M: [ref]bv8, p: ref, v: bv80) : [ref]bv8
{
  $store.bytes.bv72(M, $add.ref(p, $1.ref), v[80:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv88(M: [ref]bv8, p: ref, v: bv88) : [ref]bv8
{
  $store.bytes.bv80(M, $add.ref(p, $1.ref), v[88:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv96(M: [ref]bv8, p: ref, v: bv96) : [ref]bv8
{
  $store.bytes.bv88(M, $add.ref(p, $1.ref), v[96:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv104(M: [ref]bv8, p: ref, v: bv104) : [ref]bv8
{
  $store.bytes.bv96(M, $add.ref(p, $1.ref), v[104:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv112(M: [ref]bv8, p: ref, v: bv112) : [ref]bv8
{
  $store.bytes.bv104(M, $add.ref(p, $1.ref), v[112:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv120(M: [ref]bv8, p: ref, v: bv120) : [ref]bv8
{
  $store.bytes.bv112(M, $add.ref(p, $1.ref), v[120:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv128(M: [ref]bv8, p: ref, v: bv128) : [ref]bv8
{
  $store.bytes.bv120(M, $add.ref(p, $1.ref), v[128:8])[p := v[8:0]]
}

function {:inline} $store.bytes.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:inline} $store.bytes.bv1(M: [ref]bv8, p: ref, v: bv1) : [ref]bv8
{
  M[p := $zext.bv1.bv8(v)]
}

function {:inline} $load.ref(M: [ref]ref, p: ref) : ref
{
  M[p]
}

function {:inline} $store.ref(M: [ref]ref, p: ref, v: ref) : [ref]ref
{
  M[p := v]
}

function {:inline} $load.float(M: [ref]float, p: ref) : float
{
  M[p]
}

function {:inline} $load.unsafe.float(M: [ref]i8, p: ref) : float
{
  $bitcast.i8.float(M[p])
}

function {:inline} $store.float(M: [ref]float, p: ref, v: float) : [ref]float
{
  M[p := v]
}

function {:inline} $store.unsafe.float(M: [ref]i8, p: ref, v: float) : [ref]i8
{
  M[p := $bitcast.float.i8(v)]
}

function {:inline} $load.bytes.float(M: [ref]bv8, p: ref) : float
{
  $bitcast.bv8.float(M[p])
}

function {:inline} $store.bytes.float(M: [ref]bv8, p: ref, v: float) : [ref]bv8
{
  M[p := $bitcast.float.bv8(v)]
}

type $mop;

procedure boogie_si_record_mop(m: $mop);



const $MOP: $mop;

function $extractvalue(p: int, i: int) : int;

procedure $alloc(n: ref) returns (p: ref);



procedure $malloc(n: ref) returns (p: ref);



procedure $$alloc(n: ref) returns (p: ref);



procedure $free(p: ref);



const __SMACK_top_decl: ref;

axiom __SMACK_top_decl == $sub.ref(0, 421788);

procedure __SMACK_top_decl.ref($p0: ref);



const __SMACK_init_func_memory_model: ref;

axiom __SMACK_init_func_memory_model == $sub.ref(0, 422820);

procedure __SMACK_init_func_memory_model();



const llvm.dbg.value: ref;

axiom llvm.dbg.value == $sub.ref(0, 423852);

procedure llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);



const __SMACK_static_init: ref;

axiom __SMACK_static_init == $sub.ref(0, 424884);

procedure __SMACK_static_init();



const devirtbounce: ref;

axiom devirtbounce == $sub.ref(0, 425916);

procedure devirtbounce(funcPtr: ref, arg: i8, arg1: ref);



const devirtbounce.1: ref;

axiom devirtbounce.1 == $sub.ref(0, 426948);

procedure devirtbounce.1(funcPtr: ref, arg: i32, arg1: ref);



const devirtbounce.2: ref;

axiom devirtbounce.2 == $sub.ref(0, 427980);

procedure devirtbounce.2(funcPtr: ref, arg: ref) returns ($r: i8);



const devirtbounce.3: ref;

axiom devirtbounce.3 == $sub.ref(0, 429012);

procedure devirtbounce.3(funcPtr: ref, arg: ref) returns ($r: i32);



const devirtbounce.4: ref;

axiom devirtbounce.4 == $sub.ref(0, 430044);

procedure devirtbounce.4(funcPtr: ref, arg: ref, arg1: ref);



const devirtbounce.5: ref;

axiom devirtbounce.5 == $sub.ref(0, 431076);

procedure devirtbounce.5(funcPtr: ref, arg: ref, arg1: i32, arg2: i32, arg3: ref) returns ($r: i32);



const devirtbounce.6: ref;

axiom devirtbounce.6 == $sub.ref(0, 432108);

procedure devirtbounce.6(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: i32) returns ($r: i32);



const devirtbounce.7: ref;

axiom devirtbounce.7 == $sub.ref(0, 433140);

procedure devirtbounce.7(funcPtr: ref, arg: ref, arg1: ref) returns ($r: i32);



const devirtbounce.8: ref;

axiom devirtbounce.8 == $sub.ref(0, 434172);

procedure devirtbounce.8(funcPtr: ref, arg: ref, arg1: ref);



const devirtbounce.9: ref;

axiom devirtbounce.9 == $sub.ref(0, 435204);

procedure devirtbounce.9(funcPtr: ref, arg: ref) returns ($r: i32);



const devirtbounce.10: ref;

axiom devirtbounce.10 == $sub.ref(0, 436236);

procedure devirtbounce.10(funcPtr: ref, arg: i32) returns ($r: i8);



const devirtbounce.11: ref;

axiom devirtbounce.11 == $sub.ref(0, 437268);

procedure devirtbounce.11(funcPtr: ref, arg: ref) returns ($r: ref);



const devirtbounce.12: ref;

axiom devirtbounce.12 == $sub.ref(0, 438300);

procedure devirtbounce.12(funcPtr: ref, arg: ref) returns ($r: ref);



const devirtbounce.13: ref;

axiom devirtbounce.13 == $sub.ref(0, 439332);

procedure devirtbounce.13(funcPtr: ref, arg: ref, arg1: i32, arg2: ref);



const devirtbounce.14: ref;

axiom devirtbounce.14 == $sub.ref(0, 440364);

procedure devirtbounce.14(funcPtr: ref, arg: ref, arg1: i32) returns ($r: i32);



const devirtbounce.15: ref;

axiom devirtbounce.15 == $sub.ref(0, 441396);

procedure devirtbounce.15(funcPtr: ref, arg: ref, arg1: i32, arg2: ref) returns ($r: i32);



procedure $memcpy.i8(M.dst: [ref]i8, M.src: [ref]i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);



procedure $memset.i8(M: [ref]i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref]i8);



const $u0: i32;

const $u1: i64;

const $u10: ref;

const $u2: ref;

const $u3: ref;

const $u4: ref;

const $u5: ref;

const $u6: ref;

const $u7: ref;

const $u8: ref;

const $u9: ref;

procedure boogie_si_record_i1(x: i1);



procedure boogie_si_record_i16(x: i16);



procedure boogie_si_record_i32(x: i32);



procedure boogie_si_record_i64(x: i64);



procedure boogie_si_record_i8(x: i8);



procedure boogie_si_record_ref(x: ref);



procedure $initialize();



function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $add.i1(i1: i1, i2: i1) : i1
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $sub.i1(i1: i1, i2: i1) : i1
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) : bv1;

function {:inline} $mul.i1(i1: i1, i2: i1) : i1
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) : bv1;

function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) : bv1;

function $shl.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) : bv1;

function $lshr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) : bv1;

function $ashr.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) : bv1;

function $and.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) : bv1;

function $or.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) : bv1;

function $xor.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) : bv1;

function $nand.i1(i1: i1, i2: i1) : i1;

function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ule.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ule.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $ule.i1(i1: i1, i2: i1) : i1
{
  (if $ule.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ult.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $ult.i1(i1: i1, i2: i1) : i1
{
  (if $ult.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $uge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $uge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $uge.i1(i1: i1, i2: i1) : i1
{
  (if $uge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $ugt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $ugt.i1(i1: i1, i2: i1) : i1
{
  (if $ugt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sle.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sle.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i1.bool(i1: i1, i2: i1) : bool
{
  i1 <= i2
}

function {:inline} $sle.i1(i1: i1, i2: i1) : i1
{
  (if $sle.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $slt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 < i2
}

function {:inline} $slt.i1(i1: i1, i2: i1) : i1
{
  (if $slt.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sge.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sge.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i1.bool(i1: i1, i2: i1) : bool
{
  i1 >= i2
}

function {:inline} $sge.i1(i1: i1, i2: i1) : i1
{
  (if $sge.i1.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) : bool;

function {:inline} $sgt.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i1.bool(i1: i1, i2: i1) : bool
{
  i1 > i2
}

function {:inline} $sgt.i1(i1: i1, i2: i1) : i1
{
  (if $sgt.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 == i2
}

function {:inline} $eq.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $eq.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i1.bool(i1: i1, i2: i1) : bool
{
  i1 == i2
}

function {:inline} $eq.i1(i1: i1, i2: i1) : i1
{
  (if $eq.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) : bool
{
  i1 != i2
}

function {:inline} $ne.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ne.bv1.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i1.bool(i1: i1, i2: i1) : bool
{
  i1 != i2
}

function {:inline} $ne.i1(i1: i1, i2: i1) : i1
{
  (if $ne.i1.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $slt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $sgt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ult.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv1(i1: bv1, i2: bv1) : bv1
{
  (if $ugt.bv1.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $smax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:inline} $umin.i1(i1: i1, i2: i1) : i1
{
  $min(i1, i2)
}

function {:inline} $umax.i1(i1: i1, i2: i1) : i1
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv1(i1: bv1) : bv1;

function $not.i1(i1: i1) : i1;

function {:inline} $load.i1(M: [ref]i1, p: ref) : i1
{
  M[p]
}

function {:inline} $load.bv1(M: [ref]bv1, p: ref) : bv1
{
  M[p]
}

function {:inline} $store.i1(M: [ref]i1, p: ref, v: i1) : [ref]i1
{
  M[p := v]
}

function {:inline} $store.bv1(M: [ref]bv1, p: ref, v: bv1) : [ref]bv1
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $add.i5(i1: i5, i2: i5) : i5
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $sub.i5(i1: i5, i2: i5) : i5
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv5(i1: bv5, i2: bv5) : bv5;

function {:inline} $mul.i5(i1: i5, i2: i5) : i5
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsmod"} $smod.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvsrem"} $srem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $srem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvudiv"} $udiv.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvurem"} $urem.bv5(i1: bv5, i2: bv5) : bv5;

function {:builtin "rem"} $urem.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvshl"} $shl.bv5(i1: bv5, i2: bv5) : bv5;

function $shl.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvlshr"} $lshr.bv5(i1: bv5, i2: bv5) : bv5;

function $lshr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvashr"} $ashr.bv5(i1: bv5, i2: bv5) : bv5;

function $ashr.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvand"} $and.bv5(i1: bv5, i2: bv5) : bv5;

function $and.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvor"} $or.bv5(i1: bv5, i2: bv5) : bv5;

function $or.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvxor"} $xor.bv5(i1: bv5, i2: bv5) : bv5;

function $xor.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvnand"} $nand.bv5(i1: bv5, i2: bv5) : bv5;

function $nand.i5(i1: i5, i2: i5) : i5;

function {:bvbuiltin "bvule"} $ule.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ule.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ule.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $ule.i5(i1: i5, i2: i5) : i1
{
  (if $ule.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ult.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ult.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $ult.i5(i1: i5, i2: i5) : i1
{
  (if $ult.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $uge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $uge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $uge.i5(i1: i5, i2: i5) : i1
{
  (if $uge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $ugt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ugt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $ugt.i5(i1: i5, i2: i5) : i1
{
  (if $ugt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sle.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sle.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i5.bool(i1: i5, i2: i5) : bool
{
  i1 <= i2
}

function {:inline} $sle.i5(i1: i5, i2: i5) : i1
{
  (if $sle.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $slt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $slt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 < i2
}

function {:inline} $slt.i5(i1: i5, i2: i5) : i1
{
  (if $slt.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sge.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sge.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i5.bool(i1: i5, i2: i5) : bool
{
  i1 >= i2
}

function {:inline} $sge.i5(i1: i5, i2: i5) : i1
{
  (if $sge.i5.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv5.bool(i1: bv5, i2: bv5) : bool;

function {:inline} $sgt.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $sgt.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i5.bool(i1: i5, i2: i5) : bool
{
  i1 > i2
}

function {:inline} $sgt.i5(i1: i5, i2: i5) : i1
{
  (if $sgt.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 == i2
}

function {:inline} $eq.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $eq.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i5.bool(i1: i5, i2: i5) : bool
{
  i1 == i2
}

function {:inline} $eq.i5(i1: i5, i2: i5) : i1
{
  (if $eq.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv5.bool(i1: bv5, i2: bv5) : bool
{
  i1 != i2
}

function {:inline} $ne.bv5(i1: bv5, i2: bv5) : bv1
{
  (if $ne.bv5.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i5.bool(i1: i5, i2: i5) : bool
{
  i1 != i2
}

function {:inline} $ne.i5(i1: i5, i2: i5) : i1
{
  (if $ne.i5.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $slt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $sgt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ult.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv5(i1: bv5, i2: bv5) : bv5
{
  (if $ugt.bv5.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $smax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:inline} $umin.i5(i1: i5, i2: i5) : i5
{
  $min(i1, i2)
}

function {:inline} $umax.i5(i1: i5, i2: i5) : i5
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv5(i1: bv5) : bv5;

function $not.i5(i1: i5) : i5;

function {:inline} $load.i5(M: [ref]i5, p: ref) : i5
{
  M[p]
}

function {:inline} $load.bv5(M: [ref]bv5, p: ref) : bv5
{
  M[p]
}

function {:inline} $store.i5(M: [ref]i5, p: ref, v: i5) : [ref]i5
{
  M[p := v]
}

function {:inline} $store.bv5(M: [ref]bv5, p: ref, v: bv5) : [ref]bv5
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $add.i6(i1: i6, i2: i6) : i6
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $sub.i6(i1: i6, i2: i6) : i6
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv6(i1: bv6, i2: bv6) : bv6;

function {:inline} $mul.i6(i1: i6, i2: i6) : i6
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsmod"} $smod.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvsrem"} $srem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $srem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvudiv"} $udiv.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvurem"} $urem.bv6(i1: bv6, i2: bv6) : bv6;

function {:builtin "rem"} $urem.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvshl"} $shl.bv6(i1: bv6, i2: bv6) : bv6;

function $shl.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvlshr"} $lshr.bv6(i1: bv6, i2: bv6) : bv6;

function $lshr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvashr"} $ashr.bv6(i1: bv6, i2: bv6) : bv6;

function $ashr.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvand"} $and.bv6(i1: bv6, i2: bv6) : bv6;

function $and.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvor"} $or.bv6(i1: bv6, i2: bv6) : bv6;

function $or.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvxor"} $xor.bv6(i1: bv6, i2: bv6) : bv6;

function $xor.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvnand"} $nand.bv6(i1: bv6, i2: bv6) : bv6;

function $nand.i6(i1: i6, i2: i6) : i6;

function {:bvbuiltin "bvule"} $ule.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ule.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ule.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $ule.i6(i1: i6, i2: i6) : i1
{
  (if $ule.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ult.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ult.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $ult.i6(i1: i6, i2: i6) : i1
{
  (if $ult.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $uge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $uge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $uge.i6(i1: i6, i2: i6) : i1
{
  (if $uge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $ugt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ugt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $ugt.i6(i1: i6, i2: i6) : i1
{
  (if $ugt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sle.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sle.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i6.bool(i1: i6, i2: i6) : bool
{
  i1 <= i2
}

function {:inline} $sle.i6(i1: i6, i2: i6) : i1
{
  (if $sle.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $slt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $slt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 < i2
}

function {:inline} $slt.i6(i1: i6, i2: i6) : i1
{
  (if $slt.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sge.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sge.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i6.bool(i1: i6, i2: i6) : bool
{
  i1 >= i2
}

function {:inline} $sge.i6(i1: i6, i2: i6) : i1
{
  (if $sge.i6.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv6.bool(i1: bv6, i2: bv6) : bool;

function {:inline} $sgt.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $sgt.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i6.bool(i1: i6, i2: i6) : bool
{
  i1 > i2
}

function {:inline} $sgt.i6(i1: i6, i2: i6) : i1
{
  (if $sgt.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 == i2
}

function {:inline} $eq.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $eq.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i6.bool(i1: i6, i2: i6) : bool
{
  i1 == i2
}

function {:inline} $eq.i6(i1: i6, i2: i6) : i1
{
  (if $eq.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv6.bool(i1: bv6, i2: bv6) : bool
{
  i1 != i2
}

function {:inline} $ne.bv6(i1: bv6, i2: bv6) : bv1
{
  (if $ne.bv6.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i6.bool(i1: i6, i2: i6) : bool
{
  i1 != i2
}

function {:inline} $ne.i6(i1: i6, i2: i6) : i1
{
  (if $ne.i6.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $slt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $sgt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ult.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv6(i1: bv6, i2: bv6) : bv6
{
  (if $ugt.bv6.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $smax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:inline} $umin.i6(i1: i6, i2: i6) : i6
{
  $min(i1, i2)
}

function {:inline} $umax.i6(i1: i6, i2: i6) : i6
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv6(i1: bv6) : bv6;

function $not.i6(i1: i6) : i6;

function {:inline} $load.i6(M: [ref]i6, p: ref) : i6
{
  M[p]
}

function {:inline} $load.bv6(M: [ref]bv6, p: ref) : bv6
{
  M[p]
}

function {:inline} $store.i6(M: [ref]i6, p: ref, v: i6) : [ref]i6
{
  M[p := v]
}

function {:inline} $store.bv6(M: [ref]bv6, p: ref, v: bv6) : [ref]bv6
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $add.i8(i1: i8, i2: i8) : i8
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $sub.i8(i1: i8, i2: i8) : i8
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) : bv8;

function {:inline} $mul.i8(i1: i8, i2: i8) : i8
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) : bv8;

function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) : bv8;

function $shl.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) : bv8;

function $lshr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) : bv8;

function $ashr.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) : bv8;

function $and.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) : bv8;

function $or.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) : bv8;

function $xor.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) : bv8;

function $nand.i8(i1: i8, i2: i8) : i8;

function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ule.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ule.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $ule.i8(i1: i8, i2: i8) : i1
{
  (if $ule.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ult.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ult.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $ult.i8(i1: i8, i2: i8) : i1
{
  (if $ult.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $uge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $uge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $uge.i8(i1: i8, i2: i8) : i1
{
  (if $uge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $ugt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ugt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $ugt.i8(i1: i8, i2: i8) : i1
{
  (if $ugt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sle.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sle.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i8.bool(i1: i8, i2: i8) : bool
{
  i1 <= i2
}

function {:inline} $sle.i8(i1: i8, i2: i8) : i1
{
  (if $sle.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $slt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $slt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 < i2
}

function {:inline} $slt.i8(i1: i8, i2: i8) : i1
{
  (if $slt.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sge.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sge.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i8.bool(i1: i8, i2: i8) : bool
{
  i1 >= i2
}

function {:inline} $sge.i8(i1: i8, i2: i8) : i1
{
  (if $sge.i8.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) : bool;

function {:inline} $sgt.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $sgt.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i8.bool(i1: i8, i2: i8) : bool
{
  i1 > i2
}

function {:inline} $sgt.i8(i1: i8, i2: i8) : i1
{
  (if $sgt.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 == i2
}

function {:inline} $eq.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $eq.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i8.bool(i1: i8, i2: i8) : bool
{
  i1 == i2
}

function {:inline} $eq.i8(i1: i8, i2: i8) : i1
{
  (if $eq.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) : bool
{
  i1 != i2
}

function {:inline} $ne.bv8(i1: bv8, i2: bv8) : bv1
{
  (if $ne.bv8.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i8.bool(i1: i8, i2: i8) : bool
{
  i1 != i2
}

function {:inline} $ne.i8(i1: i8, i2: i8) : i1
{
  (if $ne.i8.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $slt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $sgt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ult.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv8(i1: bv8, i2: bv8) : bv8
{
  (if $ugt.bv8.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $smax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:inline} $umin.i8(i1: i8, i2: i8) : i8
{
  $min(i1, i2)
}

function {:inline} $umax.i8(i1: i8, i2: i8) : i8
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv8(i1: bv8) : bv8;

function $not.i8(i1: i8) : i8;

function {:inline} $load.i8(M: [ref]i8, p: ref) : i8
{
  M[p]
}

function {:inline} $load.bv8(M: [ref]bv8, p: ref) : bv8
{
  M[p]
}

function {:inline} $store.i8(M: [ref]i8, p: ref, v: i8) : [ref]i8
{
  M[p := v]
}

function {:inline} $store.bv8(M: [ref]bv8, p: ref, v: bv8) : [ref]bv8
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $add.i16(i1: i16, i2: i16) : i16
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $sub.i16(i1: i16, i2: i16) : i16
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) : bv16;

function {:inline} $mul.i16(i1: i16, i2: i16) : i16
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) : bv16;

function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) : bv16;

function $shl.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) : bv16;

function $lshr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) : bv16;

function $ashr.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) : bv16;

function $and.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) : bv16;

function $or.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) : bv16;

function $xor.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) : bv16;

function $nand.i16(i1: i16, i2: i16) : i16;

function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ule.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ule.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $ule.i16(i1: i16, i2: i16) : i1
{
  (if $ule.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ult.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ult.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $ult.i16(i1: i16, i2: i16) : i1
{
  (if $ult.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $uge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $uge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $uge.i16(i1: i16, i2: i16) : i1
{
  (if $uge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $ugt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ugt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $ugt.i16(i1: i16, i2: i16) : i1
{
  (if $ugt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sle.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sle.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i16.bool(i1: i16, i2: i16) : bool
{
  i1 <= i2
}

function {:inline} $sle.i16(i1: i16, i2: i16) : i1
{
  (if $sle.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $slt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $slt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 < i2
}

function {:inline} $slt.i16(i1: i16, i2: i16) : i1
{
  (if $slt.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sge.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sge.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i16.bool(i1: i16, i2: i16) : bool
{
  i1 >= i2
}

function {:inline} $sge.i16(i1: i16, i2: i16) : i1
{
  (if $sge.i16.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) : bool;

function {:inline} $sgt.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $sgt.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i16.bool(i1: i16, i2: i16) : bool
{
  i1 > i2
}

function {:inline} $sgt.i16(i1: i16, i2: i16) : i1
{
  (if $sgt.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 == i2
}

function {:inline} $eq.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $eq.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i16.bool(i1: i16, i2: i16) : bool
{
  i1 == i2
}

function {:inline} $eq.i16(i1: i16, i2: i16) : i1
{
  (if $eq.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) : bool
{
  i1 != i2
}

function {:inline} $ne.bv16(i1: bv16, i2: bv16) : bv1
{
  (if $ne.bv16.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i16.bool(i1: i16, i2: i16) : bool
{
  i1 != i2
}

function {:inline} $ne.i16(i1: i16, i2: i16) : i1
{
  (if $ne.i16.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $slt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $sgt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ult.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv16(i1: bv16, i2: bv16) : bv16
{
  (if $ugt.bv16.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $smax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:inline} $umin.i16(i1: i16, i2: i16) : i16
{
  $min(i1, i2)
}

function {:inline} $umax.i16(i1: i16, i2: i16) : i16
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv16(i1: bv16) : bv16;

function $not.i16(i1: i16) : i16;

function {:inline} $load.i16(M: [ref]i16, p: ref) : i16
{
  M[p]
}

function {:inline} $load.bv16(M: [ref]bv16, p: ref) : bv16
{
  M[p]
}

function {:inline} $store.i16(M: [ref]i16, p: ref, v: i16) : [ref]i16
{
  M[p := v]
}

function {:inline} $store.bv16(M: [ref]bv16, p: ref, v: bv16) : [ref]bv16
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $add.i24(i1: i24, i2: i24) : i24
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $sub.i24(i1: i24, i2: i24) : i24
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) : bv24;

function {:inline} $mul.i24(i1: i24, i2: i24) : i24
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) : bv24;

function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) : bv24;

function $shl.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) : bv24;

function $lshr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) : bv24;

function $ashr.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) : bv24;

function $and.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) : bv24;

function $or.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) : bv24;

function $xor.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) : bv24;

function $nand.i24(i1: i24, i2: i24) : i24;

function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ule.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ule.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $ule.i24(i1: i24, i2: i24) : i1
{
  (if $ule.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ult.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ult.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $ult.i24(i1: i24, i2: i24) : i1
{
  (if $ult.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $uge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $uge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $uge.i24(i1: i24, i2: i24) : i1
{
  (if $uge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $ugt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ugt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $ugt.i24(i1: i24, i2: i24) : i1
{
  (if $ugt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sle.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sle.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i24.bool(i1: i24, i2: i24) : bool
{
  i1 <= i2
}

function {:inline} $sle.i24(i1: i24, i2: i24) : i1
{
  (if $sle.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $slt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $slt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 < i2
}

function {:inline} $slt.i24(i1: i24, i2: i24) : i1
{
  (if $slt.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sge.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sge.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i24.bool(i1: i24, i2: i24) : bool
{
  i1 >= i2
}

function {:inline} $sge.i24(i1: i24, i2: i24) : i1
{
  (if $sge.i24.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) : bool;

function {:inline} $sgt.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $sgt.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i24.bool(i1: i24, i2: i24) : bool
{
  i1 > i2
}

function {:inline} $sgt.i24(i1: i24, i2: i24) : i1
{
  (if $sgt.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 == i2
}

function {:inline} $eq.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $eq.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i24.bool(i1: i24, i2: i24) : bool
{
  i1 == i2
}

function {:inline} $eq.i24(i1: i24, i2: i24) : i1
{
  (if $eq.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) : bool
{
  i1 != i2
}

function {:inline} $ne.bv24(i1: bv24, i2: bv24) : bv1
{
  (if $ne.bv24.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i24.bool(i1: i24, i2: i24) : bool
{
  i1 != i2
}

function {:inline} $ne.i24(i1: i24, i2: i24) : i1
{
  (if $ne.i24.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $slt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $sgt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ult.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv24(i1: bv24, i2: bv24) : bv24
{
  (if $ugt.bv24.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $smax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:inline} $umin.i24(i1: i24, i2: i24) : i24
{
  $min(i1, i2)
}

function {:inline} $umax.i24(i1: i24, i2: i24) : i24
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv24(i1: bv24) : bv24;

function $not.i24(i1: i24) : i24;

function {:inline} $load.i24(M: [ref]i24, p: ref) : i24
{
  M[p]
}

function {:inline} $load.bv24(M: [ref]bv24, p: ref) : bv24
{
  M[p]
}

function {:inline} $store.i24(M: [ref]i24, p: ref, v: i24) : [ref]i24
{
  M[p := v]
}

function {:inline} $store.bv24(M: [ref]bv24, p: ref, v: bv24) : [ref]bv24
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $add.i32(i1: i32, i2: i32) : i32
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $sub.i32(i1: i32, i2: i32) : i32
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) : bv32;

function {:inline} $mul.i32(i1: i32, i2: i32) : i32
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) : bv32;

function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) : bv32;

function $shl.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) : bv32;

function $lshr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) : bv32;

function $ashr.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) : bv32;

function $and.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) : bv32;

function $or.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) : bv32;

function $xor.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) : bv32;

function $nand.i32(i1: i32, i2: i32) : i32;

function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ule.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ule.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $ule.i32(i1: i32, i2: i32) : i1
{
  (if $ule.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ult.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ult.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $ult.i32(i1: i32, i2: i32) : i1
{
  (if $ult.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $uge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $uge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $uge.i32(i1: i32, i2: i32) : i1
{
  (if $uge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $ugt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ugt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $ugt.i32(i1: i32, i2: i32) : i1
{
  (if $ugt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sle.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sle.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i32.bool(i1: i32, i2: i32) : bool
{
  i1 <= i2
}

function {:inline} $sle.i32(i1: i32, i2: i32) : i1
{
  (if $sle.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $slt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $slt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 < i2
}

function {:inline} $slt.i32(i1: i32, i2: i32) : i1
{
  (if $slt.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sge.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sge.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i32.bool(i1: i32, i2: i32) : bool
{
  i1 >= i2
}

function {:inline} $sge.i32(i1: i32, i2: i32) : i1
{
  (if $sge.i32.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) : bool;

function {:inline} $sgt.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $sgt.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i32.bool(i1: i32, i2: i32) : bool
{
  i1 > i2
}

function {:inline} $sgt.i32(i1: i32, i2: i32) : i1
{
  (if $sgt.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 == i2
}

function {:inline} $eq.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $eq.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i32.bool(i1: i32, i2: i32) : bool
{
  i1 == i2
}

function {:inline} $eq.i32(i1: i32, i2: i32) : i1
{
  (if $eq.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) : bool
{
  i1 != i2
}

function {:inline} $ne.bv32(i1: bv32, i2: bv32) : bv1
{
  (if $ne.bv32.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i32.bool(i1: i32, i2: i32) : bool
{
  i1 != i2
}

function {:inline} $ne.i32(i1: i32, i2: i32) : i1
{
  (if $ne.i32.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $slt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $sgt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ult.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv32(i1: bv32, i2: bv32) : bv32
{
  (if $ugt.bv32.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $smax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:inline} $umin.i32(i1: i32, i2: i32) : i32
{
  $min(i1, i2)
}

function {:inline} $umax.i32(i1: i32, i2: i32) : i32
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv32(i1: bv32) : bv32;

function $not.i32(i1: i32) : i32;

function {:inline} $load.i32(M: [ref]i32, p: ref) : i32
{
  M[p]
}

function {:inline} $load.bv32(M: [ref]bv32, p: ref) : bv32
{
  M[p]
}

function {:inline} $store.i32(M: [ref]i32, p: ref, v: i32) : [ref]i32
{
  M[p := v]
}

function {:inline} $store.bv32(M: [ref]bv32, p: ref, v: bv32) : [ref]bv32
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $add.i40(i1: i40, i2: i40) : i40
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $sub.i40(i1: i40, i2: i40) : i40
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) : bv40;

function {:inline} $mul.i40(i1: i40, i2: i40) : i40
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) : bv40;

function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) : bv40;

function $shl.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) : bv40;

function $lshr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) : bv40;

function $ashr.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) : bv40;

function $and.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) : bv40;

function $or.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) : bv40;

function $xor.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) : bv40;

function $nand.i40(i1: i40, i2: i40) : i40;

function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ule.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ule.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $ule.i40(i1: i40, i2: i40) : i1
{
  (if $ule.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ult.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ult.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $ult.i40(i1: i40, i2: i40) : i1
{
  (if $ult.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $uge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $uge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $uge.i40(i1: i40, i2: i40) : i1
{
  (if $uge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $ugt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ugt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $ugt.i40(i1: i40, i2: i40) : i1
{
  (if $ugt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sle.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sle.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i40.bool(i1: i40, i2: i40) : bool
{
  i1 <= i2
}

function {:inline} $sle.i40(i1: i40, i2: i40) : i1
{
  (if $sle.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $slt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $slt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 < i2
}

function {:inline} $slt.i40(i1: i40, i2: i40) : i1
{
  (if $slt.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sge.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sge.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i40.bool(i1: i40, i2: i40) : bool
{
  i1 >= i2
}

function {:inline} $sge.i40(i1: i40, i2: i40) : i1
{
  (if $sge.i40.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) : bool;

function {:inline} $sgt.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $sgt.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i40.bool(i1: i40, i2: i40) : bool
{
  i1 > i2
}

function {:inline} $sgt.i40(i1: i40, i2: i40) : i1
{
  (if $sgt.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 == i2
}

function {:inline} $eq.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $eq.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i40.bool(i1: i40, i2: i40) : bool
{
  i1 == i2
}

function {:inline} $eq.i40(i1: i40, i2: i40) : i1
{
  (if $eq.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) : bool
{
  i1 != i2
}

function {:inline} $ne.bv40(i1: bv40, i2: bv40) : bv1
{
  (if $ne.bv40.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i40.bool(i1: i40, i2: i40) : bool
{
  i1 != i2
}

function {:inline} $ne.i40(i1: i40, i2: i40) : i1
{
  (if $ne.i40.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $slt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $sgt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ult.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv40(i1: bv40, i2: bv40) : bv40
{
  (if $ugt.bv40.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $smax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:inline} $umin.i40(i1: i40, i2: i40) : i40
{
  $min(i1, i2)
}

function {:inline} $umax.i40(i1: i40, i2: i40) : i40
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv40(i1: bv40) : bv40;

function $not.i40(i1: i40) : i40;

function {:inline} $load.i40(M: [ref]i40, p: ref) : i40
{
  M[p]
}

function {:inline} $load.bv40(M: [ref]bv40, p: ref) : bv40
{
  M[p]
}

function {:inline} $store.i40(M: [ref]i40, p: ref, v: i40) : [ref]i40
{
  M[p := v]
}

function {:inline} $store.bv40(M: [ref]bv40, p: ref, v: bv40) : [ref]bv40
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $add.i48(i1: i48, i2: i48) : i48
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $sub.i48(i1: i48, i2: i48) : i48
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) : bv48;

function {:inline} $mul.i48(i1: i48, i2: i48) : i48
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) : bv48;

function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) : bv48;

function $shl.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) : bv48;

function $lshr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) : bv48;

function $ashr.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) : bv48;

function $and.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) : bv48;

function $or.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) : bv48;

function $xor.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) : bv48;

function $nand.i48(i1: i48, i2: i48) : i48;

function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ule.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ule.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $ule.i48(i1: i48, i2: i48) : i1
{
  (if $ule.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ult.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ult.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $ult.i48(i1: i48, i2: i48) : i1
{
  (if $ult.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $uge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $uge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $uge.i48(i1: i48, i2: i48) : i1
{
  (if $uge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $ugt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ugt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $ugt.i48(i1: i48, i2: i48) : i1
{
  (if $ugt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sle.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sle.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i48.bool(i1: i48, i2: i48) : bool
{
  i1 <= i2
}

function {:inline} $sle.i48(i1: i48, i2: i48) : i1
{
  (if $sle.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $slt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $slt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 < i2
}

function {:inline} $slt.i48(i1: i48, i2: i48) : i1
{
  (if $slt.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sge.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sge.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i48.bool(i1: i48, i2: i48) : bool
{
  i1 >= i2
}

function {:inline} $sge.i48(i1: i48, i2: i48) : i1
{
  (if $sge.i48.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) : bool;

function {:inline} $sgt.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $sgt.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i48.bool(i1: i48, i2: i48) : bool
{
  i1 > i2
}

function {:inline} $sgt.i48(i1: i48, i2: i48) : i1
{
  (if $sgt.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 == i2
}

function {:inline} $eq.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $eq.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i48.bool(i1: i48, i2: i48) : bool
{
  i1 == i2
}

function {:inline} $eq.i48(i1: i48, i2: i48) : i1
{
  (if $eq.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) : bool
{
  i1 != i2
}

function {:inline} $ne.bv48(i1: bv48, i2: bv48) : bv1
{
  (if $ne.bv48.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i48.bool(i1: i48, i2: i48) : bool
{
  i1 != i2
}

function {:inline} $ne.i48(i1: i48, i2: i48) : i1
{
  (if $ne.i48.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $slt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $sgt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ult.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv48(i1: bv48, i2: bv48) : bv48
{
  (if $ugt.bv48.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $smax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:inline} $umin.i48(i1: i48, i2: i48) : i48
{
  $min(i1, i2)
}

function {:inline} $umax.i48(i1: i48, i2: i48) : i48
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv48(i1: bv48) : bv48;

function $not.i48(i1: i48) : i48;

function {:inline} $load.i48(M: [ref]i48, p: ref) : i48
{
  M[p]
}

function {:inline} $load.bv48(M: [ref]bv48, p: ref) : bv48
{
  M[p]
}

function {:inline} $store.i48(M: [ref]i48, p: ref, v: i48) : [ref]i48
{
  M[p := v]
}

function {:inline} $store.bv48(M: [ref]bv48, p: ref, v: bv48) : [ref]bv48
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $add.i56(i1: i56, i2: i56) : i56
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $sub.i56(i1: i56, i2: i56) : i56
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) : bv56;

function {:inline} $mul.i56(i1: i56, i2: i56) : i56
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) : bv56;

function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) : bv56;

function $shl.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) : bv56;

function $lshr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) : bv56;

function $ashr.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) : bv56;

function $and.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) : bv56;

function $or.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) : bv56;

function $xor.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) : bv56;

function $nand.i56(i1: i56, i2: i56) : i56;

function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ule.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ule.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $ule.i56(i1: i56, i2: i56) : i1
{
  (if $ule.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ult.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ult.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $ult.i56(i1: i56, i2: i56) : i1
{
  (if $ult.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $uge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $uge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $uge.i56(i1: i56, i2: i56) : i1
{
  (if $uge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $ugt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ugt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $ugt.i56(i1: i56, i2: i56) : i1
{
  (if $ugt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sle.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sle.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i56.bool(i1: i56, i2: i56) : bool
{
  i1 <= i2
}

function {:inline} $sle.i56(i1: i56, i2: i56) : i1
{
  (if $sle.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $slt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $slt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 < i2
}

function {:inline} $slt.i56(i1: i56, i2: i56) : i1
{
  (if $slt.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sge.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sge.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i56.bool(i1: i56, i2: i56) : bool
{
  i1 >= i2
}

function {:inline} $sge.i56(i1: i56, i2: i56) : i1
{
  (if $sge.i56.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) : bool;

function {:inline} $sgt.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $sgt.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i56.bool(i1: i56, i2: i56) : bool
{
  i1 > i2
}

function {:inline} $sgt.i56(i1: i56, i2: i56) : i1
{
  (if $sgt.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 == i2
}

function {:inline} $eq.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $eq.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i56.bool(i1: i56, i2: i56) : bool
{
  i1 == i2
}

function {:inline} $eq.i56(i1: i56, i2: i56) : i1
{
  (if $eq.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) : bool
{
  i1 != i2
}

function {:inline} $ne.bv56(i1: bv56, i2: bv56) : bv1
{
  (if $ne.bv56.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i56.bool(i1: i56, i2: i56) : bool
{
  i1 != i2
}

function {:inline} $ne.i56(i1: i56, i2: i56) : i1
{
  (if $ne.i56.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $slt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $sgt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ult.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv56(i1: bv56, i2: bv56) : bv56
{
  (if $ugt.bv56.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $smax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:inline} $umin.i56(i1: i56, i2: i56) : i56
{
  $min(i1, i2)
}

function {:inline} $umax.i56(i1: i56, i2: i56) : i56
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv56(i1: bv56) : bv56;

function $not.i56(i1: i56) : i56;

function {:inline} $load.i56(M: [ref]i56, p: ref) : i56
{
  M[p]
}

function {:inline} $load.bv56(M: [ref]bv56, p: ref) : bv56
{
  M[p]
}

function {:inline} $store.i56(M: [ref]i56, p: ref, v: i56) : [ref]i56
{
  M[p := v]
}

function {:inline} $store.bv56(M: [ref]bv56, p: ref, v: bv56) : [ref]bv56
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $add.i64(i1: i64, i2: i64) : i64
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $sub.i64(i1: i64, i2: i64) : i64
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) : bv64;

function {:inline} $mul.i64(i1: i64, i2: i64) : i64
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) : bv64;

function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) : bv64;

function $shl.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) : bv64;

function $lshr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) : bv64;

function $ashr.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) : bv64;

function $and.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) : bv64;

function $or.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) : bv64;

function $xor.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) : bv64;

function $nand.i64(i1: i64, i2: i64) : i64;

function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ule.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ule.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $ule.i64(i1: i64, i2: i64) : i1
{
  (if $ule.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ult.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ult.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $ult.i64(i1: i64, i2: i64) : i1
{
  (if $ult.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $uge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $uge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $uge.i64(i1: i64, i2: i64) : i1
{
  (if $uge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $ugt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ugt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $ugt.i64(i1: i64, i2: i64) : i1
{
  (if $ugt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sle.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sle.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i64.bool(i1: i64, i2: i64) : bool
{
  i1 <= i2
}

function {:inline} $sle.i64(i1: i64, i2: i64) : i1
{
  (if $sle.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $slt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $slt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 < i2
}

function {:inline} $slt.i64(i1: i64, i2: i64) : i1
{
  (if $slt.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sge.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sge.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i64.bool(i1: i64, i2: i64) : bool
{
  i1 >= i2
}

function {:inline} $sge.i64(i1: i64, i2: i64) : i1
{
  (if $sge.i64.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) : bool;

function {:inline} $sgt.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $sgt.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i64.bool(i1: i64, i2: i64) : bool
{
  i1 > i2
}

function {:inline} $sgt.i64(i1: i64, i2: i64) : i1
{
  (if $sgt.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 == i2
}

function {:inline} $eq.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $eq.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i64.bool(i1: i64, i2: i64) : bool
{
  i1 == i2
}

function {:inline} $eq.i64(i1: i64, i2: i64) : i1
{
  (if $eq.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) : bool
{
  i1 != i2
}

function {:inline} $ne.bv64(i1: bv64, i2: bv64) : bv1
{
  (if $ne.bv64.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i64.bool(i1: i64, i2: i64) : bool
{
  i1 != i2
}

function {:inline} $ne.i64(i1: i64, i2: i64) : i1
{
  (if $ne.i64.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $slt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $sgt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ult.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv64(i1: bv64, i2: bv64) : bv64
{
  (if $ugt.bv64.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $smax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:inline} $umin.i64(i1: i64, i2: i64) : i64
{
  $min(i1, i2)
}

function {:inline} $umax.i64(i1: i64, i2: i64) : i64
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv64(i1: bv64) : bv64;

function $not.i64(i1: i64) : i64;

function {:inline} $load.i64(M: [ref]i64, p: ref) : i64
{
  M[p]
}

function {:inline} $load.bv64(M: [ref]bv64, p: ref) : bv64
{
  M[p]
}

function {:inline} $store.i64(M: [ref]i64, p: ref, v: i64) : [ref]i64
{
  M[p := v]
}

function {:inline} $store.bv64(M: [ref]bv64, p: ref, v: bv64) : [ref]bv64
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $add.i80(i1: i80, i2: i80) : i80
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $sub.i80(i1: i80, i2: i80) : i80
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv80(i1: bv80, i2: bv80) : bv80;

function {:inline} $mul.i80(i1: i80, i2: i80) : i80
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsmod"} $smod.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvsrem"} $srem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $srem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvudiv"} $udiv.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvurem"} $urem.bv80(i1: bv80, i2: bv80) : bv80;

function {:builtin "rem"} $urem.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvshl"} $shl.bv80(i1: bv80, i2: bv80) : bv80;

function $shl.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvlshr"} $lshr.bv80(i1: bv80, i2: bv80) : bv80;

function $lshr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvashr"} $ashr.bv80(i1: bv80, i2: bv80) : bv80;

function $ashr.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvand"} $and.bv80(i1: bv80, i2: bv80) : bv80;

function $and.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvor"} $or.bv80(i1: bv80, i2: bv80) : bv80;

function $or.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvxor"} $xor.bv80(i1: bv80, i2: bv80) : bv80;

function $xor.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvnand"} $nand.bv80(i1: bv80, i2: bv80) : bv80;

function $nand.i80(i1: i80, i2: i80) : i80;

function {:bvbuiltin "bvule"} $ule.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ule.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ule.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $ule.i80(i1: i80, i2: i80) : i1
{
  (if $ule.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ult.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ult.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $ult.i80(i1: i80, i2: i80) : i1
{
  (if $ult.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $uge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $uge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $uge.i80(i1: i80, i2: i80) : i1
{
  (if $uge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $ugt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ugt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $ugt.i80(i1: i80, i2: i80) : i1
{
  (if $ugt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sle.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sle.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i80.bool(i1: i80, i2: i80) : bool
{
  i1 <= i2
}

function {:inline} $sle.i80(i1: i80, i2: i80) : i1
{
  (if $sle.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $slt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $slt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 < i2
}

function {:inline} $slt.i80(i1: i80, i2: i80) : i1
{
  (if $slt.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sge.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sge.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i80.bool(i1: i80, i2: i80) : bool
{
  i1 >= i2
}

function {:inline} $sge.i80(i1: i80, i2: i80) : i1
{
  (if $sge.i80.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv80.bool(i1: bv80, i2: bv80) : bool;

function {:inline} $sgt.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $sgt.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i80.bool(i1: i80, i2: i80) : bool
{
  i1 > i2
}

function {:inline} $sgt.i80(i1: i80, i2: i80) : i1
{
  (if $sgt.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 == i2
}

function {:inline} $eq.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $eq.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i80.bool(i1: i80, i2: i80) : bool
{
  i1 == i2
}

function {:inline} $eq.i80(i1: i80, i2: i80) : i1
{
  (if $eq.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv80.bool(i1: bv80, i2: bv80) : bool
{
  i1 != i2
}

function {:inline} $ne.bv80(i1: bv80, i2: bv80) : bv1
{
  (if $ne.bv80.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i80.bool(i1: i80, i2: i80) : bool
{
  i1 != i2
}

function {:inline} $ne.i80(i1: i80, i2: i80) : i1
{
  (if $ne.i80.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $slt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $sgt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ult.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv80(i1: bv80, i2: bv80) : bv80
{
  (if $ugt.bv80.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $smax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:inline} $umin.i80(i1: i80, i2: i80) : i80
{
  $min(i1, i2)
}

function {:inline} $umax.i80(i1: i80, i2: i80) : i80
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv80(i1: bv80) : bv80;

function $not.i80(i1: i80) : i80;

function {:inline} $load.i80(M: [ref]i80, p: ref) : i80
{
  M[p]
}

function {:inline} $load.bv80(M: [ref]bv80, p: ref) : bv80
{
  M[p]
}

function {:inline} $store.i80(M: [ref]i80, p: ref, v: i80) : [ref]i80
{
  M[p := v]
}

function {:inline} $store.bv80(M: [ref]bv80, p: ref, v: bv80) : [ref]bv80
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $add.i88(i1: i88, i2: i88) : i88
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $sub.i88(i1: i88, i2: i88) : i88
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) : bv88;

function {:inline} $mul.i88(i1: i88, i2: i88) : i88
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) : bv88;

function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) : bv88;

function $shl.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) : bv88;

function $lshr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) : bv88;

function $ashr.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) : bv88;

function $and.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) : bv88;

function $or.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) : bv88;

function $xor.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) : bv88;

function $nand.i88(i1: i88, i2: i88) : i88;

function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ule.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ule.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $ule.i88(i1: i88, i2: i88) : i1
{
  (if $ule.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ult.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ult.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $ult.i88(i1: i88, i2: i88) : i1
{
  (if $ult.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $uge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $uge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $uge.i88(i1: i88, i2: i88) : i1
{
  (if $uge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $ugt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ugt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $ugt.i88(i1: i88, i2: i88) : i1
{
  (if $ugt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sle.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sle.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i88.bool(i1: i88, i2: i88) : bool
{
  i1 <= i2
}

function {:inline} $sle.i88(i1: i88, i2: i88) : i1
{
  (if $sle.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $slt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $slt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 < i2
}

function {:inline} $slt.i88(i1: i88, i2: i88) : i1
{
  (if $slt.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sge.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sge.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i88.bool(i1: i88, i2: i88) : bool
{
  i1 >= i2
}

function {:inline} $sge.i88(i1: i88, i2: i88) : i1
{
  (if $sge.i88.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) : bool;

function {:inline} $sgt.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $sgt.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i88.bool(i1: i88, i2: i88) : bool
{
  i1 > i2
}

function {:inline} $sgt.i88(i1: i88, i2: i88) : i1
{
  (if $sgt.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 == i2
}

function {:inline} $eq.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $eq.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i88.bool(i1: i88, i2: i88) : bool
{
  i1 == i2
}

function {:inline} $eq.i88(i1: i88, i2: i88) : i1
{
  (if $eq.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) : bool
{
  i1 != i2
}

function {:inline} $ne.bv88(i1: bv88, i2: bv88) : bv1
{
  (if $ne.bv88.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i88.bool(i1: i88, i2: i88) : bool
{
  i1 != i2
}

function {:inline} $ne.i88(i1: i88, i2: i88) : i1
{
  (if $ne.i88.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $slt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $sgt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ult.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv88(i1: bv88, i2: bv88) : bv88
{
  (if $ugt.bv88.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $smax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:inline} $umin.i88(i1: i88, i2: i88) : i88
{
  $min(i1, i2)
}

function {:inline} $umax.i88(i1: i88, i2: i88) : i88
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv88(i1: bv88) : bv88;

function $not.i88(i1: i88) : i88;

function {:inline} $load.i88(M: [ref]i88, p: ref) : i88
{
  M[p]
}

function {:inline} $load.bv88(M: [ref]bv88, p: ref) : bv88
{
  M[p]
}

function {:inline} $store.i88(M: [ref]i88, p: ref, v: i88) : [ref]i88
{
  M[p := v]
}

function {:inline} $store.bv88(M: [ref]bv88, p: ref, v: bv88) : [ref]bv88
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $add.i96(i1: i96, i2: i96) : i96
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $sub.i96(i1: i96, i2: i96) : i96
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) : bv96;

function {:inline} $mul.i96(i1: i96, i2: i96) : i96
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) : bv96;

function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) : bv96;

function $shl.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) : bv96;

function $lshr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) : bv96;

function $ashr.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) : bv96;

function $and.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) : bv96;

function $or.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) : bv96;

function $xor.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) : bv96;

function $nand.i96(i1: i96, i2: i96) : i96;

function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ule.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ule.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $ule.i96(i1: i96, i2: i96) : i1
{
  (if $ule.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ult.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ult.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $ult.i96(i1: i96, i2: i96) : i1
{
  (if $ult.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $uge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $uge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $uge.i96(i1: i96, i2: i96) : i1
{
  (if $uge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $ugt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ugt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $ugt.i96(i1: i96, i2: i96) : i1
{
  (if $ugt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sle.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sle.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i96.bool(i1: i96, i2: i96) : bool
{
  i1 <= i2
}

function {:inline} $sle.i96(i1: i96, i2: i96) : i1
{
  (if $sle.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $slt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $slt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 < i2
}

function {:inline} $slt.i96(i1: i96, i2: i96) : i1
{
  (if $slt.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sge.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sge.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i96.bool(i1: i96, i2: i96) : bool
{
  i1 >= i2
}

function {:inline} $sge.i96(i1: i96, i2: i96) : i1
{
  (if $sge.i96.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) : bool;

function {:inline} $sgt.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $sgt.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i96.bool(i1: i96, i2: i96) : bool
{
  i1 > i2
}

function {:inline} $sgt.i96(i1: i96, i2: i96) : i1
{
  (if $sgt.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 == i2
}

function {:inline} $eq.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $eq.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i96.bool(i1: i96, i2: i96) : bool
{
  i1 == i2
}

function {:inline} $eq.i96(i1: i96, i2: i96) : i1
{
  (if $eq.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) : bool
{
  i1 != i2
}

function {:inline} $ne.bv96(i1: bv96, i2: bv96) : bv1
{
  (if $ne.bv96.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i96.bool(i1: i96, i2: i96) : bool
{
  i1 != i2
}

function {:inline} $ne.i96(i1: i96, i2: i96) : i1
{
  (if $ne.i96.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $slt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $sgt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ult.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv96(i1: bv96, i2: bv96) : bv96
{
  (if $ugt.bv96.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $smax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:inline} $umin.i96(i1: i96, i2: i96) : i96
{
  $min(i1, i2)
}

function {:inline} $umax.i96(i1: i96, i2: i96) : i96
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv96(i1: bv96) : bv96;

function $not.i96(i1: i96) : i96;

function {:inline} $load.i96(M: [ref]i96, p: ref) : i96
{
  M[p]
}

function {:inline} $load.bv96(M: [ref]bv96, p: ref) : bv96
{
  M[p]
}

function {:inline} $store.i96(M: [ref]i96, p: ref, v: i96) : [ref]i96
{
  M[p := v]
}

function {:inline} $store.bv96(M: [ref]bv96, p: ref, v: bv96) : [ref]bv96
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $add.i128(i1: i128, i2: i128) : i128
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $sub.i128(i1: i128, i2: i128) : i128
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) : bv128;

function {:inline} $mul.i128(i1: i128, i2: i128) : i128
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) : bv128;

function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) : bv128;

function $shl.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) : bv128;

function $lshr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) : bv128;

function $ashr.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) : bv128;

function $and.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) : bv128;

function $or.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) : bv128;

function $xor.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) : bv128;

function $nand.i128(i1: i128, i2: i128) : i128;

function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ule.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ule.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $ule.i128(i1: i128, i2: i128) : i1
{
  (if $ule.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ult.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ult.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $ult.i128(i1: i128, i2: i128) : i1
{
  (if $ult.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $uge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $uge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $uge.i128(i1: i128, i2: i128) : i1
{
  (if $uge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $ugt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ugt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $ugt.i128(i1: i128, i2: i128) : i1
{
  (if $ugt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sle.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sle.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i128.bool(i1: i128, i2: i128) : bool
{
  i1 <= i2
}

function {:inline} $sle.i128(i1: i128, i2: i128) : i1
{
  (if $sle.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $slt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $slt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 < i2
}

function {:inline} $slt.i128(i1: i128, i2: i128) : i1
{
  (if $slt.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sge.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sge.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i128.bool(i1: i128, i2: i128) : bool
{
  i1 >= i2
}

function {:inline} $sge.i128(i1: i128, i2: i128) : i1
{
  (if $sge.i128.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) : bool;

function {:inline} $sgt.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $sgt.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i128.bool(i1: i128, i2: i128) : bool
{
  i1 > i2
}

function {:inline} $sgt.i128(i1: i128, i2: i128) : i1
{
  (if $sgt.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 == i2
}

function {:inline} $eq.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $eq.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i128.bool(i1: i128, i2: i128) : bool
{
  i1 == i2
}

function {:inline} $eq.i128(i1: i128, i2: i128) : i1
{
  (if $eq.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) : bool
{
  i1 != i2
}

function {:inline} $ne.bv128(i1: bv128, i2: bv128) : bv1
{
  (if $ne.bv128.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i128.bool(i1: i128, i2: i128) : bool
{
  i1 != i2
}

function {:inline} $ne.i128(i1: i128, i2: i128) : i1
{
  (if $ne.i128.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $slt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $sgt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ult.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv128(i1: bv128, i2: bv128) : bv128
{
  (if $ugt.bv128.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $smax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:inline} $umin.i128(i1: i128, i2: i128) : i128
{
  $min(i1, i2)
}

function {:inline} $umax.i128(i1: i128, i2: i128) : i128
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv128(i1: bv128) : bv128;

function $not.i128(i1: i128) : i128;

function {:inline} $load.i128(M: [ref]i128, p: ref) : i128
{
  M[p]
}

function {:inline} $load.bv128(M: [ref]bv128, p: ref) : bv128
{
  M[p]
}

function {:inline} $store.i128(M: [ref]i128, p: ref, v: i128) : [ref]i128
{
  M[p := v]
}

function {:inline} $store.bv128(M: [ref]bv128, p: ref, v: bv128) : [ref]bv128
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $add.i160(i1: i160, i2: i160) : i160
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $sub.i160(i1: i160, i2: i160) : i160
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv160(i1: bv160, i2: bv160) : bv160;

function {:inline} $mul.i160(i1: i160, i2: i160) : i160
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsmod"} $smod.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvsrem"} $srem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $srem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvudiv"} $udiv.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvurem"} $urem.bv160(i1: bv160, i2: bv160) : bv160;

function {:builtin "rem"} $urem.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvshl"} $shl.bv160(i1: bv160, i2: bv160) : bv160;

function $shl.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvlshr"} $lshr.bv160(i1: bv160, i2: bv160) : bv160;

function $lshr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvashr"} $ashr.bv160(i1: bv160, i2: bv160) : bv160;

function $ashr.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvand"} $and.bv160(i1: bv160, i2: bv160) : bv160;

function $and.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvor"} $or.bv160(i1: bv160, i2: bv160) : bv160;

function $or.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvxor"} $xor.bv160(i1: bv160, i2: bv160) : bv160;

function $xor.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvnand"} $nand.bv160(i1: bv160, i2: bv160) : bv160;

function $nand.i160(i1: i160, i2: i160) : i160;

function {:bvbuiltin "bvule"} $ule.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ule.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ule.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $ule.i160(i1: i160, i2: i160) : i1
{
  (if $ule.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ult.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ult.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $ult.i160(i1: i160, i2: i160) : i1
{
  (if $ult.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $uge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $uge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $uge.i160(i1: i160, i2: i160) : i1
{
  (if $uge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $ugt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ugt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $ugt.i160(i1: i160, i2: i160) : i1
{
  (if $ugt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sle.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sle.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i160.bool(i1: i160, i2: i160) : bool
{
  i1 <= i2
}

function {:inline} $sle.i160(i1: i160, i2: i160) : i1
{
  (if $sle.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $slt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $slt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 < i2
}

function {:inline} $slt.i160(i1: i160, i2: i160) : i1
{
  (if $slt.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sge.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sge.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i160.bool(i1: i160, i2: i160) : bool
{
  i1 >= i2
}

function {:inline} $sge.i160(i1: i160, i2: i160) : i1
{
  (if $sge.i160.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv160.bool(i1: bv160, i2: bv160) : bool;

function {:inline} $sgt.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $sgt.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i160.bool(i1: i160, i2: i160) : bool
{
  i1 > i2
}

function {:inline} $sgt.i160(i1: i160, i2: i160) : i1
{
  (if $sgt.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 == i2
}

function {:inline} $eq.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $eq.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i160.bool(i1: i160, i2: i160) : bool
{
  i1 == i2
}

function {:inline} $eq.i160(i1: i160, i2: i160) : i1
{
  (if $eq.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv160.bool(i1: bv160, i2: bv160) : bool
{
  i1 != i2
}

function {:inline} $ne.bv160(i1: bv160, i2: bv160) : bv1
{
  (if $ne.bv160.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i160.bool(i1: i160, i2: i160) : bool
{
  i1 != i2
}

function {:inline} $ne.i160(i1: i160, i2: i160) : i1
{
  (if $ne.i160.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $slt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $sgt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ult.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv160(i1: bv160, i2: bv160) : bv160
{
  (if $ugt.bv160.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $smax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:inline} $umin.i160(i1: i160, i2: i160) : i160
{
  $min(i1, i2)
}

function {:inline} $umax.i160(i1: i160, i2: i160) : i160
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv160(i1: bv160) : bv160;

function $not.i160(i1: i160) : i160;

function {:inline} $load.i160(M: [ref]i160, p: ref) : i160
{
  M[p]
}

function {:inline} $load.bv160(M: [ref]bv160, p: ref) : bv160
{
  M[p]
}

function {:inline} $store.i160(M: [ref]i160, p: ref, v: i160) : [ref]i160
{
  M[p := v]
}

function {:inline} $store.bv160(M: [ref]bv160, p: ref, v: bv160) : [ref]bv160
{
  M[p := v]
}

function {:bvbuiltin "bvadd"} $add.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $add.i256(i1: i256, i2: i256) : i256
{
  i1 + i2
}

function {:bvbuiltin "bvsub"} $sub.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $sub.i256(i1: i256, i2: i256) : i256
{
  i1 - i2
}

function {:bvbuiltin "bvmul"} $mul.bv256(i1: bv256, i2: bv256) : bv256;

function {:inline} $mul.i256(i1: i256, i2: i256) : i256
{
  i1 * i2
}

function {:bvbuiltin "bvsdiv"} $sdiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsmod"} $smod.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvsrem"} $srem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $srem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvudiv"} $udiv.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvurem"} $urem.bv256(i1: bv256, i2: bv256) : bv256;

function {:builtin "rem"} $urem.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvshl"} $shl.bv256(i1: bv256, i2: bv256) : bv256;

function $shl.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvlshr"} $lshr.bv256(i1: bv256, i2: bv256) : bv256;

function $lshr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvashr"} $ashr.bv256(i1: bv256, i2: bv256) : bv256;

function $ashr.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvand"} $and.bv256(i1: bv256, i2: bv256) : bv256;

function $and.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvor"} $or.bv256(i1: bv256, i2: bv256) : bv256;

function $or.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvxor"} $xor.bv256(i1: bv256, i2: bv256) : bv256;

function $xor.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvnand"} $nand.bv256(i1: bv256, i2: bv256) : bv256;

function $nand.i256(i1: i256, i2: i256) : i256;

function {:bvbuiltin "bvule"} $ule.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ule.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ule.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ule.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $ule.i256(i1: i256, i2: i256) : i1
{
  (if $ule.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvult"} $ult.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ult.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ult.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ult.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $ult.i256(i1: i256, i2: i256) : i1
{
  (if $ult.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvuge"} $uge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $uge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $uge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $uge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $uge.i256(i1: i256, i2: i256) : i1
{
  (if $uge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvugt"} $ugt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $ugt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ugt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ugt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $ugt.i256(i1: i256, i2: i256) : i1
{
  (if $ugt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsle"} $sle.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sle.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sle.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sle.i256.bool(i1: i256, i2: i256) : bool
{
  i1 <= i2
}

function {:inline} $sle.i256(i1: i256, i2: i256) : i1
{
  (if $sle.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvslt"} $slt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $slt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $slt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $slt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 < i2
}

function {:inline} $slt.i256(i1: i256, i2: i256) : i1
{
  (if $slt.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsge"} $sge.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sge.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sge.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sge.i256.bool(i1: i256, i2: i256) : bool
{
  i1 >= i2
}

function {:inline} $sge.i256(i1: i256, i2: i256) : i1
{
  (if $sge.i256.bool(i1, i2) then 1 else 0)
}

function {:bvbuiltin "bvsgt"} $sgt.bv256.bool(i1: bv256, i2: bv256) : bool;

function {:inline} $sgt.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $sgt.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $sgt.i256.bool(i1: i256, i2: i256) : bool
{
  i1 > i2
}

function {:inline} $sgt.i256(i1: i256, i2: i256) : i1
{
  (if $sgt.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $eq.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 == i2
}

function {:inline} $eq.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $eq.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $eq.i256.bool(i1: i256, i2: i256) : bool
{
  i1 == i2
}

function {:inline} $eq.i256(i1: i256, i2: i256) : i1
{
  (if $eq.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $ne.bv256.bool(i1: bv256, i2: bv256) : bool
{
  i1 != i2
}

function {:inline} $ne.bv256(i1: bv256, i2: bv256) : bv1
{
  (if $ne.bv256.bool(i1, i2) then 1bv1 else 0bv1)
}

function {:inline} $ne.i256.bool(i1: i256, i2: i256) : bool
{
  i1 != i2
}

function {:inline} $ne.i256(i1: i256, i2: i256) : i1
{
  (if $ne.i256.bool(i1, i2) then 1 else 0)
}

function {:inline} $min.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $slt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $max.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $sgt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umin.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ult.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $umax.bv256(i1: bv256, i2: bv256) : bv256
{
  (if $ugt.bv256.bool(i1, i2) then i1 else i2)
}

function {:inline} $smin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $smax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:inline} $umin.i256(i1: i256, i2: i256) : i256
{
  $min(i1, i2)
}

function {:inline} $umax.i256(i1: i256, i2: i256) : i256
{
  $max(i1, i2)
}

function {:bvbuiltin "bvnot"} $not.bv256(i1: bv256) : bv256;

function $not.i256(i1: i256) : i256;

function {:inline} $load.i256(M: [ref]i256, p: ref) : i256
{
  M[p]
}

function {:inline} $load.bv256(M: [ref]bv256, p: ref) : bv256
{
  M[p]
}

function {:inline} $store.i256(M: [ref]i256, p: ref, v: i256) : [ref]i256
{
  M[p := v]
}

function {:inline} $store.bv256(M: [ref]bv256, p: ref, v: bv256) : [ref]bv256
{
  M[p := v]
}

function {:inline} $trunc.bv5.bv1(i1: bv5) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i5.i1(i1: i5) : i1
{
  i1
}

function {:inline} $zext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $sext.i1.i5(i1: i1) : i5
{
  i1
}

function {:inline} $trunc.bv6.bv1(i1: bv6) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i6.i1(i1: i6) : i1
{
  i1
}

function {:inline} $zext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $sext.i1.i6(i1: i1) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv1(i1: bv8) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i8.i1(i1: i8) : i1
{
  i1
}

function {:inline} $zext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $sext.i1.i8(i1: i1) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv1(i1: bv16) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i16.i1(i1: i16) : i1
{
  i1
}

function {:inline} $zext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $sext.i1.i16(i1: i1) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv1(i1: bv24) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i24.i1(i1: i24) : i1
{
  i1
}

function {:inline} $zext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $sext.i1.i24(i1: i1) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv1(i1: bv32) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i32.i1(i1: i32) : i1
{
  i1
}

function {:inline} $zext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $sext.i1.i32(i1: i1) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv1(i1: bv40) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i40.i1(i1: i40) : i1
{
  i1
}

function {:inline} $zext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $sext.i1.i40(i1: i1) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv1(i1: bv48) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i48.i1(i1: i48) : i1
{
  i1
}

function {:inline} $zext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $sext.i1.i48(i1: i1) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv1(i1: bv56) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i56.i1(i1: i56) : i1
{
  i1
}

function {:inline} $zext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $sext.i1.i56(i1: i1) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv1(i1: bv64) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i64.i1(i1: i64) : i1
{
  i1
}

function {:inline} $zext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $sext.i1.i64(i1: i1) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv1(i1: bv80) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i80.i1(i1: i80) : i1
{
  i1
}

function {:inline} $zext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $sext.i1.i80(i1: i1) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv1(i1: bv88) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i88.i1(i1: i88) : i1
{
  i1
}

function {:inline} $zext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $sext.i1.i88(i1: i1) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv1(i1: bv96) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i96.i1(i1: i96) : i1
{
  i1
}

function {:inline} $zext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $sext.i1.i96(i1: i1) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv1(i1: bv128) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i128.i1(i1: i128) : i1
{
  i1
}

function {:inline} $zext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $sext.i1.i128(i1: i1) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv1(i1: bv160) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i160.i1(i1: i160) : i1
{
  i1
}

function {:inline} $zext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $sext.i1.i160(i1: i1) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv1(i1: bv256) : bv1
{
  i1[1:0]
}

function {:inline} $trunc.i256.i1(i1: i256) : i1
{
  i1
}

function {:inline} $zext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $sext.i1.i256(i1: i1) : i256
{
  i1
}

function {:inline} $trunc.bv6.bv5(i1: bv6) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i6.i5(i1: i6) : i5
{
  i1
}

function {:inline} $zext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $sext.i5.i6(i1: i5) : i6
{
  i1
}

function {:inline} $trunc.bv8.bv5(i1: bv8) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i8.i5(i1: i8) : i5
{
  i1
}

function {:inline} $zext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $sext.i5.i8(i1: i5) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv5(i1: bv16) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i16.i5(i1: i16) : i5
{
  i1
}

function {:inline} $zext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $sext.i5.i16(i1: i5) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv5(i1: bv24) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i24.i5(i1: i24) : i5
{
  i1
}

function {:inline} $zext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $sext.i5.i24(i1: i5) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv5(i1: bv32) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i32.i5(i1: i32) : i5
{
  i1
}

function {:inline} $zext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $sext.i5.i32(i1: i5) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv5(i1: bv40) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i40.i5(i1: i40) : i5
{
  i1
}

function {:inline} $zext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $sext.i5.i40(i1: i5) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv5(i1: bv48) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i48.i5(i1: i48) : i5
{
  i1
}

function {:inline} $zext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $sext.i5.i48(i1: i5) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv5(i1: bv56) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i56.i5(i1: i56) : i5
{
  i1
}

function {:inline} $zext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $sext.i5.i56(i1: i5) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv5(i1: bv64) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i64.i5(i1: i64) : i5
{
  i1
}

function {:inline} $zext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $sext.i5.i64(i1: i5) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv5(i1: bv80) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i80.i5(i1: i80) : i5
{
  i1
}

function {:inline} $zext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $sext.i5.i80(i1: i5) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv5(i1: bv88) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i88.i5(i1: i88) : i5
{
  i1
}

function {:inline} $zext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $sext.i5.i88(i1: i5) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv5(i1: bv96) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i96.i5(i1: i96) : i5
{
  i1
}

function {:inline} $zext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $sext.i5.i96(i1: i5) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv5(i1: bv128) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i128.i5(i1: i128) : i5
{
  i1
}

function {:inline} $zext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $sext.i5.i128(i1: i5) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv5(i1: bv160) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i160.i5(i1: i160) : i5
{
  i1
}

function {:inline} $zext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $sext.i5.i160(i1: i5) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv5(i1: bv256) : bv5
{
  i1[5:0]
}

function {:inline} $trunc.i256.i5(i1: i256) : i5
{
  i1
}

function {:inline} $zext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $sext.i5.i256(i1: i5) : i256
{
  i1
}

function {:inline} $trunc.bv8.bv6(i1: bv8) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i8.i6(i1: i8) : i6
{
  i1
}

function {:inline} $zext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $sext.i6.i8(i1: i6) : i8
{
  i1
}

function {:inline} $trunc.bv16.bv6(i1: bv16) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i16.i6(i1: i16) : i6
{
  i1
}

function {:inline} $zext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $sext.i6.i16(i1: i6) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv6(i1: bv24) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i24.i6(i1: i24) : i6
{
  i1
}

function {:inline} $zext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $sext.i6.i24(i1: i6) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv6(i1: bv32) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i32.i6(i1: i32) : i6
{
  i1
}

function {:inline} $zext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $sext.i6.i32(i1: i6) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv6(i1: bv40) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i40.i6(i1: i40) : i6
{
  i1
}

function {:inline} $zext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $sext.i6.i40(i1: i6) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv6(i1: bv48) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i48.i6(i1: i48) : i6
{
  i1
}

function {:inline} $zext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $sext.i6.i48(i1: i6) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv6(i1: bv56) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i56.i6(i1: i56) : i6
{
  i1
}

function {:inline} $zext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $sext.i6.i56(i1: i6) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv6(i1: bv64) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i64.i6(i1: i64) : i6
{
  i1
}

function {:inline} $zext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $sext.i6.i64(i1: i6) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv6(i1: bv80) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i80.i6(i1: i80) : i6
{
  i1
}

function {:inline} $zext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $sext.i6.i80(i1: i6) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv6(i1: bv88) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i88.i6(i1: i88) : i6
{
  i1
}

function {:inline} $zext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $sext.i6.i88(i1: i6) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv6(i1: bv96) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i96.i6(i1: i96) : i6
{
  i1
}

function {:inline} $zext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $sext.i6.i96(i1: i6) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv6(i1: bv128) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i128.i6(i1: i128) : i6
{
  i1
}

function {:inline} $zext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $sext.i6.i128(i1: i6) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv6(i1: bv160) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i160.i6(i1: i160) : i6
{
  i1
}

function {:inline} $zext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $sext.i6.i160(i1: i6) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv6(i1: bv256) : bv6
{
  i1[6:0]
}

function {:inline} $trunc.i256.i6(i1: i256) : i6
{
  i1
}

function {:inline} $zext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $sext.i6.i256(i1: i6) : i256
{
  i1
}

function {:inline} $trunc.bv16.bv8(i1: bv16) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i16.i8(i1: i16) : i8
{
  i1
}

function {:inline} $zext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $sext.i8.i16(i1: i8) : i16
{
  i1
}

function {:inline} $trunc.bv24.bv8(i1: bv24) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i24.i8(i1: i24) : i8
{
  i1
}

function {:inline} $zext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $sext.i8.i24(i1: i8) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv8(i1: bv32) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i32.i8(i1: i32) : i8
{
  i1
}

function {:inline} $zext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $sext.i8.i32(i1: i8) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv8(i1: bv40) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i40.i8(i1: i40) : i8
{
  i1
}

function {:inline} $zext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $sext.i8.i40(i1: i8) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv8(i1: bv48) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i48.i8(i1: i48) : i8
{
  i1
}

function {:inline} $zext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $sext.i8.i48(i1: i8) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv8(i1: bv56) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i56.i8(i1: i56) : i8
{
  i1
}

function {:inline} $zext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $sext.i8.i56(i1: i8) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv8(i1: bv64) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i64.i8(i1: i64) : i8
{
  i1
}

function {:inline} $zext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $sext.i8.i64(i1: i8) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv8(i1: bv80) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i80.i8(i1: i80) : i8
{
  i1
}

function {:inline} $zext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $sext.i8.i80(i1: i8) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv8(i1: bv88) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i88.i8(i1: i88) : i8
{
  i1
}

function {:inline} $zext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $sext.i8.i88(i1: i8) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv8(i1: bv96) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i96.i8(i1: i96) : i8
{
  i1
}

function {:inline} $zext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $sext.i8.i96(i1: i8) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv8(i1: bv128) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i128.i8(i1: i128) : i8
{
  i1
}

function {:inline} $zext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $sext.i8.i128(i1: i8) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv8(i1: bv160) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i160.i8(i1: i160) : i8
{
  i1
}

function {:inline} $zext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $sext.i8.i160(i1: i8) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv8(i1: bv256) : bv8
{
  i1[8:0]
}

function {:inline} $trunc.i256.i8(i1: i256) : i8
{
  i1
}

function {:inline} $zext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $sext.i8.i256(i1: i8) : i256
{
  i1
}

function {:inline} $trunc.bv24.bv16(i1: bv24) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i24.i16(i1: i24) : i16
{
  i1
}

function {:inline} $zext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $sext.i16.i24(i1: i16) : i24
{
  i1
}

function {:inline} $trunc.bv32.bv16(i1: bv32) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i32.i16(i1: i32) : i16
{
  i1
}

function {:inline} $zext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $sext.i16.i32(i1: i16) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv16(i1: bv40) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i40.i16(i1: i40) : i16
{
  i1
}

function {:inline} $zext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $sext.i16.i40(i1: i16) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv16(i1: bv48) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i48.i16(i1: i48) : i16
{
  i1
}

function {:inline} $zext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $sext.i16.i48(i1: i16) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv16(i1: bv56) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i56.i16(i1: i56) : i16
{
  i1
}

function {:inline} $zext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $sext.i16.i56(i1: i16) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv16(i1: bv64) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i64.i16(i1: i64) : i16
{
  i1
}

function {:inline} $zext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $sext.i16.i64(i1: i16) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv16(i1: bv80) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i80.i16(i1: i80) : i16
{
  i1
}

function {:inline} $zext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $sext.i16.i80(i1: i16) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv16(i1: bv88) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i88.i16(i1: i88) : i16
{
  i1
}

function {:inline} $zext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $sext.i16.i88(i1: i16) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv16(i1: bv96) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i96.i16(i1: i96) : i16
{
  i1
}

function {:inline} $zext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $sext.i16.i96(i1: i16) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv16(i1: bv128) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i128.i16(i1: i128) : i16
{
  i1
}

function {:inline} $zext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $sext.i16.i128(i1: i16) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv16(i1: bv160) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i160.i16(i1: i160) : i16
{
  i1
}

function {:inline} $zext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $sext.i16.i160(i1: i16) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv16(i1: bv256) : bv16
{
  i1[16:0]
}

function {:inline} $trunc.i256.i16(i1: i256) : i16
{
  i1
}

function {:inline} $zext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $sext.i16.i256(i1: i16) : i256
{
  i1
}

function {:inline} $trunc.bv32.bv24(i1: bv32) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i32.i24(i1: i32) : i24
{
  i1
}

function {:inline} $zext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $sext.i24.i32(i1: i24) : i32
{
  i1
}

function {:inline} $trunc.bv40.bv24(i1: bv40) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i40.i24(i1: i40) : i24
{
  i1
}

function {:inline} $zext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $sext.i24.i40(i1: i24) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv24(i1: bv48) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i48.i24(i1: i48) : i24
{
  i1
}

function {:inline} $zext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $sext.i24.i48(i1: i24) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv24(i1: bv56) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i56.i24(i1: i56) : i24
{
  i1
}

function {:inline} $zext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $sext.i24.i56(i1: i24) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv24(i1: bv64) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i64.i24(i1: i64) : i24
{
  i1
}

function {:inline} $zext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $sext.i24.i64(i1: i24) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv24(i1: bv80) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i80.i24(i1: i80) : i24
{
  i1
}

function {:inline} $zext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $sext.i24.i80(i1: i24) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv24(i1: bv88) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i88.i24(i1: i88) : i24
{
  i1
}

function {:inline} $zext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $sext.i24.i88(i1: i24) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv24(i1: bv96) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i96.i24(i1: i96) : i24
{
  i1
}

function {:inline} $zext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $sext.i24.i96(i1: i24) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv24(i1: bv128) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i128.i24(i1: i128) : i24
{
  i1
}

function {:inline} $zext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $sext.i24.i128(i1: i24) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv24(i1: bv160) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i160.i24(i1: i160) : i24
{
  i1
}

function {:inline} $zext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $sext.i24.i160(i1: i24) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv24(i1: bv256) : bv24
{
  i1[24:0]
}

function {:inline} $trunc.i256.i24(i1: i256) : i24
{
  i1
}

function {:inline} $zext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $sext.i24.i256(i1: i24) : i256
{
  i1
}

function {:inline} $trunc.bv40.bv32(i1: bv40) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i40.i32(i1: i40) : i32
{
  i1
}

function {:inline} $zext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $sext.i32.i40(i1: i32) : i40
{
  i1
}

function {:inline} $trunc.bv48.bv32(i1: bv48) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i48.i32(i1: i48) : i32
{
  i1
}

function {:inline} $zext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $sext.i32.i48(i1: i32) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv32(i1: bv56) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i56.i32(i1: i56) : i32
{
  i1
}

function {:inline} $zext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $sext.i32.i56(i1: i32) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv32(i1: bv64) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i64.i32(i1: i64) : i32
{
  i1
}

function {:inline} $zext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $sext.i32.i64(i1: i32) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv32(i1: bv80) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i80.i32(i1: i80) : i32
{
  i1
}

function {:inline} $zext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $sext.i32.i80(i1: i32) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv32(i1: bv88) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i88.i32(i1: i88) : i32
{
  i1
}

function {:inline} $zext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $sext.i32.i88(i1: i32) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv32(i1: bv96) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i96.i32(i1: i96) : i32
{
  i1
}

function {:inline} $zext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $sext.i32.i96(i1: i32) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv32(i1: bv128) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i128.i32(i1: i128) : i32
{
  i1
}

function {:inline} $zext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $sext.i32.i128(i1: i32) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv32(i1: bv160) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i160.i32(i1: i160) : i32
{
  i1
}

function {:inline} $zext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $sext.i32.i160(i1: i32) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv32(i1: bv256) : bv32
{
  i1[32:0]
}

function {:inline} $trunc.i256.i32(i1: i256) : i32
{
  i1
}

function {:inline} $zext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $sext.i32.i256(i1: i32) : i256
{
  i1
}

function {:inline} $trunc.bv48.bv40(i1: bv48) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i48.i40(i1: i48) : i40
{
  i1
}

function {:inline} $zext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $sext.i40.i48(i1: i40) : i48
{
  i1
}

function {:inline} $trunc.bv56.bv40(i1: bv56) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i56.i40(i1: i56) : i40
{
  i1
}

function {:inline} $zext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $sext.i40.i56(i1: i40) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv40(i1: bv64) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i64.i40(i1: i64) : i40
{
  i1
}

function {:inline} $zext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $sext.i40.i64(i1: i40) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv40(i1: bv80) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i80.i40(i1: i80) : i40
{
  i1
}

function {:inline} $zext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $sext.i40.i80(i1: i40) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv40(i1: bv88) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i88.i40(i1: i88) : i40
{
  i1
}

function {:inline} $zext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $sext.i40.i88(i1: i40) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv40(i1: bv96) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i96.i40(i1: i96) : i40
{
  i1
}

function {:inline} $zext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $sext.i40.i96(i1: i40) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv40(i1: bv128) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i128.i40(i1: i128) : i40
{
  i1
}

function {:inline} $zext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $sext.i40.i128(i1: i40) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv40(i1: bv160) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i160.i40(i1: i160) : i40
{
  i1
}

function {:inline} $zext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $sext.i40.i160(i1: i40) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv40(i1: bv256) : bv40
{
  i1[40:0]
}

function {:inline} $trunc.i256.i40(i1: i256) : i40
{
  i1
}

function {:inline} $zext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $sext.i40.i256(i1: i40) : i256
{
  i1
}

function {:inline} $trunc.bv56.bv48(i1: bv56) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i56.i48(i1: i56) : i48
{
  i1
}

function {:inline} $zext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $sext.i48.i56(i1: i48) : i56
{
  i1
}

function {:inline} $trunc.bv64.bv48(i1: bv64) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i64.i48(i1: i64) : i48
{
  i1
}

function {:inline} $zext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $sext.i48.i64(i1: i48) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv48(i1: bv80) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i80.i48(i1: i80) : i48
{
  i1
}

function {:inline} $zext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $sext.i48.i80(i1: i48) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv48(i1: bv88) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i88.i48(i1: i88) : i48
{
  i1
}

function {:inline} $zext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $sext.i48.i88(i1: i48) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv48(i1: bv96) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i96.i48(i1: i96) : i48
{
  i1
}

function {:inline} $zext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $sext.i48.i96(i1: i48) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv48(i1: bv128) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i128.i48(i1: i128) : i48
{
  i1
}

function {:inline} $zext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $sext.i48.i128(i1: i48) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv48(i1: bv160) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i160.i48(i1: i160) : i48
{
  i1
}

function {:inline} $zext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $sext.i48.i160(i1: i48) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv48(i1: bv256) : bv48
{
  i1[48:0]
}

function {:inline} $trunc.i256.i48(i1: i256) : i48
{
  i1
}

function {:inline} $zext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $sext.i48.i256(i1: i48) : i256
{
  i1
}

function {:inline} $trunc.bv64.bv56(i1: bv64) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i64.i56(i1: i64) : i56
{
  i1
}

function {:inline} $zext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $sext.i56.i64(i1: i56) : i64
{
  i1
}

function {:inline} $trunc.bv80.bv56(i1: bv80) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i80.i56(i1: i80) : i56
{
  i1
}

function {:inline} $zext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $sext.i56.i80(i1: i56) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv56(i1: bv88) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i88.i56(i1: i88) : i56
{
  i1
}

function {:inline} $zext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $sext.i56.i88(i1: i56) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv56(i1: bv96) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i96.i56(i1: i96) : i56
{
  i1
}

function {:inline} $zext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $sext.i56.i96(i1: i56) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv56(i1: bv128) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i128.i56(i1: i128) : i56
{
  i1
}

function {:inline} $zext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $sext.i56.i128(i1: i56) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv56(i1: bv160) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i160.i56(i1: i160) : i56
{
  i1
}

function {:inline} $zext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $sext.i56.i160(i1: i56) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv56(i1: bv256) : bv56
{
  i1[56:0]
}

function {:inline} $trunc.i256.i56(i1: i256) : i56
{
  i1
}

function {:inline} $zext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $sext.i56.i256(i1: i56) : i256
{
  i1
}

function {:inline} $trunc.bv80.bv64(i1: bv80) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i80.i64(i1: i80) : i64
{
  i1
}

function {:inline} $zext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $sext.i64.i80(i1: i64) : i80
{
  i1
}

function {:inline} $trunc.bv88.bv64(i1: bv88) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i88.i64(i1: i88) : i64
{
  i1
}

function {:inline} $zext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $sext.i64.i88(i1: i64) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv64(i1: bv96) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i96.i64(i1: i96) : i64
{
  i1
}

function {:inline} $zext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $sext.i64.i96(i1: i64) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv64(i1: bv128) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i128.i64(i1: i128) : i64
{
  i1
}

function {:inline} $zext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $sext.i64.i128(i1: i64) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv64(i1: bv160) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i160.i64(i1: i160) : i64
{
  i1
}

function {:inline} $zext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $sext.i64.i160(i1: i64) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv64(i1: bv256) : bv64
{
  i1[64:0]
}

function {:inline} $trunc.i256.i64(i1: i256) : i64
{
  i1
}

function {:inline} $zext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $sext.i64.i256(i1: i64) : i256
{
  i1
}

function {:inline} $trunc.bv88.bv80(i1: bv88) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i88.i80(i1: i88) : i80
{
  i1
}

function {:inline} $zext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $sext.i80.i88(i1: i80) : i88
{
  i1
}

function {:inline} $trunc.bv96.bv80(i1: bv96) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i96.i80(i1: i96) : i80
{
  i1
}

function {:inline} $zext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $sext.i80.i96(i1: i80) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv80(i1: bv128) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i128.i80(i1: i128) : i80
{
  i1
}

function {:inline} $zext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $sext.i80.i128(i1: i80) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv80(i1: bv160) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i160.i80(i1: i160) : i80
{
  i1
}

function {:inline} $zext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $sext.i80.i160(i1: i80) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv80(i1: bv256) : bv80
{
  i1[80:0]
}

function {:inline} $trunc.i256.i80(i1: i256) : i80
{
  i1
}

function {:inline} $zext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $sext.i80.i256(i1: i80) : i256
{
  i1
}

function {:inline} $trunc.bv96.bv88(i1: bv96) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i96.i88(i1: i96) : i88
{
  i1
}

function {:inline} $zext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $sext.i88.i96(i1: i88) : i96
{
  i1
}

function {:inline} $trunc.bv128.bv88(i1: bv128) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i128.i88(i1: i128) : i88
{
  i1
}

function {:inline} $zext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $sext.i88.i128(i1: i88) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv88(i1: bv160) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i160.i88(i1: i160) : i88
{
  i1
}

function {:inline} $zext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $sext.i88.i160(i1: i88) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv88(i1: bv256) : bv88
{
  i1[88:0]
}

function {:inline} $trunc.i256.i88(i1: i256) : i88
{
  i1
}

function {:inline} $zext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $sext.i88.i256(i1: i88) : i256
{
  i1
}

function {:inline} $trunc.bv128.bv96(i1: bv128) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i128.i96(i1: i128) : i96
{
  i1
}

function {:inline} $zext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $sext.i96.i128(i1: i96) : i128
{
  i1
}

function {:inline} $trunc.bv160.bv96(i1: bv160) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i160.i96(i1: i160) : i96
{
  i1
}

function {:inline} $zext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $sext.i96.i160(i1: i96) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv96(i1: bv256) : bv96
{
  i1[96:0]
}

function {:inline} $trunc.i256.i96(i1: i256) : i96
{
  i1
}

function {:inline} $zext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $sext.i96.i256(i1: i96) : i256
{
  i1
}

function {:inline} $trunc.bv160.bv128(i1: bv160) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i160.i128(i1: i160) : i128
{
  i1
}

function {:inline} $zext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $sext.i128.i160(i1: i128) : i160
{
  i1
}

function {:inline} $trunc.bv256.bv128(i1: bv256) : bv128
{
  i1[128:0]
}

function {:inline} $trunc.i256.i128(i1: i256) : i128
{
  i1
}

function {:inline} $zext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $sext.i128.i256(i1: i128) : i256
{
  i1
}

function {:inline} $trunc.bv256.bv160(i1: bv256) : bv160
{
  i1[160:0]
}

function {:inline} $trunc.i256.i160(i1: i256) : i160
{
  i1
}

function {:inline} $zext.i160.i256(i1: i160) : i256
{
  i1
}

function {:inline} $sext.i160.i256(i1: i160) : i256
{
  i1
}

procedure {:LoopProcedure} aty_var_to_pll_514_loop_$bb1(in_$i1: i32, in_$i4: i32, in_$i5: i64, in_$i6: i64, in_$i7: i1, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i32, in_$i13: i1, in_$i14: i32, in_$i32: i32) returns (out_$i4: i32, out_$i5: i64, out_$i6: i64, out_$i7: i1, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i32, out_$i13: i1, out_$i14: i32, out_$i32: i32);



procedure {:LoopProcedure} aty_var_to_pll_18818_loop_$bb6(in_$i8: i32, in_$i9: i32, in_$i10: i1, in_$i11: i32, in_$i12: i32, in_$i13: i32, in_$i14: i32) returns (out_$i8: i32, out_$i9: i32, out_$i10: i1, out_$i11: i32, out_$i12: i32, out_$i13: i32, out_$i14: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb19(in_$i63: i64, in_$i64: i64, in_$i65: i1) returns (out_$i63: i64, out_$i64: i64, out_$i65: i1);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb13(in_$p6: ref, in_$i46: i32, in_$i47: i32, in_$i48: i1, in_$i49: i32, in_$i50: i8, in_$i51: i32, in_$i52: i32) returns (out_$i46: i32, out_$i47: i32, out_$i48: i1, out_$i49: i32, out_$i50: i8, out_$i51: i32, out_$i52: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb7(in_$p6: ref, in_$i39: i32, in_$i40: i32, in_$i41: i1, in_$i42: i32, in_$i43: i8, in_$i44: i32, in_$i45: i32) returns (out_$i39: i32, out_$i40: i32, out_$i41: i1, out_$i42: i32, out_$i43: i8, out_$i44: i32, out_$i45: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb1(in_$i18: i64, in_$i19: i64, in_$i20: i1) returns (out_$i18: i64, out_$i19: i64, out_$i20: i1);



procedure {:LoopProcedure} aty_var_to_pll_1703_loop_$bb16(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16);



procedure {:LoopProcedure} aty_var_to_pll_1703_loop_$bb10(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_var_to_pll_8398_loop_$bb22(in_$i12: i32, in_$i24: i16, in_$i26: i16, in_$i33: i32, in_$i34: i16, in_$i35: i16, in_$i36: i16, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i16, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i54: i32, in_$i53: i32, in_$i55: i1, in_$i56: i32, in_$i57: i16, in_$i58: i16, in_$i59: i32, in_$i60: i32, in_$i61: i16) returns (out_$i33: i32, out_$i34: i16, out_$i35: i16, out_$i36: i16, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i16, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i54: i32, out_$i53: i32, out_$i55: i1, out_$i56: i32, out_$i57: i16, out_$i58: i16, out_$i59: i32, out_$i60: i32, out_$i61: i16);



procedure {:LoopProcedure} aty_var_to_pll_8398_loop_$bb16(in_$i12: i32, in_$i24: i16, in_$i25: i32, in_$i26: i16, in_$i27: i16, in_$i28: i16, in_$i29: i32, in_$i30: i1, in_$i31: i16, in_$i32: i16, in_$i33: i32, in_$i34: i16, in_$i35: i16, in_$i36: i16, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i16, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i54: i32, in_$i53: i32, in_$i55: i1, in_$i56: i32, in_$i57: i16, in_$i58: i16, in_$i59: i32, in_$i60: i32, in_$i61: i16, in_$i62: i32, in_$i63: i32, in_$i64: i16) returns (out_$i25: i32, out_$i26: i16, out_$i27: i16, out_$i28: i16, out_$i29: i32, out_$i30: i1, out_$i31: i16, out_$i32: i16, out_$i33: i32, out_$i34: i16, out_$i35: i16, out_$i36: i16, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i16, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i54: i32, out_$i53: i32, out_$i55: i1, out_$i56: i32, out_$i57: i16, out_$i58: i16, out_$i59: i32, out_$i60: i32, out_$i61: i16, out_$i62: i32, out_$i63: i32, out_$i64: i16);



procedure {:LoopProcedure} aty_var_to_pll_8398_loop_$bb10(in_$i13: i32, in_$i14: i32, in_$i15: i16, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i14: i32, out_$i15: i16, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_var_to_pll_408_loop_$bb16(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16);



procedure {:LoopProcedure} aty_var_to_pll_408_loop_$bb10(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb30(in_$i153: i64, in_$i154: i64, in_$i155: i1) returns (out_$i153: i64, out_$i154: i64, out_$i155: i1);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb24(in_$i147: i64, in_$i148: i64, in_$i149: i1) returns (out_$i147: i64, out_$i148: i64, out_$i149: i1);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb18(in_$i144: i64, in_$i145: i64, in_$i146: i1) returns (out_$i144: i64, out_$i145: i64, out_$i146: i1);



procedure {:LoopProcedure} aty_valid_pll_ct_loop_$bb10(in_$p7: ref, in_$i105: i32, in_$i106: i32, in_$i107: i64, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i1, in_$i113: i1, in_$i114: i32, in_$i112: i32, in_$i116: i32, in_$i117: i32) returns (out_$i105: i32, out_$i106: i32, out_$i107: i64, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i1, out_$i113: i1, out_$i114: i32, out_$i112: i32, out_$i116: i32, out_$i117: i32);



procedure {:LoopProcedure} aty_dsp_gt_loop_$bb16(in_$i100: i32, in_$i101: i8, in_$i102: i1, in_$i103: i8, in_$i104: i32, in_$i105: i32, in_$i106: i32, in_$i107: i8) returns (out_$i100: i32, out_$i101: i8, out_$i102: i1, out_$i103: i8, out_$i104: i32, out_$i105: i32, out_$i106: i32, out_$i107: i8);



procedure {:LoopProcedure} aty_dsp_gt_loop_$bb10(in_$i83: i32, in_$i84: i32, in_$i85: i32, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i32, in_$i90: i32, in_$i91: i32) returns (out_$i83: i32, out_$i84: i32, out_$i85: i32, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i32, out_$i90: i32, out_$i91: i32);



procedure {:LoopProcedure} aty_var_to_crtc_loop_$bb223(in_$i693: i32, in_$i694: i32, in_$i695: i32, in_$i696: i32, in_$i697: i32, in_$i698: i1, in_$i699: i32, in_$i700: i1, in_$i701: i32, in_$i704: i32, in_$i705: i32, in_$i702: i32, in_$i703: i32, in_$i706: i32, in_$i707: i32, in_$i708: i32) returns (out_$i693: i32, out_$i694: i32, out_$i695: i32, out_$i696: i32, out_$i697: i32, out_$i698: i1, out_$i699: i32, out_$i700: i1, out_$i701: i32, out_$i704: i32, out_$i705: i32, out_$i702: i32, out_$i703: i32, out_$i706: i32, out_$i707: i32, out_$i708: i32);



procedure {:LoopProcedure} aty_var_to_crtc_loop_$bb207(in_$i658: i32, in_$i659: i32, in_$i660: i32, in_$i661: i32, in_$i662: i1, in_$i663: i32, in_$i664: i32, in_$i667: i32, in_$i668: i64, in_$i669: i64, in_$i670: i64, in_$p671: ref, in_$i672: i8, in_$i673: i32, in_$i674: i32, in_$i675: i32, in_$i676: i32, in_$i677: i32, in_$i678: i32, in_$i679: i1, in_$i680: i1, in_$i681: i32, in_$i682: i32, in_$i683: i32, in_$i684: i32) returns (out_$i658: i32, out_$i659: i32, out_$i660: i32, out_$i661: i32, out_$i662: i1, out_$i663: i32, out_$i664: i32, out_$i667: i32, out_$i668: i64, out_$i669: i64, out_$i670: i64, out_$p671: ref, out_$i672: i8, out_$i673: i32, out_$i674: i32, out_$i675: i32, out_$i676: i32, out_$i677: i32, out_$i678: i32, out_$i679: i1, out_$i680: i1, out_$i681: i32, out_$i682: i32, out_$i683: i32, out_$i684: i32);



procedure {:LoopProcedure} wait_for_idle_loop_$bb1(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$i3: i1) returns (out_$i1: i32, out_$i2: i32, out_$i3: i1);



procedure {:LoopProcedure} wait_for_fifo_loop_$bb1(in_$i0: i16, in_$p1: ref, in_$i2: i32, in_$i3: i32, in_$i4: i32, in_$i5: i32, in_$i6: i1) returns (out_$i2: i32, out_$i3: i32, out_$i4: i32, out_$i5: i32, out_$i6: i1);



procedure {:LoopProcedure} ATIReduceRatio_loop_$bb1(in_$i4: i32, in_$i5: i32, in_$i6: i32, in_$i7: i1, in_$i8: i32) returns (out_$i4: i32, out_$i5: i32, out_$i6: i32, out_$i7: i1, out_$i8: i32);



procedure {:LoopProcedure} aty_calc_mem_refresh_loop_$bb4(in_$i1: i32, in_$p104: ref, in_$i105: i32, in_$i112: i32, in_$i113: i1, in_$i114: i32, in_$i116: i64, in_$p117: ref, in_$i118: i32, in_$i119: i1, in_$i120: i32, in_$i121: i32) returns (out_$i112: i32, out_$i113: i1, out_$i114: i32, out_$i116: i64, out_$p117: ref, out_$i118: i32, out_$i119: i1, out_$i120: i32, out_$i121: i32);



procedure {:LoopProcedure} atyfb_cursor_loop_$bb31(in_$p1: ref, in_$i197: i32, in_$p213: ref, in_$p214: ref, in_$p215: ref, in_$i216: i32, in_$i217: i1, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$p221: ref, in_$i222: i8, in_$p223: ref, in_$i224: i8, in_$i225: i64, in_$i226: i64, in_$p227: ref, in_$i228: i16, in_$i229: i32, in_$i230: i1, in_$i231: i32, in_$i232: i1, in_$p233: ref, in_$i234: i32, in_$i235: i32, in_$i236: i32, in_$i237: i32, in_$i238: i64, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i8, in_$i243: i64, in_$p244: ref, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$i248: i32, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i8, in_$p255: ref, in_$i256: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i260: i64, in_$i261: i64, in_$i262: i64, in_$p263: ref, in_$i264: i8, in_$i265: i64, in_$p266: ref, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i64, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i8, in_$p254: ref, in_$i276: i32) returns (out_$p213: ref, out_$p214: ref, out_$p215: ref, out_$i216: i32, out_$i217: i1, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$p221: ref, out_$i222: i8, out_$p223: ref, out_$i224: i8, out_$i225: i64, out_$i226: i64, out_$p227: ref, out_$i228: i16, out_$i229: i32, out_$i230: i1, out_$i231: i32, out_$i232: i1, out_$p233: ref, out_$i234: i32, out_$i235: i32, out_$i236: i32, out_$i237: i32, out_$i238: i64, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i8, out_$i243: i64, out_$p244: ref, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$i248: i32, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i8, out_$p255: ref, out_$i256: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i260: i64, out_$i261: i64, out_$i262: i64, out_$p263: ref, out_$i264: i8, out_$i265: i64, out_$p266: ref, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i64, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i8, out_$p254: ref, out_$i276: i32);



procedure {:LoopProcedure} atyfb_cursor_loop_$bb25(in_$p1: ref, in_$i197: i32, in_$i201: i32, in_$i207: i32, in_$p208: ref, in_$p209: ref, in_$p210: ref, in_$i211: i32, in_$i212: i1, in_$p213: ref, in_$p214: ref, in_$p215: ref, in_$i216: i32, in_$i217: i1, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$p221: ref, in_$i222: i8, in_$p223: ref, in_$i224: i8, in_$i225: i64, in_$i226: i64, in_$p227: ref, in_$i228: i16, in_$i229: i32, in_$i230: i1, in_$i231: i32, in_$i232: i1, in_$p233: ref, in_$i234: i32, in_$i235: i32, in_$i236: i32, in_$i237: i32, in_$i238: i64, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i8, in_$i243: i64, in_$p244: ref, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$i248: i32, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i8, in_$p255: ref, in_$i256: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i260: i64, in_$i261: i64, in_$i262: i64, in_$p263: ref, in_$i264: i8, in_$i265: i64, in_$p266: ref, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i64, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i8, in_$p254: ref, in_$i276: i32, in_$i277: i64, in_$p278: ref, in_$i279: i32) returns (out_$p208: ref, out_$p209: ref, out_$p210: ref, out_$i211: i32, out_$i212: i1, out_$p213: ref, out_$p214: ref, out_$p215: ref, out_$i216: i32, out_$i217: i1, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$p221: ref, out_$i222: i8, out_$p223: ref, out_$i224: i8, out_$i225: i64, out_$i226: i64, out_$p227: ref, out_$i228: i16, out_$i229: i32, out_$i230: i1, out_$i231: i32, out_$i232: i1, out_$p233: ref, out_$i234: i32, out_$i235: i32, out_$i236: i32, out_$i237: i32, out_$i238: i64, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i8, out_$i243: i64, out_$p244: ref, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$i248: i32, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i8, out_$p255: ref, out_$i256: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i260: i64, out_$i261: i64, out_$i262: i64, out_$p263: ref, out_$i264: i8, out_$i265: i64, out_$p266: ref, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i64, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i8, out_$p254: ref, out_$i276: i32, out_$i277: i64, out_$p278: ref, out_$i279: i32);



procedure {:LoopProcedure} correct_chipset_loop_$bb1(in_$p0: ref, in_$i4: i32, in_$i5: i1, in_$i6: i32, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i16, in_$i13: i32, in_$i14: i64, in_$i15: i64, in_$p16: ref, in_$i17: i16, in_$i18: i32, in_$i19: i1, in_$i20: i32, in_$i21: i32) returns (out_$i4: i32, out_$i5: i1, out_$i6: i32, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i16, out_$i13: i32, out_$i14: i64, out_$i15: i64, out_$p16: ref, out_$i17: i16, out_$i18: i32, out_$i19: i1, out_$i20: i32, out_$i21: i32);



procedure {:LoopProcedure} atyfb_setcolreg_loop_$bb62(in_$p10: ref, in_$i40: i32, in_$i41: i32, in_$i42: i32, in_$i150: i32, in_$i151: i32, in_$i152: i1, in_$i153: i32, in_$i154: i32) returns (out_$i151: i32, out_$i152: i1, out_$i153: i32, out_$i154: i32);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb111(in_$p7: ref, in_$p323: ref, in_$i324: i32, in_$i325: i1, in_$i326: i32, in_$i327: i32, in_$p328: ref) returns (out_$p323: ref, out_$i324: i32, out_$i325: i1, out_$i326: i32, out_$i327: i32, out_$p328: ref);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb89(in_$p1: ref, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i32, in_$p272: ref, in_$i273: i32, in_$i274: i1, in_$i275: i32, in_$i276: i32, in_$i277: i32, in_$p278: ref, in_$i279: i32, in_$i280: i8, in_$i281: i32, in_$i282: i32, in_$i283: i32, in_$i284: i32, in_$i285: i8, in_$i286: i32, in_$i287: i32, in_$i288: i8, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i32, in_$i295: i32, in_$i296: i1, in_$i297: i1, in_$i298: i32, in_$p299: ref, in_$i300: i1, in_$i301: i64, in_$i302: i64, in_$p303: ref, in_$i304: i32, in_$i305: i32, in_$i306: i32, in_$i307: i32, in_$i308: i32, in_$i309: i32, in_$p310: ref, in_$i311: i32, in_$i312: i32) returns (out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i32, out_$p272: ref, out_$i273: i32, out_$i274: i1, out_$i275: i32, out_$i276: i32, out_$i277: i32, out_$p278: ref, out_$i279: i32, out_$i280: i8, out_$i281: i32, out_$i282: i32, out_$i283: i32, out_$i284: i32, out_$i285: i8, out_$i286: i32, out_$i287: i32, out_$i288: i8, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i32, out_$i295: i32, out_$i296: i1, out_$i297: i1, out_$i298: i32, out_$p299: ref, out_$i300: i1, out_$i301: i64, out_$i302: i64, out_$p303: ref, out_$i304: i32, out_$i305: i32, out_$i306: i32, out_$i307: i32, out_$i308: i32, out_$i309: i32, out_$p310: ref, out_$i311: i32, out_$i312: i32);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb80(in_$p1: ref, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$p248: ref, in_$i249: i32, in_$p250: ref, in_$i251: i1, in_$i257: i1, in_$i258: i32, in_$i259: i32, in_$i260: i32, in_$p261: ref, in_$i262: i32, in_$i252: i32, in_$i253: i32, in_$i254: i32, in_$p255: ref, in_$i256: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i32, in_$p272: ref, in_$i273: i32, in_$i274: i1, in_$i275: i32, in_$i276: i32, in_$i277: i32, in_$p278: ref, in_$i279: i32, in_$i280: i8, in_$i281: i32, in_$i282: i32, in_$i283: i32, in_$i284: i32, in_$i285: i8, in_$i286: i32, in_$i287: i32, in_$i288: i8, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i32, in_$i295: i32, in_$i296: i1, in_$i297: i1, in_$i298: i32, in_$p299: ref, in_$i300: i1, in_$i301: i64, in_$i302: i64, in_$p303: ref, in_$i304: i32, in_$i305: i32, in_$i306: i32, in_$i307: i32, in_$i308: i32, in_$i309: i32, in_$p310: ref, in_$i311: i32, in_$i312: i32, in_$i313: i32, in_$p314: ref) returns (out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$p248: ref, out_$i249: i32, out_$p250: ref, out_$i251: i1, out_$i257: i1, out_$i258: i32, out_$i259: i32, out_$i260: i32, out_$p261: ref, out_$i262: i32, out_$i252: i32, out_$i253: i32, out_$i254: i32, out_$p255: ref, out_$i256: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i32, out_$p272: ref, out_$i273: i32, out_$i274: i1, out_$i275: i32, out_$i276: i32, out_$i277: i32, out_$p278: ref, out_$i279: i32, out_$i280: i8, out_$i281: i32, out_$i282: i32, out_$i283: i32, out_$i284: i32, out_$i285: i8, out_$i286: i32, out_$i287: i32, out_$i288: i8, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i32, out_$i295: i32, out_$i296: i1, out_$i297: i1, out_$i298: i32, out_$p299: ref, out_$i300: i1, out_$i301: i64, out_$i302: i64, out_$p303: ref, out_$i304: i32, out_$i305: i32, out_$i306: i32, out_$i307: i32, out_$i308: i32, out_$i309: i32, out_$p310: ref, out_$i311: i32, out_$i312: i32, out_$i313: i32, out_$p314: ref);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb74(in_$p1: ref, in_$p2: ref, in_$p7: ref, in_$i237: i32, in_$i238: i32, in_$i239: i32, in_$p240: ref, in_$i241: i32, in_$i242: i1, in_$p243: ref, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$p248: ref, in_$i249: i32, in_$p250: ref, in_$i251: i1, in_$i257: i1, in_$i258: i32, in_$i259: i32, in_$i260: i32, in_$p261: ref, in_$i262: i32, in_$i252: i32, in_$i253: i32, in_$i254: i32, in_$p255: ref, in_$i256: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i32, in_$p272: ref, in_$i273: i32, in_$i274: i1, in_$i275: i32, in_$i276: i32, in_$i277: i32, in_$p278: ref, in_$i279: i32, in_$i280: i8, in_$i281: i32, in_$i282: i32, in_$i283: i32, in_$i284: i32, in_$i285: i8, in_$i286: i32, in_$i287: i32, in_$i288: i8, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i32, in_$i295: i32, in_$i296: i1, in_$i297: i1, in_$i298: i32, in_$p299: ref, in_$i300: i1, in_$i301: i64, in_$i302: i64, in_$p303: ref, in_$i304: i32, in_$i305: i32, in_$i306: i32, in_$i307: i32, in_$i308: i32, in_$i309: i32, in_$p310: ref, in_$i311: i32, in_$i312: i32, in_$i313: i32, in_$p314: ref, in_$i263: i32, in_$i264: i32, in_$i265: i32, in_$p266: ref, in_$i267: i32, in_$i315: i32) returns (out_$i237: i32, out_$i238: i32, out_$i239: i32, out_$p240: ref, out_$i241: i32, out_$i242: i1, out_$p243: ref, out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$p248: ref, out_$i249: i32, out_$p250: ref, out_$i251: i1, out_$i257: i1, out_$i258: i32, out_$i259: i32, out_$i260: i32, out_$p261: ref, out_$i262: i32, out_$i252: i32, out_$i253: i32, out_$i254: i32, out_$p255: ref, out_$i256: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i32, out_$p272: ref, out_$i273: i32, out_$i274: i1, out_$i275: i32, out_$i276: i32, out_$i277: i32, out_$p278: ref, out_$i279: i32, out_$i280: i8, out_$i281: i32, out_$i282: i32, out_$i283: i32, out_$i284: i32, out_$i285: i8, out_$i286: i32, out_$i287: i32, out_$i288: i8, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i32, out_$i295: i32, out_$i296: i1, out_$i297: i1, out_$i298: i32, out_$p299: ref, out_$i300: i1, out_$i301: i64, out_$i302: i64, out_$p303: ref, out_$i304: i32, out_$i305: i32, out_$i306: i32, out_$i307: i32, out_$i308: i32, out_$i309: i32, out_$p310: ref, out_$i311: i32, out_$i312: i32, out_$i313: i32, out_$p314: ref, out_$i263: i32, out_$i264: i32, out_$i265: i32, out_$p266: ref, out_$i267: i32, out_$i315: i32);



procedure {:LoopProcedure} aty_waitforvblank_loop_$bb19(in_$p2: ref, in_$p6: ref, in_$i13: i32, in_$i42: i64, in_$p43: ref, in_$i44: i64, in_$i45: i64, in_$p46: ref, in_$i47: i32, in_$i48: i1, in_$i49: i64, in_$p51: ref, in_$i52: i32, in_$i53: i1, in_$i54: i64, in_$i55: i1, in_$i56: i64) returns (out_$i42: i64, out_$p43: ref, out_$i44: i64, out_$i45: i64, out_$p46: ref, out_$i47: i32, out_$i48: i1, out_$i49: i64, out_$p51: ref, out_$i52: i32, out_$i53: i1, out_$i54: i64, out_$i55: i1, out_$i56: i64);



procedure {:LoopProcedure} main_loop_$bb5(in_$i2: i32, in_$i3: i32, in_$i4: i1, in_$i5: i1, in_$i6: i32, in_$i7: i1, in_$i8: i32, in_$i9: i1, in_$i10: i1, in_$i11: i1, in_$i12: i1, in_$i13: i1, in_$i14: i1, in_$i15: i1, in_$i16: i1, in_$i17: i1, in_$i18: i1, in_$i19: i1, in_$i20: i1, in_$i21: i1, in_$i22: i1, in_$i23: i1, in_$i24: i1, in_$i25: i1, in_$i26: i32, in_$i28: i32, in_$i29: i32, in_$i30: i32, in_$i31: i32, in_$i32: i32, in_$i33: i32, in_$i34: i32, in_$i35: i32, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i32, in_$i42: i1, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i27: i32) returns (out_$i2: i32, out_$i3: i32, out_$i4: i1, out_$i5: i1, out_$i6: i32, out_$i7: i1, out_$i8: i32, out_$i9: i1, out_$i10: i1, out_$i11: i1, out_$i12: i1, out_$i13: i1, out_$i14: i1, out_$i15: i1, out_$i16: i1, out_$i17: i1, out_$i18: i1, out_$i19: i1, out_$i20: i1, out_$i21: i1, out_$i22: i1, out_$i23: i1, out_$i24: i1, out_$i25: i1, out_$i26: i32, out_$i28: i32, out_$i29: i32, out_$i30: i32, out_$i31: i32, out_$i32: i32, out_$i33: i32, out_$i34: i32, out_$i35: i32, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i32, out_$i42: i1, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i27: i32);



procedure {:LoopProcedure} aty_var_to_pll_514_loop_$bb1_PassiveCopy(in_$i1: i32, in_$i4: i32, in_$i5: i64, in_$i6: i64, in_$i7: i1, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i32, in_$i13: i1, in_$i14: i32, in_$i32: i32) returns (out_$i4: i32, out_$i5: i64, out_$i6: i64, out_$i7: i1, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i32, out_$i13: i1, out_$i14: i32, out_$i32: i32);



procedure {:LoopProcedure} aty_var_to_pll_18818_loop_$bb6_PassiveCopy(in_$i8: i32, in_$i9: i32, in_$i10: i1, in_$i11: i32, in_$i12: i32, in_$i13: i32, in_$i14: i32) returns (out_$i8: i32, out_$i9: i32, out_$i10: i1, out_$i11: i32, out_$i12: i32, out_$i13: i32, out_$i14: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb19_PassiveCopy(in_$i63: i64, in_$i64: i64, in_$i65: i1) returns (out_$i63: i64, out_$i64: i64, out_$i65: i1);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb13_PassiveCopy(in_$p6: ref, in_$i46: i32, in_$i47: i32, in_$i48: i1, in_$i49: i32, in_$i50: i8, in_$i51: i32, in_$i52: i32) returns (out_$i46: i32, out_$i47: i32, out_$i48: i1, out_$i49: i32, out_$i50: i8, out_$i51: i32, out_$i52: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb7_PassiveCopy(in_$p6: ref, in_$i39: i32, in_$i40: i32, in_$i41: i1, in_$i42: i32, in_$i43: i8, in_$i44: i32, in_$i45: i32) returns (out_$i39: i32, out_$i40: i32, out_$i41: i1, out_$i42: i32, out_$i43: i8, out_$i44: i32, out_$i45: i32);



procedure {:LoopProcedure} aty_set_pll18818_loop_$bb1_PassiveCopy(in_$i18: i64, in_$i19: i64, in_$i20: i1) returns (out_$i18: i64, out_$i19: i64, out_$i20: i1);



procedure {:LoopProcedure} aty_var_to_pll_1703_loop_$bb16_PassiveCopy(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16);



procedure {:LoopProcedure} aty_var_to_pll_1703_loop_$bb10_PassiveCopy(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_var_to_pll_8398_loop_$bb16_PassiveCopy(in_$i12: i32, in_$i24: i16, in_$i25: i32, in_$i26: i16, in_$i27: i16, in_$i28: i16, in_$i29: i32, in_$i30: i1, in_$i31: i16, in_$i32: i16, in_$i33: i32, in_$i34: i16, in_$i35: i16, in_$i36: i16, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i16, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i54: i32, in_$i53: i32, in_$i55: i1, in_$i56: i32, in_$i57: i16, in_$i58: i16, in_$i59: i32, in_$i60: i32, in_$i61: i16, in_$i62: i32, in_$i63: i32, in_$i64: i16) returns (out_$i25: i32, out_$i26: i16, out_$i27: i16, out_$i28: i16, out_$i29: i32, out_$i30: i1, out_$i31: i16, out_$i32: i16, out_$i33: i32, out_$i34: i16, out_$i35: i16, out_$i36: i16, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i16, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i54: i32, out_$i53: i32, out_$i55: i1, out_$i56: i32, out_$i57: i16, out_$i58: i16, out_$i59: i32, out_$i60: i32, out_$i61: i16, out_$i62: i32, out_$i63: i32, out_$i64: i16);



procedure {:LoopProcedure} aty_var_to_pll_8398_loop_$bb10_PassiveCopy(in_$i13: i32, in_$i14: i32, in_$i15: i16, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i14: i32, out_$i15: i16, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_var_to_pll_408_loop_$bb16_PassiveCopy(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16);



procedure {:LoopProcedure} aty_var_to_pll_408_loop_$bb10_PassiveCopy(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb30_PassiveCopy(in_$i153: i64, in_$i154: i64, in_$i155: i1) returns (out_$i153: i64, out_$i154: i64, out_$i155: i1);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb24_PassiveCopy(in_$i147: i64, in_$i148: i64, in_$i149: i1) returns (out_$i147: i64, out_$i148: i64, out_$i149: i1);



procedure {:LoopProcedure} aty_set_pll_ct_loop_$bb18_PassiveCopy(in_$i144: i64, in_$i145: i64, in_$i146: i1) returns (out_$i144: i64, out_$i145: i64, out_$i146: i1);



procedure {:LoopProcedure} aty_valid_pll_ct_loop_$bb10_PassiveCopy(in_$p7: ref, in_$i105: i32, in_$i106: i32, in_$i107: i64, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i1, in_$i113: i1, in_$i114: i32, in_$i112: i32, in_$i116: i32, in_$i117: i32) returns (out_$i105: i32, out_$i106: i32, out_$i107: i64, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i1, out_$i113: i1, out_$i114: i32, out_$i112: i32, out_$i116: i32, out_$i117: i32);



procedure {:LoopProcedure} aty_dsp_gt_loop_$bb16_PassiveCopy(in_$i100: i32, in_$i101: i8, in_$i102: i1, in_$i103: i8, in_$i104: i32, in_$i105: i32, in_$i106: i32, in_$i107: i8) returns (out_$i100: i32, out_$i101: i8, out_$i102: i1, out_$i103: i8, out_$i104: i32, out_$i105: i32, out_$i106: i32, out_$i107: i8);



procedure {:LoopProcedure} aty_dsp_gt_loop_$bb10_PassiveCopy(in_$i83: i32, in_$i84: i32, in_$i85: i32, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i32, in_$i90: i32, in_$i91: i32) returns (out_$i83: i32, out_$i84: i32, out_$i85: i32, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i32, out_$i90: i32, out_$i91: i32);



procedure {:LoopProcedure} aty_var_to_crtc_loop_$bb223_PassiveCopy(in_$i693: i32, in_$i694: i32, in_$i695: i32, in_$i696: i32, in_$i697: i32, in_$i698: i1, in_$i699: i32, in_$i700: i1, in_$i701: i32, in_$i704: i32, in_$i705: i32, in_$i702: i32, in_$i703: i32, in_$i706: i32, in_$i707: i32, in_$i708: i32) returns (out_$i693: i32, out_$i694: i32, out_$i695: i32, out_$i696: i32, out_$i697: i32, out_$i698: i1, out_$i699: i32, out_$i700: i1, out_$i701: i32, out_$i704: i32, out_$i705: i32, out_$i702: i32, out_$i703: i32, out_$i706: i32, out_$i707: i32, out_$i708: i32);



procedure {:LoopProcedure} aty_var_to_crtc_loop_$bb207_PassiveCopy(in_$i658: i32, in_$i659: i32, in_$i660: i32, in_$i661: i32, in_$i662: i1, in_$i663: i32, in_$i664: i32, in_$i667: i32, in_$i668: i64, in_$i669: i64, in_$i670: i64, in_$p671: ref, in_$i672: i8, in_$i673: i32, in_$i674: i32, in_$i675: i32, in_$i676: i32, in_$i677: i32, in_$i678: i32, in_$i679: i1, in_$i680: i1, in_$i681: i32, in_$i682: i32, in_$i683: i32, in_$i684: i32) returns (out_$i658: i32, out_$i659: i32, out_$i660: i32, out_$i661: i32, out_$i662: i1, out_$i663: i32, out_$i664: i32, out_$i667: i32, out_$i668: i64, out_$i669: i64, out_$i670: i64, out_$p671: ref, out_$i672: i8, out_$i673: i32, out_$i674: i32, out_$i675: i32, out_$i676: i32, out_$i677: i32, out_$i678: i32, out_$i679: i1, out_$i680: i1, out_$i681: i32, out_$i682: i32, out_$i683: i32, out_$i684: i32);



procedure {:LoopProcedure} wait_for_idle_loop_$bb1_PassiveCopy(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$i3: i1) returns (out_$i1: i32, out_$i2: i32, out_$i3: i1);



procedure {:LoopProcedure} wait_for_fifo_loop_$bb1_PassiveCopy(in_$i0: i16, in_$p1: ref, in_$i2: i32, in_$i3: i32, in_$i4: i32, in_$i5: i32, in_$i6: i1) returns (out_$i2: i32, out_$i3: i32, out_$i4: i32, out_$i5: i32, out_$i6: i1);



procedure {:LoopProcedure} ATIReduceRatio_loop_$bb1_PassiveCopy(in_$i4: i32, in_$i5: i32, in_$i6: i32, in_$i7: i1, in_$i8: i32) returns (out_$i4: i32, out_$i5: i32, out_$i6: i32, out_$i7: i1, out_$i8: i32);



procedure {:LoopProcedure} aty_calc_mem_refresh_loop_$bb4_PassiveCopy(in_$i1: i32, in_$p104: ref, in_$i105: i32, in_$i112: i32, in_$i113: i1, in_$i114: i32, in_$i116: i64, in_$p117: ref, in_$i118: i32, in_$i119: i1, in_$i120: i32, in_$i121: i32) returns (out_$i112: i32, out_$i113: i1, out_$i114: i32, out_$i116: i64, out_$p117: ref, out_$i118: i32, out_$i119: i1, out_$i120: i32, out_$i121: i32);



procedure {:LoopProcedure} atyfb_cursor_loop_$bb25_PassiveCopy(in_$p1: ref, in_$i197: i32, in_$i201: i32, in_$i207: i32, in_$p208: ref, in_$p209: ref, in_$p210: ref, in_$i211: i32, in_$i212: i1, in_$p213: ref, in_$p214: ref, in_$p215: ref, in_$i216: i32, in_$i217: i1, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$p221: ref, in_$i222: i8, in_$p223: ref, in_$i224: i8, in_$i225: i64, in_$i226: i64, in_$p227: ref, in_$i228: i16, in_$i229: i32, in_$i230: i1, in_$i231: i32, in_$i232: i1, in_$p233: ref, in_$i234: i32, in_$i235: i32, in_$i236: i32, in_$i237: i32, in_$i238: i64, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i8, in_$i243: i64, in_$p244: ref, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$i248: i32, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i8, in_$p255: ref, in_$i256: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i260: i64, in_$i261: i64, in_$i262: i64, in_$p263: ref, in_$i264: i8, in_$i265: i64, in_$p266: ref, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i64, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i8, in_$p254: ref, in_$i276: i32, in_$i277: i64, in_$p278: ref, in_$i279: i32) returns (out_$p208: ref, out_$p209: ref, out_$p210: ref, out_$i211: i32, out_$i212: i1, out_$p213: ref, out_$p214: ref, out_$p215: ref, out_$i216: i32, out_$i217: i1, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$p221: ref, out_$i222: i8, out_$p223: ref, out_$i224: i8, out_$i225: i64, out_$i226: i64, out_$p227: ref, out_$i228: i16, out_$i229: i32, out_$i230: i1, out_$i231: i32, out_$i232: i1, out_$p233: ref, out_$i234: i32, out_$i235: i32, out_$i236: i32, out_$i237: i32, out_$i238: i64, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i8, out_$i243: i64, out_$p244: ref, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$i248: i32, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i8, out_$p255: ref, out_$i256: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i260: i64, out_$i261: i64, out_$i262: i64, out_$p263: ref, out_$i264: i8, out_$i265: i64, out_$p266: ref, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i64, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i8, out_$p254: ref, out_$i276: i32, out_$i277: i64, out_$p278: ref, out_$i279: i32);



procedure {:LoopProcedure} correct_chipset_loop_$bb1_PassiveCopy(in_$p0: ref, in_$i4: i32, in_$i5: i1, in_$i6: i32, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i16, in_$i13: i32, in_$i14: i64, in_$i15: i64, in_$p16: ref, in_$i17: i16, in_$i18: i32, in_$i19: i1, in_$i20: i32, in_$i21: i32) returns (out_$i4: i32, out_$i5: i1, out_$i6: i32, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i16, out_$i13: i32, out_$i14: i64, out_$i15: i64, out_$p16: ref, out_$i17: i16, out_$i18: i32, out_$i19: i1, out_$i20: i32, out_$i21: i32);



procedure {:LoopProcedure} atyfb_setcolreg_loop_$bb62_PassiveCopy(in_$p10: ref, in_$i40: i32, in_$i41: i32, in_$i42: i32, in_$i150: i32, in_$i151: i32, in_$i152: i1, in_$i153: i32, in_$i154: i32) returns (out_$i151: i32, out_$i152: i1, out_$i153: i32, out_$i154: i32);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb111_PassiveCopy(in_$p7: ref, in_$p323: ref, in_$i324: i32, in_$i325: i1, in_$i326: i32, in_$i327: i32, in_$p328: ref) returns (out_$p323: ref, out_$i324: i32, out_$i325: i1, out_$i326: i32, out_$i327: i32, out_$p328: ref);



procedure {:LoopProcedure} atyfb_imageblit_loop_$bb74_PassiveCopy(in_$p1: ref, in_$p2: ref, in_$p7: ref, in_$i237: i32, in_$i238: i32, in_$i239: i32, in_$p240: ref, in_$i241: i32, in_$i242: i1, in_$p243: ref, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$p248: ref, in_$i249: i32, in_$p250: ref, in_$i251: i1, in_$i257: i1, in_$i258: i32, in_$i259: i32, in_$i260: i32, in_$p261: ref, in_$i262: i32, in_$i252: i32, in_$i253: i32, in_$i254: i32, in_$p255: ref, in_$i256: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i32, in_$p272: ref, in_$i273: i32, in_$i274: i1, in_$i275: i32, in_$i276: i32, in_$i277: i32, in_$p278: ref, in_$i279: i32, in_$i280: i8, in_$i281: i32, in_$i282: i32, in_$i283: i32, in_$i284: i32, in_$i285: i8, in_$i286: i32, in_$i287: i32, in_$i288: i8, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i32, in_$i295: i32, in_$i296: i1, in_$i297: i1, in_$i298: i32, in_$p299: ref, in_$i300: i1, in_$i301: i64, in_$i302: i64, in_$p303: ref, in_$i304: i32, in_$i305: i32, in_$i306: i32, in_$i307: i32, in_$i308: i32, in_$i309: i32, in_$p310: ref, in_$i311: i32, in_$i312: i32, in_$i313: i32, in_$p314: ref, in_$i263: i32, in_$i264: i32, in_$i265: i32, in_$p266: ref, in_$i267: i32, in_$i315: i32) returns (out_$i237: i32, out_$i238: i32, out_$i239: i32, out_$p240: ref, out_$i241: i32, out_$i242: i1, out_$p243: ref, out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$p248: ref, out_$i249: i32, out_$p250: ref, out_$i251: i1, out_$i257: i1, out_$i258: i32, out_$i259: i32, out_$i260: i32, out_$p261: ref, out_$i262: i32, out_$i252: i32, out_$i253: i32, out_$i254: i32, out_$p255: ref, out_$i256: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i32, out_$p272: ref, out_$i273: i32, out_$i274: i1, out_$i275: i32, out_$i276: i32, out_$i277: i32, out_$p278: ref, out_$i279: i32, out_$i280: i8, out_$i281: i32, out_$i282: i32, out_$i283: i32, out_$i284: i32, out_$i285: i8, out_$i286: i32, out_$i287: i32, out_$i288: i8, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i32, out_$i295: i32, out_$i296: i1, out_$i297: i1, out_$i298: i32, out_$p299: ref, out_$i300: i1, out_$i301: i64, out_$i302: i64, out_$p303: ref, out_$i304: i32, out_$i305: i32, out_$i306: i32, out_$i307: i32, out_$i308: i32, out_$i309: i32, out_$p310: ref, out_$i311: i32, out_$i312: i32, out_$i313: i32, out_$p314: ref, out_$i263: i32, out_$i264: i32, out_$i265: i32, out_$p266: ref, out_$i267: i32, out_$i315: i32);



procedure {:LoopProcedure} aty_waitforvblank_loop_$bb19_PassiveCopy(in_$p2: ref, in_$p6: ref, in_$i13: i32, in_$i42: i64, in_$p43: ref, in_$i44: i64, in_$i45: i64, in_$p46: ref, in_$i47: i32, in_$i48: i1, in_$i49: i64, in_$p51: ref, in_$i52: i32, in_$i53: i1, in_$i54: i64, in_$i55: i1, in_$i56: i64) returns (out_$i42: i64, out_$p43: ref, out_$i44: i64, out_$i45: i64, out_$p46: ref, out_$i47: i32, out_$i48: i1, out_$i49: i64, out_$p51: ref, out_$i52: i32, out_$i53: i1, out_$i54: i64, out_$i55: i1, out_$i56: i64);



procedure {:LoopProcedure} main_loop_$bb5_PassiveCopy(in_$i2: i32, in_$i3: i32, in_$i4: i1, in_$i5: i1, in_$i6: i32, in_$i7: i1, in_$i8: i32, in_$i9: i1, in_$i10: i1, in_$i11: i1, in_$i12: i1, in_$i13: i1, in_$i14: i1, in_$i15: i1, in_$i16: i1, in_$i17: i1, in_$i18: i1, in_$i19: i1, in_$i20: i1, in_$i21: i1, in_$i22: i1, in_$i23: i1, in_$i24: i1, in_$i25: i1, in_$i26: i32, in_$i28: i32, in_$i29: i32, in_$i30: i32, in_$i31: i32, in_$i32: i32, in_$i33: i32, in_$i34: i32, in_$i35: i32, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i32, in_$i42: i1, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i27: i32) returns (out_$i2: i32, out_$i3: i32, out_$i4: i1, out_$i5: i1, out_$i6: i32, out_$i7: i1, out_$i8: i32, out_$i9: i1, out_$i10: i1, out_$i11: i1, out_$i12: i1, out_$i13: i1, out_$i14: i1, out_$i15: i1, out_$i16: i1, out_$i17: i1, out_$i18: i1, out_$i19: i1, out_$i20: i1, out_$i21: i1, out_$i22: i1, out_$i23: i1, out_$i24: i1, out_$i25: i1, out_$i26: i32, out_$i28: i32, out_$i29: i32, out_$i30: i32, out_$i31: i32, out_$i32: i32, out_$i33: i32, out_$i34: i32, out_$i35: i32, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i32, out_$i42: i1, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i27: i32);



implementation {:LB_Mapping "aty_var_to_pll_514_loop_$bb1"} {:entrypoint} aty_var_to_pll_514_EntryCopy_aty_var_to_pll_514_loop_$bb1($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i1;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i8;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i8;
  var $p30: ref;
  var $i32: i32;
  var $i31: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5164} {:cexpr "aty_var_to_pll_514:arg:vclk_per"} {:si_old_unique_call 51} boogie_si_record_i32($i1);
    call {:si_unique_call 5165} {:cexpr "aty_var_to_pll_514:arg:bpp"} {:si_old_unique_call 52} boogie_si_record_i32($i2);
    goto corral_source_split_89;

  corral_source_split_89:
    assume {:verifier.code 0} true;
    $i4 := 0;
    goto $bb1;

  $bb1:
    call {:si_unique_call 5166} $i4, $i5, $i6, $i7, $i8, $i9, $i10, $p11, $i12, $i13, $i14, $i32 := aty_var_to_pll_514_loop_$bb1($i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $p11, $i12, $i13, $i14, $i32);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_91;

  corral_source_split_91:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i5 := $add.i64(7, 0);
    call {:si_unique_call 5167} {:cexpr "__cil_tmp7"} {:si_old_unique_call 53} boogie_si_record_i64($i5);
    goto corral_source_split_93;

  corral_source_split_93:
    assume {:verifier.code 0} true;
    $i6 := $sext.i32.i64($i4);
    call {:si_unique_call 5168} {:cexpr "__cil_tmp8"} {:si_old_unique_call 54} boogie_si_record_i64($i6);
    goto corral_source_split_94;

  corral_source_split_94:
    assume {:verifier.code 0} true;
    $i7 := $ult.i64($i6, $i5);
    goto corral_source_split_95;

  corral_source_split_95:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i7 == 1);
    goto corral_source_split_99;

  corral_source_split_99:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i31 := $sub.i32(0, 22);
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_128;

  corral_source_split_128:
    assume {:verifier.code 0} true;
    $r := $i31;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i7 == 1;
    goto corral_source_split_97;

  corral_source_split_97:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i8 := $sext.i32.i64($i4);
    goto corral_source_split_101;

  corral_source_split_101:
    assume {:verifier.code 0} true;
    $i9 := $mul.i64($i8, 8);
    call {:si_unique_call 5169} {:cexpr "__cil_tmp9"} {:si_old_unique_call 55} boogie_si_record_i64($i9);
    goto corral_source_split_102;

  corral_source_split_102:
    assume {:verifier.code 0} true;
    $i10 := $add.i64($p2i.ref.i64(RGB514_clocks), $i9);
    call {:si_unique_call 5170} {:cexpr "__cil_tmp10"} {:si_old_unique_call 56} boogie_si_record_i64($i10);
    goto corral_source_split_103;

  corral_source_split_103:
    assume {:verifier.code 0} true;
    $p11 := $i2p.i64.ref($i10);
    goto corral_source_split_104;

  corral_source_split_104:
    assume {:verifier.code 0} true;
    havoc $i12;
    call {:si_unique_call 5171} {:cexpr "__cil_tmp11"} {:si_old_unique_call 57} boogie_si_record_i32($i12);
    goto corral_source_split_105;

  corral_source_split_105:
    assume {:verifier.code 0} true;
    $i13 := $ule.i32($i1, $i12);
    goto corral_source_split_106;

  corral_source_split_106:
    assume {:verifier.code 0} true;
    $i14 := $i4;
    assume {:branchcond $i13} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i13 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i32 := $add.i32($i4, 1);
    call {:si_unique_call 5172} {:cexpr "i"} {:si_old_unique_call 66} boogie_si_record_i32($i32);
    goto corral_source_split_130;

  corral_source_split_130:
    assume {:verifier.code 0} true;
    $i4 := $i32;
    goto corral_source_split_130_dummy;

  corral_source_split_130_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i13 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_108;

  corral_source_split_108:
    assume {:verifier.code 0} true;
    $i15 := $sext.i32.i64($i14);
    goto corral_source_split_109;

  corral_source_split_109:
    assume {:verifier.code 0} true;
    $i16 := $mul.i64($i15, 8);
    call {:si_unique_call 5173} {:cexpr "__cil_tmp12"} {:si_old_unique_call 58} boogie_si_record_i64($i16);
    goto corral_source_split_110;

  corral_source_split_110:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 4);
    call {:si_unique_call 5174} {:cexpr "__cil_tmp13"} {:si_old_unique_call 59} boogie_si_record_i64($i17);
    goto corral_source_split_111;

  corral_source_split_111:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($p2i.ref.i64(RGB514_clocks), $i17);
    call {:si_unique_call 5175} {:cexpr "__cil_tmp14"} {:si_old_unique_call 60} boogie_si_record_i64($i18);
    goto corral_source_split_112;

  corral_source_split_112:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_113;

  corral_source_split_113:
    assume {:verifier.code 0} true;
    havoc $i20;
    goto corral_source_split_114;

  corral_source_split_114:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p3);
    goto corral_source_split_115;

  corral_source_split_115:
    assume {:verifier.code 0} true;
    goto corral_source_split_116;

  corral_source_split_116:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p3);
    call {:si_unique_call 5176} {:cexpr "__cil_tmp16"} {:si_old_unique_call 61} boogie_si_record_i64($i22);
    goto corral_source_split_117;

  corral_source_split_117:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, 1);
    call {:si_unique_call 5177} {:cexpr "__cil_tmp17"} {:si_old_unique_call 62} boogie_si_record_i64($i23);
    goto corral_source_split_118;

  corral_source_split_118:
    assume {:verifier.code 0} true;
    $i24 := $sext.i32.i64($i14);
    goto corral_source_split_119;

  corral_source_split_119:
    assume {:verifier.code 0} true;
    $i25 := $mul.i64($i24, 8);
    call {:si_unique_call 5178} {:cexpr "__cil_tmp18"} {:si_old_unique_call 63} boogie_si_record_i64($i25);
    goto corral_source_split_120;

  corral_source_split_120:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 5);
    call {:si_unique_call 5179} {:cexpr "__cil_tmp19"} {:si_old_unique_call 64} boogie_si_record_i64($i26);
    goto corral_source_split_121;

  corral_source_split_121:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($p2i.ref.i64(RGB514_clocks), $i26);
    call {:si_unique_call 5180} {:cexpr "__cil_tmp20"} {:si_old_unique_call 65} boogie_si_record_i64($i27);
    goto corral_source_split_122;

  corral_source_split_122:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_123;

  corral_source_split_123:
    assume {:verifier.code 0} true;
    havoc $i29;
    goto corral_source_split_124;

  corral_source_split_124:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i23);
    goto corral_source_split_125;

  corral_source_split_125:
    assume {:verifier.code 0} true;
    goto corral_source_split_126;

  corral_source_split_126:
    assume {:verifier.code 0} true;
    $i31 := 0;
    goto $bb9;
}



implementation {:LB_Mapping "aty_var_to_pll_18818_loop_$bb6"} {:entrypoint} aty_var_to_pll_18818_EntryCopy_aty_var_to_pll_18818_loop_$bb6($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $i24: i1;
  var $i25: i1;
  var $i23: i32;
  var $i26: i32;
  var $i29: i32;
  var $i30: i32;
  var $i27: i32;
  var $i28: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $i6: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5297} {:cexpr "aty_var_to_pll_18818:arg:vclk_per"} {:si_old_unique_call 183} boogie_si_record_i32($i1);
    call {:si_unique_call 5298} {:cexpr "aty_var_to_pll_18818:arg:bpp"} {:si_old_unique_call 184} boogie_si_record_i32($i2);
    goto corral_source_split_372;

  corral_source_split_372:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5299} {:cexpr "MHz100"} {:si_old_unique_call 185} boogie_si_record_i32($i4);
    goto corral_source_split_373;

  corral_source_split_373:
    assume {:verifier.code 0} true;
    $i5 := $ugt.i32($i4, 15938);
    goto corral_source_split_374;

  corral_source_split_374:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_378;

  corral_source_split_378:
    assume {:verifier.code 0} true;
    $i7 := $ult.i32($i4, 1000);
    goto corral_source_split_379;

  corral_source_split_379:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    goto corral_source_split_385;

  corral_source_split_385:
    assume {:verifier.code 0} true;
    $i8, $i9 := $i4, 1;
    goto $bb6;

  $bb6:
    call {:si_unique_call 5300} $i8, $i9, $i10, $i11, $i12, $i13, $i14 := aty_var_to_pll_18818_loop_$bb6($i8, $i9, $i10, $i11, $i12, $i13, $i14);
    LoopBound_AssertVar := false;
    goto $bb6_last;

  $bb6_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_387;

  corral_source_split_387:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i10 := $ult.i32($i8, 8000);
    goto corral_source_split_389;

  corral_source_split_389:
    assume {:verifier.code 0} true;
    $i11, $i12 := $i8, $i9;
    assume {:branchcond $i10} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_393;

  corral_source_split_393:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i15 := $mul.i32($i11, 1000);
    call {:si_unique_call 5301} {:cexpr "MHz100"} {:si_old_unique_call 188} boogie_si_record_i32($i15);
    goto corral_source_split_398;

  corral_source_split_398:
    assume {:verifier.code 0} true;
    $i16 := $mul.i32(46, $i15);
    call {:si_unique_call 5302} {:cexpr "__cil_tmp8"} {:si_old_unique_call 189} boogie_si_record_i32($i16);
    goto corral_source_split_399;

  corral_source_split_399:
    assume {:verifier.code 0} true;
    $i17 := $udiv.i32($i16, 1432);
    call {:si_unique_call 5303} {:cexpr "MHz100"} {:si_old_unique_call 190} boogie_si_record_i32($i17);
    goto corral_source_split_400;

  corral_source_split_400:
    assume {:verifier.code 0} true;
    $i18 := $add.i32($i17, 500);
    call {:si_unique_call 5304} {:cexpr "MHz100"} {:si_old_unique_call 191} boogie_si_record_i32($i18);
    goto corral_source_split_401;

  corral_source_split_401:
    assume {:verifier.code 0} true;
    $i19 := $udiv.i32($i18, 1000);
    call {:si_unique_call 5305} {:cexpr "MHz100"} {:si_old_unique_call 192} boogie_si_record_i32($i19);
    goto corral_source_split_402;

  corral_source_split_402:
    assume {:verifier.code 0} true;
    $i20 := $eq.i32($sub.i32(0, 1), $sub.i32(0, 1));
    goto corral_source_split_403;

  corral_source_split_403:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i20 == 1);
    assume {:verifier.code 0} true;
    $i31, $i32 := $i12, $sub.i32(0, 1);
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_434;

  corral_source_split_434:
    assume {:verifier.code 0} true;
    $i33 := $or.i32($i32, 6144);
    call {:si_unique_call 5306} {:cexpr "program_bits"} {:si_old_unique_call 197} boogie_si_record_i32($i33);
    goto corral_source_split_435;

  corral_source_split_435:
    assume {:verifier.code 0} true;
    $p34 := $bitcast.ref.ref($p3);
    goto corral_source_split_436;

  corral_source_split_436:
    assume {:verifier.code 0} true;
    goto corral_source_split_437;

  corral_source_split_437:
    assume {:verifier.code 0} true;
    $i35 := $p2i.ref.i64($p3);
    call {:si_unique_call 5307} {:cexpr "__cil_tmp10"} {:si_old_unique_call 198} boogie_si_record_i64($i35);
    goto corral_source_split_438;

  corral_source_split_438:
    assume {:verifier.code 0} true;
    $i36 := $add.i64($i35, 4);
    call {:si_unique_call 5308} {:cexpr "__cil_tmp11"} {:si_old_unique_call 199} boogie_si_record_i64($i36);
    goto corral_source_split_439;

  corral_source_split_439:
    assume {:verifier.code 0} true;
    $p37 := $i2p.i64.ref($i36);
    goto corral_source_split_440;

  corral_source_split_440:
    assume {:verifier.code 0} true;
    goto corral_source_split_441;

  corral_source_split_441:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p3);
    call {:si_unique_call 5309} {:cexpr "__cil_tmp13"} {:si_old_unique_call 200} boogie_si_record_i64($i38);
    goto corral_source_split_442;

  corral_source_split_442:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 12);
    call {:si_unique_call 5310} {:cexpr "__cil_tmp14"} {:si_old_unique_call 201} boogie_si_record_i64($i39);
    goto corral_source_split_443;

  corral_source_split_443:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_444;

  corral_source_split_444:
    assume {:verifier.code 0} true;
    goto corral_source_split_445;

  corral_source_split_445:
    assume {:verifier.code 0} true;
    $i41 := $p2i.ref.i64($p3);
    call {:si_unique_call 5311} {:cexpr "__cil_tmp16"} {:si_old_unique_call 202} boogie_si_record_i64($i41);
    goto corral_source_split_446;

  corral_source_split_446:
    assume {:verifier.code 0} true;
    $i42 := $add.i64($i41, 8);
    call {:si_unique_call 5312} {:cexpr "__cil_tmp17"} {:si_old_unique_call 203} boogie_si_record_i64($i42);
    goto corral_source_split_447;

  corral_source_split_447:
    assume {:verifier.code 0} true;
    $p43 := $i2p.i64.ref($i42);
    goto corral_source_split_448;

  corral_source_split_448:
    assume {:verifier.code 0} true;
    goto corral_source_split_449;

  corral_source_split_449:
    assume {:verifier.code 0} true;
    $i6 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_381;

  corral_source_split_381:
    assume {:verifier.code 0} true;
    $r := $i6;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb14:
    assume $i20 == 1;
    goto corral_source_split_405;

  corral_source_split_405:
    assume {:verifier.code 0} true;
    $i21 := $sub.i32($i19, 257);
    call {:si_unique_call 5313} {:cexpr "program_bits"} {:si_old_unique_call 193} boogie_si_record_i32($i21);
    goto corral_source_split_406;

  corral_source_split_406:
    assume {:verifier.code 0} true;
    $i22 := $eq.i32($i12, 1);
    goto corral_source_split_407;

  corral_source_split_407:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i22 == 1);
    goto corral_source_split_411;

  corral_source_split_411:
    assume {:verifier.code 0} true;
    $i24 := $eq.i32($i12, 2);
    goto corral_source_split_412;

  corral_source_split_412:
    assume {:verifier.code 0} true;
    assume {:branchcond $i24} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i24 == 1);
    goto corral_source_split_419;

  corral_source_split_419:
    assume {:verifier.code 0} true;
    $i25 := $eq.i32($i12, 4);
    goto corral_source_split_420;

  corral_source_split_420:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i25 == 1);
    goto corral_source_split_426;

  corral_source_split_426:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i27, $i28 := $i12, $i21;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i31, $i32 := $i27, $i28;
    goto $bb34;

  $bb22:
    assume $i25 == 1;
    goto corral_source_split_424;

  corral_source_split_424:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i30 := $or.i32($i21, 512);
    call {:si_unique_call 5314} {:cexpr "program_bits"} {:si_old_unique_call 196} boogie_si_record_i32($i30);
    goto corral_source_split_428;

  corral_source_split_428:
    assume {:verifier.code 0} true;
    $i27, $i28 := $i12, $i30;
    goto $bb29;

  $bb19:
    assume $i24 == 1;
    goto corral_source_split_417;

  corral_source_split_417:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i29 := $or.i32($i21, 1024);
    call {:si_unique_call 5315} {:cexpr "program_bits"} {:si_old_unique_call 195} boogie_si_record_i32($i29);
    goto corral_source_split_422;

  corral_source_split_422:
    assume {:verifier.code 0} true;
    $i27, $i28 := $i12, $i29;
    goto $bb29;

  $bb16:
    assume $i22 == 1;
    goto corral_source_split_409;

  corral_source_split_409:
    assume {:verifier.code 0} true;
    $i23 := $i12;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    goto corral_source_split_414;

  corral_source_split_414:
    assume {:verifier.code 0} true;
    $i26 := $or.i32($i21, 1536);
    call {:si_unique_call 5316} {:cexpr "program_bits"} {:si_old_unique_call 194} boogie_si_record_i32($i26);
    goto corral_source_split_415;

  corral_source_split_415:
    assume {:verifier.code 0} true;
    $i27, $i28 := $i23, $i26;
    goto $bb29;

  $bb8:
    assume $i10 == 1;
    goto corral_source_split_391;

  corral_source_split_391:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i13 := $mul.i32($i8, 2);
    call {:si_unique_call 5317} {:cexpr "MHz100"} {:si_old_unique_call 186} boogie_si_record_i32($i13);
    goto corral_source_split_395;

  corral_source_split_395:
    assume {:verifier.code 0} true;
    $i14 := $mul.i32($i9, 2);
    call {:si_unique_call 5318} {:cexpr "post_divider"} {:si_old_unique_call 187} boogie_si_record_i32($i14);
    goto corral_source_split_396;

  corral_source_split_396:
    assume {:verifier.code 0} true;
    $i8, $i9 := $i13, $i14;
    goto corral_source_split_396_dummy;

  corral_source_split_396_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb4:
    assume $i7 == 1;
    goto corral_source_split_383;

  corral_source_split_383:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 22);
    goto $bb3;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_376;

  corral_source_split_376:
    assume {:verifier.code 0} true;
    $i6 := $sub.i32(0, 22);
    goto $bb3;
}



implementation {:LB_Mapping "aty_set_pll18818_loop_$bb19"} {:entrypoint} aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb19($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5322} {:cexpr "__cil_tmp15"} {:si_old_unique_call 207} boogie_si_record_i64($i2);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5323} {:cexpr "__cil_tmp16"} {:si_old_unique_call 208} boogie_si_record_i64($i3);
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_462;

  corral_source_split_462:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5324} {:si_old_unique_call 209} $i7 := aty_ld_8(144, $p6);
    call {:si_unique_call 5325} {:cexpr "old_clock_cntl"} {:si_old_unique_call 210} boogie_si_record_i8($i7);
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p6);
    call {:si_unique_call 5326} {:cexpr "__cil_tmp19"} {:si_old_unique_call 211} boogie_si_record_i64($i8);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 856);
    call {:si_unique_call 5327} {:cexpr "__cil_tmp20"} {:si_old_unique_call 212} boogie_si_record_i64($i9);
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 5328} {:cexpr "__cil_tmp21"} {:si_old_unique_call 213} boogie_si_record_i64($i11);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $i12 := $add.i64(144, $i11);
    call {:si_unique_call 5329} {:cexpr "__cil_tmp22"} {:si_old_unique_call 214} boogie_si_record_i64($i12);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i13 := $trunc.i64.i32($i12);
    call {:si_unique_call 5330} {:cexpr "__cil_tmp23"} {:si_old_unique_call 215} boogie_si_record_i32($i13);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5331} {:si_old_unique_call 216} aty_st_8($i13, 0, $p6);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5332} {:si_old_unique_call 217} $i14 := aty_ld_8(31, $p6);
    call {:si_unique_call 5333} {:cexpr "old_crtc_ext_disp"} {:si_old_unique_call 218} boogie_si_record_i8($i14);
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $i15 := $zext.i8.i32($i14);
    call {:si_unique_call 5334} {:cexpr "__cil_tmp28"} {:si_old_unique_call 219} boogie_si_record_i32($i15);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i16 := $or.i32($i15, 1);
    call {:si_unique_call 5335} {:cexpr "__cil_tmp29"} {:si_old_unique_call 220} boogie_si_record_i32($i16);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $i17 := $trunc.i32.i8($i16);
    call {:si_unique_call 5336} {:cexpr "__cil_tmp30"} {:si_old_unique_call 221} boogie_si_record_i8($i17);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5337} {:si_old_unique_call 222} aty_st_8(31, $i17, $p6);
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $i18 := 15;
    goto $bb1;

  $bb1:
    call {:si_unique_call 5338} $i18, $i19, $i20 := aty_set_pll18818_loop_$bb1_PassiveCopy($i18, $i19, $i20);
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i19 := $sub.i64($i18, 1);
    call {:si_unique_call 5339} {:cexpr "__ms"} {:si_old_unique_call 223} boogie_si_record_i64($i19);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $i20 := $ne.i64($i18, 0);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i20 == 1);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p1);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 5340} {:cexpr "__cil_tmp32"} {:si_old_unique_call 225} boogie_si_record_i32($i22);
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 5341} {:cexpr "__cil_tmp34"} {:si_old_unique_call 226} boogie_si_record_i64($i23);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 4);
    call {:si_unique_call 5342} {:cexpr "__cil_tmp35"} {:si_old_unique_call 227} boogie_si_record_i64($i24);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 5343} {:cexpr "__cil_tmp36"} {:si_old_unique_call 228} boogie_si_record_i32($i26);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p6);
    call {:si_unique_call 5344} {:cexpr "__cil_tmp37"} {:si_old_unique_call 229} boogie_si_record_i64($i27);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 856);
    call {:si_unique_call 5345} {:cexpr "__cil_tmp38"} {:si_old_unique_call 230} boogie_si_record_i64($i28);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5346} {:cexpr "__cil_tmp39"} {:si_old_unique_call 231} boogie_si_record_i64($i30);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $i31 := $add.i64(144, $i30);
    call {:si_unique_call 5347} {:cexpr "__cil_tmp40"} {:si_old_unique_call 232} boogie_si_record_i64($i31);
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i64.i32($i31);
    call {:si_unique_call 5348} {:cexpr "__cil_tmp41"} {:si_old_unique_call 233} boogie_si_record_i32($i32);
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5349} {:si_old_unique_call 234} aty_st_8($i32, 0, $p6);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5350} {:si_old_unique_call 235} aty_StrobeClock($p6);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p6);
    call {:si_unique_call 5351} {:cexpr "__cil_tmp45"} {:si_old_unique_call 236} boogie_si_record_i64($i33);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 856);
    call {:si_unique_call 5352} {:cexpr "__cil_tmp46"} {:si_old_unique_call 237} boogie_si_record_i64($i34);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 5353} {:cexpr "__cil_tmp47"} {:si_old_unique_call 238} boogie_si_record_i64($i36);
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $i37 := $add.i64(144, $i36);
    call {:si_unique_call 5354} {:cexpr "__cil_tmp48"} {:si_old_unique_call 239} boogie_si_record_i64($i37);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $i38 := $trunc.i64.i32($i37);
    call {:si_unique_call 5355} {:cexpr "__cil_tmp49"} {:si_old_unique_call 240} boogie_si_record_i32($i38);
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5356} {:si_old_unique_call 241} aty_st_8($i38, 1, $p6);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5357} {:si_old_unique_call 242} aty_StrobeClock($p6);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5358} {:si_old_unique_call 243} aty_ICS2595_put1bit(1, $p6);
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5359} {:si_old_unique_call 244} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5360} {:si_old_unique_call 245} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i26, 0;
    goto $bb7;

  $bb7:
    call {:si_unique_call 5361} $i39, $i40, $i41, $i42, $i43, $i44, $i45 := aty_set_pll18818_loop_$bb7_PassiveCopy($p6, $i39, $i40, $i41, $i42, $i43, $i44, $i45);
    goto $bb7_last;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i41 := $ult.i32($i40, 5);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    assume {:branchcond $i41} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i41 == 1);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i22, 0;
    goto $bb13;

  $bb13:
    call {:si_unique_call 5362} $i46, $i47, $i48, $i49, $i50, $i51, $i52 := aty_set_pll18818_loop_$bb13_PassiveCopy($p6, $i46, $i47, $i48, $i49, $i50, $i51, $i52);
    goto $bb13_last;

  $bb13_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i48 := $ult.i32($i47, 13);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    assume {:branchcond $i48} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i48 == 1);
    goto corral_source_split_534;

  corral_source_split_534:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5363} {:si_old_unique_call 256} ___udelay(4295000);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5364} {:si_old_unique_call 257} $i53 := aty_ld_8(192, $p6);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5365} {:si_old_unique_call 258} aty_st_8(31, $i14, $p6);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p6);
    call {:si_unique_call 5366} {:cexpr "__cil_tmp67"} {:si_old_unique_call 259} boogie_si_record_i64($i54);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 856);
    call {:si_unique_call 5367} {:cexpr "__cil_tmp68"} {:si_old_unique_call 260} boogie_si_record_i64($i55);
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 5368} {:cexpr "__cil_tmp69"} {:si_old_unique_call 261} boogie_si_record_i64($i57);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i58 := $add.i64(144, $i57);
    call {:si_unique_call 5369} {:cexpr "__cil_tmp70"} {:si_old_unique_call 262} boogie_si_record_i64($i58);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i64.i32($i58);
    call {:si_unique_call 5370} {:cexpr "__cil_tmp71"} {:si_old_unique_call 263} boogie_si_record_i32($i59);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i60 := $zext.i8.i32($i7);
    call {:si_unique_call 5371} {:cexpr "__cil_tmp72"} {:si_old_unique_call 264} boogie_si_record_i32($i60);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $i61 := $or.i32($i60, 64);
    call {:si_unique_call 5372} {:cexpr "__cil_tmp73"} {:si_old_unique_call 265} boogie_si_record_i32($i61);
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $i62 := $trunc.i32.i8($i61);
    call {:si_unique_call 5373} {:cexpr "__cil_tmp74"} {:si_old_unique_call 266} boogie_si_record_i8($i62);
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5374} {:si_old_unique_call 267} aty_st_8($i59, $i62, $p6);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i63 := 50;
    goto $bb19;

  $bb19:
    call {:si_unique_call 5375} $i63, $i64, $i65 := aty_set_pll18818_loop_$bb19($i63, $i64, $i65);
    LoopBound_AssertVar := false;
    goto $bb19_last;

  $bb19_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i64 := $sub.i64($i63, 1);
    call {:si_unique_call 5376} {:cexpr "__ms___1"} {:si_old_unique_call 268} boogie_si_record_i64($i64);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i65 := $ne.i64($i63, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i65} true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i65 == 1);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p6);
    call {:si_unique_call 5377} {:cexpr "__cil_tmp76"} {:si_old_unique_call 270} boogie_si_record_i64($i66);
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 856);
    call {:si_unique_call 5378} {:cexpr "__cil_tmp77"} {:si_old_unique_call 271} boogie_si_record_i64($i67);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    havoc $i69;
    call {:si_unique_call 5379} {:cexpr "__cil_tmp78"} {:si_old_unique_call 272} boogie_si_record_i64($i69);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $i70 := $add.i64(144, $i69);
    call {:si_unique_call 5380} {:cexpr "__cil_tmp79"} {:si_old_unique_call 273} boogie_si_record_i64($i70);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $i71 := $trunc.i64.i32($i70);
    call {:si_unique_call 5381} {:cexpr "__cil_tmp80"} {:si_old_unique_call 274} boogie_si_record_i32($i71);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p1);
    call {:si_unique_call 5382} {:cexpr "__cil_tmp82"} {:si_old_unique_call 275} boogie_si_record_i64($i72);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 4);
    call {:si_unique_call 5383} {:cexpr "__cil_tmp83"} {:si_old_unique_call 276} boogie_si_record_i64($i73);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    havoc $i75;
    call {:si_unique_call 5384} {:cexpr "__cil_tmp84"} {:si_old_unique_call 277} boogie_si_record_i32($i75);
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $i76 := $and.i32($i75, 15);
    call {:si_unique_call 5385} {:cexpr "__cil_tmp85"} {:si_old_unique_call 278} boogie_si_record_i32($i76);
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $i77 := $or.i32($i76, 64);
    call {:si_unique_call 5386} {:cexpr "__cil_tmp86"} {:si_old_unique_call 279} boogie_si_record_i32($i77);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $i78 := $trunc.i32.i8($i77);
    call {:si_unique_call 5387} {:cexpr "__cil_tmp87"} {:si_old_unique_call 280} boogie_si_record_i8($i78);
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5388} {:si_old_unique_call 281} aty_st_8($i71, $i78, $p6);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb21:
    assume $i65 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5389} {:si_old_unique_call 269} ___udelay(4295000);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $i63 := $i64;
    goto corral_source_split_565_dummy;

  corral_source_split_565_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i48 == 1;
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i46, 1);
    call {:si_unique_call 5390} {:cexpr "__cil_tmp62"} {:si_old_unique_call 251} boogie_si_record_i32($i49);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i50 := $trunc.i32.i8($i49);
    call {:si_unique_call 5391} {:cexpr "__cil_tmp63"} {:si_old_unique_call 252} boogie_si_record_i8($i50);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5392} {:si_old_unique_call 253} aty_ICS2595_put1bit($i50, $p6);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $i51 := $lshr.i32($i46, 1);
    call {:si_unique_call 5393} {:cexpr "program_bits"} {:si_old_unique_call 254} boogie_si_record_i32($i51);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i47, 1);
    call {:si_unique_call 5394} {:cexpr "i"} {:si_old_unique_call 255} boogie_si_record_i32($i52);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i51, $i52;
    goto corral_source_split_540_dummy;

  corral_source_split_540_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb9:
    assume $i41 == 1;
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i39, 1);
    call {:si_unique_call 5395} {:cexpr "__cil_tmp59"} {:si_old_unique_call 246} boogie_si_record_i32($i42);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5396} {:cexpr "__cil_tmp60"} {:si_old_unique_call 247} boogie_si_record_i8($i43);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5397} {:si_old_unique_call 248} aty_ICS2595_put1bit($i43, $p6);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $i44 := $lshr.i32($i39, 1);
    call {:si_unique_call 5398} {:cexpr "locationAddr"} {:si_old_unique_call 249} boogie_si_record_i32($i44);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i45 := $add.i32($i40, 1);
    call {:si_unique_call 5399} {:cexpr "i"} {:si_old_unique_call 250} boogie_si_record_i32($i45);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i44, $i45;
    goto corral_source_split_526_dummy;

  corral_source_split_526_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i20 == 1;
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5400} {:si_old_unique_call 224} ___udelay(4295000);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i18 := $i19;
    goto corral_source_split_486_dummy;

  corral_source_split_486_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "aty_set_pll18818_loop_$bb13"} {:entrypoint} aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb13($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5322} {:cexpr "__cil_tmp15"} {:si_old_unique_call 207} boogie_si_record_i64($i2);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5323} {:cexpr "__cil_tmp16"} {:si_old_unique_call 208} boogie_si_record_i64($i3);
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_462;

  corral_source_split_462:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5324} {:si_old_unique_call 209} $i7 := aty_ld_8(144, $p6);
    call {:si_unique_call 5325} {:cexpr "old_clock_cntl"} {:si_old_unique_call 210} boogie_si_record_i8($i7);
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p6);
    call {:si_unique_call 5326} {:cexpr "__cil_tmp19"} {:si_old_unique_call 211} boogie_si_record_i64($i8);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 856);
    call {:si_unique_call 5327} {:cexpr "__cil_tmp20"} {:si_old_unique_call 212} boogie_si_record_i64($i9);
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 5328} {:cexpr "__cil_tmp21"} {:si_old_unique_call 213} boogie_si_record_i64($i11);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $i12 := $add.i64(144, $i11);
    call {:si_unique_call 5329} {:cexpr "__cil_tmp22"} {:si_old_unique_call 214} boogie_si_record_i64($i12);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i13 := $trunc.i64.i32($i12);
    call {:si_unique_call 5330} {:cexpr "__cil_tmp23"} {:si_old_unique_call 215} boogie_si_record_i32($i13);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5331} {:si_old_unique_call 216} aty_st_8($i13, 0, $p6);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5332} {:si_old_unique_call 217} $i14 := aty_ld_8(31, $p6);
    call {:si_unique_call 5333} {:cexpr "old_crtc_ext_disp"} {:si_old_unique_call 218} boogie_si_record_i8($i14);
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $i15 := $zext.i8.i32($i14);
    call {:si_unique_call 5334} {:cexpr "__cil_tmp28"} {:si_old_unique_call 219} boogie_si_record_i32($i15);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i16 := $or.i32($i15, 1);
    call {:si_unique_call 5335} {:cexpr "__cil_tmp29"} {:si_old_unique_call 220} boogie_si_record_i32($i16);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $i17 := $trunc.i32.i8($i16);
    call {:si_unique_call 5336} {:cexpr "__cil_tmp30"} {:si_old_unique_call 221} boogie_si_record_i8($i17);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5337} {:si_old_unique_call 222} aty_st_8(31, $i17, $p6);
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $i18 := 15;
    goto $bb1;

  $bb1:
    call {:si_unique_call 5338} $i18, $i19, $i20 := aty_set_pll18818_loop_$bb1_PassiveCopy($i18, $i19, $i20);
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i19 := $sub.i64($i18, 1);
    call {:si_unique_call 5339} {:cexpr "__ms"} {:si_old_unique_call 223} boogie_si_record_i64($i19);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $i20 := $ne.i64($i18, 0);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i20 == 1);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p1);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 5340} {:cexpr "__cil_tmp32"} {:si_old_unique_call 225} boogie_si_record_i32($i22);
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 5341} {:cexpr "__cil_tmp34"} {:si_old_unique_call 226} boogie_si_record_i64($i23);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 4);
    call {:si_unique_call 5342} {:cexpr "__cil_tmp35"} {:si_old_unique_call 227} boogie_si_record_i64($i24);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 5343} {:cexpr "__cil_tmp36"} {:si_old_unique_call 228} boogie_si_record_i32($i26);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p6);
    call {:si_unique_call 5344} {:cexpr "__cil_tmp37"} {:si_old_unique_call 229} boogie_si_record_i64($i27);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 856);
    call {:si_unique_call 5345} {:cexpr "__cil_tmp38"} {:si_old_unique_call 230} boogie_si_record_i64($i28);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5346} {:cexpr "__cil_tmp39"} {:si_old_unique_call 231} boogie_si_record_i64($i30);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $i31 := $add.i64(144, $i30);
    call {:si_unique_call 5347} {:cexpr "__cil_tmp40"} {:si_old_unique_call 232} boogie_si_record_i64($i31);
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i64.i32($i31);
    call {:si_unique_call 5348} {:cexpr "__cil_tmp41"} {:si_old_unique_call 233} boogie_si_record_i32($i32);
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5349} {:si_old_unique_call 234} aty_st_8($i32, 0, $p6);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5350} {:si_old_unique_call 235} aty_StrobeClock($p6);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p6);
    call {:si_unique_call 5351} {:cexpr "__cil_tmp45"} {:si_old_unique_call 236} boogie_si_record_i64($i33);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 856);
    call {:si_unique_call 5352} {:cexpr "__cil_tmp46"} {:si_old_unique_call 237} boogie_si_record_i64($i34);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 5353} {:cexpr "__cil_tmp47"} {:si_old_unique_call 238} boogie_si_record_i64($i36);
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $i37 := $add.i64(144, $i36);
    call {:si_unique_call 5354} {:cexpr "__cil_tmp48"} {:si_old_unique_call 239} boogie_si_record_i64($i37);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $i38 := $trunc.i64.i32($i37);
    call {:si_unique_call 5355} {:cexpr "__cil_tmp49"} {:si_old_unique_call 240} boogie_si_record_i32($i38);
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5356} {:si_old_unique_call 241} aty_st_8($i38, 1, $p6);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5357} {:si_old_unique_call 242} aty_StrobeClock($p6);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5358} {:si_old_unique_call 243} aty_ICS2595_put1bit(1, $p6);
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5359} {:si_old_unique_call 244} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5360} {:si_old_unique_call 245} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i26, 0;
    goto $bb7;

  $bb7:
    call {:si_unique_call 5361} $i39, $i40, $i41, $i42, $i43, $i44, $i45 := aty_set_pll18818_loop_$bb7_PassiveCopy($p6, $i39, $i40, $i41, $i42, $i43, $i44, $i45);
    goto $bb7_last;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i41 := $ult.i32($i40, 5);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    assume {:branchcond $i41} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i41 == 1);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i22, 0;
    goto $bb13;

  $bb13:
    call {:si_unique_call 5362} $i46, $i47, $i48, $i49, $i50, $i51, $i52 := aty_set_pll18818_loop_$bb13($p6, $i46, $i47, $i48, $i49, $i50, $i51, $i52);
    LoopBound_AssertVar := false;
    goto $bb13_last;

  $bb13_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i48 := $ult.i32($i47, 13);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    assume {:branchcond $i48} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i48 == 1);
    goto corral_source_split_534;

  corral_source_split_534:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5363} {:si_old_unique_call 256} ___udelay(4295000);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5364} {:si_old_unique_call 257} $i53 := aty_ld_8(192, $p6);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5365} {:si_old_unique_call 258} aty_st_8(31, $i14, $p6);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p6);
    call {:si_unique_call 5366} {:cexpr "__cil_tmp67"} {:si_old_unique_call 259} boogie_si_record_i64($i54);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 856);
    call {:si_unique_call 5367} {:cexpr "__cil_tmp68"} {:si_old_unique_call 260} boogie_si_record_i64($i55);
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 5368} {:cexpr "__cil_tmp69"} {:si_old_unique_call 261} boogie_si_record_i64($i57);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i58 := $add.i64(144, $i57);
    call {:si_unique_call 5369} {:cexpr "__cil_tmp70"} {:si_old_unique_call 262} boogie_si_record_i64($i58);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i64.i32($i58);
    call {:si_unique_call 5370} {:cexpr "__cil_tmp71"} {:si_old_unique_call 263} boogie_si_record_i32($i59);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i60 := $zext.i8.i32($i7);
    call {:si_unique_call 5371} {:cexpr "__cil_tmp72"} {:si_old_unique_call 264} boogie_si_record_i32($i60);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $i61 := $or.i32($i60, 64);
    call {:si_unique_call 5372} {:cexpr "__cil_tmp73"} {:si_old_unique_call 265} boogie_si_record_i32($i61);
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $i62 := $trunc.i32.i8($i61);
    call {:si_unique_call 5373} {:cexpr "__cil_tmp74"} {:si_old_unique_call 266} boogie_si_record_i8($i62);
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5374} {:si_old_unique_call 267} aty_st_8($i59, $i62, $p6);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i63 := 50;
    goto $bb19;

  $bb19:
    call {:si_unique_call 5375} $i63, $i64, $i65 := aty_set_pll18818_loop_$bb19_PassiveCopy($i63, $i64, $i65);
    goto $bb19_last;

  $bb19_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i64 := $sub.i64($i63, 1);
    call {:si_unique_call 5376} {:cexpr "__ms___1"} {:si_old_unique_call 268} boogie_si_record_i64($i64);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i65 := $ne.i64($i63, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i65} true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i65 == 1);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p6);
    call {:si_unique_call 5377} {:cexpr "__cil_tmp76"} {:si_old_unique_call 270} boogie_si_record_i64($i66);
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 856);
    call {:si_unique_call 5378} {:cexpr "__cil_tmp77"} {:si_old_unique_call 271} boogie_si_record_i64($i67);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    havoc $i69;
    call {:si_unique_call 5379} {:cexpr "__cil_tmp78"} {:si_old_unique_call 272} boogie_si_record_i64($i69);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $i70 := $add.i64(144, $i69);
    call {:si_unique_call 5380} {:cexpr "__cil_tmp79"} {:si_old_unique_call 273} boogie_si_record_i64($i70);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $i71 := $trunc.i64.i32($i70);
    call {:si_unique_call 5381} {:cexpr "__cil_tmp80"} {:si_old_unique_call 274} boogie_si_record_i32($i71);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p1);
    call {:si_unique_call 5382} {:cexpr "__cil_tmp82"} {:si_old_unique_call 275} boogie_si_record_i64($i72);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 4);
    call {:si_unique_call 5383} {:cexpr "__cil_tmp83"} {:si_old_unique_call 276} boogie_si_record_i64($i73);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    havoc $i75;
    call {:si_unique_call 5384} {:cexpr "__cil_tmp84"} {:si_old_unique_call 277} boogie_si_record_i32($i75);
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $i76 := $and.i32($i75, 15);
    call {:si_unique_call 5385} {:cexpr "__cil_tmp85"} {:si_old_unique_call 278} boogie_si_record_i32($i76);
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $i77 := $or.i32($i76, 64);
    call {:si_unique_call 5386} {:cexpr "__cil_tmp86"} {:si_old_unique_call 279} boogie_si_record_i32($i77);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $i78 := $trunc.i32.i8($i77);
    call {:si_unique_call 5387} {:cexpr "__cil_tmp87"} {:si_old_unique_call 280} boogie_si_record_i8($i78);
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5388} {:si_old_unique_call 281} aty_st_8($i71, $i78, $p6);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb21:
    assume $i65 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5389} {:si_old_unique_call 269} ___udelay(4295000);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $i63 := $i64;
    goto corral_source_split_565_dummy;

  corral_source_split_565_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i48 == 1;
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i46, 1);
    call {:si_unique_call 5390} {:cexpr "__cil_tmp62"} {:si_old_unique_call 251} boogie_si_record_i32($i49);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i50 := $trunc.i32.i8($i49);
    call {:si_unique_call 5391} {:cexpr "__cil_tmp63"} {:si_old_unique_call 252} boogie_si_record_i8($i50);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5392} {:si_old_unique_call 253} aty_ICS2595_put1bit($i50, $p6);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $i51 := $lshr.i32($i46, 1);
    call {:si_unique_call 5393} {:cexpr "program_bits"} {:si_old_unique_call 254} boogie_si_record_i32($i51);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i47, 1);
    call {:si_unique_call 5394} {:cexpr "i"} {:si_old_unique_call 255} boogie_si_record_i32($i52);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i51, $i52;
    goto corral_source_split_540_dummy;

  corral_source_split_540_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb9:
    assume $i41 == 1;
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i39, 1);
    call {:si_unique_call 5395} {:cexpr "__cil_tmp59"} {:si_old_unique_call 246} boogie_si_record_i32($i42);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5396} {:cexpr "__cil_tmp60"} {:si_old_unique_call 247} boogie_si_record_i8($i43);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5397} {:si_old_unique_call 248} aty_ICS2595_put1bit($i43, $p6);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $i44 := $lshr.i32($i39, 1);
    call {:si_unique_call 5398} {:cexpr "locationAddr"} {:si_old_unique_call 249} boogie_si_record_i32($i44);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i45 := $add.i32($i40, 1);
    call {:si_unique_call 5399} {:cexpr "i"} {:si_old_unique_call 250} boogie_si_record_i32($i45);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i44, $i45;
    goto corral_source_split_526_dummy;

  corral_source_split_526_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i20 == 1;
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5400} {:si_old_unique_call 224} ___udelay(4295000);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i18 := $i19;
    goto corral_source_split_486_dummy;

  corral_source_split_486_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "aty_set_pll18818_loop_$bb7"} {:entrypoint} aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb7($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5322} {:cexpr "__cil_tmp15"} {:si_old_unique_call 207} boogie_si_record_i64($i2);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5323} {:cexpr "__cil_tmp16"} {:si_old_unique_call 208} boogie_si_record_i64($i3);
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_462;

  corral_source_split_462:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5324} {:si_old_unique_call 209} $i7 := aty_ld_8(144, $p6);
    call {:si_unique_call 5325} {:cexpr "old_clock_cntl"} {:si_old_unique_call 210} boogie_si_record_i8($i7);
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p6);
    call {:si_unique_call 5326} {:cexpr "__cil_tmp19"} {:si_old_unique_call 211} boogie_si_record_i64($i8);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 856);
    call {:si_unique_call 5327} {:cexpr "__cil_tmp20"} {:si_old_unique_call 212} boogie_si_record_i64($i9);
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 5328} {:cexpr "__cil_tmp21"} {:si_old_unique_call 213} boogie_si_record_i64($i11);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $i12 := $add.i64(144, $i11);
    call {:si_unique_call 5329} {:cexpr "__cil_tmp22"} {:si_old_unique_call 214} boogie_si_record_i64($i12);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i13 := $trunc.i64.i32($i12);
    call {:si_unique_call 5330} {:cexpr "__cil_tmp23"} {:si_old_unique_call 215} boogie_si_record_i32($i13);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5331} {:si_old_unique_call 216} aty_st_8($i13, 0, $p6);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5332} {:si_old_unique_call 217} $i14 := aty_ld_8(31, $p6);
    call {:si_unique_call 5333} {:cexpr "old_crtc_ext_disp"} {:si_old_unique_call 218} boogie_si_record_i8($i14);
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $i15 := $zext.i8.i32($i14);
    call {:si_unique_call 5334} {:cexpr "__cil_tmp28"} {:si_old_unique_call 219} boogie_si_record_i32($i15);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i16 := $or.i32($i15, 1);
    call {:si_unique_call 5335} {:cexpr "__cil_tmp29"} {:si_old_unique_call 220} boogie_si_record_i32($i16);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $i17 := $trunc.i32.i8($i16);
    call {:si_unique_call 5336} {:cexpr "__cil_tmp30"} {:si_old_unique_call 221} boogie_si_record_i8($i17);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5337} {:si_old_unique_call 222} aty_st_8(31, $i17, $p6);
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $i18 := 15;
    goto $bb1;

  $bb1:
    call {:si_unique_call 5338} $i18, $i19, $i20 := aty_set_pll18818_loop_$bb1_PassiveCopy($i18, $i19, $i20);
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i19 := $sub.i64($i18, 1);
    call {:si_unique_call 5339} {:cexpr "__ms"} {:si_old_unique_call 223} boogie_si_record_i64($i19);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $i20 := $ne.i64($i18, 0);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i20 == 1);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p1);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 5340} {:cexpr "__cil_tmp32"} {:si_old_unique_call 225} boogie_si_record_i32($i22);
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 5341} {:cexpr "__cil_tmp34"} {:si_old_unique_call 226} boogie_si_record_i64($i23);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 4);
    call {:si_unique_call 5342} {:cexpr "__cil_tmp35"} {:si_old_unique_call 227} boogie_si_record_i64($i24);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 5343} {:cexpr "__cil_tmp36"} {:si_old_unique_call 228} boogie_si_record_i32($i26);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p6);
    call {:si_unique_call 5344} {:cexpr "__cil_tmp37"} {:si_old_unique_call 229} boogie_si_record_i64($i27);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 856);
    call {:si_unique_call 5345} {:cexpr "__cil_tmp38"} {:si_old_unique_call 230} boogie_si_record_i64($i28);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5346} {:cexpr "__cil_tmp39"} {:si_old_unique_call 231} boogie_si_record_i64($i30);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $i31 := $add.i64(144, $i30);
    call {:si_unique_call 5347} {:cexpr "__cil_tmp40"} {:si_old_unique_call 232} boogie_si_record_i64($i31);
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i64.i32($i31);
    call {:si_unique_call 5348} {:cexpr "__cil_tmp41"} {:si_old_unique_call 233} boogie_si_record_i32($i32);
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5349} {:si_old_unique_call 234} aty_st_8($i32, 0, $p6);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5350} {:si_old_unique_call 235} aty_StrobeClock($p6);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p6);
    call {:si_unique_call 5351} {:cexpr "__cil_tmp45"} {:si_old_unique_call 236} boogie_si_record_i64($i33);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 856);
    call {:si_unique_call 5352} {:cexpr "__cil_tmp46"} {:si_old_unique_call 237} boogie_si_record_i64($i34);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 5353} {:cexpr "__cil_tmp47"} {:si_old_unique_call 238} boogie_si_record_i64($i36);
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $i37 := $add.i64(144, $i36);
    call {:si_unique_call 5354} {:cexpr "__cil_tmp48"} {:si_old_unique_call 239} boogie_si_record_i64($i37);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $i38 := $trunc.i64.i32($i37);
    call {:si_unique_call 5355} {:cexpr "__cil_tmp49"} {:si_old_unique_call 240} boogie_si_record_i32($i38);
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5356} {:si_old_unique_call 241} aty_st_8($i38, 1, $p6);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5357} {:si_old_unique_call 242} aty_StrobeClock($p6);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5358} {:si_old_unique_call 243} aty_ICS2595_put1bit(1, $p6);
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5359} {:si_old_unique_call 244} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5360} {:si_old_unique_call 245} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i26, 0;
    goto $bb7;

  $bb7:
    call {:si_unique_call 5361} $i39, $i40, $i41, $i42, $i43, $i44, $i45 := aty_set_pll18818_loop_$bb7($p6, $i39, $i40, $i41, $i42, $i43, $i44, $i45);
    LoopBound_AssertVar := false;
    goto $bb7_last;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i41 := $ult.i32($i40, 5);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    assume {:branchcond $i41} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i41 == 1);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i22, 0;
    goto $bb13;

  $bb13:
    call {:si_unique_call 5362} $i46, $i47, $i48, $i49, $i50, $i51, $i52 := aty_set_pll18818_loop_$bb13_PassiveCopy($p6, $i46, $i47, $i48, $i49, $i50, $i51, $i52);
    goto $bb13_last;

  $bb13_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i48 := $ult.i32($i47, 13);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    assume {:branchcond $i48} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i48 == 1);
    goto corral_source_split_534;

  corral_source_split_534:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5363} {:si_old_unique_call 256} ___udelay(4295000);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5364} {:si_old_unique_call 257} $i53 := aty_ld_8(192, $p6);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5365} {:si_old_unique_call 258} aty_st_8(31, $i14, $p6);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p6);
    call {:si_unique_call 5366} {:cexpr "__cil_tmp67"} {:si_old_unique_call 259} boogie_si_record_i64($i54);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 856);
    call {:si_unique_call 5367} {:cexpr "__cil_tmp68"} {:si_old_unique_call 260} boogie_si_record_i64($i55);
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 5368} {:cexpr "__cil_tmp69"} {:si_old_unique_call 261} boogie_si_record_i64($i57);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i58 := $add.i64(144, $i57);
    call {:si_unique_call 5369} {:cexpr "__cil_tmp70"} {:si_old_unique_call 262} boogie_si_record_i64($i58);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i64.i32($i58);
    call {:si_unique_call 5370} {:cexpr "__cil_tmp71"} {:si_old_unique_call 263} boogie_si_record_i32($i59);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i60 := $zext.i8.i32($i7);
    call {:si_unique_call 5371} {:cexpr "__cil_tmp72"} {:si_old_unique_call 264} boogie_si_record_i32($i60);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $i61 := $or.i32($i60, 64);
    call {:si_unique_call 5372} {:cexpr "__cil_tmp73"} {:si_old_unique_call 265} boogie_si_record_i32($i61);
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $i62 := $trunc.i32.i8($i61);
    call {:si_unique_call 5373} {:cexpr "__cil_tmp74"} {:si_old_unique_call 266} boogie_si_record_i8($i62);
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5374} {:si_old_unique_call 267} aty_st_8($i59, $i62, $p6);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i63 := 50;
    goto $bb19;

  $bb19:
    call {:si_unique_call 5375} $i63, $i64, $i65 := aty_set_pll18818_loop_$bb19_PassiveCopy($i63, $i64, $i65);
    goto $bb19_last;

  $bb19_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i64 := $sub.i64($i63, 1);
    call {:si_unique_call 5376} {:cexpr "__ms___1"} {:si_old_unique_call 268} boogie_si_record_i64($i64);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i65 := $ne.i64($i63, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i65} true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i65 == 1);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p6);
    call {:si_unique_call 5377} {:cexpr "__cil_tmp76"} {:si_old_unique_call 270} boogie_si_record_i64($i66);
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 856);
    call {:si_unique_call 5378} {:cexpr "__cil_tmp77"} {:si_old_unique_call 271} boogie_si_record_i64($i67);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    havoc $i69;
    call {:si_unique_call 5379} {:cexpr "__cil_tmp78"} {:si_old_unique_call 272} boogie_si_record_i64($i69);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $i70 := $add.i64(144, $i69);
    call {:si_unique_call 5380} {:cexpr "__cil_tmp79"} {:si_old_unique_call 273} boogie_si_record_i64($i70);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $i71 := $trunc.i64.i32($i70);
    call {:si_unique_call 5381} {:cexpr "__cil_tmp80"} {:si_old_unique_call 274} boogie_si_record_i32($i71);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p1);
    call {:si_unique_call 5382} {:cexpr "__cil_tmp82"} {:si_old_unique_call 275} boogie_si_record_i64($i72);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 4);
    call {:si_unique_call 5383} {:cexpr "__cil_tmp83"} {:si_old_unique_call 276} boogie_si_record_i64($i73);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    havoc $i75;
    call {:si_unique_call 5384} {:cexpr "__cil_tmp84"} {:si_old_unique_call 277} boogie_si_record_i32($i75);
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $i76 := $and.i32($i75, 15);
    call {:si_unique_call 5385} {:cexpr "__cil_tmp85"} {:si_old_unique_call 278} boogie_si_record_i32($i76);
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $i77 := $or.i32($i76, 64);
    call {:si_unique_call 5386} {:cexpr "__cil_tmp86"} {:si_old_unique_call 279} boogie_si_record_i32($i77);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $i78 := $trunc.i32.i8($i77);
    call {:si_unique_call 5387} {:cexpr "__cil_tmp87"} {:si_old_unique_call 280} boogie_si_record_i8($i78);
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5388} {:si_old_unique_call 281} aty_st_8($i71, $i78, $p6);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb21:
    assume $i65 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5389} {:si_old_unique_call 269} ___udelay(4295000);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $i63 := $i64;
    goto corral_source_split_565_dummy;

  corral_source_split_565_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i48 == 1;
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i46, 1);
    call {:si_unique_call 5390} {:cexpr "__cil_tmp62"} {:si_old_unique_call 251} boogie_si_record_i32($i49);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i50 := $trunc.i32.i8($i49);
    call {:si_unique_call 5391} {:cexpr "__cil_tmp63"} {:si_old_unique_call 252} boogie_si_record_i8($i50);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5392} {:si_old_unique_call 253} aty_ICS2595_put1bit($i50, $p6);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $i51 := $lshr.i32($i46, 1);
    call {:si_unique_call 5393} {:cexpr "program_bits"} {:si_old_unique_call 254} boogie_si_record_i32($i51);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i47, 1);
    call {:si_unique_call 5394} {:cexpr "i"} {:si_old_unique_call 255} boogie_si_record_i32($i52);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i51, $i52;
    goto corral_source_split_540_dummy;

  corral_source_split_540_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb9:
    assume $i41 == 1;
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i39, 1);
    call {:si_unique_call 5395} {:cexpr "__cil_tmp59"} {:si_old_unique_call 246} boogie_si_record_i32($i42);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5396} {:cexpr "__cil_tmp60"} {:si_old_unique_call 247} boogie_si_record_i8($i43);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5397} {:si_old_unique_call 248} aty_ICS2595_put1bit($i43, $p6);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $i44 := $lshr.i32($i39, 1);
    call {:si_unique_call 5398} {:cexpr "locationAddr"} {:si_old_unique_call 249} boogie_si_record_i32($i44);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i45 := $add.i32($i40, 1);
    call {:si_unique_call 5399} {:cexpr "i"} {:si_old_unique_call 250} boogie_si_record_i32($i45);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i44, $i45;
    goto corral_source_split_526_dummy;

  corral_source_split_526_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i20 == 1;
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5400} {:si_old_unique_call 224} ___udelay(4295000);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i18 := $i19;
    goto corral_source_split_486_dummy;

  corral_source_split_486_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "aty_set_pll18818_loop_$bb1"} {:entrypoint} aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb1($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $i13: i32;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $i65: i1;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $i71: i32;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i32;
  var $i78: i8;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_457;

  corral_source_split_457:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5322} {:cexpr "__cil_tmp15"} {:si_old_unique_call 207} boogie_si_record_i64($i2);
    goto corral_source_split_458;

  corral_source_split_458:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5323} {:cexpr "__cil_tmp16"} {:si_old_unique_call 208} boogie_si_record_i64($i3);
    goto corral_source_split_459;

  corral_source_split_459:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_460;

  corral_source_split_460:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_461;

  corral_source_split_461:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_462;

  corral_source_split_462:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5324} {:si_old_unique_call 209} $i7 := aty_ld_8(144, $p6);
    call {:si_unique_call 5325} {:cexpr "old_clock_cntl"} {:si_old_unique_call 210} boogie_si_record_i8($i7);
    goto corral_source_split_463;

  corral_source_split_463:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p6);
    call {:si_unique_call 5326} {:cexpr "__cil_tmp19"} {:si_old_unique_call 211} boogie_si_record_i64($i8);
    goto corral_source_split_464;

  corral_source_split_464:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 856);
    call {:si_unique_call 5327} {:cexpr "__cil_tmp20"} {:si_old_unique_call 212} boogie_si_record_i64($i9);
    goto corral_source_split_465;

  corral_source_split_465:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_466;

  corral_source_split_466:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 5328} {:cexpr "__cil_tmp21"} {:si_old_unique_call 213} boogie_si_record_i64($i11);
    goto corral_source_split_467;

  corral_source_split_467:
    assume {:verifier.code 0} true;
    $i12 := $add.i64(144, $i11);
    call {:si_unique_call 5329} {:cexpr "__cil_tmp22"} {:si_old_unique_call 214} boogie_si_record_i64($i12);
    goto corral_source_split_468;

  corral_source_split_468:
    assume {:verifier.code 0} true;
    $i13 := $trunc.i64.i32($i12);
    call {:si_unique_call 5330} {:cexpr "__cil_tmp23"} {:si_old_unique_call 215} boogie_si_record_i32($i13);
    goto corral_source_split_469;

  corral_source_split_469:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5331} {:si_old_unique_call 216} aty_st_8($i13, 0, $p6);
    goto corral_source_split_470;

  corral_source_split_470:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5332} {:si_old_unique_call 217} $i14 := aty_ld_8(31, $p6);
    call {:si_unique_call 5333} {:cexpr "old_crtc_ext_disp"} {:si_old_unique_call 218} boogie_si_record_i8($i14);
    goto corral_source_split_471;

  corral_source_split_471:
    assume {:verifier.code 0} true;
    $i15 := $zext.i8.i32($i14);
    call {:si_unique_call 5334} {:cexpr "__cil_tmp28"} {:si_old_unique_call 219} boogie_si_record_i32($i15);
    goto corral_source_split_472;

  corral_source_split_472:
    assume {:verifier.code 0} true;
    $i16 := $or.i32($i15, 1);
    call {:si_unique_call 5335} {:cexpr "__cil_tmp29"} {:si_old_unique_call 220} boogie_si_record_i32($i16);
    goto corral_source_split_473;

  corral_source_split_473:
    assume {:verifier.code 0} true;
    $i17 := $trunc.i32.i8($i16);
    call {:si_unique_call 5336} {:cexpr "__cil_tmp30"} {:si_old_unique_call 221} boogie_si_record_i8($i17);
    goto corral_source_split_474;

  corral_source_split_474:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5337} {:si_old_unique_call 222} aty_st_8(31, $i17, $p6);
    goto corral_source_split_475;

  corral_source_split_475:
    assume {:verifier.code 0} true;
    $i18 := 15;
    goto $bb1;

  $bb1:
    call {:si_unique_call 5338} $i18, $i19, $i20 := aty_set_pll18818_loop_$bb1($i18, $i19, $i20);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i19 := $sub.i64($i18, 1);
    call {:si_unique_call 5339} {:cexpr "__ms"} {:si_old_unique_call 223} boogie_si_record_i64($i19);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    $i20 := $ne.i64($i18, 0);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i20 == 1);
    goto corral_source_split_484;

  corral_source_split_484:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $p21 := $bitcast.ref.ref($p1);
    goto corral_source_split_488;

  corral_source_split_488:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 5340} {:cexpr "__cil_tmp32"} {:si_old_unique_call 225} boogie_si_record_i32($i22);
    goto corral_source_split_489;

  corral_source_split_489:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 5341} {:cexpr "__cil_tmp34"} {:si_old_unique_call 226} boogie_si_record_i64($i23);
    goto corral_source_split_490;

  corral_source_split_490:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 4);
    call {:si_unique_call 5342} {:cexpr "__cil_tmp35"} {:si_old_unique_call 227} boogie_si_record_i64($i24);
    goto corral_source_split_491;

  corral_source_split_491:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_492;

  corral_source_split_492:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 5343} {:cexpr "__cil_tmp36"} {:si_old_unique_call 228} boogie_si_record_i32($i26);
    goto corral_source_split_493;

  corral_source_split_493:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p6);
    call {:si_unique_call 5344} {:cexpr "__cil_tmp37"} {:si_old_unique_call 229} boogie_si_record_i64($i27);
    goto corral_source_split_494;

  corral_source_split_494:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 856);
    call {:si_unique_call 5345} {:cexpr "__cil_tmp38"} {:si_old_unique_call 230} boogie_si_record_i64($i28);
    goto corral_source_split_495;

  corral_source_split_495:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_496;

  corral_source_split_496:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5346} {:cexpr "__cil_tmp39"} {:si_old_unique_call 231} boogie_si_record_i64($i30);
    goto corral_source_split_497;

  corral_source_split_497:
    assume {:verifier.code 0} true;
    $i31 := $add.i64(144, $i30);
    call {:si_unique_call 5347} {:cexpr "__cil_tmp40"} {:si_old_unique_call 232} boogie_si_record_i64($i31);
    goto corral_source_split_498;

  corral_source_split_498:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i64.i32($i31);
    call {:si_unique_call 5348} {:cexpr "__cil_tmp41"} {:si_old_unique_call 233} boogie_si_record_i32($i32);
    goto corral_source_split_499;

  corral_source_split_499:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5349} {:si_old_unique_call 234} aty_st_8($i32, 0, $p6);
    goto corral_source_split_500;

  corral_source_split_500:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5350} {:si_old_unique_call 235} aty_StrobeClock($p6);
    goto corral_source_split_501;

  corral_source_split_501:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p6);
    call {:si_unique_call 5351} {:cexpr "__cil_tmp45"} {:si_old_unique_call 236} boogie_si_record_i64($i33);
    goto corral_source_split_502;

  corral_source_split_502:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 856);
    call {:si_unique_call 5352} {:cexpr "__cil_tmp46"} {:si_old_unique_call 237} boogie_si_record_i64($i34);
    goto corral_source_split_503;

  corral_source_split_503:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_504;

  corral_source_split_504:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 5353} {:cexpr "__cil_tmp47"} {:si_old_unique_call 238} boogie_si_record_i64($i36);
    goto corral_source_split_505;

  corral_source_split_505:
    assume {:verifier.code 0} true;
    $i37 := $add.i64(144, $i36);
    call {:si_unique_call 5354} {:cexpr "__cil_tmp48"} {:si_old_unique_call 239} boogie_si_record_i64($i37);
    goto corral_source_split_506;

  corral_source_split_506:
    assume {:verifier.code 0} true;
    $i38 := $trunc.i64.i32($i37);
    call {:si_unique_call 5355} {:cexpr "__cil_tmp49"} {:si_old_unique_call 240} boogie_si_record_i32($i38);
    goto corral_source_split_507;

  corral_source_split_507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5356} {:si_old_unique_call 241} aty_st_8($i38, 1, $p6);
    goto corral_source_split_508;

  corral_source_split_508:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5357} {:si_old_unique_call 242} aty_StrobeClock($p6);
    goto corral_source_split_509;

  corral_source_split_509:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5358} {:si_old_unique_call 243} aty_ICS2595_put1bit(1, $p6);
    goto corral_source_split_510;

  corral_source_split_510:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5359} {:si_old_unique_call 244} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_511;

  corral_source_split_511:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5360} {:si_old_unique_call 245} aty_ICS2595_put1bit(0, $p6);
    goto corral_source_split_512;

  corral_source_split_512:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i26, 0;
    goto $bb7;

  $bb7:
    call {:si_unique_call 5361} $i39, $i40, $i41, $i42, $i43, $i44, $i45 := aty_set_pll18818_loop_$bb7_PassiveCopy($p6, $i39, $i40, $i41, $i42, $i43, $i44, $i45);
    goto $bb7_last;

  $bb7_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i41 := $ult.i32($i40, 5);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    assume {:branchcond $i41} true;
    goto $bb9, $bb10;

  $bb10:
    assume !($i41 == 1);
    goto corral_source_split_520;

  corral_source_split_520:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i22, 0;
    goto $bb13;

  $bb13:
    call {:si_unique_call 5362} $i46, $i47, $i48, $i49, $i50, $i51, $i52 := aty_set_pll18818_loop_$bb13_PassiveCopy($p6, $i46, $i47, $i48, $i49, $i50, $i51, $i52);
    goto $bb13_last;

  $bb13_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i48 := $ult.i32($i47, 13);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    assume {:branchcond $i48} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i48 == 1);
    goto corral_source_split_534;

  corral_source_split_534:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5363} {:si_old_unique_call 256} ___udelay(4295000);
    goto corral_source_split_542;

  corral_source_split_542:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5364} {:si_old_unique_call 257} $i53 := aty_ld_8(192, $p6);
    goto corral_source_split_543;

  corral_source_split_543:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5365} {:si_old_unique_call 258} aty_st_8(31, $i14, $p6);
    goto corral_source_split_544;

  corral_source_split_544:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p6);
    call {:si_unique_call 5366} {:cexpr "__cil_tmp67"} {:si_old_unique_call 259} boogie_si_record_i64($i54);
    goto corral_source_split_545;

  corral_source_split_545:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 856);
    call {:si_unique_call 5367} {:cexpr "__cil_tmp68"} {:si_old_unique_call 260} boogie_si_record_i64($i55);
    goto corral_source_split_546;

  corral_source_split_546:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_547;

  corral_source_split_547:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 5368} {:cexpr "__cil_tmp69"} {:si_old_unique_call 261} boogie_si_record_i64($i57);
    goto corral_source_split_548;

  corral_source_split_548:
    assume {:verifier.code 0} true;
    $i58 := $add.i64(144, $i57);
    call {:si_unique_call 5369} {:cexpr "__cil_tmp70"} {:si_old_unique_call 262} boogie_si_record_i64($i58);
    goto corral_source_split_549;

  corral_source_split_549:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i64.i32($i58);
    call {:si_unique_call 5370} {:cexpr "__cil_tmp71"} {:si_old_unique_call 263} boogie_si_record_i32($i59);
    goto corral_source_split_550;

  corral_source_split_550:
    assume {:verifier.code 0} true;
    $i60 := $zext.i8.i32($i7);
    call {:si_unique_call 5371} {:cexpr "__cil_tmp72"} {:si_old_unique_call 264} boogie_si_record_i32($i60);
    goto corral_source_split_551;

  corral_source_split_551:
    assume {:verifier.code 0} true;
    $i61 := $or.i32($i60, 64);
    call {:si_unique_call 5372} {:cexpr "__cil_tmp73"} {:si_old_unique_call 265} boogie_si_record_i32($i61);
    goto corral_source_split_552;

  corral_source_split_552:
    assume {:verifier.code 0} true;
    $i62 := $trunc.i32.i8($i61);
    call {:si_unique_call 5373} {:cexpr "__cil_tmp74"} {:si_old_unique_call 266} boogie_si_record_i8($i62);
    goto corral_source_split_553;

  corral_source_split_553:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5374} {:si_old_unique_call 267} aty_st_8($i59, $i62, $p6);
    goto corral_source_split_554;

  corral_source_split_554:
    assume {:verifier.code 0} true;
    $i63 := 50;
    goto $bb19;

  $bb19:
    call {:si_unique_call 5375} $i63, $i64, $i65 := aty_set_pll18818_loop_$bb19_PassiveCopy($i63, $i64, $i65);
    goto $bb19_last;

  $bb19_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i64 := $sub.i64($i63, 1);
    call {:si_unique_call 5376} {:cexpr "__ms___1"} {:si_old_unique_call 268} boogie_si_record_i64($i64);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    $i65 := $ne.i64($i63, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume {:branchcond $i65} true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i65 == 1);
    goto corral_source_split_563;

  corral_source_split_563:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p6);
    call {:si_unique_call 5377} {:cexpr "__cil_tmp76"} {:si_old_unique_call 270} boogie_si_record_i64($i66);
    goto corral_source_split_567;

  corral_source_split_567:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 856);
    call {:si_unique_call 5378} {:cexpr "__cil_tmp77"} {:si_old_unique_call 271} boogie_si_record_i64($i67);
    goto corral_source_split_568;

  corral_source_split_568:
    assume {:verifier.code 0} true;
    $p68 := $i2p.i64.ref($i67);
    goto corral_source_split_569;

  corral_source_split_569:
    assume {:verifier.code 0} true;
    havoc $i69;
    call {:si_unique_call 5379} {:cexpr "__cil_tmp78"} {:si_old_unique_call 272} boogie_si_record_i64($i69);
    goto corral_source_split_570;

  corral_source_split_570:
    assume {:verifier.code 0} true;
    $i70 := $add.i64(144, $i69);
    call {:si_unique_call 5380} {:cexpr "__cil_tmp79"} {:si_old_unique_call 273} boogie_si_record_i64($i70);
    goto corral_source_split_571;

  corral_source_split_571:
    assume {:verifier.code 0} true;
    $i71 := $trunc.i64.i32($i70);
    call {:si_unique_call 5381} {:cexpr "__cil_tmp80"} {:si_old_unique_call 274} boogie_si_record_i32($i71);
    goto corral_source_split_572;

  corral_source_split_572:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p1);
    call {:si_unique_call 5382} {:cexpr "__cil_tmp82"} {:si_old_unique_call 275} boogie_si_record_i64($i72);
    goto corral_source_split_573;

  corral_source_split_573:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 4);
    call {:si_unique_call 5383} {:cexpr "__cil_tmp83"} {:si_old_unique_call 276} boogie_si_record_i64($i73);
    goto corral_source_split_574;

  corral_source_split_574:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_575;

  corral_source_split_575:
    assume {:verifier.code 0} true;
    havoc $i75;
    call {:si_unique_call 5384} {:cexpr "__cil_tmp84"} {:si_old_unique_call 277} boogie_si_record_i32($i75);
    goto corral_source_split_576;

  corral_source_split_576:
    assume {:verifier.code 0} true;
    $i76 := $and.i32($i75, 15);
    call {:si_unique_call 5385} {:cexpr "__cil_tmp85"} {:si_old_unique_call 278} boogie_si_record_i32($i76);
    goto corral_source_split_577;

  corral_source_split_577:
    assume {:verifier.code 0} true;
    $i77 := $or.i32($i76, 64);
    call {:si_unique_call 5386} {:cexpr "__cil_tmp86"} {:si_old_unique_call 279} boogie_si_record_i32($i77);
    goto corral_source_split_578;

  corral_source_split_578:
    assume {:verifier.code 0} true;
    $i78 := $trunc.i32.i8($i77);
    call {:si_unique_call 5387} {:cexpr "__cil_tmp87"} {:si_old_unique_call 280} boogie_si_record_i8($i78);
    goto corral_source_split_579;

  corral_source_split_579:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5388} {:si_old_unique_call 281} aty_st_8($i71, $i78, $p6);
    goto corral_source_split_580;

  corral_source_split_580:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb21:
    assume $i65 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5389} {:si_old_unique_call 269} ___udelay(4295000);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    $i63 := $i64;
    goto corral_source_split_565_dummy;

  corral_source_split_565_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i48 == 1;
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i46, 1);
    call {:si_unique_call 5390} {:cexpr "__cil_tmp62"} {:si_old_unique_call 251} boogie_si_record_i32($i49);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    $i50 := $trunc.i32.i8($i49);
    call {:si_unique_call 5391} {:cexpr "__cil_tmp63"} {:si_old_unique_call 252} boogie_si_record_i8($i50);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5392} {:si_old_unique_call 253} aty_ICS2595_put1bit($i50, $p6);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    $i51 := $lshr.i32($i46, 1);
    call {:si_unique_call 5393} {:cexpr "program_bits"} {:si_old_unique_call 254} boogie_si_record_i32($i51);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    $i52 := $add.i32($i47, 1);
    call {:si_unique_call 5394} {:cexpr "i"} {:si_old_unique_call 255} boogie_si_record_i32($i52);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    $i46, $i47 := $i51, $i52;
    goto corral_source_split_540_dummy;

  corral_source_split_540_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb9:
    assume $i41 == 1;
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i39, 1);
    call {:si_unique_call 5395} {:cexpr "__cil_tmp59"} {:si_old_unique_call 246} boogie_si_record_i32($i42);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5396} {:cexpr "__cil_tmp60"} {:si_old_unique_call 247} boogie_si_record_i8($i43);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5397} {:si_old_unique_call 248} aty_ICS2595_put1bit($i43, $p6);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    $i44 := $lshr.i32($i39, 1);
    call {:si_unique_call 5398} {:cexpr "locationAddr"} {:si_old_unique_call 249} boogie_si_record_i32($i44);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    $i45 := $add.i32($i40, 1);
    call {:si_unique_call 5399} {:cexpr "i"} {:si_old_unique_call 250} boogie_si_record_i32($i45);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    $i39, $i40 := $i44, $i45;
    goto corral_source_split_526_dummy;

  corral_source_split_526_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i20 == 1;
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5400} {:si_old_unique_call 224} ___udelay(4295000);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    $i18 := $i19;
    goto corral_source_split_486_dummy;

  corral_source_split_486_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "aty_var_to_pll_1703_loop_$bb16"} {:entrypoint} aty_var_to_pll_1703_EntryCopy_aty_var_to_pll_1703_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i16;
  var $i15: i1;
  var $i16: i32;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $i29: i16;
  var $i30: i16;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i16;
  var $i52: i16;
  var $i53: i16;
  var $i54: i16;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i16;
  var $i63: i32;
  var $i6: i32;
  var $i7: i16;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5457} {:cexpr "aty_var_to_pll_1703:arg:vclk_per"} {:si_old_unique_call 338} boogie_si_record_i32($i1);
    call {:si_unique_call 5458} {:cexpr "aty_var_to_pll_1703:arg:bpp"} {:si_old_unique_call 339} boogie_si_record_i32($i2);
    goto corral_source_split_642;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5459} {:cexpr "mhz100"} {:si_old_unique_call 340} boogie_si_record_i32($i4);
    goto corral_source_split_643;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_644;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_648;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    $i8 := $ult.i32($i4, 8000);
    goto corral_source_split_649;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_670;

  corral_source_split_670:
    assume {:verifier.code 0} true;
    $i10 := $ugt.i32($i9, 15938);
    goto corral_source_split_671;

  corral_source_split_671:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    $i11 := $i9;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_675;

  corral_source_split_675:
    assume {:verifier.code 0} true;
    $i12 := $shl.i32(8000, 3);
    goto corral_source_split_676;

  corral_source_split_676:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i11, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5460} $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_1703_loop_$bb10_PassiveCopy($i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i15 := $ult.i32($i13, $i12);
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    $i16, $i17 := $i13, $i14;
    assume {:branchcond $i15} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_684;

  corral_source_split_684:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $mul.i32($i16, 8);
    call {:si_unique_call 5461} {:cexpr "temp"} {:si_old_unique_call 351} boogie_si_record_i32($i22);
    goto corral_source_split_691;

  corral_source_split_691:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1432, 1);
    call {:si_unique_call 5462} {:cexpr "__cil_tmp19"} {:si_old_unique_call 352} boogie_si_record_i32($i23);
    goto corral_source_split_692;

  corral_source_split_692:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5463} {:cexpr "__cil_tmp20"} {:si_old_unique_call 353} boogie_si_record_i16($i24);
    goto corral_source_split_693;

  corral_source_split_693:
    assume {:verifier.code 0} true;
    $i25 := $sext.i16.i32($i24);
    call {:si_unique_call 5464} {:cexpr "__cil_tmp21"} {:si_old_unique_call 354} boogie_si_record_i32($i25);
    goto corral_source_split_694;

  corral_source_split_694:
    assume {:verifier.code 0} true;
    $i26 := $sub.i32($i22, $i25);
    call {:si_unique_call 5465} {:cexpr "temp"} {:si_old_unique_call 355} boogie_si_record_i32($i26);
    goto corral_source_split_695;

  corral_source_split_695:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i26, $sub.i16(0, 1), $i17, 6;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5466} $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62 := aty_var_to_pll_1703_loop_$bb16($i16, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62);
    LoopBound_AssertVar := false;
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i31 := $urem.i32($i27, 1432);
    call {:si_unique_call 5467} {:cexpr "__cil_tmp22"} {:si_old_unique_call 356} boogie_si_record_i32($i31);
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i32.i16($i31);
    call {:si_unique_call 5468} {:cexpr "remainder"} {:si_old_unique_call 357} boogie_si_record_i16($i32);
    goto corral_source_split_700;

  corral_source_split_700:
    assume {:verifier.code 0} true;
    $i33 := $udiv.i32($i27, 1432);
    call {:si_unique_call 5469} {:cexpr "tempB"} {:si_old_unique_call 358} boogie_si_record_i32($i33);
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    $i34 := $and.i32($i33, 65535);
    call {:si_unique_call 5470} {:cexpr "__cil_tmp23"} {:si_old_unique_call 359} boogie_si_record_i32($i34);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    $i35 := $ule.i32($i34, 127);
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    $i54, $i55 := $i28, $i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    $i56 := $add.i32($i27, $i16);
    call {:si_unique_call 5471} {:cexpr "temp"} {:si_old_unique_call 375} boogie_si_record_i32($i56);
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    $i57 := $sext.i16.i32($i30);
    call {:si_unique_call 5472} {:cexpr "__cil_tmp37"} {:si_old_unique_call 376} boogie_si_record_i32($i57);
    goto corral_source_split_729;

  corral_source_split_729:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i57, 1);
    call {:si_unique_call 5473} {:cexpr "__cil_tmp38"} {:si_old_unique_call 377} boogie_si_record_i32($i58);
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i32.i16($i58);
    call {:si_unique_call 5474} {:cexpr "tempA"} {:si_old_unique_call 378} boogie_si_record_i16($i59);
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    $i60 := $sext.i16.i32($i59);
    call {:si_unique_call 5475} {:cexpr "__cil_tmp40"} {:si_old_unique_call 379} boogie_si_record_i32($i60);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    $i61 := $sle.i32($i60, 12);
    goto corral_source_split_733;

  corral_source_split_733:
    assume {:verifier.code 0} true;
    $i62 := $i55;
    assume {:branchcond $i61} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_737;

  corral_source_split_737:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i63 := $sext.i16.i32($i62);
    call {:si_unique_call 5476} {:cexpr "program_bits"} {:si_old_unique_call 380} boogie_si_record_i32($i63);
    assume {:verifier.code 0} true;
    $i6, $i7 := $i63, $i62;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_651;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    $p64 := $bitcast.ref.ref($p3);
    goto corral_source_split_652;

  corral_source_split_652:
    assume {:verifier.code 0} true;
    goto corral_source_split_653;

  corral_source_split_653:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p3);
    call {:si_unique_call 5477} {:cexpr "__cil_tmp42"} {:si_old_unique_call 341} boogie_si_record_i64($i65);
    goto corral_source_split_654;

  corral_source_split_654:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 4);
    call {:si_unique_call 5478} {:cexpr "__cil_tmp43"} {:si_old_unique_call 342} boogie_si_record_i64($i66);
    goto corral_source_split_655;

  corral_source_split_655:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_656;

  corral_source_split_656:
    assume {:verifier.code 0} true;
    goto corral_source_split_657;

  corral_source_split_657:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p3);
    call {:si_unique_call 5479} {:cexpr "__cil_tmp45"} {:si_old_unique_call 343} boogie_si_record_i64($i68);
    goto corral_source_split_658;

  corral_source_split_658:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 12);
    call {:si_unique_call 5480} {:cexpr "__cil_tmp46"} {:si_old_unique_call 344} boogie_si_record_i64($i69);
    goto corral_source_split_659;

  corral_source_split_659:
    assume {:verifier.code 0} true;
    $i70 := $sext.i16.i32($i7);
    goto corral_source_split_660;

  corral_source_split_660:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i69);
    goto corral_source_split_661;

  corral_source_split_661:
    assume {:verifier.code 0} true;
    goto corral_source_split_662;

  corral_source_split_662:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p3);
    call {:si_unique_call 5481} {:cexpr "__cil_tmp48"} {:si_old_unique_call 345} boogie_si_record_i64($i72);
    goto corral_source_split_663;

  corral_source_split_663:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 8);
    call {:si_unique_call 5482} {:cexpr "__cil_tmp49"} {:si_old_unique_call 346} boogie_si_record_i64($i73);
    goto corral_source_split_664;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_665;

  corral_source_split_665:
    assume {:verifier.code 0} true;
    goto corral_source_split_666;

  corral_source_split_666:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i61 == 1;
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i56, $i54, $i55, $i59;
    goto $bb26_dummy;

  $bb26_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i35 == 1;
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    $i36 := $zext.i16.i32($i28);
    call {:si_unique_call 5483} {:cexpr "__cil_tmp24"} {:si_old_unique_call 360} boogie_si_record_i32($i36);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i32);
    call {:si_unique_call 5484} {:cexpr "__cil_tmp25"} {:si_old_unique_call 361} boogie_si_record_i32($i37);
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, $i36);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    $i52, $i53 := $i28, $i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    $i54, $i55 := $i52, $i53;
    goto $bb23;

  $bb20:
    assume $i38 == 1;
    goto corral_source_split_710;

  corral_source_split_710:
    assume {:verifier.code 0} true;
    $i39 := $sext.i16.i32($i29);
    call {:si_unique_call 5485} {:cexpr "__cil_tmp26"} {:si_old_unique_call 362} boogie_si_record_i32($i39);
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    $i40 := $and.i32($i39, $sub.i32(0, 32));
    call {:si_unique_call 5486} {:cexpr "__cil_tmp27"} {:si_old_unique_call 363} boogie_si_record_i32($i40);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    $i41 := $trunc.i32.i16($i40);
    call {:si_unique_call 5487} {:cexpr "divider"} {:si_old_unique_call 364} boogie_si_record_i16($i41);
    goto corral_source_split_713;

  corral_source_split_713:
    assume {:verifier.code 0} true;
    $i42 := $sext.i16.i32($i30);
    call {:si_unique_call 5488} {:cexpr "__cil_tmp28"} {:si_old_unique_call 365} boogie_si_record_i32($i42);
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    $i43 := $sext.i16.i32($i41);
    call {:si_unique_call 5489} {:cexpr "__cil_tmp29"} {:si_old_unique_call 366} boogie_si_record_i32($i43);
    goto corral_source_split_715;

  corral_source_split_715:
    assume {:verifier.code 0} true;
    $i44 := $or.i32($i43, $i42);
    call {:si_unique_call 5490} {:cexpr "__cil_tmp30"} {:si_old_unique_call 367} boogie_si_record_i32($i44);
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    $i45 := $trunc.i32.i16($i44);
    call {:si_unique_call 5491} {:cexpr "divider"} {:si_old_unique_call 368} boogie_si_record_i16($i45);
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    $i46 := $and.i32($i33, 255);
    call {:si_unique_call 5492} {:cexpr "__cil_tmp31"} {:si_old_unique_call 369} boogie_si_record_i32($i46);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    $i47 := $shl.i32($i46, 8);
    call {:si_unique_call 5493} {:cexpr "__cil_tmp32"} {:si_old_unique_call 370} boogie_si_record_i32($i47);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    $i48 := $sext.i16.i32($i45);
    call {:si_unique_call 5494} {:cexpr "__cil_tmp33"} {:si_old_unique_call 371} boogie_si_record_i32($i48);
    goto corral_source_split_720;

  corral_source_split_720:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i48, 255);
    call {:si_unique_call 5495} {:cexpr "__cil_tmp34"} {:si_old_unique_call 372} boogie_si_record_i32($i49);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, $i47);
    call {:si_unique_call 5496} {:cexpr "__cil_tmp36"} {:si_old_unique_call 373} boogie_si_record_i32($i50);
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i32.i16($i50);
    call {:si_unique_call 5497} {:cexpr "divider"} {:si_old_unique_call 374} boogie_si_record_i16($i51);
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    $i52, $i53 := $i32, $i51;
    goto $bb22;

  $bb12:
    assume $i15 == 1;
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i13, 1);
    call {:si_unique_call 5498} {:cexpr "mhz100"} {:si_old_unique_call 347} boogie_si_record_i32($i18);
    goto corral_source_split_686;

  corral_source_split_686:
    assume {:verifier.code 0} true;
    $i19 := $sext.i16.i32($i14);
    call {:si_unique_call 5499} {:cexpr "__cil_tmp17"} {:si_old_unique_call 348} boogie_si_record_i32($i19);
    goto corral_source_split_687;

  corral_source_split_687:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 32);
    call {:si_unique_call 5500} {:cexpr "__cil_tmp18"} {:si_old_unique_call 349} boogie_si_record_i32($i20);
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5501} {:cexpr "divider"} {:si_old_unique_call 350} boogie_si_record_i16($i21);
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i18, $i21;
    goto corral_source_split_689_dummy;

  corral_source_split_689_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i10 == 1;
    goto corral_source_split_673;

  corral_source_split_673:
    assume {:verifier.code 0} true;
    $i11 := 15938;
    goto $bb9;

  $bb4:
    assume $i8 == 1;
    goto corral_source_split_668;

  corral_source_split_668:
    assume {:verifier.code 0} true;
    $i9 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_646;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    $i6, $i7 := 224, 0;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_pll_1703_loop_$bb10"} {:entrypoint} aty_var_to_pll_1703_EntryCopy_aty_var_to_pll_1703_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i16;
  var $i15: i1;
  var $i16: i32;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $i29: i16;
  var $i30: i16;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i16;
  var $i52: i16;
  var $i53: i16;
  var $i54: i16;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i16;
  var $i63: i32;
  var $i6: i32;
  var $i7: i16;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5457} {:cexpr "aty_var_to_pll_1703:arg:vclk_per"} {:si_old_unique_call 338} boogie_si_record_i32($i1);
    call {:si_unique_call 5458} {:cexpr "aty_var_to_pll_1703:arg:bpp"} {:si_old_unique_call 339} boogie_si_record_i32($i2);
    goto corral_source_split_642;

  corral_source_split_642:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5459} {:cexpr "mhz100"} {:si_old_unique_call 340} boogie_si_record_i32($i4);
    goto corral_source_split_643;

  corral_source_split_643:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_644;

  corral_source_split_644:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_648;

  corral_source_split_648:
    assume {:verifier.code 0} true;
    $i8 := $ult.i32($i4, 8000);
    goto corral_source_split_649;

  corral_source_split_649:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_670;

  corral_source_split_670:
    assume {:verifier.code 0} true;
    $i10 := $ugt.i32($i9, 15938);
    goto corral_source_split_671;

  corral_source_split_671:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    $i11 := $i9;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_675;

  corral_source_split_675:
    assume {:verifier.code 0} true;
    $i12 := $shl.i32(8000, 3);
    goto corral_source_split_676;

  corral_source_split_676:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i11, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5460} $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_1703_loop_$bb10($i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    LoopBound_AssertVar := false;
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i15 := $ult.i32($i13, $i12);
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    $i16, $i17 := $i13, $i14;
    assume {:branchcond $i15} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_684;

  corral_source_split_684:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $mul.i32($i16, 8);
    call {:si_unique_call 5461} {:cexpr "temp"} {:si_old_unique_call 351} boogie_si_record_i32($i22);
    goto corral_source_split_691;

  corral_source_split_691:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1432, 1);
    call {:si_unique_call 5462} {:cexpr "__cil_tmp19"} {:si_old_unique_call 352} boogie_si_record_i32($i23);
    goto corral_source_split_692;

  corral_source_split_692:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5463} {:cexpr "__cil_tmp20"} {:si_old_unique_call 353} boogie_si_record_i16($i24);
    goto corral_source_split_693;

  corral_source_split_693:
    assume {:verifier.code 0} true;
    $i25 := $sext.i16.i32($i24);
    call {:si_unique_call 5464} {:cexpr "__cil_tmp21"} {:si_old_unique_call 354} boogie_si_record_i32($i25);
    goto corral_source_split_694;

  corral_source_split_694:
    assume {:verifier.code 0} true;
    $i26 := $sub.i32($i22, $i25);
    call {:si_unique_call 5465} {:cexpr "temp"} {:si_old_unique_call 355} boogie_si_record_i32($i26);
    goto corral_source_split_695;

  corral_source_split_695:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i26, $sub.i16(0, 1), $i17, 6;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5466} $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62 := aty_var_to_pll_1703_loop_$bb16_PassiveCopy($i16, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i31 := $urem.i32($i27, 1432);
    call {:si_unique_call 5467} {:cexpr "__cil_tmp22"} {:si_old_unique_call 356} boogie_si_record_i32($i31);
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i32.i16($i31);
    call {:si_unique_call 5468} {:cexpr "remainder"} {:si_old_unique_call 357} boogie_si_record_i16($i32);
    goto corral_source_split_700;

  corral_source_split_700:
    assume {:verifier.code 0} true;
    $i33 := $udiv.i32($i27, 1432);
    call {:si_unique_call 5469} {:cexpr "tempB"} {:si_old_unique_call 358} boogie_si_record_i32($i33);
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    $i34 := $and.i32($i33, 65535);
    call {:si_unique_call 5470} {:cexpr "__cil_tmp23"} {:si_old_unique_call 359} boogie_si_record_i32($i34);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    $i35 := $ule.i32($i34, 127);
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    $i54, $i55 := $i28, $i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    $i56 := $add.i32($i27, $i16);
    call {:si_unique_call 5471} {:cexpr "temp"} {:si_old_unique_call 375} boogie_si_record_i32($i56);
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    $i57 := $sext.i16.i32($i30);
    call {:si_unique_call 5472} {:cexpr "__cil_tmp37"} {:si_old_unique_call 376} boogie_si_record_i32($i57);
    goto corral_source_split_729;

  corral_source_split_729:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i57, 1);
    call {:si_unique_call 5473} {:cexpr "__cil_tmp38"} {:si_old_unique_call 377} boogie_si_record_i32($i58);
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i32.i16($i58);
    call {:si_unique_call 5474} {:cexpr "tempA"} {:si_old_unique_call 378} boogie_si_record_i16($i59);
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    $i60 := $sext.i16.i32($i59);
    call {:si_unique_call 5475} {:cexpr "__cil_tmp40"} {:si_old_unique_call 379} boogie_si_record_i32($i60);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    $i61 := $sle.i32($i60, 12);
    goto corral_source_split_733;

  corral_source_split_733:
    assume {:verifier.code 0} true;
    $i62 := $i55;
    assume {:branchcond $i61} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_737;

  corral_source_split_737:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i63 := $sext.i16.i32($i62);
    call {:si_unique_call 5476} {:cexpr "program_bits"} {:si_old_unique_call 380} boogie_si_record_i32($i63);
    assume {:verifier.code 0} true;
    $i6, $i7 := $i63, $i62;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_651;

  corral_source_split_651:
    assume {:verifier.code 0} true;
    $p64 := $bitcast.ref.ref($p3);
    goto corral_source_split_652;

  corral_source_split_652:
    assume {:verifier.code 0} true;
    goto corral_source_split_653;

  corral_source_split_653:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p3);
    call {:si_unique_call 5477} {:cexpr "__cil_tmp42"} {:si_old_unique_call 341} boogie_si_record_i64($i65);
    goto corral_source_split_654;

  corral_source_split_654:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 4);
    call {:si_unique_call 5478} {:cexpr "__cil_tmp43"} {:si_old_unique_call 342} boogie_si_record_i64($i66);
    goto corral_source_split_655;

  corral_source_split_655:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_656;

  corral_source_split_656:
    assume {:verifier.code 0} true;
    goto corral_source_split_657;

  corral_source_split_657:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p3);
    call {:si_unique_call 5479} {:cexpr "__cil_tmp45"} {:si_old_unique_call 343} boogie_si_record_i64($i68);
    goto corral_source_split_658;

  corral_source_split_658:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 12);
    call {:si_unique_call 5480} {:cexpr "__cil_tmp46"} {:si_old_unique_call 344} boogie_si_record_i64($i69);
    goto corral_source_split_659;

  corral_source_split_659:
    assume {:verifier.code 0} true;
    $i70 := $sext.i16.i32($i7);
    goto corral_source_split_660;

  corral_source_split_660:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i69);
    goto corral_source_split_661;

  corral_source_split_661:
    assume {:verifier.code 0} true;
    goto corral_source_split_662;

  corral_source_split_662:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p3);
    call {:si_unique_call 5481} {:cexpr "__cil_tmp48"} {:si_old_unique_call 345} boogie_si_record_i64($i72);
    goto corral_source_split_663;

  corral_source_split_663:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 8);
    call {:si_unique_call 5482} {:cexpr "__cil_tmp49"} {:si_old_unique_call 346} boogie_si_record_i64($i73);
    goto corral_source_split_664;

  corral_source_split_664:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_665;

  corral_source_split_665:
    assume {:verifier.code 0} true;
    goto corral_source_split_666;

  corral_source_split_666:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i61 == 1;
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i56, $i54, $i55, $i59;
    goto $bb26_dummy;

  $bb26_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i35 == 1;
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    $i36 := $zext.i16.i32($i28);
    call {:si_unique_call 5483} {:cexpr "__cil_tmp24"} {:si_old_unique_call 360} boogie_si_record_i32($i36);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i32);
    call {:si_unique_call 5484} {:cexpr "__cil_tmp25"} {:si_old_unique_call 361} boogie_si_record_i32($i37);
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, $i36);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    $i52, $i53 := $i28, $i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    $i54, $i55 := $i52, $i53;
    goto $bb23;

  $bb20:
    assume $i38 == 1;
    goto corral_source_split_710;

  corral_source_split_710:
    assume {:verifier.code 0} true;
    $i39 := $sext.i16.i32($i29);
    call {:si_unique_call 5485} {:cexpr "__cil_tmp26"} {:si_old_unique_call 362} boogie_si_record_i32($i39);
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    $i40 := $and.i32($i39, $sub.i32(0, 32));
    call {:si_unique_call 5486} {:cexpr "__cil_tmp27"} {:si_old_unique_call 363} boogie_si_record_i32($i40);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    $i41 := $trunc.i32.i16($i40);
    call {:si_unique_call 5487} {:cexpr "divider"} {:si_old_unique_call 364} boogie_si_record_i16($i41);
    goto corral_source_split_713;

  corral_source_split_713:
    assume {:verifier.code 0} true;
    $i42 := $sext.i16.i32($i30);
    call {:si_unique_call 5488} {:cexpr "__cil_tmp28"} {:si_old_unique_call 365} boogie_si_record_i32($i42);
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    $i43 := $sext.i16.i32($i41);
    call {:si_unique_call 5489} {:cexpr "__cil_tmp29"} {:si_old_unique_call 366} boogie_si_record_i32($i43);
    goto corral_source_split_715;

  corral_source_split_715:
    assume {:verifier.code 0} true;
    $i44 := $or.i32($i43, $i42);
    call {:si_unique_call 5490} {:cexpr "__cil_tmp30"} {:si_old_unique_call 367} boogie_si_record_i32($i44);
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    $i45 := $trunc.i32.i16($i44);
    call {:si_unique_call 5491} {:cexpr "divider"} {:si_old_unique_call 368} boogie_si_record_i16($i45);
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    $i46 := $and.i32($i33, 255);
    call {:si_unique_call 5492} {:cexpr "__cil_tmp31"} {:si_old_unique_call 369} boogie_si_record_i32($i46);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    $i47 := $shl.i32($i46, 8);
    call {:si_unique_call 5493} {:cexpr "__cil_tmp32"} {:si_old_unique_call 370} boogie_si_record_i32($i47);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    $i48 := $sext.i16.i32($i45);
    call {:si_unique_call 5494} {:cexpr "__cil_tmp33"} {:si_old_unique_call 371} boogie_si_record_i32($i48);
    goto corral_source_split_720;

  corral_source_split_720:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i48, 255);
    call {:si_unique_call 5495} {:cexpr "__cil_tmp34"} {:si_old_unique_call 372} boogie_si_record_i32($i49);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, $i47);
    call {:si_unique_call 5496} {:cexpr "__cil_tmp36"} {:si_old_unique_call 373} boogie_si_record_i32($i50);
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i32.i16($i50);
    call {:si_unique_call 5497} {:cexpr "divider"} {:si_old_unique_call 374} boogie_si_record_i16($i51);
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    $i52, $i53 := $i32, $i51;
    goto $bb22;

  $bb12:
    assume $i15 == 1;
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i13, 1);
    call {:si_unique_call 5498} {:cexpr "mhz100"} {:si_old_unique_call 347} boogie_si_record_i32($i18);
    goto corral_source_split_686;

  corral_source_split_686:
    assume {:verifier.code 0} true;
    $i19 := $sext.i16.i32($i14);
    call {:si_unique_call 5499} {:cexpr "__cil_tmp17"} {:si_old_unique_call 348} boogie_si_record_i32($i19);
    goto corral_source_split_687;

  corral_source_split_687:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 32);
    call {:si_unique_call 5500} {:cexpr "__cil_tmp18"} {:si_old_unique_call 349} boogie_si_record_i32($i20);
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5501} {:cexpr "divider"} {:si_old_unique_call 350} boogie_si_record_i16($i21);
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i18, $i21;
    goto corral_source_split_689_dummy;

  corral_source_split_689_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i10 == 1;
    goto corral_source_split_673;

  corral_source_split_673:
    assume {:verifier.code 0} true;
    $i11 := 15938;
    goto $bb9;

  $bb4:
    assume $i8 == 1;
    goto corral_source_split_668;

  corral_source_split_668:
    assume {:verifier.code 0} true;
    $i9 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_646;

  corral_source_split_646:
    assume {:verifier.code 0} true;
    $i6, $i7 := 224, 0;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_pll_8398_loop_$bb16"} {:entrypoint} aty_var_to_pll_8398_EntryCopy_aty_var_to_pll_8398_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i16;
  var $i16: i1;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i16;
  var $i27: i16;
  var $i28: i16;
  var $i29: i32;
  var $i30: i1;
  var $i31: i16;
  var $i32: i16;
  var $i33: i32;
  var $i34: i16;
  var $i35: i16;
  var $i36: i16;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i16;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i54: i32;
  var $i53: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i16;
  var $i58: i16;
  var $i59: i32;
  var $i60: i32;
  var $i61: i16;
  var $i62: i32;
  var $i63: i32;
  var $i64: i16;
  var $i65: i32;
  var $i66: i32;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i32;
  var $i6: i32;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5533} {:cexpr "aty_var_to_pll_8398:arg:vclk_per"} {:si_old_unique_call 412} boogie_si_record_i32($i1);
    call {:si_unique_call 5534} {:cexpr "aty_var_to_pll_8398:arg:bpp"} {:si_old_unique_call 413} boogie_si_record_i32($i2);
    goto corral_source_split_779;

  corral_source_split_779:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5535} {:cexpr "mhz100"} {:si_old_unique_call 414} boogie_si_record_i32($i4);
    goto corral_source_split_780;

  corral_source_split_780:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_781;

  corral_source_split_781:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_785;

  corral_source_split_785:
    assume {:verifier.code 0} true;
    $i7 := $ult.i32($i4, 8000);
    goto corral_source_split_786;

  corral_source_split_786:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    $i8 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_806;

  corral_source_split_806:
    assume {:verifier.code 0} true;
    $i9 := $ugt.i32($i8, 15938);
    goto corral_source_split_807;

  corral_source_split_807:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    $i10 := $i8;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_811;

  corral_source_split_811:
    assume {:verifier.code 0} true;
    $i11 := $mul.i32($i10, 256);
    call {:si_unique_call 5536} {:cexpr "__cil_tmp22"} {:si_old_unique_call 421} boogie_si_record_i32($i11);
    goto corral_source_split_812;

  corral_source_split_812:
    assume {:verifier.code 0} true;
    $i12 := $udiv.i32($i11, 100);
    call {:si_unique_call 5537} {:cexpr "longMHz100"} {:si_old_unique_call 422} boogie_si_record_i32($i12);
    goto corral_source_split_813;

  corral_source_split_813:
    assume {:verifier.code 0} true;
    $i13 := $shl.i32(8000, 3);
    goto corral_source_split_814;

  corral_source_split_814:
    assume {:verifier.code 0} true;
    $i14, $i15 := $i10, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5538} $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_8398_loop_$bb10_PassiveCopy($i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i16 := $ult.i32($i14, $i13);
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    $i17 := $i15;
    assume {:branchcond $i16} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_822;

  corral_source_split_822:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $zext.i16.i32($i17);
    call {:si_unique_call 5539} {:cexpr "__cil_tmp26"} {:si_old_unique_call 427} boogie_si_record_i32($i22);
    goto corral_source_split_829;

  corral_source_split_829:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1, $i22);
    call {:si_unique_call 5540} {:cexpr "__cil_tmp27"} {:si_old_unique_call 428} boogie_si_record_i32($i23);
    goto corral_source_split_830;

  corral_source_split_830:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5541} {:cexpr "twoToKth"} {:si_old_unique_call 429} boogie_si_record_i16($i24);
    goto corral_source_split_831;

  corral_source_split_831:
    assume {:verifier.code 0} true;
    $i25, $i26, $i27, $i28 := $sub.i32(0, 1), 2, 0, 0;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5542} $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64 := aty_var_to_pll_8398_loop_$bb16($i12, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64);
    LoopBound_AssertVar := false;
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i29 := $zext.i16.i32($i26);
    call {:si_unique_call 5543} {:cexpr "__cil_tmp28"} {:si_old_unique_call 430} boogie_si_record_i32($i29);
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    $i30 := $sle.i32($i29, 30);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    $i31, $i32 := $i27, $i28;
    assume {:branchcond $i30} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i30 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_840;

  corral_source_split_840:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i65 := $zext.i16.i32($i32);
    call {:si_unique_call 5544} {:cexpr "__cil_tmp42"} {:si_old_unique_call 431} boogie_si_record_i32($i65);
    goto corral_source_split_842;

  corral_source_split_842:
    assume {:verifier.code 0} true;
    $i66 := $shl.i32($i65, 8);
    call {:si_unique_call 5545} {:cexpr "__cil_tmp43"} {:si_old_unique_call 432} boogie_si_record_i32($i66);
    goto corral_source_split_843;

  corral_source_split_843:
    assume {:verifier.code 0} true;
    $i67 := $zext.i16.i32($i31);
    call {:si_unique_call 5546} {:cexpr "__cil_tmp44"} {:si_old_unique_call 433} boogie_si_record_i32($i67);
    goto corral_source_split_844;

  corral_source_split_844:
    assume {:verifier.code 0} true;
    $i68 := $zext.i16.i32($i17);
    call {:si_unique_call 5547} {:cexpr "__cil_tmp45"} {:si_old_unique_call 434} boogie_si_record_i32($i68);
    goto corral_source_split_845;

  corral_source_split_845:
    assume {:verifier.code 0} true;
    $i69 := $shl.i32($i68, 6);
    call {:si_unique_call 5548} {:cexpr "__cil_tmp46"} {:si_old_unique_call 435} boogie_si_record_i32($i69);
    goto corral_source_split_846;

  corral_source_split_846:
    assume {:verifier.code 0} true;
    $i70 := $add.i32($i69, $i67);
    call {:si_unique_call 5549} {:cexpr "__cil_tmp47"} {:si_old_unique_call 436} boogie_si_record_i32($i70);
    goto corral_source_split_847;

  corral_source_split_847:
    assume {:verifier.code 0} true;
    $i71 := $add.i32($i70, $i66);
    call {:si_unique_call 5550} {:cexpr "__cil_tmp48"} {:si_old_unique_call 437} boogie_si_record_i32($i71);
    assume {:verifier.code 0} true;
    $i6 := $i71;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_788;

  corral_source_split_788:
    assume {:verifier.code 0} true;
    $p72 := $bitcast.ref.ref($p3);
    goto corral_source_split_789;

  corral_source_split_789:
    assume {:verifier.code 0} true;
    goto corral_source_split_790;

  corral_source_split_790:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p3);
    call {:si_unique_call 5551} {:cexpr "__cil_tmp50"} {:si_old_unique_call 415} boogie_si_record_i64($i73);
    goto corral_source_split_791;

  corral_source_split_791:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 4);
    call {:si_unique_call 5552} {:cexpr "__cil_tmp51"} {:si_old_unique_call 416} boogie_si_record_i64($i74);
    goto corral_source_split_792;

  corral_source_split_792:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_793;

  corral_source_split_793:
    assume {:verifier.code 0} true;
    goto corral_source_split_794;

  corral_source_split_794:
    assume {:verifier.code 0} true;
    $i76 := $p2i.ref.i64($p3);
    call {:si_unique_call 5553} {:cexpr "__cil_tmp53"} {:si_old_unique_call 417} boogie_si_record_i64($i76);
    goto corral_source_split_795;

  corral_source_split_795:
    assume {:verifier.code 0} true;
    $i77 := $add.i64($i76, 12);
    call {:si_unique_call 5554} {:cexpr "__cil_tmp54"} {:si_old_unique_call 418} boogie_si_record_i64($i77);
    goto corral_source_split_796;

  corral_source_split_796:
    assume {:verifier.code 0} true;
    $p78 := $i2p.i64.ref($i77);
    goto corral_source_split_797;

  corral_source_split_797:
    assume {:verifier.code 0} true;
    goto corral_source_split_798;

  corral_source_split_798:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p3);
    call {:si_unique_call 5555} {:cexpr "__cil_tmp56"} {:si_old_unique_call 419} boogie_si_record_i64($i79);
    goto corral_source_split_799;

  corral_source_split_799:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 8);
    call {:si_unique_call 5556} {:cexpr "__cil_tmp57"} {:si_old_unique_call 420} boogie_si_record_i64($i80);
    goto corral_source_split_800;

  corral_source_split_800:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_801;

  corral_source_split_801:
    assume {:verifier.code 0} true;
    goto corral_source_split_802;

  corral_source_split_802:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i30 == 1;
    goto corral_source_split_838;

  corral_source_split_838:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i33, $i34, $i35, $i36 := $i25, 35, $i27, $i28;
    goto $bb22;

  $bb22:
    call {:si_unique_call 5557} $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61 := aty_var_to_pll_8398_loop_$bb22($i12, $i24, $i26, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61);
    goto $bb22_last;

  $bb22_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_849;

  corral_source_split_849:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i34);
    call {:si_unique_call 5558} {:cexpr "__cil_tmp29"} {:si_old_unique_call 438} boogie_si_record_i32($i37);
    goto corral_source_split_851;

  corral_source_split_851:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, 247);
    goto corral_source_split_852;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    $i39, $i40, $i41 := $i33, $i35, $i36;
    assume {:branchcond $i38} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_856;

  corral_source_split_856:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i62 := $zext.i16.i32($i26);
    call {:si_unique_call 5559} {:cexpr "__cil_tmp40"} {:si_old_unique_call 448} boogie_si_record_i32($i62);
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    $i63 := $add.i32($i62, 1);
    call {:si_unique_call 5560} {:cexpr "__cil_tmp41"} {:si_old_unique_call 449} boogie_si_record_i32($i63);
    goto corral_source_split_870;

  corral_source_split_870:
    assume {:verifier.code 0} true;
    $i64 := $trunc.i32.i16($i63);
    call {:si_unique_call 5561} {:cexpr "m"} {:si_old_unique_call 450} boogie_si_record_i16($i64);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    $i25, $i26, $i27, $i28 := $i39, $i64, $i40, $i41;
    goto corral_source_split_871_dummy;

  corral_source_split_871_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i38 == 1;
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i42 := $zext.i16.i32($i34);
    call {:si_unique_call 5562} {:cexpr "__cil_tmp30"} {:si_old_unique_call 439} boogie_si_record_i32($i42);
    goto corral_source_split_858;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    $i43 := $add.i32($i42, 8);
    call {:si_unique_call 5563} {:cexpr "__cil_tmp31"} {:si_old_unique_call 440} boogie_si_record_i32($i43);
    goto corral_source_split_859;

  corral_source_split_859:
    assume {:verifier.code 0} true;
    $i44 := $mul.i32(938356, $i43);
    call {:si_unique_call 5564} {:cexpr "tempA"} {:si_old_unique_call 441} boogie_si_record_i32($i44);
    goto corral_source_split_860;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    $i45 := $zext.i16.i32($i24);
    call {:si_unique_call 5565} {:cexpr "__cil_tmp33"} {:si_old_unique_call 442} boogie_si_record_i32($i45);
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    $i46 := $mul.i32($i45, 256);
    call {:si_unique_call 5566} {:cexpr "__cil_tmp34"} {:si_old_unique_call 443} boogie_si_record_i32($i46);
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    $i47 := $zext.i16.i32($i26);
    call {:si_unique_call 5567} {:cexpr "__cil_tmp35"} {:si_old_unique_call 444} boogie_si_record_i32($i47);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    $i48 := $add.i32($i47, 2);
    call {:si_unique_call 5568} {:cexpr "__cil_tmp36"} {:si_old_unique_call 445} boogie_si_record_i32($i48);
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    $i49 := $mul.i32($i46, $i48);
    call {:si_unique_call 5569} {:cexpr "tempB"} {:si_old_unique_call 446} boogie_si_record_i32($i49);
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $i50 := $udiv.i32($i44, $i49);
    call {:si_unique_call 5570} {:cexpr "fOut"} {:si_old_unique_call 447} boogie_si_record_i32($i50);
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    $i51 := $ugt.i32($i12, $i50);
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    assume {:branchcond $i51} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i51 == 1);
    goto corral_source_split_876;

  corral_source_split_876:
    assume {:verifier.code 0} true;
    $i54 := $sub.i32($i50, $i12);
    call {:si_unique_call 5571} {:cexpr "diff"} {:si_old_unique_call 452} boogie_si_record_i32($i54);
    assume {:verifier.code 0} true;
    $i53 := $i54;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    $i55 := $ult.i32($i53, $i33);
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    assume {:branchcond $i55} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    $i56, $i57, $i58 := $i33, $i35, $i36;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i32($i34);
    call {:si_unique_call 5572} {:cexpr "__cil_tmp38"} {:si_old_unique_call 453} boogie_si_record_i32($i59);
    goto corral_source_split_884;

  corral_source_split_884:
    assume {:verifier.code 0} true;
    $i60 := $add.i32($i59, 1);
    call {:si_unique_call 5573} {:cexpr "__cil_tmp39"} {:si_old_unique_call 454} boogie_si_record_i32($i60);
    goto corral_source_split_885;

  corral_source_split_885:
    assume {:verifier.code 0} true;
    $i61 := $trunc.i32.i16($i60);
    call {:si_unique_call 5574} {:cexpr "n"} {:si_old_unique_call 455} boogie_si_record_i16($i61);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    $i33, $i34, $i35, $i36 := $i56, $i61, $i57, $i58;
    goto corral_source_split_886_dummy;

  corral_source_split_886_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb31:
    assume $i55 == 1;
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    $i56, $i57, $i58 := $i53, $i26, $i34;
    goto $bb33;

  $bb28:
    assume $i51 == 1;
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    $i52 := $sub.i32($i12, $i50);
    call {:si_unique_call 5575} {:cexpr "diff"} {:si_old_unique_call 451} boogie_si_record_i32($i52);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    $i53 := $i52;
    goto $bb30;

  $bb12:
    assume $i16 == 1;
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i14, 1);
    call {:si_unique_call 5576} {:cexpr "mhz100"} {:si_old_unique_call 423} boogie_si_record_i32($i18);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    $i19 := $zext.i16.i32($i15);
    call {:si_unique_call 5577} {:cexpr "__cil_tmp24"} {:si_old_unique_call 424} boogie_si_record_i32($i19);
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 1);
    call {:si_unique_call 5578} {:cexpr "__cil_tmp25"} {:si_old_unique_call 425} boogie_si_record_i32($i20);
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5579} {:cexpr "k"} {:si_old_unique_call 426} boogie_si_record_i16($i21);
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    $i14, $i15 := $i18, $i21;
    goto corral_source_split_827_dummy;

  corral_source_split_827_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i9 == 1;
    goto corral_source_split_809;

  corral_source_split_809:
    assume {:verifier.code 0} true;
    $i10 := 15938;
    goto $bb9;

  $bb4:
    assume $i7 == 1;
    goto corral_source_split_804;

  corral_source_split_804:
    assume {:verifier.code 0} true;
    $i8 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_783;

  corral_source_split_783:
    assume {:verifier.code 0} true;
    $i6 := 224;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_pll_8398_loop_$bb10"} {:entrypoint} aty_var_to_pll_8398_EntryCopy_aty_var_to_pll_8398_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i16;
  var $i16: i1;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i16;
  var $i27: i16;
  var $i28: i16;
  var $i29: i32;
  var $i30: i1;
  var $i31: i16;
  var $i32: i16;
  var $i33: i32;
  var $i34: i16;
  var $i35: i16;
  var $i36: i16;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i16;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $i54: i32;
  var $i53: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i16;
  var $i58: i16;
  var $i59: i32;
  var $i60: i32;
  var $i61: i16;
  var $i62: i32;
  var $i63: i32;
  var $i64: i16;
  var $i65: i32;
  var $i66: i32;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i32;
  var $i6: i32;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5533} {:cexpr "aty_var_to_pll_8398:arg:vclk_per"} {:si_old_unique_call 412} boogie_si_record_i32($i1);
    call {:si_unique_call 5534} {:cexpr "aty_var_to_pll_8398:arg:bpp"} {:si_old_unique_call 413} boogie_si_record_i32($i2);
    goto corral_source_split_779;

  corral_source_split_779:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5535} {:cexpr "mhz100"} {:si_old_unique_call 414} boogie_si_record_i32($i4);
    goto corral_source_split_780;

  corral_source_split_780:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_781;

  corral_source_split_781:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_785;

  corral_source_split_785:
    assume {:verifier.code 0} true;
    $i7 := $ult.i32($i4, 8000);
    goto corral_source_split_786;

  corral_source_split_786:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    $i8 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_806;

  corral_source_split_806:
    assume {:verifier.code 0} true;
    $i9 := $ugt.i32($i8, 15938);
    goto corral_source_split_807;

  corral_source_split_807:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    $i10 := $i8;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_811;

  corral_source_split_811:
    assume {:verifier.code 0} true;
    $i11 := $mul.i32($i10, 256);
    call {:si_unique_call 5536} {:cexpr "__cil_tmp22"} {:si_old_unique_call 421} boogie_si_record_i32($i11);
    goto corral_source_split_812;

  corral_source_split_812:
    assume {:verifier.code 0} true;
    $i12 := $udiv.i32($i11, 100);
    call {:si_unique_call 5537} {:cexpr "longMHz100"} {:si_old_unique_call 422} boogie_si_record_i32($i12);
    goto corral_source_split_813;

  corral_source_split_813:
    assume {:verifier.code 0} true;
    $i13 := $shl.i32(8000, 3);
    goto corral_source_split_814;

  corral_source_split_814:
    assume {:verifier.code 0} true;
    $i14, $i15 := $i10, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5538} $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_8398_loop_$bb10($i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    LoopBound_AssertVar := false;
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i16 := $ult.i32($i14, $i13);
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    $i17 := $i15;
    assume {:branchcond $i16} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i16 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_822;

  corral_source_split_822:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $zext.i16.i32($i17);
    call {:si_unique_call 5539} {:cexpr "__cil_tmp26"} {:si_old_unique_call 427} boogie_si_record_i32($i22);
    goto corral_source_split_829;

  corral_source_split_829:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1, $i22);
    call {:si_unique_call 5540} {:cexpr "__cil_tmp27"} {:si_old_unique_call 428} boogie_si_record_i32($i23);
    goto corral_source_split_830;

  corral_source_split_830:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5541} {:cexpr "twoToKth"} {:si_old_unique_call 429} boogie_si_record_i16($i24);
    goto corral_source_split_831;

  corral_source_split_831:
    assume {:verifier.code 0} true;
    $i25, $i26, $i27, $i28 := $sub.i32(0, 1), 2, 0, 0;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5542} $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64 := aty_var_to_pll_8398_loop_$bb16_PassiveCopy($i12, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i29 := $zext.i16.i32($i26);
    call {:si_unique_call 5543} {:cexpr "__cil_tmp28"} {:si_old_unique_call 430} boogie_si_record_i32($i29);
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    $i30 := $sle.i32($i29, 30);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    $i31, $i32 := $i27, $i28;
    assume {:branchcond $i30} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i30 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_840;

  corral_source_split_840:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i65 := $zext.i16.i32($i32);
    call {:si_unique_call 5544} {:cexpr "__cil_tmp42"} {:si_old_unique_call 431} boogie_si_record_i32($i65);
    goto corral_source_split_842;

  corral_source_split_842:
    assume {:verifier.code 0} true;
    $i66 := $shl.i32($i65, 8);
    call {:si_unique_call 5545} {:cexpr "__cil_tmp43"} {:si_old_unique_call 432} boogie_si_record_i32($i66);
    goto corral_source_split_843;

  corral_source_split_843:
    assume {:verifier.code 0} true;
    $i67 := $zext.i16.i32($i31);
    call {:si_unique_call 5546} {:cexpr "__cil_tmp44"} {:si_old_unique_call 433} boogie_si_record_i32($i67);
    goto corral_source_split_844;

  corral_source_split_844:
    assume {:verifier.code 0} true;
    $i68 := $zext.i16.i32($i17);
    call {:si_unique_call 5547} {:cexpr "__cil_tmp45"} {:si_old_unique_call 434} boogie_si_record_i32($i68);
    goto corral_source_split_845;

  corral_source_split_845:
    assume {:verifier.code 0} true;
    $i69 := $shl.i32($i68, 6);
    call {:si_unique_call 5548} {:cexpr "__cil_tmp46"} {:si_old_unique_call 435} boogie_si_record_i32($i69);
    goto corral_source_split_846;

  corral_source_split_846:
    assume {:verifier.code 0} true;
    $i70 := $add.i32($i69, $i67);
    call {:si_unique_call 5549} {:cexpr "__cil_tmp47"} {:si_old_unique_call 436} boogie_si_record_i32($i70);
    goto corral_source_split_847;

  corral_source_split_847:
    assume {:verifier.code 0} true;
    $i71 := $add.i32($i70, $i66);
    call {:si_unique_call 5550} {:cexpr "__cil_tmp48"} {:si_old_unique_call 437} boogie_si_record_i32($i71);
    assume {:verifier.code 0} true;
    $i6 := $i71;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_788;

  corral_source_split_788:
    assume {:verifier.code 0} true;
    $p72 := $bitcast.ref.ref($p3);
    goto corral_source_split_789;

  corral_source_split_789:
    assume {:verifier.code 0} true;
    goto corral_source_split_790;

  corral_source_split_790:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p3);
    call {:si_unique_call 5551} {:cexpr "__cil_tmp50"} {:si_old_unique_call 415} boogie_si_record_i64($i73);
    goto corral_source_split_791;

  corral_source_split_791:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 4);
    call {:si_unique_call 5552} {:cexpr "__cil_tmp51"} {:si_old_unique_call 416} boogie_si_record_i64($i74);
    goto corral_source_split_792;

  corral_source_split_792:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_793;

  corral_source_split_793:
    assume {:verifier.code 0} true;
    goto corral_source_split_794;

  corral_source_split_794:
    assume {:verifier.code 0} true;
    $i76 := $p2i.ref.i64($p3);
    call {:si_unique_call 5553} {:cexpr "__cil_tmp53"} {:si_old_unique_call 417} boogie_si_record_i64($i76);
    goto corral_source_split_795;

  corral_source_split_795:
    assume {:verifier.code 0} true;
    $i77 := $add.i64($i76, 12);
    call {:si_unique_call 5554} {:cexpr "__cil_tmp54"} {:si_old_unique_call 418} boogie_si_record_i64($i77);
    goto corral_source_split_796;

  corral_source_split_796:
    assume {:verifier.code 0} true;
    $p78 := $i2p.i64.ref($i77);
    goto corral_source_split_797;

  corral_source_split_797:
    assume {:verifier.code 0} true;
    goto corral_source_split_798;

  corral_source_split_798:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p3);
    call {:si_unique_call 5555} {:cexpr "__cil_tmp56"} {:si_old_unique_call 419} boogie_si_record_i64($i79);
    goto corral_source_split_799;

  corral_source_split_799:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 8);
    call {:si_unique_call 5556} {:cexpr "__cil_tmp57"} {:si_old_unique_call 420} boogie_si_record_i64($i80);
    goto corral_source_split_800;

  corral_source_split_800:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_801;

  corral_source_split_801:
    assume {:verifier.code 0} true;
    goto corral_source_split_802;

  corral_source_split_802:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i30 == 1;
    goto corral_source_split_838;

  corral_source_split_838:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i33, $i34, $i35, $i36 := $i25, 35, $i27, $i28;
    goto $bb22;

  $bb22:
    call {:si_unique_call 5557} $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61 := aty_var_to_pll_8398_loop_$bb22($i12, $i24, $i26, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i53, $i55, $i56, $i57, $i58, $i59, $i60, $i61);
    goto $bb22_last;

  $bb22_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_849;

  corral_source_split_849:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i34);
    call {:si_unique_call 5558} {:cexpr "__cil_tmp29"} {:si_old_unique_call 438} boogie_si_record_i32($i37);
    goto corral_source_split_851;

  corral_source_split_851:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, 247);
    goto corral_source_split_852;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    $i39, $i40, $i41 := $i33, $i35, $i36;
    assume {:branchcond $i38} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_856;

  corral_source_split_856:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i62 := $zext.i16.i32($i26);
    call {:si_unique_call 5559} {:cexpr "__cil_tmp40"} {:si_old_unique_call 448} boogie_si_record_i32($i62);
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    $i63 := $add.i32($i62, 1);
    call {:si_unique_call 5560} {:cexpr "__cil_tmp41"} {:si_old_unique_call 449} boogie_si_record_i32($i63);
    goto corral_source_split_870;

  corral_source_split_870:
    assume {:verifier.code 0} true;
    $i64 := $trunc.i32.i16($i63);
    call {:si_unique_call 5561} {:cexpr "m"} {:si_old_unique_call 450} boogie_si_record_i16($i64);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    $i25, $i26, $i27, $i28 := $i39, $i64, $i40, $i41;
    goto corral_source_split_871_dummy;

  corral_source_split_871_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i38 == 1;
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i42 := $zext.i16.i32($i34);
    call {:si_unique_call 5562} {:cexpr "__cil_tmp30"} {:si_old_unique_call 439} boogie_si_record_i32($i42);
    goto corral_source_split_858;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    $i43 := $add.i32($i42, 8);
    call {:si_unique_call 5563} {:cexpr "__cil_tmp31"} {:si_old_unique_call 440} boogie_si_record_i32($i43);
    goto corral_source_split_859;

  corral_source_split_859:
    assume {:verifier.code 0} true;
    $i44 := $mul.i32(938356, $i43);
    call {:si_unique_call 5564} {:cexpr "tempA"} {:si_old_unique_call 441} boogie_si_record_i32($i44);
    goto corral_source_split_860;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    $i45 := $zext.i16.i32($i24);
    call {:si_unique_call 5565} {:cexpr "__cil_tmp33"} {:si_old_unique_call 442} boogie_si_record_i32($i45);
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    $i46 := $mul.i32($i45, 256);
    call {:si_unique_call 5566} {:cexpr "__cil_tmp34"} {:si_old_unique_call 443} boogie_si_record_i32($i46);
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    $i47 := $zext.i16.i32($i26);
    call {:si_unique_call 5567} {:cexpr "__cil_tmp35"} {:si_old_unique_call 444} boogie_si_record_i32($i47);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    $i48 := $add.i32($i47, 2);
    call {:si_unique_call 5568} {:cexpr "__cil_tmp36"} {:si_old_unique_call 445} boogie_si_record_i32($i48);
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    $i49 := $mul.i32($i46, $i48);
    call {:si_unique_call 5569} {:cexpr "tempB"} {:si_old_unique_call 446} boogie_si_record_i32($i49);
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    $i50 := $udiv.i32($i44, $i49);
    call {:si_unique_call 5570} {:cexpr "fOut"} {:si_old_unique_call 447} boogie_si_record_i32($i50);
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    $i51 := $ugt.i32($i12, $i50);
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    assume {:branchcond $i51} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i51 == 1);
    goto corral_source_split_876;

  corral_source_split_876:
    assume {:verifier.code 0} true;
    $i54 := $sub.i32($i50, $i12);
    call {:si_unique_call 5571} {:cexpr "diff"} {:si_old_unique_call 452} boogie_si_record_i32($i54);
    assume {:verifier.code 0} true;
    $i53 := $i54;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    $i55 := $ult.i32($i53, $i33);
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    assume {:branchcond $i55} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    $i56, $i57, $i58 := $i33, $i35, $i36;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i32($i34);
    call {:si_unique_call 5572} {:cexpr "__cil_tmp38"} {:si_old_unique_call 453} boogie_si_record_i32($i59);
    goto corral_source_split_884;

  corral_source_split_884:
    assume {:verifier.code 0} true;
    $i60 := $add.i32($i59, 1);
    call {:si_unique_call 5573} {:cexpr "__cil_tmp39"} {:si_old_unique_call 454} boogie_si_record_i32($i60);
    goto corral_source_split_885;

  corral_source_split_885:
    assume {:verifier.code 0} true;
    $i61 := $trunc.i32.i16($i60);
    call {:si_unique_call 5574} {:cexpr "n"} {:si_old_unique_call 455} boogie_si_record_i16($i61);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    $i33, $i34, $i35, $i36 := $i56, $i61, $i57, $i58;
    goto corral_source_split_886_dummy;

  corral_source_split_886_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb31:
    assume $i55 == 1;
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    $i56, $i57, $i58 := $i53, $i26, $i34;
    goto $bb33;

  $bb28:
    assume $i51 == 1;
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    $i52 := $sub.i32($i12, $i50);
    call {:si_unique_call 5575} {:cexpr "diff"} {:si_old_unique_call 451} boogie_si_record_i32($i52);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    $i53 := $i52;
    goto $bb30;

  $bb12:
    assume $i16 == 1;
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i14, 1);
    call {:si_unique_call 5576} {:cexpr "mhz100"} {:si_old_unique_call 423} boogie_si_record_i32($i18);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    $i19 := $zext.i16.i32($i15);
    call {:si_unique_call 5577} {:cexpr "__cil_tmp24"} {:si_old_unique_call 424} boogie_si_record_i32($i19);
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 1);
    call {:si_unique_call 5578} {:cexpr "__cil_tmp25"} {:si_old_unique_call 425} boogie_si_record_i32($i20);
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5579} {:cexpr "k"} {:si_old_unique_call 426} boogie_si_record_i16($i21);
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    $i14, $i15 := $i18, $i21;
    goto corral_source_split_827_dummy;

  corral_source_split_827_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i9 == 1;
    goto corral_source_split_809;

  corral_source_split_809:
    assume {:verifier.code 0} true;
    $i10 := 15938;
    goto $bb9;

  $bb4:
    assume $i7 == 1;
    goto corral_source_split_804;

  corral_source_split_804:
    assume {:verifier.code 0} true;
    $i8 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_783;

  corral_source_split_783:
    assume {:verifier.code 0} true;
    $i6 := 224;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_pll_408_loop_$bb16"} {:entrypoint} aty_var_to_pll_408_EntryCopy_aty_var_to_pll_408_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i16;
  var $i15: i1;
  var $i16: i32;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $i29: i16;
  var $i30: i16;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i16;
  var $i52: i16;
  var $i53: i16;
  var $i54: i16;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i16;
  var $i63: i32;
  var $i6: i32;
  var $i7: i16;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5620} {:cexpr "aty_var_to_pll_408:arg:vclk_per"} {:si_old_unique_call 496} boogie_si_record_i32($i1);
    call {:si_unique_call 5621} {:cexpr "aty_var_to_pll_408:arg:bpp"} {:si_old_unique_call 497} boogie_si_record_i32($i2);
    goto corral_source_split_935;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5622} {:cexpr "mhz100"} {:si_old_unique_call 498} boogie_si_record_i32($i4);
    goto corral_source_split_936;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_937;

  corral_source_split_937:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_941;

  corral_source_split_941:
    assume {:verifier.code 0} true;
    $i8 := $ult.i32($i4, 8000);
    goto corral_source_split_942;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_963;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    $i10 := $ugt.i32($i9, 15938);
    goto corral_source_split_964;

  corral_source_split_964:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    $i11 := $i9;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_968;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    $i12 := $shl.i32(8000, 3);
    goto corral_source_split_969;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i11, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5623} $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_408_loop_$bb10_PassiveCopy($i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_971;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i15 := $ult.i32($i13, $i12);
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    $i16, $i17 := $i13, $i14;
    assume {:branchcond $i15} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_977;

  corral_source_split_977:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $mul.i32($i16, 4);
    call {:si_unique_call 5624} {:cexpr "temp"} {:si_old_unique_call 509} boogie_si_record_i32($i22);
    goto corral_source_split_984;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1432, 1);
    call {:si_unique_call 5625} {:cexpr "__cil_tmp19"} {:si_old_unique_call 510} boogie_si_record_i32($i23);
    goto corral_source_split_985;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5626} {:cexpr "__cil_tmp20"} {:si_old_unique_call 511} boogie_si_record_i16($i24);
    goto corral_source_split_986;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    $i25 := $sext.i16.i32($i24);
    call {:si_unique_call 5627} {:cexpr "__cil_tmp21"} {:si_old_unique_call 512} boogie_si_record_i32($i25);
    goto corral_source_split_987;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    $i26 := $sub.i32($i22, $i25);
    call {:si_unique_call 5628} {:cexpr "temp"} {:si_old_unique_call 513} boogie_si_record_i32($i26);
    goto corral_source_split_988;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i26, $sub.i16(0, 1), $i17, 2;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5629} $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62 := aty_var_to_pll_408_loop_$bb16($i16, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62);
    LoopBound_AssertVar := false;
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i31 := $urem.i32($i27, 1432);
    call {:si_unique_call 5630} {:cexpr "__cil_tmp22"} {:si_old_unique_call 514} boogie_si_record_i32($i31);
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i32.i16($i31);
    call {:si_unique_call 5631} {:cexpr "remainder"} {:si_old_unique_call 515} boogie_si_record_i16($i32);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    $i33 := $udiv.i32($i27, 1432);
    call {:si_unique_call 5632} {:cexpr "tempB"} {:si_old_unique_call 516} boogie_si_record_i32($i33);
    goto corral_source_split_994;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    $i34 := $and.i32($i33, 65535);
    call {:si_unique_call 5633} {:cexpr "__cil_tmp23"} {:si_old_unique_call 517} boogie_si_record_i32($i34);
    goto corral_source_split_995;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    $i35 := $ule.i32($i34, 255);
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    $i54, $i55 := $i28, $i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1020;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    $i56 := $add.i32($i27, $i16);
    call {:si_unique_call 5634} {:cexpr "temp"} {:si_old_unique_call 533} boogie_si_record_i32($i56);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    $i57 := $sext.i16.i32($i30);
    call {:si_unique_call 5635} {:cexpr "__cil_tmp37"} {:si_old_unique_call 534} boogie_si_record_i32($i57);
    goto corral_source_split_1022;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i57, 1);
    call {:si_unique_call 5636} {:cexpr "__cil_tmp38"} {:si_old_unique_call 535} boogie_si_record_i32($i58);
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i32.i16($i58);
    call {:si_unique_call 5637} {:cexpr "tempA"} {:si_old_unique_call 536} boogie_si_record_i16($i59);
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    $i60 := $sext.i16.i32($i59);
    call {:si_unique_call 5638} {:cexpr "__cil_tmp39"} {:si_old_unique_call 537} boogie_si_record_i32($i60);
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    $i61 := $sle.i32($i60, 32);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    $i62 := $i55;
    assume {:branchcond $i61} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1030;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i63 := $sext.i16.i32($i62);
    call {:si_unique_call 5639} {:cexpr "program_bits"} {:si_old_unique_call 538} boogie_si_record_i32($i63);
    assume {:verifier.code 0} true;
    $i6, $i7 := $i63, $i62;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_944;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    $p64 := $bitcast.ref.ref($p3);
    goto corral_source_split_945;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    goto corral_source_split_946;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p3);
    call {:si_unique_call 5640} {:cexpr "__cil_tmp41"} {:si_old_unique_call 499} boogie_si_record_i64($i65);
    goto corral_source_split_947;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 4);
    call {:si_unique_call 5641} {:cexpr "__cil_tmp42"} {:si_old_unique_call 500} boogie_si_record_i64($i66);
    goto corral_source_split_948;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_949;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    goto corral_source_split_950;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p3);
    call {:si_unique_call 5642} {:cexpr "__cil_tmp44"} {:si_old_unique_call 501} boogie_si_record_i64($i68);
    goto corral_source_split_951;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 12);
    call {:si_unique_call 5643} {:cexpr "__cil_tmp45"} {:si_old_unique_call 502} boogie_si_record_i64($i69);
    goto corral_source_split_952;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    $i70 := $sext.i16.i32($i7);
    goto corral_source_split_953;

  corral_source_split_953:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i69);
    goto corral_source_split_954;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    goto corral_source_split_955;

  corral_source_split_955:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p3);
    call {:si_unique_call 5644} {:cexpr "__cil_tmp47"} {:si_old_unique_call 503} boogie_si_record_i64($i72);
    goto corral_source_split_956;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 8);
    call {:si_unique_call 5645} {:cexpr "__cil_tmp48"} {:si_old_unique_call 504} boogie_si_record_i64($i73);
    goto corral_source_split_957;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_958;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    goto corral_source_split_959;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i61 == 1;
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i56, $i54, $i55, $i59;
    goto $bb26_dummy;

  $bb26_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i35 == 1;
    goto corral_source_split_998;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    $i36 := $zext.i16.i32($i28);
    call {:si_unique_call 5646} {:cexpr "__cil_tmp24"} {:si_old_unique_call 518} boogie_si_record_i32($i36);
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i32);
    call {:si_unique_call 5647} {:cexpr "__cil_tmp25"} {:si_old_unique_call 519} boogie_si_record_i32($i37);
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, $i36);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    $i52, $i53 := $i28, $i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    $i54, $i55 := $i52, $i53;
    goto $bb23;

  $bb20:
    assume $i38 == 1;
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    $i39 := $sext.i16.i32($i29);
    call {:si_unique_call 5648} {:cexpr "__cil_tmp26"} {:si_old_unique_call 520} boogie_si_record_i32($i39);
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    $i40 := $and.i32($i39, $sub.i32(0, 64));
    call {:si_unique_call 5649} {:cexpr "__cil_tmp27"} {:si_old_unique_call 521} boogie_si_record_i32($i40);
    goto corral_source_split_1005;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    $i41 := $trunc.i32.i16($i40);
    call {:si_unique_call 5650} {:cexpr "divider"} {:si_old_unique_call 522} boogie_si_record_i16($i41);
    goto corral_source_split_1006;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    $i42 := $sext.i16.i32($i30);
    call {:si_unique_call 5651} {:cexpr "__cil_tmp28"} {:si_old_unique_call 523} boogie_si_record_i32($i42);
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    $i43 := $sext.i16.i32($i41);
    call {:si_unique_call 5652} {:cexpr "__cil_tmp29"} {:si_old_unique_call 524} boogie_si_record_i32($i43);
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    $i44 := $or.i32($i43, $i42);
    call {:si_unique_call 5653} {:cexpr "__cil_tmp30"} {:si_old_unique_call 525} boogie_si_record_i32($i44);
    goto corral_source_split_1009;

  corral_source_split_1009:
    assume {:verifier.code 0} true;
    $i45 := $trunc.i32.i16($i44);
    call {:si_unique_call 5654} {:cexpr "divider"} {:si_old_unique_call 526} boogie_si_record_i16($i45);
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    $i46 := $and.i32($i33, 255);
    call {:si_unique_call 5655} {:cexpr "__cil_tmp31"} {:si_old_unique_call 527} boogie_si_record_i32($i46);
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    $i47 := $shl.i32($i46, 8);
    call {:si_unique_call 5656} {:cexpr "__cil_tmp32"} {:si_old_unique_call 528} boogie_si_record_i32($i47);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    $i48 := $sext.i16.i32($i45);
    call {:si_unique_call 5657} {:cexpr "__cil_tmp33"} {:si_old_unique_call 529} boogie_si_record_i32($i48);
    goto corral_source_split_1013;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i48, 255);
    call {:si_unique_call 5658} {:cexpr "__cil_tmp34"} {:si_old_unique_call 530} boogie_si_record_i32($i49);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, $i47);
    call {:si_unique_call 5659} {:cexpr "__cil_tmp36"} {:si_old_unique_call 531} boogie_si_record_i32($i50);
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i32.i16($i50);
    call {:si_unique_call 5660} {:cexpr "divider"} {:si_old_unique_call 532} boogie_si_record_i16($i51);
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    $i52, $i53 := $i32, $i51;
    goto $bb22;

  $bb12:
    assume $i15 == 1;
    goto corral_source_split_975;

  corral_source_split_975:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i13, 1);
    call {:si_unique_call 5661} {:cexpr "mhz100"} {:si_old_unique_call 505} boogie_si_record_i32($i18);
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    $i19 := $sext.i16.i32($i14);
    call {:si_unique_call 5662} {:cexpr "__cil_tmp17"} {:si_old_unique_call 506} boogie_si_record_i32($i19);
    goto corral_source_split_980;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 64);
    call {:si_unique_call 5663} {:cexpr "__cil_tmp18"} {:si_old_unique_call 507} boogie_si_record_i32($i20);
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5664} {:cexpr "divider"} {:si_old_unique_call 508} boogie_si_record_i16($i21);
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i18, $i21;
    goto corral_source_split_982_dummy;

  corral_source_split_982_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i10 == 1;
    goto corral_source_split_966;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    $i11 := 15938;
    goto $bb9;

  $bb4:
    assume $i8 == 1;
    goto corral_source_split_961;

  corral_source_split_961:
    assume {:verifier.code 0} true;
    $i9 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_939;

  corral_source_split_939:
    assume {:verifier.code 0} true;
    $i6, $i7 := 255, 0;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_pll_408_loop_$bb10"} {:entrypoint} aty_var_to_pll_408_EntryCopy_aty_var_to_pll_408_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32)
{
  var $i4: i32;
  var $i5: i1;
  var $i8: i1;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i16;
  var $i15: i1;
  var $i16: i32;
  var $i17: i16;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i32;
  var $i24: i16;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i16;
  var $i29: i16;
  var $i30: i16;
  var $i31: i32;
  var $i32: i16;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i16;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $i45: i16;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i32;
  var $i50: i32;
  var $i51: i16;
  var $i52: i16;
  var $i53: i16;
  var $i54: i16;
  var $i55: i16;
  var $i56: i32;
  var $i57: i32;
  var $i58: i32;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i16;
  var $i63: i32;
  var $i6: i32;
  var $i7: i16;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i64;
  var $i69: i64;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $p74: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 5620} {:cexpr "aty_var_to_pll_408:arg:vclk_per"} {:si_old_unique_call 496} boogie_si_record_i32($i1);
    call {:si_unique_call 5621} {:cexpr "aty_var_to_pll_408:arg:bpp"} {:si_old_unique_call 497} boogie_si_record_i32($i2);
    goto corral_source_split_935;

  corral_source_split_935:
    assume {:verifier.code 0} true;
    $i4 := $udiv.i32(100000000, $i1);
    call {:si_unique_call 5622} {:cexpr "mhz100"} {:si_old_unique_call 498} boogie_si_record_i32($i4);
    goto corral_source_split_936;

  corral_source_split_936:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i4, 0);
    goto corral_source_split_937;

  corral_source_split_937:
    assume {:verifier.code 0} true;
    assume {:branchcond $i5} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i5 == 1);
    goto corral_source_split_941;

  corral_source_split_941:
    assume {:verifier.code 0} true;
    $i8 := $ult.i32($i4, 8000);
    goto corral_source_split_942;

  corral_source_split_942:
    assume {:verifier.code 0} true;
    assume {:branchcond $i8} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i8 == 1);
    assume {:verifier.code 0} true;
    $i9 := $i4;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_963;

  corral_source_split_963:
    assume {:verifier.code 0} true;
    $i10 := $ugt.i32($i9, 15938);
    goto corral_source_split_964;

  corral_source_split_964:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i10 == 1);
    assume {:verifier.code 0} true;
    $i11 := $i9;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_968;

  corral_source_split_968:
    assume {:verifier.code 0} true;
    $i12 := $shl.i32(8000, 3);
    goto corral_source_split_969;

  corral_source_split_969:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i11, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 5623} $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21 := aty_var_to_pll_408_loop_$bb10($i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21);
    LoopBound_AssertVar := false;
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_971;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i15 := $ult.i32($i13, $i12);
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    $i16, $i17 := $i13, $i14;
    assume {:branchcond $i15} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i15 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_977;

  corral_source_split_977:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i22 := $mul.i32($i16, 4);
    call {:si_unique_call 5624} {:cexpr "temp"} {:si_old_unique_call 509} boogie_si_record_i32($i22);
    goto corral_source_split_984;

  corral_source_split_984:
    assume {:verifier.code 0} true;
    $i23 := $shl.i32(1432, 1);
    call {:si_unique_call 5625} {:cexpr "__cil_tmp19"} {:si_old_unique_call 510} boogie_si_record_i32($i23);
    goto corral_source_split_985;

  corral_source_split_985:
    assume {:verifier.code 0} true;
    $i24 := $trunc.i32.i16($i23);
    call {:si_unique_call 5626} {:cexpr "__cil_tmp20"} {:si_old_unique_call 511} boogie_si_record_i16($i24);
    goto corral_source_split_986;

  corral_source_split_986:
    assume {:verifier.code 0} true;
    $i25 := $sext.i16.i32($i24);
    call {:si_unique_call 5627} {:cexpr "__cil_tmp21"} {:si_old_unique_call 512} boogie_si_record_i32($i25);
    goto corral_source_split_987;

  corral_source_split_987:
    assume {:verifier.code 0} true;
    $i26 := $sub.i32($i22, $i25);
    call {:si_unique_call 5628} {:cexpr "temp"} {:si_old_unique_call 513} boogie_si_record_i32($i26);
    goto corral_source_split_988;

  corral_source_split_988:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i26, $sub.i16(0, 1), $i17, 2;
    goto $bb16;

  $bb16:
    call {:si_unique_call 5629} $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62 := aty_var_to_pll_408_loop_$bb16_PassiveCopy($i16, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i31 := $urem.i32($i27, 1432);
    call {:si_unique_call 5630} {:cexpr "__cil_tmp22"} {:si_old_unique_call 514} boogie_si_record_i32($i31);
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    $i32 := $trunc.i32.i16($i31);
    call {:si_unique_call 5631} {:cexpr "remainder"} {:si_old_unique_call 515} boogie_si_record_i16($i32);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    $i33 := $udiv.i32($i27, 1432);
    call {:si_unique_call 5632} {:cexpr "tempB"} {:si_old_unique_call 516} boogie_si_record_i32($i33);
    goto corral_source_split_994;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    $i34 := $and.i32($i33, 65535);
    call {:si_unique_call 5633} {:cexpr "__cil_tmp23"} {:si_old_unique_call 517} boogie_si_record_i32($i34);
    goto corral_source_split_995;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    $i35 := $ule.i32($i34, 255);
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i35 == 1);
    assume {:verifier.code 0} true;
    $i54, $i55 := $i28, $i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1020;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    $i56 := $add.i32($i27, $i16);
    call {:si_unique_call 5634} {:cexpr "temp"} {:si_old_unique_call 533} boogie_si_record_i32($i56);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    $i57 := $sext.i16.i32($i30);
    call {:si_unique_call 5635} {:cexpr "__cil_tmp37"} {:si_old_unique_call 534} boogie_si_record_i32($i57);
    goto corral_source_split_1022;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i57, 1);
    call {:si_unique_call 5636} {:cexpr "__cil_tmp38"} {:si_old_unique_call 535} boogie_si_record_i32($i58);
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i32.i16($i58);
    call {:si_unique_call 5637} {:cexpr "tempA"} {:si_old_unique_call 536} boogie_si_record_i16($i59);
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    $i60 := $sext.i16.i32($i59);
    call {:si_unique_call 5638} {:cexpr "__cil_tmp39"} {:si_old_unique_call 537} boogie_si_record_i32($i60);
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    $i61 := $sle.i32($i60, 32);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    $i62 := $i55;
    assume {:branchcond $i61} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_1030;

  corral_source_split_1030:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i63 := $sext.i16.i32($i62);
    call {:si_unique_call 5639} {:cexpr "program_bits"} {:si_old_unique_call 538} boogie_si_record_i32($i63);
    assume {:verifier.code 0} true;
    $i6, $i7 := $i63, $i62;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_944;

  corral_source_split_944:
    assume {:verifier.code 0} true;
    $p64 := $bitcast.ref.ref($p3);
    goto corral_source_split_945;

  corral_source_split_945:
    assume {:verifier.code 0} true;
    goto corral_source_split_946;

  corral_source_split_946:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p3);
    call {:si_unique_call 5640} {:cexpr "__cil_tmp41"} {:si_old_unique_call 499} boogie_si_record_i64($i65);
    goto corral_source_split_947;

  corral_source_split_947:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 4);
    call {:si_unique_call 5641} {:cexpr "__cil_tmp42"} {:si_old_unique_call 500} boogie_si_record_i64($i66);
    goto corral_source_split_948;

  corral_source_split_948:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_949;

  corral_source_split_949:
    assume {:verifier.code 0} true;
    goto corral_source_split_950;

  corral_source_split_950:
    assume {:verifier.code 0} true;
    $i68 := $p2i.ref.i64($p3);
    call {:si_unique_call 5642} {:cexpr "__cil_tmp44"} {:si_old_unique_call 501} boogie_si_record_i64($i68);
    goto corral_source_split_951;

  corral_source_split_951:
    assume {:verifier.code 0} true;
    $i69 := $add.i64($i68, 12);
    call {:si_unique_call 5643} {:cexpr "__cil_tmp45"} {:si_old_unique_call 502} boogie_si_record_i64($i69);
    goto corral_source_split_952;

  corral_source_split_952:
    assume {:verifier.code 0} true;
    $i70 := $sext.i16.i32($i7);
    goto corral_source_split_953;

  corral_source_split_953:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i69);
    goto corral_source_split_954;

  corral_source_split_954:
    assume {:verifier.code 0} true;
    goto corral_source_split_955;

  corral_source_split_955:
    assume {:verifier.code 0} true;
    $i72 := $p2i.ref.i64($p3);
    call {:si_unique_call 5644} {:cexpr "__cil_tmp47"} {:si_old_unique_call 503} boogie_si_record_i64($i72);
    goto corral_source_split_956;

  corral_source_split_956:
    assume {:verifier.code 0} true;
    $i73 := $add.i64($i72, 8);
    call {:si_unique_call 5645} {:cexpr "__cil_tmp48"} {:si_old_unique_call 504} boogie_si_record_i64($i73);
    goto corral_source_split_957;

  corral_source_split_957:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i73);
    goto corral_source_split_958;

  corral_source_split_958:
    assume {:verifier.code 0} true;
    goto corral_source_split_959;

  corral_source_split_959:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb24:
    assume $i61 == 1;
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i27, $i28, $i29, $i30 := $i56, $i54, $i55, $i59;
    goto $bb26_dummy;

  $bb26_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb18:
    assume $i35 == 1;
    goto corral_source_split_998;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    $i36 := $zext.i16.i32($i28);
    call {:si_unique_call 5646} {:cexpr "__cil_tmp24"} {:si_old_unique_call 518} boogie_si_record_i32($i36);
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    $i37 := $zext.i16.i32($i32);
    call {:si_unique_call 5647} {:cexpr "__cil_tmp25"} {:si_old_unique_call 519} boogie_si_record_i32($i37);
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    $i38 := $sle.i32($i37, $i36);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    $i52, $i53 := $i28, $i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    $i54, $i55 := $i52, $i53;
    goto $bb23;

  $bb20:
    assume $i38 == 1;
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    $i39 := $sext.i16.i32($i29);
    call {:si_unique_call 5648} {:cexpr "__cil_tmp26"} {:si_old_unique_call 520} boogie_si_record_i32($i39);
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    $i40 := $and.i32($i39, $sub.i32(0, 64));
    call {:si_unique_call 5649} {:cexpr "__cil_tmp27"} {:si_old_unique_call 521} boogie_si_record_i32($i40);
    goto corral_source_split_1005;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    $i41 := $trunc.i32.i16($i40);
    call {:si_unique_call 5650} {:cexpr "divider"} {:si_old_unique_call 522} boogie_si_record_i16($i41);
    goto corral_source_split_1006;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    $i42 := $sext.i16.i32($i30);
    call {:si_unique_call 5651} {:cexpr "__cil_tmp28"} {:si_old_unique_call 523} boogie_si_record_i32($i42);
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    $i43 := $sext.i16.i32($i41);
    call {:si_unique_call 5652} {:cexpr "__cil_tmp29"} {:si_old_unique_call 524} boogie_si_record_i32($i43);
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    $i44 := $or.i32($i43, $i42);
    call {:si_unique_call 5653} {:cexpr "__cil_tmp30"} {:si_old_unique_call 525} boogie_si_record_i32($i44);
    goto corral_source_split_1009;

  corral_source_split_1009:
    assume {:verifier.code 0} true;
    $i45 := $trunc.i32.i16($i44);
    call {:si_unique_call 5654} {:cexpr "divider"} {:si_old_unique_call 526} boogie_si_record_i16($i45);
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    $i46 := $and.i32($i33, 255);
    call {:si_unique_call 5655} {:cexpr "__cil_tmp31"} {:si_old_unique_call 527} boogie_si_record_i32($i46);
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    $i47 := $shl.i32($i46, 8);
    call {:si_unique_call 5656} {:cexpr "__cil_tmp32"} {:si_old_unique_call 528} boogie_si_record_i32($i47);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    $i48 := $sext.i16.i32($i45);
    call {:si_unique_call 5657} {:cexpr "__cil_tmp33"} {:si_old_unique_call 529} boogie_si_record_i32($i48);
    goto corral_source_split_1013;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    $i49 := $and.i32($i48, 255);
    call {:si_unique_call 5658} {:cexpr "__cil_tmp34"} {:si_old_unique_call 530} boogie_si_record_i32($i49);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, $i47);
    call {:si_unique_call 5659} {:cexpr "__cil_tmp36"} {:si_old_unique_call 531} boogie_si_record_i32($i50);
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i32.i16($i50);
    call {:si_unique_call 5660} {:cexpr "divider"} {:si_old_unique_call 532} boogie_si_record_i16($i51);
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    $i52, $i53 := $i32, $i51;
    goto $bb22;

  $bb12:
    assume $i15 == 1;
    goto corral_source_split_975;

  corral_source_split_975:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i18 := $shl.i32($i13, 1);
    call {:si_unique_call 5661} {:cexpr "mhz100"} {:si_old_unique_call 505} boogie_si_record_i32($i18);
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    $i19 := $sext.i16.i32($i14);
    call {:si_unique_call 5662} {:cexpr "__cil_tmp17"} {:si_old_unique_call 506} boogie_si_record_i32($i19);
    goto corral_source_split_980;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    $i20 := $add.i32($i19, 64);
    call {:si_unique_call 5663} {:cexpr "__cil_tmp18"} {:si_old_unique_call 507} boogie_si_record_i32($i20);
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    $i21 := $trunc.i32.i16($i20);
    call {:si_unique_call 5664} {:cexpr "divider"} {:si_old_unique_call 508} boogie_si_record_i16($i21);
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    $i13, $i14 := $i18, $i21;
    goto corral_source_split_982_dummy;

  corral_source_split_982_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i10 == 1;
    goto corral_source_split_966;

  corral_source_split_966:
    assume {:verifier.code 0} true;
    $i11 := 15938;
    goto $bb9;

  $bb4:
    assume $i8 == 1;
    goto corral_source_split_961;

  corral_source_split_961:
    assume {:verifier.code 0} true;
    $i9 := 8000;
    goto $bb6;

  $bb1:
    assume $i5 == 1;
    goto corral_source_split_939;

  corral_source_split_939:
    assume {:verifier.code 0} true;
    $i6, $i7 := 255, 0;
    goto $bb3;
}



implementation {:LB_Mapping "aty_set_pll_ct_loop_$bb30"} {:entrypoint} aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb30($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i8;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i8;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i8;
  var $i55: i8;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $i68: i8;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i90: i8;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i8;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i8;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $i105: i8;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i8;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i8;
  var $i114: i32;
  var $i115: i1;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $i121: i1;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i1;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i8;
  var $i133: i32;
  var $i134: i1;
  var $i135: i8;
  var $i128: i8;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i1;
  var $i147: i64;
  var $i148: i64;
  var $i149: i1;
  var $i150: i32;
  var $i151: i32;
  var $i152: i8;
  var $i153: i64;
  var $i154: i64;
  var $i155: i1;
  var $i156: i32;
  var $i157: i32;
  var $i158: i8;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i64;
  var $i163: i1;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5768} {:cexpr "__cil_tmp19"} {:si_old_unique_call 642} boogie_si_record_i64($i2);
    goto corral_source_split_1181;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5769} {:cexpr "__cil_tmp20"} {:si_old_unique_call 643} boogie_si_record_i64($i3);
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_1183;

  corral_source_split_1183:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_1184;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_1185;

  corral_source_split_1185:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p6);
    call {:si_unique_call 5770} {:cexpr "__cil_tmp22"} {:si_old_unique_call 644} boogie_si_record_i64($i7);
    goto corral_source_split_1186;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 1136);
    call {:si_unique_call 5771} {:cexpr "__cil_tmp23"} {:si_old_unique_call 645} boogie_si_record_i64($i8);
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_1188;

  corral_source_split_1188:
    assume {:verifier.code 0} true;
    havoc $i10;
    call {:si_unique_call 5772} {:cexpr "__cil_tmp24"} {:si_old_unique_call 646} boogie_si_record_i64($i10);
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    $i11 := $ne.i64($i10, 0);
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    $i16 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1199;

  corral_source_split_1199:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p6);
    call {:si_unique_call 5773} {:cexpr "__cil_tmp30"} {:si_old_unique_call 653} boogie_si_record_i64($i17);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 856);
    call {:si_unique_call 5774} {:cexpr "__cil_tmp31"} {:si_old_unique_call 654} boogie_si_record_i64($i18);
    goto corral_source_split_1201;

  corral_source_split_1201:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    havoc $i20;
    call {:si_unique_call 5775} {:cexpr "__cil_tmp32"} {:si_old_unique_call 655} boogie_si_record_i64($i20);
    goto corral_source_split_1203;

  corral_source_split_1203:
    assume {:verifier.code 0} true;
    $i21 := $or.i64($i20, 64);
    call {:si_unique_call 5776} {:cexpr "__cil_tmp33"} {:si_old_unique_call 656} boogie_si_record_i64($i21);
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    $i22 := $trunc.i64.i8($i21);
    call {:si_unique_call 5777} {:cexpr "__cil_tmp34"} {:si_old_unique_call 657} boogie_si_record_i8($i22);
    goto corral_source_split_1205;

  corral_source_split_1205:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5778} {:si_old_unique_call 658} aty_st_8(144, $i22, $p6);
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5779} {:si_old_unique_call 659} $i23 := aty_ld_le32(28, $p6);
    call {:si_unique_call 5780} {:cexpr "crtc_gen_cntl"} {:si_old_unique_call 660} boogie_si_record_i32($i23);
    goto corral_source_split_1207;

  corral_source_split_1207:
    assume {:verifier.code 0} true;
    $i24 := $and.i32($i23, 16777216);
    call {:si_unique_call 5781} {:cexpr "__cil_tmp37"} {:si_old_unique_call 661} boogie_si_record_i32($i24);
    goto corral_source_split_1208;

  corral_source_split_1208:
    assume {:verifier.code 0} true;
    $i25 := $ne.i32($i24, 0);
    goto corral_source_split_1209;

  corral_source_split_1209:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i25 == 1);
    goto corral_source_split_1211;

  corral_source_split_1211:
    assume {:verifier.code 0} true;
    $i26 := $or.i32($i23, 16777216);
    call {:si_unique_call 5782} {:cexpr "__cil_tmp38"} {:si_old_unique_call 662} boogie_si_record_i32($i26);
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5783} {:si_old_unique_call 663} aty_st_le32(28, $i26, $p6);
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p1);
    call {:si_unique_call 5784} {:cexpr "__cil_tmp41"} {:si_old_unique_call 664} boogie_si_record_i64($i27);
    goto corral_source_split_1215;

  corral_source_split_1215:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 5);
    call {:si_unique_call 5785} {:cexpr "__cil_tmp42"} {:si_old_unique_call 665} boogie_si_record_i64($i28);
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5786} {:cexpr "__cil_tmp43"} {:si_old_unique_call 666} boogie_si_record_i8($i30);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5787} {:si_old_unique_call 667} aty_st_pll_ct(5, $i30, $p6);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p6);
    call {:si_unique_call 5788} {:cexpr "__cil_tmp46"} {:si_old_unique_call 668} boogie_si_record_i64($i31);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    $i32 := $add.i64($i31, 856);
    call {:si_unique_call 5789} {:cexpr "__cil_tmp47"} {:si_old_unique_call 669} boogie_si_record_i64($i32);
    goto corral_source_split_1221;

  corral_source_split_1221:
    assume {:verifier.code 0} true;
    $p33 := $i2p.i64.ref($i32);
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    havoc $i34;
    call {:si_unique_call 5790} {:cexpr "__cil_tmp48"} {:si_old_unique_call 670} boogie_si_record_i64($i34);
    goto corral_source_split_1223;

  corral_source_split_1223:
    assume {:verifier.code 0} true;
    $i35 := $shl.i64($i34, 1);
    call {:si_unique_call 5791} {:cexpr "__cil_tmp49"} {:si_old_unique_call 671} boogie_si_record_i64($i35);
    goto corral_source_split_1224;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    $i36 := $trunc.i64.i8($i35);
    call {:si_unique_call 5792} {:cexpr "tmp2"} {:si_old_unique_call 672} boogie_si_record_i8($i36);
    goto corral_source_split_1225;

  corral_source_split_1225:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5793} {:si_old_unique_call 673} $i37 := aty_ld_pll_ct(6, $p6);
    call {:si_unique_call 5794} {:cexpr "tmp___7"} {:si_old_unique_call 674} boogie_si_record_i8($i37);
    goto corral_source_split_1226;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    $i38 := $zext.i8.i32($i36);
    call {:si_unique_call 5795} {:cexpr "__cil_tmp51"} {:si_old_unique_call 675} boogie_si_record_i32($i38);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $i39 := $shl.i32(3, $i38);
    call {:si_unique_call 5796} {:cexpr "__cil_tmp52"} {:si_old_unique_call 676} boogie_si_record_i32($i39);
    goto corral_source_split_1228;

  corral_source_split_1228:
    assume {:verifier.code 0} true;
    $i40 := $xor.i32($i39, $sub.i32(0, 1));
    call {:si_unique_call 5797} {:cexpr "__cil_tmp53"} {:si_old_unique_call 677} boogie_si_record_i32($i40);
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i37);
    call {:si_unique_call 5798} {:cexpr "__cil_tmp54"} {:si_old_unique_call 678} boogie_si_record_i32($i41);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i41, $i40);
    call {:si_unique_call 5799} {:cexpr "__cil_tmp55"} {:si_old_unique_call 679} boogie_si_record_i32($i42);
    goto corral_source_split_1231;

  corral_source_split_1231:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5800} {:cexpr "tmp___7"} {:si_old_unique_call 680} boogie_si_record_i8($i43);
    goto corral_source_split_1232;

  corral_source_split_1232:
    assume {:verifier.code 0} true;
    $i44 := $zext.i8.i32($i36);
    call {:si_unique_call 5801} {:cexpr "__cil_tmp56"} {:si_old_unique_call 681} boogie_si_record_i32($i44);
    goto corral_source_split_1233;

  corral_source_split_1233:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p1);
    call {:si_unique_call 5802} {:cexpr "__cil_tmp58"} {:si_old_unique_call 682} boogie_si_record_i64($i45);
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 6);
    call {:si_unique_call 5803} {:cexpr "__cil_tmp59"} {:si_old_unique_call 683} boogie_si_record_i64($i46);
    goto corral_source_split_1235;

  corral_source_split_1235:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 5804} {:cexpr "__cil_tmp60"} {:si_old_unique_call 684} boogie_si_record_i8($i48);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    $i49 := $zext.i8.i32($i48);
    call {:si_unique_call 5805} {:cexpr "__cil_tmp61"} {:si_old_unique_call 685} boogie_si_record_i32($i49);
    goto corral_source_split_1238;

  corral_source_split_1238:
    assume {:verifier.code 0} true;
    $i50 := $and.i32($i49, 3);
    call {:si_unique_call 5806} {:cexpr "__cil_tmp62"} {:si_old_unique_call 686} boogie_si_record_i32($i50);
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $i51 := $shl.i32($i50, $i44);
    call {:si_unique_call 5807} {:cexpr "__cil_tmp63"} {:si_old_unique_call 687} boogie_si_record_i32($i51);
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i52 := $zext.i8.i32($i43);
    call {:si_unique_call 5808} {:cexpr "__cil_tmp64"} {:si_old_unique_call 688} boogie_si_record_i32($i52);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    $i53 := $or.i32($i52, $i51);
    call {:si_unique_call 5809} {:cexpr "__cil_tmp65"} {:si_old_unique_call 689} boogie_si_record_i32($i53);
    goto corral_source_split_1242;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    $i54 := $trunc.i32.i8($i53);
    call {:si_unique_call 5810} {:cexpr "tmp___7"} {:si_old_unique_call 690} boogie_si_record_i8($i54);
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5811} {:si_old_unique_call 691} aty_st_pll_ct(6, $i54, $p6);
    goto corral_source_split_1244;

  corral_source_split_1244:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5812} {:si_old_unique_call 692} $i55 := aty_ld_pll_ct(11, $p6);
    call {:si_unique_call 5813} {:cexpr "tmp___7"} {:si_old_unique_call 693} boogie_si_record_i8($i55);
    goto corral_source_split_1245;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    $i56 := $p2i.ref.i64($p6);
    call {:si_unique_call 5814} {:cexpr "__cil_tmp68"} {:si_old_unique_call 694} boogie_si_record_i64($i56);
    goto corral_source_split_1246;

  corral_source_split_1246:
    assume {:verifier.code 0} true;
    $i57 := $add.i64($i56, 856);
    call {:si_unique_call 5815} {:cexpr "__cil_tmp69"} {:si_old_unique_call 695} boogie_si_record_i64($i57);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    $p58 := $i2p.i64.ref($i57);
    goto corral_source_split_1248;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    havoc $i59;
    call {:si_unique_call 5816} {:cexpr "__cil_tmp70"} {:si_old_unique_call 696} boogie_si_record_i64($i59);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    $i60 := $trunc.i64.i32($i59);
    goto corral_source_split_1250;

  corral_source_split_1250:
    assume {:verifier.code 0} true;
    $i61 := $shl.i32(16, $i60);
    call {:si_unique_call 5817} {:cexpr "__cil_tmp71"} {:si_old_unique_call 697} boogie_si_record_i32($i61);
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    $i62 := $xor.i32($i61, $sub.i32(0, 1));
    call {:si_unique_call 5818} {:cexpr "__cil_tmp72"} {:si_old_unique_call 698} boogie_si_record_i32($i62);
    goto corral_source_split_1252;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    $i63 := $zext.i8.i32($i55);
    call {:si_unique_call 5819} {:cexpr "__cil_tmp73"} {:si_old_unique_call 699} boogie_si_record_i32($i63);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    $i64 := $and.i32($i63, $i62);
    call {:si_unique_call 5820} {:cexpr "__cil_tmp74"} {:si_old_unique_call 700} boogie_si_record_i32($i64);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    $i65 := $trunc.i32.i8($i64);
    call {:si_unique_call 5821} {:cexpr "tmp___7"} {:si_old_unique_call 701} boogie_si_record_i8($i65);
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    $i66 := $zext.i8.i32($i65);
    call {:si_unique_call 5822} {:cexpr "__cil_tmp75"} {:si_old_unique_call 702} boogie_si_record_i32($i66);
    goto corral_source_split_1256;

  corral_source_split_1256:
    assume {:verifier.code 0} true;
    $i67 := $and.i32($i66, 240);
    call {:si_unique_call 5823} {:cexpr "__cil_tmp76"} {:si_old_unique_call 703} boogie_si_record_i32($i67);
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $i68 := $trunc.i32.i8($i67);
    call {:si_unique_call 5824} {:cexpr "tmp___7"} {:si_old_unique_call 704} boogie_si_record_i8($i68);
    goto corral_source_split_1258;

  corral_source_split_1258:
    assume {:verifier.code 0} true;
    $i69 := $p2i.ref.i64($p1);
    call {:si_unique_call 5825} {:cexpr "__cil_tmp78"} {:si_old_unique_call 705} boogie_si_record_i64($i69);
    goto corral_source_split_1259;

  corral_source_split_1259:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, 8);
    call {:si_unique_call 5826} {:cexpr "__cil_tmp79"} {:si_old_unique_call 706} boogie_si_record_i64($i70);
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i70);
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    havoc $i72;
    call {:si_unique_call 5827} {:cexpr "__cil_tmp80"} {:si_old_unique_call 707} boogie_si_record_i8($i72);
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i72);
    call {:si_unique_call 5828} {:cexpr "__cil_tmp81"} {:si_old_unique_call 708} boogie_si_record_i32($i73);
    goto corral_source_split_1263;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    $i74 := $zext.i8.i32($i68);
    call {:si_unique_call 5829} {:cexpr "__cil_tmp82"} {:si_old_unique_call 709} boogie_si_record_i32($i74);
    goto corral_source_split_1264;

  corral_source_split_1264:
    assume {:verifier.code 0} true;
    $i75 := $or.i32($i74, $i73);
    call {:si_unique_call 5830} {:cexpr "__cil_tmp83"} {:si_old_unique_call 710} boogie_si_record_i32($i75);
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    $i76 := $trunc.i32.i8($i75);
    call {:si_unique_call 5831} {:cexpr "tmp___7"} {:si_old_unique_call 711} boogie_si_record_i8($i76);
    goto corral_source_split_1266;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5832} {:si_old_unique_call 712} aty_st_pll_ct(11, $i76, $p6);
    goto corral_source_split_1267;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p6);
    call {:si_unique_call 5833} {:cexpr "__cil_tmp85"} {:si_old_unique_call 713} boogie_si_record_i64($i77);
    goto corral_source_split_1268;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 856);
    call {:si_unique_call 5834} {:cexpr "__cil_tmp86"} {:si_old_unique_call 714} boogie_si_record_i64($i78);
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_1270;

  corral_source_split_1270:
    assume {:verifier.code 0} true;
    havoc $i80;
    call {:si_unique_call 5835} {:cexpr "__cil_tmp87"} {:si_old_unique_call 715} boogie_si_record_i64($i80);
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $i81 := $add.i64(7, $i80);
    call {:si_unique_call 5836} {:cexpr "__cil_tmp88"} {:si_old_unique_call 716} boogie_si_record_i64($i81);
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $i82 := $trunc.i64.i8($i81);
    call {:si_unique_call 5837} {:cexpr "tmp___7"} {:si_old_unique_call 717} boogie_si_record_i8($i82);
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 5838} {:cexpr "__cil_tmp89"} {:si_old_unique_call 718} boogie_si_record_i32($i83);
    goto corral_source_split_1274;

  corral_source_split_1274:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p1);
    call {:si_unique_call 5839} {:cexpr "__cil_tmp91"} {:si_old_unique_call 719} boogie_si_record_i64($i84);
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 7);
    call {:si_unique_call 5840} {:cexpr "__cil_tmp92"} {:si_old_unique_call 720} boogie_si_record_i64($i85);
    goto corral_source_split_1276;

  corral_source_split_1276:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    havoc $i87;
    call {:si_unique_call 5841} {:cexpr "__cil_tmp93"} {:si_old_unique_call 721} boogie_si_record_i8($i87);
    goto corral_source_split_1278;

  corral_source_split_1278:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 5842} {:cexpr "__cil_tmp94"} {:si_old_unique_call 722} boogie_si_record_i32($i88);
    goto corral_source_split_1279;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    $i89 := $and.i32($i88, 255);
    call {:si_unique_call 5843} {:cexpr "__cil_tmp95"} {:si_old_unique_call 723} boogie_si_record_i32($i89);
    goto corral_source_split_1280;

  corral_source_split_1280:
    assume {:verifier.code 0} true;
    $i90 := $trunc.i32.i8($i89);
    call {:si_unique_call 5844} {:cexpr "__cil_tmp96"} {:si_old_unique_call 724} boogie_si_record_i8($i90);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5845} {:si_old_unique_call 725} aty_st_pll_ct($i83, $i90, $p6);
    goto corral_source_split_1282;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p1);
    call {:si_unique_call 5846} {:cexpr "__cil_tmp99"} {:si_old_unique_call 726} boogie_si_record_i64($i91);
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 1);
    call {:si_unique_call 5847} {:cexpr "__cil_tmp100"} {:si_old_unique_call 727} boogie_si_record_i64($i92);
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_1285;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    havoc $i94;
    call {:si_unique_call 5848} {:cexpr "__cil_tmp101"} {:si_old_unique_call 728} boogie_si_record_i8($i94);
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i95 := $zext.i8.i32($i94);
    call {:si_unique_call 5849} {:cexpr "__cil_tmp102"} {:si_old_unique_call 729} boogie_si_record_i32($i95);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, $sub.i32(0, 4));
    call {:si_unique_call 5850} {:cexpr "__cil_tmp103"} {:si_old_unique_call 730} boogie_si_record_i32($i96);
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    $i97 := $or.i32($i96, 4);
    call {:si_unique_call 5851} {:cexpr "__cil_tmp104"} {:si_old_unique_call 731} boogie_si_record_i32($i97);
    goto corral_source_split_1289;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    $i98 := $trunc.i32.i8($i97);
    call {:si_unique_call 5852} {:cexpr "__cil_tmp105"} {:si_old_unique_call 732} boogie_si_record_i8($i98);
    goto corral_source_split_1290;

  corral_source_split_1290:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5853} {:si_old_unique_call 733} aty_st_pll_ct(3, $i98, $p6);
    goto corral_source_split_1291;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p1);
    call {:si_unique_call 5854} {:cexpr "__cil_tmp108"} {:si_old_unique_call 734} boogie_si_record_i64($i99);
    goto corral_source_split_1292;

  corral_source_split_1292:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 5);
    call {:si_unique_call 5855} {:cexpr "__cil_tmp109"} {:si_old_unique_call 735} boogie_si_record_i64($i100);
    goto corral_source_split_1293;

  corral_source_split_1293:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 5856} {:cexpr "__cil_tmp110"} {:si_old_unique_call 736} boogie_si_record_i8($i102);
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $i103 := $zext.i8.i32($i102);
    call {:si_unique_call 5857} {:cexpr "__cil_tmp111"} {:si_old_unique_call 737} boogie_si_record_i32($i103);
    goto corral_source_split_1296;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    $i104 := $and.i32($i103, $sub.i32(0, 5));
    call {:si_unique_call 5858} {:cexpr "__cil_tmp112"} {:si_old_unique_call 738} boogie_si_record_i32($i104);
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $i105 := $trunc.i32.i8($i104);
    call {:si_unique_call 5859} {:cexpr "__cil_tmp113"} {:si_old_unique_call 739} boogie_si_record_i8($i105);
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5860} {:si_old_unique_call 740} aty_st_pll_ct(5, $i105, $p6);
    goto corral_source_split_1299;

  corral_source_split_1299:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5861} {:si_old_unique_call 741} ___udelay(21475000);
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p1);
    call {:si_unique_call 5862} {:cexpr "__cil_tmp116"} {:si_old_unique_call 742} boogie_si_record_i64($i106);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 1);
    call {:si_unique_call 5863} {:cexpr "__cil_tmp117"} {:si_old_unique_call 743} boogie_si_record_i64($i107);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    havoc $i109;
    call {:si_unique_call 5864} {:cexpr "__cil_tmp118"} {:si_old_unique_call 744} boogie_si_record_i8($i109);
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5865} {:si_old_unique_call 745} aty_st_pll_ct(3, $i109, $p6);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p1);
    call {:si_unique_call 5866} {:cexpr "__cil_tmp122"} {:si_old_unique_call 746} boogie_si_record_i64($i110);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 5);
    call {:si_unique_call 5867} {:cexpr "__cil_tmp123"} {:si_old_unique_call 747} boogie_si_record_i64($i111);
    goto corral_source_split_1307;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_1308;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    havoc $i113;
    call {:si_unique_call 5868} {:cexpr "__cil_tmp124"} {:si_old_unique_call 748} boogie_si_record_i8($i113);
    goto corral_source_split_1309;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5869} {:si_old_unique_call 749} aty_st_pll_ct(5, $i113, $p6);
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5870} {:si_old_unique_call 750} ___udelay(4295000);
    goto corral_source_split_1311;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    $i114 := $and.i32($i23, 16777216);
    call {:si_unique_call 5871} {:cexpr "__cil_tmp127"} {:si_old_unique_call 751} boogie_si_record_i32($i114);
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 0);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i115 == 1);
    goto corral_source_split_1315;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5872} {:si_old_unique_call 752} aty_st_le32(28, $i23, $p6);
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i116 := $p2i.ref.i64($p6);
    call {:si_unique_call 5873} {:cexpr "__cil_tmp129"} {:si_old_unique_call 753} boogie_si_record_i64($i116);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    $i117 := $add.i64($i116, 1044);
    call {:si_unique_call 5874} {:cexpr "__cil_tmp130"} {:si_old_unique_call 754} boogie_si_record_i64($i117);
    goto corral_source_split_1319;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    $p118 := $i2p.i64.ref($i117);
    goto corral_source_split_1320;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    havoc $i119;
    call {:si_unique_call 5875} {:cexpr "__cil_tmp131"} {:si_old_unique_call 755} boogie_si_record_i32($i119);
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i120 := $and.i32($i119, 4);
    goto corral_source_split_1322;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    $i121 := $ne.i32($i120, 0);
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    assume {:branchcond $i121} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i121 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i159 := $p2i.ref.i64($p6);
    call {:si_unique_call 5876} {:cexpr "__cil_tmp163"} {:si_old_unique_call 788} boogie_si_record_i64($i159);
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i160 := $add.i64($i159, 1136);
    call {:si_unique_call 5877} {:cexpr "__cil_tmp164"} {:si_old_unique_call 789} boogie_si_record_i64($i160);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    $p161 := $i2p.i64.ref($i160);
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    havoc $i162;
    call {:si_unique_call 5878} {:cexpr "__cil_tmp165"} {:si_old_unique_call 790} boogie_si_record_i64($i162);
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $i163 := $ne.i64($i162, 0);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i163 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb37:
    assume $i163 == 1;
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5879} {:si_old_unique_call 791} aty_st_lcd(1, $i16, $p6);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb10:
    assume $i121 == 1;
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p6);
    call {:si_unique_call 5880} {:cexpr "__cil_tmp132"} {:si_old_unique_call 756} boogie_si_record_i64($i122);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 1044);
    call {:si_unique_call 5881} {:cexpr "__cil_tmp133"} {:si_old_unique_call 757} boogie_si_record_i64($i123);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    havoc $i125;
    call {:si_unique_call 5882} {:cexpr "__cil_tmp134"} {:si_old_unique_call 758} boogie_si_record_i32($i125);
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $i126 := $and.i32($i125, 524288);
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $i127 := $ne.i32($i126, 0);
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    assume {:branchcond $i127} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i127 == 1);
    goto corral_source_split_1335;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p6);
    call {:si_unique_call 5883} {:cexpr "__cil_tmp135"} {:si_old_unique_call 759} boogie_si_record_i64($i129);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 1065);
    call {:si_unique_call 5884} {:cexpr "__cil_tmp136"} {:si_old_unique_call 760} boogie_si_record_i64($i130);
    goto corral_source_split_1337;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_1338;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 5885} {:cexpr "__cil_tmp137"} {:si_old_unique_call 761} boogie_si_record_i8($i132);
    goto corral_source_split_1339;

  corral_source_split_1339:
    assume {:verifier.code 0} true;
    $i133 := $zext.i8.i32($i132);
    call {:si_unique_call 5886} {:cexpr "__cil_tmp138"} {:si_old_unique_call 762} boogie_si_record_i32($i133);
    goto corral_source_split_1340;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    $i134 := $sge.i32($i133, 4);
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    assume {:branchcond $i134} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 96);
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i128 := $i135;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5887} {:si_old_unique_call 763} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5888} {:si_old_unique_call 764} aty_st_pll_ct(13, 27, $p6);
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $i136 := $p2i.ref.i64($p1);
    call {:si_unique_call 5889} {:cexpr "__cil_tmp143"} {:si_old_unique_call 765} boogie_si_record_i64($i136);
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    $i137 := $add.i64($i136, 12);
    call {:si_unique_call 5890} {:cexpr "__cil_tmp144"} {:si_old_unique_call 766} boogie_si_record_i64($i137);
    goto corral_source_split_1347;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $p138 := $i2p.i64.ref($i137);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    havoc $i139;
    call {:si_unique_call 5891} {:cexpr "__cil_tmp145"} {:si_old_unique_call 767} boogie_si_record_i32($i139);
    goto corral_source_split_1349;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5892} {:si_old_unique_call 768} aty_st_le32(32, $i139, $p6);
    goto corral_source_split_1350;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p1);
    call {:si_unique_call 5893} {:cexpr "__cil_tmp149"} {:si_old_unique_call 769} boogie_si_record_i64($i140);
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, 16);
    call {:si_unique_call 5894} {:cexpr "__cil_tmp150"} {:si_old_unique_call 770} boogie_si_record_i64($i141);
    goto corral_source_split_1352;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    havoc $i143;
    call {:si_unique_call 5895} {:cexpr "__cil_tmp151"} {:si_old_unique_call 771} boogie_si_record_i32($i143);
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5896} {:si_old_unique_call 772} aty_st_le32(36, $i143, $p6);
    goto corral_source_split_1355;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    $i144 := 10;
    goto $bb18;

  $bb18:
    call {:si_unique_call 5897} $i144, $i145, $i146 := aty_set_pll_ct_loop_$bb18_PassiveCopy($i144, $i145, $i146);
    goto $bb18_last;

  $bb18_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i145 := $sub.i64($i144, 1);
    call {:si_unique_call 5898} {:cexpr "__ms___1"} {:si_old_unique_call 773} boogie_si_record_i64($i145);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    $i146 := $ne.i64($i144, 0);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    assume {:branchcond $i146} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i146 == 1);
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5899} {:si_old_unique_call 775} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $i147 := 10;
    goto $bb24;

  $bb24:
    call {:si_unique_call 5900} $i147, $i148, $i149 := aty_set_pll_ct_loop_$bb24_PassiveCopy($i147, $i148, $i149);
    goto $bb24_last;

  $bb24_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i148 := $sub.i64($i147, 1);
    call {:si_unique_call 5901} {:cexpr "__ms___2"} {:si_old_unique_call 776} boogie_si_record_i64($i148);
    goto corral_source_split_1374;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    $i149 := $ne.i64($i147, 0);
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    assume {:branchcond $i149} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i149 == 1);
    goto corral_source_split_1379;

  corral_source_split_1379:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i150 := $zext.i8.i32($i128);
    call {:si_unique_call 5902} {:cexpr "__cil_tmp155"} {:si_old_unique_call 778} boogie_si_record_i32($i150);
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $i151 := $or.i32($i150, 64);
    call {:si_unique_call 5903} {:cexpr "__cil_tmp156"} {:si_old_unique_call 779} boogie_si_record_i32($i151);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $i152 := $trunc.i32.i8($i151);
    call {:si_unique_call 5904} {:cexpr "__cil_tmp157"} {:si_old_unique_call 780} boogie_si_record_i8($i152);
    goto corral_source_split_1385;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5905} {:si_old_unique_call 781} aty_st_pll_ct(12, $i152, $p6);
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $i153 := 10;
    goto $bb30;

  $bb30:
    call {:si_unique_call 5906} $i153, $i154, $i155 := aty_set_pll_ct_loop_$bb30($i153, $i154, $i155);
    LoopBound_AssertVar := false;
    goto $bb30_last;

  $bb30_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i154 := $sub.i64($i153, 1);
    call {:si_unique_call 5907} {:cexpr "__ms___3"} {:si_old_unique_call 782} boogie_si_record_i64($i154);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $i155 := $ne.i64($i153, 0);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    assume {:branchcond $i155} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i155 == 1);
    goto corral_source_split_1395;

  corral_source_split_1395:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $i156 := $zext.i8.i32($i128);
    call {:si_unique_call 5908} {:cexpr "__cil_tmp159"} {:si_old_unique_call 784} boogie_si_record_i32($i156);
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i157 := $and.i32($i156, $sub.i32(0, 65));
    call {:si_unique_call 5909} {:cexpr "__cil_tmp160"} {:si_old_unique_call 785} boogie_si_record_i32($i157);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $i158 := $trunc.i32.i8($i157);
    call {:si_unique_call 5910} {:cexpr "__cil_tmp161"} {:si_old_unique_call 786} boogie_si_record_i8($i158);
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5911} {:si_old_unique_call 787} aty_st_pll_ct(12, $i158, $p6);
    goto corral_source_split_1402;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb32:
    assume $i155 == 1;
    goto corral_source_split_1393;

  corral_source_split_1393:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5912} {:si_old_unique_call 783} ___udelay(4295000);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    $i153 := $i154;
    goto corral_source_split_1397_dummy;

  corral_source_split_1397_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb26:
    assume $i149 == 1;
    goto corral_source_split_1377;

  corral_source_split_1377:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5913} {:si_old_unique_call 777} ___udelay(4295000);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    $i147 := $i148;
    goto corral_source_split_1381_dummy;

  corral_source_split_1381_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb20:
    assume $i146 == 1;
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5914} {:si_old_unique_call 774} ___udelay(4295000);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i144 := $i145;
    goto corral_source_split_1368_dummy;

  corral_source_split_1368_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i134 == 1;
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 90);
    goto $bb17;

  $bb12:
    assume $i127 == 1;
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    $i128 := $sub.i8(0, 128);
    goto $bb14;

  $bb7:
    assume $i115 == 1;
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb4:
    assume $i25 == 1;
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i11 == 1;
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5915} {:si_old_unique_call 647} $i12 := aty_ld_lcd(1, $p6);
    call {:si_unique_call 5916} {:cexpr "lcd_gen_cntrl"} {:si_old_unique_call 648} boogie_si_record_i32($i12);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    $i13 := $zext.i32.i64($i12);
    call {:si_unique_call 5917} {:cexpr "__cil_tmp26"} {:si_old_unique_call 649} boogie_si_record_i64($i13);
    goto corral_source_split_1194;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    $i14 := $and.i64($i13, $sub.i64(0, 3));
    call {:si_unique_call 5918} {:cexpr "__cil_tmp27"} {:si_old_unique_call 650} boogie_si_record_i64($i14);
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $i15 := $trunc.i64.i32($i14);
    call {:si_unique_call 5919} {:cexpr "__cil_tmp28"} {:si_old_unique_call 651} boogie_si_record_i32($i15);
    goto corral_source_split_1196;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5920} {:si_old_unique_call 652} aty_st_lcd(1, $i15, $p6);
    goto corral_source_split_1197;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    $i16 := $i12;
    goto $bb3;
}



implementation {:LB_Mapping "aty_set_pll_ct_loop_$bb24"} {:entrypoint} aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb24($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i8;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i8;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i8;
  var $i55: i8;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $i68: i8;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i90: i8;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i8;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i8;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $i105: i8;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i8;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i8;
  var $i114: i32;
  var $i115: i1;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $i121: i1;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i1;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i8;
  var $i133: i32;
  var $i134: i1;
  var $i135: i8;
  var $i128: i8;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i1;
  var $i147: i64;
  var $i148: i64;
  var $i149: i1;
  var $i150: i32;
  var $i151: i32;
  var $i152: i8;
  var $i153: i64;
  var $i154: i64;
  var $i155: i1;
  var $i156: i32;
  var $i157: i32;
  var $i158: i8;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i64;
  var $i163: i1;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5768} {:cexpr "__cil_tmp19"} {:si_old_unique_call 642} boogie_si_record_i64($i2);
    goto corral_source_split_1181;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5769} {:cexpr "__cil_tmp20"} {:si_old_unique_call 643} boogie_si_record_i64($i3);
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_1183;

  corral_source_split_1183:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_1184;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_1185;

  corral_source_split_1185:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p6);
    call {:si_unique_call 5770} {:cexpr "__cil_tmp22"} {:si_old_unique_call 644} boogie_si_record_i64($i7);
    goto corral_source_split_1186;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 1136);
    call {:si_unique_call 5771} {:cexpr "__cil_tmp23"} {:si_old_unique_call 645} boogie_si_record_i64($i8);
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_1188;

  corral_source_split_1188:
    assume {:verifier.code 0} true;
    havoc $i10;
    call {:si_unique_call 5772} {:cexpr "__cil_tmp24"} {:si_old_unique_call 646} boogie_si_record_i64($i10);
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    $i11 := $ne.i64($i10, 0);
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    $i16 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1199;

  corral_source_split_1199:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p6);
    call {:si_unique_call 5773} {:cexpr "__cil_tmp30"} {:si_old_unique_call 653} boogie_si_record_i64($i17);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 856);
    call {:si_unique_call 5774} {:cexpr "__cil_tmp31"} {:si_old_unique_call 654} boogie_si_record_i64($i18);
    goto corral_source_split_1201;

  corral_source_split_1201:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    havoc $i20;
    call {:si_unique_call 5775} {:cexpr "__cil_tmp32"} {:si_old_unique_call 655} boogie_si_record_i64($i20);
    goto corral_source_split_1203;

  corral_source_split_1203:
    assume {:verifier.code 0} true;
    $i21 := $or.i64($i20, 64);
    call {:si_unique_call 5776} {:cexpr "__cil_tmp33"} {:si_old_unique_call 656} boogie_si_record_i64($i21);
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    $i22 := $trunc.i64.i8($i21);
    call {:si_unique_call 5777} {:cexpr "__cil_tmp34"} {:si_old_unique_call 657} boogie_si_record_i8($i22);
    goto corral_source_split_1205;

  corral_source_split_1205:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5778} {:si_old_unique_call 658} aty_st_8(144, $i22, $p6);
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5779} {:si_old_unique_call 659} $i23 := aty_ld_le32(28, $p6);
    call {:si_unique_call 5780} {:cexpr "crtc_gen_cntl"} {:si_old_unique_call 660} boogie_si_record_i32($i23);
    goto corral_source_split_1207;

  corral_source_split_1207:
    assume {:verifier.code 0} true;
    $i24 := $and.i32($i23, 16777216);
    call {:si_unique_call 5781} {:cexpr "__cil_tmp37"} {:si_old_unique_call 661} boogie_si_record_i32($i24);
    goto corral_source_split_1208;

  corral_source_split_1208:
    assume {:verifier.code 0} true;
    $i25 := $ne.i32($i24, 0);
    goto corral_source_split_1209;

  corral_source_split_1209:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i25 == 1);
    goto corral_source_split_1211;

  corral_source_split_1211:
    assume {:verifier.code 0} true;
    $i26 := $or.i32($i23, 16777216);
    call {:si_unique_call 5782} {:cexpr "__cil_tmp38"} {:si_old_unique_call 662} boogie_si_record_i32($i26);
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5783} {:si_old_unique_call 663} aty_st_le32(28, $i26, $p6);
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p1);
    call {:si_unique_call 5784} {:cexpr "__cil_tmp41"} {:si_old_unique_call 664} boogie_si_record_i64($i27);
    goto corral_source_split_1215;

  corral_source_split_1215:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 5);
    call {:si_unique_call 5785} {:cexpr "__cil_tmp42"} {:si_old_unique_call 665} boogie_si_record_i64($i28);
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5786} {:cexpr "__cil_tmp43"} {:si_old_unique_call 666} boogie_si_record_i8($i30);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5787} {:si_old_unique_call 667} aty_st_pll_ct(5, $i30, $p6);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p6);
    call {:si_unique_call 5788} {:cexpr "__cil_tmp46"} {:si_old_unique_call 668} boogie_si_record_i64($i31);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    $i32 := $add.i64($i31, 856);
    call {:si_unique_call 5789} {:cexpr "__cil_tmp47"} {:si_old_unique_call 669} boogie_si_record_i64($i32);
    goto corral_source_split_1221;

  corral_source_split_1221:
    assume {:verifier.code 0} true;
    $p33 := $i2p.i64.ref($i32);
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    havoc $i34;
    call {:si_unique_call 5790} {:cexpr "__cil_tmp48"} {:si_old_unique_call 670} boogie_si_record_i64($i34);
    goto corral_source_split_1223;

  corral_source_split_1223:
    assume {:verifier.code 0} true;
    $i35 := $shl.i64($i34, 1);
    call {:si_unique_call 5791} {:cexpr "__cil_tmp49"} {:si_old_unique_call 671} boogie_si_record_i64($i35);
    goto corral_source_split_1224;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    $i36 := $trunc.i64.i8($i35);
    call {:si_unique_call 5792} {:cexpr "tmp2"} {:si_old_unique_call 672} boogie_si_record_i8($i36);
    goto corral_source_split_1225;

  corral_source_split_1225:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5793} {:si_old_unique_call 673} $i37 := aty_ld_pll_ct(6, $p6);
    call {:si_unique_call 5794} {:cexpr "tmp___7"} {:si_old_unique_call 674} boogie_si_record_i8($i37);
    goto corral_source_split_1226;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    $i38 := $zext.i8.i32($i36);
    call {:si_unique_call 5795} {:cexpr "__cil_tmp51"} {:si_old_unique_call 675} boogie_si_record_i32($i38);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $i39 := $shl.i32(3, $i38);
    call {:si_unique_call 5796} {:cexpr "__cil_tmp52"} {:si_old_unique_call 676} boogie_si_record_i32($i39);
    goto corral_source_split_1228;

  corral_source_split_1228:
    assume {:verifier.code 0} true;
    $i40 := $xor.i32($i39, $sub.i32(0, 1));
    call {:si_unique_call 5797} {:cexpr "__cil_tmp53"} {:si_old_unique_call 677} boogie_si_record_i32($i40);
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i37);
    call {:si_unique_call 5798} {:cexpr "__cil_tmp54"} {:si_old_unique_call 678} boogie_si_record_i32($i41);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i41, $i40);
    call {:si_unique_call 5799} {:cexpr "__cil_tmp55"} {:si_old_unique_call 679} boogie_si_record_i32($i42);
    goto corral_source_split_1231;

  corral_source_split_1231:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5800} {:cexpr "tmp___7"} {:si_old_unique_call 680} boogie_si_record_i8($i43);
    goto corral_source_split_1232;

  corral_source_split_1232:
    assume {:verifier.code 0} true;
    $i44 := $zext.i8.i32($i36);
    call {:si_unique_call 5801} {:cexpr "__cil_tmp56"} {:si_old_unique_call 681} boogie_si_record_i32($i44);
    goto corral_source_split_1233;

  corral_source_split_1233:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p1);
    call {:si_unique_call 5802} {:cexpr "__cil_tmp58"} {:si_old_unique_call 682} boogie_si_record_i64($i45);
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 6);
    call {:si_unique_call 5803} {:cexpr "__cil_tmp59"} {:si_old_unique_call 683} boogie_si_record_i64($i46);
    goto corral_source_split_1235;

  corral_source_split_1235:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 5804} {:cexpr "__cil_tmp60"} {:si_old_unique_call 684} boogie_si_record_i8($i48);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    $i49 := $zext.i8.i32($i48);
    call {:si_unique_call 5805} {:cexpr "__cil_tmp61"} {:si_old_unique_call 685} boogie_si_record_i32($i49);
    goto corral_source_split_1238;

  corral_source_split_1238:
    assume {:verifier.code 0} true;
    $i50 := $and.i32($i49, 3);
    call {:si_unique_call 5806} {:cexpr "__cil_tmp62"} {:si_old_unique_call 686} boogie_si_record_i32($i50);
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $i51 := $shl.i32($i50, $i44);
    call {:si_unique_call 5807} {:cexpr "__cil_tmp63"} {:si_old_unique_call 687} boogie_si_record_i32($i51);
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i52 := $zext.i8.i32($i43);
    call {:si_unique_call 5808} {:cexpr "__cil_tmp64"} {:si_old_unique_call 688} boogie_si_record_i32($i52);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    $i53 := $or.i32($i52, $i51);
    call {:si_unique_call 5809} {:cexpr "__cil_tmp65"} {:si_old_unique_call 689} boogie_si_record_i32($i53);
    goto corral_source_split_1242;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    $i54 := $trunc.i32.i8($i53);
    call {:si_unique_call 5810} {:cexpr "tmp___7"} {:si_old_unique_call 690} boogie_si_record_i8($i54);
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5811} {:si_old_unique_call 691} aty_st_pll_ct(6, $i54, $p6);
    goto corral_source_split_1244;

  corral_source_split_1244:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5812} {:si_old_unique_call 692} $i55 := aty_ld_pll_ct(11, $p6);
    call {:si_unique_call 5813} {:cexpr "tmp___7"} {:si_old_unique_call 693} boogie_si_record_i8($i55);
    goto corral_source_split_1245;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    $i56 := $p2i.ref.i64($p6);
    call {:si_unique_call 5814} {:cexpr "__cil_tmp68"} {:si_old_unique_call 694} boogie_si_record_i64($i56);
    goto corral_source_split_1246;

  corral_source_split_1246:
    assume {:verifier.code 0} true;
    $i57 := $add.i64($i56, 856);
    call {:si_unique_call 5815} {:cexpr "__cil_tmp69"} {:si_old_unique_call 695} boogie_si_record_i64($i57);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    $p58 := $i2p.i64.ref($i57);
    goto corral_source_split_1248;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    havoc $i59;
    call {:si_unique_call 5816} {:cexpr "__cil_tmp70"} {:si_old_unique_call 696} boogie_si_record_i64($i59);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    $i60 := $trunc.i64.i32($i59);
    goto corral_source_split_1250;

  corral_source_split_1250:
    assume {:verifier.code 0} true;
    $i61 := $shl.i32(16, $i60);
    call {:si_unique_call 5817} {:cexpr "__cil_tmp71"} {:si_old_unique_call 697} boogie_si_record_i32($i61);
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    $i62 := $xor.i32($i61, $sub.i32(0, 1));
    call {:si_unique_call 5818} {:cexpr "__cil_tmp72"} {:si_old_unique_call 698} boogie_si_record_i32($i62);
    goto corral_source_split_1252;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    $i63 := $zext.i8.i32($i55);
    call {:si_unique_call 5819} {:cexpr "__cil_tmp73"} {:si_old_unique_call 699} boogie_si_record_i32($i63);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    $i64 := $and.i32($i63, $i62);
    call {:si_unique_call 5820} {:cexpr "__cil_tmp74"} {:si_old_unique_call 700} boogie_si_record_i32($i64);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    $i65 := $trunc.i32.i8($i64);
    call {:si_unique_call 5821} {:cexpr "tmp___7"} {:si_old_unique_call 701} boogie_si_record_i8($i65);
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    $i66 := $zext.i8.i32($i65);
    call {:si_unique_call 5822} {:cexpr "__cil_tmp75"} {:si_old_unique_call 702} boogie_si_record_i32($i66);
    goto corral_source_split_1256;

  corral_source_split_1256:
    assume {:verifier.code 0} true;
    $i67 := $and.i32($i66, 240);
    call {:si_unique_call 5823} {:cexpr "__cil_tmp76"} {:si_old_unique_call 703} boogie_si_record_i32($i67);
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $i68 := $trunc.i32.i8($i67);
    call {:si_unique_call 5824} {:cexpr "tmp___7"} {:si_old_unique_call 704} boogie_si_record_i8($i68);
    goto corral_source_split_1258;

  corral_source_split_1258:
    assume {:verifier.code 0} true;
    $i69 := $p2i.ref.i64($p1);
    call {:si_unique_call 5825} {:cexpr "__cil_tmp78"} {:si_old_unique_call 705} boogie_si_record_i64($i69);
    goto corral_source_split_1259;

  corral_source_split_1259:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, 8);
    call {:si_unique_call 5826} {:cexpr "__cil_tmp79"} {:si_old_unique_call 706} boogie_si_record_i64($i70);
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i70);
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    havoc $i72;
    call {:si_unique_call 5827} {:cexpr "__cil_tmp80"} {:si_old_unique_call 707} boogie_si_record_i8($i72);
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i72);
    call {:si_unique_call 5828} {:cexpr "__cil_tmp81"} {:si_old_unique_call 708} boogie_si_record_i32($i73);
    goto corral_source_split_1263;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    $i74 := $zext.i8.i32($i68);
    call {:si_unique_call 5829} {:cexpr "__cil_tmp82"} {:si_old_unique_call 709} boogie_si_record_i32($i74);
    goto corral_source_split_1264;

  corral_source_split_1264:
    assume {:verifier.code 0} true;
    $i75 := $or.i32($i74, $i73);
    call {:si_unique_call 5830} {:cexpr "__cil_tmp83"} {:si_old_unique_call 710} boogie_si_record_i32($i75);
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    $i76 := $trunc.i32.i8($i75);
    call {:si_unique_call 5831} {:cexpr "tmp___7"} {:si_old_unique_call 711} boogie_si_record_i8($i76);
    goto corral_source_split_1266;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5832} {:si_old_unique_call 712} aty_st_pll_ct(11, $i76, $p6);
    goto corral_source_split_1267;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p6);
    call {:si_unique_call 5833} {:cexpr "__cil_tmp85"} {:si_old_unique_call 713} boogie_si_record_i64($i77);
    goto corral_source_split_1268;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 856);
    call {:si_unique_call 5834} {:cexpr "__cil_tmp86"} {:si_old_unique_call 714} boogie_si_record_i64($i78);
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_1270;

  corral_source_split_1270:
    assume {:verifier.code 0} true;
    havoc $i80;
    call {:si_unique_call 5835} {:cexpr "__cil_tmp87"} {:si_old_unique_call 715} boogie_si_record_i64($i80);
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $i81 := $add.i64(7, $i80);
    call {:si_unique_call 5836} {:cexpr "__cil_tmp88"} {:si_old_unique_call 716} boogie_si_record_i64($i81);
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $i82 := $trunc.i64.i8($i81);
    call {:si_unique_call 5837} {:cexpr "tmp___7"} {:si_old_unique_call 717} boogie_si_record_i8($i82);
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 5838} {:cexpr "__cil_tmp89"} {:si_old_unique_call 718} boogie_si_record_i32($i83);
    goto corral_source_split_1274;

  corral_source_split_1274:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p1);
    call {:si_unique_call 5839} {:cexpr "__cil_tmp91"} {:si_old_unique_call 719} boogie_si_record_i64($i84);
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 7);
    call {:si_unique_call 5840} {:cexpr "__cil_tmp92"} {:si_old_unique_call 720} boogie_si_record_i64($i85);
    goto corral_source_split_1276;

  corral_source_split_1276:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    havoc $i87;
    call {:si_unique_call 5841} {:cexpr "__cil_tmp93"} {:si_old_unique_call 721} boogie_si_record_i8($i87);
    goto corral_source_split_1278;

  corral_source_split_1278:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 5842} {:cexpr "__cil_tmp94"} {:si_old_unique_call 722} boogie_si_record_i32($i88);
    goto corral_source_split_1279;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    $i89 := $and.i32($i88, 255);
    call {:si_unique_call 5843} {:cexpr "__cil_tmp95"} {:si_old_unique_call 723} boogie_si_record_i32($i89);
    goto corral_source_split_1280;

  corral_source_split_1280:
    assume {:verifier.code 0} true;
    $i90 := $trunc.i32.i8($i89);
    call {:si_unique_call 5844} {:cexpr "__cil_tmp96"} {:si_old_unique_call 724} boogie_si_record_i8($i90);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5845} {:si_old_unique_call 725} aty_st_pll_ct($i83, $i90, $p6);
    goto corral_source_split_1282;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p1);
    call {:si_unique_call 5846} {:cexpr "__cil_tmp99"} {:si_old_unique_call 726} boogie_si_record_i64($i91);
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 1);
    call {:si_unique_call 5847} {:cexpr "__cil_tmp100"} {:si_old_unique_call 727} boogie_si_record_i64($i92);
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_1285;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    havoc $i94;
    call {:si_unique_call 5848} {:cexpr "__cil_tmp101"} {:si_old_unique_call 728} boogie_si_record_i8($i94);
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i95 := $zext.i8.i32($i94);
    call {:si_unique_call 5849} {:cexpr "__cil_tmp102"} {:si_old_unique_call 729} boogie_si_record_i32($i95);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, $sub.i32(0, 4));
    call {:si_unique_call 5850} {:cexpr "__cil_tmp103"} {:si_old_unique_call 730} boogie_si_record_i32($i96);
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    $i97 := $or.i32($i96, 4);
    call {:si_unique_call 5851} {:cexpr "__cil_tmp104"} {:si_old_unique_call 731} boogie_si_record_i32($i97);
    goto corral_source_split_1289;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    $i98 := $trunc.i32.i8($i97);
    call {:si_unique_call 5852} {:cexpr "__cil_tmp105"} {:si_old_unique_call 732} boogie_si_record_i8($i98);
    goto corral_source_split_1290;

  corral_source_split_1290:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5853} {:si_old_unique_call 733} aty_st_pll_ct(3, $i98, $p6);
    goto corral_source_split_1291;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p1);
    call {:si_unique_call 5854} {:cexpr "__cil_tmp108"} {:si_old_unique_call 734} boogie_si_record_i64($i99);
    goto corral_source_split_1292;

  corral_source_split_1292:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 5);
    call {:si_unique_call 5855} {:cexpr "__cil_tmp109"} {:si_old_unique_call 735} boogie_si_record_i64($i100);
    goto corral_source_split_1293;

  corral_source_split_1293:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 5856} {:cexpr "__cil_tmp110"} {:si_old_unique_call 736} boogie_si_record_i8($i102);
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $i103 := $zext.i8.i32($i102);
    call {:si_unique_call 5857} {:cexpr "__cil_tmp111"} {:si_old_unique_call 737} boogie_si_record_i32($i103);
    goto corral_source_split_1296;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    $i104 := $and.i32($i103, $sub.i32(0, 5));
    call {:si_unique_call 5858} {:cexpr "__cil_tmp112"} {:si_old_unique_call 738} boogie_si_record_i32($i104);
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $i105 := $trunc.i32.i8($i104);
    call {:si_unique_call 5859} {:cexpr "__cil_tmp113"} {:si_old_unique_call 739} boogie_si_record_i8($i105);
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5860} {:si_old_unique_call 740} aty_st_pll_ct(5, $i105, $p6);
    goto corral_source_split_1299;

  corral_source_split_1299:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5861} {:si_old_unique_call 741} ___udelay(21475000);
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p1);
    call {:si_unique_call 5862} {:cexpr "__cil_tmp116"} {:si_old_unique_call 742} boogie_si_record_i64($i106);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 1);
    call {:si_unique_call 5863} {:cexpr "__cil_tmp117"} {:si_old_unique_call 743} boogie_si_record_i64($i107);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    havoc $i109;
    call {:si_unique_call 5864} {:cexpr "__cil_tmp118"} {:si_old_unique_call 744} boogie_si_record_i8($i109);
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5865} {:si_old_unique_call 745} aty_st_pll_ct(3, $i109, $p6);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p1);
    call {:si_unique_call 5866} {:cexpr "__cil_tmp122"} {:si_old_unique_call 746} boogie_si_record_i64($i110);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 5);
    call {:si_unique_call 5867} {:cexpr "__cil_tmp123"} {:si_old_unique_call 747} boogie_si_record_i64($i111);
    goto corral_source_split_1307;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_1308;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    havoc $i113;
    call {:si_unique_call 5868} {:cexpr "__cil_tmp124"} {:si_old_unique_call 748} boogie_si_record_i8($i113);
    goto corral_source_split_1309;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5869} {:si_old_unique_call 749} aty_st_pll_ct(5, $i113, $p6);
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5870} {:si_old_unique_call 750} ___udelay(4295000);
    goto corral_source_split_1311;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    $i114 := $and.i32($i23, 16777216);
    call {:si_unique_call 5871} {:cexpr "__cil_tmp127"} {:si_old_unique_call 751} boogie_si_record_i32($i114);
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 0);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i115 == 1);
    goto corral_source_split_1315;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5872} {:si_old_unique_call 752} aty_st_le32(28, $i23, $p6);
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i116 := $p2i.ref.i64($p6);
    call {:si_unique_call 5873} {:cexpr "__cil_tmp129"} {:si_old_unique_call 753} boogie_si_record_i64($i116);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    $i117 := $add.i64($i116, 1044);
    call {:si_unique_call 5874} {:cexpr "__cil_tmp130"} {:si_old_unique_call 754} boogie_si_record_i64($i117);
    goto corral_source_split_1319;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    $p118 := $i2p.i64.ref($i117);
    goto corral_source_split_1320;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    havoc $i119;
    call {:si_unique_call 5875} {:cexpr "__cil_tmp131"} {:si_old_unique_call 755} boogie_si_record_i32($i119);
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i120 := $and.i32($i119, 4);
    goto corral_source_split_1322;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    $i121 := $ne.i32($i120, 0);
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    assume {:branchcond $i121} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i121 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i159 := $p2i.ref.i64($p6);
    call {:si_unique_call 5876} {:cexpr "__cil_tmp163"} {:si_old_unique_call 788} boogie_si_record_i64($i159);
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i160 := $add.i64($i159, 1136);
    call {:si_unique_call 5877} {:cexpr "__cil_tmp164"} {:si_old_unique_call 789} boogie_si_record_i64($i160);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    $p161 := $i2p.i64.ref($i160);
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    havoc $i162;
    call {:si_unique_call 5878} {:cexpr "__cil_tmp165"} {:si_old_unique_call 790} boogie_si_record_i64($i162);
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $i163 := $ne.i64($i162, 0);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i163 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb37:
    assume $i163 == 1;
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5879} {:si_old_unique_call 791} aty_st_lcd(1, $i16, $p6);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb10:
    assume $i121 == 1;
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p6);
    call {:si_unique_call 5880} {:cexpr "__cil_tmp132"} {:si_old_unique_call 756} boogie_si_record_i64($i122);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 1044);
    call {:si_unique_call 5881} {:cexpr "__cil_tmp133"} {:si_old_unique_call 757} boogie_si_record_i64($i123);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    havoc $i125;
    call {:si_unique_call 5882} {:cexpr "__cil_tmp134"} {:si_old_unique_call 758} boogie_si_record_i32($i125);
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $i126 := $and.i32($i125, 524288);
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $i127 := $ne.i32($i126, 0);
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    assume {:branchcond $i127} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i127 == 1);
    goto corral_source_split_1335;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p6);
    call {:si_unique_call 5883} {:cexpr "__cil_tmp135"} {:si_old_unique_call 759} boogie_si_record_i64($i129);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 1065);
    call {:si_unique_call 5884} {:cexpr "__cil_tmp136"} {:si_old_unique_call 760} boogie_si_record_i64($i130);
    goto corral_source_split_1337;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_1338;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 5885} {:cexpr "__cil_tmp137"} {:si_old_unique_call 761} boogie_si_record_i8($i132);
    goto corral_source_split_1339;

  corral_source_split_1339:
    assume {:verifier.code 0} true;
    $i133 := $zext.i8.i32($i132);
    call {:si_unique_call 5886} {:cexpr "__cil_tmp138"} {:si_old_unique_call 762} boogie_si_record_i32($i133);
    goto corral_source_split_1340;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    $i134 := $sge.i32($i133, 4);
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    assume {:branchcond $i134} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 96);
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i128 := $i135;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5887} {:si_old_unique_call 763} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5888} {:si_old_unique_call 764} aty_st_pll_ct(13, 27, $p6);
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $i136 := $p2i.ref.i64($p1);
    call {:si_unique_call 5889} {:cexpr "__cil_tmp143"} {:si_old_unique_call 765} boogie_si_record_i64($i136);
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    $i137 := $add.i64($i136, 12);
    call {:si_unique_call 5890} {:cexpr "__cil_tmp144"} {:si_old_unique_call 766} boogie_si_record_i64($i137);
    goto corral_source_split_1347;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $p138 := $i2p.i64.ref($i137);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    havoc $i139;
    call {:si_unique_call 5891} {:cexpr "__cil_tmp145"} {:si_old_unique_call 767} boogie_si_record_i32($i139);
    goto corral_source_split_1349;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5892} {:si_old_unique_call 768} aty_st_le32(32, $i139, $p6);
    goto corral_source_split_1350;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p1);
    call {:si_unique_call 5893} {:cexpr "__cil_tmp149"} {:si_old_unique_call 769} boogie_si_record_i64($i140);
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, 16);
    call {:si_unique_call 5894} {:cexpr "__cil_tmp150"} {:si_old_unique_call 770} boogie_si_record_i64($i141);
    goto corral_source_split_1352;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    havoc $i143;
    call {:si_unique_call 5895} {:cexpr "__cil_tmp151"} {:si_old_unique_call 771} boogie_si_record_i32($i143);
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5896} {:si_old_unique_call 772} aty_st_le32(36, $i143, $p6);
    goto corral_source_split_1355;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    $i144 := 10;
    goto $bb18;

  $bb18:
    call {:si_unique_call 5897} $i144, $i145, $i146 := aty_set_pll_ct_loop_$bb18_PassiveCopy($i144, $i145, $i146);
    goto $bb18_last;

  $bb18_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i145 := $sub.i64($i144, 1);
    call {:si_unique_call 5898} {:cexpr "__ms___1"} {:si_old_unique_call 773} boogie_si_record_i64($i145);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    $i146 := $ne.i64($i144, 0);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    assume {:branchcond $i146} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i146 == 1);
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5899} {:si_old_unique_call 775} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $i147 := 10;
    goto $bb24;

  $bb24:
    call {:si_unique_call 5900} $i147, $i148, $i149 := aty_set_pll_ct_loop_$bb24($i147, $i148, $i149);
    LoopBound_AssertVar := false;
    goto $bb24_last;

  $bb24_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i148 := $sub.i64($i147, 1);
    call {:si_unique_call 5901} {:cexpr "__ms___2"} {:si_old_unique_call 776} boogie_si_record_i64($i148);
    goto corral_source_split_1374;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    $i149 := $ne.i64($i147, 0);
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    assume {:branchcond $i149} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i149 == 1);
    goto corral_source_split_1379;

  corral_source_split_1379:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i150 := $zext.i8.i32($i128);
    call {:si_unique_call 5902} {:cexpr "__cil_tmp155"} {:si_old_unique_call 778} boogie_si_record_i32($i150);
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $i151 := $or.i32($i150, 64);
    call {:si_unique_call 5903} {:cexpr "__cil_tmp156"} {:si_old_unique_call 779} boogie_si_record_i32($i151);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $i152 := $trunc.i32.i8($i151);
    call {:si_unique_call 5904} {:cexpr "__cil_tmp157"} {:si_old_unique_call 780} boogie_si_record_i8($i152);
    goto corral_source_split_1385;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5905} {:si_old_unique_call 781} aty_st_pll_ct(12, $i152, $p6);
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $i153 := 10;
    goto $bb30;

  $bb30:
    call {:si_unique_call 5906} $i153, $i154, $i155 := aty_set_pll_ct_loop_$bb30_PassiveCopy($i153, $i154, $i155);
    goto $bb30_last;

  $bb30_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i154 := $sub.i64($i153, 1);
    call {:si_unique_call 5907} {:cexpr "__ms___3"} {:si_old_unique_call 782} boogie_si_record_i64($i154);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $i155 := $ne.i64($i153, 0);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    assume {:branchcond $i155} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i155 == 1);
    goto corral_source_split_1395;

  corral_source_split_1395:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $i156 := $zext.i8.i32($i128);
    call {:si_unique_call 5908} {:cexpr "__cil_tmp159"} {:si_old_unique_call 784} boogie_si_record_i32($i156);
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i157 := $and.i32($i156, $sub.i32(0, 65));
    call {:si_unique_call 5909} {:cexpr "__cil_tmp160"} {:si_old_unique_call 785} boogie_si_record_i32($i157);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $i158 := $trunc.i32.i8($i157);
    call {:si_unique_call 5910} {:cexpr "__cil_tmp161"} {:si_old_unique_call 786} boogie_si_record_i8($i158);
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5911} {:si_old_unique_call 787} aty_st_pll_ct(12, $i158, $p6);
    goto corral_source_split_1402;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb32:
    assume $i155 == 1;
    goto corral_source_split_1393;

  corral_source_split_1393:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5912} {:si_old_unique_call 783} ___udelay(4295000);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    $i153 := $i154;
    goto corral_source_split_1397_dummy;

  corral_source_split_1397_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb26:
    assume $i149 == 1;
    goto corral_source_split_1377;

  corral_source_split_1377:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5913} {:si_old_unique_call 777} ___udelay(4295000);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    $i147 := $i148;
    goto corral_source_split_1381_dummy;

  corral_source_split_1381_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb20:
    assume $i146 == 1;
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5914} {:si_old_unique_call 774} ___udelay(4295000);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i144 := $i145;
    goto corral_source_split_1368_dummy;

  corral_source_split_1368_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i134 == 1;
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 90);
    goto $bb17;

  $bb12:
    assume $i127 == 1;
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    $i128 := $sub.i8(0, 128);
    goto $bb14;

  $bb7:
    assume $i115 == 1;
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb4:
    assume $i25 == 1;
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i11 == 1;
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5915} {:si_old_unique_call 647} $i12 := aty_ld_lcd(1, $p6);
    call {:si_unique_call 5916} {:cexpr "lcd_gen_cntrl"} {:si_old_unique_call 648} boogie_si_record_i32($i12);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    $i13 := $zext.i32.i64($i12);
    call {:si_unique_call 5917} {:cexpr "__cil_tmp26"} {:si_old_unique_call 649} boogie_si_record_i64($i13);
    goto corral_source_split_1194;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    $i14 := $and.i64($i13, $sub.i64(0, 3));
    call {:si_unique_call 5918} {:cexpr "__cil_tmp27"} {:si_old_unique_call 650} boogie_si_record_i64($i14);
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $i15 := $trunc.i64.i32($i14);
    call {:si_unique_call 5919} {:cexpr "__cil_tmp28"} {:si_old_unique_call 651} boogie_si_record_i32($i15);
    goto corral_source_split_1196;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5920} {:si_old_unique_call 652} aty_st_lcd(1, $i15, $p6);
    goto corral_source_split_1197;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    $i16 := $i12;
    goto $bb3;
}



implementation {:LB_Mapping "aty_set_pll_ct_loop_$bb18"} {:entrypoint} aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb18($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i32;
  var $i16: i32;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i64;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i8;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $i36: i8;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i32;
  var $i52: i32;
  var $i53: i32;
  var $i54: i8;
  var $i55: i8;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i32;
  var $i64: i32;
  var $i65: i8;
  var $i66: i32;
  var $i67: i32;
  var $i68: i8;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i8;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i64;
  var $i81: i64;
  var $i82: i8;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i90: i8;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i8;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i8;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $i105: i8;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i8;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i8;
  var $i114: i32;
  var $i115: i1;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i32;
  var $i120: i32;
  var $i121: i1;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i1;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i8;
  var $i133: i32;
  var $i134: i1;
  var $i135: i8;
  var $i128: i8;
  var $i136: i64;
  var $i137: i64;
  var $p138: ref;
  var $i139: i32;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $i146: i1;
  var $i147: i64;
  var $i148: i64;
  var $i149: i1;
  var $i150: i32;
  var $i151: i32;
  var $i152: i8;
  var $i153: i64;
  var $i154: i64;
  var $i155: i1;
  var $i156: i32;
  var $i157: i32;
  var $i158: i8;
  var $i159: i64;
  var $i160: i64;
  var $p161: ref;
  var $i162: i64;
  var $i163: i1;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1180;

  corral_source_split_1180:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 5768} {:cexpr "__cil_tmp19"} {:si_old_unique_call 642} boogie_si_record_i64($i2);
    goto corral_source_split_1181;

  corral_source_split_1181:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 5769} {:cexpr "__cil_tmp20"} {:si_old_unique_call 643} boogie_si_record_i64($i3);
    goto corral_source_split_1182;

  corral_source_split_1182:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_1183;

  corral_source_split_1183:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_1184;

  corral_source_split_1184:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_1185;

  corral_source_split_1185:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p6);
    call {:si_unique_call 5770} {:cexpr "__cil_tmp22"} {:si_old_unique_call 644} boogie_si_record_i64($i7);
    goto corral_source_split_1186;

  corral_source_split_1186:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 1136);
    call {:si_unique_call 5771} {:cexpr "__cil_tmp23"} {:si_old_unique_call 645} boogie_si_record_i64($i8);
    goto corral_source_split_1187;

  corral_source_split_1187:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_1188;

  corral_source_split_1188:
    assume {:verifier.code 0} true;
    havoc $i10;
    call {:si_unique_call 5772} {:cexpr "__cil_tmp24"} {:si_old_unique_call 646} boogie_si_record_i64($i10);
    goto corral_source_split_1189;

  corral_source_split_1189:
    assume {:verifier.code 0} true;
    $i11 := $ne.i64($i10, 0);
    goto corral_source_split_1190;

  corral_source_split_1190:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    $i16 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_1199;

  corral_source_split_1199:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p6);
    call {:si_unique_call 5773} {:cexpr "__cil_tmp30"} {:si_old_unique_call 653} boogie_si_record_i64($i17);
    goto corral_source_split_1200;

  corral_source_split_1200:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 856);
    call {:si_unique_call 5774} {:cexpr "__cil_tmp31"} {:si_old_unique_call 654} boogie_si_record_i64($i18);
    goto corral_source_split_1201;

  corral_source_split_1201:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_1202;

  corral_source_split_1202:
    assume {:verifier.code 0} true;
    havoc $i20;
    call {:si_unique_call 5775} {:cexpr "__cil_tmp32"} {:si_old_unique_call 655} boogie_si_record_i64($i20);
    goto corral_source_split_1203;

  corral_source_split_1203:
    assume {:verifier.code 0} true;
    $i21 := $or.i64($i20, 64);
    call {:si_unique_call 5776} {:cexpr "__cil_tmp33"} {:si_old_unique_call 656} boogie_si_record_i64($i21);
    goto corral_source_split_1204;

  corral_source_split_1204:
    assume {:verifier.code 0} true;
    $i22 := $trunc.i64.i8($i21);
    call {:si_unique_call 5777} {:cexpr "__cil_tmp34"} {:si_old_unique_call 657} boogie_si_record_i8($i22);
    goto corral_source_split_1205;

  corral_source_split_1205:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5778} {:si_old_unique_call 658} aty_st_8(144, $i22, $p6);
    goto corral_source_split_1206;

  corral_source_split_1206:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5779} {:si_old_unique_call 659} $i23 := aty_ld_le32(28, $p6);
    call {:si_unique_call 5780} {:cexpr "crtc_gen_cntl"} {:si_old_unique_call 660} boogie_si_record_i32($i23);
    goto corral_source_split_1207;

  corral_source_split_1207:
    assume {:verifier.code 0} true;
    $i24 := $and.i32($i23, 16777216);
    call {:si_unique_call 5781} {:cexpr "__cil_tmp37"} {:si_old_unique_call 661} boogie_si_record_i32($i24);
    goto corral_source_split_1208;

  corral_source_split_1208:
    assume {:verifier.code 0} true;
    $i25 := $ne.i32($i24, 0);
    goto corral_source_split_1209;

  corral_source_split_1209:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i25 == 1);
    goto corral_source_split_1211;

  corral_source_split_1211:
    assume {:verifier.code 0} true;
    $i26 := $or.i32($i23, 16777216);
    call {:si_unique_call 5782} {:cexpr "__cil_tmp38"} {:si_old_unique_call 662} boogie_si_record_i32($i26);
    goto corral_source_split_1212;

  corral_source_split_1212:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5783} {:si_old_unique_call 663} aty_st_le32(28, $i26, $p6);
    goto corral_source_split_1213;

  corral_source_split_1213:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p1);
    call {:si_unique_call 5784} {:cexpr "__cil_tmp41"} {:si_old_unique_call 664} boogie_si_record_i64($i27);
    goto corral_source_split_1215;

  corral_source_split_1215:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 5);
    call {:si_unique_call 5785} {:cexpr "__cil_tmp42"} {:si_old_unique_call 665} boogie_si_record_i64($i28);
    goto corral_source_split_1216;

  corral_source_split_1216:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_1217;

  corral_source_split_1217:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 5786} {:cexpr "__cil_tmp43"} {:si_old_unique_call 666} boogie_si_record_i8($i30);
    goto corral_source_split_1218;

  corral_source_split_1218:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5787} {:si_old_unique_call 667} aty_st_pll_ct(5, $i30, $p6);
    goto corral_source_split_1219;

  corral_source_split_1219:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p6);
    call {:si_unique_call 5788} {:cexpr "__cil_tmp46"} {:si_old_unique_call 668} boogie_si_record_i64($i31);
    goto corral_source_split_1220;

  corral_source_split_1220:
    assume {:verifier.code 0} true;
    $i32 := $add.i64($i31, 856);
    call {:si_unique_call 5789} {:cexpr "__cil_tmp47"} {:si_old_unique_call 669} boogie_si_record_i64($i32);
    goto corral_source_split_1221;

  corral_source_split_1221:
    assume {:verifier.code 0} true;
    $p33 := $i2p.i64.ref($i32);
    goto corral_source_split_1222;

  corral_source_split_1222:
    assume {:verifier.code 0} true;
    havoc $i34;
    call {:si_unique_call 5790} {:cexpr "__cil_tmp48"} {:si_old_unique_call 670} boogie_si_record_i64($i34);
    goto corral_source_split_1223;

  corral_source_split_1223:
    assume {:verifier.code 0} true;
    $i35 := $shl.i64($i34, 1);
    call {:si_unique_call 5791} {:cexpr "__cil_tmp49"} {:si_old_unique_call 671} boogie_si_record_i64($i35);
    goto corral_source_split_1224;

  corral_source_split_1224:
    assume {:verifier.code 0} true;
    $i36 := $trunc.i64.i8($i35);
    call {:si_unique_call 5792} {:cexpr "tmp2"} {:si_old_unique_call 672} boogie_si_record_i8($i36);
    goto corral_source_split_1225;

  corral_source_split_1225:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5793} {:si_old_unique_call 673} $i37 := aty_ld_pll_ct(6, $p6);
    call {:si_unique_call 5794} {:cexpr "tmp___7"} {:si_old_unique_call 674} boogie_si_record_i8($i37);
    goto corral_source_split_1226;

  corral_source_split_1226:
    assume {:verifier.code 0} true;
    $i38 := $zext.i8.i32($i36);
    call {:si_unique_call 5795} {:cexpr "__cil_tmp51"} {:si_old_unique_call 675} boogie_si_record_i32($i38);
    goto corral_source_split_1227;

  corral_source_split_1227:
    assume {:verifier.code 0} true;
    $i39 := $shl.i32(3, $i38);
    call {:si_unique_call 5796} {:cexpr "__cil_tmp52"} {:si_old_unique_call 676} boogie_si_record_i32($i39);
    goto corral_source_split_1228;

  corral_source_split_1228:
    assume {:verifier.code 0} true;
    $i40 := $xor.i32($i39, $sub.i32(0, 1));
    call {:si_unique_call 5797} {:cexpr "__cil_tmp53"} {:si_old_unique_call 677} boogie_si_record_i32($i40);
    goto corral_source_split_1229;

  corral_source_split_1229:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i37);
    call {:si_unique_call 5798} {:cexpr "__cil_tmp54"} {:si_old_unique_call 678} boogie_si_record_i32($i41);
    goto corral_source_split_1230;

  corral_source_split_1230:
    assume {:verifier.code 0} true;
    $i42 := $and.i32($i41, $i40);
    call {:si_unique_call 5799} {:cexpr "__cil_tmp55"} {:si_old_unique_call 679} boogie_si_record_i32($i42);
    goto corral_source_split_1231;

  corral_source_split_1231:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 5800} {:cexpr "tmp___7"} {:si_old_unique_call 680} boogie_si_record_i8($i43);
    goto corral_source_split_1232;

  corral_source_split_1232:
    assume {:verifier.code 0} true;
    $i44 := $zext.i8.i32($i36);
    call {:si_unique_call 5801} {:cexpr "__cil_tmp56"} {:si_old_unique_call 681} boogie_si_record_i32($i44);
    goto corral_source_split_1233;

  corral_source_split_1233:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p1);
    call {:si_unique_call 5802} {:cexpr "__cil_tmp58"} {:si_old_unique_call 682} boogie_si_record_i64($i45);
    goto corral_source_split_1234;

  corral_source_split_1234:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 6);
    call {:si_unique_call 5803} {:cexpr "__cil_tmp59"} {:si_old_unique_call 683} boogie_si_record_i64($i46);
    goto corral_source_split_1235;

  corral_source_split_1235:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_1236;

  corral_source_split_1236:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 5804} {:cexpr "__cil_tmp60"} {:si_old_unique_call 684} boogie_si_record_i8($i48);
    goto corral_source_split_1237;

  corral_source_split_1237:
    assume {:verifier.code 0} true;
    $i49 := $zext.i8.i32($i48);
    call {:si_unique_call 5805} {:cexpr "__cil_tmp61"} {:si_old_unique_call 685} boogie_si_record_i32($i49);
    goto corral_source_split_1238;

  corral_source_split_1238:
    assume {:verifier.code 0} true;
    $i50 := $and.i32($i49, 3);
    call {:si_unique_call 5806} {:cexpr "__cil_tmp62"} {:si_old_unique_call 686} boogie_si_record_i32($i50);
    goto corral_source_split_1239;

  corral_source_split_1239:
    assume {:verifier.code 0} true;
    $i51 := $shl.i32($i50, $i44);
    call {:si_unique_call 5807} {:cexpr "__cil_tmp63"} {:si_old_unique_call 687} boogie_si_record_i32($i51);
    goto corral_source_split_1240;

  corral_source_split_1240:
    assume {:verifier.code 0} true;
    $i52 := $zext.i8.i32($i43);
    call {:si_unique_call 5808} {:cexpr "__cil_tmp64"} {:si_old_unique_call 688} boogie_si_record_i32($i52);
    goto corral_source_split_1241;

  corral_source_split_1241:
    assume {:verifier.code 0} true;
    $i53 := $or.i32($i52, $i51);
    call {:si_unique_call 5809} {:cexpr "__cil_tmp65"} {:si_old_unique_call 689} boogie_si_record_i32($i53);
    goto corral_source_split_1242;

  corral_source_split_1242:
    assume {:verifier.code 0} true;
    $i54 := $trunc.i32.i8($i53);
    call {:si_unique_call 5810} {:cexpr "tmp___7"} {:si_old_unique_call 690} boogie_si_record_i8($i54);
    goto corral_source_split_1243;

  corral_source_split_1243:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5811} {:si_old_unique_call 691} aty_st_pll_ct(6, $i54, $p6);
    goto corral_source_split_1244;

  corral_source_split_1244:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5812} {:si_old_unique_call 692} $i55 := aty_ld_pll_ct(11, $p6);
    call {:si_unique_call 5813} {:cexpr "tmp___7"} {:si_old_unique_call 693} boogie_si_record_i8($i55);
    goto corral_source_split_1245;

  corral_source_split_1245:
    assume {:verifier.code 0} true;
    $i56 := $p2i.ref.i64($p6);
    call {:si_unique_call 5814} {:cexpr "__cil_tmp68"} {:si_old_unique_call 694} boogie_si_record_i64($i56);
    goto corral_source_split_1246;

  corral_source_split_1246:
    assume {:verifier.code 0} true;
    $i57 := $add.i64($i56, 856);
    call {:si_unique_call 5815} {:cexpr "__cil_tmp69"} {:si_old_unique_call 695} boogie_si_record_i64($i57);
    goto corral_source_split_1247;

  corral_source_split_1247:
    assume {:verifier.code 0} true;
    $p58 := $i2p.i64.ref($i57);
    goto corral_source_split_1248;

  corral_source_split_1248:
    assume {:verifier.code 0} true;
    havoc $i59;
    call {:si_unique_call 5816} {:cexpr "__cil_tmp70"} {:si_old_unique_call 696} boogie_si_record_i64($i59);
    goto corral_source_split_1249;

  corral_source_split_1249:
    assume {:verifier.code 0} true;
    $i60 := $trunc.i64.i32($i59);
    goto corral_source_split_1250;

  corral_source_split_1250:
    assume {:verifier.code 0} true;
    $i61 := $shl.i32(16, $i60);
    call {:si_unique_call 5817} {:cexpr "__cil_tmp71"} {:si_old_unique_call 697} boogie_si_record_i32($i61);
    goto corral_source_split_1251;

  corral_source_split_1251:
    assume {:verifier.code 0} true;
    $i62 := $xor.i32($i61, $sub.i32(0, 1));
    call {:si_unique_call 5818} {:cexpr "__cil_tmp72"} {:si_old_unique_call 698} boogie_si_record_i32($i62);
    goto corral_source_split_1252;

  corral_source_split_1252:
    assume {:verifier.code 0} true;
    $i63 := $zext.i8.i32($i55);
    call {:si_unique_call 5819} {:cexpr "__cil_tmp73"} {:si_old_unique_call 699} boogie_si_record_i32($i63);
    goto corral_source_split_1253;

  corral_source_split_1253:
    assume {:verifier.code 0} true;
    $i64 := $and.i32($i63, $i62);
    call {:si_unique_call 5820} {:cexpr "__cil_tmp74"} {:si_old_unique_call 700} boogie_si_record_i32($i64);
    goto corral_source_split_1254;

  corral_source_split_1254:
    assume {:verifier.code 0} true;
    $i65 := $trunc.i32.i8($i64);
    call {:si_unique_call 5821} {:cexpr "tmp___7"} {:si_old_unique_call 701} boogie_si_record_i8($i65);
    goto corral_source_split_1255;

  corral_source_split_1255:
    assume {:verifier.code 0} true;
    $i66 := $zext.i8.i32($i65);
    call {:si_unique_call 5822} {:cexpr "__cil_tmp75"} {:si_old_unique_call 702} boogie_si_record_i32($i66);
    goto corral_source_split_1256;

  corral_source_split_1256:
    assume {:verifier.code 0} true;
    $i67 := $and.i32($i66, 240);
    call {:si_unique_call 5823} {:cexpr "__cil_tmp76"} {:si_old_unique_call 703} boogie_si_record_i32($i67);
    goto corral_source_split_1257;

  corral_source_split_1257:
    assume {:verifier.code 0} true;
    $i68 := $trunc.i32.i8($i67);
    call {:si_unique_call 5824} {:cexpr "tmp___7"} {:si_old_unique_call 704} boogie_si_record_i8($i68);
    goto corral_source_split_1258;

  corral_source_split_1258:
    assume {:verifier.code 0} true;
    $i69 := $p2i.ref.i64($p1);
    call {:si_unique_call 5825} {:cexpr "__cil_tmp78"} {:si_old_unique_call 705} boogie_si_record_i64($i69);
    goto corral_source_split_1259;

  corral_source_split_1259:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, 8);
    call {:si_unique_call 5826} {:cexpr "__cil_tmp79"} {:si_old_unique_call 706} boogie_si_record_i64($i70);
    goto corral_source_split_1260;

  corral_source_split_1260:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i70);
    goto corral_source_split_1261;

  corral_source_split_1261:
    assume {:verifier.code 0} true;
    havoc $i72;
    call {:si_unique_call 5827} {:cexpr "__cil_tmp80"} {:si_old_unique_call 707} boogie_si_record_i8($i72);
    goto corral_source_split_1262;

  corral_source_split_1262:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i72);
    call {:si_unique_call 5828} {:cexpr "__cil_tmp81"} {:si_old_unique_call 708} boogie_si_record_i32($i73);
    goto corral_source_split_1263;

  corral_source_split_1263:
    assume {:verifier.code 0} true;
    $i74 := $zext.i8.i32($i68);
    call {:si_unique_call 5829} {:cexpr "__cil_tmp82"} {:si_old_unique_call 709} boogie_si_record_i32($i74);
    goto corral_source_split_1264;

  corral_source_split_1264:
    assume {:verifier.code 0} true;
    $i75 := $or.i32($i74, $i73);
    call {:si_unique_call 5830} {:cexpr "__cil_tmp83"} {:si_old_unique_call 710} boogie_si_record_i32($i75);
    goto corral_source_split_1265;

  corral_source_split_1265:
    assume {:verifier.code 0} true;
    $i76 := $trunc.i32.i8($i75);
    call {:si_unique_call 5831} {:cexpr "tmp___7"} {:si_old_unique_call 711} boogie_si_record_i8($i76);
    goto corral_source_split_1266;

  corral_source_split_1266:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5832} {:si_old_unique_call 712} aty_st_pll_ct(11, $i76, $p6);
    goto corral_source_split_1267;

  corral_source_split_1267:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p6);
    call {:si_unique_call 5833} {:cexpr "__cil_tmp85"} {:si_old_unique_call 713} boogie_si_record_i64($i77);
    goto corral_source_split_1268;

  corral_source_split_1268:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 856);
    call {:si_unique_call 5834} {:cexpr "__cil_tmp86"} {:si_old_unique_call 714} boogie_si_record_i64($i78);
    goto corral_source_split_1269;

  corral_source_split_1269:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_1270;

  corral_source_split_1270:
    assume {:verifier.code 0} true;
    havoc $i80;
    call {:si_unique_call 5835} {:cexpr "__cil_tmp87"} {:si_old_unique_call 715} boogie_si_record_i64($i80);
    goto corral_source_split_1271;

  corral_source_split_1271:
    assume {:verifier.code 0} true;
    $i81 := $add.i64(7, $i80);
    call {:si_unique_call 5836} {:cexpr "__cil_tmp88"} {:si_old_unique_call 716} boogie_si_record_i64($i81);
    goto corral_source_split_1272;

  corral_source_split_1272:
    assume {:verifier.code 0} true;
    $i82 := $trunc.i64.i8($i81);
    call {:si_unique_call 5837} {:cexpr "tmp___7"} {:si_old_unique_call 717} boogie_si_record_i8($i82);
    goto corral_source_split_1273;

  corral_source_split_1273:
    assume {:verifier.code 0} true;
    $i83 := $zext.i8.i32($i82);
    call {:si_unique_call 5838} {:cexpr "__cil_tmp89"} {:si_old_unique_call 718} boogie_si_record_i32($i83);
    goto corral_source_split_1274;

  corral_source_split_1274:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p1);
    call {:si_unique_call 5839} {:cexpr "__cil_tmp91"} {:si_old_unique_call 719} boogie_si_record_i64($i84);
    goto corral_source_split_1275;

  corral_source_split_1275:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 7);
    call {:si_unique_call 5840} {:cexpr "__cil_tmp92"} {:si_old_unique_call 720} boogie_si_record_i64($i85);
    goto corral_source_split_1276;

  corral_source_split_1276:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_1277;

  corral_source_split_1277:
    assume {:verifier.code 0} true;
    havoc $i87;
    call {:si_unique_call 5841} {:cexpr "__cil_tmp93"} {:si_old_unique_call 721} boogie_si_record_i8($i87);
    goto corral_source_split_1278;

  corral_source_split_1278:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 5842} {:cexpr "__cil_tmp94"} {:si_old_unique_call 722} boogie_si_record_i32($i88);
    goto corral_source_split_1279;

  corral_source_split_1279:
    assume {:verifier.code 0} true;
    $i89 := $and.i32($i88, 255);
    call {:si_unique_call 5843} {:cexpr "__cil_tmp95"} {:si_old_unique_call 723} boogie_si_record_i32($i89);
    goto corral_source_split_1280;

  corral_source_split_1280:
    assume {:verifier.code 0} true;
    $i90 := $trunc.i32.i8($i89);
    call {:si_unique_call 5844} {:cexpr "__cil_tmp96"} {:si_old_unique_call 724} boogie_si_record_i8($i90);
    goto corral_source_split_1281;

  corral_source_split_1281:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5845} {:si_old_unique_call 725} aty_st_pll_ct($i83, $i90, $p6);
    goto corral_source_split_1282;

  corral_source_split_1282:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p1);
    call {:si_unique_call 5846} {:cexpr "__cil_tmp99"} {:si_old_unique_call 726} boogie_si_record_i64($i91);
    goto corral_source_split_1283;

  corral_source_split_1283:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 1);
    call {:si_unique_call 5847} {:cexpr "__cil_tmp100"} {:si_old_unique_call 727} boogie_si_record_i64($i92);
    goto corral_source_split_1284;

  corral_source_split_1284:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_1285;

  corral_source_split_1285:
    assume {:verifier.code 0} true;
    havoc $i94;
    call {:si_unique_call 5848} {:cexpr "__cil_tmp101"} {:si_old_unique_call 728} boogie_si_record_i8($i94);
    goto corral_source_split_1286;

  corral_source_split_1286:
    assume {:verifier.code 0} true;
    $i95 := $zext.i8.i32($i94);
    call {:si_unique_call 5849} {:cexpr "__cil_tmp102"} {:si_old_unique_call 729} boogie_si_record_i32($i95);
    goto corral_source_split_1287;

  corral_source_split_1287:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, $sub.i32(0, 4));
    call {:si_unique_call 5850} {:cexpr "__cil_tmp103"} {:si_old_unique_call 730} boogie_si_record_i32($i96);
    goto corral_source_split_1288;

  corral_source_split_1288:
    assume {:verifier.code 0} true;
    $i97 := $or.i32($i96, 4);
    call {:si_unique_call 5851} {:cexpr "__cil_tmp104"} {:si_old_unique_call 731} boogie_si_record_i32($i97);
    goto corral_source_split_1289;

  corral_source_split_1289:
    assume {:verifier.code 0} true;
    $i98 := $trunc.i32.i8($i97);
    call {:si_unique_call 5852} {:cexpr "__cil_tmp105"} {:si_old_unique_call 732} boogie_si_record_i8($i98);
    goto corral_source_split_1290;

  corral_source_split_1290:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5853} {:si_old_unique_call 733} aty_st_pll_ct(3, $i98, $p6);
    goto corral_source_split_1291;

  corral_source_split_1291:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p1);
    call {:si_unique_call 5854} {:cexpr "__cil_tmp108"} {:si_old_unique_call 734} boogie_si_record_i64($i99);
    goto corral_source_split_1292;

  corral_source_split_1292:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 5);
    call {:si_unique_call 5855} {:cexpr "__cil_tmp109"} {:si_old_unique_call 735} boogie_si_record_i64($i100);
    goto corral_source_split_1293;

  corral_source_split_1293:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_1294;

  corral_source_split_1294:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 5856} {:cexpr "__cil_tmp110"} {:si_old_unique_call 736} boogie_si_record_i8($i102);
    goto corral_source_split_1295;

  corral_source_split_1295:
    assume {:verifier.code 0} true;
    $i103 := $zext.i8.i32($i102);
    call {:si_unique_call 5857} {:cexpr "__cil_tmp111"} {:si_old_unique_call 737} boogie_si_record_i32($i103);
    goto corral_source_split_1296;

  corral_source_split_1296:
    assume {:verifier.code 0} true;
    $i104 := $and.i32($i103, $sub.i32(0, 5));
    call {:si_unique_call 5858} {:cexpr "__cil_tmp112"} {:si_old_unique_call 738} boogie_si_record_i32($i104);
    goto corral_source_split_1297;

  corral_source_split_1297:
    assume {:verifier.code 0} true;
    $i105 := $trunc.i32.i8($i104);
    call {:si_unique_call 5859} {:cexpr "__cil_tmp113"} {:si_old_unique_call 739} boogie_si_record_i8($i105);
    goto corral_source_split_1298;

  corral_source_split_1298:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5860} {:si_old_unique_call 740} aty_st_pll_ct(5, $i105, $p6);
    goto corral_source_split_1299;

  corral_source_split_1299:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5861} {:si_old_unique_call 741} ___udelay(21475000);
    goto corral_source_split_1300;

  corral_source_split_1300:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p1);
    call {:si_unique_call 5862} {:cexpr "__cil_tmp116"} {:si_old_unique_call 742} boogie_si_record_i64($i106);
    goto corral_source_split_1301;

  corral_source_split_1301:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 1);
    call {:si_unique_call 5863} {:cexpr "__cil_tmp117"} {:si_old_unique_call 743} boogie_si_record_i64($i107);
    goto corral_source_split_1302;

  corral_source_split_1302:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_1303;

  corral_source_split_1303:
    assume {:verifier.code 0} true;
    havoc $i109;
    call {:si_unique_call 5864} {:cexpr "__cil_tmp118"} {:si_old_unique_call 744} boogie_si_record_i8($i109);
    goto corral_source_split_1304;

  corral_source_split_1304:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5865} {:si_old_unique_call 745} aty_st_pll_ct(3, $i109, $p6);
    goto corral_source_split_1305;

  corral_source_split_1305:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p1);
    call {:si_unique_call 5866} {:cexpr "__cil_tmp122"} {:si_old_unique_call 746} boogie_si_record_i64($i110);
    goto corral_source_split_1306;

  corral_source_split_1306:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 5);
    call {:si_unique_call 5867} {:cexpr "__cil_tmp123"} {:si_old_unique_call 747} boogie_si_record_i64($i111);
    goto corral_source_split_1307;

  corral_source_split_1307:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_1308;

  corral_source_split_1308:
    assume {:verifier.code 0} true;
    havoc $i113;
    call {:si_unique_call 5868} {:cexpr "__cil_tmp124"} {:si_old_unique_call 748} boogie_si_record_i8($i113);
    goto corral_source_split_1309;

  corral_source_split_1309:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5869} {:si_old_unique_call 749} aty_st_pll_ct(5, $i113, $p6);
    goto corral_source_split_1310;

  corral_source_split_1310:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5870} {:si_old_unique_call 750} ___udelay(4295000);
    goto corral_source_split_1311;

  corral_source_split_1311:
    assume {:verifier.code 0} true;
    $i114 := $and.i32($i23, 16777216);
    call {:si_unique_call 5871} {:cexpr "__cil_tmp127"} {:si_old_unique_call 751} boogie_si_record_i32($i114);
    goto corral_source_split_1312;

  corral_source_split_1312:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 0);
    goto corral_source_split_1313;

  corral_source_split_1313:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i115 == 1);
    goto corral_source_split_1315;

  corral_source_split_1315:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5872} {:si_old_unique_call 752} aty_st_le32(28, $i23, $p6);
    goto corral_source_split_1316;

  corral_source_split_1316:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i116 := $p2i.ref.i64($p6);
    call {:si_unique_call 5873} {:cexpr "__cil_tmp129"} {:si_old_unique_call 753} boogie_si_record_i64($i116);
    goto corral_source_split_1318;

  corral_source_split_1318:
    assume {:verifier.code 0} true;
    $i117 := $add.i64($i116, 1044);
    call {:si_unique_call 5874} {:cexpr "__cil_tmp130"} {:si_old_unique_call 754} boogie_si_record_i64($i117);
    goto corral_source_split_1319;

  corral_source_split_1319:
    assume {:verifier.code 0} true;
    $p118 := $i2p.i64.ref($i117);
    goto corral_source_split_1320;

  corral_source_split_1320:
    assume {:verifier.code 0} true;
    havoc $i119;
    call {:si_unique_call 5875} {:cexpr "__cil_tmp131"} {:si_old_unique_call 755} boogie_si_record_i32($i119);
    goto corral_source_split_1321;

  corral_source_split_1321:
    assume {:verifier.code 0} true;
    $i120 := $and.i32($i119, 4);
    goto corral_source_split_1322;

  corral_source_split_1322:
    assume {:verifier.code 0} true;
    $i121 := $ne.i32($i120, 0);
    goto corral_source_split_1323;

  corral_source_split_1323:
    assume {:verifier.code 0} true;
    assume {:branchcond $i121} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i121 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i159 := $p2i.ref.i64($p6);
    call {:si_unique_call 5876} {:cexpr "__cil_tmp163"} {:si_old_unique_call 788} boogie_si_record_i64($i159);
    goto corral_source_split_1404;

  corral_source_split_1404:
    assume {:verifier.code 0} true;
    $i160 := $add.i64($i159, 1136);
    call {:si_unique_call 5877} {:cexpr "__cil_tmp164"} {:si_old_unique_call 789} boogie_si_record_i64($i160);
    goto corral_source_split_1405;

  corral_source_split_1405:
    assume {:verifier.code 0} true;
    $p161 := $i2p.i64.ref($i160);
    goto corral_source_split_1406;

  corral_source_split_1406:
    assume {:verifier.code 0} true;
    havoc $i162;
    call {:si_unique_call 5878} {:cexpr "__cil_tmp165"} {:si_old_unique_call 790} boogie_si_record_i64($i162);
    goto corral_source_split_1407;

  corral_source_split_1407:
    assume {:verifier.code 0} true;
    $i163 := $ne.i64($i162, 0);
    goto corral_source_split_1408;

  corral_source_split_1408:
    assume {:verifier.code 0} true;
    assume {:branchcond $i163} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i163 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb37:
    assume $i163 == 1;
    goto corral_source_split_1410;

  corral_source_split_1410:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5879} {:si_old_unique_call 791} aty_st_lcd(1, $i16, $p6);
    goto corral_source_split_1411;

  corral_source_split_1411:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb10:
    assume $i121 == 1;
    goto corral_source_split_1325;

  corral_source_split_1325:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p6);
    call {:si_unique_call 5880} {:cexpr "__cil_tmp132"} {:si_old_unique_call 756} boogie_si_record_i64($i122);
    goto corral_source_split_1326;

  corral_source_split_1326:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 1044);
    call {:si_unique_call 5881} {:cexpr "__cil_tmp133"} {:si_old_unique_call 757} boogie_si_record_i64($i123);
    goto corral_source_split_1327;

  corral_source_split_1327:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_1328;

  corral_source_split_1328:
    assume {:verifier.code 0} true;
    havoc $i125;
    call {:si_unique_call 5882} {:cexpr "__cil_tmp134"} {:si_old_unique_call 758} boogie_si_record_i32($i125);
    goto corral_source_split_1329;

  corral_source_split_1329:
    assume {:verifier.code 0} true;
    $i126 := $and.i32($i125, 524288);
    goto corral_source_split_1330;

  corral_source_split_1330:
    assume {:verifier.code 0} true;
    $i127 := $ne.i32($i126, 0);
    goto corral_source_split_1331;

  corral_source_split_1331:
    assume {:verifier.code 0} true;
    assume {:branchcond $i127} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i127 == 1);
    goto corral_source_split_1335;

  corral_source_split_1335:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p6);
    call {:si_unique_call 5883} {:cexpr "__cil_tmp135"} {:si_old_unique_call 759} boogie_si_record_i64($i129);
    goto corral_source_split_1336;

  corral_source_split_1336:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 1065);
    call {:si_unique_call 5884} {:cexpr "__cil_tmp136"} {:si_old_unique_call 760} boogie_si_record_i64($i130);
    goto corral_source_split_1337;

  corral_source_split_1337:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_1338;

  corral_source_split_1338:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 5885} {:cexpr "__cil_tmp137"} {:si_old_unique_call 761} boogie_si_record_i8($i132);
    goto corral_source_split_1339;

  corral_source_split_1339:
    assume {:verifier.code 0} true;
    $i133 := $zext.i8.i32($i132);
    call {:si_unique_call 5886} {:cexpr "__cil_tmp138"} {:si_old_unique_call 762} boogie_si_record_i32($i133);
    goto corral_source_split_1340;

  corral_source_split_1340:
    assume {:verifier.code 0} true;
    $i134 := $sge.i32($i133, 4);
    goto corral_source_split_1341;

  corral_source_split_1341:
    assume {:verifier.code 0} true;
    assume {:branchcond $i134} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i134 == 1);
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 96);
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i128 := $i135;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    goto corral_source_split_1343;

  corral_source_split_1343:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5887} {:si_old_unique_call 763} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1344;

  corral_source_split_1344:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5888} {:si_old_unique_call 764} aty_st_pll_ct(13, 27, $p6);
    goto corral_source_split_1345;

  corral_source_split_1345:
    assume {:verifier.code 0} true;
    $i136 := $p2i.ref.i64($p1);
    call {:si_unique_call 5889} {:cexpr "__cil_tmp143"} {:si_old_unique_call 765} boogie_si_record_i64($i136);
    goto corral_source_split_1346;

  corral_source_split_1346:
    assume {:verifier.code 0} true;
    $i137 := $add.i64($i136, 12);
    call {:si_unique_call 5890} {:cexpr "__cil_tmp144"} {:si_old_unique_call 766} boogie_si_record_i64($i137);
    goto corral_source_split_1347;

  corral_source_split_1347:
    assume {:verifier.code 0} true;
    $p138 := $i2p.i64.ref($i137);
    goto corral_source_split_1348;

  corral_source_split_1348:
    assume {:verifier.code 0} true;
    havoc $i139;
    call {:si_unique_call 5891} {:cexpr "__cil_tmp145"} {:si_old_unique_call 767} boogie_si_record_i32($i139);
    goto corral_source_split_1349;

  corral_source_split_1349:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5892} {:si_old_unique_call 768} aty_st_le32(32, $i139, $p6);
    goto corral_source_split_1350;

  corral_source_split_1350:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p1);
    call {:si_unique_call 5893} {:cexpr "__cil_tmp149"} {:si_old_unique_call 769} boogie_si_record_i64($i140);
    goto corral_source_split_1351;

  corral_source_split_1351:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, 16);
    call {:si_unique_call 5894} {:cexpr "__cil_tmp150"} {:si_old_unique_call 770} boogie_si_record_i64($i141);
    goto corral_source_split_1352;

  corral_source_split_1352:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_1353;

  corral_source_split_1353:
    assume {:verifier.code 0} true;
    havoc $i143;
    call {:si_unique_call 5895} {:cexpr "__cil_tmp151"} {:si_old_unique_call 771} boogie_si_record_i32($i143);
    goto corral_source_split_1354;

  corral_source_split_1354:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5896} {:si_old_unique_call 772} aty_st_le32(36, $i143, $p6);
    goto corral_source_split_1355;

  corral_source_split_1355:
    assume {:verifier.code 0} true;
    $i144 := 10;
    goto $bb18;

  $bb18:
    call {:si_unique_call 5897} $i144, $i145, $i146 := aty_set_pll_ct_loop_$bb18($i144, $i145, $i146);
    LoopBound_AssertVar := false;
    goto $bb18_last;

  $bb18_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i145 := $sub.i64($i144, 1);
    call {:si_unique_call 5898} {:cexpr "__ms___1"} {:si_old_unique_call 773} boogie_si_record_i64($i145);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    $i146 := $ne.i64($i144, 0);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    assume {:branchcond $i146} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i146 == 1);
    goto corral_source_split_1366;

  corral_source_split_1366:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5899} {:si_old_unique_call 775} aty_st_pll_ct(12, $i128, $p6);
    goto corral_source_split_1370;

  corral_source_split_1370:
    assume {:verifier.code 0} true;
    $i147 := 10;
    goto $bb24;

  $bb24:
    call {:si_unique_call 5900} $i147, $i148, $i149 := aty_set_pll_ct_loop_$bb24_PassiveCopy($i147, $i148, $i149);
    goto $bb24_last;

  $bb24_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i148 := $sub.i64($i147, 1);
    call {:si_unique_call 5901} {:cexpr "__ms___2"} {:si_old_unique_call 776} boogie_si_record_i64($i148);
    goto corral_source_split_1374;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    $i149 := $ne.i64($i147, 0);
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    assume {:branchcond $i149} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i149 == 1);
    goto corral_source_split_1379;

  corral_source_split_1379:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $i150 := $zext.i8.i32($i128);
    call {:si_unique_call 5902} {:cexpr "__cil_tmp155"} {:si_old_unique_call 778} boogie_si_record_i32($i150);
    goto corral_source_split_1383;

  corral_source_split_1383:
    assume {:verifier.code 0} true;
    $i151 := $or.i32($i150, 64);
    call {:si_unique_call 5903} {:cexpr "__cil_tmp156"} {:si_old_unique_call 779} boogie_si_record_i32($i151);
    goto corral_source_split_1384;

  corral_source_split_1384:
    assume {:verifier.code 0} true;
    $i152 := $trunc.i32.i8($i151);
    call {:si_unique_call 5904} {:cexpr "__cil_tmp157"} {:si_old_unique_call 780} boogie_si_record_i8($i152);
    goto corral_source_split_1385;

  corral_source_split_1385:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5905} {:si_old_unique_call 781} aty_st_pll_ct(12, $i152, $p6);
    goto corral_source_split_1386;

  corral_source_split_1386:
    assume {:verifier.code 0} true;
    $i153 := 10;
    goto $bb30;

  $bb30:
    call {:si_unique_call 5906} $i153, $i154, $i155 := aty_set_pll_ct_loop_$bb30_PassiveCopy($i153, $i154, $i155);
    goto $bb30_last;

  $bb30_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i154 := $sub.i64($i153, 1);
    call {:si_unique_call 5907} {:cexpr "__ms___3"} {:si_old_unique_call 782} boogie_si_record_i64($i154);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    $i155 := $ne.i64($i153, 0);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    assume {:branchcond $i155} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i155 == 1);
    goto corral_source_split_1395;

  corral_source_split_1395:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $i156 := $zext.i8.i32($i128);
    call {:si_unique_call 5908} {:cexpr "__cil_tmp159"} {:si_old_unique_call 784} boogie_si_record_i32($i156);
    goto corral_source_split_1399;

  corral_source_split_1399:
    assume {:verifier.code 0} true;
    $i157 := $and.i32($i156, $sub.i32(0, 65));
    call {:si_unique_call 5909} {:cexpr "__cil_tmp160"} {:si_old_unique_call 785} boogie_si_record_i32($i157);
    goto corral_source_split_1400;

  corral_source_split_1400:
    assume {:verifier.code 0} true;
    $i158 := $trunc.i32.i8($i157);
    call {:si_unique_call 5910} {:cexpr "__cil_tmp161"} {:si_old_unique_call 786} boogie_si_record_i8($i158);
    goto corral_source_split_1401;

  corral_source_split_1401:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5911} {:si_old_unique_call 787} aty_st_pll_ct(12, $i158, $p6);
    goto corral_source_split_1402;

  corral_source_split_1402:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb32:
    assume $i155 == 1;
    goto corral_source_split_1393;

  corral_source_split_1393:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5912} {:si_old_unique_call 783} ___udelay(4295000);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    $i153 := $i154;
    goto corral_source_split_1397_dummy;

  corral_source_split_1397_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb26:
    assume $i149 == 1;
    goto corral_source_split_1377;

  corral_source_split_1377:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5913} {:si_old_unique_call 777} ___udelay(4295000);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    $i147 := $i148;
    goto corral_source_split_1381_dummy;

  corral_source_split_1381_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb20:
    assume $i146 == 1;
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5914} {:si_old_unique_call 774} ___udelay(4295000);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    $i144 := $i145;
    goto corral_source_split_1368_dummy;

  corral_source_split_1368_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb15:
    assume $i134 == 1;
    goto corral_source_split_1357;

  corral_source_split_1357:
    assume {:verifier.code 0} true;
    $i135 := $sub.i8(0, 90);
    goto $bb17;

  $bb12:
    assume $i127 == 1;
    goto corral_source_split_1333;

  corral_source_split_1333:
    assume {:verifier.code 0} true;
    $i128 := $sub.i8(0, 128);
    goto $bb14;

  $bb7:
    assume $i115 == 1;
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb4:
    assume $i25 == 1;
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb1:
    assume $i11 == 1;
    goto corral_source_split_1192;

  corral_source_split_1192:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5915} {:si_old_unique_call 647} $i12 := aty_ld_lcd(1, $p6);
    call {:si_unique_call 5916} {:cexpr "lcd_gen_cntrl"} {:si_old_unique_call 648} boogie_si_record_i32($i12);
    goto corral_source_split_1193;

  corral_source_split_1193:
    assume {:verifier.code 0} true;
    $i13 := $zext.i32.i64($i12);
    call {:si_unique_call 5917} {:cexpr "__cil_tmp26"} {:si_old_unique_call 649} boogie_si_record_i64($i13);
    goto corral_source_split_1194;

  corral_source_split_1194:
    assume {:verifier.code 0} true;
    $i14 := $and.i64($i13, $sub.i64(0, 3));
    call {:si_unique_call 5918} {:cexpr "__cil_tmp27"} {:si_old_unique_call 650} boogie_si_record_i64($i14);
    goto corral_source_split_1195;

  corral_source_split_1195:
    assume {:verifier.code 0} true;
    $i15 := $trunc.i64.i32($i14);
    call {:si_unique_call 5919} {:cexpr "__cil_tmp28"} {:si_old_unique_call 651} boogie_si_record_i32($i15);
    goto corral_source_split_1196;

  corral_source_split_1196:
    assume {:verifier.code 0} true;
    call {:si_unique_call 5920} {:si_old_unique_call 652} aty_st_lcd(1, $i15, $p6);
    goto corral_source_split_1197;

  corral_source_split_1197:
    assume {:verifier.code 0} true;
    $i16 := $i12;
    goto $bb3;
}



implementation {:LB_Mapping "aty_valid_pll_ct_loop_$bb10"} {:entrypoint} aty_valid_pll_ct_EntryCopy_aty_valid_pll_ct_loop_$bb10($p0: ref, $i1: i32, $p2: ref) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i1;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $i25: i1;
  var $i26: i32;
  var $i27: i8;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $i31: i1;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $i43: i1;
  var $i44: i32;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i8;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i8;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $p62: ref;
  var $i63: i8;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i8;
  var $i71: i32;
  var $i72: i32;
  var $i73: i32;
  var $i74: i8;
  var $p75: ref;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $i82: i32;
  var $i83: i32;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i64;
  var $i92: i64;
  var $p93: ref;
  var $i94: i64;
  var $i95: i64;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i32;
  var $i105: i32;
  var $i106: i32;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $i113: i1;
  var $i114: i32;
  var $i112: i32;
  var $i116: i32;
  var $i117: i32;
  var $i115: i32;
  var $i118: i64;
  var $i119: i64;
  var $i120: i32;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i8;
  var $i125: i32;
  var $i126: i32;
  var $i127: i8;
  var $p128: ref;
  var $i20: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 6406} {:cexpr "aty_valid_pll_ct:arg:vclk_per"} {:si_old_unique_call 1277} boogie_si_record_i32($i1);
    goto corral_source_split_2309;

  corral_source_split_2309:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p0);
    call {:si_unique_call 6407} {:cexpr "__cil_tmp9"} {:si_old_unique_call 1278} boogie_si_record_i64($i3);
    goto corral_source_split_2310;

  corral_source_split_2310:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 1160);
    call {:si_unique_call 6408} {:cexpr "__cil_tmp10"} {:si_old_unique_call 1279} boogie_si_record_i64($i4);
    goto corral_source_split_2311;

  corral_source_split_2311:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_2312;

  corral_source_split_2312:
    assume {:verifier.code 0} true;
    havoc $p6;
    goto corral_source_split_2313;

  corral_source_split_2313:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p6);
    goto corral_source_split_2314;

  corral_source_split_2314:
    assume {:verifier.code 0} true;
    $p8 := $bitcast.ref.ref($p2);
    goto corral_source_split_2315;

  corral_source_split_2315:
    assume {:verifier.code 0} true;
    havoc $i9;
    call {:si_unique_call 6409} {:cexpr "__cil_tmp12"} {:si_old_unique_call 1280} boogie_si_record_i8($i9);
    goto corral_source_split_2316;

  corral_source_split_2316:
    assume {:verifier.code 0} true;
    $i10 := $zext.i8.i32($i9);
    call {:si_unique_call 6410} {:cexpr "__cil_tmp13"} {:si_old_unique_call 1281} boogie_si_record_i32($i10);
    goto corral_source_split_2317;

  corral_source_split_2317:
    assume {:verifier.code 0} true;
    $i11 := $p2i.ref.i64($p7);
    call {:si_unique_call 6411} {:cexpr "__cil_tmp14"} {:si_old_unique_call 1282} boogie_si_record_i64($i11);
    goto corral_source_split_2318;

  corral_source_split_2318:
    assume {:verifier.code 0} true;
    $i12 := $add.i64($i11, 1048);
    call {:si_unique_call 6412} {:cexpr "__cil_tmp15"} {:si_old_unique_call 1283} boogie_si_record_i64($i12);
    goto corral_source_split_2319;

  corral_source_split_2319:
    assume {:verifier.code 0} true;
    $p13 := $i2p.i64.ref($i12);
    goto corral_source_split_2320;

  corral_source_split_2320:
    assume {:verifier.code 0} true;
    havoc $i14;
    call {:si_unique_call 6413} {:cexpr "__cil_tmp16"} {:si_old_unique_call 1284} boogie_si_record_i32($i14);
    goto corral_source_split_2321;

  corral_source_split_2321:
    assume {:verifier.code 0} true;
    $i15 := $mul.i32($i14, $i10);
    call {:si_unique_call 6414} {:cexpr "__cil_tmp17"} {:si_old_unique_call 1285} boogie_si_record_i32($i15);
    goto corral_source_split_2322;

  corral_source_split_2322:
    assume {:verifier.code 0} true;
    $i16 := $mul.i32($i15, 4);
    call {:si_unique_call 6415} {:cexpr "__cil_tmp18"} {:si_old_unique_call 1286} boogie_si_record_i32($i16);
    goto corral_source_split_2323;

  corral_source_split_2323:
    assume {:verifier.code 0} true;
    $i17 := $udiv.i32($i16, $i1);
    call {:si_unique_call 6416} {:cexpr "q"} {:si_old_unique_call 1287} boogie_si_record_i32($i17);
    goto corral_source_split_2324;

  corral_source_split_2324:
    assume {:verifier.code 0} true;
    $i18 := $ult.i32($i17, 128);
    goto corral_source_split_2325;

  corral_source_split_2325:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i18 == 1);
    goto corral_source_split_2330;

  corral_source_split_2330:
    assume {:verifier.code 0} true;
    $i21 := $ugt.i32($i17, 2040);
    goto corral_source_split_2331;

  corral_source_split_2331:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i21 == 1);
    goto corral_source_split_2338;

  corral_source_split_2338:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p2);
    call {:si_unique_call 6417} {:cexpr "__cil_tmp19"} {:si_old_unique_call 1290} boogie_si_record_i64($i23);
    goto corral_source_split_2339;

  corral_source_split_2339:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 6);
    call {:si_unique_call 6418} {:cexpr "__cil_tmp20"} {:si_old_unique_call 1291} boogie_si_record_i64($i24);
    goto corral_source_split_2340;

  corral_source_split_2340:
    assume {:verifier.code 0} true;
    $i25 := $ult.i32($i17, 1024);
    goto corral_source_split_2341;

  corral_source_split_2341:
    assume {:verifier.code 0} true;
    $i26 := $zext.i1.i32($i25);
    call {:si_unique_call 6419} {:cexpr "__cil_tmp21"} {:si_old_unique_call 1292} boogie_si_record_i32($i26);
    goto corral_source_split_2342;

  corral_source_split_2342:
    assume {:verifier.code 0} true;
    $i27 := $trunc.i32.i8($i26);
    goto corral_source_split_2343;

  corral_source_split_2343:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i24);
    goto corral_source_split_2344;

  corral_source_split_2344:
    assume {:verifier.code 0} true;
    goto corral_source_split_2345;

  corral_source_split_2345:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p2);
    call {:si_unique_call 6420} {:cexpr "__cil_tmp22"} {:si_old_unique_call 1293} boogie_si_record_i64($i29);
    goto corral_source_split_2346;

  corral_source_split_2346:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 6);
    call {:si_unique_call 6421} {:cexpr "__cil_tmp23"} {:si_old_unique_call 1294} boogie_si_record_i64($i30);
    goto corral_source_split_2347;

  corral_source_split_2347:
    assume {:verifier.code 0} true;
    $i31 := $ult.i32($i17, 512);
    goto corral_source_split_2348;

  corral_source_split_2348:
    assume {:verifier.code 0} true;
    $i32 := $zext.i1.i32($i31);
    call {:si_unique_call 6422} {:cexpr "__cil_tmp24"} {:si_old_unique_call 1295} boogie_si_record_i32($i32);
    goto corral_source_split_2349;

  corral_source_split_2349:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p2);
    call {:si_unique_call 6423} {:cexpr "__cil_tmp25"} {:si_old_unique_call 1296} boogie_si_record_i64($i33);
    goto corral_source_split_2350;

  corral_source_split_2350:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 6);
    call {:si_unique_call 6424} {:cexpr "__cil_tmp26"} {:si_old_unique_call 1297} boogie_si_record_i64($i34);
    goto corral_source_split_2351;

  corral_source_split_2351:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_2352;

  corral_source_split_2352:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 6425} {:cexpr "__cil_tmp27"} {:si_old_unique_call 1298} boogie_si_record_i8($i36);
    goto corral_source_split_2353;

  corral_source_split_2353:
    assume {:verifier.code 0} true;
    $i37 := $zext.i8.i32($i36);
    call {:si_unique_call 6426} {:cexpr "__cil_tmp28"} {:si_old_unique_call 1299} boogie_si_record_i32($i37);
    goto corral_source_split_2354;

  corral_source_split_2354:
    assume {:verifier.code 0} true;
    $i38 := $add.i32($i37, $i32);
    call {:si_unique_call 6427} {:cexpr "__cil_tmp29"} {:si_old_unique_call 1300} boogie_si_record_i32($i38);
    goto corral_source_split_2355;

  corral_source_split_2355:
    assume {:verifier.code 0} true;
    $i39 := $trunc.i32.i8($i38);
    goto corral_source_split_2356;

  corral_source_split_2356:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i30);
    goto corral_source_split_2357;

  corral_source_split_2357:
    assume {:verifier.code 0} true;
    goto corral_source_split_2358;

  corral_source_split_2358:
    assume {:verifier.code 0} true;
    $i41 := $p2i.ref.i64($p2);
    call {:si_unique_call 6428} {:cexpr "__cil_tmp30"} {:si_old_unique_call 1301} boogie_si_record_i64($i41);
    goto corral_source_split_2359;

  corral_source_split_2359:
    assume {:verifier.code 0} true;
    $i42 := $add.i64($i41, 6);
    call {:si_unique_call 6429} {:cexpr "__cil_tmp31"} {:si_old_unique_call 1302} boogie_si_record_i64($i42);
    goto corral_source_split_2360;

  corral_source_split_2360:
    assume {:verifier.code 0} true;
    $i43 := $ult.i32($i17, 256);
    goto corral_source_split_2361;

  corral_source_split_2361:
    assume {:verifier.code 0} true;
    $i44 := $zext.i1.i32($i43);
    call {:si_unique_call 6430} {:cexpr "__cil_tmp32"} {:si_old_unique_call 1303} boogie_si_record_i32($i44);
    goto corral_source_split_2362;

  corral_source_split_2362:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p2);
    call {:si_unique_call 6431} {:cexpr "__cil_tmp33"} {:si_old_unique_call 1304} boogie_si_record_i64($i45);
    goto corral_source_split_2363;

  corral_source_split_2363:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 6);
    call {:si_unique_call 6432} {:cexpr "__cil_tmp34"} {:si_old_unique_call 1305} boogie_si_record_i64($i46);
    goto corral_source_split_2364;

  corral_source_split_2364:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_2365;

  corral_source_split_2365:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 6433} {:cexpr "__cil_tmp35"} {:si_old_unique_call 1306} boogie_si_record_i8($i48);
    goto corral_source_split_2366;

  corral_source_split_2366:
    assume {:verifier.code 0} true;
    $i49 := $zext.i8.i32($i48);
    call {:si_unique_call 6434} {:cexpr "__cil_tmp36"} {:si_old_unique_call 1307} boogie_si_record_i32($i49);
    goto corral_source_split_2367;

  corral_source_split_2367:
    assume {:verifier.code 0} true;
    $i50 := $add.i32($i49, $i44);
    call {:si_unique_call 6435} {:cexpr "__cil_tmp37"} {:si_old_unique_call 1308} boogie_si_record_i32($i50);
    goto corral_source_split_2368;

  corral_source_split_2368:
    assume {:verifier.code 0} true;
    $i51 := $trunc.i32.i8($i50);
    goto corral_source_split_2369;

  corral_source_split_2369:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i42);
    goto corral_source_split_2370;

  corral_source_split_2370:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p2);
    call {:si_unique_call 6436} {:cexpr "__cil_tmp38"} {:si_old_unique_call 1309} boogie_si_record_i64($i53);
    goto corral_source_split_2372;

  corral_source_split_2372:
    assume {:verifier.code 0} true;
    $i54 := $add.i64($i53, 40);
    call {:si_unique_call 6437} {:cexpr "__cil_tmp39"} {:si_old_unique_call 1310} boogie_si_record_i64($i54);
    goto corral_source_split_2373;

  corral_source_split_2373:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p2);
    call {:si_unique_call 6438} {:cexpr "__cil_tmp40"} {:si_old_unique_call 1311} boogie_si_record_i64($i55);
    goto corral_source_split_2374;

  corral_source_split_2374:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 6);
    call {:si_unique_call 6439} {:cexpr "__cil_tmp41"} {:si_old_unique_call 1312} boogie_si_record_i64($i56);
    goto corral_source_split_2375;

  corral_source_split_2375:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_2376;

  corral_source_split_2376:
    assume {:verifier.code 0} true;
    havoc $i58;
    call {:si_unique_call 6440} {:cexpr "__cil_tmp42"} {:si_old_unique_call 1313} boogie_si_record_i8($i58);
    goto corral_source_split_2377;

  corral_source_split_2377:
    assume {:verifier.code 0} true;
    $i59 := $zext.i8.i64($i58);
    goto corral_source_split_2378;

  corral_source_split_2378:
    assume {:verifier.code 0} true;
    $i60 := $mul.i64($i59, 1);
    call {:si_unique_call 6441} {:cexpr "__cil_tmp43"} {:si_old_unique_call 1314} boogie_si_record_i64($i60);
    goto corral_source_split_2379;

  corral_source_split_2379:
    assume {:verifier.code 0} true;
    $i61 := $add.i64($p2i.ref.i64(postdividers), $i60);
    call {:si_unique_call 6442} {:cexpr "__cil_tmp44"} {:si_old_unique_call 1315} boogie_si_record_i64($i61);
    goto corral_source_split_2380;

  corral_source_split_2380:
    assume {:verifier.code 0} true;
    $p62 := $i2p.i64.ref($i61);
    goto corral_source_split_2381;

  corral_source_split_2381:
    assume {:verifier.code 0} true;
    havoc $i63;
    goto corral_source_split_2382;

  corral_source_split_2382:
    assume {:verifier.code 0} true;
    $p64 := $i2p.i64.ref($i54);
    goto corral_source_split_2383;

  corral_source_split_2383:
    assume {:verifier.code 0} true;
    goto corral_source_split_2384;

  corral_source_split_2384:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p2);
    call {:si_unique_call 6443} {:cexpr "__cil_tmp45"} {:si_old_unique_call 1316} boogie_si_record_i64($i65);
    goto corral_source_split_2385;

  corral_source_split_2385:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 7);
    call {:si_unique_call 6444} {:cexpr "__cil_tmp46"} {:si_old_unique_call 1317} boogie_si_record_i64($i66);
    goto corral_source_split_2386;

  corral_source_split_2386:
    assume {:verifier.code 0} true;
    $i67 := $p2i.ref.i64($p2);
    call {:si_unique_call 6445} {:cexpr "__cil_tmp47"} {:si_old_unique_call 1318} boogie_si_record_i64($i67);
    goto corral_source_split_2387;

  corral_source_split_2387:
    assume {:verifier.code 0} true;
    $i68 := $add.i64($i67, 40);
    call {:si_unique_call 6446} {:cexpr "__cil_tmp48"} {:si_old_unique_call 1319} boogie_si_record_i64($i68);
    goto corral_source_split_2388;

  corral_source_split_2388:
    assume {:verifier.code 0} true;
    $p69 := $i2p.i64.ref($i68);
    goto corral_source_split_2389;

  corral_source_split_2389:
    assume {:verifier.code 0} true;
    havoc $i70;
    call {:si_unique_call 6447} {:cexpr "__cil_tmp49"} {:si_old_unique_call 1320} boogie_si_record_i8($i70);
    goto corral_source_split_2390;

  corral_source_split_2390:
    assume {:verifier.code 0} true;
    $i71 := $zext.i8.i32($i70);
    call {:si_unique_call 6448} {:cexpr "__cil_tmp50"} {:si_old_unique_call 1321} boogie_si_record_i32($i71);
    goto corral_source_split_2391;

  corral_source_split_2391:
    assume {:verifier.code 0} true;
    $i72 := $mul.i32($i17, $i71);
    call {:si_unique_call 6449} {:cexpr "__cil_tmp51"} {:si_old_unique_call 1322} boogie_si_record_i32($i72);
    goto corral_source_split_2392;

  corral_source_split_2392:
    assume {:verifier.code 0} true;
    $i73 := $udiv.i32($i72, 8);
    call {:si_unique_call 6450} {:cexpr "__cil_tmp52"} {:si_old_unique_call 1323} boogie_si_record_i32($i73);
    goto corral_source_split_2393;

  corral_source_split_2393:
    assume {:verifier.code 0} true;
    $i74 := $trunc.i32.i8($i73);
    goto corral_source_split_2394;

  corral_source_split_2394:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i66);
    goto corral_source_split_2395;

  corral_source_split_2395:
    assume {:verifier.code 0} true;
    goto corral_source_split_2396;

  corral_source_split_2396:
    assume {:verifier.code 0} true;
    $p76 := $bitcast.ref.ref($p2);
    goto corral_source_split_2397;

  corral_source_split_2397:
    assume {:verifier.code 0} true;
    havoc $i77;
    call {:si_unique_call 6451} {:cexpr "__cil_tmp53"} {:si_old_unique_call 1324} boogie_si_record_i8($i77);
    goto corral_source_split_2398;

  corral_source_split_2398:
    assume {:verifier.code 0} true;
    $i78 := $zext.i8.i32($i77);
    call {:si_unique_call 6452} {:cexpr "__cil_tmp54"} {:si_old_unique_call 1325} boogie_si_record_i32($i78);
    goto corral_source_split_2399;

  corral_source_split_2399:
    assume {:verifier.code 0} true;
    $i79 := $p2i.ref.i64($p7);
    call {:si_unique_call 6453} {:cexpr "__cil_tmp55"} {:si_old_unique_call 1326} boogie_si_record_i64($i79);
    goto corral_source_split_2400;

  corral_source_split_2400:
    assume {:verifier.code 0} true;
    $i80 := $add.i64($i79, 1048);
    call {:si_unique_call 6454} {:cexpr "__cil_tmp56"} {:si_old_unique_call 1327} boogie_si_record_i64($i80);
    goto corral_source_split_2401;

  corral_source_split_2401:
    assume {:verifier.code 0} true;
    $p81 := $i2p.i64.ref($i80);
    goto corral_source_split_2402;

  corral_source_split_2402:
    assume {:verifier.code 0} true;
    havoc $i82;
    call {:si_unique_call 6455} {:cexpr "__cil_tmp57"} {:si_old_unique_call 1328} boogie_si_record_i32($i82);
    goto corral_source_split_2403;

  corral_source_split_2403:
    assume {:verifier.code 0} true;
    $i83 := $mul.i32($i82, $i78);
    call {:si_unique_call 6456} {:cexpr "__cil_tmp58"} {:si_old_unique_call 1329} boogie_si_record_i32($i83);
    goto corral_source_split_2404;

  corral_source_split_2404:
    assume {:verifier.code 0} true;
    $i84 := $p2i.ref.i64($p2);
    call {:si_unique_call 6457} {:cexpr "__cil_tmp59"} {:si_old_unique_call 1330} boogie_si_record_i64($i84);
    goto corral_source_split_2405;

  corral_source_split_2405:
    assume {:verifier.code 0} true;
    $i85 := $add.i64($i84, 7);
    call {:si_unique_call 6458} {:cexpr "__cil_tmp60"} {:si_old_unique_call 1331} boogie_si_record_i64($i85);
    goto corral_source_split_2406;

  corral_source_split_2406:
    assume {:verifier.code 0} true;
    $p86 := $i2p.i64.ref($i85);
    goto corral_source_split_2407;

  corral_source_split_2407:
    assume {:verifier.code 0} true;
    havoc $i87;
    call {:si_unique_call 6459} {:cexpr "__cil_tmp61"} {:si_old_unique_call 1332} boogie_si_record_i8($i87);
    goto corral_source_split_2408;

  corral_source_split_2408:
    assume {:verifier.code 0} true;
    $i88 := $zext.i8.i32($i87);
    call {:si_unique_call 6460} {:cexpr "__cil_tmp62"} {:si_old_unique_call 1333} boogie_si_record_i32($i88);
    goto corral_source_split_2409;

  corral_source_split_2409:
    assume {:verifier.code 0} true;
    $i89 := $mul.i32(2000000, $i88);
    call {:si_unique_call 6461} {:cexpr "__cil_tmp63"} {:si_old_unique_call 1334} boogie_si_record_i32($i89);
    goto corral_source_split_2410;

  corral_source_split_2410:
    assume {:verifier.code 0} true;
    $i90 := $udiv.i32($i89, $i83);
    call {:si_unique_call 6462} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1335} boogie_si_record_i32($i90);
    goto corral_source_split_2411;

  corral_source_split_2411:
    assume {:verifier.code 0} true;
    $i91 := $p2i.ref.i64($p2);
    call {:si_unique_call 6463} {:cexpr "__cil_tmp66"} {:si_old_unique_call 1336} boogie_si_record_i64($i91);
    goto corral_source_split_2412;

  corral_source_split_2412:
    assume {:verifier.code 0} true;
    $i92 := $add.i64($i91, 5);
    call {:si_unique_call 6464} {:cexpr "__cil_tmp67"} {:si_old_unique_call 1337} boogie_si_record_i64($i92);
    goto corral_source_split_2413;

  corral_source_split_2413:
    assume {:verifier.code 0} true;
    $p93 := $i2p.i64.ref($i92);
    goto corral_source_split_2414;

  corral_source_split_2414:
    assume {:verifier.code 0} true;
    goto corral_source_split_2415;

  corral_source_split_2415:
    assume {:verifier.code 0} true;
    $i94 := $p2i.ref.i64($p7);
    call {:si_unique_call 6465} {:cexpr "__cil_tmp69"} {:si_old_unique_call 1338} boogie_si_record_i64($i94);
    goto corral_source_split_2416;

  corral_source_split_2416:
    assume {:verifier.code 0} true;
    $i95 := $add.i64($i94, 1040);
    call {:si_unique_call 6466} {:cexpr "__cil_tmp70"} {:si_old_unique_call 1339} boogie_si_record_i64($i95);
    goto corral_source_split_2417;

  corral_source_split_2417:
    assume {:verifier.code 0} true;
    $p96 := $i2p.i64.ref($i95);
    goto corral_source_split_2418;

  corral_source_split_2418:
    assume {:verifier.code 0} true;
    havoc $i97;
    goto corral_source_split_2419;

  corral_source_split_2419:
    assume {:verifier.code 0} true;
    $i98 := $ne.i32($i97, 0);
    goto corral_source_split_2420;

  corral_source_split_2420:
    assume {:verifier.code 0} true;
    assume {:branchcond $i98} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i98 == 1);
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i20 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2333;

  corral_source_split_2333:
    assume {:verifier.code 0} true;
    $r := $i20;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb8:
    assume $i98 == 1;
    goto corral_source_split_2422;

  corral_source_split_2422:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p2);
    call {:si_unique_call 6467} {:cexpr "__cil_tmp71"} {:si_old_unique_call 1340} boogie_si_record_i64($i99);
    goto corral_source_split_2423;

  corral_source_split_2423:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 40);
    call {:si_unique_call 6468} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1341} boogie_si_record_i64($i100);
    goto corral_source_split_2424;

  corral_source_split_2424:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_2425;

  corral_source_split_2425:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 6469} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1342} boogie_si_record_i8($i102);
    goto corral_source_split_2426;

  corral_source_split_2426:
    assume {:verifier.code 0} true;
    $i103 := $zext.i8.i32($i102);
    call {:si_unique_call 6470} {:cexpr "__cil_tmp74"} {:si_old_unique_call 1343} boogie_si_record_i32($i103);
    goto corral_source_split_2427;

  corral_source_split_2427:
    assume {:verifier.code 0} true;
    $i104 := $sdiv.i32($i90, $i103);
    call {:si_unique_call 6471} {:cexpr "ecp"} {:si_old_unique_call 1344} boogie_si_record_i32($i104);
    goto corral_source_split_2428;

  corral_source_split_2428:
    assume {:verifier.code 0} true;
    $i105, $i106 := $i104, 0;
    goto $bb10;

  $bb10:
    call {:si_unique_call 6472} $i105, $i106, $i107, $i108, $p109, $i110, $i111, $i113, $i114, $i112, $i116, $i117 := aty_valid_pll_ct_loop_$bb10($p7, $i105, $i106, $i107, $i108, $p109, $i110, $i111, $i113, $i114, $i112, $i116, $i117);
    LoopBound_AssertVar := false;
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2430;

  corral_source_split_2430:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p7);
    call {:si_unique_call 6473} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1345} boogie_si_record_i64($i107);
    goto corral_source_split_2432;

  corral_source_split_2432:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 1040);
    call {:si_unique_call 6474} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1346} boogie_si_record_i64($i108);
    goto corral_source_split_2433;

  corral_source_split_2433:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_2434;

  corral_source_split_2434:
    assume {:verifier.code 0} true;
    havoc $i110;
    call {:si_unique_call 6475} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1347} boogie_si_record_i32($i110);
    goto corral_source_split_2435;

  corral_source_split_2435:
    assume {:verifier.code 0} true;
    $i111 := $sgt.i32($i105, $i110);
    goto corral_source_split_2436;

  corral_source_split_2436:
    assume {:verifier.code 0} true;
    $i112 := $i106;
    assume {:branchcond $i111} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i111 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2441;

  corral_source_split_2441:
    assume {:verifier.code 0} true;
    $i115 := $i112;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto corral_source_split_2447;

  corral_source_split_2447:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p2);
    call {:si_unique_call 6476} {:cexpr "__cil_tmp79"} {:si_old_unique_call 1348} boogie_si_record_i64($i118);
    goto corral_source_split_2448;

  corral_source_split_2448:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 5);
    call {:si_unique_call 6477} {:cexpr "__cil_tmp80"} {:si_old_unique_call 1349} boogie_si_record_i64($i119);
    goto corral_source_split_2449;

  corral_source_split_2449:
    assume {:verifier.code 0} true;
    $i120 := $shl.i32($i115, 4);
    call {:si_unique_call 6478} {:cexpr "__cil_tmp81"} {:si_old_unique_call 1350} boogie_si_record_i32($i120);
    goto corral_source_split_2450;

  corral_source_split_2450:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p2);
    call {:si_unique_call 6479} {:cexpr "__cil_tmp82"} {:si_old_unique_call 1351} boogie_si_record_i64($i121);
    goto corral_source_split_2451;

  corral_source_split_2451:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, 5);
    call {:si_unique_call 6480} {:cexpr "__cil_tmp83"} {:si_old_unique_call 1352} boogie_si_record_i64($i122);
    goto corral_source_split_2452;

  corral_source_split_2452:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_2453;

  corral_source_split_2453:
    assume {:verifier.code 0} true;
    havoc $i124;
    call {:si_unique_call 6481} {:cexpr "__cil_tmp84"} {:si_old_unique_call 1353} boogie_si_record_i8($i124);
    goto corral_source_split_2454;

  corral_source_split_2454:
    assume {:verifier.code 0} true;
    $i125 := $zext.i8.i32($i124);
    call {:si_unique_call 6482} {:cexpr "__cil_tmp85"} {:si_old_unique_call 1354} boogie_si_record_i32($i125);
    goto corral_source_split_2455;

  corral_source_split_2455:
    assume {:verifier.code 0} true;
    $i126 := $or.i32($i125, $i120);
    call {:si_unique_call 6483} {:cexpr "__cil_tmp86"} {:si_old_unique_call 1355} boogie_si_record_i32($i126);
    goto corral_source_split_2456;

  corral_source_split_2456:
    assume {:verifier.code 0} true;
    $i127 := $trunc.i32.i8($i126);
    goto corral_source_split_2457;

  corral_source_split_2457:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i119);
    goto corral_source_split_2458;

  corral_source_split_2458:
    assume {:verifier.code 0} true;
    goto corral_source_split_2459;

  corral_source_split_2459:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb12:
    assume $i111 == 1;
    goto corral_source_split_2438;

  corral_source_split_2438:
    assume {:verifier.code 0} true;
    $i113 := $slt.i32($i106, 2);
    goto corral_source_split_2439;

  corral_source_split_2439:
    assume {:verifier.code 0} true;
    $i114 := $i106;
    assume {:branchcond $i113} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i113 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2445;

  corral_source_split_2445:
    assume {:verifier.code 0} true;
    $i115 := $i114;
    goto $bb17;

  $bb14:
    assume $i113 == 1;
    goto corral_source_split_2443;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    $i116 := $ashr.i32($i105, 1);
    call {:si_unique_call 6484} {:cexpr "ecp"} {:si_old_unique_call 1356} boogie_si_record_i32($i116);
    goto corral_source_split_2461;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    $i117 := $add.i32($i106, 1);
    call {:si_unique_call 6485} {:cexpr "ecp_div"} {:si_old_unique_call 1357} boogie_si_record_i32($i117);
    goto corral_source_split_2462;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    $i105, $i106 := $i116, $i117;
    goto corral_source_split_2462_dummy;

  corral_source_split_2462_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb4:
    assume $i21 == 1;
    goto corral_source_split_2335;

  corral_source_split_2335:
    assume {:verifier.code 0} true;
    call {:si_unique_call 6486} {:si_old_unique_call 1289} $i22 := printk.ref(.str.79);
    goto corral_source_split_2336;

  corral_source_split_2336:
    assume {:verifier.code 0} true;
    $i20 := $sub.i32(0, 22);
    goto $bb3;

  $bb1:
    assume $i18 == 1;
    goto corral_source_split_2327;

  corral_source_split_2327:
    assume {:verifier.code 0} true;
    call {:si_unique_call 6487} {:si_old_unique_call 1288} $i19 := printk.ref(.str.79);
    goto corral_source_split_2328;

  corral_source_split_2328:
    assume {:verifier.code 0} true;
    $i20 := $sub.i32(0, 22);
    goto $bb3;
}



implementation {:LB_Mapping "aty_dsp_gt_loop_$bb16"} {:entrypoint} aty_dsp_gt_EntryCopy_aty_dsp_gt_loop_$bb16($p0: ref, $i1: i32, $p2: ref) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $i44: i8;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i16;
  var $i59: i32;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i16;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i8;
  var $i102: i1;
  var $i103: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i32;
  var $i107: i8;
  var $i108: i32;
  var $i109: i1;
  var $i111: i32;
  var $i112: i1;
  var $i113: i8;
  var $i110: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i8;
  var $i117: i32;
  var $i118: i32;
  var $i119: i32;
  var $i120: i8;
  var $i121: i32;
  var $i122: i32;
  var $i123: i32;
  var $i124: i32;
  var $i125: i32;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $i132: i32;
  var $i133: i32;
  var $i134: i32;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $i140: i32;
  var $i141: i32;
  var $i142: i32;
  var $i143: i1;
  var $i144: i32;
  var $i145: i32;
  var $i146: i64;
  var $i147: i64;
  var $p148: ref;
  var $i149: i32;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i32;
  var $i154: i32;
  var $i155: i32;
  var $i156: i32;
  var $i157: i32;
  var $i158: i32;
  var $i159: i32;
  var $i160: i32;
  var $i161: i32;
  var $i162: i32;
  var $i163: i32;
  var $i164: i32;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i170: i32;
  var $i171: i32;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i32;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i32;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i64;
  var $i184: i64;
  var $i185: i32;
  var $i186: i32;
  var $p187: ref;
  var $i188: i64;
  var $i189: i64;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i32;
  var $p199: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 6488} {:cexpr "aty_dsp_gt:arg:bpp"} {:si_old_unique_call 1358} boogie_si_record_i32($i1);
    goto corral_source_split_2464;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    call {:si_unique_call 6489} {:cexpr "__cil_tmp16"} {:si_old_unique_call 1359} boogie_si_record_i64($i3);
    goto corral_source_split_2465;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 40);
    call {:si_unique_call 6490} {:cexpr "__cil_tmp17"} {:si_old_unique_call 1360} boogie_si_record_i64($i4);
    goto corral_source_split_2466;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_2467;

  corral_source_split_2467:
    assume {:verifier.code 0} true;
    havoc $i6;
    call {:si_unique_call 6491} {:cexpr "__cil_tmp18"} {:si_old_unique_call 1361} boogie_si_record_i8($i6);
    goto corral_source_split_2468;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    $i7 := $zext.i8.i32($i6);
    call {:si_unique_call 6492} {:cexpr "__cil_tmp19"} {:si_old_unique_call 1362} boogie_si_record_i32($i7);
    goto corral_source_split_2469;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p2);
    call {:si_unique_call 6493} {:cexpr "__cil_tmp20"} {:si_old_unique_call 1363} boogie_si_record_i64($i8);
    goto corral_source_split_2470;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 2);
    call {:si_unique_call 6494} {:cexpr "__cil_tmp21"} {:si_old_unique_call 1364} boogie_si_record_i64($i9);
    goto corral_source_split_2471;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_2472;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 6495} {:cexpr "__cil_tmp22"} {:si_old_unique_call 1365} boogie_si_record_i8($i11);
    goto corral_source_split_2473;

  corral_source_split_2473:
    assume {:verifier.code 0} true;
    $i12 := $zext.i8.i32($i11);
    call {:si_unique_call 6496} {:cexpr "__cil_tmp23"} {:si_old_unique_call 1366} boogie_si_record_i32($i12);
    goto corral_source_split_2474;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    $i13 := $mul.i32($i12, $i7);
    call {:si_unique_call 6497} {:cexpr "multiplier"} {:si_old_unique_call 1367} boogie_si_record_i32($i13);
    goto corral_source_split_2475;

  corral_source_split_2475:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p2);
    call {:si_unique_call 6498} {:cexpr "__cil_tmp24"} {:si_old_unique_call 1368} boogie_si_record_i64($i14);
    goto corral_source_split_2476;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 36);
    call {:si_unique_call 6499} {:cexpr "__cil_tmp25"} {:si_old_unique_call 1369} boogie_si_record_i64($i15);
    goto corral_source_split_2477;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_2478;

  corral_source_split_2478:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 6500} {:cexpr "__cil_tmp26"} {:si_old_unique_call 1370} boogie_si_record_i8($i17);
    goto corral_source_split_2479;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    $i18 := $zext.i8.i32($i17);
    call {:si_unique_call 6501} {:cexpr "__cil_tmp27"} {:si_old_unique_call 1371} boogie_si_record_i32($i18);
    goto corral_source_split_2480;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p2);
    call {:si_unique_call 6502} {:cexpr "__cil_tmp28"} {:si_old_unique_call 1372} boogie_si_record_i64($i19);
    goto corral_source_split_2481;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 7);
    call {:si_unique_call 6503} {:cexpr "__cil_tmp29"} {:si_old_unique_call 1373} boogie_si_record_i64($i20);
    goto corral_source_split_2482;

  corral_source_split_2482:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_2483;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 6504} {:cexpr "__cil_tmp30"} {:si_old_unique_call 1374} boogie_si_record_i8($i22);
    goto corral_source_split_2484;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i32($i22);
    call {:si_unique_call 6505} {:cexpr "__cil_tmp31"} {:si_old_unique_call 1375} boogie_si_record_i32($i23);
    goto corral_source_split_2485;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    $i24 := $mul.i32($i23, $i18);
    call {:si_unique_call 6506} {:cexpr "divider"} {:si_old_unique_call 1376} boogie_si_record_i32($i24);
    goto corral_source_split_2486;

  corral_source_split_2486:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p2);
    call {:si_unique_call 6507} {:cexpr "__cil_tmp32"} {:si_old_unique_call 1377} boogie_si_record_i64($i25);
    goto corral_source_split_2487;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 32);
    call {:si_unique_call 6508} {:cexpr "__cil_tmp33"} {:si_old_unique_call 1378} boogie_si_record_i64($i26);
    goto corral_source_split_2488;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_2489;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    havoc $i28;
    call {:si_unique_call 6509} {:cexpr "ras_multiplier"} {:si_old_unique_call 1379} boogie_si_record_i32($i28);
    goto corral_source_split_2490;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    $i29 := $uge.i32($i1, 8);
    goto corral_source_split_2491;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    assume {:branchcond $i29} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i29 == 1);
    assume {:verifier.code 0} true;
    $i32 := $i24;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2497;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p2);
    call {:si_unique_call 6510} {:cexpr "__cil_tmp35"} {:si_old_unique_call 1382} boogie_si_record_i64($i33);
    goto corral_source_split_2498;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 37);
    call {:si_unique_call 6511} {:cexpr "__cil_tmp36"} {:si_old_unique_call 1383} boogie_si_record_i64($i34);
    goto corral_source_split_2499;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_2500;

  corral_source_split_2500:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 6512} {:cexpr "__cil_tmp37"} {:si_old_unique_call 1384} boogie_si_record_i8($i36);
    goto corral_source_split_2501;

  corral_source_split_2501:
    assume {:verifier.code 0} true;
    $i37 := $zext.i8.i32($i36);
    call {:si_unique_call 6513} {:cexpr "__cil_tmp38"} {:si_old_unique_call 1385} boogie_si_record_i32($i37);
    goto corral_source_split_2502;

  corral_source_split_2502:
    assume {:verifier.code 0} true;
    $i38 := $sub.i32(4, $i37);
    call {:si_unique_call 6514} {:cexpr "__cil_tmp39"} {:si_old_unique_call 1386} boogie_si_record_i32($i38);
    goto corral_source_split_2503;

  corral_source_split_2503:
    assume {:verifier.code 0} true;
    $i39 := $trunc.i32.i8($i38);
    call {:si_unique_call 6515} {:cexpr "vshift"} {:si_old_unique_call 1387} boogie_si_record_i8($i39);
    goto corral_source_split_2504;

  corral_source_split_2504:
    assume {:verifier.code 0} true;
    $i40 := $eq.i32($i1, 0);
    goto corral_source_split_2505;

  corral_source_split_2505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i40} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i40 == 1);
    assume {:verifier.code 0} true;
    $i44 := $i39;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_2512;

  corral_source_split_2512:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p2);
    call {:si_unique_call 6516} {:cexpr "__cil_tmp42"} {:si_old_unique_call 1391} boogie_si_record_i64($i45);
    goto corral_source_split_2513;

  corral_source_split_2513:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 44);
    call {:si_unique_call 6517} {:cexpr "__cil_tmp43"} {:si_old_unique_call 1392} boogie_si_record_i64($i46);
    goto corral_source_split_2514;

  corral_source_split_2514:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_2515;

  corral_source_split_2515:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 6518} {:cexpr "__cil_tmp44"} {:si_old_unique_call 1393} boogie_si_record_i32($i48);
    goto corral_source_split_2516;

  corral_source_split_2516:
    assume {:verifier.code 0} true;
    $i49 := $ne.i32($i48, 0);
    goto corral_source_split_2517;

  corral_source_split_2517:
    assume {:verifier.code 0} true;
    assume {:branchcond $i49} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i49 == 1);
    assume {:verifier.code 0} true;
    $i79, $i80, $i81, $i82 := $i32, $i13, $i28, 1;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2550;

  corral_source_split_2550:
    assume {:verifier.code 0} true;
    $i83, $i84 := $i79, $i80;
    goto $bb10;

  $bb10:
    call {:si_unique_call 6519} $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91 := aty_dsp_gt_loop_$bb10_PassiveCopy($i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91);
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2552;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i85 := $or.i32($i84, $i83);
    call {:si_unique_call 6520} {:cexpr "__cil_tmp64"} {:si_old_unique_call 1416} boogie_si_record_i32($i85);
    goto corral_source_split_2554;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    $i86 := $and.i32($i85, 1);
    call {:si_unique_call 6521} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1417} boogie_si_record_i32($i86);
    goto corral_source_split_2555;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    $i87 := $eq.i32($i86, 0);
    goto corral_source_split_2556;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    $i88, $i89 := $i83, $i84;
    assume {:branchcond $i87} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i87 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2560;

  corral_source_split_2560:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i92 := $zext.i8.i32($i44);
    call {:si_unique_call 6522} {:cexpr "__cil_tmp66"} {:si_old_unique_call 1420} boogie_si_record_i32($i92);
    goto corral_source_split_2565;

  corral_source_split_2565:
    assume {:verifier.code 0} true;
    $i93 := $p2i.ref.i64($p2);
    call {:si_unique_call 6523} {:cexpr "__cil_tmp67"} {:si_old_unique_call 1421} boogie_si_record_i64($i93);
    goto corral_source_split_2566;

  corral_source_split_2566:
    assume {:verifier.code 0} true;
    $i94 := $add.i64($i93, 24);
    call {:si_unique_call 6524} {:cexpr "__cil_tmp68"} {:si_old_unique_call 1422} boogie_si_record_i64($i94);
    goto corral_source_split_2567;

  corral_source_split_2567:
    assume {:verifier.code 0} true;
    $p95 := $i2p.i64.ref($i94);
    goto corral_source_split_2568;

  corral_source_split_2568:
    assume {:verifier.code 0} true;
    havoc $i96;
    call {:si_unique_call 6525} {:cexpr "__cil_tmp69"} {:si_old_unique_call 1423} boogie_si_record_i32($i96);
    goto corral_source_split_2569;

  corral_source_split_2569:
    assume {:verifier.code 0} true;
    $i97 := $mul.i32($i89, $i96);
    call {:si_unique_call 6526} {:cexpr "__cil_tmp70"} {:si_old_unique_call 1424} boogie_si_record_i32($i97);
    goto corral_source_split_2570;

  corral_source_split_2570:
    assume {:verifier.code 0} true;
    $i98 := $shl.i32($i97, $i92);
    call {:si_unique_call 6527} {:cexpr "__cil_tmp71"} {:si_old_unique_call 1425} boogie_si_record_i32($i98);
    goto corral_source_split_2571;

  corral_source_split_2571:
    assume {:verifier.code 0} true;
    $i99 := $udiv.i32($i98, $i88);
    call {:si_unique_call 6528} {:cexpr "tmp___7"} {:si_old_unique_call 1426} boogie_si_record_i32($i99);
    goto corral_source_split_2572;

  corral_source_split_2572:
    assume {:verifier.code 0} true;
    $i100, $i101 := $i99, $sub.i8(0, 5);
    goto $bb16;

  $bb16:
    call {:si_unique_call 6529} $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107 := aty_dsp_gt_loop_$bb16($i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107);
    LoopBound_AssertVar := false;
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2574;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i102 := $ne.i32($i100, 0);
    goto corral_source_split_2576;

  corral_source_split_2576:
    assume {:verifier.code 0} true;
    $i103 := $i101;
    assume {:branchcond $i102} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i102 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2580;

  corral_source_split_2580:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i108 := $sext.i8.i32($i103);
    call {:si_unique_call 6530} {:cexpr "__cil_tmp74"} {:si_old_unique_call 1431} boogie_si_record_i32($i108);
    goto corral_source_split_2587;

  corral_source_split_2587:
    assume {:verifier.code 0} true;
    $i109 := $slt.i32($i108, 0);
    goto corral_source_split_2588;

  corral_source_split_2588:
    assume {:verifier.code 0} true;
    assume {:branchcond $i109} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i109 == 1);
    goto corral_source_split_2592;

  corral_source_split_2592:
    assume {:verifier.code 0} true;
    $i111 := $sext.i8.i32($i103);
    call {:si_unique_call 6531} {:cexpr "__cil_tmp75"} {:si_old_unique_call 1432} boogie_si_record_i32($i111);
    goto corral_source_split_2593;

  corral_source_split_2593:
    assume {:verifier.code 0} true;
    $i112 := $sgt.i32($i111, 7);
    goto corral_source_split_2594;

  corral_source_split_2594:
    assume {:verifier.code 0} true;
    assume {:branchcond $i112} true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i112 == 1);
    assume {:verifier.code 0} true;
    $i113 := $i103;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i110 := $i113;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_2596;

  corral_source_split_2596:
    assume {:verifier.code 0} true;
    $i114 := $sext.i8.i32($i110);
    call {:si_unique_call 6532} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1433} boogie_si_record_i32($i114);
    goto corral_source_split_2597;

  corral_source_split_2597:
    assume {:verifier.code 0} true;
    $i115 := $sub.i32(6, $i114);
    call {:si_unique_call 6533} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1434} boogie_si_record_i32($i115);
    goto corral_source_split_2598;

  corral_source_split_2598:
    assume {:verifier.code 0} true;
    $i116 := $trunc.i32.i8($i115);
    call {:si_unique_call 6534} {:cexpr "xshift"} {:si_old_unique_call 1435} boogie_si_record_i8($i116);
    goto corral_source_split_2599;

  corral_source_split_2599:
    assume {:verifier.code 0} true;
    $i117 := $zext.i8.i32($i116);
    call {:si_unique_call 6535} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1436} boogie_si_record_i32($i117);
    goto corral_source_split_2600;

  corral_source_split_2600:
    assume {:verifier.code 0} true;
    $i118 := $zext.i8.i32($i44);
    call {:si_unique_call 6536} {:cexpr "__cil_tmp79"} {:si_old_unique_call 1437} boogie_si_record_i32($i118);
    goto corral_source_split_2601;

  corral_source_split_2601:
    assume {:verifier.code 0} true;
    $i119 := $add.i32($i118, $i117);
    call {:si_unique_call 6537} {:cexpr "__cil_tmp80"} {:si_old_unique_call 1438} boogie_si_record_i32($i119);
    goto corral_source_split_2602;

  corral_source_split_2602:
    assume {:verifier.code 0} true;
    $i120 := $trunc.i32.i8($i119);
    call {:si_unique_call 6538} {:cexpr "vshift"} {:si_old_unique_call 1439} boogie_si_record_i8($i120);
    goto corral_source_split_2603;

  corral_source_split_2603:
    assume {:verifier.code 0} true;
    $i121 := $zext.i8.i32($i116);
    call {:si_unique_call 6539} {:cexpr "__cil_tmp81"} {:si_old_unique_call 1440} boogie_si_record_i32($i121);
    goto corral_source_split_2604;

  corral_source_split_2604:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i32($i120);
    call {:si_unique_call 6540} {:cexpr "__cil_tmp82"} {:si_old_unique_call 1441} boogie_si_record_i32($i122);
    goto corral_source_split_2605;

  corral_source_split_2605:
    assume {:verifier.code 0} true;
    $i123 := $sub.i32($i122, $i121);
    call {:si_unique_call 6541} {:cexpr "__cil_tmp83"} {:si_old_unique_call 1442} boogie_si_record_i32($i123);
    goto corral_source_split_2606;

  corral_source_split_2606:
    assume {:verifier.code 0} true;
    $i124 := $shl.i32(1, $i123);
    call {:si_unique_call 6542} {:cexpr "__cil_tmp84"} {:si_old_unique_call 1443} boogie_si_record_i32($i124);
    goto corral_source_split_2607;

  corral_source_split_2607:
    assume {:verifier.code 0} true;
    $i125 := $zext.i8.i32($i120);
    call {:si_unique_call 6543} {:cexpr "__cil_tmp86"} {:si_old_unique_call 1444} boogie_si_record_i32($i125);
    goto corral_source_split_2608;

  corral_source_split_2608:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p2);
    call {:si_unique_call 6544} {:cexpr "__cil_tmp87"} {:si_old_unique_call 1445} boogie_si_record_i64($i126);
    goto corral_source_split_2609;

  corral_source_split_2609:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, 24);
    call {:si_unique_call 6545} {:cexpr "__cil_tmp88"} {:si_old_unique_call 1446} boogie_si_record_i64($i127);
    goto corral_source_split_2610;

  corral_source_split_2610:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_2611;

  corral_source_split_2611:
    assume {:verifier.code 0} true;
    havoc $i129;
    call {:si_unique_call 6546} {:cexpr "__cil_tmp89"} {:si_old_unique_call 1447} boogie_si_record_i32($i129);
    goto corral_source_split_2612;

  corral_source_split_2612:
    assume {:verifier.code 0} true;
    $i130 := $sub.i32($i129, 1);
    call {:si_unique_call 6547} {:cexpr "__cil_tmp90"} {:si_old_unique_call 1448} boogie_si_record_i32($i130);
    goto corral_source_split_2613;

  corral_source_split_2613:
    assume {:verifier.code 0} true;
    $i131 := $mul.i32($i89, $i130);
    call {:si_unique_call 6548} {:cexpr "__cil_tmp91"} {:si_old_unique_call 1449} boogie_si_record_i32($i131);
    goto corral_source_split_2614;

  corral_source_split_2614:
    assume {:verifier.code 0} true;
    $i132 := $shl.i32($i131, $i125);
    call {:si_unique_call 6549} {:cexpr "__cil_tmp92"} {:si_old_unique_call 1450} boogie_si_record_i32($i132);
    goto corral_source_split_2615;

  corral_source_split_2615:
    assume {:verifier.code 0} true;
    $i133 := $udiv.i32($i132, $i88);
    call {:si_unique_call 6550} {:cexpr "__cil_tmp93"} {:si_old_unique_call 1451} boogie_si_record_i32($i133);
    goto corral_source_split_2616;

  corral_source_split_2616:
    assume {:verifier.code 0} true;
    $i134 := $sub.i32($i133, $i124);
    call {:si_unique_call 6551} {:cexpr "dsp_off"} {:si_old_unique_call 1452} boogie_si_record_i32($i134);
    goto corral_source_split_2617;

  corral_source_split_2617:
    assume {:verifier.code 0} true;
    $i135 := $zext.i8.i32($i120);
    call {:si_unique_call 6552} {:cexpr "__cil_tmp94"} {:si_old_unique_call 1453} boogie_si_record_i32($i135);
    goto corral_source_split_2618;

  corral_source_split_2618:
    assume {:verifier.code 0} true;
    $i136 := $shl.i32($i89, $i135);
    call {:si_unique_call 6553} {:cexpr "__cil_tmp95"} {:si_old_unique_call 1454} boogie_si_record_i32($i136);
    goto corral_source_split_2619;

  corral_source_split_2619:
    assume {:verifier.code 0} true;
    $i137 := $add.i32($i136, $i88);
    call {:si_unique_call 6554} {:cexpr "__cil_tmp96"} {:si_old_unique_call 1455} boogie_si_record_i32($i137);
    goto corral_source_split_2620;

  corral_source_split_2620:
    assume {:verifier.code 0} true;
    $i138 := $udiv.i32($i137, $i88);
    call {:si_unique_call 6555} {:cexpr "dsp_on"} {:si_old_unique_call 1456} boogie_si_record_i32($i138);
    goto corral_source_split_2621;

  corral_source_split_2621:
    assume {:verifier.code 0} true;
    $i139 := $zext.i8.i32($i116);
    call {:si_unique_call 6556} {:cexpr "__cil_tmp97"} {:si_old_unique_call 1457} boogie_si_record_i32($i139);
    goto corral_source_split_2622;

  corral_source_split_2622:
    assume {:verifier.code 0} true;
    $i140 := $shl.i32($i81, $i139);
    call {:si_unique_call 6557} {:cexpr "__cil_tmp98"} {:si_old_unique_call 1458} boogie_si_record_i32($i140);
    goto corral_source_split_2623;

  corral_source_split_2623:
    assume {:verifier.code 0} true;
    $i141 := $add.i32($i140, $i82);
    call {:si_unique_call 6558} {:cexpr "__cil_tmp99"} {:si_old_unique_call 1459} boogie_si_record_i32($i141);
    goto corral_source_split_2624;

  corral_source_split_2624:
    assume {:verifier.code 0} true;
    $i142 := $udiv.i32($i141, $i82);
    call {:si_unique_call 6559} {:cexpr "tmp___7"} {:si_old_unique_call 1460} boogie_si_record_i32($i142);
    goto corral_source_split_2625;

  corral_source_split_2625:
    assume {:verifier.code 0} true;
    $i143 := $ult.i32($i138, $i142);
    goto corral_source_split_2626;

  corral_source_split_2626:
    assume {:verifier.code 0} true;
    assume {:branchcond $i143} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i143 == 1);
    assume {:verifier.code 0} true;
    $i144 := $i138;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_2632;

  corral_source_split_2632:
    assume {:verifier.code 0} true;
    $i145 := $zext.i8.i32($i116);
    call {:si_unique_call 6560} {:cexpr "__cil_tmp100"} {:si_old_unique_call 1461} boogie_si_record_i32($i145);
    goto corral_source_split_2633;

  corral_source_split_2633:
    assume {:verifier.code 0} true;
    $i146 := $p2i.ref.i64($p2);
    call {:si_unique_call 6561} {:cexpr "__cil_tmp101"} {:si_old_unique_call 1462} boogie_si_record_i64($i146);
    goto corral_source_split_2634;

  corral_source_split_2634:
    assume {:verifier.code 0} true;
    $i147 := $add.i64($i146, 28);
    call {:si_unique_call 6562} {:cexpr "__cil_tmp102"} {:si_old_unique_call 1463} boogie_si_record_i64($i147);
    goto corral_source_split_2635;

  corral_source_split_2635:
    assume {:verifier.code 0} true;
    $p148 := $i2p.i64.ref($i147);
    goto corral_source_split_2636;

  corral_source_split_2636:
    assume {:verifier.code 0} true;
    havoc $i149;
    call {:si_unique_call 6563} {:cexpr "__cil_tmp103"} {:si_old_unique_call 1464} boogie_si_record_i32($i149);
    goto corral_source_split_2637;

  corral_source_split_2637:
    assume {:verifier.code 0} true;
    $i150 := $shl.i32($i149, $i145);
    call {:si_unique_call 6564} {:cexpr "__cil_tmp104"} {:si_old_unique_call 1465} boogie_si_record_i32($i150);
    goto corral_source_split_2638;

  corral_source_split_2638:
    assume {:verifier.code 0} true;
    $i151 := $mul.i32($i142, 2);
    call {:si_unique_call 6565} {:cexpr "__cil_tmp105"} {:si_old_unique_call 1466} boogie_si_record_i32($i151);
    goto corral_source_split_2639;

  corral_source_split_2639:
    assume {:verifier.code 0} true;
    $i152 := $add.i32($i144, $i151);
    call {:si_unique_call 6566} {:cexpr "__cil_tmp106"} {:si_old_unique_call 1467} boogie_si_record_i32($i152);
    goto corral_source_split_2640;

  corral_source_split_2640:
    assume {:verifier.code 0} true;
    $i153 := $add.i32($i152, $i150);
    call {:si_unique_call 6567} {:cexpr "dsp_on"} {:si_old_unique_call 1468} boogie_si_record_i32($i153);
    goto corral_source_split_2641;

  corral_source_split_2641:
    assume {:verifier.code 0} true;
    $i154 := $sext.i8.i32($i110);
    call {:si_unique_call 6568} {:cexpr "__cil_tmp107"} {:si_old_unique_call 1469} boogie_si_record_i32($i154);
    goto corral_source_split_2642;

  corral_source_split_2642:
    assume {:verifier.code 0} true;
    $i155 := $sub.i32(7, $i154);
    call {:si_unique_call 6569} {:cexpr "__cil_tmp108"} {:si_old_unique_call 1470} boogie_si_record_i32($i155);
    goto corral_source_split_2643;

  corral_source_split_2643:
    assume {:verifier.code 0} true;
    $i156 := $shl.i32(1, $i155);
    call {:si_unique_call 6570} {:cexpr "__cil_tmp109"} {:si_old_unique_call 1471} boogie_si_record_i32($i156);
    goto corral_source_split_2644;

  corral_source_split_2644:
    assume {:verifier.code 0} true;
    $i157 := $sub.i32($i156, 1);
    call {:si_unique_call 6571} {:cexpr "__cil_tmp110"} {:si_old_unique_call 1472} boogie_si_record_i32($i157);
    goto corral_source_split_2645;

  corral_source_split_2645:
    assume {:verifier.code 0} true;
    $i158 := $ashr.i32($i157, 1);
    call {:si_unique_call 6572} {:cexpr "__cil_tmp111"} {:si_old_unique_call 1473} boogie_si_record_i32($i158);
    goto corral_source_split_2646;

  corral_source_split_2646:
    assume {:verifier.code 0} true;
    $i159 := $add.i32($i158, 1);
    call {:si_unique_call 6573} {:cexpr "__cil_tmp112"} {:si_old_unique_call 1474} boogie_si_record_i32($i159);
    goto corral_source_split_2647;

  corral_source_split_2647:
    assume {:verifier.code 0} true;
    $i160 := $add.i32($i158, 1);
    call {:si_unique_call 6574} {:cexpr "__cil_tmp113"} {:si_old_unique_call 1475} boogie_si_record_i32($i160);
    goto corral_source_split_2648;

  corral_source_split_2648:
    assume {:verifier.code 0} true;
    $i161 := $add.i32($i153, $i158);
    call {:si_unique_call 6575} {:cexpr "__cil_tmp114"} {:si_old_unique_call 1476} boogie_si_record_i32($i161);
    goto corral_source_split_2649;

  corral_source_split_2649:
    assume {:verifier.code 0} true;
    $i162 := $udiv.i32($i161, $i160);
    call {:si_unique_call 6576} {:cexpr "__cil_tmp115"} {:si_old_unique_call 1477} boogie_si_record_i32($i162);
    goto corral_source_split_2650;

  corral_source_split_2650:
    assume {:verifier.code 0} true;
    $i163 := $mul.i32($i162, $i159);
    call {:si_unique_call 6577} {:cexpr "dsp_on"} {:si_old_unique_call 1478} boogie_si_record_i32($i163);
    goto corral_source_split_2651;

  corral_source_split_2651:
    assume {:verifier.code 0} true;
    $i164 := $add.i32($i158, 1);
    call {:si_unique_call 6578} {:cexpr "__cil_tmp116"} {:si_old_unique_call 1479} boogie_si_record_i32($i164);
    goto corral_source_split_2652;

  corral_source_split_2652:
    assume {:verifier.code 0} true;
    $i165 := $add.i32($i158, 1);
    call {:si_unique_call 6579} {:cexpr "__cil_tmp117"} {:si_old_unique_call 1480} boogie_si_record_i32($i165);
    goto corral_source_split_2653;

  corral_source_split_2653:
    assume {:verifier.code 0} true;
    $i166 := $udiv.i32($i134, $i165);
    call {:si_unique_call 6580} {:cexpr "__cil_tmp118"} {:si_old_unique_call 1481} boogie_si_record_i32($i166);
    goto corral_source_split_2654;

  corral_source_split_2654:
    assume {:verifier.code 0} true;
    $i167 := $mul.i32($i166, $i164);
    call {:si_unique_call 6581} {:cexpr "__cil_tmp119"} {:si_old_unique_call 1482} boogie_si_record_i32($i167);
    goto corral_source_split_2655;

  corral_source_split_2655:
    assume {:verifier.code 0} true;
    $i168 := $uge.i32($i163, $i167);
    goto corral_source_split_2656;

  corral_source_split_2656:
    assume {:verifier.code 0} true;
    assume {:branchcond $i168} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i168 == 1);
    assume {:verifier.code 0} true;
    $i177 := $i163;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto corral_source_split_2668;

  corral_source_split_2668:
    assume {:verifier.code 0} true;
    $i178 := $zext.i8.i32($i120);
    call {:si_unique_call 6582} {:cexpr "__cil_tmp126"} {:si_old_unique_call 1491} boogie_si_record_i32($i178);
    goto corral_source_split_2669;

  corral_source_split_2669:
    assume {:verifier.code 0} true;
    $i179 := $add.i32($i178, 5);
    call {:si_unique_call 6583} {:cexpr "__cil_tmp127"} {:si_old_unique_call 1492} boogie_si_record_i32($i179);
    goto corral_source_split_2670;

  corral_source_split_2670:
    assume {:verifier.code 0} true;
    $i180 := $shl.i32($i89, $i179);
    call {:si_unique_call 6584} {:cexpr "__cil_tmp128"} {:si_old_unique_call 1493} boogie_si_record_i32($i180);
    goto corral_source_split_2671;

  corral_source_split_2671:
    assume {:verifier.code 0} true;
    $i181 := $add.i32($i180, $i88);
    call {:si_unique_call 6585} {:cexpr "__cil_tmp129"} {:si_old_unique_call 1494} boogie_si_record_i32($i181);
    goto corral_source_split_2672;

  corral_source_split_2672:
    assume {:verifier.code 0} true;
    $i182 := $udiv.i32($i181, $i88);
    call {:si_unique_call 6586} {:cexpr "dsp_xclks"} {:si_old_unique_call 1495} boogie_si_record_i32($i182);
    goto corral_source_split_2673;

  corral_source_split_2673:
    assume {:verifier.code 0} true;
    $i183 := $p2i.ref.i64($p2);
    call {:si_unique_call 6587} {:cexpr "__cil_tmp130"} {:si_old_unique_call 1496} boogie_si_record_i64($i183);
    goto corral_source_split_2674;

  corral_source_split_2674:
    assume {:verifier.code 0} true;
    $i184 := $add.i64($i183, 16);
    call {:si_unique_call 6588} {:cexpr "__cil_tmp131"} {:si_old_unique_call 1497} boogie_si_record_i64($i184);
    goto corral_source_split_2675;

  corral_source_split_2675:
    assume {:verifier.code 0} true;
    $i185 := $shl.i32($i177, 16);
    call {:si_unique_call 6589} {:cexpr "__cil_tmp132"} {:si_old_unique_call 1498} boogie_si_record_i32($i185);
    goto corral_source_split_2676;

  corral_source_split_2676:
    assume {:verifier.code 0} true;
    $i186 := $add.i32($i185, $i134);
    goto corral_source_split_2677;

  corral_source_split_2677:
    assume {:verifier.code 0} true;
    $p187 := $i2p.i64.ref($i184);
    goto corral_source_split_2678;

  corral_source_split_2678:
    assume {:verifier.code 0} true;
    goto corral_source_split_2679;

  corral_source_split_2679:
    assume {:verifier.code 0} true;
    $i188 := $p2i.ref.i64($p2);
    call {:si_unique_call 6590} {:cexpr "__cil_tmp133"} {:si_old_unique_call 1499} boogie_si_record_i64($i188);
    goto corral_source_split_2680;

  corral_source_split_2680:
    assume {:verifier.code 0} true;
    $i189 := $add.i64($i188, 12);
    call {:si_unique_call 6591} {:cexpr "__cil_tmp134"} {:si_old_unique_call 1500} boogie_si_record_i64($i189);
    goto corral_source_split_2681;

  corral_source_split_2681:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p2);
    call {:si_unique_call 6592} {:cexpr "__cil_tmp135"} {:si_old_unique_call 1501} boogie_si_record_i64($i190);
    goto corral_source_split_2682;

  corral_source_split_2682:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 20);
    call {:si_unique_call 6593} {:cexpr "__cil_tmp136"} {:si_old_unique_call 1502} boogie_si_record_i64($i191);
    goto corral_source_split_2683;

  corral_source_split_2683:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_2684;

  corral_source_split_2684:
    assume {:verifier.code 0} true;
    havoc $i193;
    call {:si_unique_call 6594} {:cexpr "__cil_tmp137"} {:si_old_unique_call 1503} boogie_si_record_i32($i193);
    goto corral_source_split_2685;

  corral_source_split_2685:
    assume {:verifier.code 0} true;
    $i194 := $shl.i32($i193, 16);
    call {:si_unique_call 6595} {:cexpr "__cil_tmp138"} {:si_old_unique_call 1504} boogie_si_record_i32($i194);
    goto corral_source_split_2686;

  corral_source_split_2686:
    assume {:verifier.code 0} true;
    $i195 := $sext.i8.i32($i110);
    call {:si_unique_call 6596} {:cexpr "__cil_tmp139"} {:si_old_unique_call 1505} boogie_si_record_i32($i195);
    goto corral_source_split_2687;

  corral_source_split_2687:
    assume {:verifier.code 0} true;
    $i196 := $shl.i32($i195, 20);
    call {:si_unique_call 6597} {:cexpr "__cil_tmp140"} {:si_old_unique_call 1506} boogie_si_record_i32($i196);
    goto corral_source_split_2688;

  corral_source_split_2688:
    assume {:verifier.code 0} true;
    $i197 := $or.i32($i196, $i194);
    call {:si_unique_call 6598} {:cexpr "__cil_tmp142"} {:si_old_unique_call 1507} boogie_si_record_i32($i197);
    goto corral_source_split_2689;

  corral_source_split_2689:
    assume {:verifier.code 0} true;
    $i198 := $or.i32($i197, $i182);
    goto corral_source_split_2690;

  corral_source_split_2690:
    assume {:verifier.code 0} true;
    $p199 := $i2p.i64.ref($i189);
    goto corral_source_split_2691;

  corral_source_split_2691:
    assume {:verifier.code 0} true;
    goto corral_source_split_2692;

  corral_source_split_2692:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb31:
    assume $i168 == 1;
    goto corral_source_split_2658;

  corral_source_split_2658:
    assume {:verifier.code 0} true;
    $i169 := $zext.i8.i32($i120);
    call {:si_unique_call 6599} {:cexpr "__cil_tmp120"} {:si_old_unique_call 1483} boogie_si_record_i32($i169);
    goto corral_source_split_2659;

  corral_source_split_2659:
    assume {:verifier.code 0} true;
    $i170 := $shl.i32($i89, $i169);
    call {:si_unique_call 6600} {:cexpr "__cil_tmp121"} {:si_old_unique_call 1484} boogie_si_record_i32($i170);
    goto corral_source_split_2660;

  corral_source_split_2660:
    assume {:verifier.code 0} true;
    $i171 := $udiv.i32($i170, $i88);
    call {:si_unique_call 6601} {:cexpr "__cil_tmp122"} {:si_old_unique_call 1485} boogie_si_record_i32($i171);
    goto corral_source_split_2661;

  corral_source_split_2661:
    assume {:verifier.code 0} true;
    $i172 := $sub.i32($i134, $i171);
    call {:si_unique_call 6602} {:cexpr "dsp_on"} {:si_old_unique_call 1486} boogie_si_record_i32($i172);
    goto corral_source_split_2662;

  corral_source_split_2662:
    assume {:verifier.code 0} true;
    $i173 := $add.i32($i158, 1);
    call {:si_unique_call 6603} {:cexpr "__cil_tmp123"} {:si_old_unique_call 1487} boogie_si_record_i32($i173);
    goto corral_source_split_2663;

  corral_source_split_2663:
    assume {:verifier.code 0} true;
    $i174 := $add.i32($i158, 1);
    call {:si_unique_call 6604} {:cexpr "__cil_tmp124"} {:si_old_unique_call 1488} boogie_si_record_i32($i174);
    goto corral_source_split_2664;

  corral_source_split_2664:
    assume {:verifier.code 0} true;
    $i175 := $udiv.i32($i172, $i174);
    call {:si_unique_call 6605} {:cexpr "__cil_tmp125"} {:si_old_unique_call 1489} boogie_si_record_i32($i175);
    goto corral_source_split_2665;

  corral_source_split_2665:
    assume {:verifier.code 0} true;
    $i176 := $mul.i32($i175, $i173);
    call {:si_unique_call 6606} {:cexpr "dsp_on"} {:si_old_unique_call 1490} boogie_si_record_i32($i176);
    goto corral_source_split_2666;

  corral_source_split_2666:
    assume {:verifier.code 0} true;
    $i177 := $i176;
    goto $bb33;

  $bb28:
    assume $i143 == 1;
    goto corral_source_split_2630;

  corral_source_split_2630:
    assume {:verifier.code 0} true;
    $i144 := $i142;
    goto $bb30;

  $bb25:
    assume $i112 == 1;
    goto corral_source_split_2628;

  corral_source_split_2628:
    assume {:verifier.code 0} true;
    $i113 := 7;
    goto $bb27;

  $bb22:
    assume $i109 == 1;
    goto corral_source_split_2590;

  corral_source_split_2590:
    assume {:verifier.code 0} true;
    $i110 := 0;
    goto $bb24;

  $bb18:
    assume $i102 == 1;
    goto corral_source_split_2578;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i104 := $lshr.i32($i100, 1);
    call {:si_unique_call 6607} {:cexpr "tmp___7"} {:si_old_unique_call 1427} boogie_si_record_i32($i104);
    goto corral_source_split_2582;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    $i105 := $sext.i8.i32($i101);
    call {:si_unique_call 6608} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1428} boogie_si_record_i32($i105);
    goto corral_source_split_2583;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    $i106 := $add.i32($i105, 1);
    call {:si_unique_call 6609} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1429} boogie_si_record_i32($i106);
    goto corral_source_split_2584;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    $i107 := $trunc.i32.i8($i106);
    call {:si_unique_call 6610} {:cexpr "dsp_precision"} {:si_old_unique_call 1430} boogie_si_record_i8($i107);
    goto corral_source_split_2585;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    $i100, $i101 := $i104, $i107;
    goto corral_source_split_2585_dummy;

  corral_source_split_2585_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb12:
    assume $i87 == 1;
    goto corral_source_split_2558;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i90 := $lshr.i32($i84, 1);
    call {:si_unique_call 6611} {:cexpr "multiplier"} {:si_old_unique_call 1418} boogie_si_record_i32($i90);
    goto corral_source_split_2562;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    $i91 := $lshr.i32($i83, 1);
    call {:si_unique_call 6612} {:cexpr "divider"} {:si_old_unique_call 1419} boogie_si_record_i32($i91);
    goto corral_source_split_2563;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    $i83, $i84 := $i91, $i90;
    goto corral_source_split_2563_dummy;

  corral_source_split_2563_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i49 == 1;
    goto corral_source_split_2519;

  corral_source_split_2519:
    assume {:verifier.code 0} true;
    $i50 := $p2i.ref.i64($p0);
    call {:si_unique_call 6613} {:cexpr "__cil_tmp45"} {:si_old_unique_call 1394} boogie_si_record_i64($i50);
    goto corral_source_split_2520;

  corral_source_split_2520:
    assume {:verifier.code 0} true;
    $i51 := $add.i64($i50, 1160);
    call {:si_unique_call 6614} {:cexpr "__cil_tmp46"} {:si_old_unique_call 1395} boogie_si_record_i64($i51);
    goto corral_source_split_2521;

  corral_source_split_2521:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i51);
    goto corral_source_split_2522;

  corral_source_split_2522:
    assume {:verifier.code 0} true;
    havoc $p53;
    goto corral_source_split_2523;

  corral_source_split_2523:
    assume {:verifier.code 0} true;
    $p54 := $bitcast.ref.ref($p53);
    goto corral_source_split_2524;

  corral_source_split_2524:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p54);
    call {:si_unique_call 6615} {:cexpr "__cil_tmp48"} {:si_old_unique_call 1396} boogie_si_record_i64($i55);
    goto corral_source_split_2525;

  corral_source_split_2525:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 1144);
    call {:si_unique_call 6616} {:cexpr "__cil_tmp49"} {:si_old_unique_call 1397} boogie_si_record_i64($i56);
    goto corral_source_split_2526;

  corral_source_split_2526:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_2527;

  corral_source_split_2527:
    assume {:verifier.code 0} true;
    havoc $i58;
    call {:si_unique_call 6617} {:cexpr "__cil_tmp50"} {:si_old_unique_call 1398} boogie_si_record_i16($i58);
    goto corral_source_split_2528;

  corral_source_split_2528:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i32($i58);
    call {:si_unique_call 6618} {:cexpr "__cil_tmp51"} {:si_old_unique_call 1399} boogie_si_record_i32($i59);
    goto corral_source_split_2529;

  corral_source_split_2529:
    assume {:verifier.code 0} true;
    $i60 := $mul.i32($i13, $i59);
    call {:si_unique_call 6619} {:cexpr "multiplier"} {:si_old_unique_call 1400} boogie_si_record_i32($i60);
    goto corral_source_split_2530;

  corral_source_split_2530:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p2);
    call {:si_unique_call 6620} {:cexpr "__cil_tmp52"} {:si_old_unique_call 1401} boogie_si_record_i64($i61);
    goto corral_source_split_2531;

  corral_source_split_2531:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 44);
    call {:si_unique_call 6621} {:cexpr "__cil_tmp53"} {:si_old_unique_call 1402} boogie_si_record_i64($i62);
    goto corral_source_split_2532;

  corral_source_split_2532:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_2533;

  corral_source_split_2533:
    assume {:verifier.code 0} true;
    havoc $i64;
    call {:si_unique_call 6622} {:cexpr "__cil_tmp54"} {:si_old_unique_call 1403} boogie_si_record_i32($i64);
    goto corral_source_split_2534;

  corral_source_split_2534:
    assume {:verifier.code 0} true;
    $i65 := $mul.i32($i32, $i64);
    call {:si_unique_call 6623} {:cexpr "__cil_tmp55"} {:si_old_unique_call 1404} boogie_si_record_i32($i65);
    goto corral_source_split_2535;

  corral_source_split_2535:
    assume {:verifier.code 0} true;
    $i66 := $and.i32($i65, $sub.i32(0, 8));
    call {:si_unique_call 6624} {:cexpr "divider"} {:si_old_unique_call 1405} boogie_si_record_i32($i66);
    goto corral_source_split_2536;

  corral_source_split_2536:
    assume {:verifier.code 0} true;
    $i67 := $p2i.ref.i64($p54);
    call {:si_unique_call 6625} {:cexpr "__cil_tmp56"} {:si_old_unique_call 1406} boogie_si_record_i64($i67);
    goto corral_source_split_2537;

  corral_source_split_2537:
    assume {:verifier.code 0} true;
    $i68 := $add.i64($i67, 1144);
    call {:si_unique_call 6626} {:cexpr "__cil_tmp57"} {:si_old_unique_call 1407} boogie_si_record_i64($i68);
    goto corral_source_split_2538;

  corral_source_split_2538:
    assume {:verifier.code 0} true;
    $p69 := $i2p.i64.ref($i68);
    goto corral_source_split_2539;

  corral_source_split_2539:
    assume {:verifier.code 0} true;
    havoc $i70;
    call {:si_unique_call 6627} {:cexpr "__cil_tmp58"} {:si_old_unique_call 1408} boogie_si_record_i16($i70);
    goto corral_source_split_2540;

  corral_source_split_2540:
    assume {:verifier.code 0} true;
    $i71 := $zext.i16.i32($i70);
    call {:si_unique_call 6628} {:cexpr "__cil_tmp59"} {:si_old_unique_call 1409} boogie_si_record_i32($i71);
    goto corral_source_split_2541;

  corral_source_split_2541:
    assume {:verifier.code 0} true;
    $i72 := $mul.i32($i28, $i71);
    call {:si_unique_call 6629} {:cexpr "ras_multiplier"} {:si_old_unique_call 1410} boogie_si_record_i32($i72);
    goto corral_source_split_2542;

  corral_source_split_2542:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p2);
    call {:si_unique_call 6630} {:cexpr "__cil_tmp60"} {:si_old_unique_call 1411} boogie_si_record_i64($i73);
    goto corral_source_split_2543;

  corral_source_split_2543:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 44);
    call {:si_unique_call 6631} {:cexpr "__cil_tmp61"} {:si_old_unique_call 1412} boogie_si_record_i64($i74);
    goto corral_source_split_2544;

  corral_source_split_2544:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_2545;

  corral_source_split_2545:
    assume {:verifier.code 0} true;
    havoc $i76;
    call {:si_unique_call 6632} {:cexpr "__cil_tmp62"} {:si_old_unique_call 1413} boogie_si_record_i32($i76);
    goto corral_source_split_2546;

  corral_source_split_2546:
    assume {:verifier.code 0} true;
    $i77 := $mul.i32(1, $i76);
    call {:si_unique_call 6633} {:cexpr "__cil_tmp63"} {:si_old_unique_call 1414} boogie_si_record_i32($i77);
    goto corral_source_split_2547;

  corral_source_split_2547:
    assume {:verifier.code 0} true;
    $i78 := $and.i32($i77, $sub.i32(0, 8));
    call {:si_unique_call 6634} {:cexpr "ras_divider"} {:si_old_unique_call 1415} boogie_si_record_i32($i78);
    goto corral_source_split_2548;

  corral_source_split_2548:
    assume {:verifier.code 0} true;
    $i79, $i80, $i81, $i82 := $i66, $i60, $i72, $i78;
    goto $bb9;

  $bb4:
    assume $i40 == 1;
    goto corral_source_split_2507;

  corral_source_split_2507:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i39);
    call {:si_unique_call 6635} {:cexpr "__cil_tmp40"} {:si_old_unique_call 1388} boogie_si_record_i32($i41);
    goto corral_source_split_2508;

  corral_source_split_2508:
    assume {:verifier.code 0} true;
    $i42 := $sub.i32($i41, 1);
    call {:si_unique_call 6636} {:cexpr "__cil_tmp41"} {:si_old_unique_call 1389} boogie_si_record_i32($i42);
    goto corral_source_split_2509;

  corral_source_split_2509:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 6637} {:cexpr "vshift"} {:si_old_unique_call 1390} boogie_si_record_i8($i43);
    goto corral_source_split_2510;

  corral_source_split_2510:
    assume {:verifier.code 0} true;
    $i44 := $i43;
    goto $bb6;

  $bb1:
    assume $i29 == 1;
    goto corral_source_split_2493;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    $i30 := $lshr.i32($i1, 2);
    call {:si_unique_call 6638} {:cexpr "__cil_tmp34"} {:si_old_unique_call 1380} boogie_si_record_i32($i30);
    goto corral_source_split_2494;

  corral_source_split_2494:
    assume {:verifier.code 0} true;
    $i31 := $mul.i32($i24, $i30);
    call {:si_unique_call 6639} {:cexpr "divider"} {:si_old_unique_call 1381} boogie_si_record_i32($i31);
    goto corral_source_split_2495;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    $i32 := $i31;
    goto $bb3;
}



implementation {:LB_Mapping "aty_dsp_gt_loop_$bb10"} {:entrypoint} aty_dsp_gt_EntryCopy_aty_dsp_gt_loop_$bb10($p0: ref, $i1: i32, $p2: ref) returns ($r: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $i40: i1;
  var $i41: i32;
  var $i42: i32;
  var $i43: i8;
  var $i44: i8;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i16;
  var $i59: i32;
  var $i60: i32;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i16;
  var $i71: i32;
  var $i72: i32;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i99: i32;
  var $i100: i32;
  var $i101: i8;
  var $i102: i1;
  var $i103: i8;
  var $i104: i32;
  var $i105: i32;
  var $i106: i32;
  var $i107: i8;
  var $i108: i32;
  var $i109: i1;
  var $i111: i32;
  var $i112: i1;
  var $i113: i8;
  var $i110: i8;
  var $i114: i32;
  var $i115: i32;
  var $i116: i8;
  var $i117: i32;
  var $i118: i32;
  var $i119: i32;
  var $i120: i8;
  var $i121: i32;
  var $i122: i32;
  var $i123: i32;
  var $i124: i32;
  var $i125: i32;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $i132: i32;
  var $i133: i32;
  var $i134: i32;
  var $i135: i32;
  var $i136: i32;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $i140: i32;
  var $i141: i32;
  var $i142: i32;
  var $i143: i1;
  var $i144: i32;
  var $i145: i32;
  var $i146: i64;
  var $i147: i64;
  var $p148: ref;
  var $i149: i32;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i32;
  var $i154: i32;
  var $i155: i32;
  var $i156: i32;
  var $i157: i32;
  var $i158: i32;
  var $i159: i32;
  var $i160: i32;
  var $i161: i32;
  var $i162: i32;
  var $i163: i32;
  var $i164: i32;
  var $i165: i32;
  var $i166: i32;
  var $i167: i32;
  var $i168: i1;
  var $i169: i32;
  var $i170: i32;
  var $i171: i32;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $i175: i32;
  var $i176: i32;
  var $i177: i32;
  var $i178: i32;
  var $i179: i32;
  var $i180: i32;
  var $i181: i32;
  var $i182: i32;
  var $i183: i64;
  var $i184: i64;
  var $i185: i32;
  var $i186: i32;
  var $p187: ref;
  var $i188: i64;
  var $i189: i64;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i32;
  var $p199: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 6488} {:cexpr "aty_dsp_gt:arg:bpp"} {:si_old_unique_call 1358} boogie_si_record_i32($i1);
    goto corral_source_split_2464;

  corral_source_split_2464:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p2);
    call {:si_unique_call 6489} {:cexpr "__cil_tmp16"} {:si_old_unique_call 1359} boogie_si_record_i64($i3);
    goto corral_source_split_2465;

  corral_source_split_2465:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 40);
    call {:si_unique_call 6490} {:cexpr "__cil_tmp17"} {:si_old_unique_call 1360} boogie_si_record_i64($i4);
    goto corral_source_split_2466;

  corral_source_split_2466:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_2467;

  corral_source_split_2467:
    assume {:verifier.code 0} true;
    havoc $i6;
    call {:si_unique_call 6491} {:cexpr "__cil_tmp18"} {:si_old_unique_call 1361} boogie_si_record_i8($i6);
    goto corral_source_split_2468;

  corral_source_split_2468:
    assume {:verifier.code 0} true;
    $i7 := $zext.i8.i32($i6);
    call {:si_unique_call 6492} {:cexpr "__cil_tmp19"} {:si_old_unique_call 1362} boogie_si_record_i32($i7);
    goto corral_source_split_2469;

  corral_source_split_2469:
    assume {:verifier.code 0} true;
    $i8 := $p2i.ref.i64($p2);
    call {:si_unique_call 6493} {:cexpr "__cil_tmp20"} {:si_old_unique_call 1363} boogie_si_record_i64($i8);
    goto corral_source_split_2470;

  corral_source_split_2470:
    assume {:verifier.code 0} true;
    $i9 := $add.i64($i8, 2);
    call {:si_unique_call 6494} {:cexpr "__cil_tmp21"} {:si_old_unique_call 1364} boogie_si_record_i64($i9);
    goto corral_source_split_2471;

  corral_source_split_2471:
    assume {:verifier.code 0} true;
    $p10 := $i2p.i64.ref($i9);
    goto corral_source_split_2472;

  corral_source_split_2472:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 6495} {:cexpr "__cil_tmp22"} {:si_old_unique_call 1365} boogie_si_record_i8($i11);
    goto corral_source_split_2473;

  corral_source_split_2473:
    assume {:verifier.code 0} true;
    $i12 := $zext.i8.i32($i11);
    call {:si_unique_call 6496} {:cexpr "__cil_tmp23"} {:si_old_unique_call 1366} boogie_si_record_i32($i12);
    goto corral_source_split_2474;

  corral_source_split_2474:
    assume {:verifier.code 0} true;
    $i13 := $mul.i32($i12, $i7);
    call {:si_unique_call 6497} {:cexpr "multiplier"} {:si_old_unique_call 1367} boogie_si_record_i32($i13);
    goto corral_source_split_2475;

  corral_source_split_2475:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p2);
    call {:si_unique_call 6498} {:cexpr "__cil_tmp24"} {:si_old_unique_call 1368} boogie_si_record_i64($i14);
    goto corral_source_split_2476;

  corral_source_split_2476:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 36);
    call {:si_unique_call 6499} {:cexpr "__cil_tmp25"} {:si_old_unique_call 1369} boogie_si_record_i64($i15);
    goto corral_source_split_2477;

  corral_source_split_2477:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_2478;

  corral_source_split_2478:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 6500} {:cexpr "__cil_tmp26"} {:si_old_unique_call 1370} boogie_si_record_i8($i17);
    goto corral_source_split_2479;

  corral_source_split_2479:
    assume {:verifier.code 0} true;
    $i18 := $zext.i8.i32($i17);
    call {:si_unique_call 6501} {:cexpr "__cil_tmp27"} {:si_old_unique_call 1371} boogie_si_record_i32($i18);
    goto corral_source_split_2480;

  corral_source_split_2480:
    assume {:verifier.code 0} true;
    $i19 := $p2i.ref.i64($p2);
    call {:si_unique_call 6502} {:cexpr "__cil_tmp28"} {:si_old_unique_call 1372} boogie_si_record_i64($i19);
    goto corral_source_split_2481;

  corral_source_split_2481:
    assume {:verifier.code 0} true;
    $i20 := $add.i64($i19, 7);
    call {:si_unique_call 6503} {:cexpr "__cil_tmp29"} {:si_old_unique_call 1373} boogie_si_record_i64($i20);
    goto corral_source_split_2482;

  corral_source_split_2482:
    assume {:verifier.code 0} true;
    $p21 := $i2p.i64.ref($i20);
    goto corral_source_split_2483;

  corral_source_split_2483:
    assume {:verifier.code 0} true;
    havoc $i22;
    call {:si_unique_call 6504} {:cexpr "__cil_tmp30"} {:si_old_unique_call 1374} boogie_si_record_i8($i22);
    goto corral_source_split_2484;

  corral_source_split_2484:
    assume {:verifier.code 0} true;
    $i23 := $zext.i8.i32($i22);
    call {:si_unique_call 6505} {:cexpr "__cil_tmp31"} {:si_old_unique_call 1375} boogie_si_record_i32($i23);
    goto corral_source_split_2485;

  corral_source_split_2485:
    assume {:verifier.code 0} true;
    $i24 := $mul.i32($i23, $i18);
    call {:si_unique_call 6506} {:cexpr "divider"} {:si_old_unique_call 1376} boogie_si_record_i32($i24);
    goto corral_source_split_2486;

  corral_source_split_2486:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p2);
    call {:si_unique_call 6507} {:cexpr "__cil_tmp32"} {:si_old_unique_call 1377} boogie_si_record_i64($i25);
    goto corral_source_split_2487;

  corral_source_split_2487:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 32);
    call {:si_unique_call 6508} {:cexpr "__cil_tmp33"} {:si_old_unique_call 1378} boogie_si_record_i64($i26);
    goto corral_source_split_2488;

  corral_source_split_2488:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_2489;

  corral_source_split_2489:
    assume {:verifier.code 0} true;
    havoc $i28;
    call {:si_unique_call 6509} {:cexpr "ras_multiplier"} {:si_old_unique_call 1379} boogie_si_record_i32($i28);
    goto corral_source_split_2490;

  corral_source_split_2490:
    assume {:verifier.code 0} true;
    $i29 := $uge.i32($i1, 8);
    goto corral_source_split_2491;

  corral_source_split_2491:
    assume {:verifier.code 0} true;
    assume {:branchcond $i29} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i29 == 1);
    assume {:verifier.code 0} true;
    $i32 := $i24;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_2497;

  corral_source_split_2497:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p2);
    call {:si_unique_call 6510} {:cexpr "__cil_tmp35"} {:si_old_unique_call 1382} boogie_si_record_i64($i33);
    goto corral_source_split_2498;

  corral_source_split_2498:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 37);
    call {:si_unique_call 6511} {:cexpr "__cil_tmp36"} {:si_old_unique_call 1383} boogie_si_record_i64($i34);
    goto corral_source_split_2499;

  corral_source_split_2499:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_2500;

  corral_source_split_2500:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 6512} {:cexpr "__cil_tmp37"} {:si_old_unique_call 1384} boogie_si_record_i8($i36);
    goto corral_source_split_2501;

  corral_source_split_2501:
    assume {:verifier.code 0} true;
    $i37 := $zext.i8.i32($i36);
    call {:si_unique_call 6513} {:cexpr "__cil_tmp38"} {:si_old_unique_call 1385} boogie_si_record_i32($i37);
    goto corral_source_split_2502;

  corral_source_split_2502:
    assume {:verifier.code 0} true;
    $i38 := $sub.i32(4, $i37);
    call {:si_unique_call 6514} {:cexpr "__cil_tmp39"} {:si_old_unique_call 1386} boogie_si_record_i32($i38);
    goto corral_source_split_2503;

  corral_source_split_2503:
    assume {:verifier.code 0} true;
    $i39 := $trunc.i32.i8($i38);
    call {:si_unique_call 6515} {:cexpr "vshift"} {:si_old_unique_call 1387} boogie_si_record_i8($i39);
    goto corral_source_split_2504;

  corral_source_split_2504:
    assume {:verifier.code 0} true;
    $i40 := $eq.i32($i1, 0);
    goto corral_source_split_2505;

  corral_source_split_2505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i40} true;
    goto $bb4, $bb5;

  $bb5:
    assume !($i40 == 1);
    assume {:verifier.code 0} true;
    $i44 := $i39;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_2512;

  corral_source_split_2512:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p2);
    call {:si_unique_call 6516} {:cexpr "__cil_tmp42"} {:si_old_unique_call 1391} boogie_si_record_i64($i45);
    goto corral_source_split_2513;

  corral_source_split_2513:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 44);
    call {:si_unique_call 6517} {:cexpr "__cil_tmp43"} {:si_old_unique_call 1392} boogie_si_record_i64($i46);
    goto corral_source_split_2514;

  corral_source_split_2514:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_2515;

  corral_source_split_2515:
    assume {:verifier.code 0} true;
    havoc $i48;
    call {:si_unique_call 6518} {:cexpr "__cil_tmp44"} {:si_old_unique_call 1393} boogie_si_record_i32($i48);
    goto corral_source_split_2516;

  corral_source_split_2516:
    assume {:verifier.code 0} true;
    $i49 := $ne.i32($i48, 0);
    goto corral_source_split_2517;

  corral_source_split_2517:
    assume {:verifier.code 0} true;
    assume {:branchcond $i49} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i49 == 1);
    assume {:verifier.code 0} true;
    $i79, $i80, $i81, $i82 := $i32, $i13, $i28, 1;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2550;

  corral_source_split_2550:
    assume {:verifier.code 0} true;
    $i83, $i84 := $i79, $i80;
    goto $bb10;

  $bb10:
    call {:si_unique_call 6519} $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91 := aty_dsp_gt_loop_$bb10($i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91);
    LoopBound_AssertVar := false;
    goto $bb10_last;

  $bb10_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2552;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    $i85 := $or.i32($i84, $i83);
    call {:si_unique_call 6520} {:cexpr "__cil_tmp64"} {:si_old_unique_call 1416} boogie_si_record_i32($i85);
    goto corral_source_split_2554;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    $i86 := $and.i32($i85, 1);
    call {:si_unique_call 6521} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1417} boogie_si_record_i32($i86);
    goto corral_source_split_2555;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    $i87 := $eq.i32($i86, 0);
    goto corral_source_split_2556;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    $i88, $i89 := $i83, $i84;
    assume {:branchcond $i87} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i87 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2560;

  corral_source_split_2560:
    assume {:verifier.code 0} true;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    $i92 := $zext.i8.i32($i44);
    call {:si_unique_call 6522} {:cexpr "__cil_tmp66"} {:si_old_unique_call 1420} boogie_si_record_i32($i92);
    goto corral_source_split_2565;

  corral_source_split_2565:
    assume {:verifier.code 0} true;
    $i93 := $p2i.ref.i64($p2);
    call {:si_unique_call 6523} {:cexpr "__cil_tmp67"} {:si_old_unique_call 1421} boogie_si_record_i64($i93);
    goto corral_source_split_2566;

  corral_source_split_2566:
    assume {:verifier.code 0} true;
    $i94 := $add.i64($i93, 24);
    call {:si_unique_call 6524} {:cexpr "__cil_tmp68"} {:si_old_unique_call 1422} boogie_si_record_i64($i94);
    goto corral_source_split_2567;

  corral_source_split_2567:
    assume {:verifier.code 0} true;
    $p95 := $i2p.i64.ref($i94);
    goto corral_source_split_2568;

  corral_source_split_2568:
    assume {:verifier.code 0} true;
    havoc $i96;
    call {:si_unique_call 6525} {:cexpr "__cil_tmp69"} {:si_old_unique_call 1423} boogie_si_record_i32($i96);
    goto corral_source_split_2569;

  corral_source_split_2569:
    assume {:verifier.code 0} true;
    $i97 := $mul.i32($i89, $i96);
    call {:si_unique_call 6526} {:cexpr "__cil_tmp70"} {:si_old_unique_call 1424} boogie_si_record_i32($i97);
    goto corral_source_split_2570;

  corral_source_split_2570:
    assume {:verifier.code 0} true;
    $i98 := $shl.i32($i97, $i92);
    call {:si_unique_call 6527} {:cexpr "__cil_tmp71"} {:si_old_unique_call 1425} boogie_si_record_i32($i98);
    goto corral_source_split_2571;

  corral_source_split_2571:
    assume {:verifier.code 0} true;
    $i99 := $udiv.i32($i98, $i88);
    call {:si_unique_call 6528} {:cexpr "tmp___7"} {:si_old_unique_call 1426} boogie_si_record_i32($i99);
    goto corral_source_split_2572;

  corral_source_split_2572:
    assume {:verifier.code 0} true;
    $i100, $i101 := $i99, $sub.i8(0, 5);
    goto $bb16;

  $bb16:
    call {:si_unique_call 6529} $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107 := aty_dsp_gt_loop_$bb16_PassiveCopy($i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107);
    goto $bb16_last;

  $bb16_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2574;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i102 := $ne.i32($i100, 0);
    goto corral_source_split_2576;

  corral_source_split_2576:
    assume {:verifier.code 0} true;
    $i103 := $i101;
    assume {:branchcond $i102} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i102 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_2580;

  corral_source_split_2580:
    assume {:verifier.code 0} true;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    $i108 := $sext.i8.i32($i103);
    call {:si_unique_call 6530} {:cexpr "__cil_tmp74"} {:si_old_unique_call 1431} boogie_si_record_i32($i108);
    goto corral_source_split_2587;

  corral_source_split_2587:
    assume {:verifier.code 0} true;
    $i109 := $slt.i32($i108, 0);
    goto corral_source_split_2588;

  corral_source_split_2588:
    assume {:verifier.code 0} true;
    assume {:branchcond $i109} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i109 == 1);
    goto corral_source_split_2592;

  corral_source_split_2592:
    assume {:verifier.code 0} true;
    $i111 := $sext.i8.i32($i103);
    call {:si_unique_call 6531} {:cexpr "__cil_tmp75"} {:si_old_unique_call 1432} boogie_si_record_i32($i111);
    goto corral_source_split_2593;

  corral_source_split_2593:
    assume {:verifier.code 0} true;
    $i112 := $sgt.i32($i111, 7);
    goto corral_source_split_2594;

  corral_source_split_2594:
    assume {:verifier.code 0} true;
    assume {:branchcond $i112} true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i112 == 1);
    assume {:verifier.code 0} true;
    $i113 := $i103;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i110 := $i113;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_2596;

  corral_source_split_2596:
    assume {:verifier.code 0} true;
    $i114 := $sext.i8.i32($i110);
    call {:si_unique_call 6532} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1433} boogie_si_record_i32($i114);
    goto corral_source_split_2597;

  corral_source_split_2597:
    assume {:verifier.code 0} true;
    $i115 := $sub.i32(6, $i114);
    call {:si_unique_call 6533} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1434} boogie_si_record_i32($i115);
    goto corral_source_split_2598;

  corral_source_split_2598:
    assume {:verifier.code 0} true;
    $i116 := $trunc.i32.i8($i115);
    call {:si_unique_call 6534} {:cexpr "xshift"} {:si_old_unique_call 1435} boogie_si_record_i8($i116);
    goto corral_source_split_2599;

  corral_source_split_2599:
    assume {:verifier.code 0} true;
    $i117 := $zext.i8.i32($i116);
    call {:si_unique_call 6535} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1436} boogie_si_record_i32($i117);
    goto corral_source_split_2600;

  corral_source_split_2600:
    assume {:verifier.code 0} true;
    $i118 := $zext.i8.i32($i44);
    call {:si_unique_call 6536} {:cexpr "__cil_tmp79"} {:si_old_unique_call 1437} boogie_si_record_i32($i118);
    goto corral_source_split_2601;

  corral_source_split_2601:
    assume {:verifier.code 0} true;
    $i119 := $add.i32($i118, $i117);
    call {:si_unique_call 6537} {:cexpr "__cil_tmp80"} {:si_old_unique_call 1438} boogie_si_record_i32($i119);
    goto corral_source_split_2602;

  corral_source_split_2602:
    assume {:verifier.code 0} true;
    $i120 := $trunc.i32.i8($i119);
    call {:si_unique_call 6538} {:cexpr "vshift"} {:si_old_unique_call 1439} boogie_si_record_i8($i120);
    goto corral_source_split_2603;

  corral_source_split_2603:
    assume {:verifier.code 0} true;
    $i121 := $zext.i8.i32($i116);
    call {:si_unique_call 6539} {:cexpr "__cil_tmp81"} {:si_old_unique_call 1440} boogie_si_record_i32($i121);
    goto corral_source_split_2604;

  corral_source_split_2604:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i32($i120);
    call {:si_unique_call 6540} {:cexpr "__cil_tmp82"} {:si_old_unique_call 1441} boogie_si_record_i32($i122);
    goto corral_source_split_2605;

  corral_source_split_2605:
    assume {:verifier.code 0} true;
    $i123 := $sub.i32($i122, $i121);
    call {:si_unique_call 6541} {:cexpr "__cil_tmp83"} {:si_old_unique_call 1442} boogie_si_record_i32($i123);
    goto corral_source_split_2606;

  corral_source_split_2606:
    assume {:verifier.code 0} true;
    $i124 := $shl.i32(1, $i123);
    call {:si_unique_call 6542} {:cexpr "__cil_tmp84"} {:si_old_unique_call 1443} boogie_si_record_i32($i124);
    goto corral_source_split_2607;

  corral_source_split_2607:
    assume {:verifier.code 0} true;
    $i125 := $zext.i8.i32($i120);
    call {:si_unique_call 6543} {:cexpr "__cil_tmp86"} {:si_old_unique_call 1444} boogie_si_record_i32($i125);
    goto corral_source_split_2608;

  corral_source_split_2608:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p2);
    call {:si_unique_call 6544} {:cexpr "__cil_tmp87"} {:si_old_unique_call 1445} boogie_si_record_i64($i126);
    goto corral_source_split_2609;

  corral_source_split_2609:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, 24);
    call {:si_unique_call 6545} {:cexpr "__cil_tmp88"} {:si_old_unique_call 1446} boogie_si_record_i64($i127);
    goto corral_source_split_2610;

  corral_source_split_2610:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_2611;

  corral_source_split_2611:
    assume {:verifier.code 0} true;
    havoc $i129;
    call {:si_unique_call 6546} {:cexpr "__cil_tmp89"} {:si_old_unique_call 1447} boogie_si_record_i32($i129);
    goto corral_source_split_2612;

  corral_source_split_2612:
    assume {:verifier.code 0} true;
    $i130 := $sub.i32($i129, 1);
    call {:si_unique_call 6547} {:cexpr "__cil_tmp90"} {:si_old_unique_call 1448} boogie_si_record_i32($i130);
    goto corral_source_split_2613;

  corral_source_split_2613:
    assume {:verifier.code 0} true;
    $i131 := $mul.i32($i89, $i130);
    call {:si_unique_call 6548} {:cexpr "__cil_tmp91"} {:si_old_unique_call 1449} boogie_si_record_i32($i131);
    goto corral_source_split_2614;

  corral_source_split_2614:
    assume {:verifier.code 0} true;
    $i132 := $shl.i32($i131, $i125);
    call {:si_unique_call 6549} {:cexpr "__cil_tmp92"} {:si_old_unique_call 1450} boogie_si_record_i32($i132);
    goto corral_source_split_2615;

  corral_source_split_2615:
    assume {:verifier.code 0} true;
    $i133 := $udiv.i32($i132, $i88);
    call {:si_unique_call 6550} {:cexpr "__cil_tmp93"} {:si_old_unique_call 1451} boogie_si_record_i32($i133);
    goto corral_source_split_2616;

  corral_source_split_2616:
    assume {:verifier.code 0} true;
    $i134 := $sub.i32($i133, $i124);
    call {:si_unique_call 6551} {:cexpr "dsp_off"} {:si_old_unique_call 1452} boogie_si_record_i32($i134);
    goto corral_source_split_2617;

  corral_source_split_2617:
    assume {:verifier.code 0} true;
    $i135 := $zext.i8.i32($i120);
    call {:si_unique_call 6552} {:cexpr "__cil_tmp94"} {:si_old_unique_call 1453} boogie_si_record_i32($i135);
    goto corral_source_split_2618;

  corral_source_split_2618:
    assume {:verifier.code 0} true;
    $i136 := $shl.i32($i89, $i135);
    call {:si_unique_call 6553} {:cexpr "__cil_tmp95"} {:si_old_unique_call 1454} boogie_si_record_i32($i136);
    goto corral_source_split_2619;

  corral_source_split_2619:
    assume {:verifier.code 0} true;
    $i137 := $add.i32($i136, $i88);
    call {:si_unique_call 6554} {:cexpr "__cil_tmp96"} {:si_old_unique_call 1455} boogie_si_record_i32($i137);
    goto corral_source_split_2620;

  corral_source_split_2620:
    assume {:verifier.code 0} true;
    $i138 := $udiv.i32($i137, $i88);
    call {:si_unique_call 6555} {:cexpr "dsp_on"} {:si_old_unique_call 1456} boogie_si_record_i32($i138);
    goto corral_source_split_2621;

  corral_source_split_2621:
    assume {:verifier.code 0} true;
    $i139 := $zext.i8.i32($i116);
    call {:si_unique_call 6556} {:cexpr "__cil_tmp97"} {:si_old_unique_call 1457} boogie_si_record_i32($i139);
    goto corral_source_split_2622;

  corral_source_split_2622:
    assume {:verifier.code 0} true;
    $i140 := $shl.i32($i81, $i139);
    call {:si_unique_call 6557} {:cexpr "__cil_tmp98"} {:si_old_unique_call 1458} boogie_si_record_i32($i140);
    goto corral_source_split_2623;

  corral_source_split_2623:
    assume {:verifier.code 0} true;
    $i141 := $add.i32($i140, $i82);
    call {:si_unique_call 6558} {:cexpr "__cil_tmp99"} {:si_old_unique_call 1459} boogie_si_record_i32($i141);
    goto corral_source_split_2624;

  corral_source_split_2624:
    assume {:verifier.code 0} true;
    $i142 := $udiv.i32($i141, $i82);
    call {:si_unique_call 6559} {:cexpr "tmp___7"} {:si_old_unique_call 1460} boogie_si_record_i32($i142);
    goto corral_source_split_2625;

  corral_source_split_2625:
    assume {:verifier.code 0} true;
    $i143 := $ult.i32($i138, $i142);
    goto corral_source_split_2626;

  corral_source_split_2626:
    assume {:verifier.code 0} true;
    assume {:branchcond $i143} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i143 == 1);
    assume {:verifier.code 0} true;
    $i144 := $i138;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_2632;

  corral_source_split_2632:
    assume {:verifier.code 0} true;
    $i145 := $zext.i8.i32($i116);
    call {:si_unique_call 6560} {:cexpr "__cil_tmp100"} {:si_old_unique_call 1461} boogie_si_record_i32($i145);
    goto corral_source_split_2633;

  corral_source_split_2633:
    assume {:verifier.code 0} true;
    $i146 := $p2i.ref.i64($p2);
    call {:si_unique_call 6561} {:cexpr "__cil_tmp101"} {:si_old_unique_call 1462} boogie_si_record_i64($i146);
    goto corral_source_split_2634;

  corral_source_split_2634:
    assume {:verifier.code 0} true;
    $i147 := $add.i64($i146, 28);
    call {:si_unique_call 6562} {:cexpr "__cil_tmp102"} {:si_old_unique_call 1463} boogie_si_record_i64($i147);
    goto corral_source_split_2635;

  corral_source_split_2635:
    assume {:verifier.code 0} true;
    $p148 := $i2p.i64.ref($i147);
    goto corral_source_split_2636;

  corral_source_split_2636:
    assume {:verifier.code 0} true;
    havoc $i149;
    call {:si_unique_call 6563} {:cexpr "__cil_tmp103"} {:si_old_unique_call 1464} boogie_si_record_i32($i149);
    goto corral_source_split_2637;

  corral_source_split_2637:
    assume {:verifier.code 0} true;
    $i150 := $shl.i32($i149, $i145);
    call {:si_unique_call 6564} {:cexpr "__cil_tmp104"} {:si_old_unique_call 1465} boogie_si_record_i32($i150);
    goto corral_source_split_2638;

  corral_source_split_2638:
    assume {:verifier.code 0} true;
    $i151 := $mul.i32($i142, 2);
    call {:si_unique_call 6565} {:cexpr "__cil_tmp105"} {:si_old_unique_call 1466} boogie_si_record_i32($i151);
    goto corral_source_split_2639;

  corral_source_split_2639:
    assume {:verifier.code 0} true;
    $i152 := $add.i32($i144, $i151);
    call {:si_unique_call 6566} {:cexpr "__cil_tmp106"} {:si_old_unique_call 1467} boogie_si_record_i32($i152);
    goto corral_source_split_2640;

  corral_source_split_2640:
    assume {:verifier.code 0} true;
    $i153 := $add.i32($i152, $i150);
    call {:si_unique_call 6567} {:cexpr "dsp_on"} {:si_old_unique_call 1468} boogie_si_record_i32($i153);
    goto corral_source_split_2641;

  corral_source_split_2641:
    assume {:verifier.code 0} true;
    $i154 := $sext.i8.i32($i110);
    call {:si_unique_call 6568} {:cexpr "__cil_tmp107"} {:si_old_unique_call 1469} boogie_si_record_i32($i154);
    goto corral_source_split_2642;

  corral_source_split_2642:
    assume {:verifier.code 0} true;
    $i155 := $sub.i32(7, $i154);
    call {:si_unique_call 6569} {:cexpr "__cil_tmp108"} {:si_old_unique_call 1470} boogie_si_record_i32($i155);
    goto corral_source_split_2643;

  corral_source_split_2643:
    assume {:verifier.code 0} true;
    $i156 := $shl.i32(1, $i155);
    call {:si_unique_call 6570} {:cexpr "__cil_tmp109"} {:si_old_unique_call 1471} boogie_si_record_i32($i156);
    goto corral_source_split_2644;

  corral_source_split_2644:
    assume {:verifier.code 0} true;
    $i157 := $sub.i32($i156, 1);
    call {:si_unique_call 6571} {:cexpr "__cil_tmp110"} {:si_old_unique_call 1472} boogie_si_record_i32($i157);
    goto corral_source_split_2645;

  corral_source_split_2645:
    assume {:verifier.code 0} true;
    $i158 := $ashr.i32($i157, 1);
    call {:si_unique_call 6572} {:cexpr "__cil_tmp111"} {:si_old_unique_call 1473} boogie_si_record_i32($i158);
    goto corral_source_split_2646;

  corral_source_split_2646:
    assume {:verifier.code 0} true;
    $i159 := $add.i32($i158, 1);
    call {:si_unique_call 6573} {:cexpr "__cil_tmp112"} {:si_old_unique_call 1474} boogie_si_record_i32($i159);
    goto corral_source_split_2647;

  corral_source_split_2647:
    assume {:verifier.code 0} true;
    $i160 := $add.i32($i158, 1);
    call {:si_unique_call 6574} {:cexpr "__cil_tmp113"} {:si_old_unique_call 1475} boogie_si_record_i32($i160);
    goto corral_source_split_2648;

  corral_source_split_2648:
    assume {:verifier.code 0} true;
    $i161 := $add.i32($i153, $i158);
    call {:si_unique_call 6575} {:cexpr "__cil_tmp114"} {:si_old_unique_call 1476} boogie_si_record_i32($i161);
    goto corral_source_split_2649;

  corral_source_split_2649:
    assume {:verifier.code 0} true;
    $i162 := $udiv.i32($i161, $i160);
    call {:si_unique_call 6576} {:cexpr "__cil_tmp115"} {:si_old_unique_call 1477} boogie_si_record_i32($i162);
    goto corral_source_split_2650;

  corral_source_split_2650:
    assume {:verifier.code 0} true;
    $i163 := $mul.i32($i162, $i159);
    call {:si_unique_call 6577} {:cexpr "dsp_on"} {:si_old_unique_call 1478} boogie_si_record_i32($i163);
    goto corral_source_split_2651;

  corral_source_split_2651:
    assume {:verifier.code 0} true;
    $i164 := $add.i32($i158, 1);
    call {:si_unique_call 6578} {:cexpr "__cil_tmp116"} {:si_old_unique_call 1479} boogie_si_record_i32($i164);
    goto corral_source_split_2652;

  corral_source_split_2652:
    assume {:verifier.code 0} true;
    $i165 := $add.i32($i158, 1);
    call {:si_unique_call 6579} {:cexpr "__cil_tmp117"} {:si_old_unique_call 1480} boogie_si_record_i32($i165);
    goto corral_source_split_2653;

  corral_source_split_2653:
    assume {:verifier.code 0} true;
    $i166 := $udiv.i32($i134, $i165);
    call {:si_unique_call 6580} {:cexpr "__cil_tmp118"} {:si_old_unique_call 1481} boogie_si_record_i32($i166);
    goto corral_source_split_2654;

  corral_source_split_2654:
    assume {:verifier.code 0} true;
    $i167 := $mul.i32($i166, $i164);
    call {:si_unique_call 6581} {:cexpr "__cil_tmp119"} {:si_old_unique_call 1482} boogie_si_record_i32($i167);
    goto corral_source_split_2655;

  corral_source_split_2655:
    assume {:verifier.code 0} true;
    $i168 := $uge.i32($i163, $i167);
    goto corral_source_split_2656;

  corral_source_split_2656:
    assume {:verifier.code 0} true;
    assume {:branchcond $i168} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i168 == 1);
    assume {:verifier.code 0} true;
    $i177 := $i163;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto corral_source_split_2668;

  corral_source_split_2668:
    assume {:verifier.code 0} true;
    $i178 := $zext.i8.i32($i120);
    call {:si_unique_call 6582} {:cexpr "__cil_tmp126"} {:si_old_unique_call 1491} boogie_si_record_i32($i178);
    goto corral_source_split_2669;

  corral_source_split_2669:
    assume {:verifier.code 0} true;
    $i179 := $add.i32($i178, 5);
    call {:si_unique_call 6583} {:cexpr "__cil_tmp127"} {:si_old_unique_call 1492} boogie_si_record_i32($i179);
    goto corral_source_split_2670;

  corral_source_split_2670:
    assume {:verifier.code 0} true;
    $i180 := $shl.i32($i89, $i179);
    call {:si_unique_call 6584} {:cexpr "__cil_tmp128"} {:si_old_unique_call 1493} boogie_si_record_i32($i180);
    goto corral_source_split_2671;

  corral_source_split_2671:
    assume {:verifier.code 0} true;
    $i181 := $add.i32($i180, $i88);
    call {:si_unique_call 6585} {:cexpr "__cil_tmp129"} {:si_old_unique_call 1494} boogie_si_record_i32($i181);
    goto corral_source_split_2672;

  corral_source_split_2672:
    assume {:verifier.code 0} true;
    $i182 := $udiv.i32($i181, $i88);
    call {:si_unique_call 6586} {:cexpr "dsp_xclks"} {:si_old_unique_call 1495} boogie_si_record_i32($i182);
    goto corral_source_split_2673;

  corral_source_split_2673:
    assume {:verifier.code 0} true;
    $i183 := $p2i.ref.i64($p2);
    call {:si_unique_call 6587} {:cexpr "__cil_tmp130"} {:si_old_unique_call 1496} boogie_si_record_i64($i183);
    goto corral_source_split_2674;

  corral_source_split_2674:
    assume {:verifier.code 0} true;
    $i184 := $add.i64($i183, 16);
    call {:si_unique_call 6588} {:cexpr "__cil_tmp131"} {:si_old_unique_call 1497} boogie_si_record_i64($i184);
    goto corral_source_split_2675;

  corral_source_split_2675:
    assume {:verifier.code 0} true;
    $i185 := $shl.i32($i177, 16);
    call {:si_unique_call 6589} {:cexpr "__cil_tmp132"} {:si_old_unique_call 1498} boogie_si_record_i32($i185);
    goto corral_source_split_2676;

  corral_source_split_2676:
    assume {:verifier.code 0} true;
    $i186 := $add.i32($i185, $i134);
    goto corral_source_split_2677;

  corral_source_split_2677:
    assume {:verifier.code 0} true;
    $p187 := $i2p.i64.ref($i184);
    goto corral_source_split_2678;

  corral_source_split_2678:
    assume {:verifier.code 0} true;
    goto corral_source_split_2679;

  corral_source_split_2679:
    assume {:verifier.code 0} true;
    $i188 := $p2i.ref.i64($p2);
    call {:si_unique_call 6590} {:cexpr "__cil_tmp133"} {:si_old_unique_call 1499} boogie_si_record_i64($i188);
    goto corral_source_split_2680;

  corral_source_split_2680:
    assume {:verifier.code 0} true;
    $i189 := $add.i64($i188, 12);
    call {:si_unique_call 6591} {:cexpr "__cil_tmp134"} {:si_old_unique_call 1500} boogie_si_record_i64($i189);
    goto corral_source_split_2681;

  corral_source_split_2681:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p2);
    call {:si_unique_call 6592} {:cexpr "__cil_tmp135"} {:si_old_unique_call 1501} boogie_si_record_i64($i190);
    goto corral_source_split_2682;

  corral_source_split_2682:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 20);
    call {:si_unique_call 6593} {:cexpr "__cil_tmp136"} {:si_old_unique_call 1502} boogie_si_record_i64($i191);
    goto corral_source_split_2683;

  corral_source_split_2683:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_2684;

  corral_source_split_2684:
    assume {:verifier.code 0} true;
    havoc $i193;
    call {:si_unique_call 6594} {:cexpr "__cil_tmp137"} {:si_old_unique_call 1503} boogie_si_record_i32($i193);
    goto corral_source_split_2685;

  corral_source_split_2685:
    assume {:verifier.code 0} true;
    $i194 := $shl.i32($i193, 16);
    call {:si_unique_call 6595} {:cexpr "__cil_tmp138"} {:si_old_unique_call 1504} boogie_si_record_i32($i194);
    goto corral_source_split_2686;

  corral_source_split_2686:
    assume {:verifier.code 0} true;
    $i195 := $sext.i8.i32($i110);
    call {:si_unique_call 6596} {:cexpr "__cil_tmp139"} {:si_old_unique_call 1505} boogie_si_record_i32($i195);
    goto corral_source_split_2687;

  corral_source_split_2687:
    assume {:verifier.code 0} true;
    $i196 := $shl.i32($i195, 20);
    call {:si_unique_call 6597} {:cexpr "__cil_tmp140"} {:si_old_unique_call 1506} boogie_si_record_i32($i196);
    goto corral_source_split_2688;

  corral_source_split_2688:
    assume {:verifier.code 0} true;
    $i197 := $or.i32($i196, $i194);
    call {:si_unique_call 6598} {:cexpr "__cil_tmp142"} {:si_old_unique_call 1507} boogie_si_record_i32($i197);
    goto corral_source_split_2689;

  corral_source_split_2689:
    assume {:verifier.code 0} true;
    $i198 := $or.i32($i197, $i182);
    goto corral_source_split_2690;

  corral_source_split_2690:
    assume {:verifier.code 0} true;
    $p199 := $i2p.i64.ref($i189);
    goto corral_source_split_2691;

  corral_source_split_2691:
    assume {:verifier.code 0} true;
    goto corral_source_split_2692;

  corral_source_split_2692:
    assume {:verifier.code 0} true;
    $r := 0;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb31:
    assume $i168 == 1;
    goto corral_source_split_2658;

  corral_source_split_2658:
    assume {:verifier.code 0} true;
    $i169 := $zext.i8.i32($i120);
    call {:si_unique_call 6599} {:cexpr "__cil_tmp120"} {:si_old_unique_call 1483} boogie_si_record_i32($i169);
    goto corral_source_split_2659;

  corral_source_split_2659:
    assume {:verifier.code 0} true;
    $i170 := $shl.i32($i89, $i169);
    call {:si_unique_call 6600} {:cexpr "__cil_tmp121"} {:si_old_unique_call 1484} boogie_si_record_i32($i170);
    goto corral_source_split_2660;

  corral_source_split_2660:
    assume {:verifier.code 0} true;
    $i171 := $udiv.i32($i170, $i88);
    call {:si_unique_call 6601} {:cexpr "__cil_tmp122"} {:si_old_unique_call 1485} boogie_si_record_i32($i171);
    goto corral_source_split_2661;

  corral_source_split_2661:
    assume {:verifier.code 0} true;
    $i172 := $sub.i32($i134, $i171);
    call {:si_unique_call 6602} {:cexpr "dsp_on"} {:si_old_unique_call 1486} boogie_si_record_i32($i172);
    goto corral_source_split_2662;

  corral_source_split_2662:
    assume {:verifier.code 0} true;
    $i173 := $add.i32($i158, 1);
    call {:si_unique_call 6603} {:cexpr "__cil_tmp123"} {:si_old_unique_call 1487} boogie_si_record_i32($i173);
    goto corral_source_split_2663;

  corral_source_split_2663:
    assume {:verifier.code 0} true;
    $i174 := $add.i32($i158, 1);
    call {:si_unique_call 6604} {:cexpr "__cil_tmp124"} {:si_old_unique_call 1488} boogie_si_record_i32($i174);
    goto corral_source_split_2664;

  corral_source_split_2664:
    assume {:verifier.code 0} true;
    $i175 := $udiv.i32($i172, $i174);
    call {:si_unique_call 6605} {:cexpr "__cil_tmp125"} {:si_old_unique_call 1489} boogie_si_record_i32($i175);
    goto corral_source_split_2665;

  corral_source_split_2665:
    assume {:verifier.code 0} true;
    $i176 := $mul.i32($i175, $i173);
    call {:si_unique_call 6606} {:cexpr "dsp_on"} {:si_old_unique_call 1490} boogie_si_record_i32($i176);
    goto corral_source_split_2666;

  corral_source_split_2666:
    assume {:verifier.code 0} true;
    $i177 := $i176;
    goto $bb33;

  $bb28:
    assume $i143 == 1;
    goto corral_source_split_2630;

  corral_source_split_2630:
    assume {:verifier.code 0} true;
    $i144 := $i142;
    goto $bb30;

  $bb25:
    assume $i112 == 1;
    goto corral_source_split_2628;

  corral_source_split_2628:
    assume {:verifier.code 0} true;
    $i113 := 7;
    goto $bb27;

  $bb22:
    assume $i109 == 1;
    goto corral_source_split_2590;

  corral_source_split_2590:
    assume {:verifier.code 0} true;
    $i110 := 0;
    goto $bb24;

  $bb18:
    assume $i102 == 1;
    goto corral_source_split_2578;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $i104 := $lshr.i32($i100, 1);
    call {:si_unique_call 6607} {:cexpr "tmp___7"} {:si_old_unique_call 1427} boogie_si_record_i32($i104);
    goto corral_source_split_2582;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    $i105 := $sext.i8.i32($i101);
    call {:si_unique_call 6608} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1428} boogie_si_record_i32($i105);
    goto corral_source_split_2583;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    $i106 := $add.i32($i105, 1);
    call {:si_unique_call 6609} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1429} boogie_si_record_i32($i106);
    goto corral_source_split_2584;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    $i107 := $trunc.i32.i8($i106);
    call {:si_unique_call 6610} {:cexpr "dsp_precision"} {:si_old_unique_call 1430} boogie_si_record_i8($i107);
    goto corral_source_split_2585;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    $i100, $i101 := $i104, $i107;
    goto corral_source_split_2585_dummy;

  corral_source_split_2585_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb12:
    assume $i87 == 1;
    goto corral_source_split_2558;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i90 := $lshr.i32($i84, 1);
    call {:si_unique_call 6611} {:cexpr "multiplier"} {:si_old_unique_call 1418} boogie_si_record_i32($i90);
    goto corral_source_split_2562;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    $i91 := $lshr.i32($i83, 1);
    call {:si_unique_call 6612} {:cexpr "divider"} {:si_old_unique_call 1419} boogie_si_record_i32($i91);
    goto corral_source_split_2563;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    $i83, $i84 := $i91, $i90;
    goto corral_source_split_2563_dummy;

  corral_source_split_2563_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i49 == 1;
    goto corral_source_split_2519;

  corral_source_split_2519:
    assume {:verifier.code 0} true;
    $i50 := $p2i.ref.i64($p0);
    call {:si_unique_call 6613} {:cexpr "__cil_tmp45"} {:si_old_unique_call 1394} boogie_si_record_i64($i50);
    goto corral_source_split_2520;

  corral_source_split_2520:
    assume {:verifier.code 0} true;
    $i51 := $add.i64($i50, 1160);
    call {:si_unique_call 6614} {:cexpr "__cil_tmp46"} {:si_old_unique_call 1395} boogie_si_record_i64($i51);
    goto corral_source_split_2521;

  corral_source_split_2521:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i51);
    goto corral_source_split_2522;

  corral_source_split_2522:
    assume {:verifier.code 0} true;
    havoc $p53;
    goto corral_source_split_2523;

  corral_source_split_2523:
    assume {:verifier.code 0} true;
    $p54 := $bitcast.ref.ref($p53);
    goto corral_source_split_2524;

  corral_source_split_2524:
    assume {:verifier.code 0} true;
    $i55 := $p2i.ref.i64($p54);
    call {:si_unique_call 6615} {:cexpr "__cil_tmp48"} {:si_old_unique_call 1396} boogie_si_record_i64($i55);
    goto corral_source_split_2525;

  corral_source_split_2525:
    assume {:verifier.code 0} true;
    $i56 := $add.i64($i55, 1144);
    call {:si_unique_call 6616} {:cexpr "__cil_tmp49"} {:si_old_unique_call 1397} boogie_si_record_i64($i56);
    goto corral_source_split_2526;

  corral_source_split_2526:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i56);
    goto corral_source_split_2527;

  corral_source_split_2527:
    assume {:verifier.code 0} true;
    havoc $i58;
    call {:si_unique_call 6617} {:cexpr "__cil_tmp50"} {:si_old_unique_call 1398} boogie_si_record_i16($i58);
    goto corral_source_split_2528;

  corral_source_split_2528:
    assume {:verifier.code 0} true;
    $i59 := $zext.i16.i32($i58);
    call {:si_unique_call 6618} {:cexpr "__cil_tmp51"} {:si_old_unique_call 1399} boogie_si_record_i32($i59);
    goto corral_source_split_2529;

  corral_source_split_2529:
    assume {:verifier.code 0} true;
    $i60 := $mul.i32($i13, $i59);
    call {:si_unique_call 6619} {:cexpr "multiplier"} {:si_old_unique_call 1400} boogie_si_record_i32($i60);
    goto corral_source_split_2530;

  corral_source_split_2530:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p2);
    call {:si_unique_call 6620} {:cexpr "__cil_tmp52"} {:si_old_unique_call 1401} boogie_si_record_i64($i61);
    goto corral_source_split_2531;

  corral_source_split_2531:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 44);
    call {:si_unique_call 6621} {:cexpr "__cil_tmp53"} {:si_old_unique_call 1402} boogie_si_record_i64($i62);
    goto corral_source_split_2532;

  corral_source_split_2532:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_2533;

  corral_source_split_2533:
    assume {:verifier.code 0} true;
    havoc $i64;
    call {:si_unique_call 6622} {:cexpr "__cil_tmp54"} {:si_old_unique_call 1403} boogie_si_record_i32($i64);
    goto corral_source_split_2534;

  corral_source_split_2534:
    assume {:verifier.code 0} true;
    $i65 := $mul.i32($i32, $i64);
    call {:si_unique_call 6623} {:cexpr "__cil_tmp55"} {:si_old_unique_call 1404} boogie_si_record_i32($i65);
    goto corral_source_split_2535;

  corral_source_split_2535:
    assume {:verifier.code 0} true;
    $i66 := $and.i32($i65, $sub.i32(0, 8));
    call {:si_unique_call 6624} {:cexpr "divider"} {:si_old_unique_call 1405} boogie_si_record_i32($i66);
    goto corral_source_split_2536;

  corral_source_split_2536:
    assume {:verifier.code 0} true;
    $i67 := $p2i.ref.i64($p54);
    call {:si_unique_call 6625} {:cexpr "__cil_tmp56"} {:si_old_unique_call 1406} boogie_si_record_i64($i67);
    goto corral_source_split_2537;

  corral_source_split_2537:
    assume {:verifier.code 0} true;
    $i68 := $add.i64($i67, 1144);
    call {:si_unique_call 6626} {:cexpr "__cil_tmp57"} {:si_old_unique_call 1407} boogie_si_record_i64($i68);
    goto corral_source_split_2538;

  corral_source_split_2538:
    assume {:verifier.code 0} true;
    $p69 := $i2p.i64.ref($i68);
    goto corral_source_split_2539;

  corral_source_split_2539:
    assume {:verifier.code 0} true;
    havoc $i70;
    call {:si_unique_call 6627} {:cexpr "__cil_tmp58"} {:si_old_unique_call 1408} boogie_si_record_i16($i70);
    goto corral_source_split_2540;

  corral_source_split_2540:
    assume {:verifier.code 0} true;
    $i71 := $zext.i16.i32($i70);
    call {:si_unique_call 6628} {:cexpr "__cil_tmp59"} {:si_old_unique_call 1409} boogie_si_record_i32($i71);
    goto corral_source_split_2541;

  corral_source_split_2541:
    assume {:verifier.code 0} true;
    $i72 := $mul.i32($i28, $i71);
    call {:si_unique_call 6629} {:cexpr "ras_multiplier"} {:si_old_unique_call 1410} boogie_si_record_i32($i72);
    goto corral_source_split_2542;

  corral_source_split_2542:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p2);
    call {:si_unique_call 6630} {:cexpr "__cil_tmp60"} {:si_old_unique_call 1411} boogie_si_record_i64($i73);
    goto corral_source_split_2543;

  corral_source_split_2543:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 44);
    call {:si_unique_call 6631} {:cexpr "__cil_tmp61"} {:si_old_unique_call 1412} boogie_si_record_i64($i74);
    goto corral_source_split_2544;

  corral_source_split_2544:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_2545;

  corral_source_split_2545:
    assume {:verifier.code 0} true;
    havoc $i76;
    call {:si_unique_call 6632} {:cexpr "__cil_tmp62"} {:si_old_unique_call 1413} boogie_si_record_i32($i76);
    goto corral_source_split_2546;

  corral_source_split_2546:
    assume {:verifier.code 0} true;
    $i77 := $mul.i32(1, $i76);
    call {:si_unique_call 6633} {:cexpr "__cil_tmp63"} {:si_old_unique_call 1414} boogie_si_record_i32($i77);
    goto corral_source_split_2547;

  corral_source_split_2547:
    assume {:verifier.code 0} true;
    $i78 := $and.i32($i77, $sub.i32(0, 8));
    call {:si_unique_call 6634} {:cexpr "ras_divider"} {:si_old_unique_call 1415} boogie_si_record_i32($i78);
    goto corral_source_split_2548;

  corral_source_split_2548:
    assume {:verifier.code 0} true;
    $i79, $i80, $i81, $i82 := $i66, $i60, $i72, $i78;
    goto $bb9;

  $bb4:
    assume $i40 == 1;
    goto corral_source_split_2507;

  corral_source_split_2507:
    assume {:verifier.code 0} true;
    $i41 := $zext.i8.i32($i39);
    call {:si_unique_call 6635} {:cexpr "__cil_tmp40"} {:si_old_unique_call 1388} boogie_si_record_i32($i41);
    goto corral_source_split_2508;

  corral_source_split_2508:
    assume {:verifier.code 0} true;
    $i42 := $sub.i32($i41, 1);
    call {:si_unique_call 6636} {:cexpr "__cil_tmp41"} {:si_old_unique_call 1389} boogie_si_record_i32($i42);
    goto corral_source_split_2509;

  corral_source_split_2509:
    assume {:verifier.code 0} true;
    $i43 := $trunc.i32.i8($i42);
    call {:si_unique_call 6637} {:cexpr "vshift"} {:si_old_unique_call 1390} boogie_si_record_i8($i43);
    goto corral_source_split_2510;

  corral_source_split_2510:
    assume {:verifier.code 0} true;
    $i44 := $i43;
    goto $bb6;

  $bb1:
    assume $i29 == 1;
    goto corral_source_split_2493;

  corral_source_split_2493:
    assume {:verifier.code 0} true;
    $i30 := $lshr.i32($i1, 2);
    call {:si_unique_call 6638} {:cexpr "__cil_tmp34"} {:si_old_unique_call 1380} boogie_si_record_i32($i30);
    goto corral_source_split_2494;

  corral_source_split_2494:
    assume {:verifier.code 0} true;
    $i31 := $mul.i32($i24, $i30);
    call {:si_unique_call 6639} {:cexpr "divider"} {:si_old_unique_call 1381} boogie_si_record_i32($i31);
    goto corral_source_split_2495;

  corral_source_split_2495:
    assume {:verifier.code 0} true;
    $i32 := $i31;
    goto $bb3;
}



implementation {:LB_Mapping "aty_var_to_crtc_loop_$bb223"} {:entrypoint} aty_var_to_crtc_EntryCopy_aty_var_to_crtc_loop_$bb223($p0: ref, $p1: ref, $p2: ref) returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i32;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i71: i1;
  var $i76: i1;
  var $i81: i1;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i91: i1;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i32;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i72: i32;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i100: i32;
  var $i101: i64;
  var $i102: i64;
  var $p103: ref;
  var $i104: i32;
  var $i105: i32;
  var $i106: i1;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $i112: i1;
  var $i113: i32;
  var $i114: i32;
  var $i115: i1;
  var $i116: i32;
  var $i117: i32;
  var $i118: i1;
  var $i119: i32;
  var $i120: i1;
  var $i121: i1;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $p136: ref;
  var $i137: i32;
  var $i138: i32;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $i153: i32;
  var $i154: i32;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $i164: i32;
  var $i165: i64;
  var $i166: i64;
  var $p167: ref;
  var $i168: i64;
  var $i169: i1;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $i173: i32;
  var $i174: i32;
  var $i175: i1;
  var $i176: i32;
  var $i177: i64;
  var $i178: i64;
  var $i179: i32;
  var $p180: ref;
  var $i181: i64;
  var $i182: i64;
  var $p183: ref;
  var $i184: i32;
  var $i185: i32;
  var $i186: i1;
  var $i187: i64;
  var $i188: i64;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $p194: ref;
  var $i195: i32;
  var $i196: i64;
  var $i197: i64;
  var $i198: i32;
  var $p199: ref;
  var $i200: i32;
  var $i201: i64;
  var $i202: i64;
  var $i203: i64;
  var $i204: i64;
  var $i205: i32;
  var $p206: ref;
  var $i207: i64;
  var $i208: i64;
  var $i209: i64;
  var $i210: i64;
  var $p211: ref;
  var $i212: i32;
  var $i213: i64;
  var $i214: i64;
  var $i215: i32;
  var $p216: ref;
  var $i217: i64;
  var $i218: i64;
  var $i219: i64;
  var $i220: i64;
  var $p221: ref;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $p226: ref;
  var $i227: i64;
  var $i228: i64;
  var $p229: ref;
  var $i230: i32;
  var $i231: i64;
  var $i232: i64;
  var $i233: i1;
  var $i234: i64;
  var $i235: i64;
  var $p236: ref;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i240: i64;
  var $i241: i64;
  var $p242: ref;
  var $i243: i16;
  var $i244: i32;
  var $i245: i1;
  var $i246: i64;
  var $i247: i64;
  var $p248: ref;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i1;
  var $i253: i64;
  var $i254: i64;
  var $p255: ref;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i260: i64;
  var $i261: i64;
  var $i262: i64;
  var $i263: i64;
  var $p264: ref;
  var $i265: i32;
  var $i266: i64;
  var $i267: i64;
  var $i268: i32;
  var $p269: ref;
  var $i270: i64;
  var $i271: i64;
  var $p272: ref;
  var $i273: i32;
  var $i274: i32;
  var $i275: i1;
  var $i276: i32;
  var $i277: i64;
  var $i278: i64;
  var $p279: ref;
  var $i280: i64;
  var $i281: i1;
  var $i282: i64;
  var $i283: i64;
  var $p284: ref;
  var $i285: i32;
  var $i286: i64;
  var $i287: i64;
  var $i288: i1;
  var $i289: i32;
  var $i290: i64;
  var $i291: i64;
  var $p292: ref;
  var $i293: i16;
  var $i294: i32;
  var $i295: i1;
  var $i296: i64;
  var $i297: i64;
  var $p298: ref;
  var $i299: i16;
  var $i300: i32;
  var $i301: i32;
  var $i302: i1;
  var $i303: i32;
  var $i304: i32;
  var $i305: i32;
  var $i306: i32;
  var $i307: i32;
  var $i308: i64;
  var $i309: i64;
  var $p310: ref;
  var $i311: i16;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $p316: ref;
  var $i317: i16;
  var $i318: i32;
  var $i319: i32;
  var $i320: i64;
  var $i321: i64;
  var $p322: ref;
  var $i323: i16;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $p327: ref;
  var $i328: i16;
  var $i329: i32;
  var $i330: i32;
  var $i331: i64;
  var $i332: i64;
  var $p333: ref;
  var $i334: i16;
  var $i335: i32;
  var $i336: i32;
  var $i337: i32;
  var $i338: i64;
  var $i339: i64;
  var $p340: ref;
  var $i341: i16;
  var $i342: i32;
  var $i343: i32;
  var $i344: i32;
  var $i345: i64;
  var $i346: i64;
  var $p347: ref;
  var $i348: i16;
  var $i349: i32;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i32;
  var $i354: i32;
  var $i355: i32;
  var $i356: i32;
  var $i357: i32;
  var $i358: i32;
  var $i359: i32;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i32;
  var $i364: i32;
  var $i365: i32;
  var $i366: i32;
  var $i367: i32;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i32;
  var $i372: i32;
  var $i373: i32;
  var $i374: i32;
  var $i375: i32;
  var $i376: i32;
  var $i377: i1;
  var $i378: i64;
  var $i379: i64;
  var $p380: ref;
  var $i381: i32;
  var $i382: i32;
  var $i383: i1;
  var $i384: i32;
  var $i385: i1;
  var $i386: i64;
  var $i387: i64;
  var $p388: ref;
  var $i389: i32;
  var $i390: i32;
  var $i391: i1;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i395: i1;
  var $i396: i64;
  var $i397: i64;
  var $p398: ref;
  var $i399: i32;
  var $i400: i32;
  var $i401: i1;
  var $i402: i32;
  var $i403: i32;
  var $i404: i1;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i32;
  var $i412: i32;
  var $i413: i64;
  var $i414: i64;
  var $p415: ref;
  var $i416: i64;
  var $i417: i1;
  var $i418: i64;
  var $i419: i64;
  var $p420: ref;
  var $i421: i32;
  var $i422: i64;
  var $i423: i64;
  var $i424: i1;
  var $i425: i32;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i32;
  var $i430: i1;
  var $i431: i64;
  var $i432: i64;
  var $p433: ref;
  var $i434: i32;
  var $i435: i32;
  var $i436: i1;
  var $i437: i32;
  var $i438: i1;
  var $i439: i64;
  var $i440: i64;
  var $p441: ref;
  var $i442: i32;
  var $i443: i32;
  var $i444: i1;
  var $i445: i32;
  var $i446: i1;
  var $i447: i32;
  var $i448: i1;
  var $i449: i64;
  var $i450: i64;
  var $p451: ref;
  var $i452: i32;
  var $i453: i32;
  var $i454: i1;
  var $i455: i32;
  var $i456: i32;
  var $i457: i1;
  var $i458: i32;
  var $p459: ref;
  var $i460: i64;
  var $i461: i64;
  var $p462: ref;
  var $i463: i64;
  var $i464: i64;
  var $p465: ref;
  var $i466: i64;
  var $i467: i64;
  var $p468: ref;
  var $i469: i64;
  var $i470: i64;
  var $p471: ref;
  var $i472: i64;
  var $i473: i64;
  var $i474: i32;
  var $i475: i32;
  var $i476: i32;
  var $i477: i32;
  var $i478: i32;
  var $i479: i32;
  var $i480: i32;
  var $i481: i32;
  var $p482: ref;
  var $i483: i64;
  var $i484: i64;
  var $p485: ref;
  var $i486: i64;
  var $i487: i64;
  var $i488: i32;
  var $i489: i32;
  var $p490: ref;
  var $i491: i64;
  var $i492: i64;
  var $i493: i32;
  var $i494: i32;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i32;
  var $i499: i32;
  var $i500: i32;
  var $i501: i32;
  var $i502: i32;
  var $p503: ref;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $p508: ref;
  var $i509: i64;
  var $i510: i64;
  var $i511: i32;
  var $i512: i32;
  var $i513: i32;
  var $i514: i32;
  var $p515: ref;
  var $i516: i64;
  var $i517: i64;
  var $i518: i32;
  var $i519: i32;
  var $p520: ref;
  var $i521: i64;
  var $i522: i64;
  var $i523: i64;
  var $i524: i64;
  var $p525: ref;
  var $i526: i32;
  var $i527: i32;
  var $p528: ref;
  var $i529: i32;
  var $i530: i1;
  var $i531: i64;
  var $i532: i64;
  var $i533: i64;
  var $i534: i64;
  var $p535: ref;
  var $i536: i32;
  var $i537: i32;
  var $p538: ref;
  var $i539: i32;
  var $i540: i1;
  var $i541: i64;
  var $i542: i64;
  var $i543: i64;
  var $i544: i64;
  var $p545: ref;
  var $i546: i32;
  var $i547: i32;
  var $p548: ref;
  var $i549: i64;
  var $i550: i64;
  var $p551: ref;
  var $i552: i64;
  var $i553: i1;
  var $i554: i32;
  var $i555: i1;
  var $i556: i32;
  var $i557: i32;
  var $i558: i64;
  var $i559: i64;
  var $i560: i64;
  var $i561: i64;
  var $p562: ref;
  var $i563: i32;
  var $i564: i32;
  var $p565: ref;
  var $i566: i64;
  var $i567: i64;
  var $i568: i64;
  var $i569: i64;
  var $p570: ref;
  var $i571: i32;
  var $i572: i64;
  var $i573: i64;
  var $i574: i32;
  var $p575: ref;
  var $i576: i64;
  var $i577: i64;
  var $i578: i64;
  var $i579: i64;
  var $p580: ref;
  var $i581: i32;
  var $i582: i64;
  var $i583: i64;
  var $i584: i32;
  var $p585: ref;
  var $i586: i64;
  var $i587: i64;
  var $i588: i32;
  var $p589: ref;
  var $i590: i64;
  var $i591: i64;
  var $p592: ref;
  var $i593: i32;
  var $i594: i32;
  var $i595: i1;
  var $i596: i32;
  var $i597: i64;
  var $i598: i64;
  var $i599: i64;
  var $i600: i64;
  var $i601: i32;
  var $p602: ref;
  var $i603: i64;
  var $i604: i64;
  var $i605: i64;
  var $i606: i64;
  var $p607: ref;
  var $i608: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $p612: ref;
  var $i613: i64;
  var $i614: i64;
  var $p615: ref;
  var $i616: i16;
  var $i617: i32;
  var $i618: i1;
  var $i619: i64;
  var $i620: i64;
  var $p621: ref;
  var $i622: i32;
  var $i623: i64;
  var $i624: i64;
  var $i625: i1;
  var $i626: i32;
  var $i627: i64;
  var $i628: i64;
  var $p629: ref;
  var $i630: i16;
  var $i631: i32;
  var $i632: i32;
  var $i633: i64;
  var $i634: i64;
  var $p635: ref;
  var $i636: i16;
  var $i637: i32;
  var $i638: i32;
  var $i639: i1;
  var $i640: i1;
  var $i641: i64;
  var $i642: i64;
  var $p643: ref;
  var $i644: i16;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i649: i64;
  var $i650: i64;
  var $p651: ref;
  var $i652: i16;
  var $i653: i32;
  var $i654: i32;
  var $i655: i32;
  var $i656: i32;
  var $i657: i32;
  var $i658: i32;
  var $i659: i32;
  var $i660: i32;
  var $i661: i32;
  var $i662: i1;
  var $i663: i32;
  var $i664: i32;
  var $i667: i32;
  var $i668: i64;
  var $i669: i64;
  var $i670: i64;
  var $p671: ref;
  var $i672: i8;
  var $i673: i32;
  var $i674: i32;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i32;
  var $i679: i1;
  var $i680: i1;
  var $i681: i32;
  var $i682: i32;
  var $i683: i32;
  var $i684: i32;
  var $i665: i32;
  var $i666: i32;
  var $i685: i1;
  var $i686: i1;
  var $i687: i64;
  var $i688: i64;
  var $i689: i64;
  var $p690: ref;
  var $i691: i8;
  var $i692: i32;
  var $i693: i32;
  var $i694: i32;
  var $i695: i32;
  var $i696: i32;
  var $i697: i32;
  var $i698: i1;
  var $i699: i32;
  var $i700: i1;
  var $i701: i32;
  var $i704: i32;
  var $i705: i32;
  var $i702: i32;
  var $i703: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i32;
  var $i709: i64;
  var $i710: i64;
  var $i711: i64;
  var $i712: i64;
  var $i713: i64;
  var $i714: i64;
  var $i715: i64;
  var $i716: i64;
  var $i717: i64;
  var $i718: i64;
  var $i719: i64;
  var $p720: ref;
  var $i721: i32;
  var $i722: i64;
  var $i723: i64;
  var $i724: i32;
  var $p725: ref;
  var $i726: i64;
  var $i727: i64;
  var $i728: i64;
  var $i729: i64;
  var $p730: ref;
  var $i731: i16;
  var $i732: i64;
  var $i733: i64;
  var $i734: i64;
  var $i735: i64;
  var $i736: i64;
  var $i737: i64;
  var $i738: i64;
  var $i739: i64;
  var $p740: ref;
  var $i741: i32;
  var $i742: i64;
  var $i743: i64;
  var $i744: i32;
  var $p745: ref;
  var $i746: i64;
  var $i747: i64;
  var $p748: ref;
  var $i749: i16;
  var $i750: i32;
  var $i751: i1;
  var $i752: i64;
  var $i753: i64;
  var $p754: ref;
  var $i755: i32;
  var $i756: i64;
  var $i757: i64;
  var $i758: i1;
  var $i759: i64;
  var $i760: i64;
  var $i761: i64;
  var $i762: i64;
  var $p763: ref;
  var $i764: i16;
  var $i765: i64;
  var $i766: i64;
  var $i767: i64;
  var $i768: i64;
  var $i769: i64;
  var $i770: i64;
  var $i771: i32;
  var $p772: ref;
  var $i773: i64;
  var $i774: i64;
  var $p775: ref;
  var $i776: i32;
  var $i777: i32;
  var $i778: i1;
  var $i779: i64;
  var $i780: i64;
  var $p781: ref;
  var $i782: i32;
  var $i783: i32;
  var $i784: i1;
  var $i785: i32;
  var $i786: i1;
  var $i787: i64;
  var $i788: i64;
  var $i789: i64;
  var $i790: i64;
  var $p791: ref;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $p796: ref;
  var $i797: i64;
  var $i798: i64;
  var $p799: ref;
  var $i800: i64;
  var $i801: i64;
  var $p802: ref;
  var $i803: i64;
  var $i804: i64;
  var $i805: i64;
  var $i806: i64;
  var $p807: ref;
  var $i808: i32;
  var $p809: ref;
  var $i810: i64;
  var $i811: i64;
  var $i812: i64;
  var $i813: i64;
  var $p814: ref;
  var $i815: i32;
  var $p816: ref;
  var $i817: i64;
  var $i818: i64;
  var $i819: i64;
  var $i820: i64;
  var $p821: ref;
  var $i822: i32;
  var $p823: ref;
  var $i824: i64;
  var $i825: i64;
  var $i826: i64;
  var $i827: i64;
  var $p828: ref;
  var $i829: i32;
  var $p830: ref;
  var $i831: i64;
  var $i832: i64;
  var $p833: ref;
  var $i834: i32;
  var $i835: i32;
  var $i836: i1;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i64;
  var $i842: i64;
  var $p843: ref;
  var $i844: i32;
  var $i845: i32;
  var $p846: ref;
  var $i847: i64;
  var $i848: i64;
  var $p849: ref;
  var $i850: i64;
  var $i851: i64;
  var $p852: ref;
  var $i99: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 6970} {:si_old_unique_call 1838} $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 6971} {:si_old_unique_call 1839} $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    goto corral_source_split_3444;

  corral_source_split_3444:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p0);
    call {:si_unique_call 6972} {:cexpr "__cil_tmp52"} {:si_old_unique_call 1840} boogie_si_record_i64($i5);
    goto corral_source_split_3445;

  corral_source_split_3445:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 1160);
    call {:si_unique_call 6973} {:cexpr "__cil_tmp53"} {:si_old_unique_call 1841} boogie_si_record_i64($i6);
    goto corral_source_split_3446;

  corral_source_split_3446:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_3447;

  corral_source_split_3447:
    assume {:verifier.code 0} true;
    havoc $p8;
    goto corral_source_split_3448;

  corral_source_split_3448:
    assume {:verifier.code 0} true;
    $p9 := $bitcast.ref.ref($p8);
    goto corral_source_split_3449;

  corral_source_split_3449:
    assume {:verifier.code 0} true;
    $p10 := $bitcast.ref.ref($p1);
    goto corral_source_split_3450;

  corral_source_split_3450:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 6974} {:cexpr "__cil_tmp55"} {:si_old_unique_call 1842} boogie_si_record_i32($i11);
    goto corral_source_split_3451;

  corral_source_split_3451:
    assume {:verifier.code 0} true;
    $i12 := $add.i32($i11, 7);
    call {:si_unique_call 6975} {:cexpr "__cil_tmp56"} {:si_old_unique_call 1843} boogie_si_record_i32($i12);
    goto corral_source_split_3452;

  corral_source_split_3452:
    assume {:verifier.code 0} true;
    $i13 := $and.i32($i12, $sub.i32(0, 8));
    call {:si_unique_call 6976} {:cexpr "__cil_tmp57"} {:si_old_unique_call 1844} boogie_si_record_i32($i13);
    goto corral_source_split_3453;

  corral_source_split_3453:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p1);
    call {:si_unique_call 6977} {:cexpr "__cil_tmp58"} {:si_old_unique_call 1845} boogie_si_record_i64($i14);
    goto corral_source_split_3454;

  corral_source_split_3454:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 4);
    call {:si_unique_call 6978} {:cexpr "__cil_tmp59"} {:si_old_unique_call 1846} boogie_si_record_i64($i15);
    goto corral_source_split_3455;

  corral_source_split_3455:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_3456;

  corral_source_split_3456:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 6979} {:cexpr "__cil_tmp60"} {:si_old_unique_call 1847} boogie_si_record_i32($i17);
    goto corral_source_split_3457;

  corral_source_split_3457:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p1);
    call {:si_unique_call 6980} {:cexpr "__cil_tmp61"} {:si_old_unique_call 1848} boogie_si_record_i64($i18);
    goto corral_source_split_3458;

  corral_source_split_3458:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 8);
    call {:si_unique_call 6981} {:cexpr "__cil_tmp62"} {:si_old_unique_call 1849} boogie_si_record_i64($i19);
    goto corral_source_split_3459;

  corral_source_split_3459:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_3460;

  corral_source_split_3460:
    assume {:verifier.code 0} true;
    havoc $i21;
    call {:si_unique_call 6982} {:cexpr "__cil_tmp63"} {:si_old_unique_call 1850} boogie_si_record_i32($i21);
    goto corral_source_split_3461;

  corral_source_split_3461:
    assume {:verifier.code 0} true;
    $i22 := $add.i32($i21, 7);
    call {:si_unique_call 6983} {:cexpr "__cil_tmp64"} {:si_old_unique_call 1851} boogie_si_record_i32($i22);
    goto corral_source_split_3462;

  corral_source_split_3462:
    assume {:verifier.code 0} true;
    $i23 := $and.i32($i22, $sub.i32(0, 8));
    call {:si_unique_call 6984} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1852} boogie_si_record_i32($i23);
    goto corral_source_split_3463;

  corral_source_split_3463:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p1);
    call {:si_unique_call 6985} {:cexpr "__cil_tmp66"} {:si_old_unique_call 1853} boogie_si_record_i64($i24);
    goto corral_source_split_3464;

  corral_source_split_3464:
    assume {:verifier.code 0} true;
    $i25 := $add.i64($i24, 12);
    call {:si_unique_call 6986} {:cexpr "__cil_tmp67"} {:si_old_unique_call 1854} boogie_si_record_i64($i25);
    goto corral_source_split_3465;

  corral_source_split_3465:
    assume {:verifier.code 0} true;
    $p26 := $i2p.i64.ref($i25);
    goto corral_source_split_3466;

  corral_source_split_3466:
    assume {:verifier.code 0} true;
    havoc $i27;
    call {:si_unique_call 6987} {:cexpr "__cil_tmp68"} {:si_old_unique_call 1855} boogie_si_record_i32($i27);
    goto corral_source_split_3467;

  corral_source_split_3467:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p1);
    call {:si_unique_call 6988} {:cexpr "__cil_tmp69"} {:si_old_unique_call 1856} boogie_si_record_i64($i28);
    goto corral_source_split_3468;

  corral_source_split_3468:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 16);
    call {:si_unique_call 6989} {:cexpr "__cil_tmp70"} {:si_old_unique_call 1857} boogie_si_record_i64($i29);
    goto corral_source_split_3469;

  corral_source_split_3469:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_3470;

  corral_source_split_3470:
    assume {:verifier.code 0} true;
    havoc $i31;
    call {:si_unique_call 6990} {:cexpr "__cil_tmp71"} {:si_old_unique_call 1858} boogie_si_record_i32($i31);
    goto corral_source_split_3471;

  corral_source_split_3471:
    assume {:verifier.code 0} true;
    $i32 := $add.i32($i31, 7);
    call {:si_unique_call 6991} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1859} boogie_si_record_i32($i32);
    goto corral_source_split_3472;

  corral_source_split_3472:
    assume {:verifier.code 0} true;
    $i33 := $and.i32($i32, $sub.i32(0, 8));
    call {:si_unique_call 6992} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1860} boogie_si_record_i32($i33);
    goto corral_source_split_3473;

  corral_source_split_3473:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p1);
    call {:si_unique_call 6993} {:cexpr "__cil_tmp74"} {:si_old_unique_call 1861} boogie_si_record_i64($i34);
    goto corral_source_split_3474;

  corral_source_split_3474:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 20);
    call {:si_unique_call 6994} {:cexpr "__cil_tmp75"} {:si_old_unique_call 1862} boogie_si_record_i64($i35);
    goto corral_source_split_3475;

  corral_source_split_3475:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_3476;

  corral_source_split_3476:
    assume {:verifier.code 0} true;
    havoc $i37;
    call {:si_unique_call 6995} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1863} boogie_si_record_i32($i37);
    goto corral_source_split_3477;

  corral_source_split_3477:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p1);
    call {:si_unique_call 6996} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1864} boogie_si_record_i64($i38);
    goto corral_source_split_3478;

  corral_source_split_3478:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 6997} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1865} boogie_si_record_i64($i39);
    goto corral_source_split_3479;

  corral_source_split_3479:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_3480;

  corral_source_split_3480:
    assume {:verifier.code 0} true;
    havoc $i41;
    call {:si_unique_call 6998} {:cexpr "__cil_tmp79"} {:si_old_unique_call 1866} boogie_si_record_i32($i41);
    goto corral_source_split_3481;

  corral_source_split_3481:
    assume {:verifier.code 0} true;
    $i42 := $eq.i32($i41, 16);
    goto corral_source_split_3482;

  corral_source_split_3482:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i42 == 1);
    assume {:verifier.code 0} true;
    $i49 := $i41;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_3495;

  corral_source_split_3495:
    assume {:verifier.code 0} true;
    $i50 := $p2i.ref.i64($p1);
    call {:si_unique_call 6999} {:cexpr "__cil_tmp84"} {:si_old_unique_call 1870} boogie_si_record_i64($i50);
    goto corral_source_split_3496;

  corral_source_split_3496:
    assume {:verifier.code 0} true;
    $i51 := $add.i64($i50, 128);
    call {:si_unique_call 7000} {:cexpr "__cil_tmp85"} {:si_old_unique_call 1871} boogie_si_record_i64($i51);
    goto corral_source_split_3497;

  corral_source_split_3497:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i51);
    goto corral_source_split_3498;

  corral_source_split_3498:
    assume {:verifier.code 0} true;
    havoc $i53;
    call {:si_unique_call 7001} {:cexpr "__cil_tmp86"} {:si_old_unique_call 1872} boogie_si_record_i32($i53);
    goto corral_source_split_3499;

  corral_source_split_3499:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p1);
    call {:si_unique_call 7002} {:cexpr "__cil_tmp87"} {:si_old_unique_call 1873} boogie_si_record_i64($i54);
    goto corral_source_split_3500;

  corral_source_split_3500:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 132);
    call {:si_unique_call 7003} {:cexpr "__cil_tmp88"} {:si_old_unique_call 1874} boogie_si_record_i64($i55);
    goto corral_source_split_3501;

  corral_source_split_3501:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_3502;

  corral_source_split_3502:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 7004} {:cexpr "__cil_tmp89"} {:si_old_unique_call 1875} boogie_si_record_i32($i57);
    goto corral_source_split_3503;

  corral_source_split_3503:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i13, $i33);
    call {:si_unique_call 7005} {:cexpr "__cil_tmp90"} {:si_old_unique_call 1876} boogie_si_record_i32($i58);
    goto corral_source_split_3504;

  corral_source_split_3504:
    assume {:verifier.code 0} true;
    $i59 := $ult.i32($i23, $i58);
    goto corral_source_split_3505;

  corral_source_split_3505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i59} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i59 == 1);
    assume {:verifier.code 0} true;
    $i61 := $i23;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_3510;

  corral_source_split_3510:
    assume {:verifier.code 0} true;
    $i62 := $add.i32($i17, $i37);
    call {:si_unique_call 7006} {:cexpr "__cil_tmp91"} {:si_old_unique_call 1878} boogie_si_record_i32($i62);
    goto corral_source_split_3511;

  corral_source_split_3511:
    assume {:verifier.code 0} true;
    $i63 := $ult.i32($i27, $i62);
    goto corral_source_split_3512;

  corral_source_split_3512:
    assume {:verifier.code 0} true;
    assume {:branchcond $i63} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i63 == 1);
    assume {:verifier.code 0} true;
    $i65 := $i27;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto corral_source_split_3517;

  corral_source_split_3517:
    assume {:verifier.code 0} true;
    $i66 := $ule.i32($i49, 8);
    goto corral_source_split_3518;

  corral_source_split_3518:
    assume {:verifier.code 0} true;
    assume {:branchcond $i66} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i66 == 1);
    goto corral_source_split_3522;

  corral_source_split_3522:
    assume {:verifier.code 0} true;
    $i71 := $ule.i32($i49, 15);
    goto corral_source_split_3523;

  corral_source_split_3523:
    assume {:verifier.code 0} true;
    assume {:branchcond $i71} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i71 == 1);
    goto corral_source_split_3536;

  corral_source_split_3536:
    assume {:verifier.code 0} true;
    $i76 := $ule.i32($i49, 16);
    goto corral_source_split_3537;

  corral_source_split_3537:
    assume {:verifier.code 0} true;
    assume {:branchcond $i76} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i76 == 1);
    goto corral_source_split_3541;

  corral_source_split_3541:
    assume {:verifier.code 0} true;
    $i81 := $ule.i32($i49, 24);
    goto corral_source_split_3542;

  corral_source_split_3542:
    assume {:verifier.code 0} true;
    assume {:branchcond $i81} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i81 == 1);
    goto corral_source_split_3552;

  corral_source_split_3552:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i91 := $ule.i32($i49, 32);
    goto corral_source_split_3558;

  corral_source_split_3558:
    assume {:verifier.code 0} true;
    assume {:branchcond $i91} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i91 == 1);
    goto corral_source_split_3562;

  corral_source_split_3562:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i92 := $p2i.ref.i64($p1);
    call {:si_unique_call 7007} {:cexpr "__cil_tmp95"} {:si_old_unique_call 1889} boogie_si_record_i64($i92);
    goto corral_source_split_3564;

  corral_source_split_3564:
    assume {:verifier.code 0} true;
    $i93 := $add.i64($i92, 84);
    call {:si_unique_call 7008} {:cexpr "__cil_tmp96"} {:si_old_unique_call 1890} boogie_si_record_i64($i93);
    goto corral_source_split_3565;

  corral_source_split_3565:
    assume {:verifier.code 0} true;
    $p94 := $i2p.i64.ref($i93);
    goto corral_source_split_3566;

  corral_source_split_3566:
    assume {:verifier.code 0} true;
    havoc $i95;
    call {:si_unique_call 7009} {:cexpr "__cil_tmp97"} {:si_old_unique_call 1891} boogie_si_record_i32($i95);
    goto corral_source_split_3567;

  corral_source_split_3567:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, 2);
    call {:si_unique_call 7010} {:cexpr "__cil_tmp98"} {:si_old_unique_call 1892} boogie_si_record_i32($i96);
    goto corral_source_split_3568;

  corral_source_split_3568:
    assume {:verifier.code 0} true;
    $i97 := $ne.i32($i96, 0);
    goto corral_source_split_3569;

  corral_source_split_3569:
    assume {:verifier.code 0} true;
    assume {:branchcond $i97} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i97 == 1);
    goto corral_source_split_3571;

  corral_source_split_3571:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7011} {:si_old_unique_call 1893} $i98 := printk.ref(.str.6);
    goto corral_source_split_3572;

  corral_source_split_3572:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    goto corral_source_split_3574;

  corral_source_split_3574:
    assume {:verifier.code 0} true;
    $r := $i99;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb34:
    assume $i97 == 1;
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb29:
    assume $i91 == 1;
    goto corral_source_split_3560;

  corral_source_split_3560:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i88, $i89, $i90 := 17171974, 1536, 32;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i77, $i78, $i79, $i80 := 32896, $i88, $i89, $i90;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i72, $i73, $i74, $i75 := $i77, $i78, $i79, $i80;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i67, $i68, $i69, $i70 := $i72, $i73, $i74, $i75;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3525;

  corral_source_split_3525:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7012} {:si_old_unique_call 1880} $i100 := calc_line_length($p9, $i61, $i70);
    call {:si_unique_call 7013} {:cexpr "line_length"} {:si_old_unique_call 1881} boogie_si_record_i32($i100);
    goto corral_source_split_3526;

  corral_source_split_3526:
    assume {:verifier.code 0} true;
    $i101 := $p2i.ref.i64($p0);
    call {:si_unique_call 7014} {:cexpr "__cil_tmp100"} {:si_old_unique_call 1882} boogie_si_record_i64($i101);
    goto corral_source_split_3527;

  corral_source_split_3527:
    assume {:verifier.code 0} true;
    $i102 := $add.i64($i101, 344);
    call {:si_unique_call 7015} {:cexpr "__cil_tmp101"} {:si_old_unique_call 1883} boogie_si_record_i64($i102);
    goto corral_source_split_3528;

  corral_source_split_3528:
    assume {:verifier.code 0} true;
    $p103 := $i2p.i64.ref($i102);
    goto corral_source_split_3529;

  corral_source_split_3529:
    assume {:verifier.code 0} true;
    havoc $i104;
    call {:si_unique_call 7016} {:cexpr "__cil_tmp102"} {:si_old_unique_call 1884} boogie_si_record_i32($i104);
    goto corral_source_split_3530;

  corral_source_split_3530:
    assume {:verifier.code 0} true;
    $i105 := $mul.i32($i65, $i100);
    call {:si_unique_call 7017} {:cexpr "__cil_tmp104"} {:si_old_unique_call 1885} boogie_si_record_i32($i105);
    goto corral_source_split_3531;

  corral_source_split_3531:
    assume {:verifier.code 0} true;
    $i106 := $ugt.i32($i105, $i104);
    goto corral_source_split_3532;

  corral_source_split_3532:
    assume {:verifier.code 0} true;
    assume {:branchcond $i106} true;
    goto $bb39, $bb40;

  $bb40:
    assume !($i106 == 1);
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $i114 := $and.i32($i53, 1);
    goto corral_source_split_3588;

  corral_source_split_3588:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 0);
    goto corral_source_split_3589;

  corral_source_split_3589:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i115 == 1);
    assume {:verifier.code 0} true;
    $i116 := 1;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto corral_source_split_3593;

  corral_source_split_3593:
    assume {:verifier.code 0} true;
    $i117 := $and.i32($i53, 2);
    goto corral_source_split_3594;

  corral_source_split_3594:
    assume {:verifier.code 0} true;
    $i118 := $ne.i32($i117, 0);
    goto corral_source_split_3595;

  corral_source_split_3595:
    assume {:verifier.code 0} true;
    assume {:branchcond $i118} true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i118 == 1);
    assume {:verifier.code 0} true;
    $i119 := 1;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    goto corral_source_split_3599;

  corral_source_split_3599:
    assume {:verifier.code 0} true;
    $i120 := $ugt.i32($i13, 1600);
    goto corral_source_split_3600;

  corral_source_split_3600:
    assume {:verifier.code 0} true;
    assume {:branchcond $i120} true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i120 == 1);
    goto corral_source_split_3604;

  corral_source_split_3604:
    assume {:verifier.code 0} true;
    $i121 := $ugt.i32($i17, 1200);
    goto corral_source_split_3605;

  corral_source_split_3605:
    assume {:verifier.code 0} true;
    assume {:branchcond $i121} true;
    goto $bb57, $bb58;

  $bb58:
    assume !($i121 == 1);
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p1);
    call {:si_unique_call 7018} {:cexpr "__cil_tmp113"} {:si_old_unique_call 1904} boogie_si_record_i64($i129);
    goto corral_source_split_3619;

  corral_source_split_3619:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 108);
    call {:si_unique_call 7019} {:cexpr "__cil_tmp114"} {:si_old_unique_call 1905} boogie_si_record_i64($i130);
    goto corral_source_split_3620;

  corral_source_split_3620:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_3621;

  corral_source_split_3621:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 7020} {:cexpr "__cil_tmp115"} {:si_old_unique_call 1906} boogie_si_record_i32($i132);
    goto corral_source_split_3622;

  corral_source_split_3622:
    assume {:verifier.code 0} true;
    $i133 := $add.i32($i13, $i132);
    call {:si_unique_call 7021} {:cexpr "h_sync_strt"} {:si_old_unique_call 1907} boogie_si_record_i32($i133);
    goto corral_source_split_3623;

  corral_source_split_3623:
    assume {:verifier.code 0} true;
    $i134 := $p2i.ref.i64($p1);
    call {:si_unique_call 7022} {:cexpr "__cil_tmp117"} {:si_old_unique_call 1908} boogie_si_record_i64($i134);
    goto corral_source_split_3624;

  corral_source_split_3624:
    assume {:verifier.code 0} true;
    $i135 := $add.i64($i134, 120);
    call {:si_unique_call 7023} {:cexpr "__cil_tmp118"} {:si_old_unique_call 1909} boogie_si_record_i64($i135);
    goto corral_source_split_3625;

  corral_source_split_3625:
    assume {:verifier.code 0} true;
    $p136 := $i2p.i64.ref($i135);
    goto corral_source_split_3626;

  corral_source_split_3626:
    assume {:verifier.code 0} true;
    havoc $i137;
    call {:si_unique_call 7024} {:cexpr "__cil_tmp119"} {:si_old_unique_call 1910} boogie_si_record_i32($i137);
    goto corral_source_split_3627;

  corral_source_split_3627:
    assume {:verifier.code 0} true;
    $i138 := $add.i32($i133, $i137);
    call {:si_unique_call 7025} {:cexpr "h_sync_end"} {:si_old_unique_call 1911} boogie_si_record_i32($i138);
    goto corral_source_split_3628;

  corral_source_split_3628:
    assume {:verifier.code 0} true;
    $i139 := $p2i.ref.i64($p1);
    call {:si_unique_call 7026} {:cexpr "__cil_tmp121"} {:si_old_unique_call 1912} boogie_si_record_i64($i139);
    goto corral_source_split_3629;

  corral_source_split_3629:
    assume {:verifier.code 0} true;
    $i140 := $add.i64($i139, 108);
    call {:si_unique_call 7027} {:cexpr "__cil_tmp122"} {:si_old_unique_call 1913} boogie_si_record_i64($i140);
    goto corral_source_split_3630;

  corral_source_split_3630:
    assume {:verifier.code 0} true;
    $p141 := $i2p.i64.ref($i140);
    goto corral_source_split_3631;

  corral_source_split_3631:
    assume {:verifier.code 0} true;
    havoc $i142;
    call {:si_unique_call 7028} {:cexpr "__cil_tmp123"} {:si_old_unique_call 1914} boogie_si_record_i32($i142);
    goto corral_source_split_3632;

  corral_source_split_3632:
    assume {:verifier.code 0} true;
    $i143 := $and.i32($i142, 7);
    call {:si_unique_call 7029} {:cexpr "__cil_tmp124"} {:si_old_unique_call 1915} boogie_si_record_i32($i143);
    goto corral_source_split_3633;

  corral_source_split_3633:
    assume {:verifier.code 0} true;
    $i144 := $p2i.ref.i64($p1);
    call {:si_unique_call 7030} {:cexpr "__cil_tmp125"} {:si_old_unique_call 1916} boogie_si_record_i64($i144);
    goto corral_source_split_3634;

  corral_source_split_3634:
    assume {:verifier.code 0} true;
    $i145 := $add.i64($i144, 104);
    call {:si_unique_call 7031} {:cexpr "__cil_tmp126"} {:si_old_unique_call 1917} boogie_si_record_i64($i145);
    goto corral_source_split_3635;

  corral_source_split_3635:
    assume {:verifier.code 0} true;
    $p146 := $i2p.i64.ref($i145);
    goto corral_source_split_3636;

  corral_source_split_3636:
    assume {:verifier.code 0} true;
    havoc $i147;
    call {:si_unique_call 7032} {:cexpr "__cil_tmp127"} {:si_old_unique_call 1918} boogie_si_record_i32($i147);
    goto corral_source_split_3637;

  corral_source_split_3637:
    assume {:verifier.code 0} true;
    $i148 := $add.i32($i138, $i143);
    call {:si_unique_call 7033} {:cexpr "__cil_tmp129"} {:si_old_unique_call 1919} boogie_si_record_i32($i148);
    goto corral_source_split_3638;

  corral_source_split_3638:
    assume {:verifier.code 0} true;
    $i149 := $add.i32($i148, $i147);
    call {:si_unique_call 7034} {:cexpr "h_total"} {:si_old_unique_call 1920} boogie_si_record_i32($i149);
    goto corral_source_split_3639;

  corral_source_split_3639:
    assume {:verifier.code 0} true;
    $i150 := $p2i.ref.i64($p1);
    call {:si_unique_call 7035} {:cexpr "__cil_tmp130"} {:si_old_unique_call 1921} boogie_si_record_i64($i150);
    goto corral_source_split_3640;

  corral_source_split_3640:
    assume {:verifier.code 0} true;
    $i151 := $add.i64($i150, 116);
    call {:si_unique_call 7036} {:cexpr "__cil_tmp131"} {:si_old_unique_call 1922} boogie_si_record_i64($i151);
    goto corral_source_split_3641;

  corral_source_split_3641:
    assume {:verifier.code 0} true;
    $p152 := $i2p.i64.ref($i151);
    goto corral_source_split_3642;

  corral_source_split_3642:
    assume {:verifier.code 0} true;
    havoc $i153;
    call {:si_unique_call 7037} {:cexpr "__cil_tmp132"} {:si_old_unique_call 1923} boogie_si_record_i32($i153);
    goto corral_source_split_3643;

  corral_source_split_3643:
    assume {:verifier.code 0} true;
    $i154 := $add.i32($i17, $i153);
    call {:si_unique_call 7038} {:cexpr "v_sync_strt"} {:si_old_unique_call 1924} boogie_si_record_i32($i154);
    goto corral_source_split_3644;

  corral_source_split_3644:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p1);
    call {:si_unique_call 7039} {:cexpr "__cil_tmp134"} {:si_old_unique_call 1925} boogie_si_record_i64($i155);
    goto corral_source_split_3645;

  corral_source_split_3645:
    assume {:verifier.code 0} true;
    $i156 := $add.i64($i155, 124);
    call {:si_unique_call 7040} {:cexpr "__cil_tmp135"} {:si_old_unique_call 1926} boogie_si_record_i64($i156);
    goto corral_source_split_3646;

  corral_source_split_3646:
    assume {:verifier.code 0} true;
    $p157 := $i2p.i64.ref($i156);
    goto corral_source_split_3647;

  corral_source_split_3647:
    assume {:verifier.code 0} true;
    havoc $i158;
    call {:si_unique_call 7041} {:cexpr "__cil_tmp136"} {:si_old_unique_call 1927} boogie_si_record_i32($i158);
    goto corral_source_split_3648;

  corral_source_split_3648:
    assume {:verifier.code 0} true;
    $i159 := $add.i32($i154, $i158);
    call {:si_unique_call 7042} {:cexpr "v_sync_end"} {:si_old_unique_call 1928} boogie_si_record_i32($i159);
    goto corral_source_split_3649;

  corral_source_split_3649:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p1);
    call {:si_unique_call 7043} {:cexpr "__cil_tmp138"} {:si_old_unique_call 1929} boogie_si_record_i64($i160);
    goto corral_source_split_3650;

  corral_source_split_3650:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 112);
    call {:si_unique_call 7044} {:cexpr "__cil_tmp139"} {:si_old_unique_call 1930} boogie_si_record_i64($i161);
    goto corral_source_split_3651;

  corral_source_split_3651:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_3652;

  corral_source_split_3652:
    assume {:verifier.code 0} true;
    havoc $i163;
    call {:si_unique_call 7045} {:cexpr "__cil_tmp140"} {:si_old_unique_call 1931} boogie_si_record_i32($i163);
    goto corral_source_split_3653;

  corral_source_split_3653:
    assume {:verifier.code 0} true;
    $i164 := $add.i32($i159, $i163);
    call {:si_unique_call 7046} {:cexpr "v_total"} {:si_old_unique_call 1932} boogie_si_record_i32($i164);
    goto corral_source_split_3654;

  corral_source_split_3654:
    assume {:verifier.code 0} true;
    $i165 := $p2i.ref.i64($p9);
    call {:si_unique_call 7047} {:cexpr "__cil_tmp142"} {:si_old_unique_call 1933} boogie_si_record_i64($i165);
    goto corral_source_split_3655;

  corral_source_split_3655:
    assume {:verifier.code 0} true;
    $i166 := $add.i64($i165, 1136);
    call {:si_unique_call 7048} {:cexpr "__cil_tmp143"} {:si_old_unique_call 1934} boogie_si_record_i64($i166);
    goto corral_source_split_3656;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    $p167 := $i2p.i64.ref($i166);
    goto corral_source_split_3657;

  corral_source_split_3657:
    assume {:verifier.code 0} true;
    havoc $i168;
    call {:si_unique_call 7049} {:cexpr "__cil_tmp144"} {:si_old_unique_call 1935} boogie_si_record_i64($i168);
    goto corral_source_split_3658;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    $i169 := $ne.i64($i168, 0);
    goto corral_source_split_3659;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    assume {:branchcond $i169} true;
    goto $bb67, $bb68;

  $bb68:
    assume !($i169 == 1);
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i277 := $p2i.ref.i64($p9);
    call {:si_unique_call 7050} {:cexpr "__cil_tmp215"} {:si_old_unique_call 2011} boogie_si_record_i64($i277);
    goto corral_source_split_3802;

  corral_source_split_3802:
    assume {:verifier.code 0} true;
    $i278 := $add.i64($i277, 1136);
    call {:si_unique_call 7051} {:cexpr "__cil_tmp216"} {:si_old_unique_call 2012} boogie_si_record_i64($i278);
    goto corral_source_split_3803;

  corral_source_split_3803:
    assume {:verifier.code 0} true;
    $p279 := $i2p.i64.ref($i278);
    goto corral_source_split_3804;

  corral_source_split_3804:
    assume {:verifier.code 0} true;
    havoc $i280;
    call {:si_unique_call 7052} {:cexpr "__cil_tmp217"} {:si_old_unique_call 2013} boogie_si_record_i64($i280);
    goto corral_source_split_3805;

  corral_source_split_3805:
    assume {:verifier.code 0} true;
    $i281 := $ne.i64($i280, 0);
    goto corral_source_split_3806;

  corral_source_split_3806:
    assume {:verifier.code 0} true;
    assume {:branchcond $i281} true;
    goto $bb95, $bb96;

  $bb96:
    assume !($i281 == 1);
    assume {:verifier.code 0} true;
    $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367 := $i159, $i154, $i164, $i143, $i138, $i133, $i149, $i57;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3888;

  corral_source_split_3888:
    assume {:verifier.code 0} true;
    $i368 := $lshr.i32($i13, 3);
    call {:si_unique_call 7053} {:cexpr "__cil_tmp264"} {:si_old_unique_call 2066} boogie_si_record_i32($i368);
    goto corral_source_split_3889;

  corral_source_split_3889:
    assume {:verifier.code 0} true;
    $i369 := $sub.i32($i368, 1);
    call {:si_unique_call 7054} {:cexpr "h_disp"} {:si_old_unique_call 2067} boogie_si_record_i32($i369);
    goto corral_source_split_3890;

  corral_source_split_3890:
    assume {:verifier.code 0} true;
    $i370 := $lshr.i32($i365, 3);
    call {:si_unique_call 7055} {:cexpr "__cil_tmp265"} {:si_old_unique_call 2068} boogie_si_record_i32($i370);
    goto corral_source_split_3891;

  corral_source_split_3891:
    assume {:verifier.code 0} true;
    $i371 := $sub.i32($i370, 1);
    call {:si_unique_call 7056} {:cexpr "h_sync_strt"} {:si_old_unique_call 2069} boogie_si_record_i32($i371);
    goto corral_source_split_3892;

  corral_source_split_3892:
    assume {:verifier.code 0} true;
    $i372 := $lshr.i32($i364, 3);
    call {:si_unique_call 7057} {:cexpr "__cil_tmp266"} {:si_old_unique_call 2070} boogie_si_record_i32($i372);
    goto corral_source_split_3893;

  corral_source_split_3893:
    assume {:verifier.code 0} true;
    $i373 := $sub.i32($i372, 1);
    call {:si_unique_call 7058} {:cexpr "h_sync_end"} {:si_old_unique_call 2071} boogie_si_record_i32($i373);
    goto corral_source_split_3894;

  corral_source_split_3894:
    assume {:verifier.code 0} true;
    $i374 := $lshr.i32($i366, 3);
    call {:si_unique_call 7059} {:cexpr "__cil_tmp267"} {:si_old_unique_call 2072} boogie_si_record_i32($i374);
    goto corral_source_split_3895;

  corral_source_split_3895:
    assume {:verifier.code 0} true;
    $i375 := $sub.i32($i374, 1);
    call {:si_unique_call 7060} {:cexpr "h_total"} {:si_old_unique_call 2073} boogie_si_record_i32($i375);
    goto corral_source_split_3896;

  corral_source_split_3896:
    assume {:verifier.code 0} true;
    $i376 := $sub.i32($i373, $i371);
    call {:si_unique_call 7061} {:cexpr "h_sync_wid"} {:si_old_unique_call 2074} boogie_si_record_i32($i376);
    goto corral_source_split_3897;

  corral_source_split_3897:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    $i377 := $ugt.i32($i369, 255);
    goto corral_source_split_3899;

  corral_source_split_3899:
    assume {:verifier.code 0} true;
    assume {:branchcond $i377} true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i377 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    $i385 := $ugt.i32($i371, 511);
    goto corral_source_split_3912;

  corral_source_split_3912:
    assume {:verifier.code 0} true;
    assume {:branchcond $i385} true;
    goto $bb118, $bb119;

  $bb119:
    assume !($i385 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $i393 := $ugt.i32($i376, 31);
    goto corral_source_split_3925;

  corral_source_split_3925:
    assume {:verifier.code 0} true;
    assume {:branchcond $i393} true;
    goto $bb125, $bb126;

  $bb126:
    assume !($i393 == 1);
    assume {:verifier.code 0} true;
    $i394 := $i376;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    goto corral_source_split_3929;

  corral_source_split_3929:
    assume {:verifier.code 0} true;
    goto $bb128;

  $bb128:
    assume {:verifier.code 0} true;
    goto $bb129;

  $bb129:
    assume {:verifier.code 0} true;
    $i395 := $ugt.i32($i375, 511);
    goto corral_source_split_3931;

  corral_source_split_3931:
    assume {:verifier.code 0} true;
    assume {:branchcond $i395} true;
    goto $bb130, $bb131;

  $bb131:
    assume !($i395 == 1);
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    goto $bb136;

  $bb136:
    assume {:verifier.code 0} true;
    $i403 := $and.i32($i367, 2);
    goto corral_source_split_3944;

  corral_source_split_3944:
    assume {:verifier.code 0} true;
    $i404 := $ne.i32($i403, 0);
    goto corral_source_split_3945;

  corral_source_split_3945:
    assume {:verifier.code 0} true;
    assume {:branchcond $i404} true;
    goto $bb137, $bb138;

  $bb138:
    assume !($i404 == 1);
    assume {:verifier.code 0} true;
    $i409, $i410, $i411, $i412 := $i360, $i361, $i17, $i362;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3953;

  corral_source_split_3953:
    assume {:verifier.code 0} true;
    $i413 := $p2i.ref.i64($p9);
    call {:si_unique_call 7062} {:cexpr "__cil_tmp280"} {:si_old_unique_call 2094} boogie_si_record_i64($i413);
    goto corral_source_split_3954;

  corral_source_split_3954:
    assume {:verifier.code 0} true;
    $i414 := $add.i64($i413, 1136);
    call {:si_unique_call 7063} {:cexpr "__cil_tmp281"} {:si_old_unique_call 2095} boogie_si_record_i64($i414);
    goto corral_source_split_3955;

  corral_source_split_3955:
    assume {:verifier.code 0} true;
    $p415 := $i2p.i64.ref($i414);
    goto corral_source_split_3956;

  corral_source_split_3956:
    assume {:verifier.code 0} true;
    havoc $i416;
    call {:si_unique_call 7064} {:cexpr "__cil_tmp282"} {:si_old_unique_call 2096} boogie_si_record_i64($i416);
    goto corral_source_split_3957;

  corral_source_split_3957:
    assume {:verifier.code 0} true;
    $i417 := $ne.i64($i416, 0);
    goto corral_source_split_3958;

  corral_source_split_3958:
    assume {:verifier.code 0} true;
    assume {:branchcond $i417} true;
    goto $bb140, $bb141;

  $bb141:
    assume !($i417 == 1);
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    $i425 := $sub.i32($i411, 1);
    call {:si_unique_call 7065} {:cexpr "v_disp"} {:si_old_unique_call 2101} boogie_si_record_i32($i425);
    goto corral_source_split_3971;

  corral_source_split_3971:
    assume {:verifier.code 0} true;
    $i426 := $sub.i32($i410, 1);
    call {:si_unique_call 7066} {:cexpr "v_sync_strt"} {:si_old_unique_call 2102} boogie_si_record_i32($i426);
    goto corral_source_split_3972;

  corral_source_split_3972:
    assume {:verifier.code 0} true;
    $i427 := $sub.i32($i409, 1);
    call {:si_unique_call 7067} {:cexpr "v_sync_end"} {:si_old_unique_call 2103} boogie_si_record_i32($i427);
    goto corral_source_split_3973;

  corral_source_split_3973:
    assume {:verifier.code 0} true;
    $i428 := $sub.i32($i412, 1);
    call {:si_unique_call 7068} {:cexpr "v_total"} {:si_old_unique_call 2104} boogie_si_record_i32($i428);
    goto corral_source_split_3974;

  corral_source_split_3974:
    assume {:verifier.code 0} true;
    $i429 := $sub.i32($i427, $i426);
    call {:si_unique_call 7069} {:cexpr "v_sync_wid"} {:si_old_unique_call 2105} boogie_si_record_i32($i429);
    goto corral_source_split_3975;

  corral_source_split_3975:
    assume {:verifier.code 0} true;
    goto $bb146;

  $bb146:
    assume {:verifier.code 0} true;
    goto $bb147;

  $bb147:
    assume {:verifier.code 0} true;
    $i430 := $ugt.i32($i425, 2047);
    goto corral_source_split_3977;

  corral_source_split_3977:
    assume {:verifier.code 0} true;
    assume {:branchcond $i430} true;
    goto $bb148, $bb149;

  $bb149:
    assume !($i430 == 1);
    assume {:verifier.code 0} true;
    goto $bb153;

  $bb153:
    assume {:verifier.code 0} true;
    goto $bb154;

  $bb154:
    assume {:verifier.code 0} true;
    goto $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    $i438 := $ugt.i32($i426, 2047);
    goto corral_source_split_3990;

  corral_source_split_3990:
    assume {:verifier.code 0} true;
    assume {:branchcond $i438} true;
    goto $bb157, $bb158;

  $bb158:
    assume !($i438 == 1);
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb163:
    assume {:verifier.code 0} true;
    $i446 := $ugt.i32($i429, 31);
    goto corral_source_split_4003;

  corral_source_split_4003:
    assume {:verifier.code 0} true;
    assume {:branchcond $i446} true;
    goto $bb164, $bb165;

  $bb165:
    assume !($i446 == 1);
    assume {:verifier.code 0} true;
    $i447 := $i429;
    goto $bb166;

  $bb166:
    assume {:verifier.code 0} true;
    goto corral_source_split_4007;

  corral_source_split_4007:
    assume {:verifier.code 0} true;
    goto $bb167;

  $bb167:
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    $i448 := $ugt.i32($i428, 2047);
    goto corral_source_split_4009;

  corral_source_split_4009:
    assume {:verifier.code 0} true;
    assume {:branchcond $i448} true;
    goto $bb169, $bb170;

  $bb170:
    assume !($i448 == 1);
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    $i456 := $and.i32($i53, 8);
    goto corral_source_split_4022;

  corral_source_split_4022:
    assume {:verifier.code 0} true;
    $i457 := $ne.i32($i456, 0);
    goto corral_source_split_4023;

  corral_source_split_4023:
    assume {:verifier.code 0} true;
    assume {:branchcond $i457} true;
    goto $bb176, $bb177;

  $bb177:
    assume !($i457 == 1);
    assume {:verifier.code 0} true;
    $i458 := 0;
    goto $bb178;

  $bb178:
    assume {:verifier.code 0} true;
    goto corral_source_split_4027;

  corral_source_split_4027:
    assume {:verifier.code 0} true;
    $p459 := $bitcast.ref.ref($p2);
    goto corral_source_split_4028;

  corral_source_split_4028:
    assume {:verifier.code 0} true;
    goto corral_source_split_4029;

  corral_source_split_4029:
    assume {:verifier.code 0} true;
    $i460 := $p2i.ref.i64($p2);
    call {:si_unique_call 7070} {:cexpr "__cil_tmp302"} {:si_old_unique_call 2121} boogie_si_record_i64($i460);
    goto corral_source_split_4030;

  corral_source_split_4030:
    assume {:verifier.code 0} true;
    $i461 := $add.i64($i460, 4);
    call {:si_unique_call 7071} {:cexpr "__cil_tmp303"} {:si_old_unique_call 2122} boogie_si_record_i64($i461);
    goto corral_source_split_4031;

  corral_source_split_4031:
    assume {:verifier.code 0} true;
    $p462 := $i2p.i64.ref($i461);
    goto corral_source_split_4032;

  corral_source_split_4032:
    assume {:verifier.code 0} true;
    goto corral_source_split_4033;

  corral_source_split_4033:
    assume {:verifier.code 0} true;
    $i463 := $p2i.ref.i64($p2);
    call {:si_unique_call 7072} {:cexpr "__cil_tmp304"} {:si_old_unique_call 2123} boogie_si_record_i64($i463);
    goto corral_source_split_4034;

  corral_source_split_4034:
    assume {:verifier.code 0} true;
    $i464 := $add.i64($i463, 8);
    call {:si_unique_call 7073} {:cexpr "__cil_tmp305"} {:si_old_unique_call 2124} boogie_si_record_i64($i464);
    goto corral_source_split_4035;

  corral_source_split_4035:
    assume {:verifier.code 0} true;
    $p465 := $i2p.i64.ref($i464);
    goto corral_source_split_4036;

  corral_source_split_4036:
    assume {:verifier.code 0} true;
    goto corral_source_split_4037;

  corral_source_split_4037:
    assume {:verifier.code 0} true;
    $i466 := $p2i.ref.i64($p2);
    call {:si_unique_call 7074} {:cexpr "__cil_tmp306"} {:si_old_unique_call 2125} boogie_si_record_i64($i466);
    goto corral_source_split_4038;

  corral_source_split_4038:
    assume {:verifier.code 0} true;
    $i467 := $add.i64($i466, 12);
    call {:si_unique_call 7075} {:cexpr "__cil_tmp307"} {:si_old_unique_call 2126} boogie_si_record_i64($i467);
    goto corral_source_split_4039;

  corral_source_split_4039:
    assume {:verifier.code 0} true;
    $p468 := $i2p.i64.ref($i467);
    goto corral_source_split_4040;

  corral_source_split_4040:
    assume {:verifier.code 0} true;
    goto corral_source_split_4041;

  corral_source_split_4041:
    assume {:verifier.code 0} true;
    $i469 := $p2i.ref.i64($p2);
    call {:si_unique_call 7076} {:cexpr "__cil_tmp308"} {:si_old_unique_call 2127} boogie_si_record_i64($i469);
    goto corral_source_split_4042;

  corral_source_split_4042:
    assume {:verifier.code 0} true;
    $i470 := $add.i64($i469, 16);
    call {:si_unique_call 7077} {:cexpr "__cil_tmp309"} {:si_old_unique_call 2128} boogie_si_record_i64($i470);
    goto corral_source_split_4043;

  corral_source_split_4043:
    assume {:verifier.code 0} true;
    $p471 := $i2p.i64.ref($i470);
    goto corral_source_split_4044;

  corral_source_split_4044:
    assume {:verifier.code 0} true;
    goto corral_source_split_4045;

  corral_source_split_4045:
    assume {:verifier.code 0} true;
    $i472 := $p2i.ref.i64($p2);
    call {:si_unique_call 7078} {:cexpr "__cil_tmp310"} {:si_old_unique_call 2129} boogie_si_record_i64($i472);
    goto corral_source_split_4046;

  corral_source_split_4046:
    assume {:verifier.code 0} true;
    $i473 := $add.i64($i472, 40);
    call {:si_unique_call 7079} {:cexpr "__cil_tmp311"} {:si_old_unique_call 2130} boogie_si_record_i64($i473);
    goto corral_source_split_4047;

  corral_source_split_4047:
    assume {:verifier.code 0} true;
    $i474 := $udiv.i32($i100, $i70);
    call {:si_unique_call 7080} {:cexpr "__cil_tmp312"} {:si_old_unique_call 2131} boogie_si_record_i32($i474);
    goto corral_source_split_4048;

  corral_source_split_4048:
    assume {:verifier.code 0} true;
    $i475 := $shl.i32($i474, 22);
    call {:si_unique_call 7081} {:cexpr "__cil_tmp313"} {:si_old_unique_call 2132} boogie_si_record_i32($i475);
    goto corral_source_split_4049;

  corral_source_split_4049:
    assume {:verifier.code 0} true;
    $i476 := $mul.i32($i33, $i70);
    call {:si_unique_call 7082} {:cexpr "__cil_tmp314"} {:si_old_unique_call 2133} boogie_si_record_i32($i476);
    goto corral_source_split_4050;

  corral_source_split_4050:
    assume {:verifier.code 0} true;
    $i477 := $udiv.i32($i476, 8);
    call {:si_unique_call 7083} {:cexpr "__cil_tmp315"} {:si_old_unique_call 2134} boogie_si_record_i32($i477);
    goto corral_source_split_4051;

  corral_source_split_4051:
    assume {:verifier.code 0} true;
    $i478 := $mul.i32($i37, $i100);
    call {:si_unique_call 7084} {:cexpr "__cil_tmp316"} {:si_old_unique_call 2135} boogie_si_record_i32($i478);
    goto corral_source_split_4052;

  corral_source_split_4052:
    assume {:verifier.code 0} true;
    $i479 := $add.i32($i478, $i477);
    call {:si_unique_call 7085} {:cexpr "__cil_tmp317"} {:si_old_unique_call 2136} boogie_si_record_i32($i479);
    goto corral_source_split_4053;

  corral_source_split_4053:
    assume {:verifier.code 0} true;
    $i480 := $udiv.i32($i479, 8);
    call {:si_unique_call 7086} {:cexpr "__cil_tmp318"} {:si_old_unique_call 2137} boogie_si_record_i32($i480);
    goto corral_source_split_4054;

  corral_source_split_4054:
    assume {:verifier.code 0} true;
    $i481 := $or.i32($i480, $i475);
    goto corral_source_split_4055;

  corral_source_split_4055:
    assume {:verifier.code 0} true;
    $p482 := $i2p.i64.ref($i473);
    goto corral_source_split_4056;

  corral_source_split_4056:
    assume {:verifier.code 0} true;
    goto corral_source_split_4057;

  corral_source_split_4057:
    assume {:verifier.code 0} true;
    $i483 := $p2i.ref.i64($p2);
    call {:si_unique_call 7087} {:cexpr "__cil_tmp319"} {:si_old_unique_call 2138} boogie_si_record_i64($i483);
    goto corral_source_split_4058;

  corral_source_split_4058:
    assume {:verifier.code 0} true;
    $i484 := $add.i64($i483, 36);
    call {:si_unique_call 7088} {:cexpr "__cil_tmp320"} {:si_old_unique_call 2139} boogie_si_record_i64($i484);
    goto corral_source_split_4059;

  corral_source_split_4059:
    assume {:verifier.code 0} true;
    $p485 := $i2p.i64.ref($i484);
    goto corral_source_split_4060;

  corral_source_split_4060:
    assume {:verifier.code 0} true;
    goto corral_source_split_4061;

  corral_source_split_4061:
    assume {:verifier.code 0} true;
    $i486 := $p2i.ref.i64($p2);
    call {:si_unique_call 7089} {:cexpr "__cil_tmp321"} {:si_old_unique_call 2140} boogie_si_record_i64($i486);
    goto corral_source_split_4062;

  corral_source_split_4062:
    assume {:verifier.code 0} true;
    $i487 := $add.i64($i486, 20);
    call {:si_unique_call 7090} {:cexpr "__cil_tmp322"} {:si_old_unique_call 2141} boogie_si_record_i64($i487);
    goto corral_source_split_4063;

  corral_source_split_4063:
    assume {:verifier.code 0} true;
    $i488 := $shl.i32($i369, 16);
    call {:si_unique_call 7091} {:cexpr "__cil_tmp323"} {:si_old_unique_call 2142} boogie_si_record_i32($i488);
    goto corral_source_split_4064;

  corral_source_split_4064:
    assume {:verifier.code 0} true;
    $i489 := $or.i32($i375, $i488);
    goto corral_source_split_4065;

  corral_source_split_4065:
    assume {:verifier.code 0} true;
    $p490 := $i2p.i64.ref($i487);
    goto corral_source_split_4066;

  corral_source_split_4066:
    assume {:verifier.code 0} true;
    goto corral_source_split_4067;

  corral_source_split_4067:
    assume {:verifier.code 0} true;
    $i491 := $p2i.ref.i64($p2);
    call {:si_unique_call 7092} {:cexpr "__cil_tmp324"} {:si_old_unique_call 2143} boogie_si_record_i64($i491);
    goto corral_source_split_4068;

  corral_source_split_4068:
    assume {:verifier.code 0} true;
    $i492 := $add.i64($i491, 24);
    call {:si_unique_call 7093} {:cexpr "__cil_tmp325"} {:si_old_unique_call 2144} boogie_si_record_i64($i492);
    goto corral_source_split_4069;

  corral_source_split_4069:
    assume {:verifier.code 0} true;
    $i493 := $shl.i32($i116, 21);
    call {:si_unique_call 7094} {:cexpr "__cil_tmp326"} {:si_old_unique_call 2145} boogie_si_record_i32($i493);
    goto corral_source_split_4070;

  corral_source_split_4070:
    assume {:verifier.code 0} true;
    $i494 := $shl.i32($i394, 16);
    call {:si_unique_call 7095} {:cexpr "__cil_tmp327"} {:si_old_unique_call 2146} boogie_si_record_i32($i494);
    goto corral_source_split_4071;

  corral_source_split_4071:
    assume {:verifier.code 0} true;
    $i495 := $and.i32($i371, 256);
    call {:si_unique_call 7096} {:cexpr "__cil_tmp328"} {:si_old_unique_call 2147} boogie_si_record_i32($i495);
    goto corral_source_split_4072;

  corral_source_split_4072:
    assume {:verifier.code 0} true;
    $i496 := $shl.i32($i495, 4);
    call {:si_unique_call 7097} {:cexpr "__cil_tmp329"} {:si_old_unique_call 2148} boogie_si_record_i32($i496);
    goto corral_source_split_4073;

  corral_source_split_4073:
    assume {:verifier.code 0} true;
    $i497 := $shl.i32($i363, 8);
    call {:si_unique_call 7098} {:cexpr "__cil_tmp330"} {:si_old_unique_call 2149} boogie_si_record_i32($i497);
    goto corral_source_split_4074;

  corral_source_split_4074:
    assume {:verifier.code 0} true;
    $i498 := $and.i32($i371, 255);
    call {:si_unique_call 7099} {:cexpr "__cil_tmp331"} {:si_old_unique_call 2150} boogie_si_record_i32($i498);
    goto corral_source_split_4075;

  corral_source_split_4075:
    assume {:verifier.code 0} true;
    $i499 := $or.i32($i498, $i497);
    call {:si_unique_call 7100} {:cexpr "__cil_tmp332"} {:si_old_unique_call 2151} boogie_si_record_i32($i499);
    goto corral_source_split_4076;

  corral_source_split_4076:
    assume {:verifier.code 0} true;
    $i500 := $or.i32($i499, $i496);
    call {:si_unique_call 7101} {:cexpr "__cil_tmp333"} {:si_old_unique_call 2152} boogie_si_record_i32($i500);
    goto corral_source_split_4077;

  corral_source_split_4077:
    assume {:verifier.code 0} true;
    $i501 := $or.i32($i500, $i494);
    call {:si_unique_call 7102} {:cexpr "__cil_tmp334"} {:si_old_unique_call 2153} boogie_si_record_i32($i501);
    goto corral_source_split_4078;

  corral_source_split_4078:
    assume {:verifier.code 0} true;
    $i502 := $or.i32($i501, $i493);
    goto corral_source_split_4079;

  corral_source_split_4079:
    assume {:verifier.code 0} true;
    $p503 := $i2p.i64.ref($i492);
    goto corral_source_split_4080;

  corral_source_split_4080:
    assume {:verifier.code 0} true;
    goto corral_source_split_4081;

  corral_source_split_4081:
    assume {:verifier.code 0} true;
    $i504 := $p2i.ref.i64($p2);
    call {:si_unique_call 7103} {:cexpr "__cil_tmp335"} {:si_old_unique_call 2154} boogie_si_record_i64($i504);
    goto corral_source_split_4082;

  corral_source_split_4082:
    assume {:verifier.code 0} true;
    $i505 := $add.i64($i504, 28);
    call {:si_unique_call 7104} {:cexpr "__cil_tmp336"} {:si_old_unique_call 2155} boogie_si_record_i64($i505);
    goto corral_source_split_4083;

  corral_source_split_4083:
    assume {:verifier.code 0} true;
    $i506 := $shl.i32($i425, 16);
    call {:si_unique_call 7105} {:cexpr "__cil_tmp337"} {:si_old_unique_call 2156} boogie_si_record_i32($i506);
    goto corral_source_split_4084;

  corral_source_split_4084:
    assume {:verifier.code 0} true;
    $i507 := $or.i32($i428, $i506);
    goto corral_source_split_4085;

  corral_source_split_4085:
    assume {:verifier.code 0} true;
    $p508 := $i2p.i64.ref($i505);
    goto corral_source_split_4086;

  corral_source_split_4086:
    assume {:verifier.code 0} true;
    goto corral_source_split_4087;

  corral_source_split_4087:
    assume {:verifier.code 0} true;
    $i509 := $p2i.ref.i64($p2);
    call {:si_unique_call 7106} {:cexpr "__cil_tmp338"} {:si_old_unique_call 2157} boogie_si_record_i64($i509);
    goto corral_source_split_4088;

  corral_source_split_4088:
    assume {:verifier.code 0} true;
    $i510 := $add.i64($i509, 32);
    call {:si_unique_call 7107} {:cexpr "__cil_tmp339"} {:si_old_unique_call 2158} boogie_si_record_i64($i510);
    goto corral_source_split_4089;

  corral_source_split_4089:
    assume {:verifier.code 0} true;
    $i511 := $shl.i32($i119, 21);
    call {:si_unique_call 7108} {:cexpr "__cil_tmp340"} {:si_old_unique_call 2159} boogie_si_record_i32($i511);
    goto corral_source_split_4090;

  corral_source_split_4090:
    assume {:verifier.code 0} true;
    $i512 := $shl.i32($i447, 16);
    call {:si_unique_call 7109} {:cexpr "__cil_tmp341"} {:si_old_unique_call 2160} boogie_si_record_i32($i512);
    goto corral_source_split_4091;

  corral_source_split_4091:
    assume {:verifier.code 0} true;
    $i513 := $or.i32($i426, $i512);
    call {:si_unique_call 7110} {:cexpr "__cil_tmp342"} {:si_old_unique_call 2161} boogie_si_record_i32($i513);
    goto corral_source_split_4092;

  corral_source_split_4092:
    assume {:verifier.code 0} true;
    $i514 := $or.i32($i513, $i511);
    goto corral_source_split_4093;

  corral_source_split_4093:
    assume {:verifier.code 0} true;
    $p515 := $i2p.i64.ref($i510);
    goto corral_source_split_4094;

  corral_source_split_4094:
    assume {:verifier.code 0} true;
    goto corral_source_split_4095;

  corral_source_split_4095:
    assume {:verifier.code 0} true;
    $i516 := $p2i.ref.i64($p2);
    call {:si_unique_call 7111} {:cexpr "__cil_tmp343"} {:si_old_unique_call 2162} boogie_si_record_i64($i516);
    goto corral_source_split_4096;

  corral_source_split_4096:
    assume {:verifier.code 0} true;
    $i517 := $add.i64($i516, 44);
    call {:si_unique_call 7112} {:cexpr "__cil_tmp344"} {:si_old_unique_call 2163} boogie_si_record_i64($i517);
    goto corral_source_split_4097;

  corral_source_split_4097:
    assume {:verifier.code 0} true;
    $i518 := $or.i32(50331648, $i69);
    call {:si_unique_call 7113} {:cexpr "__cil_tmp345"} {:si_old_unique_call 2164} boogie_si_record_i32($i518);
    goto corral_source_split_4098;

  corral_source_split_4098:
    assume {:verifier.code 0} true;
    $i519 := $or.i32($i518, $i458);
    goto corral_source_split_4099;

  corral_source_split_4099:
    assume {:verifier.code 0} true;
    $p520 := $i2p.i64.ref($i517);
    goto corral_source_split_4100;

  corral_source_split_4100:
    assume {:verifier.code 0} true;
    goto corral_source_split_4101;

  corral_source_split_4101:
    assume {:verifier.code 0} true;
    $i521 := $p2i.ref.i64($p2);
    call {:si_unique_call 7114} {:cexpr "__cil_tmp346"} {:si_old_unique_call 2165} boogie_si_record_i64($i521);
    goto corral_source_split_4102;

  corral_source_split_4102:
    assume {:verifier.code 0} true;
    $i522 := $add.i64($i521, 44);
    call {:si_unique_call 7115} {:cexpr "__cil_tmp347"} {:si_old_unique_call 2166} boogie_si_record_i64($i522);
    goto corral_source_split_4103;

  corral_source_split_4103:
    assume {:verifier.code 0} true;
    $i523 := $p2i.ref.i64($p2);
    call {:si_unique_call 7116} {:cexpr "__cil_tmp348"} {:si_old_unique_call 2167} boogie_si_record_i64($i523);
    goto corral_source_split_4104;

  corral_source_split_4104:
    assume {:verifier.code 0} true;
    $i524 := $add.i64($i523, 44);
    call {:si_unique_call 7117} {:cexpr "__cil_tmp349"} {:si_old_unique_call 2168} boogie_si_record_i64($i524);
    goto corral_source_split_4105;

  corral_source_split_4105:
    assume {:verifier.code 0} true;
    $p525 := $i2p.i64.ref($i524);
    goto corral_source_split_4106;

  corral_source_split_4106:
    assume {:verifier.code 0} true;
    havoc $i526;
    call {:si_unique_call 7118} {:cexpr "__cil_tmp350"} {:si_old_unique_call 2169} boogie_si_record_i32($i526);
    goto corral_source_split_4107;

  corral_source_split_4107:
    assume {:verifier.code 0} true;
    $i527 := $or.i32($i526, 134217728);
    goto corral_source_split_4108;

  corral_source_split_4108:
    assume {:verifier.code 0} true;
    $p528 := $i2p.i64.ref($i522);
    goto corral_source_split_4109;

  corral_source_split_4109:
    assume {:verifier.code 0} true;
    goto corral_source_split_4110;

  corral_source_split_4110:
    assume {:verifier.code 0} true;
    $i529 := $and.i32($i367, 2);
    goto corral_source_split_4111;

  corral_source_split_4111:
    assume {:verifier.code 0} true;
    $i530 := $ne.i32($i529, 0);
    goto corral_source_split_4112;

  corral_source_split_4112:
    assume {:verifier.code 0} true;
    assume {:branchcond $i530} true;
    goto $bb179, $bb180;

  $bb180:
    assume !($i530 == 1);
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb181:
    assume {:verifier.code 0} true;
    $i539 := $and.i32($i367, 1);
    goto corral_source_split_4125;

  corral_source_split_4125:
    assume {:verifier.code 0} true;
    $i540 := $ne.i32($i539, 0);
    goto corral_source_split_4126;

  corral_source_split_4126:
    assume {:verifier.code 0} true;
    assume {:branchcond $i540} true;
    goto $bb182, $bb183;

  $bb183:
    assume !($i540 == 1);
    assume {:verifier.code 0} true;
    goto $bb184;

  $bb184:
    assume {:verifier.code 0} true;
    $i549 := $p2i.ref.i64($p9);
    call {:si_unique_call 7119} {:cexpr "__cil_tmp361"} {:si_old_unique_call 2180} boogie_si_record_i64($i549);
    goto corral_source_split_4139;

  corral_source_split_4139:
    assume {:verifier.code 0} true;
    $i550 := $add.i64($i549, 1136);
    call {:si_unique_call 7120} {:cexpr "__cil_tmp362"} {:si_old_unique_call 2181} boogie_si_record_i64($i550);
    goto corral_source_split_4140;

  corral_source_split_4140:
    assume {:verifier.code 0} true;
    $p551 := $i2p.i64.ref($i550);
    goto corral_source_split_4141;

  corral_source_split_4141:
    assume {:verifier.code 0} true;
    havoc $i552;
    call {:si_unique_call 7121} {:cexpr "__cil_tmp363"} {:si_old_unique_call 2182} boogie_si_record_i64($i552);
    goto corral_source_split_4142;

  corral_source_split_4142:
    assume {:verifier.code 0} true;
    $i553 := $ne.i64($i552, 0);
    goto corral_source_split_4143;

  corral_source_split_4143:
    assume {:verifier.code 0} true;
    assume {:branchcond $i553} true;
    goto $bb185, $bb186;

  $bb186:
    assume !($i553 == 1);
    assume {:verifier.code 0} true;
    goto $bb254;

  $bb254:
    assume {:verifier.code 0} true;
    $i831 := $p2i.ref.i64($p9);
    call {:si_unique_call 7122} {:cexpr "__cil_tmp538"} {:si_old_unique_call 2361} boogie_si_record_i64($i831);
    goto corral_source_split_4500;

  corral_source_split_4500:
    assume {:verifier.code 0} true;
    $i832 := $add.i64($i831, 1044);
    call {:si_unique_call 7123} {:cexpr "__cil_tmp539"} {:si_old_unique_call 2362} boogie_si_record_i64($i832);
    goto corral_source_split_4501;

  corral_source_split_4501:
    assume {:verifier.code 0} true;
    $p833 := $i2p.i64.ref($i832);
    goto corral_source_split_4502;

  corral_source_split_4502:
    assume {:verifier.code 0} true;
    havoc $i834;
    call {:si_unique_call 7124} {:cexpr "__cil_tmp540"} {:si_old_unique_call 2363} boogie_si_record_i32($i834);
    goto corral_source_split_4503;

  corral_source_split_4503:
    assume {:verifier.code 0} true;
    $i835 := $and.i32($i834, 2);
    goto corral_source_split_4504;

  corral_source_split_4504:
    assume {:verifier.code 0} true;
    $i836 := $ne.i32($i835, 0);
    goto corral_source_split_4505;

  corral_source_split_4505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i836} true;
    goto $bb255, $bb256;

  $bb256:
    assume !($i836 == 1);
    assume {:verifier.code 0} true;
    goto $bb257;

  $bb257:
    assume {:verifier.code 0} true;
    $i847 := $p2i.ref.i64($p2);
    call {:si_unique_call 7125} {:cexpr "__cil_tmp548"} {:si_old_unique_call 2372} boogie_si_record_i64($i847);
    goto corral_source_split_4520;

  corral_source_split_4520:
    assume {:verifier.code 0} true;
    $i848 := $add.i64($i847, 48);
    call {:si_unique_call 7126} {:cexpr "__cil_tmp549"} {:si_old_unique_call 2373} boogie_si_record_i64($i848);
    goto corral_source_split_4521;

  corral_source_split_4521:
    assume {:verifier.code 0} true;
    $p849 := $i2p.i64.ref($i848);
    goto corral_source_split_4522;

  corral_source_split_4522:
    assume {:verifier.code 0} true;
    goto corral_source_split_4523;

  corral_source_split_4523:
    assume {:verifier.code 0} true;
    $i850 := $p2i.ref.i64($p2);
    call {:si_unique_call 7127} {:cexpr "__cil_tmp550"} {:si_old_unique_call 2374} boogie_si_record_i64($i850);
    goto corral_source_split_4524;

  corral_source_split_4524:
    assume {:verifier.code 0} true;
    $i851 := $add.i64($i850, 52);
    call {:si_unique_call 7128} {:cexpr "__cil_tmp551"} {:si_old_unique_call 2375} boogie_si_record_i64($i851);
    goto corral_source_split_4525;

  corral_source_split_4525:
    assume {:verifier.code 0} true;
    $p852 := $i2p.i64.ref($i851);
    goto corral_source_split_4526;

  corral_source_split_4526:
    assume {:verifier.code 0} true;
    goto corral_source_split_4527;

  corral_source_split_4527:
    assume {:verifier.code 0} true;
    $i99 := 0;
    goto $bb37;

  $bb255:
    assume $i836 == 1;
    goto corral_source_split_4507;

  corral_source_split_4507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7129} {:si_old_unique_call 2364} $i837 := aty_ld_le32(28, $p9);
    call {:si_unique_call 7130} {:cexpr "tmp___12"} {:si_old_unique_call 2365} boogie_si_record_i32($i837);
    goto corral_source_split_4508;

  corral_source_split_4508:
    assume {:verifier.code 0} true;
    $i838 := $p2i.ref.i64($p2);
    call {:si_unique_call 7131} {:cexpr "__cil_tmp542"} {:si_old_unique_call 2366} boogie_si_record_i64($i838);
    goto corral_source_split_4509;

  corral_source_split_4509:
    assume {:verifier.code 0} true;
    $i839 := $add.i64($i838, 44);
    call {:si_unique_call 7132} {:cexpr "__cil_tmp543"} {:si_old_unique_call 2367} boogie_si_record_i64($i839);
    goto corral_source_split_4510;

  corral_source_split_4510:
    assume {:verifier.code 0} true;
    $i840 := $and.i32($i837, 983040);
    call {:si_unique_call 7133} {:cexpr "__cil_tmp544"} {:si_old_unique_call 2368} boogie_si_record_i32($i840);
    goto corral_source_split_4511;

  corral_source_split_4511:
    assume {:verifier.code 0} true;
    $i841 := $p2i.ref.i64($p2);
    call {:si_unique_call 7134} {:cexpr "__cil_tmp545"} {:si_old_unique_call 2369} boogie_si_record_i64($i841);
    goto corral_source_split_4512;

  corral_source_split_4512:
    assume {:verifier.code 0} true;
    $i842 := $add.i64($i841, 44);
    call {:si_unique_call 7135} {:cexpr "__cil_tmp546"} {:si_old_unique_call 2370} boogie_si_record_i64($i842);
    goto corral_source_split_4513;

  corral_source_split_4513:
    assume {:verifier.code 0} true;
    $p843 := $i2p.i64.ref($i842);
    goto corral_source_split_4514;

  corral_source_split_4514:
    assume {:verifier.code 0} true;
    havoc $i844;
    call {:si_unique_call 7136} {:cexpr "__cil_tmp547"} {:si_old_unique_call 2371} boogie_si_record_i32($i844);
    goto corral_source_split_4515;

  corral_source_split_4515:
    assume {:verifier.code 0} true;
    $i845 := $or.i32($i844, $i840);
    goto corral_source_split_4516;

  corral_source_split_4516:
    assume {:verifier.code 0} true;
    $p846 := $i2p.i64.ref($i839);
    goto corral_source_split_4517;

  corral_source_split_4517:
    assume {:verifier.code 0} true;
    goto corral_source_split_4518;

  corral_source_split_4518:
    assume {:verifier.code 0} true;
    goto $bb257;

  $bb185:
    assume $i553 == 1;
    goto corral_source_split_4145;

  corral_source_split_4145:
    assume {:verifier.code 0} true;
    $i554 := $and.i32($i367, 2);
    goto corral_source_split_4146;

  corral_source_split_4146:
    assume {:verifier.code 0} true;
    $i555 := $ne.i32($i554, 0);
    goto corral_source_split_4147;

  corral_source_split_4147:
    assume {:verifier.code 0} true;
    assume {:branchcond $i555} true;
    goto $bb187, $bb188;

  $bb188:
    assume !($i555 == 1);
    assume {:verifier.code 0} true;
    $i557 := $i17;
    goto $bb189;

  $bb189:
    assume {:verifier.code 0} true;
    goto corral_source_split_4152;

  corral_source_split_4152:
    assume {:verifier.code 0} true;
    $i558 := $p2i.ref.i64($p2);
    call {:si_unique_call 7137} {:cexpr "__cil_tmp364"} {:si_old_unique_call 2184} boogie_si_record_i64($i558);
    goto corral_source_split_4153;

  corral_source_split_4153:
    assume {:verifier.code 0} true;
    $i559 := $add.i64($i558, 44);
    call {:si_unique_call 7138} {:cexpr "__cil_tmp365"} {:si_old_unique_call 2185} boogie_si_record_i64($i559);
    goto corral_source_split_4154;

  corral_source_split_4154:
    assume {:verifier.code 0} true;
    $i560 := $p2i.ref.i64($p2);
    call {:si_unique_call 7139} {:cexpr "__cil_tmp366"} {:si_old_unique_call 2186} boogie_si_record_i64($i560);
    goto corral_source_split_4155;

  corral_source_split_4155:
    assume {:verifier.code 0} true;
    $i561 := $add.i64($i560, 44);
    call {:si_unique_call 7140} {:cexpr "__cil_tmp367"} {:si_old_unique_call 2187} boogie_si_record_i64($i561);
    goto corral_source_split_4156;

  corral_source_split_4156:
    assume {:verifier.code 0} true;
    $p562 := $i2p.i64.ref($i561);
    goto corral_source_split_4157;

  corral_source_split_4157:
    assume {:verifier.code 0} true;
    havoc $i563;
    call {:si_unique_call 7141} {:cexpr "__cil_tmp368"} {:si_old_unique_call 2188} boogie_si_record_i32($i563);
    goto corral_source_split_4158;

  corral_source_split_4158:
    assume {:verifier.code 0} true;
    $i564 := $and.i32($i563, $sub.i32(0, 3014657));
    goto corral_source_split_4159;

  corral_source_split_4159:
    assume {:verifier.code 0} true;
    $p565 := $i2p.i64.ref($i559);
    goto corral_source_split_4160;

  corral_source_split_4160:
    assume {:verifier.code 0} true;
    goto corral_source_split_4161;

  corral_source_split_4161:
    assume {:verifier.code 0} true;
    $i566 := $p2i.ref.i64($p2);
    call {:si_unique_call 7142} {:cexpr "__cil_tmp369"} {:si_old_unique_call 2189} boogie_si_record_i64($i566);
    goto corral_source_split_4162;

  corral_source_split_4162:
    assume {:verifier.code 0} true;
    $i567 := $add.i64($i566, 84);
    call {:si_unique_call 7143} {:cexpr "__cil_tmp370"} {:si_old_unique_call 2190} boogie_si_record_i64($i567);
    goto corral_source_split_4163;

  corral_source_split_4163:
    assume {:verifier.code 0} true;
    $i568 := $p2i.ref.i64($p2);
    call {:si_unique_call 7144} {:cexpr "__cil_tmp371"} {:si_old_unique_call 2191} boogie_si_record_i64($i568);
    goto corral_source_split_4164;

  corral_source_split_4164:
    assume {:verifier.code 0} true;
    $i569 := $add.i64($i568, 84);
    call {:si_unique_call 7145} {:cexpr "__cil_tmp372"} {:si_old_unique_call 2192} boogie_si_record_i64($i569);
    goto corral_source_split_4165;

  corral_source_split_4165:
    assume {:verifier.code 0} true;
    $p570 := $i2p.i64.ref($i569);
    goto corral_source_split_4166;

  corral_source_split_4166:
    assume {:verifier.code 0} true;
    havoc $i571;
    call {:si_unique_call 7146} {:cexpr "__cil_tmp373"} {:si_old_unique_call 2193} boogie_si_record_i32($i571);
    goto corral_source_split_4167;

  corral_source_split_4167:
    assume {:verifier.code 0} true;
    $i572 := $zext.i32.i64($i571);
    call {:si_unique_call 7147} {:cexpr "__cil_tmp374"} {:si_old_unique_call 2194} boogie_si_record_i64($i572);
    goto corral_source_split_4168;

  corral_source_split_4168:
    assume {:verifier.code 0} true;
    $i573 := $and.i64($i572, $sub.i64(0, 4026532869));
    call {:si_unique_call 7148} {:cexpr "__cil_tmp375"} {:si_old_unique_call 2195} boogie_si_record_i64($i573);
    goto corral_source_split_4169;

  corral_source_split_4169:
    assume {:verifier.code 0} true;
    $i574 := $trunc.i64.i32($i573);
    goto corral_source_split_4170;

  corral_source_split_4170:
    assume {:verifier.code 0} true;
    $p575 := $i2p.i64.ref($i567);
    goto corral_source_split_4171;

  corral_source_split_4171:
    assume {:verifier.code 0} true;
    goto corral_source_split_4172;

  corral_source_split_4172:
    assume {:verifier.code 0} true;
    $i576 := $p2i.ref.i64($p2);
    call {:si_unique_call 7149} {:cexpr "__cil_tmp376"} {:si_old_unique_call 2196} boogie_si_record_i64($i576);
    goto corral_source_split_4173;

  corral_source_split_4173:
    assume {:verifier.code 0} true;
    $i577 := $add.i64($i576, 84);
    call {:si_unique_call 7150} {:cexpr "__cil_tmp377"} {:si_old_unique_call 2197} boogie_si_record_i64($i577);
    goto corral_source_split_4174;

  corral_source_split_4174:
    assume {:verifier.code 0} true;
    $i578 := $p2i.ref.i64($p2);
    call {:si_unique_call 7151} {:cexpr "__cil_tmp378"} {:si_old_unique_call 2198} boogie_si_record_i64($i578);
    goto corral_source_split_4175;

  corral_source_split_4175:
    assume {:verifier.code 0} true;
    $i579 := $add.i64($i578, 84);
    call {:si_unique_call 7152} {:cexpr "__cil_tmp379"} {:si_old_unique_call 2199} boogie_si_record_i64($i579);
    goto corral_source_split_4176;

  corral_source_split_4176:
    assume {:verifier.code 0} true;
    $p580 := $i2p.i64.ref($i579);
    goto corral_source_split_4177;

  corral_source_split_4177:
    assume {:verifier.code 0} true;
    havoc $i581;
    call {:si_unique_call 7153} {:cexpr "__cil_tmp380"} {:si_old_unique_call 2200} boogie_si_record_i32($i581);
    goto corral_source_split_4178;

  corral_source_split_4178:
    assume {:verifier.code 0} true;
    $i582 := $zext.i32.i64($i581);
    call {:si_unique_call 7154} {:cexpr "__cil_tmp381"} {:si_old_unique_call 2201} boogie_si_record_i64($i582);
    goto corral_source_split_4179;

  corral_source_split_4179:
    assume {:verifier.code 0} true;
    $i583 := $or.i64($i582, 64);
    call {:si_unique_call 7155} {:cexpr "__cil_tmp382"} {:si_old_unique_call 2202} boogie_si_record_i64($i583);
    goto corral_source_split_4180;

  corral_source_split_4180:
    assume {:verifier.code 0} true;
    $i584 := $trunc.i64.i32($i583);
    goto corral_source_split_4181;

  corral_source_split_4181:
    assume {:verifier.code 0} true;
    $p585 := $i2p.i64.ref($i577);
    goto corral_source_split_4182;

  corral_source_split_4182:
    assume {:verifier.code 0} true;
    goto corral_source_split_4183;

  corral_source_split_4183:
    assume {:verifier.code 0} true;
    $i586 := $p2i.ref.i64($p2);
    call {:si_unique_call 7156} {:cexpr "__cil_tmp383"} {:si_old_unique_call 2203} boogie_si_record_i64($i586);
    goto corral_source_split_4184;

  corral_source_split_4184:
    assume {:verifier.code 0} true;
    $i587 := $add.i64($i586, 56);
    call {:si_unique_call 7157} {:cexpr "__cil_tmp384"} {:si_old_unique_call 2204} boogie_si_record_i64($i587);
    goto corral_source_split_4185;

  corral_source_split_4185:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7158} {:si_old_unique_call 2205} $i588 := aty_ld_lcd(4, $p9);
    goto corral_source_split_4186;

  corral_source_split_4186:
    assume {:verifier.code 0} true;
    $p589 := $i2p.i64.ref($i587);
    goto corral_source_split_4187;

  corral_source_split_4187:
    assume {:verifier.code 0} true;
    goto corral_source_split_4188;

  corral_source_split_4188:
    assume {:verifier.code 0} true;
    $i590 := $p2i.ref.i64($p9);
    call {:si_unique_call 7159} {:cexpr "__cil_tmp386"} {:si_old_unique_call 2206} boogie_si_record_i64($i590);
    goto corral_source_split_4189;

  corral_source_split_4189:
    assume {:verifier.code 0} true;
    $i591 := $add.i64($i590, 1044);
    call {:si_unique_call 7160} {:cexpr "__cil_tmp387"} {:si_old_unique_call 2207} boogie_si_record_i64($i591);
    goto corral_source_split_4190;

  corral_source_split_4190:
    assume {:verifier.code 0} true;
    $p592 := $i2p.i64.ref($i591);
    goto corral_source_split_4191;

  corral_source_split_4191:
    assume {:verifier.code 0} true;
    havoc $i593;
    call {:si_unique_call 7161} {:cexpr "__cil_tmp388"} {:si_old_unique_call 2208} boogie_si_record_i32($i593);
    goto corral_source_split_4192;

  corral_source_split_4192:
    assume {:verifier.code 0} true;
    $i594 := $and.i32($i593, 262144);
    call {:si_unique_call 7162} {:cexpr "__cil_tmp389"} {:si_old_unique_call 2209} boogie_si_record_i32($i594);
    goto corral_source_split_4193;

  corral_source_split_4193:
    assume {:verifier.code 0} true;
    $i595 := $ne.i32($i594, 0);
    goto corral_source_split_4194;

  corral_source_split_4194:
    assume {:verifier.code 0} true;
    assume {:branchcond $i595} true;
    goto $bb190, $bb191;

  $bb191:
    assume !($i595 == 1);
    goto corral_source_split_4196;

  corral_source_split_4196:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7163} {:si_old_unique_call 2210} $i596 := aty_ld_lcd(6, $p9);
    call {:si_unique_call 7164} {:cexpr "tmp___10"} {:si_old_unique_call 2211} boogie_si_record_i32($i596);
    goto corral_source_split_4197;

  corral_source_split_4197:
    assume {:verifier.code 0} true;
    $i597 := $p2i.ref.i64($p2);
    call {:si_unique_call 7165} {:cexpr "__cil_tmp391"} {:si_old_unique_call 2212} boogie_si_record_i64($i597);
    goto corral_source_split_4198;

  corral_source_split_4198:
    assume {:verifier.code 0} true;
    $i598 := $add.i64($i597, 64);
    call {:si_unique_call 7166} {:cexpr "__cil_tmp392"} {:si_old_unique_call 2213} boogie_si_record_i64($i598);
    goto corral_source_split_4199;

  corral_source_split_4199:
    assume {:verifier.code 0} true;
    $i599 := $zext.i32.i64($i596);
    call {:si_unique_call 7167} {:cexpr "__cil_tmp393"} {:si_old_unique_call 2214} boogie_si_record_i64($i599);
    goto corral_source_split_4200;

  corral_source_split_4200:
    assume {:verifier.code 0} true;
    $i600 := $and.i64($i599, $sub.i64(0, 4196352));
    call {:si_unique_call 7168} {:cexpr "__cil_tmp394"} {:si_old_unique_call 2215} boogie_si_record_i64($i600);
    goto corral_source_split_4201;

  corral_source_split_4201:
    assume {:verifier.code 0} true;
    $i601 := $trunc.i64.i32($i600);
    goto corral_source_split_4202;

  corral_source_split_4202:
    assume {:verifier.code 0} true;
    $p602 := $i2p.i64.ref($i598);
    goto corral_source_split_4203;

  corral_source_split_4203:
    assume {:verifier.code 0} true;
    goto corral_source_split_4204;

  corral_source_split_4204:
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb192:
    assume {:verifier.code 0} true;
    $i603 := $p2i.ref.i64($p2);
    call {:si_unique_call 7169} {:cexpr "__cil_tmp395"} {:si_old_unique_call 2216} boogie_si_record_i64($i603);
    goto corral_source_split_4206;

  corral_source_split_4206:
    assume {:verifier.code 0} true;
    $i604 := $add.i64($i603, 56);
    call {:si_unique_call 7170} {:cexpr "__cil_tmp396"} {:si_old_unique_call 2217} boogie_si_record_i64($i604);
    goto corral_source_split_4207;

  corral_source_split_4207:
    assume {:verifier.code 0} true;
    $i605 := $p2i.ref.i64($p2);
    call {:si_unique_call 7171} {:cexpr "__cil_tmp397"} {:si_old_unique_call 2218} boogie_si_record_i64($i605);
    goto corral_source_split_4208;

  corral_source_split_4208:
    assume {:verifier.code 0} true;
    $i606 := $add.i64($i605, 56);
    call {:si_unique_call 7172} {:cexpr "__cil_tmp398"} {:si_old_unique_call 2219} boogie_si_record_i64($i606);
    goto corral_source_split_4209;

  corral_source_split_4209:
    assume {:verifier.code 0} true;
    $p607 := $i2p.i64.ref($i606);
    goto corral_source_split_4210;

  corral_source_split_4210:
    assume {:verifier.code 0} true;
    havoc $i608;
    call {:si_unique_call 7173} {:cexpr "__cil_tmp399"} {:si_old_unique_call 2220} boogie_si_record_i32($i608);
    goto corral_source_split_4211;

  corral_source_split_4211:
    assume {:verifier.code 0} true;
    $i609 := $zext.i32.i64($i608);
    call {:si_unique_call 7174} {:cexpr "__cil_tmp400"} {:si_old_unique_call 2221} boogie_si_record_i64($i609);
    goto corral_source_split_4212;

  corral_source_split_4212:
    assume {:verifier.code 0} true;
    $i610 := $and.i64($i609, $sub.i64(0, 3758620672));
    call {:si_unique_call 7175} {:cexpr "__cil_tmp401"} {:si_old_unique_call 2222} boogie_si_record_i64($i610);
    goto corral_source_split_4213;

  corral_source_split_4213:
    assume {:verifier.code 0} true;
    $i611 := $trunc.i64.i32($i610);
    goto corral_source_split_4214;

  corral_source_split_4214:
    assume {:verifier.code 0} true;
    $p612 := $i2p.i64.ref($i604);
    goto corral_source_split_4215;

  corral_source_split_4215:
    assume {:verifier.code 0} true;
    goto corral_source_split_4216;

  corral_source_split_4216:
    assume {:verifier.code 0} true;
    $i613 := $p2i.ref.i64($p9);
    call {:si_unique_call 7176} {:cexpr "__cil_tmp402"} {:si_old_unique_call 2223} boogie_si_record_i64($i613);
    goto corral_source_split_4217;

  corral_source_split_4217:
    assume {:verifier.code 0} true;
    $i614 := $add.i64($i613, 1144);
    call {:si_unique_call 7177} {:cexpr "__cil_tmp403"} {:si_old_unique_call 2224} boogie_si_record_i64($i614);
    goto corral_source_split_4218;

  corral_source_split_4218:
    assume {:verifier.code 0} true;
    $p615 := $i2p.i64.ref($i614);
    goto corral_source_split_4219;

  corral_source_split_4219:
    assume {:verifier.code 0} true;
    havoc $i616;
    call {:si_unique_call 7178} {:cexpr "__cil_tmp404"} {:si_old_unique_call 2225} boogie_si_record_i16($i616);
    goto corral_source_split_4220;

  corral_source_split_4220:
    assume {:verifier.code 0} true;
    $i617 := $zext.i16.i32($i616);
    call {:si_unique_call 7179} {:cexpr "__cil_tmp405"} {:si_old_unique_call 2226} boogie_si_record_i32($i617);
    goto corral_source_split_4221;

  corral_source_split_4221:
    assume {:verifier.code 0} true;
    $i618 := $ult.i32($i13, $i617);
    goto corral_source_split_4222;

  corral_source_split_4222:
    assume {:verifier.code 0} true;
    assume {:branchcond $i618} true;
    goto $bb193, $bb194;

  $bb194:
    assume !($i618 == 1);
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb238:
    assume {:verifier.code 0} true;
    $i746 := $p2i.ref.i64($p9);
    call {:si_unique_call 7180} {:cexpr "__cil_tmp484"} {:si_old_unique_call 2308} boogie_si_record_i64($i746);
    goto corral_source_split_4392;

  corral_source_split_4392:
    assume {:verifier.code 0} true;
    $i747 := $add.i64($i746, 1146);
    call {:si_unique_call 7181} {:cexpr "__cil_tmp485"} {:si_old_unique_call 2309} boogie_si_record_i64($i747);
    goto corral_source_split_4393;

  corral_source_split_4393:
    assume {:verifier.code 0} true;
    $p748 := $i2p.i64.ref($i747);
    goto corral_source_split_4394;

  corral_source_split_4394:
    assume {:verifier.code 0} true;
    havoc $i749;
    call {:si_unique_call 7182} {:cexpr "__cil_tmp486"} {:si_old_unique_call 2310} boogie_si_record_i16($i749);
    goto corral_source_split_4395;

  corral_source_split_4395:
    assume {:verifier.code 0} true;
    $i750 := $zext.i16.i32($i749);
    call {:si_unique_call 7183} {:cexpr "__cil_tmp487"} {:si_old_unique_call 2311} boogie_si_record_i32($i750);
    goto corral_source_split_4396;

  corral_source_split_4396:
    assume {:verifier.code 0} true;
    $i751 := $ult.i32($i557, $i750);
    goto corral_source_split_4397;

  corral_source_split_4397:
    assume {:verifier.code 0} true;
    assume {:branchcond $i751} true;
    goto $bb239, $bb240;

  $bb240:
    assume !($i751 == 1);
    goto corral_source_split_4408;

  corral_source_split_4408:
    assume {:verifier.code 0} true;
    $i800 := $p2i.ref.i64($p2);
    call {:si_unique_call 7184} {:cexpr "__cil_tmp520"} {:si_old_unique_call 2316} boogie_si_record_i64($i800);
    goto corral_source_split_4409;

  corral_source_split_4409:
    assume {:verifier.code 0} true;
    $i801 := $add.i64($i800, 60);
    call {:si_unique_call 7185} {:cexpr "__cil_tmp521"} {:si_old_unique_call 2317} boogie_si_record_i64($i801);
    goto corral_source_split_4410;

  corral_source_split_4410:
    assume {:verifier.code 0} true;
    $p802 := $i2p.i64.ref($i801);
    goto corral_source_split_4411;

  corral_source_split_4411:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb253:
    assume {:verifier.code 0} true;
    $i803 := $p2i.ref.i64($p2);
    call {:si_unique_call 7186} {:cexpr "__cil_tmp522"} {:si_old_unique_call 2345} boogie_si_record_i64($i803);
    goto corral_source_split_4467;

  corral_source_split_4467:
    assume {:verifier.code 0} true;
    $i804 := $add.i64($i803, 68);
    call {:si_unique_call 7187} {:cexpr "__cil_tmp523"} {:si_old_unique_call 2346} boogie_si_record_i64($i804);
    goto corral_source_split_4468;

  corral_source_split_4468:
    assume {:verifier.code 0} true;
    $i805 := $p2i.ref.i64($p2);
    call {:si_unique_call 7188} {:cexpr "__cil_tmp524"} {:si_old_unique_call 2347} boogie_si_record_i64($i805);
    goto corral_source_split_4469;

  corral_source_split_4469:
    assume {:verifier.code 0} true;
    $i806 := $add.i64($i805, 20);
    call {:si_unique_call 7189} {:cexpr "__cil_tmp525"} {:si_old_unique_call 2348} boogie_si_record_i64($i806);
    goto corral_source_split_4470;

  corral_source_split_4470:
    assume {:verifier.code 0} true;
    $p807 := $i2p.i64.ref($i806);
    goto corral_source_split_4471;

  corral_source_split_4471:
    assume {:verifier.code 0} true;
    havoc $i808;
    goto corral_source_split_4472;

  corral_source_split_4472:
    assume {:verifier.code 0} true;
    $p809 := $i2p.i64.ref($i804);
    goto corral_source_split_4473;

  corral_source_split_4473:
    assume {:verifier.code 0} true;
    goto corral_source_split_4474;

  corral_source_split_4474:
    assume {:verifier.code 0} true;
    $i810 := $p2i.ref.i64($p2);
    call {:si_unique_call 7190} {:cexpr "__cil_tmp526"} {:si_old_unique_call 2349} boogie_si_record_i64($i810);
    goto corral_source_split_4475;

  corral_source_split_4475:
    assume {:verifier.code 0} true;
    $i811 := $add.i64($i810, 72);
    call {:si_unique_call 7191} {:cexpr "__cil_tmp527"} {:si_old_unique_call 2350} boogie_si_record_i64($i811);
    goto corral_source_split_4476;

  corral_source_split_4476:
    assume {:verifier.code 0} true;
    $i812 := $p2i.ref.i64($p2);
    call {:si_unique_call 7192} {:cexpr "__cil_tmp528"} {:si_old_unique_call 2351} boogie_si_record_i64($i812);
    goto corral_source_split_4477;

  corral_source_split_4477:
    assume {:verifier.code 0} true;
    $i813 := $add.i64($i812, 24);
    call {:si_unique_call 7193} {:cexpr "__cil_tmp529"} {:si_old_unique_call 2352} boogie_si_record_i64($i813);
    goto corral_source_split_4478;

  corral_source_split_4478:
    assume {:verifier.code 0} true;
    $p814 := $i2p.i64.ref($i813);
    goto corral_source_split_4479;

  corral_source_split_4479:
    assume {:verifier.code 0} true;
    havoc $i815;
    goto corral_source_split_4480;

  corral_source_split_4480:
    assume {:verifier.code 0} true;
    $p816 := $i2p.i64.ref($i811);
    goto corral_source_split_4481;

  corral_source_split_4481:
    assume {:verifier.code 0} true;
    goto corral_source_split_4482;

  corral_source_split_4482:
    assume {:verifier.code 0} true;
    $i817 := $p2i.ref.i64($p2);
    call {:si_unique_call 7194} {:cexpr "__cil_tmp530"} {:si_old_unique_call 2353} boogie_si_record_i64($i817);
    goto corral_source_split_4483;

  corral_source_split_4483:
    assume {:verifier.code 0} true;
    $i818 := $add.i64($i817, 76);
    call {:si_unique_call 7195} {:cexpr "__cil_tmp531"} {:si_old_unique_call 2354} boogie_si_record_i64($i818);
    goto corral_source_split_4484;

  corral_source_split_4484:
    assume {:verifier.code 0} true;
    $i819 := $p2i.ref.i64($p2);
    call {:si_unique_call 7196} {:cexpr "__cil_tmp532"} {:si_old_unique_call 2355} boogie_si_record_i64($i819);
    goto corral_source_split_4485;

  corral_source_split_4485:
    assume {:verifier.code 0} true;
    $i820 := $add.i64($i819, 28);
    call {:si_unique_call 7197} {:cexpr "__cil_tmp533"} {:si_old_unique_call 2356} boogie_si_record_i64($i820);
    goto corral_source_split_4486;

  corral_source_split_4486:
    assume {:verifier.code 0} true;
    $p821 := $i2p.i64.ref($i820);
    goto corral_source_split_4487;

  corral_source_split_4487:
    assume {:verifier.code 0} true;
    havoc $i822;
    goto corral_source_split_4488;

  corral_source_split_4488:
    assume {:verifier.code 0} true;
    $p823 := $i2p.i64.ref($i818);
    goto corral_source_split_4489;

  corral_source_split_4489:
    assume {:verifier.code 0} true;
    goto corral_source_split_4490;

  corral_source_split_4490:
    assume {:verifier.code 0} true;
    $i824 := $p2i.ref.i64($p2);
    call {:si_unique_call 7198} {:cexpr "__cil_tmp534"} {:si_old_unique_call 2357} boogie_si_record_i64($i824);
    goto corral_source_split_4491;

  corral_source_split_4491:
    assume {:verifier.code 0} true;
    $i825 := $add.i64($i824, 80);
    call {:si_unique_call 7199} {:cexpr "__cil_tmp535"} {:si_old_unique_call 2358} boogie_si_record_i64($i825);
    goto corral_source_split_4492;

  corral_source_split_4492:
    assume {:verifier.code 0} true;
    $i826 := $p2i.ref.i64($p2);
    call {:si_unique_call 7200} {:cexpr "__cil_tmp536"} {:si_old_unique_call 2359} boogie_si_record_i64($i826);
    goto corral_source_split_4493;

  corral_source_split_4493:
    assume {:verifier.code 0} true;
    $i827 := $add.i64($i826, 32);
    call {:si_unique_call 7201} {:cexpr "__cil_tmp537"} {:si_old_unique_call 2360} boogie_si_record_i64($i827);
    goto corral_source_split_4494;

  corral_source_split_4494:
    assume {:verifier.code 0} true;
    $p828 := $i2p.i64.ref($i827);
    goto corral_source_split_4495;

  corral_source_split_4495:
    assume {:verifier.code 0} true;
    havoc $i829;
    goto corral_source_split_4496;

  corral_source_split_4496:
    assume {:verifier.code 0} true;
    $p830 := $i2p.i64.ref($i825);
    goto corral_source_split_4497;

  corral_source_split_4497:
    assume {:verifier.code 0} true;
    goto corral_source_split_4498;

  corral_source_split_4498:
    assume {:verifier.code 0} true;
    goto $bb254;

  $bb239:
    assume $i751 == 1;
    goto corral_source_split_4399;

  corral_source_split_4399:
    assume {:verifier.code 0} true;
    $i752 := $p2i.ref.i64($p2);
    call {:si_unique_call 7202} {:cexpr "__cil_tmp488"} {:si_old_unique_call 2312} boogie_si_record_i64($i752);
    goto corral_source_split_4400;

  corral_source_split_4400:
    assume {:verifier.code 0} true;
    $i753 := $add.i64($i752, 84);
    call {:si_unique_call 7203} {:cexpr "__cil_tmp489"} {:si_old_unique_call 2313} boogie_si_record_i64($i753);
    goto corral_source_split_4401;

  corral_source_split_4401:
    assume {:verifier.code 0} true;
    $p754 := $i2p.i64.ref($i753);
    goto corral_source_split_4402;

  corral_source_split_4402:
    assume {:verifier.code 0} true;
    havoc $i755;
    call {:si_unique_call 7204} {:cexpr "__cil_tmp490"} {:si_old_unique_call 2314} boogie_si_record_i32($i755);
    goto corral_source_split_4403;

  corral_source_split_4403:
    assume {:verifier.code 0} true;
    $i756 := $zext.i32.i64($i755);
    call {:si_unique_call 7205} {:cexpr "__cil_tmp491"} {:si_old_unique_call 2315} boogie_si_record_i64($i756);
    goto corral_source_split_4404;

  corral_source_split_4404:
    assume {:verifier.code 0} true;
    $i757 := $and.i64($i756, 2);
    goto corral_source_split_4405;

  corral_source_split_4405:
    assume {:verifier.code 0} true;
    $i758 := $ne.i64($i757, 0);
    goto corral_source_split_4406;

  corral_source_split_4406:
    assume {:verifier.code 0} true;
    assume {:branchcond $i758} true;
    goto $bb241, $bb242;

  $bb242:
    assume !($i758 == 1);
    goto corral_source_split_4436;

  corral_source_split_4436:
    assume {:verifier.code 0} true;
    $i797 := $p2i.ref.i64($p2);
    call {:si_unique_call 7206} {:cexpr "__cil_tmp518"} {:si_old_unique_call 2333} boogie_si_record_i64($i797);
    goto corral_source_split_4437;

  corral_source_split_4437:
    assume {:verifier.code 0} true;
    $i798 := $add.i64($i797, 60);
    call {:si_unique_call 7207} {:cexpr "__cil_tmp519"} {:si_old_unique_call 2334} boogie_si_record_i64($i798);
    goto corral_source_split_4438;

  corral_source_split_4438:
    assume {:verifier.code 0} true;
    $p799 := $i2p.i64.ref($i798);
    goto corral_source_split_4439;

  corral_source_split_4439:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb252:
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb241:
    assume $i758 == 1;
    goto corral_source_split_4413;

  corral_source_split_4413:
    assume {:verifier.code 0} true;
    $i759 := $p2i.ref.i64($p2);
    call {:si_unique_call 7208} {:cexpr "__cil_tmp492"} {:si_old_unique_call 2318} boogie_si_record_i64($i759);
    goto corral_source_split_4414;

  corral_source_split_4414:
    assume {:verifier.code 0} true;
    $i760 := $add.i64($i759, 60);
    call {:si_unique_call 7209} {:cexpr "__cil_tmp493"} {:si_old_unique_call 2319} boogie_si_record_i64($i760);
    goto corral_source_split_4415;

  corral_source_split_4415:
    assume {:verifier.code 0} true;
    $i761 := $p2i.ref.i64($p9);
    call {:si_unique_call 7210} {:cexpr "__cil_tmp494"} {:si_old_unique_call 2320} boogie_si_record_i64($i761);
    goto corral_source_split_4416;

  corral_source_split_4416:
    assume {:verifier.code 0} true;
    $i762 := $add.i64($i761, 1146);
    call {:si_unique_call 7211} {:cexpr "__cil_tmp495"} {:si_old_unique_call 2321} boogie_si_record_i64($i762);
    goto corral_source_split_4417;

  corral_source_split_4417:
    assume {:verifier.code 0} true;
    $p763 := $i2p.i64.ref($i762);
    goto corral_source_split_4418;

  corral_source_split_4418:
    assume {:verifier.code 0} true;
    havoc $i764;
    call {:si_unique_call 7212} {:cexpr "__cil_tmp496"} {:si_old_unique_call 2322} boogie_si_record_i16($i764);
    goto corral_source_split_4419;

  corral_source_split_4419:
    assume {:verifier.code 0} true;
    $i765 := $zext.i16.i64($i764);
    call {:si_unique_call 7213} {:cexpr "__cil_tmp497"} {:si_old_unique_call 2323} boogie_si_record_i64($i765);
    goto corral_source_split_4420;

  corral_source_split_4420:
    assume {:verifier.code 0} true;
    $i766 := $zext.i32.i64($i557);
    call {:si_unique_call 7214} {:cexpr "__cil_tmp498"} {:si_old_unique_call 2324} boogie_si_record_i64($i766);
    goto corral_source_split_4421;

  corral_source_split_4421:
    assume {:verifier.code 0} true;
    $i767 := $mul.i64($i766, 1024);
    call {:si_unique_call 7215} {:cexpr "__cil_tmp499"} {:si_old_unique_call 2325} boogie_si_record_i64($i767);
    goto corral_source_split_4422;

  corral_source_split_4422:
    assume {:verifier.code 0} true;
    $i768 := $udiv.i64($i767, $i765);
    call {:si_unique_call 7216} {:cexpr "__cil_tmp500"} {:si_old_unique_call 2326} boogie_si_record_i64($i768);
    goto corral_source_split_4423;

  corral_source_split_4423:
    assume {:verifier.code 0} true;
    $i769 := $and.i64($i768, 1023);
    call {:si_unique_call 7217} {:cexpr "__cil_tmp501"} {:si_old_unique_call 2327} boogie_si_record_i64($i769);
    goto corral_source_split_4424;

  corral_source_split_4424:
    assume {:verifier.code 0} true;
    $i770 := $or.i64(3221225472, $i769);
    call {:si_unique_call 7218} {:cexpr "__cil_tmp502"} {:si_old_unique_call 2328} boogie_si_record_i64($i770);
    goto corral_source_split_4425;

  corral_source_split_4425:
    assume {:verifier.code 0} true;
    $i771 := $trunc.i64.i32($i770);
    goto corral_source_split_4426;

  corral_source_split_4426:
    assume {:verifier.code 0} true;
    $p772 := $i2p.i64.ref($i760);
    goto corral_source_split_4427;

  corral_source_split_4427:
    assume {:verifier.code 0} true;
    goto corral_source_split_4428;

  corral_source_split_4428:
    assume {:verifier.code 0} true;
    $i773 := $p2i.ref.i64($p9);
    call {:si_unique_call 7219} {:cexpr "__cil_tmp503"} {:si_old_unique_call 2329} boogie_si_record_i64($i773);
    goto corral_source_split_4429;

  corral_source_split_4429:
    assume {:verifier.code 0} true;
    $i774 := $add.i64($i773, 1044);
    call {:si_unique_call 7220} {:cexpr "__cil_tmp504"} {:si_old_unique_call 2330} boogie_si_record_i64($i774);
    goto corral_source_split_4430;

  corral_source_split_4430:
    assume {:verifier.code 0} true;
    $p775 := $i2p.i64.ref($i774);
    goto corral_source_split_4431;

  corral_source_split_4431:
    assume {:verifier.code 0} true;
    havoc $i776;
    call {:si_unique_call 7221} {:cexpr "__cil_tmp505"} {:si_old_unique_call 2331} boogie_si_record_i32($i776);
    goto corral_source_split_4432;

  corral_source_split_4432:
    assume {:verifier.code 0} true;
    $i777 := $and.i32($i776, 262144);
    call {:si_unique_call 7222} {:cexpr "__cil_tmp506"} {:si_old_unique_call 2332} boogie_si_record_i32($i777);
    goto corral_source_split_4433;

  corral_source_split_4433:
    assume {:verifier.code 0} true;
    $i778 := $ne.i32($i777, 0);
    goto corral_source_split_4434;

  corral_source_split_4434:
    assume {:verifier.code 0} true;
    assume {:branchcond $i778} true;
    goto $bb243, $bb244;

  $bb244:
    assume !($i778 == 1);
    goto corral_source_split_4441;

  corral_source_split_4441:
    assume {:verifier.code 0} true;
    $i779 := $p2i.ref.i64($p9);
    call {:si_unique_call 7223} {:cexpr "__cil_tmp507"} {:si_old_unique_call 2335} boogie_si_record_i64($i779);
    goto corral_source_split_4442;

  corral_source_split_4442:
    assume {:verifier.code 0} true;
    $i780 := $add.i64($i779, 1044);
    call {:si_unique_call 7224} {:cexpr "__cil_tmp508"} {:si_old_unique_call 2336} boogie_si_record_i64($i780);
    goto corral_source_split_4443;

  corral_source_split_4443:
    assume {:verifier.code 0} true;
    $p781 := $i2p.i64.ref($i780);
    goto corral_source_split_4444;

  corral_source_split_4444:
    assume {:verifier.code 0} true;
    havoc $i782;
    call {:si_unique_call 7225} {:cexpr "__cil_tmp509"} {:si_old_unique_call 2337} boogie_si_record_i32($i782);
    goto corral_source_split_4445;

  corral_source_split_4445:
    assume {:verifier.code 0} true;
    $i783 := $and.i32($i782, 512);
    goto corral_source_split_4446;

  corral_source_split_4446:
    assume {:verifier.code 0} true;
    $i784 := $ne.i32($i783, 0);
    goto corral_source_split_4447;

  corral_source_split_4447:
    assume {:verifier.code 0} true;
    assume {:branchcond $i784} true;
    goto $bb245, $bb246;

  $bb246:
    assume !($i784 == 1);
    assume {:verifier.code 0} true;
    $i785 := 800;
    goto $bb247;

  $bb247:
    assume {:verifier.code 0} true;
    goto corral_source_split_4451;

  corral_source_split_4451:
    assume {:verifier.code 0} true;
    $i786 := $ule.i32($i13, $i785);
    goto corral_source_split_4452;

  corral_source_split_4452:
    assume {:verifier.code 0} true;
    assume {:branchcond $i786} true;
    goto $bb248, $bb249;

  $bb249:
    assume !($i786 == 1);
    assume {:verifier.code 0} true;
    goto $bb250;

  $bb250:
    assume {:verifier.code 0} true;
    goto $bb251;

  $bb251:
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb248:
    assume $i786 == 1;
    goto corral_source_split_4454;

  corral_source_split_4454:
    assume {:verifier.code 0} true;
    $i787 := $p2i.ref.i64($p2);
    call {:si_unique_call 7226} {:cexpr "__cil_tmp511"} {:si_old_unique_call 2338} boogie_si_record_i64($i787);
    goto corral_source_split_4455;

  corral_source_split_4455:
    assume {:verifier.code 0} true;
    $i788 := $add.i64($i787, 64);
    call {:si_unique_call 7227} {:cexpr "__cil_tmp512"} {:si_old_unique_call 2339} boogie_si_record_i64($i788);
    goto corral_source_split_4456;

  corral_source_split_4456:
    assume {:verifier.code 0} true;
    $i789 := $p2i.ref.i64($p2);
    call {:si_unique_call 7228} {:cexpr "__cil_tmp513"} {:si_old_unique_call 2340} boogie_si_record_i64($i789);
    goto corral_source_split_4457;

  corral_source_split_4457:
    assume {:verifier.code 0} true;
    $i790 := $add.i64($i789, 64);
    call {:si_unique_call 7229} {:cexpr "__cil_tmp514"} {:si_old_unique_call 2341} boogie_si_record_i64($i790);
    goto corral_source_split_4458;

  corral_source_split_4458:
    assume {:verifier.code 0} true;
    $p791 := $i2p.i64.ref($i790);
    goto corral_source_split_4459;

  corral_source_split_4459:
    assume {:verifier.code 0} true;
    havoc $i792;
    call {:si_unique_call 7230} {:cexpr "__cil_tmp515"} {:si_old_unique_call 2342} boogie_si_record_i32($i792);
    goto corral_source_split_4460;

  corral_source_split_4460:
    assume {:verifier.code 0} true;
    $i793 := $zext.i32.i64($i792);
    call {:si_unique_call 7231} {:cexpr "__cil_tmp516"} {:si_old_unique_call 2343} boogie_si_record_i64($i793);
    goto corral_source_split_4461;

  corral_source_split_4461:
    assume {:verifier.code 0} true;
    $i794 := $or.i64($i793, 1024);
    call {:si_unique_call 7232} {:cexpr "__cil_tmp517"} {:si_old_unique_call 2344} boogie_si_record_i64($i794);
    goto corral_source_split_4462;

  corral_source_split_4462:
    assume {:verifier.code 0} true;
    $i795 := $trunc.i64.i32($i794);
    goto corral_source_split_4463;

  corral_source_split_4463:
    assume {:verifier.code 0} true;
    $p796 := $i2p.i64.ref($i788);
    goto corral_source_split_4464;

  corral_source_split_4464:
    assume {:verifier.code 0} true;
    goto corral_source_split_4465;

  corral_source_split_4465:
    assume {:verifier.code 0} true;
    goto $bb250;

  $bb245:
    assume $i784 == 1;
    goto corral_source_split_4449;

  corral_source_split_4449:
    assume {:verifier.code 0} true;
    $i785 := 1024;
    goto $bb247;

  $bb243:
    assume $i778 == 1;
    assume {:verifier.code 0} true;
    goto $bb251;

  $bb193:
    assume $i618 == 1;
    goto corral_source_split_4224;

  corral_source_split_4224:
    assume {:verifier.code 0} true;
    $i619 := $p2i.ref.i64($p2);
    call {:si_unique_call 7233} {:cexpr "__cil_tmp406"} {:si_old_unique_call 2227} boogie_si_record_i64($i619);
    goto corral_source_split_4225;

  corral_source_split_4225:
    assume {:verifier.code 0} true;
    $i620 := $add.i64($i619, 84);
    call {:si_unique_call 7234} {:cexpr "__cil_tmp407"} {:si_old_unique_call 2228} boogie_si_record_i64($i620);
    goto corral_source_split_4226;

  corral_source_split_4226:
    assume {:verifier.code 0} true;
    $p621 := $i2p.i64.ref($i620);
    goto corral_source_split_4227;

  corral_source_split_4227:
    assume {:verifier.code 0} true;
    havoc $i622;
    call {:si_unique_call 7235} {:cexpr "__cil_tmp408"} {:si_old_unique_call 2229} boogie_si_record_i32($i622);
    goto corral_source_split_4228;

  corral_source_split_4228:
    assume {:verifier.code 0} true;
    $i623 := $zext.i32.i64($i622);
    call {:si_unique_call 7236} {:cexpr "__cil_tmp409"} {:si_old_unique_call 2230} boogie_si_record_i64($i623);
    goto corral_source_split_4229;

  corral_source_split_4229:
    assume {:verifier.code 0} true;
    $i624 := $and.i64($i623, 2);
    goto corral_source_split_4230;

  corral_source_split_4230:
    assume {:verifier.code 0} true;
    $i625 := $ne.i64($i624, 0);
    goto corral_source_split_4231;

  corral_source_split_4231:
    assume {:verifier.code 0} true;
    assume {:branchcond $i625} true;
    goto $bb195, $bb196;

  $bb196:
    assume !($i625 == 1);
    assume {:verifier.code 0} true;
    goto $bb237;

  $bb237:
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb195:
    assume $i625 == 1;
    goto corral_source_split_4233;

  corral_source_split_4233:
    assume {:verifier.code 0} true;
    goto $bb197;

  $bb197:
    assume {:verifier.code 0} true;
    goto $bb198;

  $bb198:
    assume {:verifier.code 0} true;
    $i626 := $and.i32($i13, $sub.i32(0, 8));
    call {:si_unique_call 7237} {:cexpr "__cil_tmp410"} {:si_old_unique_call 2231} boogie_si_record_i32($i626);
    goto corral_source_split_4235;

  corral_source_split_4235:
    assume {:verifier.code 0} true;
    $i627 := $p2i.ref.i64($p9);
    call {:si_unique_call 7238} {:cexpr "__cil_tmp411"} {:si_old_unique_call 2232} boogie_si_record_i64($i627);
    goto corral_source_split_4236;

  corral_source_split_4236:
    assume {:verifier.code 0} true;
    $i628 := $add.i64($i627, 1144);
    call {:si_unique_call 7239} {:cexpr "__cil_tmp412"} {:si_old_unique_call 2233} boogie_si_record_i64($i628);
    goto corral_source_split_4237;

  corral_source_split_4237:
    assume {:verifier.code 0} true;
    $p629 := $i2p.i64.ref($i628);
    goto corral_source_split_4238;

  corral_source_split_4238:
    assume {:verifier.code 0} true;
    havoc $i630;
    call {:si_unique_call 7240} {:cexpr "__cil_tmp413"} {:si_old_unique_call 2234} boogie_si_record_i16($i630);
    goto corral_source_split_4239;

  corral_source_split_4239:
    assume {:verifier.code 0} true;
    $i631 := $zext.i16.i32($i630);
    call {:si_unique_call 7241} {:cexpr "__cil_tmp414"} {:si_old_unique_call 2235} boogie_si_record_i32($i631);
    goto corral_source_split_4240;

  corral_source_split_4240:
    assume {:verifier.code 0} true;
    $i632 := $sdiv.i32($i631, $i626);
    call {:si_unique_call 7242} {:cexpr "nStretch"} {:si_old_unique_call 2236} boogie_si_record_i32($i632);
    goto corral_source_split_4241;

  corral_source_split_4241:
    assume {:verifier.code 0} true;
    $i633 := $p2i.ref.i64($p9);
    call {:si_unique_call 7243} {:cexpr "__cil_tmp415"} {:si_old_unique_call 2237} boogie_si_record_i64($i633);
    goto corral_source_split_4242;

  corral_source_split_4242:
    assume {:verifier.code 0} true;
    $i634 := $add.i64($i633, 1144);
    call {:si_unique_call 7244} {:cexpr "__cil_tmp416"} {:si_old_unique_call 2238} boogie_si_record_i64($i634);
    goto corral_source_split_4243;

  corral_source_split_4243:
    assume {:verifier.code 0} true;
    $p635 := $i2p.i64.ref($i634);
    goto corral_source_split_4244;

  corral_source_split_4244:
    assume {:verifier.code 0} true;
    havoc $i636;
    call {:si_unique_call 7245} {:cexpr "__cil_tmp417"} {:si_old_unique_call 2239} boogie_si_record_i16($i636);
    goto corral_source_split_4245;

  corral_source_split_4245:
    assume {:verifier.code 0} true;
    $i637 := $zext.i16.i32($i636);
    call {:si_unique_call 7246} {:cexpr "__cil_tmp418"} {:si_old_unique_call 2240} boogie_si_record_i32($i637);
    goto corral_source_split_4246;

  corral_source_split_4246:
    assume {:verifier.code 0} true;
    $i638 := $srem.i32($i637, $i626);
    call {:si_unique_call 7247} {:cexpr "Remainder"} {:si_old_unique_call 2241} boogie_si_record_i32($i638);
    goto corral_source_split_4247;

  corral_source_split_4247:
    assume {:verifier.code 0} true;
    $i639 := $ne.i32($i638, 0);
    goto corral_source_split_4248;

  corral_source_split_4248:
    assume {:verifier.code 0} true;
    assume {:branchcond $i639} true;
    goto $bb199, $bb200;

  $bb200:
    assume !($i639 == 1);
    goto corral_source_split_4252;

  corral_source_split_4252:
    assume {:verifier.code 0} true;
    $i640 := $sgt.i32($i632, 2);
    goto corral_source_split_4253;

  corral_source_split_4253:
    assume {:verifier.code 0} true;
    assume {:branchcond $i640} true;
    goto $bb201, $bb202;

  $bb202:
    assume !($i640 == 1);
    goto corral_source_split_4257;

  corral_source_split_4257:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb204:
    assume {:verifier.code 0} true;
    $i641 := $p2i.ref.i64($p9);
    call {:si_unique_call 7248} {:cexpr "__cil_tmp419"} {:si_old_unique_call 2250} boogie_si_record_i64($i641);
    goto corral_source_split_4272;

  corral_source_split_4272:
    assume {:verifier.code 0} true;
    $i642 := $add.i64($i641, 1144);
    call {:si_unique_call 7249} {:cexpr "__cil_tmp420"} {:si_old_unique_call 2251} boogie_si_record_i64($i642);
    goto corral_source_split_4273;

  corral_source_split_4273:
    assume {:verifier.code 0} true;
    $p643 := $i2p.i64.ref($i642);
    goto corral_source_split_4274;

  corral_source_split_4274:
    assume {:verifier.code 0} true;
    havoc $i644;
    call {:si_unique_call 7250} {:cexpr "__cil_tmp421"} {:si_old_unique_call 2252} boogie_si_record_i16($i644);
    goto corral_source_split_4275;

  corral_source_split_4275:
    assume {:verifier.code 0} true;
    $i645 := $zext.i16.i32($i644);
    call {:si_unique_call 7251} {:cexpr "__cil_tmp422"} {:si_old_unique_call 2253} boogie_si_record_i32($i645);
    goto corral_source_split_4276;

  corral_source_split_4276:
    assume {:verifier.code 0} true;
    $i646 := $mul.i32($i626, 16);
    call {:si_unique_call 7252} {:cexpr "__cil_tmp423"} {:si_old_unique_call 2254} boogie_si_record_i32($i646);
    goto corral_source_split_4277;

  corral_source_split_4277:
    assume {:verifier.code 0} true;
    $i647 := $sdiv.i32($i646, $i645);
    call {:si_unique_call 7253} {:cexpr "__cil_tmp424"} {:si_old_unique_call 2255} boogie_si_record_i32($i647);
    goto corral_source_split_4278;

  corral_source_split_4278:
    assume {:verifier.code 0} true;
    $i648 := $slt.i32($i647, 7);
    goto corral_source_split_4279;

  corral_source_split_4279:
    assume {:verifier.code 0} true;
    assume {:branchcond $i648} true;
    goto $bb205, $bb206;

  $bb206:
    assume !($i648 == 1);
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb235:
    assume {:verifier.code 0} true;
    goto $bb236;

  $bb236:
    assume {:verifier.code 0} true;
    $i726 := $p2i.ref.i64($p2);
    call {:si_unique_call 7254} {:cexpr "__cil_tmp468"} {:si_old_unique_call 2292} boogie_si_record_i64($i726);
    goto corral_source_split_4370;

  corral_source_split_4370:
    assume {:verifier.code 0} true;
    $i727 := $add.i64($i726, 56);
    call {:si_unique_call 7255} {:cexpr "__cil_tmp469"} {:si_old_unique_call 2293} boogie_si_record_i64($i727);
    goto corral_source_split_4371;

  corral_source_split_4371:
    assume {:verifier.code 0} true;
    $i728 := $p2i.ref.i64($p9);
    call {:si_unique_call 7256} {:cexpr "__cil_tmp470"} {:si_old_unique_call 2294} boogie_si_record_i64($i728);
    goto corral_source_split_4372;

  corral_source_split_4372:
    assume {:verifier.code 0} true;
    $i729 := $add.i64($i728, 1144);
    call {:si_unique_call 7257} {:cexpr "__cil_tmp471"} {:si_old_unique_call 2295} boogie_si_record_i64($i729);
    goto corral_source_split_4373;

  corral_source_split_4373:
    assume {:verifier.code 0} true;
    $p730 := $i2p.i64.ref($i729);
    goto corral_source_split_4374;

  corral_source_split_4374:
    assume {:verifier.code 0} true;
    havoc $i731;
    call {:si_unique_call 7258} {:cexpr "__cil_tmp472"} {:si_old_unique_call 2296} boogie_si_record_i16($i731);
    goto corral_source_split_4375;

  corral_source_split_4375:
    assume {:verifier.code 0} true;
    $i732 := $zext.i16.i64($i731);
    call {:si_unique_call 7259} {:cexpr "__cil_tmp473"} {:si_old_unique_call 2297} boogie_si_record_i64($i732);
    goto corral_source_split_4376;

  corral_source_split_4376:
    assume {:verifier.code 0} true;
    $i733 := $sext.i32.i64($i626);
    call {:si_unique_call 7260} {:cexpr "__cil_tmp474"} {:si_old_unique_call 2298} boogie_si_record_i64($i733);
    goto corral_source_split_4377;

  corral_source_split_4377:
    assume {:verifier.code 0} true;
    $i734 := $mul.i64($i733, 4096);
    call {:si_unique_call 7261} {:cexpr "__cil_tmp475"} {:si_old_unique_call 2299} boogie_si_record_i64($i734);
    goto corral_source_split_4378;

  corral_source_split_4378:
    assume {:verifier.code 0} true;
    $i735 := $udiv.i64($i734, $i732);
    call {:si_unique_call 7262} {:cexpr "__cil_tmp476"} {:si_old_unique_call 2300} boogie_si_record_i64($i735);
    goto corral_source_split_4379;

  corral_source_split_4379:
    assume {:verifier.code 0} true;
    $i736 := $and.i64($i735, 4095);
    call {:si_unique_call 7263} {:cexpr "__cil_tmp477"} {:si_old_unique_call 2301} boogie_si_record_i64($i736);
    goto corral_source_split_4380;

  corral_source_split_4380:
    assume {:verifier.code 0} true;
    $i737 := $or.i64(3221225472, $i736);
    call {:si_unique_call 7264} {:cexpr "__cil_tmp478"} {:si_old_unique_call 2302} boogie_si_record_i64($i737);
    goto corral_source_split_4381;

  corral_source_split_4381:
    assume {:verifier.code 0} true;
    $i738 := $p2i.ref.i64($p2);
    call {:si_unique_call 7265} {:cexpr "__cil_tmp479"} {:si_old_unique_call 2303} boogie_si_record_i64($i738);
    goto corral_source_split_4382;

  corral_source_split_4382:
    assume {:verifier.code 0} true;
    $i739 := $add.i64($i738, 56);
    call {:si_unique_call 7266} {:cexpr "__cil_tmp480"} {:si_old_unique_call 2304} boogie_si_record_i64($i739);
    goto corral_source_split_4383;

  corral_source_split_4383:
    assume {:verifier.code 0} true;
    $p740 := $i2p.i64.ref($i739);
    goto corral_source_split_4384;

  corral_source_split_4384:
    assume {:verifier.code 0} true;
    havoc $i741;
    call {:si_unique_call 7267} {:cexpr "__cil_tmp481"} {:si_old_unique_call 2305} boogie_si_record_i32($i741);
    goto corral_source_split_4385;

  corral_source_split_4385:
    assume {:verifier.code 0} true;
    $i742 := $zext.i32.i64($i741);
    call {:si_unique_call 7268} {:cexpr "__cil_tmp482"} {:si_old_unique_call 2306} boogie_si_record_i64($i742);
    goto corral_source_split_4386;

  corral_source_split_4386:
    assume {:verifier.code 0} true;
    $i743 := $or.i64($i742, $i737);
    call {:si_unique_call 7269} {:cexpr "__cil_tmp483"} {:si_old_unique_call 2307} boogie_si_record_i64($i743);
    goto corral_source_split_4387;

  corral_source_split_4387:
    assume {:verifier.code 0} true;
    $i744 := $trunc.i64.i32($i743);
    goto corral_source_split_4388;

  corral_source_split_4388:
    assume {:verifier.code 0} true;
    $p745 := $i2p.i64.ref($i727);
    goto corral_source_split_4389;

  corral_source_split_4389:
    assume {:verifier.code 0} true;
    goto corral_source_split_4390;

  corral_source_split_4390:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb232:
    assume {:verifier.code 0} true;
    goto $bb237;

  $bb205:
    assume $i648 == 1;
    goto corral_source_split_4281;

  corral_source_split_4281:
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb203:
    assume {:verifier.code 0} true;
    goto corral_source_split_4259;

  corral_source_split_4259:
    assume {:verifier.code 0} true;
    $i649 := $p2i.ref.i64($p9);
    call {:si_unique_call 7270} {:cexpr "__cil_tmp427"} {:si_old_unique_call 2242} boogie_si_record_i64($i649);
    goto corral_source_split_4260;

  corral_source_split_4260:
    assume {:verifier.code 0} true;
    $i650 := $add.i64($i649, 1144);
    call {:si_unique_call 7271} {:cexpr "__cil_tmp428"} {:si_old_unique_call 2243} boogie_si_record_i64($i650);
    goto corral_source_split_4261;

  corral_source_split_4261:
    assume {:verifier.code 0} true;
    $p651 := $i2p.i64.ref($i650);
    goto corral_source_split_4262;

  corral_source_split_4262:
    assume {:verifier.code 0} true;
    havoc $i652;
    call {:si_unique_call 7272} {:cexpr "__cil_tmp429"} {:si_old_unique_call 2244} boogie_si_record_i16($i652);
    goto corral_source_split_4263;

  corral_source_split_4263:
    assume {:verifier.code 0} true;
    $i653 := $zext.i16.i32($i652);
    goto corral_source_split_4264;

  corral_source_split_4264:
    assume {:verifier.code 0} true;
    goto corral_source_split_4265;

  corral_source_split_4265:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7273} {:si_old_unique_call 2245} ATIReduceRatio($p3, $p4);
    goto corral_source_split_4266;

  corral_source_split_4266:
    assume {:verifier.code 0} true;
    havoc $i654;
    call {:si_unique_call 7274} {:cexpr "__cil_tmp431"} {:si_old_unique_call 2246} boogie_si_record_i32($i654);
    goto corral_source_split_4267;

  corral_source_split_4267:
    assume {:verifier.code 0} true;
    havoc $i655;
    call {:si_unique_call 7275} {:cexpr "__cil_tmp433"} {:si_old_unique_call 2247} boogie_si_record_i32($i655);
    goto corral_source_split_4268;

  corral_source_split_4268:
    assume {:verifier.code 0} true;
    $i656 := $mul.i32($i655, 16);
    call {:si_unique_call 7276} {:cexpr "__cil_tmp434"} {:si_old_unique_call 2248} boogie_si_record_i32($i656);
    goto corral_source_split_4269;

  corral_source_split_4269:
    assume {:verifier.code 0} true;
    $i657 := $sdiv.i32($i656, $i654);
    call {:si_unique_call 7277} {:cexpr "BestRemainder"} {:si_old_unique_call 2249} boogie_si_record_i32($i657);
    goto corral_source_split_4270;

  corral_source_split_4270:
    assume {:verifier.code 0} true;
    $i658, $i659, $i660 := $sub.i32(0, 1), $i657, 5;
    goto $bb207;

  $bb207:
    call {:si_unique_call 7278} $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i667, $i668, $i669, $i670, $p671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684 := aty_var_to_crtc_loop_$bb207_PassiveCopy($i658, $i659, $i660, $i661, $i662, $i663, $i664, $i667, $i668, $i669, $i670, $p671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684);
    goto $bb207_last;

  $bb207_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4283;

  corral_source_split_4283:
    assume {:verifier.code 0} true;
    goto $bb208;

  $bb208:
    assume {:verifier.code 0} true;
    $i661 := $sub.i32($i660, 1);
    call {:si_unique_call 7279} {:cexpr "Index"} {:si_old_unique_call 2256} boogie_si_record_i32($i661);
    goto corral_source_split_4285;

  corral_source_split_4285:
    assume {:verifier.code 0} true;
    $i662 := $sge.i32($i661, 0);
    goto corral_source_split_4286;

  corral_source_split_4286:
    assume {:verifier.code 0} true;
    $i663, $i664 := $i658, $i659;
    assume {:branchcond $i662} true;
    goto $bb209, $bb210;

  $bb210:
    assume !($i662 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4290;

  corral_source_split_4290:
    assume {:verifier.code 0} true;
    $i665, $i666 := $i663, $i664;
    goto $bb212;

  $bb212:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4306;

  corral_source_split_4306:
    assume {:verifier.code 0} true;
    $i685 := $sge.i32($i665, 0);
    goto corral_source_split_4307;

  corral_source_split_4307:
    assume {:verifier.code 0} true;
    assume {:branchcond $i685} true;
    goto $bb219, $bb220;

  $bb220:
    assume !($i685 == 1);
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb234:
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb219:
    assume $i685 == 1;
    goto corral_source_split_4318;

  corral_source_split_4318:
    assume {:verifier.code 0} true;
    $i686 := $ne.i32($i666, 0);
    goto corral_source_split_4319;

  corral_source_split_4319:
    assume {:verifier.code 0} true;
    assume {:branchcond $i686} true;
    goto $bb221, $bb222;

  $bb222:
    assume !($i686 == 1);
    goto corral_source_split_4321;

  corral_source_split_4321:
    assume {:verifier.code 0} true;
    $i687 := $sext.i32.i64($i665);
    goto corral_source_split_4322;

  corral_source_split_4322:
    assume {:verifier.code 0} true;
    $i688 := $mul.i64($i687, 1);
    call {:si_unique_call 7280} {:cexpr "__cil_tmp447"} {:si_old_unique_call 2267} boogie_si_record_i64($i688);
    goto corral_source_split_4323;

  corral_source_split_4323:
    assume {:verifier.code 0} true;
    $i689 := $add.i64($p2i.ref.i64(StretchLoops), $i688);
    call {:si_unique_call 7281} {:cexpr "__cil_tmp448"} {:si_old_unique_call 2268} boogie_si_record_i64($i689);
    goto corral_source_split_4324;

  corral_source_split_4324:
    assume {:verifier.code 0} true;
    $p690 := $i2p.i64.ref($i689);
    goto corral_source_split_4325;

  corral_source_split_4325:
    assume {:verifier.code 0} true;
    havoc $i691;
    call {:si_unique_call 7282} {:cexpr "__cil_tmp449"} {:si_old_unique_call 2269} boogie_si_record_i8($i691);
    goto corral_source_split_4326;

  corral_source_split_4326:
    assume {:verifier.code 0} true;
    $i692 := $sext.i8.i32($i691);
    call {:si_unique_call 7283} {:cexpr "Index"} {:si_old_unique_call 2270} boogie_si_record_i32($i692);
    goto corral_source_split_4327;

  corral_source_split_4327:
    assume {:verifier.code 0} true;
    $i693, $i694, $i695, $i696 := $i692, 0, 0, 1;
    goto $bb223;

  $bb223:
    call {:si_unique_call 7284} $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i704, $i705, $i702, $i703, $i706, $i707, $i708 := aty_var_to_crtc_loop_$bb223($i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i704, $i705, $i702, $i703, $i706, $i707, $i708);
    LoopBound_AssertVar := false;
    goto $bb223_last;

  $bb223_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4329;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    goto $bb224;

  $bb224:
    assume {:verifier.code 0} true;
    $i697 := $sub.i32($i693, 1);
    call {:si_unique_call 7285} {:cexpr "Index"} {:si_old_unique_call 2271} boogie_si_record_i32($i697);
    goto corral_source_split_4331;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    $i698 := $sge.i32($i697, 0);
    goto corral_source_split_4332;

  corral_source_split_4332:
    assume {:verifier.code 0} true;
    $i699 := $i694;
    assume {:branchcond $i698} true;
    goto $bb225, $bb226;

  $bb226:
    assume !($i698 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_4336;

  corral_source_split_4336:
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb228:
    assume {:verifier.code 0} true;
    $i709 := $p2i.ref.i64($p2);
    call {:si_unique_call 7286} {:cexpr "__cil_tmp454"} {:si_old_unique_call 2272} boogie_si_record_i64($i709);
    goto corral_source_split_4340;

  corral_source_split_4340:
    assume {:verifier.code 0} true;
    $i710 := $add.i64($i709, 56);
    call {:si_unique_call 7287} {:cexpr "__cil_tmp455"} {:si_old_unique_call 2273} boogie_si_record_i64($i710);
    goto corral_source_split_4341;

  corral_source_split_4341:
    assume {:verifier.code 0} true;
    $i711 := $sext.i32.i64($i699);
    call {:si_unique_call 7288} {:cexpr "__cil_tmp456"} {:si_old_unique_call 2274} boogie_si_record_i64($i711);
    goto corral_source_split_4342;

  corral_source_split_4342:
    assume {:verifier.code 0} true;
    $i712 := $and.i64($i711, 65535);
    call {:si_unique_call 7289} {:cexpr "__cil_tmp457"} {:si_old_unique_call 2275} boogie_si_record_i64($i712);
    goto corral_source_split_4343;

  corral_source_split_4343:
    assume {:verifier.code 0} true;
    $i713 := $sext.i32.i64($i665);
    call {:si_unique_call 7290} {:cexpr "__cil_tmp458"} {:si_old_unique_call 2276} boogie_si_record_i64($i713);
    goto corral_source_split_4344;

  corral_source_split_4344:
    assume {:verifier.code 0} true;
    $i714 := $and.i64($i713, 458752);
    call {:si_unique_call 7291} {:cexpr "__cil_tmp459"} {:si_old_unique_call 2277} boogie_si_record_i64($i714);
    goto corral_source_split_4345;

  corral_source_split_4345:
    assume {:verifier.code 0} true;
    $i715 := $shl.i64($i714, 16);
    call {:si_unique_call 7292} {:cexpr "__cil_tmp460"} {:si_old_unique_call 2278} boogie_si_record_i64($i715);
    goto corral_source_split_4346;

  corral_source_split_4346:
    assume {:verifier.code 0} true;
    $i716 := $or.i64(2147483648, $i715);
    call {:si_unique_call 7293} {:cexpr "__cil_tmp461"} {:si_old_unique_call 2279} boogie_si_record_i64($i716);
    goto corral_source_split_4347;

  corral_source_split_4347:
    assume {:verifier.code 0} true;
    $i717 := $or.i64($i716, $i712);
    call {:si_unique_call 7294} {:cexpr "__cil_tmp462"} {:si_old_unique_call 2280} boogie_si_record_i64($i717);
    goto corral_source_split_4348;

  corral_source_split_4348:
    assume {:verifier.code 0} true;
    $i718 := $p2i.ref.i64($p2);
    call {:si_unique_call 7295} {:cexpr "__cil_tmp463"} {:si_old_unique_call 2281} boogie_si_record_i64($i718);
    goto corral_source_split_4349;

  corral_source_split_4349:
    assume {:verifier.code 0} true;
    $i719 := $add.i64($i718, 56);
    call {:si_unique_call 7296} {:cexpr "__cil_tmp464"} {:si_old_unique_call 2282} boogie_si_record_i64($i719);
    goto corral_source_split_4350;

  corral_source_split_4350:
    assume {:verifier.code 0} true;
    $p720 := $i2p.i64.ref($i719);
    goto corral_source_split_4351;

  corral_source_split_4351:
    assume {:verifier.code 0} true;
    havoc $i721;
    call {:si_unique_call 7297} {:cexpr "__cil_tmp465"} {:si_old_unique_call 2283} boogie_si_record_i32($i721);
    goto corral_source_split_4352;

  corral_source_split_4352:
    assume {:verifier.code 0} true;
    $i722 := $zext.i32.i64($i721);
    call {:si_unique_call 7298} {:cexpr "__cil_tmp466"} {:si_old_unique_call 2284} boogie_si_record_i64($i722);
    goto corral_source_split_4353;

  corral_source_split_4353:
    assume {:verifier.code 0} true;
    $i723 := $or.i64($i722, $i717);
    call {:si_unique_call 7299} {:cexpr "__cil_tmp467"} {:si_old_unique_call 2285} boogie_si_record_i64($i723);
    goto corral_source_split_4354;

  corral_source_split_4354:
    assume {:verifier.code 0} true;
    $i724 := $trunc.i64.i32($i723);
    goto corral_source_split_4355;

  corral_source_split_4355:
    assume {:verifier.code 0} true;
    $p725 := $i2p.i64.ref($i710);
    goto corral_source_split_4356;

  corral_source_split_4356:
    assume {:verifier.code 0} true;
    goto corral_source_split_4357;

  corral_source_split_4357:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb225:
    assume $i698 == 1;
    goto corral_source_split_4334;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    goto $bb227;

  $bb227:
    assume {:verifier.code 0} true;
    $i700 := $sgt.i32($i695, 0);
    goto corral_source_split_4338;

  corral_source_split_4338:
    assume {:verifier.code 0} true;
    assume {:branchcond $i700} true;
    goto $bb229, $bb230;

  $bb230:
    assume !($i700 == 1);
    goto corral_source_split_4362;

  corral_source_split_4362:
    assume {:verifier.code 0} true;
    havoc $i704;
    call {:si_unique_call 7300} {:cexpr "__cil_tmp451"} {:si_old_unique_call 2287} boogie_si_record_i32($i704);
    goto corral_source_split_4363;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    $i705 := $add.i32($i695, $i704);
    call {:si_unique_call 7301} {:cexpr "Accumulator"} {:si_old_unique_call 2288} boogie_si_record_i32($i705);
    assume {:verifier.code 0} true;
    $i702, $i703 := $i694, $i705;
    goto $bb231;

  $bb231:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4365;

  corral_source_split_4365:
    assume {:verifier.code 0} true;
    havoc $i706;
    call {:si_unique_call 7302} {:cexpr "__cil_tmp453"} {:si_old_unique_call 2289} boogie_si_record_i32($i706);
    goto corral_source_split_4366;

  corral_source_split_4366:
    assume {:verifier.code 0} true;
    $i707 := $sub.i32($i703, $i706);
    call {:si_unique_call 7303} {:cexpr "Accumulator"} {:si_old_unique_call 2290} boogie_si_record_i32($i707);
    goto corral_source_split_4367;

  corral_source_split_4367:
    assume {:verifier.code 0} true;
    $i708 := $shl.i32($i696, 1);
    call {:si_unique_call 7304} {:cexpr "reuse_previous"} {:si_old_unique_call 2291} boogie_si_record_i32($i708);
    goto corral_source_split_4368;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    $i693, $i694, $i695, $i696 := $i697, $i702, $i707, $i708;
    goto corral_source_split_4368_dummy;

  corral_source_split_4368_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb229:
    assume $i700 == 1;
    goto corral_source_split_4359;

  corral_source_split_4359:
    assume {:verifier.code 0} true;
    $i701 := $or.i32($i694, $i696);
    call {:si_unique_call 7305} {:cexpr "horz_stretch_ratio"} {:si_old_unique_call 2286} boogie_si_record_i32($i701);
    goto corral_source_split_4360;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    $i702, $i703 := $i701, $i695;
    goto $bb231;

  $bb221:
    assume $i686 == 1;
    assume {:verifier.code 0} true;
    goto $bb233;

  $bb233:
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb209:
    assume $i662 == 1;
    goto corral_source_split_4288;

  corral_source_split_4288:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    havoc $i667;
    call {:si_unique_call 7306} {:cexpr "__cil_tmp436"} {:si_old_unique_call 2257} boogie_si_record_i32($i667);
    goto corral_source_split_4292;

  corral_source_split_4292:
    assume {:verifier.code 0} true;
    $i668 := $sext.i32.i64($i661);
    goto corral_source_split_4293;

  corral_source_split_4293:
    assume {:verifier.code 0} true;
    $i669 := $mul.i64($i668, 1);
    call {:si_unique_call 7307} {:cexpr "__cil_tmp437"} {:si_old_unique_call 2258} boogie_si_record_i64($i669);
    goto corral_source_split_4294;

  corral_source_split_4294:
    assume {:verifier.code 0} true;
    $i670 := $add.i64($p2i.ref.i64(StretchLoops), $i669);
    call {:si_unique_call 7308} {:cexpr "__cil_tmp438"} {:si_old_unique_call 2259} boogie_si_record_i64($i670);
    goto corral_source_split_4295;

  corral_source_split_4295:
    assume {:verifier.code 0} true;
    $p671 := $i2p.i64.ref($i670);
    goto corral_source_split_4296;

  corral_source_split_4296:
    assume {:verifier.code 0} true;
    havoc $i672;
    call {:si_unique_call 7309} {:cexpr "__cil_tmp439"} {:si_old_unique_call 2260} boogie_si_record_i8($i672);
    goto corral_source_split_4297;

  corral_source_split_4297:
    assume {:verifier.code 0} true;
    $i673 := $sext.i8.i32($i672);
    call {:si_unique_call 7310} {:cexpr "__cil_tmp440"} {:si_old_unique_call 2261} boogie_si_record_i32($i673);
    goto corral_source_split_4298;

  corral_source_split_4298:
    assume {:verifier.code 0} true;
    havoc $i674;
    call {:si_unique_call 7311} {:cexpr "__cil_tmp442"} {:si_old_unique_call 2262} boogie_si_record_i32($i674);
    goto corral_source_split_4299;

  corral_source_split_4299:
    assume {:verifier.code 0} true;
    havoc $i675;
    call {:si_unique_call 7312} {:cexpr "__cil_tmp444"} {:si_old_unique_call 2263} boogie_si_record_i32($i675);
    goto corral_source_split_4300;

  corral_source_split_4300:
    assume {:verifier.code 0} true;
    $i676 := $sub.i32($i675, $i674);
    call {:si_unique_call 7313} {:cexpr "__cil_tmp445"} {:si_old_unique_call 2264} boogie_si_record_i32($i676);
    goto corral_source_split_4301;

  corral_source_split_4301:
    assume {:verifier.code 0} true;
    $i677 := $mul.i32($i676, $i673);
    call {:si_unique_call 7314} {:cexpr "__cil_tmp446"} {:si_old_unique_call 2265} boogie_si_record_i32($i677);
    goto corral_source_split_4302;

  corral_source_split_4302:
    assume {:verifier.code 0} true;
    $i678 := $srem.i32($i677, $i667);
    call {:si_unique_call 7315} {:cexpr "Remainder"} {:si_old_unique_call 2266} boogie_si_record_i32($i678);
    goto corral_source_split_4303;

  corral_source_split_4303:
    assume {:verifier.code 0} true;
    $i679 := $slt.i32($i678, $i659);
    goto corral_source_split_4304;

  corral_source_split_4304:
    assume {:verifier.code 0} true;
    assume {:branchcond $i679} true;
    goto $bb213, $bb214;

  $bb214:
    assume !($i679 == 1);
    assume {:verifier.code 0} true;
    $i683, $i684 := $i658, $i659;
    goto $bb218;

  $bb218:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4316;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    $i658, $i659, $i660 := $i683, $i684, $i661;
    goto corral_source_split_4316_dummy;

  corral_source_split_4316_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb213:
    assume $i679 == 1;
    goto corral_source_split_4309;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    $i680 := $ne.i32($i678, 0);
    goto corral_source_split_4310;

  corral_source_split_4310:
    assume {:verifier.code 0} true;
    $i681, $i682 := $i661, $i678;
    assume {:branchcond $i680} true;
    goto $bb215, $bb216;

  $bb216:
    assume !($i680 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4314;

  corral_source_split_4314:
    assume {:verifier.code 0} true;
    $i665, $i666 := $i681, $i682;
    goto $bb212;

  $bb215:
    assume $i680 == 1;
    goto corral_source_split_4312;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    $i683, $i684 := $i661, $i678;
    goto $bb218;

  $bb201:
    assume $i640 == 1;
    goto corral_source_split_4255;

  corral_source_split_4255:
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb199:
    assume $i639 == 1;
    goto corral_source_split_4250;

  corral_source_split_4250:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb190:
    assume $i595 == 1;
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb187:
    assume $i555 == 1;
    goto corral_source_split_4149;

  corral_source_split_4149:
    assume {:verifier.code 0} true;
    $i556 := $shl.i32($i17, 1);
    call {:si_unique_call 7316} {:cexpr "vdisplay"} {:si_old_unique_call 2183} boogie_si_record_i32($i556);
    goto corral_source_split_4150;

  corral_source_split_4150:
    assume {:verifier.code 0} true;
    $i557 := $i556;
    goto $bb189;

  $bb182:
    assume $i540 == 1;
    goto corral_source_split_4128;

  corral_source_split_4128:
    assume {:verifier.code 0} true;
    $i541 := $p2i.ref.i64($p2);
    call {:si_unique_call 7317} {:cexpr "__cil_tmp356"} {:si_old_unique_call 2175} boogie_si_record_i64($i541);
    goto corral_source_split_4129;

  corral_source_split_4129:
    assume {:verifier.code 0} true;
    $i542 := $add.i64($i541, 44);
    call {:si_unique_call 7318} {:cexpr "__cil_tmp357"} {:si_old_unique_call 2176} boogie_si_record_i64($i542);
    goto corral_source_split_4130;

  corral_source_split_4130:
    assume {:verifier.code 0} true;
    $i543 := $p2i.ref.i64($p2);
    call {:si_unique_call 7319} {:cexpr "__cil_tmp358"} {:si_old_unique_call 2177} boogie_si_record_i64($i543);
    goto corral_source_split_4131;

  corral_source_split_4131:
    assume {:verifier.code 0} true;
    $i544 := $add.i64($i543, 44);
    call {:si_unique_call 7320} {:cexpr "__cil_tmp359"} {:si_old_unique_call 2178} boogie_si_record_i64($i544);
    goto corral_source_split_4132;

  corral_source_split_4132:
    assume {:verifier.code 0} true;
    $p545 := $i2p.i64.ref($i544);
    goto corral_source_split_4133;

  corral_source_split_4133:
    assume {:verifier.code 0} true;
    havoc $i546;
    call {:si_unique_call 7321} {:cexpr "__cil_tmp360"} {:si_old_unique_call 2179} boogie_si_record_i32($i546);
    goto corral_source_split_4134;

  corral_source_split_4134:
    assume {:verifier.code 0} true;
    $i547 := $or.i32($i546, 2);
    goto corral_source_split_4135;

  corral_source_split_4135:
    assume {:verifier.code 0} true;
    $p548 := $i2p.i64.ref($i542);
    goto corral_source_split_4136;

  corral_source_split_4136:
    assume {:verifier.code 0} true;
    goto corral_source_split_4137;

  corral_source_split_4137:
    assume {:verifier.code 0} true;
    goto $bb184;

  $bb179:
    assume $i530 == 1;
    goto corral_source_split_4114;

  corral_source_split_4114:
    assume {:verifier.code 0} true;
    $i531 := $p2i.ref.i64($p2);
    call {:si_unique_call 7322} {:cexpr "__cil_tmp351"} {:si_old_unique_call 2170} boogie_si_record_i64($i531);
    goto corral_source_split_4115;

  corral_source_split_4115:
    assume {:verifier.code 0} true;
    $i532 := $add.i64($i531, 44);
    call {:si_unique_call 7323} {:cexpr "__cil_tmp352"} {:si_old_unique_call 2171} boogie_si_record_i64($i532);
    goto corral_source_split_4116;

  corral_source_split_4116:
    assume {:verifier.code 0} true;
    $i533 := $p2i.ref.i64($p2);
    call {:si_unique_call 7324} {:cexpr "__cil_tmp353"} {:si_old_unique_call 2172} boogie_si_record_i64($i533);
    goto corral_source_split_4117;

  corral_source_split_4117:
    assume {:verifier.code 0} true;
    $i534 := $add.i64($i533, 44);
    call {:si_unique_call 7325} {:cexpr "__cil_tmp354"} {:si_old_unique_call 2173} boogie_si_record_i64($i534);
    goto corral_source_split_4118;

  corral_source_split_4118:
    assume {:verifier.code 0} true;
    $p535 := $i2p.i64.ref($i534);
    goto corral_source_split_4119;

  corral_source_split_4119:
    assume {:verifier.code 0} true;
    havoc $i536;
    call {:si_unique_call 7326} {:cexpr "__cil_tmp355"} {:si_old_unique_call 2174} boogie_si_record_i32($i536);
    goto corral_source_split_4120;

  corral_source_split_4120:
    assume {:verifier.code 0} true;
    $i537 := $or.i32($i536, 1);
    goto corral_source_split_4121;

  corral_source_split_4121:
    assume {:verifier.code 0} true;
    $p538 := $i2p.i64.ref($i532);
    goto corral_source_split_4122;

  corral_source_split_4122:
    assume {:verifier.code 0} true;
    goto corral_source_split_4123;

  corral_source_split_4123:
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb176:
    assume $i457 == 1;
    goto corral_source_split_4025;

  corral_source_split_4025:
    assume {:verifier.code 0} true;
    $i458 := 16;
    goto $bb178;

  $bb169:
    assume $i448 == 1;
    goto corral_source_split_4011;

  corral_source_split_4011:
    assume {:verifier.code 0} true;
    $i449 := $p2i.ref.i64($p1);
    call {:si_unique_call 7327} {:cexpr "__cil_tmp298"} {:si_old_unique_call 2116} boogie_si_record_i64($i449);
    goto corral_source_split_4012;

  corral_source_split_4012:
    assume {:verifier.code 0} true;
    $i450 := $add.i64($i449, 84);
    call {:si_unique_call 7328} {:cexpr "__cil_tmp299"} {:si_old_unique_call 2117} boogie_si_record_i64($i450);
    goto corral_source_split_4013;

  corral_source_split_4013:
    assume {:verifier.code 0} true;
    $p451 := $i2p.i64.ref($i450);
    goto corral_source_split_4014;

  corral_source_split_4014:
    assume {:verifier.code 0} true;
    havoc $i452;
    call {:si_unique_call 7329} {:cexpr "__cil_tmp300"} {:si_old_unique_call 2118} boogie_si_record_i32($i452);
    goto corral_source_split_4015;

  corral_source_split_4015:
    assume {:verifier.code 0} true;
    $i453 := $and.i32($i452, 2);
    call {:si_unique_call 7330} {:cexpr "__cil_tmp301"} {:si_old_unique_call 2119} boogie_si_record_i32($i453);
    goto corral_source_split_4016;

  corral_source_split_4016:
    assume {:verifier.code 0} true;
    $i454 := $ne.i32($i453, 0);
    goto corral_source_split_4017;

  corral_source_split_4017:
    assume {:verifier.code 0} true;
    assume {:branchcond $i454} true;
    goto $bb171, $bb172;

  $bb172:
    assume !($i454 == 1);
    goto corral_source_split_4019;

  corral_source_split_4019:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7331} {:si_old_unique_call 2120} $i455 := printk.ref.i32.i32(.str.16, $i428, 2047);
    goto corral_source_split_4020;

  corral_source_split_4020:
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb173:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb171:
    assume $i454 == 1;
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb164:
    assume $i446 == 1;
    goto corral_source_split_4005;

  corral_source_split_4005:
    assume {:verifier.code 0} true;
    $i447 := 31;
    goto $bb166;

  $bb157:
    assume $i438 == 1;
    goto corral_source_split_3992;

  corral_source_split_3992:
    assume {:verifier.code 0} true;
    $i439 := $p2i.ref.i64($p1);
    call {:si_unique_call 7332} {:cexpr "__cil_tmp294"} {:si_old_unique_call 2111} boogie_si_record_i64($i439);
    goto corral_source_split_3993;

  corral_source_split_3993:
    assume {:verifier.code 0} true;
    $i440 := $add.i64($i439, 84);
    call {:si_unique_call 7333} {:cexpr "__cil_tmp295"} {:si_old_unique_call 2112} boogie_si_record_i64($i440);
    goto corral_source_split_3994;

  corral_source_split_3994:
    assume {:verifier.code 0} true;
    $p441 := $i2p.i64.ref($i440);
    goto corral_source_split_3995;

  corral_source_split_3995:
    assume {:verifier.code 0} true;
    havoc $i442;
    call {:si_unique_call 7334} {:cexpr "__cil_tmp296"} {:si_old_unique_call 2113} boogie_si_record_i32($i442);
    goto corral_source_split_3996;

  corral_source_split_3996:
    assume {:verifier.code 0} true;
    $i443 := $and.i32($i442, 2);
    call {:si_unique_call 7335} {:cexpr "__cil_tmp297"} {:si_old_unique_call 2114} boogie_si_record_i32($i443);
    goto corral_source_split_3997;

  corral_source_split_3997:
    assume {:verifier.code 0} true;
    $i444 := $ne.i32($i443, 0);
    goto corral_source_split_3998;

  corral_source_split_3998:
    assume {:verifier.code 0} true;
    assume {:branchcond $i444} true;
    goto $bb159, $bb160;

  $bb160:
    assume !($i444 == 1);
    goto corral_source_split_4000;

  corral_source_split_4000:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7336} {:si_old_unique_call 2115} $i445 := printk.ref.i32.i32(.str.15, $i426, 2047);
    goto corral_source_split_4001;

  corral_source_split_4001:
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb161:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb159:
    assume $i444 == 1;
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb148:
    assume $i430 == 1;
    goto corral_source_split_3979;

  corral_source_split_3979:
    assume {:verifier.code 0} true;
    $i431 := $p2i.ref.i64($p1);
    call {:si_unique_call 7337} {:cexpr "__cil_tmp290"} {:si_old_unique_call 2106} boogie_si_record_i64($i431);
    goto corral_source_split_3980;

  corral_source_split_3980:
    assume {:verifier.code 0} true;
    $i432 := $add.i64($i431, 84);
    call {:si_unique_call 7338} {:cexpr "__cil_tmp291"} {:si_old_unique_call 2107} boogie_si_record_i64($i432);
    goto corral_source_split_3981;

  corral_source_split_3981:
    assume {:verifier.code 0} true;
    $p433 := $i2p.i64.ref($i432);
    goto corral_source_split_3982;

  corral_source_split_3982:
    assume {:verifier.code 0} true;
    havoc $i434;
    call {:si_unique_call 7339} {:cexpr "__cil_tmp292"} {:si_old_unique_call 2108} boogie_si_record_i32($i434);
    goto corral_source_split_3983;

  corral_source_split_3983:
    assume {:verifier.code 0} true;
    $i435 := $and.i32($i434, 2);
    call {:si_unique_call 7340} {:cexpr "__cil_tmp293"} {:si_old_unique_call 2109} boogie_si_record_i32($i435);
    goto corral_source_split_3984;

  corral_source_split_3984:
    assume {:verifier.code 0} true;
    $i436 := $ne.i32($i435, 0);
    goto corral_source_split_3985;

  corral_source_split_3985:
    assume {:verifier.code 0} true;
    assume {:branchcond $i436} true;
    goto $bb150, $bb151;

  $bb151:
    assume !($i436 == 1);
    goto corral_source_split_3987;

  corral_source_split_3987:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7341} {:si_old_unique_call 2110} $i437 := printk.ref.i32.i32(.str.14, $i425, 2047);
    goto corral_source_split_3988;

  corral_source_split_3988:
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb152:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb150:
    assume $i436 == 1;
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb140:
    assume $i417 == 1;
    goto corral_source_split_3960;

  corral_source_split_3960:
    assume {:verifier.code 0} true;
    $i418 := $p2i.ref.i64($p2);
    call {:si_unique_call 7342} {:cexpr "__cil_tmp283"} {:si_old_unique_call 2097} boogie_si_record_i64($i418);
    goto corral_source_split_3961;

  corral_source_split_3961:
    assume {:verifier.code 0} true;
    $i419 := $add.i64($i418, 84);
    call {:si_unique_call 7343} {:cexpr "__cil_tmp284"} {:si_old_unique_call 2098} boogie_si_record_i64($i419);
    goto corral_source_split_3962;

  corral_source_split_3962:
    assume {:verifier.code 0} true;
    $p420 := $i2p.i64.ref($i419);
    goto corral_source_split_3963;

  corral_source_split_3963:
    assume {:verifier.code 0} true;
    havoc $i421;
    call {:si_unique_call 7344} {:cexpr "__cil_tmp285"} {:si_old_unique_call 2099} boogie_si_record_i32($i421);
    goto corral_source_split_3964;

  corral_source_split_3964:
    assume {:verifier.code 0} true;
    $i422 := $zext.i32.i64($i421);
    call {:si_unique_call 7345} {:cexpr "__cil_tmp286"} {:si_old_unique_call 2100} boogie_si_record_i64($i422);
    goto corral_source_split_3965;

  corral_source_split_3965:
    assume {:verifier.code 0} true;
    $i423 := $and.i64($i422, 2);
    goto corral_source_split_3966;

  corral_source_split_3966:
    assume {:verifier.code 0} true;
    $i424 := $ne.i64($i423, 0);
    goto corral_source_split_3967;

  corral_source_split_3967:
    assume {:verifier.code 0} true;
    assume {:branchcond $i424} true;
    goto $bb142, $bb143;

  $bb143:
    assume !($i424 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb142:
    assume $i424 == 1;
    goto corral_source_split_3969;

  corral_source_split_3969:
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb137:
    assume $i404 == 1;
    goto corral_source_split_3947;

  corral_source_split_3947:
    assume {:verifier.code 0} true;
    $i405 := $shl.i32($i17, 1);
    call {:si_unique_call 7346} {:cexpr "v_disp"} {:si_old_unique_call 2090} boogie_si_record_i32($i405);
    goto corral_source_split_3948;

  corral_source_split_3948:
    assume {:verifier.code 0} true;
    $i406 := $shl.i32($i361, 1);
    call {:si_unique_call 7347} {:cexpr "v_sync_strt"} {:si_old_unique_call 2091} boogie_si_record_i32($i406);
    goto corral_source_split_3949;

  corral_source_split_3949:
    assume {:verifier.code 0} true;
    $i407 := $shl.i32($i360, 1);
    call {:si_unique_call 7348} {:cexpr "v_sync_end"} {:si_old_unique_call 2092} boogie_si_record_i32($i407);
    goto corral_source_split_3950;

  corral_source_split_3950:
    assume {:verifier.code 0} true;
    $i408 := $shl.i32($i362, 1);
    call {:si_unique_call 7349} {:cexpr "v_total"} {:si_old_unique_call 2093} boogie_si_record_i32($i408);
    goto corral_source_split_3951;

  corral_source_split_3951:
    assume {:verifier.code 0} true;
    $i409, $i410, $i411, $i412 := $i407, $i406, $i405, $i408;
    goto $bb139;

  $bb130:
    assume $i395 == 1;
    goto corral_source_split_3933;

  corral_source_split_3933:
    assume {:verifier.code 0} true;
    $i396 := $p2i.ref.i64($p1);
    call {:si_unique_call 7350} {:cexpr "__cil_tmp276"} {:si_old_unique_call 2085} boogie_si_record_i64($i396);
    goto corral_source_split_3934;

  corral_source_split_3934:
    assume {:verifier.code 0} true;
    $i397 := $add.i64($i396, 84);
    call {:si_unique_call 7351} {:cexpr "__cil_tmp277"} {:si_old_unique_call 2086} boogie_si_record_i64($i397);
    goto corral_source_split_3935;

  corral_source_split_3935:
    assume {:verifier.code 0} true;
    $p398 := $i2p.i64.ref($i397);
    goto corral_source_split_3936;

  corral_source_split_3936:
    assume {:verifier.code 0} true;
    havoc $i399;
    call {:si_unique_call 7352} {:cexpr "__cil_tmp278"} {:si_old_unique_call 2087} boogie_si_record_i32($i399);
    goto corral_source_split_3937;

  corral_source_split_3937:
    assume {:verifier.code 0} true;
    $i400 := $and.i32($i399, 2);
    call {:si_unique_call 7353} {:cexpr "__cil_tmp279"} {:si_old_unique_call 2088} boogie_si_record_i32($i400);
    goto corral_source_split_3938;

  corral_source_split_3938:
    assume {:verifier.code 0} true;
    $i401 := $ne.i32($i400, 0);
    goto corral_source_split_3939;

  corral_source_split_3939:
    assume {:verifier.code 0} true;
    assume {:branchcond $i401} true;
    goto $bb132, $bb133;

  $bb133:
    assume !($i401 == 1);
    goto corral_source_split_3941;

  corral_source_split_3941:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7354} {:si_old_unique_call 2089} $i402 := printk.ref.i32.i32(.str.13, $i375, 511);
    goto corral_source_split_3942;

  corral_source_split_3942:
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb134:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb132:
    assume $i401 == 1;
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb125:
    assume $i393 == 1;
    goto corral_source_split_3927;

  corral_source_split_3927:
    assume {:verifier.code 0} true;
    $i394 := 31;
    goto $bb127;

  $bb118:
    assume $i385 == 1;
    goto corral_source_split_3914;

  corral_source_split_3914:
    assume {:verifier.code 0} true;
    $i386 := $p2i.ref.i64($p1);
    call {:si_unique_call 7355} {:cexpr "__cil_tmp272"} {:si_old_unique_call 2080} boogie_si_record_i64($i386);
    goto corral_source_split_3915;

  corral_source_split_3915:
    assume {:verifier.code 0} true;
    $i387 := $add.i64($i386, 84);
    call {:si_unique_call 7356} {:cexpr "__cil_tmp273"} {:si_old_unique_call 2081} boogie_si_record_i64($i387);
    goto corral_source_split_3916;

  corral_source_split_3916:
    assume {:verifier.code 0} true;
    $p388 := $i2p.i64.ref($i387);
    goto corral_source_split_3917;

  corral_source_split_3917:
    assume {:verifier.code 0} true;
    havoc $i389;
    call {:si_unique_call 7357} {:cexpr "__cil_tmp274"} {:si_old_unique_call 2082} boogie_si_record_i32($i389);
    goto corral_source_split_3918;

  corral_source_split_3918:
    assume {:verifier.code 0} true;
    $i390 := $and.i32($i389, 2);
    call {:si_unique_call 7358} {:cexpr "__cil_tmp275"} {:si_old_unique_call 2083} boogie_si_record_i32($i390);
    goto corral_source_split_3919;

  corral_source_split_3919:
    assume {:verifier.code 0} true;
    $i391 := $ne.i32($i390, 0);
    goto corral_source_split_3920;

  corral_source_split_3920:
    assume {:verifier.code 0} true;
    assume {:branchcond $i391} true;
    goto $bb120, $bb121;

  $bb121:
    assume !($i391 == 1);
    goto corral_source_split_3922;

  corral_source_split_3922:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7359} {:si_old_unique_call 2084} $i392 := printk.ref.i32.i32(.str.12, $i371, 511);
    goto corral_source_split_3923;

  corral_source_split_3923:
    assume {:verifier.code 0} true;
    goto $bb122;

  $bb122:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb120:
    assume $i391 == 1;
    assume {:verifier.code 0} true;
    goto $bb122;

  $bb109:
    assume $i377 == 1;
    goto corral_source_split_3901;

  corral_source_split_3901:
    assume {:verifier.code 0} true;
    $i378 := $p2i.ref.i64($p1);
    call {:si_unique_call 7360} {:cexpr "__cil_tmp268"} {:si_old_unique_call 2075} boogie_si_record_i64($i378);
    goto corral_source_split_3902;

  corral_source_split_3902:
    assume {:verifier.code 0} true;
    $i379 := $add.i64($i378, 84);
    call {:si_unique_call 7361} {:cexpr "__cil_tmp269"} {:si_old_unique_call 2076} boogie_si_record_i64($i379);
    goto corral_source_split_3903;

  corral_source_split_3903:
    assume {:verifier.code 0} true;
    $p380 := $i2p.i64.ref($i379);
    goto corral_source_split_3904;

  corral_source_split_3904:
    assume {:verifier.code 0} true;
    havoc $i381;
    call {:si_unique_call 7362} {:cexpr "__cil_tmp270"} {:si_old_unique_call 2077} boogie_si_record_i32($i381);
    goto corral_source_split_3905;

  corral_source_split_3905:
    assume {:verifier.code 0} true;
    $i382 := $and.i32($i381, 2);
    call {:si_unique_call 7363} {:cexpr "__cil_tmp271"} {:si_old_unique_call 2078} boogie_si_record_i32($i382);
    goto corral_source_split_3906;

  corral_source_split_3906:
    assume {:verifier.code 0} true;
    $i383 := $ne.i32($i382, 0);
    goto corral_source_split_3907;

  corral_source_split_3907:
    assume {:verifier.code 0} true;
    assume {:branchcond $i383} true;
    goto $bb111, $bb112;

  $bb112:
    assume !($i383 == 1);
    goto corral_source_split_3909;

  corral_source_split_3909:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7364} {:si_old_unique_call 2079} $i384 := printk.ref.i32.i32(.str.11, $i369, 255);
    goto corral_source_split_3910;

  corral_source_split_3910:
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb113:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb111:
    assume $i383 == 1;
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb95:
    assume $i281 == 1;
    goto corral_source_split_3808;

  corral_source_split_3808:
    assume {:verifier.code 0} true;
    $i282 := $p2i.ref.i64($p2);
    call {:si_unique_call 7365} {:cexpr "__cil_tmp218"} {:si_old_unique_call 2014} boogie_si_record_i64($i282);
    goto corral_source_split_3809;

  corral_source_split_3809:
    assume {:verifier.code 0} true;
    $i283 := $add.i64($i282, 84);
    call {:si_unique_call 7366} {:cexpr "__cil_tmp219"} {:si_old_unique_call 2015} boogie_si_record_i64($i283);
    goto corral_source_split_3810;

  corral_source_split_3810:
    assume {:verifier.code 0} true;
    $p284 := $i2p.i64.ref($i283);
    goto corral_source_split_3811;

  corral_source_split_3811:
    assume {:verifier.code 0} true;
    havoc $i285;
    call {:si_unique_call 7367} {:cexpr "__cil_tmp220"} {:si_old_unique_call 2016} boogie_si_record_i32($i285);
    goto corral_source_split_3812;

  corral_source_split_3812:
    assume {:verifier.code 0} true;
    $i286 := $zext.i32.i64($i285);
    call {:si_unique_call 7368} {:cexpr "__cil_tmp221"} {:si_old_unique_call 2017} boogie_si_record_i64($i286);
    goto corral_source_split_3813;

  corral_source_split_3813:
    assume {:verifier.code 0} true;
    $i287 := $and.i64($i286, 2);
    goto corral_source_split_3814;

  corral_source_split_3814:
    assume {:verifier.code 0} true;
    $i288 := $ne.i64($i287, 0);
    goto corral_source_split_3815;

  corral_source_split_3815:
    assume {:verifier.code 0} true;
    assume {:branchcond $i288} true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i288 == 1);
    assume {:verifier.code 0} true;
    $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359 := $i159, $i154, $i164, $i143, $i138, $i133, $i149, $i57;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3886;

  corral_source_split_3886:
    assume {:verifier.code 0} true;
    $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367 := $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359;
    goto $bb106;

  $bb97:
    assume $i288 == 1;
    goto corral_source_split_3817;

  corral_source_split_3817:
    assume {:verifier.code 0} true;
    $i289 := $and.i32($i57, $sub.i32(0, 4));
    call {:si_unique_call 7369} {:cexpr "vmode"} {:si_old_unique_call 2018} boogie_si_record_i32($i289);
    goto corral_source_split_3818;

  corral_source_split_3818:
    assume {:verifier.code 0} true;
    $i290 := $p2i.ref.i64($p9);
    call {:si_unique_call 7370} {:cexpr "__cil_tmp222"} {:si_old_unique_call 2019} boogie_si_record_i64($i290);
    goto corral_source_split_3819;

  corral_source_split_3819:
    assume {:verifier.code 0} true;
    $i291 := $add.i64($i290, 1146);
    call {:si_unique_call 7371} {:cexpr "__cil_tmp223"} {:si_old_unique_call 2020} boogie_si_record_i64($i291);
    goto corral_source_split_3820;

  corral_source_split_3820:
    assume {:verifier.code 0} true;
    $p292 := $i2p.i64.ref($i291);
    goto corral_source_split_3821;

  corral_source_split_3821:
    assume {:verifier.code 0} true;
    havoc $i293;
    call {:si_unique_call 7372} {:cexpr "__cil_tmp224"} {:si_old_unique_call 2021} boogie_si_record_i16($i293);
    goto corral_source_split_3822;

  corral_source_split_3822:
    assume {:verifier.code 0} true;
    $i294 := $zext.i16.i32($i293);
    call {:si_unique_call 7373} {:cexpr "__cil_tmp225"} {:si_old_unique_call 2022} boogie_si_record_i32($i294);
    goto corral_source_split_3823;

  corral_source_split_3823:
    assume {:verifier.code 0} true;
    $i295 := $ult.i32($i17, $i294);
    goto corral_source_split_3824;

  corral_source_split_3824:
    assume {:verifier.code 0} true;
    assume {:branchcond $i295} true;
    goto $bb99, $bb100;

  $bb100:
    assume !($i295 == 1);
    assume {:verifier.code 0} true;
    $i306, $i307 := $i289, 1;
    goto $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3840;

  corral_source_split_3840:
    assume {:verifier.code 0} true;
    $i308 := $p2i.ref.i64($p9);
    call {:si_unique_call 7374} {:cexpr "__cil_tmp231"} {:si_old_unique_call 2029} boogie_si_record_i64($i308);
    goto corral_source_split_3841;

  corral_source_split_3841:
    assume {:verifier.code 0} true;
    $i309 := $add.i64($i308, 1168);
    call {:si_unique_call 7375} {:cexpr "__cil_tmp232"} {:si_old_unique_call 2030} boogie_si_record_i64($i309);
    goto corral_source_split_3842;

  corral_source_split_3842:
    assume {:verifier.code 0} true;
    $p310 := $i2p.i64.ref($i309);
    goto corral_source_split_3843;

  corral_source_split_3843:
    assume {:verifier.code 0} true;
    havoc $i311;
    call {:si_unique_call 7376} {:cexpr "__cil_tmp233"} {:si_old_unique_call 2031} boogie_si_record_i16($i311);
    goto corral_source_split_3844;

  corral_source_split_3844:
    assume {:verifier.code 0} true;
    $i312 := $zext.i16.i32($i311);
    call {:si_unique_call 7377} {:cexpr "__cil_tmp234"} {:si_old_unique_call 2032} boogie_si_record_i32($i312);
    goto corral_source_split_3845;

  corral_source_split_3845:
    assume {:verifier.code 0} true;
    $i313 := $add.i32($i13, $i312);
    call {:si_unique_call 7378} {:cexpr "h_sync_strt"} {:si_old_unique_call 2033} boogie_si_record_i32($i313);
    goto corral_source_split_3846;

  corral_source_split_3846:
    assume {:verifier.code 0} true;
    $i314 := $p2i.ref.i64($p9);
    call {:si_unique_call 7379} {:cexpr "__cil_tmp235"} {:si_old_unique_call 2034} boogie_si_record_i64($i314);
    goto corral_source_split_3847;

  corral_source_split_3847:
    assume {:verifier.code 0} true;
    $i315 := $add.i64($i314, 1160);
    call {:si_unique_call 7380} {:cexpr "__cil_tmp236"} {:si_old_unique_call 2035} boogie_si_record_i64($i315);
    goto corral_source_split_3848;

  corral_source_split_3848:
    assume {:verifier.code 0} true;
    $p316 := $i2p.i64.ref($i315);
    goto corral_source_split_3849;

  corral_source_split_3849:
    assume {:verifier.code 0} true;
    havoc $i317;
    call {:si_unique_call 7381} {:cexpr "__cil_tmp237"} {:si_old_unique_call 2036} boogie_si_record_i16($i317);
    goto corral_source_split_3850;

  corral_source_split_3850:
    assume {:verifier.code 0} true;
    $i318 := $zext.i16.i32($i317);
    call {:si_unique_call 7382} {:cexpr "__cil_tmp238"} {:si_old_unique_call 2037} boogie_si_record_i32($i318);
    goto corral_source_split_3851;

  corral_source_split_3851:
    assume {:verifier.code 0} true;
    $i319 := $add.i32($i313, $i318);
    call {:si_unique_call 7383} {:cexpr "h_sync_end"} {:si_old_unique_call 2038} boogie_si_record_i32($i319);
    goto corral_source_split_3852;

  corral_source_split_3852:
    assume {:verifier.code 0} true;
    $i320 := $p2i.ref.i64($p9);
    call {:si_unique_call 7384} {:cexpr "__cil_tmp239"} {:si_old_unique_call 2039} boogie_si_record_i64($i320);
    goto corral_source_split_3853;

  corral_source_split_3853:
    assume {:verifier.code 0} true;
    $i321 := $add.i64($i320, 1158);
    call {:si_unique_call 7385} {:cexpr "__cil_tmp240"} {:si_old_unique_call 2040} boogie_si_record_i64($i321);
    goto corral_source_split_3854;

  corral_source_split_3854:
    assume {:verifier.code 0} true;
    $p322 := $i2p.i64.ref($i321);
    goto corral_source_split_3855;

  corral_source_split_3855:
    assume {:verifier.code 0} true;
    havoc $i323;
    call {:si_unique_call 7386} {:cexpr "__cil_tmp241"} {:si_old_unique_call 2041} boogie_si_record_i16($i323);
    goto corral_source_split_3856;

  corral_source_split_3856:
    assume {:verifier.code 0} true;
    $i324 := $zext.i16.i32($i323);
    call {:si_unique_call 7387} {:cexpr "h_sync_dly"} {:si_old_unique_call 2042} boogie_si_record_i32($i324);
    goto corral_source_split_3857;

  corral_source_split_3857:
    assume {:verifier.code 0} true;
    $i325 := $p2i.ref.i64($p9);
    call {:si_unique_call 7388} {:cexpr "__cil_tmp242"} {:si_old_unique_call 2043} boogie_si_record_i64($i325);
    goto corral_source_split_3858;

  corral_source_split_3858:
    assume {:verifier.code 0} true;
    $i326 := $add.i64($i325, 1172);
    call {:si_unique_call 7389} {:cexpr "__cil_tmp243"} {:si_old_unique_call 2044} boogie_si_record_i64($i326);
    goto corral_source_split_3859;

  corral_source_split_3859:
    assume {:verifier.code 0} true;
    $p327 := $i2p.i64.ref($i326);
    goto corral_source_split_3860;

  corral_source_split_3860:
    assume {:verifier.code 0} true;
    havoc $i328;
    call {:si_unique_call 7390} {:cexpr "__cil_tmp244"} {:si_old_unique_call 2045} boogie_si_record_i16($i328);
    goto corral_source_split_3861;

  corral_source_split_3861:
    assume {:verifier.code 0} true;
    $i329 := $zext.i16.i32($i328);
    call {:si_unique_call 7391} {:cexpr "__cil_tmp245"} {:si_old_unique_call 2046} boogie_si_record_i32($i329);
    goto corral_source_split_3862;

  corral_source_split_3862:
    assume {:verifier.code 0} true;
    $i330 := $add.i32($i13, $i329);
    call {:si_unique_call 7392} {:cexpr "h_total"} {:si_old_unique_call 2047} boogie_si_record_i32($i330);
    goto corral_source_split_3863;

  corral_source_split_3863:
    assume {:verifier.code 0} true;
    $i331 := $p2i.ref.i64($p9);
    call {:si_unique_call 7393} {:cexpr "__cil_tmp246"} {:si_old_unique_call 2048} boogie_si_record_i64($i331);
    goto corral_source_split_3864;

  corral_source_split_3864:
    assume {:verifier.code 0} true;
    $i332 := $add.i64($i331, 1170);
    call {:si_unique_call 7394} {:cexpr "__cil_tmp247"} {:si_old_unique_call 2049} boogie_si_record_i64($i332);
    goto corral_source_split_3865;

  corral_source_split_3865:
    assume {:verifier.code 0} true;
    $p333 := $i2p.i64.ref($i332);
    goto corral_source_split_3866;

  corral_source_split_3866:
    assume {:verifier.code 0} true;
    havoc $i334;
    call {:si_unique_call 7395} {:cexpr "__cil_tmp248"} {:si_old_unique_call 2050} boogie_si_record_i16($i334);
    goto corral_source_split_3867;

  corral_source_split_3867:
    assume {:verifier.code 0} true;
    $i335 := $zext.i16.i32($i334);
    call {:si_unique_call 7396} {:cexpr "__cil_tmp249"} {:si_old_unique_call 2051} boogie_si_record_i32($i335);
    goto corral_source_split_3868;

  corral_source_split_3868:
    assume {:verifier.code 0} true;
    $i336 := $sdiv.i32($i335, $i307);
    call {:si_unique_call 7397} {:cexpr "__cil_tmp250"} {:si_old_unique_call 2052} boogie_si_record_i32($i336);
    goto corral_source_split_3869;

  corral_source_split_3869:
    assume {:verifier.code 0} true;
    $i337 := $add.i32($i17, $i336);
    call {:si_unique_call 7398} {:cexpr "v_sync_strt"} {:si_old_unique_call 2053} boogie_si_record_i32($i337);
    goto corral_source_split_3870;

  corral_source_split_3870:
    assume {:verifier.code 0} true;
    $i338 := $p2i.ref.i64($p9);
    call {:si_unique_call 7399} {:cexpr "__cil_tmp252"} {:si_old_unique_call 2054} boogie_si_record_i64($i338);
    goto corral_source_split_3871;

  corral_source_split_3871:
    assume {:verifier.code 0} true;
    $i339 := $add.i64($i338, 1166);
    call {:si_unique_call 7400} {:cexpr "__cil_tmp253"} {:si_old_unique_call 2055} boogie_si_record_i64($i339);
    goto corral_source_split_3872;

  corral_source_split_3872:
    assume {:verifier.code 0} true;
    $p340 := $i2p.i64.ref($i339);
    goto corral_source_split_3873;

  corral_source_split_3873:
    assume {:verifier.code 0} true;
    havoc $i341;
    call {:si_unique_call 7401} {:cexpr "__cil_tmp254"} {:si_old_unique_call 2056} boogie_si_record_i16($i341);
    goto corral_source_split_3874;

  corral_source_split_3874:
    assume {:verifier.code 0} true;
    $i342 := $zext.i16.i32($i341);
    call {:si_unique_call 7402} {:cexpr "__cil_tmp255"} {:si_old_unique_call 2057} boogie_si_record_i32($i342);
    goto corral_source_split_3875;

  corral_source_split_3875:
    assume {:verifier.code 0} true;
    $i343 := $sdiv.i32($i342, $i307);
    call {:si_unique_call 7403} {:cexpr "__cil_tmp256"} {:si_old_unique_call 2058} boogie_si_record_i32($i343);
    goto corral_source_split_3876;

  corral_source_split_3876:
    assume {:verifier.code 0} true;
    $i344 := $add.i32($i337, $i343);
    call {:si_unique_call 7404} {:cexpr "v_sync_end"} {:si_old_unique_call 2059} boogie_si_record_i32($i344);
    goto corral_source_split_3877;

  corral_source_split_3877:
    assume {:verifier.code 0} true;
    $i345 := $p2i.ref.i64($p9);
    call {:si_unique_call 7405} {:cexpr "__cil_tmp258"} {:si_old_unique_call 2060} boogie_si_record_i64($i345);
    goto corral_source_split_3878;

  corral_source_split_3878:
    assume {:verifier.code 0} true;
    $i346 := $add.i64($i345, 1174);
    call {:si_unique_call 7406} {:cexpr "__cil_tmp259"} {:si_old_unique_call 2061} boogie_si_record_i64($i346);
    goto corral_source_split_3879;

  corral_source_split_3879:
    assume {:verifier.code 0} true;
    $p347 := $i2p.i64.ref($i346);
    goto corral_source_split_3880;

  corral_source_split_3880:
    assume {:verifier.code 0} true;
    havoc $i348;
    call {:si_unique_call 7407} {:cexpr "__cil_tmp260"} {:si_old_unique_call 2062} boogie_si_record_i16($i348);
    goto corral_source_split_3881;

  corral_source_split_3881:
    assume {:verifier.code 0} true;
    $i349 := $zext.i16.i32($i348);
    call {:si_unique_call 7408} {:cexpr "__cil_tmp261"} {:si_old_unique_call 2063} boogie_si_record_i32($i349);
    goto corral_source_split_3882;

  corral_source_split_3882:
    assume {:verifier.code 0} true;
    $i350 := $sdiv.i32($i349, $i307);
    call {:si_unique_call 7409} {:cexpr "__cil_tmp262"} {:si_old_unique_call 2064} boogie_si_record_i32($i350);
    goto corral_source_split_3883;

  corral_source_split_3883:
    assume {:verifier.code 0} true;
    $i351 := $add.i32($i17, $i350);
    call {:si_unique_call 7410} {:cexpr "v_total"} {:si_old_unique_call 2065} boogie_si_record_i32($i351);
    goto corral_source_split_3884;

  corral_source_split_3884:
    assume {:verifier.code 0} true;
    $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359 := $i344, $i337, $i351, $i324, $i319, $i313, $i330, $i306;
    goto $bb105;

  $bb99:
    assume $i295 == 1;
    goto corral_source_split_3826;

  corral_source_split_3826:
    assume {:verifier.code 0} true;
    $i296 := $p2i.ref.i64($p9);
    call {:si_unique_call 7411} {:cexpr "__cil_tmp226"} {:si_old_unique_call 2023} boogie_si_record_i64($i296);
    goto corral_source_split_3827;

  corral_source_split_3827:
    assume {:verifier.code 0} true;
    $i297 := $add.i64($i296, 1146);
    call {:si_unique_call 7412} {:cexpr "__cil_tmp227"} {:si_old_unique_call 2024} boogie_si_record_i64($i297);
    goto corral_source_split_3828;

  corral_source_split_3828:
    assume {:verifier.code 0} true;
    $p298 := $i2p.i64.ref($i297);
    goto corral_source_split_3829;

  corral_source_split_3829:
    assume {:verifier.code 0} true;
    havoc $i299;
    call {:si_unique_call 7413} {:cexpr "__cil_tmp228"} {:si_old_unique_call 2025} boogie_si_record_i16($i299);
    goto corral_source_split_3830;

  corral_source_split_3830:
    assume {:verifier.code 0} true;
    $i300 := $zext.i16.i32($i299);
    call {:si_unique_call 7414} {:cexpr "__cil_tmp229"} {:si_old_unique_call 2026} boogie_si_record_i32($i300);
    goto corral_source_split_3831;

  corral_source_split_3831:
    assume {:verifier.code 0} true;
    $i301 := $udiv.i32($i300, $i17);
    call {:si_unique_call 7415} {:cexpr "__cil_tmp230"} {:si_old_unique_call 2027} boogie_si_record_i32($i301);
    goto corral_source_split_3832;

  corral_source_split_3832:
    assume {:verifier.code 0} true;
    $i302 := $sgt.i32($i301, 1);
    goto corral_source_split_3833;

  corral_source_split_3833:
    assume {:verifier.code 0} true;
    assume {:branchcond $i302} true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i302 == 1);
    assume {:verifier.code 0} true;
    $i304, $i305 := $i289, $i301;
    goto $bb103;

  $bb103:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3838;

  corral_source_split_3838:
    assume {:verifier.code 0} true;
    $i306, $i307 := $i304, $i305;
    goto $bb104;

  $bb101:
    assume $i302 == 1;
    goto corral_source_split_3835;

  corral_source_split_3835:
    assume {:verifier.code 0} true;
    $i303 := $or.i32($i289, 2);
    call {:si_unique_call 7416} {:cexpr "vmode"} {:si_old_unique_call 2028} boogie_si_record_i32($i303);
    goto corral_source_split_3836;

  corral_source_split_3836:
    assume {:verifier.code 0} true;
    $i304, $i305 := $i303, 2;
    goto $bb103;

  $bb67:
    assume $i169 == 1;
    goto corral_source_split_3661;

  corral_source_split_3661:
    assume {:verifier.code 0} true;
    $i170 := $p2i.ref.i64($p9);
    call {:si_unique_call 7417} {:cexpr "__cil_tmp145"} {:si_old_unique_call 1936} boogie_si_record_i64($i170);
    goto corral_source_split_3662;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    $i171 := $add.i64($i170, 1044);
    call {:si_unique_call 7418} {:cexpr "__cil_tmp146"} {:si_old_unique_call 1937} boogie_si_record_i64($i171);
    goto corral_source_split_3663;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    $p172 := $i2p.i64.ref($i171);
    goto corral_source_split_3664;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    havoc $i173;
    call {:si_unique_call 7419} {:cexpr "__cil_tmp147"} {:si_old_unique_call 1938} boogie_si_record_i32($i173);
    goto corral_source_split_3665;

  corral_source_split_3665:
    assume {:verifier.code 0} true;
    $i174 := $and.i32($i173, 262144);
    call {:si_unique_call 7420} {:cexpr "__cil_tmp148"} {:si_old_unique_call 1939} boogie_si_record_i32($i174);
    goto corral_source_split_3666;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    $i175 := $ne.i32($i174, 0);
    goto corral_source_split_3667;

  corral_source_split_3667:
    assume {:verifier.code 0} true;
    assume {:branchcond $i175} true;
    goto $bb69, $bb70;

  $bb70:
    assume !($i175 == 1);
    goto corral_source_split_3669;

  corral_source_split_3669:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7421} {:si_old_unique_call 1940} $i176 := aty_ld_le32(164, $p9);
    call {:si_unique_call 7422} {:cexpr "tmp___7"} {:si_old_unique_call 1941} boogie_si_record_i32($i176);
    goto corral_source_split_3670;

  corral_source_split_3670:
    assume {:verifier.code 0} true;
    $i177 := $p2i.ref.i64($p2);
    call {:si_unique_call 7423} {:cexpr "__cil_tmp150"} {:si_old_unique_call 1942} boogie_si_record_i64($i177);
    goto corral_source_split_3671;

  corral_source_split_3671:
    assume {:verifier.code 0} true;
    $i178 := $add.i64($i177, 92);
    call {:si_unique_call 7424} {:cexpr "__cil_tmp151"} {:si_old_unique_call 1943} boogie_si_record_i64($i178);
    goto corral_source_split_3672;

  corral_source_split_3672:
    assume {:verifier.code 0} true;
    $i179 := $and.i32($i176, $sub.i32(0, 1856));
    goto corral_source_split_3673;

  corral_source_split_3673:
    assume {:verifier.code 0} true;
    $p180 := $i2p.i64.ref($i178);
    goto corral_source_split_3674;

  corral_source_split_3674:
    assume {:verifier.code 0} true;
    goto corral_source_split_3675;

  corral_source_split_3675:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7425} {:si_old_unique_call 1944} aty_st_le32(164, $i176, $p9);
    goto corral_source_split_3676;

  corral_source_split_3676:
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    $i181 := $p2i.ref.i64($p9);
    call {:si_unique_call 7426} {:cexpr "__cil_tmp153"} {:si_old_unique_call 1945} boogie_si_record_i64($i181);
    goto corral_source_split_3678;

  corral_source_split_3678:
    assume {:verifier.code 0} true;
    $i182 := $add.i64($i181, 1044);
    call {:si_unique_call 7427} {:cexpr "__cil_tmp154"} {:si_old_unique_call 1946} boogie_si_record_i64($i182);
    goto corral_source_split_3679;

  corral_source_split_3679:
    assume {:verifier.code 0} true;
    $p183 := $i2p.i64.ref($i182);
    goto corral_source_split_3680;

  corral_source_split_3680:
    assume {:verifier.code 0} true;
    havoc $i184;
    call {:si_unique_call 7428} {:cexpr "__cil_tmp155"} {:si_old_unique_call 1947} boogie_si_record_i32($i184);
    goto corral_source_split_3681;

  corral_source_split_3681:
    assume {:verifier.code 0} true;
    $i185 := $and.i32($i184, 512);
    call {:si_unique_call 7429} {:cexpr "__cil_tmp156"} {:si_old_unique_call 1948} boogie_si_record_i32($i185);
    goto corral_source_split_3682;

  corral_source_split_3682:
    assume {:verifier.code 0} true;
    $i186 := $ne.i32($i185, 0);
    goto corral_source_split_3683;

  corral_source_split_3683:
    assume {:verifier.code 0} true;
    assume {:branchcond $i186} true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i186 == 1);
    goto corral_source_split_3685;

  corral_source_split_3685:
    assume {:verifier.code 0} true;
    $i187 := $p2i.ref.i64($p2);
    call {:si_unique_call 7430} {:cexpr "__cil_tmp157"} {:si_old_unique_call 1949} boogie_si_record_i64($i187);
    goto corral_source_split_3686;

  corral_source_split_3686:
    assume {:verifier.code 0} true;
    $i188 := $add.i64($i187, 92);
    call {:si_unique_call 7431} {:cexpr "__cil_tmp158"} {:si_old_unique_call 1950} boogie_si_record_i64($i188);
    goto corral_source_split_3687;

  corral_source_split_3687:
    assume {:verifier.code 0} true;
    $i189 := $p2i.ref.i64($p2);
    call {:si_unique_call 7432} {:cexpr "__cil_tmp159"} {:si_old_unique_call 1951} boogie_si_record_i64($i189);
    goto corral_source_split_3688;

  corral_source_split_3688:
    assume {:verifier.code 0} true;
    $i190 := $add.i64($i189, 92);
    call {:si_unique_call 7433} {:cexpr "__cil_tmp160"} {:si_old_unique_call 1952} boogie_si_record_i64($i190);
    goto corral_source_split_3689;

  corral_source_split_3689:
    assume {:verifier.code 0} true;
    $p191 := $i2p.i64.ref($i190);
    goto corral_source_split_3690;

  corral_source_split_3690:
    assume {:verifier.code 0} true;
    havoc $i192;
    call {:si_unique_call 7434} {:cexpr "__cil_tmp161"} {:si_old_unique_call 1953} boogie_si_record_i32($i192);
    goto corral_source_split_3691;

  corral_source_split_3691:
    assume {:verifier.code 0} true;
    $i193 := $or.i32($i192, 1024);
    goto corral_source_split_3692;

  corral_source_split_3692:
    assume {:verifier.code 0} true;
    $p194 := $i2p.i64.ref($i188);
    goto corral_source_split_3693;

  corral_source_split_3693:
    assume {:verifier.code 0} true;
    goto corral_source_split_3694;

  corral_source_split_3694:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7435} {:si_old_unique_call 1954} $i195 := aty_ld_lcd(0, $p9);
    call {:si_unique_call 7436} {:cexpr "tmp___8"} {:si_old_unique_call 1955} boogie_si_record_i32($i195);
    goto corral_source_split_3696;

  corral_source_split_3696:
    assume {:verifier.code 0} true;
    $i196 := $p2i.ref.i64($p2);
    call {:si_unique_call 7437} {:cexpr "__cil_tmp163"} {:si_old_unique_call 1956} boogie_si_record_i64($i196);
    goto corral_source_split_3697;

  corral_source_split_3697:
    assume {:verifier.code 0} true;
    $i197 := $add.i64($i196, 88);
    call {:si_unique_call 7438} {:cexpr "__cil_tmp164"} {:si_old_unique_call 1957} boogie_si_record_i64($i197);
    goto corral_source_split_3698;

  corral_source_split_3698:
    assume {:verifier.code 0} true;
    $i198 := $or.i32($i195, 16384);
    goto corral_source_split_3699;

  corral_source_split_3699:
    assume {:verifier.code 0} true;
    $p199 := $i2p.i64.ref($i197);
    goto corral_source_split_3700;

  corral_source_split_3700:
    assume {:verifier.code 0} true;
    goto corral_source_split_3701;

  corral_source_split_3701:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7439} {:si_old_unique_call 1958} $i200 := aty_ld_lcd(1, $p9);
    call {:si_unique_call 7440} {:cexpr "tmp___9"} {:si_old_unique_call 1959} boogie_si_record_i32($i200);
    goto corral_source_split_3702;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    $i201 := $p2i.ref.i64($p2);
    call {:si_unique_call 7441} {:cexpr "__cil_tmp166"} {:si_old_unique_call 1960} boogie_si_record_i64($i201);
    goto corral_source_split_3703;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    $i202 := $add.i64($i201, 84);
    call {:si_unique_call 7442} {:cexpr "__cil_tmp167"} {:si_old_unique_call 1961} boogie_si_record_i64($i202);
    goto corral_source_split_3704;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    $i203 := $zext.i32.i64($i200);
    call {:si_unique_call 7443} {:cexpr "__cil_tmp168"} {:si_old_unique_call 1962} boogie_si_record_i64($i203);
    goto corral_source_split_3705;

  corral_source_split_3705:
    assume {:verifier.code 0} true;
    $i204 := $and.i64($i203, $sub.i64(0, 134217729));
    call {:si_unique_call 7444} {:cexpr "__cil_tmp169"} {:si_old_unique_call 1963} boogie_si_record_i64($i204);
    goto corral_source_split_3706;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    $i205 := $trunc.i64.i32($i204);
    goto corral_source_split_3707;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    $p206 := $i2p.i64.ref($i202);
    goto corral_source_split_3708;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    goto corral_source_split_3709;

  corral_source_split_3709:
    assume {:verifier.code 0} true;
    $i207 := $p2i.ref.i64($p2);
    call {:si_unique_call 7445} {:cexpr "__cil_tmp170"} {:si_old_unique_call 1964} boogie_si_record_i64($i207);
    goto corral_source_split_3710;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $i208 := $add.i64($i207, 84);
    call {:si_unique_call 7446} {:cexpr "__cil_tmp171"} {:si_old_unique_call 1965} boogie_si_record_i64($i208);
    goto corral_source_split_3711;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    $i209 := $p2i.ref.i64($p2);
    call {:si_unique_call 7447} {:cexpr "__cil_tmp172"} {:si_old_unique_call 1966} boogie_si_record_i64($i209);
    goto corral_source_split_3712;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    $i210 := $add.i64($i209, 84);
    call {:si_unique_call 7448} {:cexpr "__cil_tmp173"} {:si_old_unique_call 1967} boogie_si_record_i64($i210);
    goto corral_source_split_3713;

  corral_source_split_3713:
    assume {:verifier.code 0} true;
    $p211 := $i2p.i64.ref($i210);
    goto corral_source_split_3714;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    havoc $i212;
    call {:si_unique_call 7449} {:cexpr "__cil_tmp174"} {:si_old_unique_call 1968} boogie_si_record_i32($i212);
    goto corral_source_split_3715;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    $i213 := $zext.i32.i64($i212);
    call {:si_unique_call 7450} {:cexpr "__cil_tmp175"} {:si_old_unique_call 1969} boogie_si_record_i64($i213);
    goto corral_source_split_3716;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    $i214 := $and.i64($i213, $sub.i64(0, 3758162949));
    call {:si_unique_call 7451} {:cexpr "__cil_tmp176"} {:si_old_unique_call 1970} boogie_si_record_i64($i214);
    goto corral_source_split_3717;

  corral_source_split_3717:
    assume {:verifier.code 0} true;
    $i215 := $trunc.i64.i32($i214);
    goto corral_source_split_3718;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $p216 := $i2p.i64.ref($i208);
    goto corral_source_split_3719;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    goto corral_source_split_3720;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    $i217 := $p2i.ref.i64($p2);
    call {:si_unique_call 7452} {:cexpr "__cil_tmp177"} {:si_old_unique_call 1971} boogie_si_record_i64($i217);
    goto corral_source_split_3721;

  corral_source_split_3721:
    assume {:verifier.code 0} true;
    $i218 := $add.i64($i217, 84);
    call {:si_unique_call 7453} {:cexpr "__cil_tmp178"} {:si_old_unique_call 1972} boogie_si_record_i64($i218);
    goto corral_source_split_3722;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $i219 := $p2i.ref.i64($p2);
    call {:si_unique_call 7454} {:cexpr "__cil_tmp179"} {:si_old_unique_call 1973} boogie_si_record_i64($i219);
    goto corral_source_split_3723;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    $i220 := $add.i64($i219, 84);
    call {:si_unique_call 7455} {:cexpr "__cil_tmp180"} {:si_old_unique_call 1974} boogie_si_record_i64($i220);
    goto corral_source_split_3724;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    $p221 := $i2p.i64.ref($i220);
    goto corral_source_split_3725;

  corral_source_split_3725:
    assume {:verifier.code 0} true;
    havoc $i222;
    call {:si_unique_call 7456} {:cexpr "__cil_tmp181"} {:si_old_unique_call 1975} boogie_si_record_i32($i222);
    goto corral_source_split_3726;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $i223 := $zext.i32.i64($i222);
    call {:si_unique_call 7457} {:cexpr "__cil_tmp182"} {:si_old_unique_call 1976} boogie_si_record_i64($i223);
    goto corral_source_split_3727;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    $i224 := $or.i64($i223, 80);
    call {:si_unique_call 7458} {:cexpr "__cil_tmp183"} {:si_old_unique_call 1977} boogie_si_record_i64($i224);
    goto corral_source_split_3728;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    $i225 := $trunc.i64.i32($i224);
    goto corral_source_split_3729;

  corral_source_split_3729:
    assume {:verifier.code 0} true;
    $p226 := $i2p.i64.ref($i218);
    goto corral_source_split_3730;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    goto corral_source_split_3731;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    $i227 := $p2i.ref.i64($p2);
    call {:si_unique_call 7459} {:cexpr "__cil_tmp184"} {:si_old_unique_call 1978} boogie_si_record_i64($i227);
    goto corral_source_split_3732;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    $i228 := $add.i64($i227, 84);
    call {:si_unique_call 7460} {:cexpr "__cil_tmp185"} {:si_old_unique_call 1979} boogie_si_record_i64($i228);
    goto corral_source_split_3733;

  corral_source_split_3733:
    assume {:verifier.code 0} true;
    $p229 := $i2p.i64.ref($i228);
    goto corral_source_split_3734;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    havoc $i230;
    call {:si_unique_call 7461} {:cexpr "__cil_tmp186"} {:si_old_unique_call 1980} boogie_si_record_i32($i230);
    goto corral_source_split_3735;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    $i231 := $zext.i32.i64($i230);
    call {:si_unique_call 7462} {:cexpr "__cil_tmp187"} {:si_old_unique_call 1981} boogie_si_record_i64($i231);
    goto corral_source_split_3736;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    $i232 := $and.i64($i231, 2);
    goto corral_source_split_3737;

  corral_source_split_3737:
    assume {:verifier.code 0} true;
    $i233 := $ne.i64($i232, 0);
    goto corral_source_split_3738;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    assume {:branchcond $i233} true;
    goto $bb75, $bb76;

  $bb76:
    assume !($i233 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb75:
    assume $i233 == 1;
    goto corral_source_split_3740;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    $i234 := $p2i.ref.i64($p9);
    call {:si_unique_call 7463} {:cexpr "__cil_tmp188"} {:si_old_unique_call 1982} boogie_si_record_i64($i234);
    goto corral_source_split_3741;

  corral_source_split_3741:
    assume {:verifier.code 0} true;
    $i235 := $add.i64($i234, 1144);
    call {:si_unique_call 7464} {:cexpr "__cil_tmp189"} {:si_old_unique_call 1983} boogie_si_record_i64($i235);
    goto corral_source_split_3742;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    $p236 := $i2p.i64.ref($i235);
    goto corral_source_split_3743;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    havoc $i237;
    call {:si_unique_call 7465} {:cexpr "__cil_tmp190"} {:si_old_unique_call 1984} boogie_si_record_i16($i237);
    goto corral_source_split_3744;

  corral_source_split_3744:
    assume {:verifier.code 0} true;
    $i238 := $zext.i16.i32($i237);
    call {:si_unique_call 7466} {:cexpr "__cil_tmp191"} {:si_old_unique_call 1985} boogie_si_record_i32($i238);
    goto corral_source_split_3745;

  corral_source_split_3745:
    assume {:verifier.code 0} true;
    $i239 := $ugt.i32($i13, $i238);
    goto corral_source_split_3746;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    assume {:branchcond $i239} true;
    goto $bb77, $bb78;

  $bb78:
    assume !($i239 == 1);
    goto corral_source_split_3750;

  corral_source_split_3750:
    assume {:verifier.code 0} true;
    $i240 := $p2i.ref.i64($p9);
    call {:si_unique_call 7467} {:cexpr "__cil_tmp192"} {:si_old_unique_call 1986} boogie_si_record_i64($i240);
    goto corral_source_split_3751;

  corral_source_split_3751:
    assume {:verifier.code 0} true;
    $i241 := $add.i64($i240, 1146);
    call {:si_unique_call 7468} {:cexpr "__cil_tmp193"} {:si_old_unique_call 1987} boogie_si_record_i64($i241);
    goto corral_source_split_3752;

  corral_source_split_3752:
    assume {:verifier.code 0} true;
    $p242 := $i2p.i64.ref($i241);
    goto corral_source_split_3753;

  corral_source_split_3753:
    assume {:verifier.code 0} true;
    havoc $i243;
    call {:si_unique_call 7469} {:cexpr "__cil_tmp194"} {:si_old_unique_call 1988} boogie_si_record_i16($i243);
    goto corral_source_split_3754;

  corral_source_split_3754:
    assume {:verifier.code 0} true;
    $i244 := $zext.i16.i32($i243);
    call {:si_unique_call 7470} {:cexpr "__cil_tmp195"} {:si_old_unique_call 1989} boogie_si_record_i32($i244);
    goto corral_source_split_3755;

  corral_source_split_3755:
    assume {:verifier.code 0} true;
    $i245 := $ugt.i32($i17, $i244);
    goto corral_source_split_3756;

  corral_source_split_3756:
    assume {:verifier.code 0} true;
    assume {:branchcond $i245} true;
    goto $bb80, $bb81;

  $bb81:
    assume !($i245 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb80:
    assume $i245 == 1;
    goto corral_source_split_3766;

  corral_source_split_3766:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    $i246 := $p2i.ref.i64($p2);
    call {:si_unique_call 7471} {:cexpr "__cil_tmp196"} {:si_old_unique_call 1990} boogie_si_record_i64($i246);
    goto corral_source_split_3758;

  corral_source_split_3758:
    assume {:verifier.code 0} true;
    $i247 := $add.i64($i246, 84);
    call {:si_unique_call 7472} {:cexpr "__cil_tmp197"} {:si_old_unique_call 1991} boogie_si_record_i64($i247);
    goto corral_source_split_3759;

  corral_source_split_3759:
    assume {:verifier.code 0} true;
    $p248 := $i2p.i64.ref($i247);
    goto corral_source_split_3760;

  corral_source_split_3760:
    assume {:verifier.code 0} true;
    havoc $i249;
    call {:si_unique_call 7473} {:cexpr "__cil_tmp198"} {:si_old_unique_call 1992} boogie_si_record_i32($i249);
    goto corral_source_split_3761;

  corral_source_split_3761:
    assume {:verifier.code 0} true;
    $i250 := $zext.i32.i64($i249);
    call {:si_unique_call 7474} {:cexpr "__cil_tmp199"} {:si_old_unique_call 1993} boogie_si_record_i64($i250);
    goto corral_source_split_3762;

  corral_source_split_3762:
    assume {:verifier.code 0} true;
    $i251 := $and.i64($i250, 1);
    goto corral_source_split_3763;

  corral_source_split_3763:
    assume {:verifier.code 0} true;
    $i252 := $ne.i64($i251, 0);
    goto corral_source_split_3764;

  corral_source_split_3764:
    assume {:verifier.code 0} true;
    assume {:branchcond $i252} true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i252 == 1);
    goto corral_source_split_3776;

  corral_source_split_3776:
    assume {:verifier.code 0} true;
    $i270 := $p2i.ref.i64($p1);
    call {:si_unique_call 7475} {:cexpr "__cil_tmp211"} {:si_old_unique_call 1998} boogie_si_record_i64($i270);
    goto corral_source_split_3777;

  corral_source_split_3777:
    assume {:verifier.code 0} true;
    $i271 := $add.i64($i270, 84);
    call {:si_unique_call 7476} {:cexpr "__cil_tmp212"} {:si_old_unique_call 1999} boogie_si_record_i64($i271);
    goto corral_source_split_3778;

  corral_source_split_3778:
    assume {:verifier.code 0} true;
    $p272 := $i2p.i64.ref($i271);
    goto corral_source_split_3779;

  corral_source_split_3779:
    assume {:verifier.code 0} true;
    havoc $i273;
    call {:si_unique_call 7477} {:cexpr "__cil_tmp213"} {:si_old_unique_call 2000} boogie_si_record_i32($i273);
    goto corral_source_split_3780;

  corral_source_split_3780:
    assume {:verifier.code 0} true;
    $i274 := $and.i32($i273, 2);
    call {:si_unique_call 7478} {:cexpr "__cil_tmp214"} {:si_old_unique_call 2001} boogie_si_record_i32($i274);
    goto corral_source_split_3781;

  corral_source_split_3781:
    assume {:verifier.code 0} true;
    $i275 := $ne.i32($i274, 0);
    goto corral_source_split_3782;

  corral_source_split_3782:
    assume {:verifier.code 0} true;
    assume {:branchcond $i275} true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i275 == 1);
    goto corral_source_split_3799;

  corral_source_split_3799:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7479} {:si_old_unique_call 2010} $i276 := printk.ref(.str.10);
    goto corral_source_split_3800;

  corral_source_split_3800:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb88:
    assume $i275 == 1;
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb82:
    assume $i252 == 1;
    goto corral_source_split_3768;

  corral_source_split_3768:
    assume {:verifier.code 0} true;
    $i253 := $p2i.ref.i64($p1);
    call {:si_unique_call 7480} {:cexpr "__cil_tmp200"} {:si_old_unique_call 1994} boogie_si_record_i64($i253);
    goto corral_source_split_3769;

  corral_source_split_3769:
    assume {:verifier.code 0} true;
    $i254 := $add.i64($i253, 84);
    call {:si_unique_call 7481} {:cexpr "__cil_tmp201"} {:si_old_unique_call 1995} boogie_si_record_i64($i254);
    goto corral_source_split_3770;

  corral_source_split_3770:
    assume {:verifier.code 0} true;
    $p255 := $i2p.i64.ref($i254);
    goto corral_source_split_3771;

  corral_source_split_3771:
    assume {:verifier.code 0} true;
    havoc $i256;
    call {:si_unique_call 7482} {:cexpr "__cil_tmp202"} {:si_old_unique_call 1996} boogie_si_record_i32($i256);
    goto corral_source_split_3772;

  corral_source_split_3772:
    assume {:verifier.code 0} true;
    $i257 := $and.i32($i256, 2);
    call {:si_unique_call 7483} {:cexpr "__cil_tmp203"} {:si_old_unique_call 1997} boogie_si_record_i32($i257);
    goto corral_source_split_3773;

  corral_source_split_3773:
    assume {:verifier.code 0} true;
    $i258 := $ne.i32($i257, 0);
    goto corral_source_split_3774;

  corral_source_split_3774:
    assume {:verifier.code 0} true;
    assume {:branchcond $i258} true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i258 == 1);
    goto corral_source_split_3784;

  corral_source_split_3784:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7484} {:si_old_unique_call 2002} $i259 := printk.ref(.str.9);
    goto corral_source_split_3785;

  corral_source_split_3785:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    $i260 := $p2i.ref.i64($p2);
    call {:si_unique_call 7485} {:cexpr "__cil_tmp204"} {:si_old_unique_call 2003} boogie_si_record_i64($i260);
    goto corral_source_split_3787;

  corral_source_split_3787:
    assume {:verifier.code 0} true;
    $i261 := $add.i64($i260, 84);
    call {:si_unique_call 7486} {:cexpr "__cil_tmp205"} {:si_old_unique_call 2004} boogie_si_record_i64($i261);
    goto corral_source_split_3788;

  corral_source_split_3788:
    assume {:verifier.code 0} true;
    $i262 := $p2i.ref.i64($p2);
    call {:si_unique_call 7487} {:cexpr "__cil_tmp206"} {:si_old_unique_call 2005} boogie_si_record_i64($i262);
    goto corral_source_split_3789;

  corral_source_split_3789:
    assume {:verifier.code 0} true;
    $i263 := $add.i64($i262, 84);
    call {:si_unique_call 7488} {:cexpr "__cil_tmp207"} {:si_old_unique_call 2006} boogie_si_record_i64($i263);
    goto corral_source_split_3790;

  corral_source_split_3790:
    assume {:verifier.code 0} true;
    $p264 := $i2p.i64.ref($i263);
    goto corral_source_split_3791;

  corral_source_split_3791:
    assume {:verifier.code 0} true;
    havoc $i265;
    call {:si_unique_call 7489} {:cexpr "__cil_tmp208"} {:si_old_unique_call 2007} boogie_si_record_i32($i265);
    goto corral_source_split_3792;

  corral_source_split_3792:
    assume {:verifier.code 0} true;
    $i266 := $zext.i32.i64($i265);
    call {:si_unique_call 7490} {:cexpr "__cil_tmp209"} {:si_old_unique_call 2008} boogie_si_record_i64($i266);
    goto corral_source_split_3793;

  corral_source_split_3793:
    assume {:verifier.code 0} true;
    $i267 := $and.i64($i266, $sub.i64(0, 3));
    call {:si_unique_call 7491} {:cexpr "__cil_tmp210"} {:si_old_unique_call 2009} boogie_si_record_i64($i267);
    goto corral_source_split_3794;

  corral_source_split_3794:
    assume {:verifier.code 0} true;
    $i268 := $trunc.i64.i32($i267);
    goto corral_source_split_3795;

  corral_source_split_3795:
    assume {:verifier.code 0} true;
    $p269 := $i2p.i64.ref($i261);
    goto corral_source_split_3796;

  corral_source_split_3796:
    assume {:verifier.code 0} true;
    goto corral_source_split_3797;

  corral_source_split_3797:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb84:
    assume $i258 == 1;
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb77:
    assume $i239 == 1;
    goto corral_source_split_3748;

  corral_source_split_3748:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb72:
    assume $i186 == 1;
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb69:
    assume $i175 == 1;
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb57:
    assume $i121 == 1;
    goto corral_source_split_3607;

  corral_source_split_3607:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p1);
    call {:si_unique_call 7492} {:cexpr "__cil_tmp109"} {:si_old_unique_call 1899} boogie_si_record_i64($i122);
    goto corral_source_split_3609;

  corral_source_split_3609:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 84);
    call {:si_unique_call 7493} {:cexpr "__cil_tmp110"} {:si_old_unique_call 1900} boogie_si_record_i64($i123);
    goto corral_source_split_3610;

  corral_source_split_3610:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_3611;

  corral_source_split_3611:
    assume {:verifier.code 0} true;
    havoc $i125;
    call {:si_unique_call 7494} {:cexpr "__cil_tmp111"} {:si_old_unique_call 1901} boogie_si_record_i32($i125);
    goto corral_source_split_3612;

  corral_source_split_3612:
    assume {:verifier.code 0} true;
    $i126 := $and.i32($i125, 2);
    call {:si_unique_call 7495} {:cexpr "__cil_tmp112"} {:si_old_unique_call 1902} boogie_si_record_i32($i126);
    goto corral_source_split_3613;

  corral_source_split_3613:
    assume {:verifier.code 0} true;
    $i127 := $ne.i32($i126, 0);
    goto corral_source_split_3614;

  corral_source_split_3614:
    assume {:verifier.code 0} true;
    assume {:branchcond $i127} true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i127 == 1);
    goto corral_source_split_3616;

  corral_source_split_3616:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7496} {:si_old_unique_call 1903} $i128 := printk.ref(.str.8);
    goto corral_source_split_3617;

  corral_source_split_3617:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb61:
    assume $i127 == 1;
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb54:
    assume $i120 == 1;
    goto corral_source_split_3602;

  corral_source_split_3602:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb51:
    assume $i118 == 1;
    goto corral_source_split_3597;

  corral_source_split_3597:
    assume {:verifier.code 0} true;
    $i119 := 0;
    goto $bb53;

  $bb48:
    assume $i115 == 1;
    goto corral_source_split_3591;

  corral_source_split_3591:
    assume {:verifier.code 0} true;
    $i116 := 0;
    goto $bb50;

  $bb39:
    assume $i106 == 1;
    goto corral_source_split_3576;

  corral_source_split_3576:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p1);
    call {:si_unique_call 7497} {:cexpr "__cil_tmp105"} {:si_old_unique_call 1894} boogie_si_record_i64($i107);
    goto corral_source_split_3578;

  corral_source_split_3578:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 84);
    call {:si_unique_call 7498} {:cexpr "__cil_tmp106"} {:si_old_unique_call 1895} boogie_si_record_i64($i108);
    goto corral_source_split_3579;

  corral_source_split_3579:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_3580;

  corral_source_split_3580:
    assume {:verifier.code 0} true;
    havoc $i110;
    call {:si_unique_call 7499} {:cexpr "__cil_tmp107"} {:si_old_unique_call 1896} boogie_si_record_i32($i110);
    goto corral_source_split_3581;

  corral_source_split_3581:
    assume {:verifier.code 0} true;
    $i111 := $and.i32($i110, 2);
    call {:si_unique_call 7500} {:cexpr "__cil_tmp108"} {:si_old_unique_call 1897} boogie_si_record_i32($i111);
    goto corral_source_split_3582;

  corral_source_split_3582:
    assume {:verifier.code 0} true;
    $i112 := $ne.i32($i111, 0);
    goto corral_source_split_3583;

  corral_source_split_3583:
    assume {:verifier.code 0} true;
    assume {:branchcond $i112} true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i112 == 1);
    goto corral_source_split_3585;

  corral_source_split_3585:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7501} {:si_old_unique_call 1898} $i113 := printk.ref(.str.7);
    goto corral_source_split_3586;

  corral_source_split_3586:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb43:
    assume $i112 == 1;
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb22:
    assume $i81 == 1;
    goto corral_source_split_3544;

  corral_source_split_3544:
    assume {:verifier.code 0} true;
    $i82 := $p2i.ref.i64($p9);
    call {:si_unique_call 7502} {:cexpr "__cil_tmp92"} {:si_old_unique_call 1886} boogie_si_record_i64($i82);
    goto corral_source_split_3545;

  corral_source_split_3545:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, 1044);
    call {:si_unique_call 7503} {:cexpr "__cil_tmp93"} {:si_old_unique_call 1887} boogie_si_record_i64($i83);
    goto corral_source_split_3546;

  corral_source_split_3546:
    assume {:verifier.code 0} true;
    $p84 := $i2p.i64.ref($i83);
    goto corral_source_split_3547;

  corral_source_split_3547:
    assume {:verifier.code 0} true;
    havoc $i85;
    call {:si_unique_call 7504} {:cexpr "__cil_tmp94"} {:si_old_unique_call 1888} boogie_si_record_i32($i85);
    goto corral_source_split_3548;

  corral_source_split_3548:
    assume {:verifier.code 0} true;
    $i86 := $and.i32($i85, 64);
    goto corral_source_split_3549;

  corral_source_split_3549:
    assume {:verifier.code 0} true;
    $i87 := $ne.i32($i86, 0);
    goto corral_source_split_3550;

  corral_source_split_3550:
    assume {:verifier.code 0} true;
    assume {:branchcond $i87} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i87 == 1);
    goto corral_source_split_3556;

  corral_source_split_3556:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb24:
    assume $i87 == 1;
    goto corral_source_split_3554;

  corral_source_split_3554:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i88, $i89, $i90 := 16908802, 1280, 24;
    goto $bb28;

  $bb19:
    assume $i76 == 1;
    goto corral_source_split_3539;

  corral_source_split_3539:
    assume {:verifier.code 0} true;
    $i77, $i78, $i79, $i80 := 33808, 17040388, 1024, 16;
    goto $bb21;

  $bb16:
    assume $i71 == 1;
    goto corral_source_split_3534;

  corral_source_split_3534:
    assume {:verifier.code 0} true;
    $i72, $i73, $i74, $i75 := 16912, 16974595, 768, 16;
    goto $bb18;

  $bb13:
    assume $i66 == 1;
    goto corral_source_split_3520;

  corral_source_split_3520:
    assume {:verifier.code 0} true;
    $i67, $i68, $i69, $i70 := 32896, 16908802, 512, 8;
    goto $bb15;

  $bb10:
    assume $i63 == 1;
    goto corral_source_split_3514;

  corral_source_split_3514:
    assume {:verifier.code 0} true;
    $i64 := $add.i32($i17, $i37);
    call {:si_unique_call 7505} {:cexpr "vyres"} {:si_old_unique_call 1879} boogie_si_record_i32($i64);
    goto corral_source_split_3515;

  corral_source_split_3515:
    assume {:verifier.code 0} true;
    $i65 := $i64;
    goto $bb12;

  $bb7:
    assume $i59 == 1;
    goto corral_source_split_3507;

  corral_source_split_3507:
    assume {:verifier.code 0} true;
    $i60 := $add.i32($i13, $i33);
    call {:si_unique_call 7506} {:cexpr "vxres"} {:si_old_unique_call 1877} boogie_si_record_i32($i60);
    goto corral_source_split_3508;

  corral_source_split_3508:
    assume {:verifier.code 0} true;
    $i61 := $i60;
    goto $bb9;

  $bb1:
    assume $i42 == 1;
    goto corral_source_split_3484;

  corral_source_split_3484:
    assume {:verifier.code 0} true;
    $i43 := $p2i.ref.i64($p1);
    call {:si_unique_call 7507} {:cexpr "__cil_tmp81"} {:si_old_unique_call 1867} boogie_si_record_i64($i43);
    goto corral_source_split_3485;

  corral_source_split_3485:
    assume {:verifier.code 0} true;
    $i44 := $add.i64($i43, 48);
    call {:si_unique_call 7508} {:cexpr "__cil_tmp82"} {:si_old_unique_call 1868} boogie_si_record_i64($i44);
    goto corral_source_split_3486;

  corral_source_split_3486:
    assume {:verifier.code 0} true;
    $p45 := $i2p.i64.ref($i44);
    goto corral_source_split_3487;

  corral_source_split_3487:
    assume {:verifier.code 0} true;
    havoc $i46;
    call {:si_unique_call 7509} {:cexpr "__cil_tmp83"} {:si_old_unique_call 1869} boogie_si_record_i32($i46);
    goto corral_source_split_3488;

  corral_source_split_3488:
    assume {:verifier.code 0} true;
    $i47 := $eq.i32($i46, 5);
    goto corral_source_split_3489;

  corral_source_split_3489:
    assume {:verifier.code 0} true;
    assume {:branchcond $i47} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i47 == 1);
    assume {:verifier.code 0} true;
    $i48 := 16;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_3493;

  corral_source_split_3493:
    assume {:verifier.code 0} true;
    $i49 := $i48;
    goto $bb6;

  $bb3:
    assume $i47 == 1;
    goto corral_source_split_3491;

  corral_source_split_3491:
    assume {:verifier.code 0} true;
    $i48 := 15;
    goto $bb5;
}



implementation {:LB_Mapping "aty_var_to_crtc_loop_$bb207"} {:entrypoint} aty_var_to_crtc_EntryCopy_aty_var_to_crtc_loop_$bb207($p0: ref, $p1: ref, $p2: ref) returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i23: i32;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i32;
  var $i47: i1;
  var $i48: i32;
  var $i49: i32;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i32;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i65: i32;
  var $i66: i1;
  var $i71: i1;
  var $i76: i1;
  var $i81: i1;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i32;
  var $i87: i1;
  var $i91: i1;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i32;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i72: i32;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i67: i32;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i100: i32;
  var $i101: i64;
  var $i102: i64;
  var $p103: ref;
  var $i104: i32;
  var $i105: i32;
  var $i106: i1;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $i112: i1;
  var $i113: i32;
  var $i114: i32;
  var $i115: i1;
  var $i116: i32;
  var $i117: i32;
  var $i118: i1;
  var $i119: i32;
  var $i120: i1;
  var $i121: i1;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i125: i32;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i32;
  var $i133: i32;
  var $i134: i64;
  var $i135: i64;
  var $p136: ref;
  var $i137: i32;
  var $i138: i32;
  var $i139: i64;
  var $i140: i64;
  var $p141: ref;
  var $i142: i32;
  var $i143: i32;
  var $i144: i64;
  var $i145: i64;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $i149: i32;
  var $i150: i64;
  var $i151: i64;
  var $p152: ref;
  var $i153: i32;
  var $i154: i32;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $i164: i32;
  var $i165: i64;
  var $i166: i64;
  var $p167: ref;
  var $i168: i64;
  var $i169: i1;
  var $i170: i64;
  var $i171: i64;
  var $p172: ref;
  var $i173: i32;
  var $i174: i32;
  var $i175: i1;
  var $i176: i32;
  var $i177: i64;
  var $i178: i64;
  var $i179: i32;
  var $p180: ref;
  var $i181: i64;
  var $i182: i64;
  var $p183: ref;
  var $i184: i32;
  var $i185: i32;
  var $i186: i1;
  var $i187: i64;
  var $i188: i64;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i192: i32;
  var $i193: i32;
  var $p194: ref;
  var $i195: i32;
  var $i196: i64;
  var $i197: i64;
  var $i198: i32;
  var $p199: ref;
  var $i200: i32;
  var $i201: i64;
  var $i202: i64;
  var $i203: i64;
  var $i204: i64;
  var $i205: i32;
  var $p206: ref;
  var $i207: i64;
  var $i208: i64;
  var $i209: i64;
  var $i210: i64;
  var $p211: ref;
  var $i212: i32;
  var $i213: i64;
  var $i214: i64;
  var $i215: i32;
  var $p216: ref;
  var $i217: i64;
  var $i218: i64;
  var $i219: i64;
  var $i220: i64;
  var $p221: ref;
  var $i222: i32;
  var $i223: i64;
  var $i224: i64;
  var $i225: i32;
  var $p226: ref;
  var $i227: i64;
  var $i228: i64;
  var $p229: ref;
  var $i230: i32;
  var $i231: i64;
  var $i232: i64;
  var $i233: i1;
  var $i234: i64;
  var $i235: i64;
  var $p236: ref;
  var $i237: i16;
  var $i238: i32;
  var $i239: i1;
  var $i240: i64;
  var $i241: i64;
  var $p242: ref;
  var $i243: i16;
  var $i244: i32;
  var $i245: i1;
  var $i246: i64;
  var $i247: i64;
  var $p248: ref;
  var $i249: i32;
  var $i250: i64;
  var $i251: i64;
  var $i252: i1;
  var $i253: i64;
  var $i254: i64;
  var $p255: ref;
  var $i256: i32;
  var $i257: i32;
  var $i258: i1;
  var $i259: i32;
  var $i260: i64;
  var $i261: i64;
  var $i262: i64;
  var $i263: i64;
  var $p264: ref;
  var $i265: i32;
  var $i266: i64;
  var $i267: i64;
  var $i268: i32;
  var $p269: ref;
  var $i270: i64;
  var $i271: i64;
  var $p272: ref;
  var $i273: i32;
  var $i274: i32;
  var $i275: i1;
  var $i276: i32;
  var $i277: i64;
  var $i278: i64;
  var $p279: ref;
  var $i280: i64;
  var $i281: i1;
  var $i282: i64;
  var $i283: i64;
  var $p284: ref;
  var $i285: i32;
  var $i286: i64;
  var $i287: i64;
  var $i288: i1;
  var $i289: i32;
  var $i290: i64;
  var $i291: i64;
  var $p292: ref;
  var $i293: i16;
  var $i294: i32;
  var $i295: i1;
  var $i296: i64;
  var $i297: i64;
  var $p298: ref;
  var $i299: i16;
  var $i300: i32;
  var $i301: i32;
  var $i302: i1;
  var $i303: i32;
  var $i304: i32;
  var $i305: i32;
  var $i306: i32;
  var $i307: i32;
  var $i308: i64;
  var $i309: i64;
  var $p310: ref;
  var $i311: i16;
  var $i312: i32;
  var $i313: i32;
  var $i314: i64;
  var $i315: i64;
  var $p316: ref;
  var $i317: i16;
  var $i318: i32;
  var $i319: i32;
  var $i320: i64;
  var $i321: i64;
  var $p322: ref;
  var $i323: i16;
  var $i324: i32;
  var $i325: i64;
  var $i326: i64;
  var $p327: ref;
  var $i328: i16;
  var $i329: i32;
  var $i330: i32;
  var $i331: i64;
  var $i332: i64;
  var $p333: ref;
  var $i334: i16;
  var $i335: i32;
  var $i336: i32;
  var $i337: i32;
  var $i338: i64;
  var $i339: i64;
  var $p340: ref;
  var $i341: i16;
  var $i342: i32;
  var $i343: i32;
  var $i344: i32;
  var $i345: i64;
  var $i346: i64;
  var $p347: ref;
  var $i348: i16;
  var $i349: i32;
  var $i350: i32;
  var $i351: i32;
  var $i352: i32;
  var $i353: i32;
  var $i354: i32;
  var $i355: i32;
  var $i356: i32;
  var $i357: i32;
  var $i358: i32;
  var $i359: i32;
  var $i360: i32;
  var $i361: i32;
  var $i362: i32;
  var $i363: i32;
  var $i364: i32;
  var $i365: i32;
  var $i366: i32;
  var $i367: i32;
  var $i368: i32;
  var $i369: i32;
  var $i370: i32;
  var $i371: i32;
  var $i372: i32;
  var $i373: i32;
  var $i374: i32;
  var $i375: i32;
  var $i376: i32;
  var $i377: i1;
  var $i378: i64;
  var $i379: i64;
  var $p380: ref;
  var $i381: i32;
  var $i382: i32;
  var $i383: i1;
  var $i384: i32;
  var $i385: i1;
  var $i386: i64;
  var $i387: i64;
  var $p388: ref;
  var $i389: i32;
  var $i390: i32;
  var $i391: i1;
  var $i392: i32;
  var $i393: i1;
  var $i394: i32;
  var $i395: i1;
  var $i396: i64;
  var $i397: i64;
  var $p398: ref;
  var $i399: i32;
  var $i400: i32;
  var $i401: i1;
  var $i402: i32;
  var $i403: i32;
  var $i404: i1;
  var $i405: i32;
  var $i406: i32;
  var $i407: i32;
  var $i408: i32;
  var $i409: i32;
  var $i410: i32;
  var $i411: i32;
  var $i412: i32;
  var $i413: i64;
  var $i414: i64;
  var $p415: ref;
  var $i416: i64;
  var $i417: i1;
  var $i418: i64;
  var $i419: i64;
  var $p420: ref;
  var $i421: i32;
  var $i422: i64;
  var $i423: i64;
  var $i424: i1;
  var $i425: i32;
  var $i426: i32;
  var $i427: i32;
  var $i428: i32;
  var $i429: i32;
  var $i430: i1;
  var $i431: i64;
  var $i432: i64;
  var $p433: ref;
  var $i434: i32;
  var $i435: i32;
  var $i436: i1;
  var $i437: i32;
  var $i438: i1;
  var $i439: i64;
  var $i440: i64;
  var $p441: ref;
  var $i442: i32;
  var $i443: i32;
  var $i444: i1;
  var $i445: i32;
  var $i446: i1;
  var $i447: i32;
  var $i448: i1;
  var $i449: i64;
  var $i450: i64;
  var $p451: ref;
  var $i452: i32;
  var $i453: i32;
  var $i454: i1;
  var $i455: i32;
  var $i456: i32;
  var $i457: i1;
  var $i458: i32;
  var $p459: ref;
  var $i460: i64;
  var $i461: i64;
  var $p462: ref;
  var $i463: i64;
  var $i464: i64;
  var $p465: ref;
  var $i466: i64;
  var $i467: i64;
  var $p468: ref;
  var $i469: i64;
  var $i470: i64;
  var $p471: ref;
  var $i472: i64;
  var $i473: i64;
  var $i474: i32;
  var $i475: i32;
  var $i476: i32;
  var $i477: i32;
  var $i478: i32;
  var $i479: i32;
  var $i480: i32;
  var $i481: i32;
  var $p482: ref;
  var $i483: i64;
  var $i484: i64;
  var $p485: ref;
  var $i486: i64;
  var $i487: i64;
  var $i488: i32;
  var $i489: i32;
  var $p490: ref;
  var $i491: i64;
  var $i492: i64;
  var $i493: i32;
  var $i494: i32;
  var $i495: i32;
  var $i496: i32;
  var $i497: i32;
  var $i498: i32;
  var $i499: i32;
  var $i500: i32;
  var $i501: i32;
  var $i502: i32;
  var $p503: ref;
  var $i504: i64;
  var $i505: i64;
  var $i506: i32;
  var $i507: i32;
  var $p508: ref;
  var $i509: i64;
  var $i510: i64;
  var $i511: i32;
  var $i512: i32;
  var $i513: i32;
  var $i514: i32;
  var $p515: ref;
  var $i516: i64;
  var $i517: i64;
  var $i518: i32;
  var $i519: i32;
  var $p520: ref;
  var $i521: i64;
  var $i522: i64;
  var $i523: i64;
  var $i524: i64;
  var $p525: ref;
  var $i526: i32;
  var $i527: i32;
  var $p528: ref;
  var $i529: i32;
  var $i530: i1;
  var $i531: i64;
  var $i532: i64;
  var $i533: i64;
  var $i534: i64;
  var $p535: ref;
  var $i536: i32;
  var $i537: i32;
  var $p538: ref;
  var $i539: i32;
  var $i540: i1;
  var $i541: i64;
  var $i542: i64;
  var $i543: i64;
  var $i544: i64;
  var $p545: ref;
  var $i546: i32;
  var $i547: i32;
  var $p548: ref;
  var $i549: i64;
  var $i550: i64;
  var $p551: ref;
  var $i552: i64;
  var $i553: i1;
  var $i554: i32;
  var $i555: i1;
  var $i556: i32;
  var $i557: i32;
  var $i558: i64;
  var $i559: i64;
  var $i560: i64;
  var $i561: i64;
  var $p562: ref;
  var $i563: i32;
  var $i564: i32;
  var $p565: ref;
  var $i566: i64;
  var $i567: i64;
  var $i568: i64;
  var $i569: i64;
  var $p570: ref;
  var $i571: i32;
  var $i572: i64;
  var $i573: i64;
  var $i574: i32;
  var $p575: ref;
  var $i576: i64;
  var $i577: i64;
  var $i578: i64;
  var $i579: i64;
  var $p580: ref;
  var $i581: i32;
  var $i582: i64;
  var $i583: i64;
  var $i584: i32;
  var $p585: ref;
  var $i586: i64;
  var $i587: i64;
  var $i588: i32;
  var $p589: ref;
  var $i590: i64;
  var $i591: i64;
  var $p592: ref;
  var $i593: i32;
  var $i594: i32;
  var $i595: i1;
  var $i596: i32;
  var $i597: i64;
  var $i598: i64;
  var $i599: i64;
  var $i600: i64;
  var $i601: i32;
  var $p602: ref;
  var $i603: i64;
  var $i604: i64;
  var $i605: i64;
  var $i606: i64;
  var $p607: ref;
  var $i608: i32;
  var $i609: i64;
  var $i610: i64;
  var $i611: i32;
  var $p612: ref;
  var $i613: i64;
  var $i614: i64;
  var $p615: ref;
  var $i616: i16;
  var $i617: i32;
  var $i618: i1;
  var $i619: i64;
  var $i620: i64;
  var $p621: ref;
  var $i622: i32;
  var $i623: i64;
  var $i624: i64;
  var $i625: i1;
  var $i626: i32;
  var $i627: i64;
  var $i628: i64;
  var $p629: ref;
  var $i630: i16;
  var $i631: i32;
  var $i632: i32;
  var $i633: i64;
  var $i634: i64;
  var $p635: ref;
  var $i636: i16;
  var $i637: i32;
  var $i638: i32;
  var $i639: i1;
  var $i640: i1;
  var $i641: i64;
  var $i642: i64;
  var $p643: ref;
  var $i644: i16;
  var $i645: i32;
  var $i646: i32;
  var $i647: i32;
  var $i648: i1;
  var $i649: i64;
  var $i650: i64;
  var $p651: ref;
  var $i652: i16;
  var $i653: i32;
  var $i654: i32;
  var $i655: i32;
  var $i656: i32;
  var $i657: i32;
  var $i658: i32;
  var $i659: i32;
  var $i660: i32;
  var $i661: i32;
  var $i662: i1;
  var $i663: i32;
  var $i664: i32;
  var $i667: i32;
  var $i668: i64;
  var $i669: i64;
  var $i670: i64;
  var $p671: ref;
  var $i672: i8;
  var $i673: i32;
  var $i674: i32;
  var $i675: i32;
  var $i676: i32;
  var $i677: i32;
  var $i678: i32;
  var $i679: i1;
  var $i680: i1;
  var $i681: i32;
  var $i682: i32;
  var $i683: i32;
  var $i684: i32;
  var $i665: i32;
  var $i666: i32;
  var $i685: i1;
  var $i686: i1;
  var $i687: i64;
  var $i688: i64;
  var $i689: i64;
  var $p690: ref;
  var $i691: i8;
  var $i692: i32;
  var $i693: i32;
  var $i694: i32;
  var $i695: i32;
  var $i696: i32;
  var $i697: i32;
  var $i698: i1;
  var $i699: i32;
  var $i700: i1;
  var $i701: i32;
  var $i704: i32;
  var $i705: i32;
  var $i702: i32;
  var $i703: i32;
  var $i706: i32;
  var $i707: i32;
  var $i708: i32;
  var $i709: i64;
  var $i710: i64;
  var $i711: i64;
  var $i712: i64;
  var $i713: i64;
  var $i714: i64;
  var $i715: i64;
  var $i716: i64;
  var $i717: i64;
  var $i718: i64;
  var $i719: i64;
  var $p720: ref;
  var $i721: i32;
  var $i722: i64;
  var $i723: i64;
  var $i724: i32;
  var $p725: ref;
  var $i726: i64;
  var $i727: i64;
  var $i728: i64;
  var $i729: i64;
  var $p730: ref;
  var $i731: i16;
  var $i732: i64;
  var $i733: i64;
  var $i734: i64;
  var $i735: i64;
  var $i736: i64;
  var $i737: i64;
  var $i738: i64;
  var $i739: i64;
  var $p740: ref;
  var $i741: i32;
  var $i742: i64;
  var $i743: i64;
  var $i744: i32;
  var $p745: ref;
  var $i746: i64;
  var $i747: i64;
  var $p748: ref;
  var $i749: i16;
  var $i750: i32;
  var $i751: i1;
  var $i752: i64;
  var $i753: i64;
  var $p754: ref;
  var $i755: i32;
  var $i756: i64;
  var $i757: i64;
  var $i758: i1;
  var $i759: i64;
  var $i760: i64;
  var $i761: i64;
  var $i762: i64;
  var $p763: ref;
  var $i764: i16;
  var $i765: i64;
  var $i766: i64;
  var $i767: i64;
  var $i768: i64;
  var $i769: i64;
  var $i770: i64;
  var $i771: i32;
  var $p772: ref;
  var $i773: i64;
  var $i774: i64;
  var $p775: ref;
  var $i776: i32;
  var $i777: i32;
  var $i778: i1;
  var $i779: i64;
  var $i780: i64;
  var $p781: ref;
  var $i782: i32;
  var $i783: i32;
  var $i784: i1;
  var $i785: i32;
  var $i786: i1;
  var $i787: i64;
  var $i788: i64;
  var $i789: i64;
  var $i790: i64;
  var $p791: ref;
  var $i792: i32;
  var $i793: i64;
  var $i794: i64;
  var $i795: i32;
  var $p796: ref;
  var $i797: i64;
  var $i798: i64;
  var $p799: ref;
  var $i800: i64;
  var $i801: i64;
  var $p802: ref;
  var $i803: i64;
  var $i804: i64;
  var $i805: i64;
  var $i806: i64;
  var $p807: ref;
  var $i808: i32;
  var $p809: ref;
  var $i810: i64;
  var $i811: i64;
  var $i812: i64;
  var $i813: i64;
  var $p814: ref;
  var $i815: i32;
  var $p816: ref;
  var $i817: i64;
  var $i818: i64;
  var $i819: i64;
  var $i820: i64;
  var $p821: ref;
  var $i822: i32;
  var $p823: ref;
  var $i824: i64;
  var $i825: i64;
  var $i826: i64;
  var $i827: i64;
  var $p828: ref;
  var $i829: i32;
  var $p830: ref;
  var $i831: i64;
  var $i832: i64;
  var $p833: ref;
  var $i834: i32;
  var $i835: i32;
  var $i836: i1;
  var $i837: i32;
  var $i838: i64;
  var $i839: i64;
  var $i840: i32;
  var $i841: i64;
  var $i842: i64;
  var $p843: ref;
  var $i844: i32;
  var $i845: i32;
  var $p846: ref;
  var $i847: i64;
  var $i848: i64;
  var $p849: ref;
  var $i850: i64;
  var $i851: i64;
  var $p852: ref;
  var $i99: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 6970} {:si_old_unique_call 1838} $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 6971} {:si_old_unique_call 1839} $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    goto corral_source_split_3444;

  corral_source_split_3444:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p0);
    call {:si_unique_call 6972} {:cexpr "__cil_tmp52"} {:si_old_unique_call 1840} boogie_si_record_i64($i5);
    goto corral_source_split_3445;

  corral_source_split_3445:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 1160);
    call {:si_unique_call 6973} {:cexpr "__cil_tmp53"} {:si_old_unique_call 1841} boogie_si_record_i64($i6);
    goto corral_source_split_3446;

  corral_source_split_3446:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_3447;

  corral_source_split_3447:
    assume {:verifier.code 0} true;
    havoc $p8;
    goto corral_source_split_3448;

  corral_source_split_3448:
    assume {:verifier.code 0} true;
    $p9 := $bitcast.ref.ref($p8);
    goto corral_source_split_3449;

  corral_source_split_3449:
    assume {:verifier.code 0} true;
    $p10 := $bitcast.ref.ref($p1);
    goto corral_source_split_3450;

  corral_source_split_3450:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 6974} {:cexpr "__cil_tmp55"} {:si_old_unique_call 1842} boogie_si_record_i32($i11);
    goto corral_source_split_3451;

  corral_source_split_3451:
    assume {:verifier.code 0} true;
    $i12 := $add.i32($i11, 7);
    call {:si_unique_call 6975} {:cexpr "__cil_tmp56"} {:si_old_unique_call 1843} boogie_si_record_i32($i12);
    goto corral_source_split_3452;

  corral_source_split_3452:
    assume {:verifier.code 0} true;
    $i13 := $and.i32($i12, $sub.i32(0, 8));
    call {:si_unique_call 6976} {:cexpr "__cil_tmp57"} {:si_old_unique_call 1844} boogie_si_record_i32($i13);
    goto corral_source_split_3453;

  corral_source_split_3453:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p1);
    call {:si_unique_call 6977} {:cexpr "__cil_tmp58"} {:si_old_unique_call 1845} boogie_si_record_i64($i14);
    goto corral_source_split_3454;

  corral_source_split_3454:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 4);
    call {:si_unique_call 6978} {:cexpr "__cil_tmp59"} {:si_old_unique_call 1846} boogie_si_record_i64($i15);
    goto corral_source_split_3455;

  corral_source_split_3455:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_3456;

  corral_source_split_3456:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 6979} {:cexpr "__cil_tmp60"} {:si_old_unique_call 1847} boogie_si_record_i32($i17);
    goto corral_source_split_3457;

  corral_source_split_3457:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p1);
    call {:si_unique_call 6980} {:cexpr "__cil_tmp61"} {:si_old_unique_call 1848} boogie_si_record_i64($i18);
    goto corral_source_split_3458;

  corral_source_split_3458:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 8);
    call {:si_unique_call 6981} {:cexpr "__cil_tmp62"} {:si_old_unique_call 1849} boogie_si_record_i64($i19);
    goto corral_source_split_3459;

  corral_source_split_3459:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_3460;

  corral_source_split_3460:
    assume {:verifier.code 0} true;
    havoc $i21;
    call {:si_unique_call 6982} {:cexpr "__cil_tmp63"} {:si_old_unique_call 1850} boogie_si_record_i32($i21);
    goto corral_source_split_3461;

  corral_source_split_3461:
    assume {:verifier.code 0} true;
    $i22 := $add.i32($i21, 7);
    call {:si_unique_call 6983} {:cexpr "__cil_tmp64"} {:si_old_unique_call 1851} boogie_si_record_i32($i22);
    goto corral_source_split_3462;

  corral_source_split_3462:
    assume {:verifier.code 0} true;
    $i23 := $and.i32($i22, $sub.i32(0, 8));
    call {:si_unique_call 6984} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1852} boogie_si_record_i32($i23);
    goto corral_source_split_3463;

  corral_source_split_3463:
    assume {:verifier.code 0} true;
    $i24 := $p2i.ref.i64($p1);
    call {:si_unique_call 6985} {:cexpr "__cil_tmp66"} {:si_old_unique_call 1853} boogie_si_record_i64($i24);
    goto corral_source_split_3464;

  corral_source_split_3464:
    assume {:verifier.code 0} true;
    $i25 := $add.i64($i24, 12);
    call {:si_unique_call 6986} {:cexpr "__cil_tmp67"} {:si_old_unique_call 1854} boogie_si_record_i64($i25);
    goto corral_source_split_3465;

  corral_source_split_3465:
    assume {:verifier.code 0} true;
    $p26 := $i2p.i64.ref($i25);
    goto corral_source_split_3466;

  corral_source_split_3466:
    assume {:verifier.code 0} true;
    havoc $i27;
    call {:si_unique_call 6987} {:cexpr "__cil_tmp68"} {:si_old_unique_call 1855} boogie_si_record_i32($i27);
    goto corral_source_split_3467;

  corral_source_split_3467:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p1);
    call {:si_unique_call 6988} {:cexpr "__cil_tmp69"} {:si_old_unique_call 1856} boogie_si_record_i64($i28);
    goto corral_source_split_3468;

  corral_source_split_3468:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 16);
    call {:si_unique_call 6989} {:cexpr "__cil_tmp70"} {:si_old_unique_call 1857} boogie_si_record_i64($i29);
    goto corral_source_split_3469;

  corral_source_split_3469:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_3470;

  corral_source_split_3470:
    assume {:verifier.code 0} true;
    havoc $i31;
    call {:si_unique_call 6990} {:cexpr "__cil_tmp71"} {:si_old_unique_call 1858} boogie_si_record_i32($i31);
    goto corral_source_split_3471;

  corral_source_split_3471:
    assume {:verifier.code 0} true;
    $i32 := $add.i32($i31, 7);
    call {:si_unique_call 6991} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1859} boogie_si_record_i32($i32);
    goto corral_source_split_3472;

  corral_source_split_3472:
    assume {:verifier.code 0} true;
    $i33 := $and.i32($i32, $sub.i32(0, 8));
    call {:si_unique_call 6992} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1860} boogie_si_record_i32($i33);
    goto corral_source_split_3473;

  corral_source_split_3473:
    assume {:verifier.code 0} true;
    $i34 := $p2i.ref.i64($p1);
    call {:si_unique_call 6993} {:cexpr "__cil_tmp74"} {:si_old_unique_call 1861} boogie_si_record_i64($i34);
    goto corral_source_split_3474;

  corral_source_split_3474:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($i34, 20);
    call {:si_unique_call 6994} {:cexpr "__cil_tmp75"} {:si_old_unique_call 1862} boogie_si_record_i64($i35);
    goto corral_source_split_3475;

  corral_source_split_3475:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_3476;

  corral_source_split_3476:
    assume {:verifier.code 0} true;
    havoc $i37;
    call {:si_unique_call 6995} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1863} boogie_si_record_i32($i37);
    goto corral_source_split_3477;

  corral_source_split_3477:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p1);
    call {:si_unique_call 6996} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1864} boogie_si_record_i64($i38);
    goto corral_source_split_3478;

  corral_source_split_3478:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 6997} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1865} boogie_si_record_i64($i39);
    goto corral_source_split_3479;

  corral_source_split_3479:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_3480;

  corral_source_split_3480:
    assume {:verifier.code 0} true;
    havoc $i41;
    call {:si_unique_call 6998} {:cexpr "__cil_tmp79"} {:si_old_unique_call 1866} boogie_si_record_i32($i41);
    goto corral_source_split_3481;

  corral_source_split_3481:
    assume {:verifier.code 0} true;
    $i42 := $eq.i32($i41, 16);
    goto corral_source_split_3482;

  corral_source_split_3482:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i42 == 1);
    assume {:verifier.code 0} true;
    $i49 := $i41;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_3495;

  corral_source_split_3495:
    assume {:verifier.code 0} true;
    $i50 := $p2i.ref.i64($p1);
    call {:si_unique_call 6999} {:cexpr "__cil_tmp84"} {:si_old_unique_call 1870} boogie_si_record_i64($i50);
    goto corral_source_split_3496;

  corral_source_split_3496:
    assume {:verifier.code 0} true;
    $i51 := $add.i64($i50, 128);
    call {:si_unique_call 7000} {:cexpr "__cil_tmp85"} {:si_old_unique_call 1871} boogie_si_record_i64($i51);
    goto corral_source_split_3497;

  corral_source_split_3497:
    assume {:verifier.code 0} true;
    $p52 := $i2p.i64.ref($i51);
    goto corral_source_split_3498;

  corral_source_split_3498:
    assume {:verifier.code 0} true;
    havoc $i53;
    call {:si_unique_call 7001} {:cexpr "__cil_tmp86"} {:si_old_unique_call 1872} boogie_si_record_i32($i53);
    goto corral_source_split_3499;

  corral_source_split_3499:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p1);
    call {:si_unique_call 7002} {:cexpr "__cil_tmp87"} {:si_old_unique_call 1873} boogie_si_record_i64($i54);
    goto corral_source_split_3500;

  corral_source_split_3500:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, 132);
    call {:si_unique_call 7003} {:cexpr "__cil_tmp88"} {:si_old_unique_call 1874} boogie_si_record_i64($i55);
    goto corral_source_split_3501;

  corral_source_split_3501:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i55);
    goto corral_source_split_3502;

  corral_source_split_3502:
    assume {:verifier.code 0} true;
    havoc $i57;
    call {:si_unique_call 7004} {:cexpr "__cil_tmp89"} {:si_old_unique_call 1875} boogie_si_record_i32($i57);
    goto corral_source_split_3503;

  corral_source_split_3503:
    assume {:verifier.code 0} true;
    $i58 := $add.i32($i13, $i33);
    call {:si_unique_call 7005} {:cexpr "__cil_tmp90"} {:si_old_unique_call 1876} boogie_si_record_i32($i58);
    goto corral_source_split_3504;

  corral_source_split_3504:
    assume {:verifier.code 0} true;
    $i59 := $ult.i32($i23, $i58);
    goto corral_source_split_3505;

  corral_source_split_3505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i59} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i59 == 1);
    assume {:verifier.code 0} true;
    $i61 := $i23;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_3510;

  corral_source_split_3510:
    assume {:verifier.code 0} true;
    $i62 := $add.i32($i17, $i37);
    call {:si_unique_call 7006} {:cexpr "__cil_tmp91"} {:si_old_unique_call 1878} boogie_si_record_i32($i62);
    goto corral_source_split_3511;

  corral_source_split_3511:
    assume {:verifier.code 0} true;
    $i63 := $ult.i32($i27, $i62);
    goto corral_source_split_3512;

  corral_source_split_3512:
    assume {:verifier.code 0} true;
    assume {:branchcond $i63} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i63 == 1);
    assume {:verifier.code 0} true;
    $i65 := $i27;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto corral_source_split_3517;

  corral_source_split_3517:
    assume {:verifier.code 0} true;
    $i66 := $ule.i32($i49, 8);
    goto corral_source_split_3518;

  corral_source_split_3518:
    assume {:verifier.code 0} true;
    assume {:branchcond $i66} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i66 == 1);
    goto corral_source_split_3522;

  corral_source_split_3522:
    assume {:verifier.code 0} true;
    $i71 := $ule.i32($i49, 15);
    goto corral_source_split_3523;

  corral_source_split_3523:
    assume {:verifier.code 0} true;
    assume {:branchcond $i71} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i71 == 1);
    goto corral_source_split_3536;

  corral_source_split_3536:
    assume {:verifier.code 0} true;
    $i76 := $ule.i32($i49, 16);
    goto corral_source_split_3537;

  corral_source_split_3537:
    assume {:verifier.code 0} true;
    assume {:branchcond $i76} true;
    goto $bb19, $bb20;

  $bb20:
    assume !($i76 == 1);
    goto corral_source_split_3541;

  corral_source_split_3541:
    assume {:verifier.code 0} true;
    $i81 := $ule.i32($i49, 24);
    goto corral_source_split_3542;

  corral_source_split_3542:
    assume {:verifier.code 0} true;
    assume {:branchcond $i81} true;
    goto $bb22, $bb23;

  $bb23:
    assume !($i81 == 1);
    goto corral_source_split_3552;

  corral_source_split_3552:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i91 := $ule.i32($i49, 32);
    goto corral_source_split_3558;

  corral_source_split_3558:
    assume {:verifier.code 0} true;
    assume {:branchcond $i91} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i91 == 1);
    goto corral_source_split_3562;

  corral_source_split_3562:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i92 := $p2i.ref.i64($p1);
    call {:si_unique_call 7007} {:cexpr "__cil_tmp95"} {:si_old_unique_call 1889} boogie_si_record_i64($i92);
    goto corral_source_split_3564;

  corral_source_split_3564:
    assume {:verifier.code 0} true;
    $i93 := $add.i64($i92, 84);
    call {:si_unique_call 7008} {:cexpr "__cil_tmp96"} {:si_old_unique_call 1890} boogie_si_record_i64($i93);
    goto corral_source_split_3565;

  corral_source_split_3565:
    assume {:verifier.code 0} true;
    $p94 := $i2p.i64.ref($i93);
    goto corral_source_split_3566;

  corral_source_split_3566:
    assume {:verifier.code 0} true;
    havoc $i95;
    call {:si_unique_call 7009} {:cexpr "__cil_tmp97"} {:si_old_unique_call 1891} boogie_si_record_i32($i95);
    goto corral_source_split_3567;

  corral_source_split_3567:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, 2);
    call {:si_unique_call 7010} {:cexpr "__cil_tmp98"} {:si_old_unique_call 1892} boogie_si_record_i32($i96);
    goto corral_source_split_3568;

  corral_source_split_3568:
    assume {:verifier.code 0} true;
    $i97 := $ne.i32($i96, 0);
    goto corral_source_split_3569;

  corral_source_split_3569:
    assume {:verifier.code 0} true;
    assume {:branchcond $i97} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i97 == 1);
    goto corral_source_split_3571;

  corral_source_split_3571:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7011} {:si_old_unique_call 1893} $i98 := printk.ref(.str.6);
    goto corral_source_split_3572;

  corral_source_split_3572:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    goto corral_source_split_3574;

  corral_source_split_3574:
    assume {:verifier.code 0} true;
    $r := $i99;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb34:
    assume $i97 == 1;
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb29:
    assume $i91 == 1;
    goto corral_source_split_3560;

  corral_source_split_3560:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i88, $i89, $i90 := 17171974, 1536, 32;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i77, $i78, $i79, $i80 := 32896, $i88, $i89, $i90;
    goto $bb21;

  $bb21:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i72, $i73, $i74, $i75 := $i77, $i78, $i79, $i80;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i67, $i68, $i69, $i70 := $i72, $i73, $i74, $i75;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3525;

  corral_source_split_3525:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7012} {:si_old_unique_call 1880} $i100 := calc_line_length($p9, $i61, $i70);
    call {:si_unique_call 7013} {:cexpr "line_length"} {:si_old_unique_call 1881} boogie_si_record_i32($i100);
    goto corral_source_split_3526;

  corral_source_split_3526:
    assume {:verifier.code 0} true;
    $i101 := $p2i.ref.i64($p0);
    call {:si_unique_call 7014} {:cexpr "__cil_tmp100"} {:si_old_unique_call 1882} boogie_si_record_i64($i101);
    goto corral_source_split_3527;

  corral_source_split_3527:
    assume {:verifier.code 0} true;
    $i102 := $add.i64($i101, 344);
    call {:si_unique_call 7015} {:cexpr "__cil_tmp101"} {:si_old_unique_call 1883} boogie_si_record_i64($i102);
    goto corral_source_split_3528;

  corral_source_split_3528:
    assume {:verifier.code 0} true;
    $p103 := $i2p.i64.ref($i102);
    goto corral_source_split_3529;

  corral_source_split_3529:
    assume {:verifier.code 0} true;
    havoc $i104;
    call {:si_unique_call 7016} {:cexpr "__cil_tmp102"} {:si_old_unique_call 1884} boogie_si_record_i32($i104);
    goto corral_source_split_3530;

  corral_source_split_3530:
    assume {:verifier.code 0} true;
    $i105 := $mul.i32($i65, $i100);
    call {:si_unique_call 7017} {:cexpr "__cil_tmp104"} {:si_old_unique_call 1885} boogie_si_record_i32($i105);
    goto corral_source_split_3531;

  corral_source_split_3531:
    assume {:verifier.code 0} true;
    $i106 := $ugt.i32($i105, $i104);
    goto corral_source_split_3532;

  corral_source_split_3532:
    assume {:verifier.code 0} true;
    assume {:branchcond $i106} true;
    goto $bb39, $bb40;

  $bb40:
    assume !($i106 == 1);
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    $i114 := $and.i32($i53, 1);
    goto corral_source_split_3588;

  corral_source_split_3588:
    assume {:verifier.code 0} true;
    $i115 := $ne.i32($i114, 0);
    goto corral_source_split_3589;

  corral_source_split_3589:
    assume {:verifier.code 0} true;
    assume {:branchcond $i115} true;
    goto $bb48, $bb49;

  $bb49:
    assume !($i115 == 1);
    assume {:verifier.code 0} true;
    $i116 := 1;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto corral_source_split_3593;

  corral_source_split_3593:
    assume {:verifier.code 0} true;
    $i117 := $and.i32($i53, 2);
    goto corral_source_split_3594;

  corral_source_split_3594:
    assume {:verifier.code 0} true;
    $i118 := $ne.i32($i117, 0);
    goto corral_source_split_3595;

  corral_source_split_3595:
    assume {:verifier.code 0} true;
    assume {:branchcond $i118} true;
    goto $bb51, $bb52;

  $bb52:
    assume !($i118 == 1);
    assume {:verifier.code 0} true;
    $i119 := 1;
    goto $bb53;

  $bb53:
    assume {:verifier.code 0} true;
    goto corral_source_split_3599;

  corral_source_split_3599:
    assume {:verifier.code 0} true;
    $i120 := $ugt.i32($i13, 1600);
    goto corral_source_split_3600;

  corral_source_split_3600:
    assume {:verifier.code 0} true;
    assume {:branchcond $i120} true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i120 == 1);
    goto corral_source_split_3604;

  corral_source_split_3604:
    assume {:verifier.code 0} true;
    $i121 := $ugt.i32($i17, 1200);
    goto corral_source_split_3605;

  corral_source_split_3605:
    assume {:verifier.code 0} true;
    assume {:branchcond $i121} true;
    goto $bb57, $bb58;

  $bb58:
    assume !($i121 == 1);
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p1);
    call {:si_unique_call 7018} {:cexpr "__cil_tmp113"} {:si_old_unique_call 1904} boogie_si_record_i64($i129);
    goto corral_source_split_3619;

  corral_source_split_3619:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 108);
    call {:si_unique_call 7019} {:cexpr "__cil_tmp114"} {:si_old_unique_call 1905} boogie_si_record_i64($i130);
    goto corral_source_split_3620;

  corral_source_split_3620:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_3621;

  corral_source_split_3621:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 7020} {:cexpr "__cil_tmp115"} {:si_old_unique_call 1906} boogie_si_record_i32($i132);
    goto corral_source_split_3622;

  corral_source_split_3622:
    assume {:verifier.code 0} true;
    $i133 := $add.i32($i13, $i132);
    call {:si_unique_call 7021} {:cexpr "h_sync_strt"} {:si_old_unique_call 1907} boogie_si_record_i32($i133);
    goto corral_source_split_3623;

  corral_source_split_3623:
    assume {:verifier.code 0} true;
    $i134 := $p2i.ref.i64($p1);
    call {:si_unique_call 7022} {:cexpr "__cil_tmp117"} {:si_old_unique_call 1908} boogie_si_record_i64($i134);
    goto corral_source_split_3624;

  corral_source_split_3624:
    assume {:verifier.code 0} true;
    $i135 := $add.i64($i134, 120);
    call {:si_unique_call 7023} {:cexpr "__cil_tmp118"} {:si_old_unique_call 1909} boogie_si_record_i64($i135);
    goto corral_source_split_3625;

  corral_source_split_3625:
    assume {:verifier.code 0} true;
    $p136 := $i2p.i64.ref($i135);
    goto corral_source_split_3626;

  corral_source_split_3626:
    assume {:verifier.code 0} true;
    havoc $i137;
    call {:si_unique_call 7024} {:cexpr "__cil_tmp119"} {:si_old_unique_call 1910} boogie_si_record_i32($i137);
    goto corral_source_split_3627;

  corral_source_split_3627:
    assume {:verifier.code 0} true;
    $i138 := $add.i32($i133, $i137);
    call {:si_unique_call 7025} {:cexpr "h_sync_end"} {:si_old_unique_call 1911} boogie_si_record_i32($i138);
    goto corral_source_split_3628;

  corral_source_split_3628:
    assume {:verifier.code 0} true;
    $i139 := $p2i.ref.i64($p1);
    call {:si_unique_call 7026} {:cexpr "__cil_tmp121"} {:si_old_unique_call 1912} boogie_si_record_i64($i139);
    goto corral_source_split_3629;

  corral_source_split_3629:
    assume {:verifier.code 0} true;
    $i140 := $add.i64($i139, 108);
    call {:si_unique_call 7027} {:cexpr "__cil_tmp122"} {:si_old_unique_call 1913} boogie_si_record_i64($i140);
    goto corral_source_split_3630;

  corral_source_split_3630:
    assume {:verifier.code 0} true;
    $p141 := $i2p.i64.ref($i140);
    goto corral_source_split_3631;

  corral_source_split_3631:
    assume {:verifier.code 0} true;
    havoc $i142;
    call {:si_unique_call 7028} {:cexpr "__cil_tmp123"} {:si_old_unique_call 1914} boogie_si_record_i32($i142);
    goto corral_source_split_3632;

  corral_source_split_3632:
    assume {:verifier.code 0} true;
    $i143 := $and.i32($i142, 7);
    call {:si_unique_call 7029} {:cexpr "__cil_tmp124"} {:si_old_unique_call 1915} boogie_si_record_i32($i143);
    goto corral_source_split_3633;

  corral_source_split_3633:
    assume {:verifier.code 0} true;
    $i144 := $p2i.ref.i64($p1);
    call {:si_unique_call 7030} {:cexpr "__cil_tmp125"} {:si_old_unique_call 1916} boogie_si_record_i64($i144);
    goto corral_source_split_3634;

  corral_source_split_3634:
    assume {:verifier.code 0} true;
    $i145 := $add.i64($i144, 104);
    call {:si_unique_call 7031} {:cexpr "__cil_tmp126"} {:si_old_unique_call 1917} boogie_si_record_i64($i145);
    goto corral_source_split_3635;

  corral_source_split_3635:
    assume {:verifier.code 0} true;
    $p146 := $i2p.i64.ref($i145);
    goto corral_source_split_3636;

  corral_source_split_3636:
    assume {:verifier.code 0} true;
    havoc $i147;
    call {:si_unique_call 7032} {:cexpr "__cil_tmp127"} {:si_old_unique_call 1918} boogie_si_record_i32($i147);
    goto corral_source_split_3637;

  corral_source_split_3637:
    assume {:verifier.code 0} true;
    $i148 := $add.i32($i138, $i143);
    call {:si_unique_call 7033} {:cexpr "__cil_tmp129"} {:si_old_unique_call 1919} boogie_si_record_i32($i148);
    goto corral_source_split_3638;

  corral_source_split_3638:
    assume {:verifier.code 0} true;
    $i149 := $add.i32($i148, $i147);
    call {:si_unique_call 7034} {:cexpr "h_total"} {:si_old_unique_call 1920} boogie_si_record_i32($i149);
    goto corral_source_split_3639;

  corral_source_split_3639:
    assume {:verifier.code 0} true;
    $i150 := $p2i.ref.i64($p1);
    call {:si_unique_call 7035} {:cexpr "__cil_tmp130"} {:si_old_unique_call 1921} boogie_si_record_i64($i150);
    goto corral_source_split_3640;

  corral_source_split_3640:
    assume {:verifier.code 0} true;
    $i151 := $add.i64($i150, 116);
    call {:si_unique_call 7036} {:cexpr "__cil_tmp131"} {:si_old_unique_call 1922} boogie_si_record_i64($i151);
    goto corral_source_split_3641;

  corral_source_split_3641:
    assume {:verifier.code 0} true;
    $p152 := $i2p.i64.ref($i151);
    goto corral_source_split_3642;

  corral_source_split_3642:
    assume {:verifier.code 0} true;
    havoc $i153;
    call {:si_unique_call 7037} {:cexpr "__cil_tmp132"} {:si_old_unique_call 1923} boogie_si_record_i32($i153);
    goto corral_source_split_3643;

  corral_source_split_3643:
    assume {:verifier.code 0} true;
    $i154 := $add.i32($i17, $i153);
    call {:si_unique_call 7038} {:cexpr "v_sync_strt"} {:si_old_unique_call 1924} boogie_si_record_i32($i154);
    goto corral_source_split_3644;

  corral_source_split_3644:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p1);
    call {:si_unique_call 7039} {:cexpr "__cil_tmp134"} {:si_old_unique_call 1925} boogie_si_record_i64($i155);
    goto corral_source_split_3645;

  corral_source_split_3645:
    assume {:verifier.code 0} true;
    $i156 := $add.i64($i155, 124);
    call {:si_unique_call 7040} {:cexpr "__cil_tmp135"} {:si_old_unique_call 1926} boogie_si_record_i64($i156);
    goto corral_source_split_3646;

  corral_source_split_3646:
    assume {:verifier.code 0} true;
    $p157 := $i2p.i64.ref($i156);
    goto corral_source_split_3647;

  corral_source_split_3647:
    assume {:verifier.code 0} true;
    havoc $i158;
    call {:si_unique_call 7041} {:cexpr "__cil_tmp136"} {:si_old_unique_call 1927} boogie_si_record_i32($i158);
    goto corral_source_split_3648;

  corral_source_split_3648:
    assume {:verifier.code 0} true;
    $i159 := $add.i32($i154, $i158);
    call {:si_unique_call 7042} {:cexpr "v_sync_end"} {:si_old_unique_call 1928} boogie_si_record_i32($i159);
    goto corral_source_split_3649;

  corral_source_split_3649:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p1);
    call {:si_unique_call 7043} {:cexpr "__cil_tmp138"} {:si_old_unique_call 1929} boogie_si_record_i64($i160);
    goto corral_source_split_3650;

  corral_source_split_3650:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 112);
    call {:si_unique_call 7044} {:cexpr "__cil_tmp139"} {:si_old_unique_call 1930} boogie_si_record_i64($i161);
    goto corral_source_split_3651;

  corral_source_split_3651:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_3652;

  corral_source_split_3652:
    assume {:verifier.code 0} true;
    havoc $i163;
    call {:si_unique_call 7045} {:cexpr "__cil_tmp140"} {:si_old_unique_call 1931} boogie_si_record_i32($i163);
    goto corral_source_split_3653;

  corral_source_split_3653:
    assume {:verifier.code 0} true;
    $i164 := $add.i32($i159, $i163);
    call {:si_unique_call 7046} {:cexpr "v_total"} {:si_old_unique_call 1932} boogie_si_record_i32($i164);
    goto corral_source_split_3654;

  corral_source_split_3654:
    assume {:verifier.code 0} true;
    $i165 := $p2i.ref.i64($p9);
    call {:si_unique_call 7047} {:cexpr "__cil_tmp142"} {:si_old_unique_call 1933} boogie_si_record_i64($i165);
    goto corral_source_split_3655;

  corral_source_split_3655:
    assume {:verifier.code 0} true;
    $i166 := $add.i64($i165, 1136);
    call {:si_unique_call 7048} {:cexpr "__cil_tmp143"} {:si_old_unique_call 1934} boogie_si_record_i64($i166);
    goto corral_source_split_3656;

  corral_source_split_3656:
    assume {:verifier.code 0} true;
    $p167 := $i2p.i64.ref($i166);
    goto corral_source_split_3657;

  corral_source_split_3657:
    assume {:verifier.code 0} true;
    havoc $i168;
    call {:si_unique_call 7049} {:cexpr "__cil_tmp144"} {:si_old_unique_call 1935} boogie_si_record_i64($i168);
    goto corral_source_split_3658;

  corral_source_split_3658:
    assume {:verifier.code 0} true;
    $i169 := $ne.i64($i168, 0);
    goto corral_source_split_3659;

  corral_source_split_3659:
    assume {:verifier.code 0} true;
    assume {:branchcond $i169} true;
    goto $bb67, $bb68;

  $bb68:
    assume !($i169 == 1);
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i277 := $p2i.ref.i64($p9);
    call {:si_unique_call 7050} {:cexpr "__cil_tmp215"} {:si_old_unique_call 2011} boogie_si_record_i64($i277);
    goto corral_source_split_3802;

  corral_source_split_3802:
    assume {:verifier.code 0} true;
    $i278 := $add.i64($i277, 1136);
    call {:si_unique_call 7051} {:cexpr "__cil_tmp216"} {:si_old_unique_call 2012} boogie_si_record_i64($i278);
    goto corral_source_split_3803;

  corral_source_split_3803:
    assume {:verifier.code 0} true;
    $p279 := $i2p.i64.ref($i278);
    goto corral_source_split_3804;

  corral_source_split_3804:
    assume {:verifier.code 0} true;
    havoc $i280;
    call {:si_unique_call 7052} {:cexpr "__cil_tmp217"} {:si_old_unique_call 2013} boogie_si_record_i64($i280);
    goto corral_source_split_3805;

  corral_source_split_3805:
    assume {:verifier.code 0} true;
    $i281 := $ne.i64($i280, 0);
    goto corral_source_split_3806;

  corral_source_split_3806:
    assume {:verifier.code 0} true;
    assume {:branchcond $i281} true;
    goto $bb95, $bb96;

  $bb96:
    assume !($i281 == 1);
    assume {:verifier.code 0} true;
    $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367 := $i159, $i154, $i164, $i143, $i138, $i133, $i149, $i57;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3888;

  corral_source_split_3888:
    assume {:verifier.code 0} true;
    $i368 := $lshr.i32($i13, 3);
    call {:si_unique_call 7053} {:cexpr "__cil_tmp264"} {:si_old_unique_call 2066} boogie_si_record_i32($i368);
    goto corral_source_split_3889;

  corral_source_split_3889:
    assume {:verifier.code 0} true;
    $i369 := $sub.i32($i368, 1);
    call {:si_unique_call 7054} {:cexpr "h_disp"} {:si_old_unique_call 2067} boogie_si_record_i32($i369);
    goto corral_source_split_3890;

  corral_source_split_3890:
    assume {:verifier.code 0} true;
    $i370 := $lshr.i32($i365, 3);
    call {:si_unique_call 7055} {:cexpr "__cil_tmp265"} {:si_old_unique_call 2068} boogie_si_record_i32($i370);
    goto corral_source_split_3891;

  corral_source_split_3891:
    assume {:verifier.code 0} true;
    $i371 := $sub.i32($i370, 1);
    call {:si_unique_call 7056} {:cexpr "h_sync_strt"} {:si_old_unique_call 2069} boogie_si_record_i32($i371);
    goto corral_source_split_3892;

  corral_source_split_3892:
    assume {:verifier.code 0} true;
    $i372 := $lshr.i32($i364, 3);
    call {:si_unique_call 7057} {:cexpr "__cil_tmp266"} {:si_old_unique_call 2070} boogie_si_record_i32($i372);
    goto corral_source_split_3893;

  corral_source_split_3893:
    assume {:verifier.code 0} true;
    $i373 := $sub.i32($i372, 1);
    call {:si_unique_call 7058} {:cexpr "h_sync_end"} {:si_old_unique_call 2071} boogie_si_record_i32($i373);
    goto corral_source_split_3894;

  corral_source_split_3894:
    assume {:verifier.code 0} true;
    $i374 := $lshr.i32($i366, 3);
    call {:si_unique_call 7059} {:cexpr "__cil_tmp267"} {:si_old_unique_call 2072} boogie_si_record_i32($i374);
    goto corral_source_split_3895;

  corral_source_split_3895:
    assume {:verifier.code 0} true;
    $i375 := $sub.i32($i374, 1);
    call {:si_unique_call 7060} {:cexpr "h_total"} {:si_old_unique_call 2073} boogie_si_record_i32($i375);
    goto corral_source_split_3896;

  corral_source_split_3896:
    assume {:verifier.code 0} true;
    $i376 := $sub.i32($i373, $i371);
    call {:si_unique_call 7061} {:cexpr "h_sync_wid"} {:si_old_unique_call 2074} boogie_si_record_i32($i376);
    goto corral_source_split_3897;

  corral_source_split_3897:
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    $i377 := $ugt.i32($i369, 255);
    goto corral_source_split_3899;

  corral_source_split_3899:
    assume {:verifier.code 0} true;
    assume {:branchcond $i377} true;
    goto $bb109, $bb110;

  $bb110:
    assume !($i377 == 1);
    assume {:verifier.code 0} true;
    goto $bb114;

  $bb114:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    goto $bb117;

  $bb117:
    assume {:verifier.code 0} true;
    $i385 := $ugt.i32($i371, 511);
    goto corral_source_split_3912;

  corral_source_split_3912:
    assume {:verifier.code 0} true;
    assume {:branchcond $i385} true;
    goto $bb118, $bb119;

  $bb119:
    assume !($i385 == 1);
    assume {:verifier.code 0} true;
    goto $bb123;

  $bb123:
    assume {:verifier.code 0} true;
    goto $bb124;

  $bb124:
    assume {:verifier.code 0} true;
    $i393 := $ugt.i32($i376, 31);
    goto corral_source_split_3925;

  corral_source_split_3925:
    assume {:verifier.code 0} true;
    assume {:branchcond $i393} true;
    goto $bb125, $bb126;

  $bb126:
    assume !($i393 == 1);
    assume {:verifier.code 0} true;
    $i394 := $i376;
    goto $bb127;

  $bb127:
    assume {:verifier.code 0} true;
    goto corral_source_split_3929;

  corral_source_split_3929:
    assume {:verifier.code 0} true;
    goto $bb128;

  $bb128:
    assume {:verifier.code 0} true;
    goto $bb129;

  $bb129:
    assume {:verifier.code 0} true;
    $i395 := $ugt.i32($i375, 511);
    goto corral_source_split_3931;

  corral_source_split_3931:
    assume {:verifier.code 0} true;
    assume {:branchcond $i395} true;
    goto $bb130, $bb131;

  $bb131:
    assume !($i395 == 1);
    assume {:verifier.code 0} true;
    goto $bb135;

  $bb135:
    assume {:verifier.code 0} true;
    goto $bb136;

  $bb136:
    assume {:verifier.code 0} true;
    $i403 := $and.i32($i367, 2);
    goto corral_source_split_3944;

  corral_source_split_3944:
    assume {:verifier.code 0} true;
    $i404 := $ne.i32($i403, 0);
    goto corral_source_split_3945;

  corral_source_split_3945:
    assume {:verifier.code 0} true;
    assume {:branchcond $i404} true;
    goto $bb137, $bb138;

  $bb138:
    assume !($i404 == 1);
    assume {:verifier.code 0} true;
    $i409, $i410, $i411, $i412 := $i360, $i361, $i17, $i362;
    goto $bb139;

  $bb139:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3953;

  corral_source_split_3953:
    assume {:verifier.code 0} true;
    $i413 := $p2i.ref.i64($p9);
    call {:si_unique_call 7062} {:cexpr "__cil_tmp280"} {:si_old_unique_call 2094} boogie_si_record_i64($i413);
    goto corral_source_split_3954;

  corral_source_split_3954:
    assume {:verifier.code 0} true;
    $i414 := $add.i64($i413, 1136);
    call {:si_unique_call 7063} {:cexpr "__cil_tmp281"} {:si_old_unique_call 2095} boogie_si_record_i64($i414);
    goto corral_source_split_3955;

  corral_source_split_3955:
    assume {:verifier.code 0} true;
    $p415 := $i2p.i64.ref($i414);
    goto corral_source_split_3956;

  corral_source_split_3956:
    assume {:verifier.code 0} true;
    havoc $i416;
    call {:si_unique_call 7064} {:cexpr "__cil_tmp282"} {:si_old_unique_call 2096} boogie_si_record_i64($i416);
    goto corral_source_split_3957;

  corral_source_split_3957:
    assume {:verifier.code 0} true;
    $i417 := $ne.i64($i416, 0);
    goto corral_source_split_3958;

  corral_source_split_3958:
    assume {:verifier.code 0} true;
    assume {:branchcond $i417} true;
    goto $bb140, $bb141;

  $bb141:
    assume !($i417 == 1);
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb145:
    assume {:verifier.code 0} true;
    $i425 := $sub.i32($i411, 1);
    call {:si_unique_call 7065} {:cexpr "v_disp"} {:si_old_unique_call 2101} boogie_si_record_i32($i425);
    goto corral_source_split_3971;

  corral_source_split_3971:
    assume {:verifier.code 0} true;
    $i426 := $sub.i32($i410, 1);
    call {:si_unique_call 7066} {:cexpr "v_sync_strt"} {:si_old_unique_call 2102} boogie_si_record_i32($i426);
    goto corral_source_split_3972;

  corral_source_split_3972:
    assume {:verifier.code 0} true;
    $i427 := $sub.i32($i409, 1);
    call {:si_unique_call 7067} {:cexpr "v_sync_end"} {:si_old_unique_call 2103} boogie_si_record_i32($i427);
    goto corral_source_split_3973;

  corral_source_split_3973:
    assume {:verifier.code 0} true;
    $i428 := $sub.i32($i412, 1);
    call {:si_unique_call 7068} {:cexpr "v_total"} {:si_old_unique_call 2104} boogie_si_record_i32($i428);
    goto corral_source_split_3974;

  corral_source_split_3974:
    assume {:verifier.code 0} true;
    $i429 := $sub.i32($i427, $i426);
    call {:si_unique_call 7069} {:cexpr "v_sync_wid"} {:si_old_unique_call 2105} boogie_si_record_i32($i429);
    goto corral_source_split_3975;

  corral_source_split_3975:
    assume {:verifier.code 0} true;
    goto $bb146;

  $bb146:
    assume {:verifier.code 0} true;
    goto $bb147;

  $bb147:
    assume {:verifier.code 0} true;
    $i430 := $ugt.i32($i425, 2047);
    goto corral_source_split_3977;

  corral_source_split_3977:
    assume {:verifier.code 0} true;
    assume {:branchcond $i430} true;
    goto $bb148, $bb149;

  $bb149:
    assume !($i430 == 1);
    assume {:verifier.code 0} true;
    goto $bb153;

  $bb153:
    assume {:verifier.code 0} true;
    goto $bb154;

  $bb154:
    assume {:verifier.code 0} true;
    goto $bb155;

  $bb155:
    assume {:verifier.code 0} true;
    goto $bb156;

  $bb156:
    assume {:verifier.code 0} true;
    $i438 := $ugt.i32($i426, 2047);
    goto corral_source_split_3990;

  corral_source_split_3990:
    assume {:verifier.code 0} true;
    assume {:branchcond $i438} true;
    goto $bb157, $bb158;

  $bb158:
    assume !($i438 == 1);
    assume {:verifier.code 0} true;
    goto $bb162;

  $bb162:
    assume {:verifier.code 0} true;
    goto $bb163;

  $bb163:
    assume {:verifier.code 0} true;
    $i446 := $ugt.i32($i429, 31);
    goto corral_source_split_4003;

  corral_source_split_4003:
    assume {:verifier.code 0} true;
    assume {:branchcond $i446} true;
    goto $bb164, $bb165;

  $bb165:
    assume !($i446 == 1);
    assume {:verifier.code 0} true;
    $i447 := $i429;
    goto $bb166;

  $bb166:
    assume {:verifier.code 0} true;
    goto corral_source_split_4007;

  corral_source_split_4007:
    assume {:verifier.code 0} true;
    goto $bb167;

  $bb167:
    assume {:verifier.code 0} true;
    goto $bb168;

  $bb168:
    assume {:verifier.code 0} true;
    $i448 := $ugt.i32($i428, 2047);
    goto corral_source_split_4009;

  corral_source_split_4009:
    assume {:verifier.code 0} true;
    assume {:branchcond $i448} true;
    goto $bb169, $bb170;

  $bb170:
    assume !($i448 == 1);
    assume {:verifier.code 0} true;
    goto $bb174;

  $bb174:
    assume {:verifier.code 0} true;
    goto $bb175;

  $bb175:
    assume {:verifier.code 0} true;
    $i456 := $and.i32($i53, 8);
    goto corral_source_split_4022;

  corral_source_split_4022:
    assume {:verifier.code 0} true;
    $i457 := $ne.i32($i456, 0);
    goto corral_source_split_4023;

  corral_source_split_4023:
    assume {:verifier.code 0} true;
    assume {:branchcond $i457} true;
    goto $bb176, $bb177;

  $bb177:
    assume !($i457 == 1);
    assume {:verifier.code 0} true;
    $i458 := 0;
    goto $bb178;

  $bb178:
    assume {:verifier.code 0} true;
    goto corral_source_split_4027;

  corral_source_split_4027:
    assume {:verifier.code 0} true;
    $p459 := $bitcast.ref.ref($p2);
    goto corral_source_split_4028;

  corral_source_split_4028:
    assume {:verifier.code 0} true;
    goto corral_source_split_4029;

  corral_source_split_4029:
    assume {:verifier.code 0} true;
    $i460 := $p2i.ref.i64($p2);
    call {:si_unique_call 7070} {:cexpr "__cil_tmp302"} {:si_old_unique_call 2121} boogie_si_record_i64($i460);
    goto corral_source_split_4030;

  corral_source_split_4030:
    assume {:verifier.code 0} true;
    $i461 := $add.i64($i460, 4);
    call {:si_unique_call 7071} {:cexpr "__cil_tmp303"} {:si_old_unique_call 2122} boogie_si_record_i64($i461);
    goto corral_source_split_4031;

  corral_source_split_4031:
    assume {:verifier.code 0} true;
    $p462 := $i2p.i64.ref($i461);
    goto corral_source_split_4032;

  corral_source_split_4032:
    assume {:verifier.code 0} true;
    goto corral_source_split_4033;

  corral_source_split_4033:
    assume {:verifier.code 0} true;
    $i463 := $p2i.ref.i64($p2);
    call {:si_unique_call 7072} {:cexpr "__cil_tmp304"} {:si_old_unique_call 2123} boogie_si_record_i64($i463);
    goto corral_source_split_4034;

  corral_source_split_4034:
    assume {:verifier.code 0} true;
    $i464 := $add.i64($i463, 8);
    call {:si_unique_call 7073} {:cexpr "__cil_tmp305"} {:si_old_unique_call 2124} boogie_si_record_i64($i464);
    goto corral_source_split_4035;

  corral_source_split_4035:
    assume {:verifier.code 0} true;
    $p465 := $i2p.i64.ref($i464);
    goto corral_source_split_4036;

  corral_source_split_4036:
    assume {:verifier.code 0} true;
    goto corral_source_split_4037;

  corral_source_split_4037:
    assume {:verifier.code 0} true;
    $i466 := $p2i.ref.i64($p2);
    call {:si_unique_call 7074} {:cexpr "__cil_tmp306"} {:si_old_unique_call 2125} boogie_si_record_i64($i466);
    goto corral_source_split_4038;

  corral_source_split_4038:
    assume {:verifier.code 0} true;
    $i467 := $add.i64($i466, 12);
    call {:si_unique_call 7075} {:cexpr "__cil_tmp307"} {:si_old_unique_call 2126} boogie_si_record_i64($i467);
    goto corral_source_split_4039;

  corral_source_split_4039:
    assume {:verifier.code 0} true;
    $p468 := $i2p.i64.ref($i467);
    goto corral_source_split_4040;

  corral_source_split_4040:
    assume {:verifier.code 0} true;
    goto corral_source_split_4041;

  corral_source_split_4041:
    assume {:verifier.code 0} true;
    $i469 := $p2i.ref.i64($p2);
    call {:si_unique_call 7076} {:cexpr "__cil_tmp308"} {:si_old_unique_call 2127} boogie_si_record_i64($i469);
    goto corral_source_split_4042;

  corral_source_split_4042:
    assume {:verifier.code 0} true;
    $i470 := $add.i64($i469, 16);
    call {:si_unique_call 7077} {:cexpr "__cil_tmp309"} {:si_old_unique_call 2128} boogie_si_record_i64($i470);
    goto corral_source_split_4043;

  corral_source_split_4043:
    assume {:verifier.code 0} true;
    $p471 := $i2p.i64.ref($i470);
    goto corral_source_split_4044;

  corral_source_split_4044:
    assume {:verifier.code 0} true;
    goto corral_source_split_4045;

  corral_source_split_4045:
    assume {:verifier.code 0} true;
    $i472 := $p2i.ref.i64($p2);
    call {:si_unique_call 7078} {:cexpr "__cil_tmp310"} {:si_old_unique_call 2129} boogie_si_record_i64($i472);
    goto corral_source_split_4046;

  corral_source_split_4046:
    assume {:verifier.code 0} true;
    $i473 := $add.i64($i472, 40);
    call {:si_unique_call 7079} {:cexpr "__cil_tmp311"} {:si_old_unique_call 2130} boogie_si_record_i64($i473);
    goto corral_source_split_4047;

  corral_source_split_4047:
    assume {:verifier.code 0} true;
    $i474 := $udiv.i32($i100, $i70);
    call {:si_unique_call 7080} {:cexpr "__cil_tmp312"} {:si_old_unique_call 2131} boogie_si_record_i32($i474);
    goto corral_source_split_4048;

  corral_source_split_4048:
    assume {:verifier.code 0} true;
    $i475 := $shl.i32($i474, 22);
    call {:si_unique_call 7081} {:cexpr "__cil_tmp313"} {:si_old_unique_call 2132} boogie_si_record_i32($i475);
    goto corral_source_split_4049;

  corral_source_split_4049:
    assume {:verifier.code 0} true;
    $i476 := $mul.i32($i33, $i70);
    call {:si_unique_call 7082} {:cexpr "__cil_tmp314"} {:si_old_unique_call 2133} boogie_si_record_i32($i476);
    goto corral_source_split_4050;

  corral_source_split_4050:
    assume {:verifier.code 0} true;
    $i477 := $udiv.i32($i476, 8);
    call {:si_unique_call 7083} {:cexpr "__cil_tmp315"} {:si_old_unique_call 2134} boogie_si_record_i32($i477);
    goto corral_source_split_4051;

  corral_source_split_4051:
    assume {:verifier.code 0} true;
    $i478 := $mul.i32($i37, $i100);
    call {:si_unique_call 7084} {:cexpr "__cil_tmp316"} {:si_old_unique_call 2135} boogie_si_record_i32($i478);
    goto corral_source_split_4052;

  corral_source_split_4052:
    assume {:verifier.code 0} true;
    $i479 := $add.i32($i478, $i477);
    call {:si_unique_call 7085} {:cexpr "__cil_tmp317"} {:si_old_unique_call 2136} boogie_si_record_i32($i479);
    goto corral_source_split_4053;

  corral_source_split_4053:
    assume {:verifier.code 0} true;
    $i480 := $udiv.i32($i479, 8);
    call {:si_unique_call 7086} {:cexpr "__cil_tmp318"} {:si_old_unique_call 2137} boogie_si_record_i32($i480);
    goto corral_source_split_4054;

  corral_source_split_4054:
    assume {:verifier.code 0} true;
    $i481 := $or.i32($i480, $i475);
    goto corral_source_split_4055;

  corral_source_split_4055:
    assume {:verifier.code 0} true;
    $p482 := $i2p.i64.ref($i473);
    goto corral_source_split_4056;

  corral_source_split_4056:
    assume {:verifier.code 0} true;
    goto corral_source_split_4057;

  corral_source_split_4057:
    assume {:verifier.code 0} true;
    $i483 := $p2i.ref.i64($p2);
    call {:si_unique_call 7087} {:cexpr "__cil_tmp319"} {:si_old_unique_call 2138} boogie_si_record_i64($i483);
    goto corral_source_split_4058;

  corral_source_split_4058:
    assume {:verifier.code 0} true;
    $i484 := $add.i64($i483, 36);
    call {:si_unique_call 7088} {:cexpr "__cil_tmp320"} {:si_old_unique_call 2139} boogie_si_record_i64($i484);
    goto corral_source_split_4059;

  corral_source_split_4059:
    assume {:verifier.code 0} true;
    $p485 := $i2p.i64.ref($i484);
    goto corral_source_split_4060;

  corral_source_split_4060:
    assume {:verifier.code 0} true;
    goto corral_source_split_4061;

  corral_source_split_4061:
    assume {:verifier.code 0} true;
    $i486 := $p2i.ref.i64($p2);
    call {:si_unique_call 7089} {:cexpr "__cil_tmp321"} {:si_old_unique_call 2140} boogie_si_record_i64($i486);
    goto corral_source_split_4062;

  corral_source_split_4062:
    assume {:verifier.code 0} true;
    $i487 := $add.i64($i486, 20);
    call {:si_unique_call 7090} {:cexpr "__cil_tmp322"} {:si_old_unique_call 2141} boogie_si_record_i64($i487);
    goto corral_source_split_4063;

  corral_source_split_4063:
    assume {:verifier.code 0} true;
    $i488 := $shl.i32($i369, 16);
    call {:si_unique_call 7091} {:cexpr "__cil_tmp323"} {:si_old_unique_call 2142} boogie_si_record_i32($i488);
    goto corral_source_split_4064;

  corral_source_split_4064:
    assume {:verifier.code 0} true;
    $i489 := $or.i32($i375, $i488);
    goto corral_source_split_4065;

  corral_source_split_4065:
    assume {:verifier.code 0} true;
    $p490 := $i2p.i64.ref($i487);
    goto corral_source_split_4066;

  corral_source_split_4066:
    assume {:verifier.code 0} true;
    goto corral_source_split_4067;

  corral_source_split_4067:
    assume {:verifier.code 0} true;
    $i491 := $p2i.ref.i64($p2);
    call {:si_unique_call 7092} {:cexpr "__cil_tmp324"} {:si_old_unique_call 2143} boogie_si_record_i64($i491);
    goto corral_source_split_4068;

  corral_source_split_4068:
    assume {:verifier.code 0} true;
    $i492 := $add.i64($i491, 24);
    call {:si_unique_call 7093} {:cexpr "__cil_tmp325"} {:si_old_unique_call 2144} boogie_si_record_i64($i492);
    goto corral_source_split_4069;

  corral_source_split_4069:
    assume {:verifier.code 0} true;
    $i493 := $shl.i32($i116, 21);
    call {:si_unique_call 7094} {:cexpr "__cil_tmp326"} {:si_old_unique_call 2145} boogie_si_record_i32($i493);
    goto corral_source_split_4070;

  corral_source_split_4070:
    assume {:verifier.code 0} true;
    $i494 := $shl.i32($i394, 16);
    call {:si_unique_call 7095} {:cexpr "__cil_tmp327"} {:si_old_unique_call 2146} boogie_si_record_i32($i494);
    goto corral_source_split_4071;

  corral_source_split_4071:
    assume {:verifier.code 0} true;
    $i495 := $and.i32($i371, 256);
    call {:si_unique_call 7096} {:cexpr "__cil_tmp328"} {:si_old_unique_call 2147} boogie_si_record_i32($i495);
    goto corral_source_split_4072;

  corral_source_split_4072:
    assume {:verifier.code 0} true;
    $i496 := $shl.i32($i495, 4);
    call {:si_unique_call 7097} {:cexpr "__cil_tmp329"} {:si_old_unique_call 2148} boogie_si_record_i32($i496);
    goto corral_source_split_4073;

  corral_source_split_4073:
    assume {:verifier.code 0} true;
    $i497 := $shl.i32($i363, 8);
    call {:si_unique_call 7098} {:cexpr "__cil_tmp330"} {:si_old_unique_call 2149} boogie_si_record_i32($i497);
    goto corral_source_split_4074;

  corral_source_split_4074:
    assume {:verifier.code 0} true;
    $i498 := $and.i32($i371, 255);
    call {:si_unique_call 7099} {:cexpr "__cil_tmp331"} {:si_old_unique_call 2150} boogie_si_record_i32($i498);
    goto corral_source_split_4075;

  corral_source_split_4075:
    assume {:verifier.code 0} true;
    $i499 := $or.i32($i498, $i497);
    call {:si_unique_call 7100} {:cexpr "__cil_tmp332"} {:si_old_unique_call 2151} boogie_si_record_i32($i499);
    goto corral_source_split_4076;

  corral_source_split_4076:
    assume {:verifier.code 0} true;
    $i500 := $or.i32($i499, $i496);
    call {:si_unique_call 7101} {:cexpr "__cil_tmp333"} {:si_old_unique_call 2152} boogie_si_record_i32($i500);
    goto corral_source_split_4077;

  corral_source_split_4077:
    assume {:verifier.code 0} true;
    $i501 := $or.i32($i500, $i494);
    call {:si_unique_call 7102} {:cexpr "__cil_tmp334"} {:si_old_unique_call 2153} boogie_si_record_i32($i501);
    goto corral_source_split_4078;

  corral_source_split_4078:
    assume {:verifier.code 0} true;
    $i502 := $or.i32($i501, $i493);
    goto corral_source_split_4079;

  corral_source_split_4079:
    assume {:verifier.code 0} true;
    $p503 := $i2p.i64.ref($i492);
    goto corral_source_split_4080;

  corral_source_split_4080:
    assume {:verifier.code 0} true;
    goto corral_source_split_4081;

  corral_source_split_4081:
    assume {:verifier.code 0} true;
    $i504 := $p2i.ref.i64($p2);
    call {:si_unique_call 7103} {:cexpr "__cil_tmp335"} {:si_old_unique_call 2154} boogie_si_record_i64($i504);
    goto corral_source_split_4082;

  corral_source_split_4082:
    assume {:verifier.code 0} true;
    $i505 := $add.i64($i504, 28);
    call {:si_unique_call 7104} {:cexpr "__cil_tmp336"} {:si_old_unique_call 2155} boogie_si_record_i64($i505);
    goto corral_source_split_4083;

  corral_source_split_4083:
    assume {:verifier.code 0} true;
    $i506 := $shl.i32($i425, 16);
    call {:si_unique_call 7105} {:cexpr "__cil_tmp337"} {:si_old_unique_call 2156} boogie_si_record_i32($i506);
    goto corral_source_split_4084;

  corral_source_split_4084:
    assume {:verifier.code 0} true;
    $i507 := $or.i32($i428, $i506);
    goto corral_source_split_4085;

  corral_source_split_4085:
    assume {:verifier.code 0} true;
    $p508 := $i2p.i64.ref($i505);
    goto corral_source_split_4086;

  corral_source_split_4086:
    assume {:verifier.code 0} true;
    goto corral_source_split_4087;

  corral_source_split_4087:
    assume {:verifier.code 0} true;
    $i509 := $p2i.ref.i64($p2);
    call {:si_unique_call 7106} {:cexpr "__cil_tmp338"} {:si_old_unique_call 2157} boogie_si_record_i64($i509);
    goto corral_source_split_4088;

  corral_source_split_4088:
    assume {:verifier.code 0} true;
    $i510 := $add.i64($i509, 32);
    call {:si_unique_call 7107} {:cexpr "__cil_tmp339"} {:si_old_unique_call 2158} boogie_si_record_i64($i510);
    goto corral_source_split_4089;

  corral_source_split_4089:
    assume {:verifier.code 0} true;
    $i511 := $shl.i32($i119, 21);
    call {:si_unique_call 7108} {:cexpr "__cil_tmp340"} {:si_old_unique_call 2159} boogie_si_record_i32($i511);
    goto corral_source_split_4090;

  corral_source_split_4090:
    assume {:verifier.code 0} true;
    $i512 := $shl.i32($i447, 16);
    call {:si_unique_call 7109} {:cexpr "__cil_tmp341"} {:si_old_unique_call 2160} boogie_si_record_i32($i512);
    goto corral_source_split_4091;

  corral_source_split_4091:
    assume {:verifier.code 0} true;
    $i513 := $or.i32($i426, $i512);
    call {:si_unique_call 7110} {:cexpr "__cil_tmp342"} {:si_old_unique_call 2161} boogie_si_record_i32($i513);
    goto corral_source_split_4092;

  corral_source_split_4092:
    assume {:verifier.code 0} true;
    $i514 := $or.i32($i513, $i511);
    goto corral_source_split_4093;

  corral_source_split_4093:
    assume {:verifier.code 0} true;
    $p515 := $i2p.i64.ref($i510);
    goto corral_source_split_4094;

  corral_source_split_4094:
    assume {:verifier.code 0} true;
    goto corral_source_split_4095;

  corral_source_split_4095:
    assume {:verifier.code 0} true;
    $i516 := $p2i.ref.i64($p2);
    call {:si_unique_call 7111} {:cexpr "__cil_tmp343"} {:si_old_unique_call 2162} boogie_si_record_i64($i516);
    goto corral_source_split_4096;

  corral_source_split_4096:
    assume {:verifier.code 0} true;
    $i517 := $add.i64($i516, 44);
    call {:si_unique_call 7112} {:cexpr "__cil_tmp344"} {:si_old_unique_call 2163} boogie_si_record_i64($i517);
    goto corral_source_split_4097;

  corral_source_split_4097:
    assume {:verifier.code 0} true;
    $i518 := $or.i32(50331648, $i69);
    call {:si_unique_call 7113} {:cexpr "__cil_tmp345"} {:si_old_unique_call 2164} boogie_si_record_i32($i518);
    goto corral_source_split_4098;

  corral_source_split_4098:
    assume {:verifier.code 0} true;
    $i519 := $or.i32($i518, $i458);
    goto corral_source_split_4099;

  corral_source_split_4099:
    assume {:verifier.code 0} true;
    $p520 := $i2p.i64.ref($i517);
    goto corral_source_split_4100;

  corral_source_split_4100:
    assume {:verifier.code 0} true;
    goto corral_source_split_4101;

  corral_source_split_4101:
    assume {:verifier.code 0} true;
    $i521 := $p2i.ref.i64($p2);
    call {:si_unique_call 7114} {:cexpr "__cil_tmp346"} {:si_old_unique_call 2165} boogie_si_record_i64($i521);
    goto corral_source_split_4102;

  corral_source_split_4102:
    assume {:verifier.code 0} true;
    $i522 := $add.i64($i521, 44);
    call {:si_unique_call 7115} {:cexpr "__cil_tmp347"} {:si_old_unique_call 2166} boogie_si_record_i64($i522);
    goto corral_source_split_4103;

  corral_source_split_4103:
    assume {:verifier.code 0} true;
    $i523 := $p2i.ref.i64($p2);
    call {:si_unique_call 7116} {:cexpr "__cil_tmp348"} {:si_old_unique_call 2167} boogie_si_record_i64($i523);
    goto corral_source_split_4104;

  corral_source_split_4104:
    assume {:verifier.code 0} true;
    $i524 := $add.i64($i523, 44);
    call {:si_unique_call 7117} {:cexpr "__cil_tmp349"} {:si_old_unique_call 2168} boogie_si_record_i64($i524);
    goto corral_source_split_4105;

  corral_source_split_4105:
    assume {:verifier.code 0} true;
    $p525 := $i2p.i64.ref($i524);
    goto corral_source_split_4106;

  corral_source_split_4106:
    assume {:verifier.code 0} true;
    havoc $i526;
    call {:si_unique_call 7118} {:cexpr "__cil_tmp350"} {:si_old_unique_call 2169} boogie_si_record_i32($i526);
    goto corral_source_split_4107;

  corral_source_split_4107:
    assume {:verifier.code 0} true;
    $i527 := $or.i32($i526, 134217728);
    goto corral_source_split_4108;

  corral_source_split_4108:
    assume {:verifier.code 0} true;
    $p528 := $i2p.i64.ref($i522);
    goto corral_source_split_4109;

  corral_source_split_4109:
    assume {:verifier.code 0} true;
    goto corral_source_split_4110;

  corral_source_split_4110:
    assume {:verifier.code 0} true;
    $i529 := $and.i32($i367, 2);
    goto corral_source_split_4111;

  corral_source_split_4111:
    assume {:verifier.code 0} true;
    $i530 := $ne.i32($i529, 0);
    goto corral_source_split_4112;

  corral_source_split_4112:
    assume {:verifier.code 0} true;
    assume {:branchcond $i530} true;
    goto $bb179, $bb180;

  $bb180:
    assume !($i530 == 1);
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb181:
    assume {:verifier.code 0} true;
    $i539 := $and.i32($i367, 1);
    goto corral_source_split_4125;

  corral_source_split_4125:
    assume {:verifier.code 0} true;
    $i540 := $ne.i32($i539, 0);
    goto corral_source_split_4126;

  corral_source_split_4126:
    assume {:verifier.code 0} true;
    assume {:branchcond $i540} true;
    goto $bb182, $bb183;

  $bb183:
    assume !($i540 == 1);
    assume {:verifier.code 0} true;
    goto $bb184;

  $bb184:
    assume {:verifier.code 0} true;
    $i549 := $p2i.ref.i64($p9);
    call {:si_unique_call 7119} {:cexpr "__cil_tmp361"} {:si_old_unique_call 2180} boogie_si_record_i64($i549);
    goto corral_source_split_4139;

  corral_source_split_4139:
    assume {:verifier.code 0} true;
    $i550 := $add.i64($i549, 1136);
    call {:si_unique_call 7120} {:cexpr "__cil_tmp362"} {:si_old_unique_call 2181} boogie_si_record_i64($i550);
    goto corral_source_split_4140;

  corral_source_split_4140:
    assume {:verifier.code 0} true;
    $p551 := $i2p.i64.ref($i550);
    goto corral_source_split_4141;

  corral_source_split_4141:
    assume {:verifier.code 0} true;
    havoc $i552;
    call {:si_unique_call 7121} {:cexpr "__cil_tmp363"} {:si_old_unique_call 2182} boogie_si_record_i64($i552);
    goto corral_source_split_4142;

  corral_source_split_4142:
    assume {:verifier.code 0} true;
    $i553 := $ne.i64($i552, 0);
    goto corral_source_split_4143;

  corral_source_split_4143:
    assume {:verifier.code 0} true;
    assume {:branchcond $i553} true;
    goto $bb185, $bb186;

  $bb186:
    assume !($i553 == 1);
    assume {:verifier.code 0} true;
    goto $bb254;

  $bb254:
    assume {:verifier.code 0} true;
    $i831 := $p2i.ref.i64($p9);
    call {:si_unique_call 7122} {:cexpr "__cil_tmp538"} {:si_old_unique_call 2361} boogie_si_record_i64($i831);
    goto corral_source_split_4500;

  corral_source_split_4500:
    assume {:verifier.code 0} true;
    $i832 := $add.i64($i831, 1044);
    call {:si_unique_call 7123} {:cexpr "__cil_tmp539"} {:si_old_unique_call 2362} boogie_si_record_i64($i832);
    goto corral_source_split_4501;

  corral_source_split_4501:
    assume {:verifier.code 0} true;
    $p833 := $i2p.i64.ref($i832);
    goto corral_source_split_4502;

  corral_source_split_4502:
    assume {:verifier.code 0} true;
    havoc $i834;
    call {:si_unique_call 7124} {:cexpr "__cil_tmp540"} {:si_old_unique_call 2363} boogie_si_record_i32($i834);
    goto corral_source_split_4503;

  corral_source_split_4503:
    assume {:verifier.code 0} true;
    $i835 := $and.i32($i834, 2);
    goto corral_source_split_4504;

  corral_source_split_4504:
    assume {:verifier.code 0} true;
    $i836 := $ne.i32($i835, 0);
    goto corral_source_split_4505;

  corral_source_split_4505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i836} true;
    goto $bb255, $bb256;

  $bb256:
    assume !($i836 == 1);
    assume {:verifier.code 0} true;
    goto $bb257;

  $bb257:
    assume {:verifier.code 0} true;
    $i847 := $p2i.ref.i64($p2);
    call {:si_unique_call 7125} {:cexpr "__cil_tmp548"} {:si_old_unique_call 2372} boogie_si_record_i64($i847);
    goto corral_source_split_4520;

  corral_source_split_4520:
    assume {:verifier.code 0} true;
    $i848 := $add.i64($i847, 48);
    call {:si_unique_call 7126} {:cexpr "__cil_tmp549"} {:si_old_unique_call 2373} boogie_si_record_i64($i848);
    goto corral_source_split_4521;

  corral_source_split_4521:
    assume {:verifier.code 0} true;
    $p849 := $i2p.i64.ref($i848);
    goto corral_source_split_4522;

  corral_source_split_4522:
    assume {:verifier.code 0} true;
    goto corral_source_split_4523;

  corral_source_split_4523:
    assume {:verifier.code 0} true;
    $i850 := $p2i.ref.i64($p2);
    call {:si_unique_call 7127} {:cexpr "__cil_tmp550"} {:si_old_unique_call 2374} boogie_si_record_i64($i850);
    goto corral_source_split_4524;

  corral_source_split_4524:
    assume {:verifier.code 0} true;
    $i851 := $add.i64($i850, 52);
    call {:si_unique_call 7128} {:cexpr "__cil_tmp551"} {:si_old_unique_call 2375} boogie_si_record_i64($i851);
    goto corral_source_split_4525;

  corral_source_split_4525:
    assume {:verifier.code 0} true;
    $p852 := $i2p.i64.ref($i851);
    goto corral_source_split_4526;

  corral_source_split_4526:
    assume {:verifier.code 0} true;
    goto corral_source_split_4527;

  corral_source_split_4527:
    assume {:verifier.code 0} true;
    $i99 := 0;
    goto $bb37;

  $bb255:
    assume $i836 == 1;
    goto corral_source_split_4507;

  corral_source_split_4507:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7129} {:si_old_unique_call 2364} $i837 := aty_ld_le32(28, $p9);
    call {:si_unique_call 7130} {:cexpr "tmp___12"} {:si_old_unique_call 2365} boogie_si_record_i32($i837);
    goto corral_source_split_4508;

  corral_source_split_4508:
    assume {:verifier.code 0} true;
    $i838 := $p2i.ref.i64($p2);
    call {:si_unique_call 7131} {:cexpr "__cil_tmp542"} {:si_old_unique_call 2366} boogie_si_record_i64($i838);
    goto corral_source_split_4509;

  corral_source_split_4509:
    assume {:verifier.code 0} true;
    $i839 := $add.i64($i838, 44);
    call {:si_unique_call 7132} {:cexpr "__cil_tmp543"} {:si_old_unique_call 2367} boogie_si_record_i64($i839);
    goto corral_source_split_4510;

  corral_source_split_4510:
    assume {:verifier.code 0} true;
    $i840 := $and.i32($i837, 983040);
    call {:si_unique_call 7133} {:cexpr "__cil_tmp544"} {:si_old_unique_call 2368} boogie_si_record_i32($i840);
    goto corral_source_split_4511;

  corral_source_split_4511:
    assume {:verifier.code 0} true;
    $i841 := $p2i.ref.i64($p2);
    call {:si_unique_call 7134} {:cexpr "__cil_tmp545"} {:si_old_unique_call 2369} boogie_si_record_i64($i841);
    goto corral_source_split_4512;

  corral_source_split_4512:
    assume {:verifier.code 0} true;
    $i842 := $add.i64($i841, 44);
    call {:si_unique_call 7135} {:cexpr "__cil_tmp546"} {:si_old_unique_call 2370} boogie_si_record_i64($i842);
    goto corral_source_split_4513;

  corral_source_split_4513:
    assume {:verifier.code 0} true;
    $p843 := $i2p.i64.ref($i842);
    goto corral_source_split_4514;

  corral_source_split_4514:
    assume {:verifier.code 0} true;
    havoc $i844;
    call {:si_unique_call 7136} {:cexpr "__cil_tmp547"} {:si_old_unique_call 2371} boogie_si_record_i32($i844);
    goto corral_source_split_4515;

  corral_source_split_4515:
    assume {:verifier.code 0} true;
    $i845 := $or.i32($i844, $i840);
    goto corral_source_split_4516;

  corral_source_split_4516:
    assume {:verifier.code 0} true;
    $p846 := $i2p.i64.ref($i839);
    goto corral_source_split_4517;

  corral_source_split_4517:
    assume {:verifier.code 0} true;
    goto corral_source_split_4518;

  corral_source_split_4518:
    assume {:verifier.code 0} true;
    goto $bb257;

  $bb185:
    assume $i553 == 1;
    goto corral_source_split_4145;

  corral_source_split_4145:
    assume {:verifier.code 0} true;
    $i554 := $and.i32($i367, 2);
    goto corral_source_split_4146;

  corral_source_split_4146:
    assume {:verifier.code 0} true;
    $i555 := $ne.i32($i554, 0);
    goto corral_source_split_4147;

  corral_source_split_4147:
    assume {:verifier.code 0} true;
    assume {:branchcond $i555} true;
    goto $bb187, $bb188;

  $bb188:
    assume !($i555 == 1);
    assume {:verifier.code 0} true;
    $i557 := $i17;
    goto $bb189;

  $bb189:
    assume {:verifier.code 0} true;
    goto corral_source_split_4152;

  corral_source_split_4152:
    assume {:verifier.code 0} true;
    $i558 := $p2i.ref.i64($p2);
    call {:si_unique_call 7137} {:cexpr "__cil_tmp364"} {:si_old_unique_call 2184} boogie_si_record_i64($i558);
    goto corral_source_split_4153;

  corral_source_split_4153:
    assume {:verifier.code 0} true;
    $i559 := $add.i64($i558, 44);
    call {:si_unique_call 7138} {:cexpr "__cil_tmp365"} {:si_old_unique_call 2185} boogie_si_record_i64($i559);
    goto corral_source_split_4154;

  corral_source_split_4154:
    assume {:verifier.code 0} true;
    $i560 := $p2i.ref.i64($p2);
    call {:si_unique_call 7139} {:cexpr "__cil_tmp366"} {:si_old_unique_call 2186} boogie_si_record_i64($i560);
    goto corral_source_split_4155;

  corral_source_split_4155:
    assume {:verifier.code 0} true;
    $i561 := $add.i64($i560, 44);
    call {:si_unique_call 7140} {:cexpr "__cil_tmp367"} {:si_old_unique_call 2187} boogie_si_record_i64($i561);
    goto corral_source_split_4156;

  corral_source_split_4156:
    assume {:verifier.code 0} true;
    $p562 := $i2p.i64.ref($i561);
    goto corral_source_split_4157;

  corral_source_split_4157:
    assume {:verifier.code 0} true;
    havoc $i563;
    call {:si_unique_call 7141} {:cexpr "__cil_tmp368"} {:si_old_unique_call 2188} boogie_si_record_i32($i563);
    goto corral_source_split_4158;

  corral_source_split_4158:
    assume {:verifier.code 0} true;
    $i564 := $and.i32($i563, $sub.i32(0, 3014657));
    goto corral_source_split_4159;

  corral_source_split_4159:
    assume {:verifier.code 0} true;
    $p565 := $i2p.i64.ref($i559);
    goto corral_source_split_4160;

  corral_source_split_4160:
    assume {:verifier.code 0} true;
    goto corral_source_split_4161;

  corral_source_split_4161:
    assume {:verifier.code 0} true;
    $i566 := $p2i.ref.i64($p2);
    call {:si_unique_call 7142} {:cexpr "__cil_tmp369"} {:si_old_unique_call 2189} boogie_si_record_i64($i566);
    goto corral_source_split_4162;

  corral_source_split_4162:
    assume {:verifier.code 0} true;
    $i567 := $add.i64($i566, 84);
    call {:si_unique_call 7143} {:cexpr "__cil_tmp370"} {:si_old_unique_call 2190} boogie_si_record_i64($i567);
    goto corral_source_split_4163;

  corral_source_split_4163:
    assume {:verifier.code 0} true;
    $i568 := $p2i.ref.i64($p2);
    call {:si_unique_call 7144} {:cexpr "__cil_tmp371"} {:si_old_unique_call 2191} boogie_si_record_i64($i568);
    goto corral_source_split_4164;

  corral_source_split_4164:
    assume {:verifier.code 0} true;
    $i569 := $add.i64($i568, 84);
    call {:si_unique_call 7145} {:cexpr "__cil_tmp372"} {:si_old_unique_call 2192} boogie_si_record_i64($i569);
    goto corral_source_split_4165;

  corral_source_split_4165:
    assume {:verifier.code 0} true;
    $p570 := $i2p.i64.ref($i569);
    goto corral_source_split_4166;

  corral_source_split_4166:
    assume {:verifier.code 0} true;
    havoc $i571;
    call {:si_unique_call 7146} {:cexpr "__cil_tmp373"} {:si_old_unique_call 2193} boogie_si_record_i32($i571);
    goto corral_source_split_4167;

  corral_source_split_4167:
    assume {:verifier.code 0} true;
    $i572 := $zext.i32.i64($i571);
    call {:si_unique_call 7147} {:cexpr "__cil_tmp374"} {:si_old_unique_call 2194} boogie_si_record_i64($i572);
    goto corral_source_split_4168;

  corral_source_split_4168:
    assume {:verifier.code 0} true;
    $i573 := $and.i64($i572, $sub.i64(0, 4026532869));
    call {:si_unique_call 7148} {:cexpr "__cil_tmp375"} {:si_old_unique_call 2195} boogie_si_record_i64($i573);
    goto corral_source_split_4169;

  corral_source_split_4169:
    assume {:verifier.code 0} true;
    $i574 := $trunc.i64.i32($i573);
    goto corral_source_split_4170;

  corral_source_split_4170:
    assume {:verifier.code 0} true;
    $p575 := $i2p.i64.ref($i567);
    goto corral_source_split_4171;

  corral_source_split_4171:
    assume {:verifier.code 0} true;
    goto corral_source_split_4172;

  corral_source_split_4172:
    assume {:verifier.code 0} true;
    $i576 := $p2i.ref.i64($p2);
    call {:si_unique_call 7149} {:cexpr "__cil_tmp376"} {:si_old_unique_call 2196} boogie_si_record_i64($i576);
    goto corral_source_split_4173;

  corral_source_split_4173:
    assume {:verifier.code 0} true;
    $i577 := $add.i64($i576, 84);
    call {:si_unique_call 7150} {:cexpr "__cil_tmp377"} {:si_old_unique_call 2197} boogie_si_record_i64($i577);
    goto corral_source_split_4174;

  corral_source_split_4174:
    assume {:verifier.code 0} true;
    $i578 := $p2i.ref.i64($p2);
    call {:si_unique_call 7151} {:cexpr "__cil_tmp378"} {:si_old_unique_call 2198} boogie_si_record_i64($i578);
    goto corral_source_split_4175;

  corral_source_split_4175:
    assume {:verifier.code 0} true;
    $i579 := $add.i64($i578, 84);
    call {:si_unique_call 7152} {:cexpr "__cil_tmp379"} {:si_old_unique_call 2199} boogie_si_record_i64($i579);
    goto corral_source_split_4176;

  corral_source_split_4176:
    assume {:verifier.code 0} true;
    $p580 := $i2p.i64.ref($i579);
    goto corral_source_split_4177;

  corral_source_split_4177:
    assume {:verifier.code 0} true;
    havoc $i581;
    call {:si_unique_call 7153} {:cexpr "__cil_tmp380"} {:si_old_unique_call 2200} boogie_si_record_i32($i581);
    goto corral_source_split_4178;

  corral_source_split_4178:
    assume {:verifier.code 0} true;
    $i582 := $zext.i32.i64($i581);
    call {:si_unique_call 7154} {:cexpr "__cil_tmp381"} {:si_old_unique_call 2201} boogie_si_record_i64($i582);
    goto corral_source_split_4179;

  corral_source_split_4179:
    assume {:verifier.code 0} true;
    $i583 := $or.i64($i582, 64);
    call {:si_unique_call 7155} {:cexpr "__cil_tmp382"} {:si_old_unique_call 2202} boogie_si_record_i64($i583);
    goto corral_source_split_4180;

  corral_source_split_4180:
    assume {:verifier.code 0} true;
    $i584 := $trunc.i64.i32($i583);
    goto corral_source_split_4181;

  corral_source_split_4181:
    assume {:verifier.code 0} true;
    $p585 := $i2p.i64.ref($i577);
    goto corral_source_split_4182;

  corral_source_split_4182:
    assume {:verifier.code 0} true;
    goto corral_source_split_4183;

  corral_source_split_4183:
    assume {:verifier.code 0} true;
    $i586 := $p2i.ref.i64($p2);
    call {:si_unique_call 7156} {:cexpr "__cil_tmp383"} {:si_old_unique_call 2203} boogie_si_record_i64($i586);
    goto corral_source_split_4184;

  corral_source_split_4184:
    assume {:verifier.code 0} true;
    $i587 := $add.i64($i586, 56);
    call {:si_unique_call 7157} {:cexpr "__cil_tmp384"} {:si_old_unique_call 2204} boogie_si_record_i64($i587);
    goto corral_source_split_4185;

  corral_source_split_4185:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7158} {:si_old_unique_call 2205} $i588 := aty_ld_lcd(4, $p9);
    goto corral_source_split_4186;

  corral_source_split_4186:
    assume {:verifier.code 0} true;
    $p589 := $i2p.i64.ref($i587);
    goto corral_source_split_4187;

  corral_source_split_4187:
    assume {:verifier.code 0} true;
    goto corral_source_split_4188;

  corral_source_split_4188:
    assume {:verifier.code 0} true;
    $i590 := $p2i.ref.i64($p9);
    call {:si_unique_call 7159} {:cexpr "__cil_tmp386"} {:si_old_unique_call 2206} boogie_si_record_i64($i590);
    goto corral_source_split_4189;

  corral_source_split_4189:
    assume {:verifier.code 0} true;
    $i591 := $add.i64($i590, 1044);
    call {:si_unique_call 7160} {:cexpr "__cil_tmp387"} {:si_old_unique_call 2207} boogie_si_record_i64($i591);
    goto corral_source_split_4190;

  corral_source_split_4190:
    assume {:verifier.code 0} true;
    $p592 := $i2p.i64.ref($i591);
    goto corral_source_split_4191;

  corral_source_split_4191:
    assume {:verifier.code 0} true;
    havoc $i593;
    call {:si_unique_call 7161} {:cexpr "__cil_tmp388"} {:si_old_unique_call 2208} boogie_si_record_i32($i593);
    goto corral_source_split_4192;

  corral_source_split_4192:
    assume {:verifier.code 0} true;
    $i594 := $and.i32($i593, 262144);
    call {:si_unique_call 7162} {:cexpr "__cil_tmp389"} {:si_old_unique_call 2209} boogie_si_record_i32($i594);
    goto corral_source_split_4193;

  corral_source_split_4193:
    assume {:verifier.code 0} true;
    $i595 := $ne.i32($i594, 0);
    goto corral_source_split_4194;

  corral_source_split_4194:
    assume {:verifier.code 0} true;
    assume {:branchcond $i595} true;
    goto $bb190, $bb191;

  $bb191:
    assume !($i595 == 1);
    goto corral_source_split_4196;

  corral_source_split_4196:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7163} {:si_old_unique_call 2210} $i596 := aty_ld_lcd(6, $p9);
    call {:si_unique_call 7164} {:cexpr "tmp___10"} {:si_old_unique_call 2211} boogie_si_record_i32($i596);
    goto corral_source_split_4197;

  corral_source_split_4197:
    assume {:verifier.code 0} true;
    $i597 := $p2i.ref.i64($p2);
    call {:si_unique_call 7165} {:cexpr "__cil_tmp391"} {:si_old_unique_call 2212} boogie_si_record_i64($i597);
    goto corral_source_split_4198;

  corral_source_split_4198:
    assume {:verifier.code 0} true;
    $i598 := $add.i64($i597, 64);
    call {:si_unique_call 7166} {:cexpr "__cil_tmp392"} {:si_old_unique_call 2213} boogie_si_record_i64($i598);
    goto corral_source_split_4199;

  corral_source_split_4199:
    assume {:verifier.code 0} true;
    $i599 := $zext.i32.i64($i596);
    call {:si_unique_call 7167} {:cexpr "__cil_tmp393"} {:si_old_unique_call 2214} boogie_si_record_i64($i599);
    goto corral_source_split_4200;

  corral_source_split_4200:
    assume {:verifier.code 0} true;
    $i600 := $and.i64($i599, $sub.i64(0, 4196352));
    call {:si_unique_call 7168} {:cexpr "__cil_tmp394"} {:si_old_unique_call 2215} boogie_si_record_i64($i600);
    goto corral_source_split_4201;

  corral_source_split_4201:
    assume {:verifier.code 0} true;
    $i601 := $trunc.i64.i32($i600);
    goto corral_source_split_4202;

  corral_source_split_4202:
    assume {:verifier.code 0} true;
    $p602 := $i2p.i64.ref($i598);
    goto corral_source_split_4203;

  corral_source_split_4203:
    assume {:verifier.code 0} true;
    goto corral_source_split_4204;

  corral_source_split_4204:
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb192:
    assume {:verifier.code 0} true;
    $i603 := $p2i.ref.i64($p2);
    call {:si_unique_call 7169} {:cexpr "__cil_tmp395"} {:si_old_unique_call 2216} boogie_si_record_i64($i603);
    goto corral_source_split_4206;

  corral_source_split_4206:
    assume {:verifier.code 0} true;
    $i604 := $add.i64($i603, 56);
    call {:si_unique_call 7170} {:cexpr "__cil_tmp396"} {:si_old_unique_call 2217} boogie_si_record_i64($i604);
    goto corral_source_split_4207;

  corral_source_split_4207:
    assume {:verifier.code 0} true;
    $i605 := $p2i.ref.i64($p2);
    call {:si_unique_call 7171} {:cexpr "__cil_tmp397"} {:si_old_unique_call 2218} boogie_si_record_i64($i605);
    goto corral_source_split_4208;

  corral_source_split_4208:
    assume {:verifier.code 0} true;
    $i606 := $add.i64($i605, 56);
    call {:si_unique_call 7172} {:cexpr "__cil_tmp398"} {:si_old_unique_call 2219} boogie_si_record_i64($i606);
    goto corral_source_split_4209;

  corral_source_split_4209:
    assume {:verifier.code 0} true;
    $p607 := $i2p.i64.ref($i606);
    goto corral_source_split_4210;

  corral_source_split_4210:
    assume {:verifier.code 0} true;
    havoc $i608;
    call {:si_unique_call 7173} {:cexpr "__cil_tmp399"} {:si_old_unique_call 2220} boogie_si_record_i32($i608);
    goto corral_source_split_4211;

  corral_source_split_4211:
    assume {:verifier.code 0} true;
    $i609 := $zext.i32.i64($i608);
    call {:si_unique_call 7174} {:cexpr "__cil_tmp400"} {:si_old_unique_call 2221} boogie_si_record_i64($i609);
    goto corral_source_split_4212;

  corral_source_split_4212:
    assume {:verifier.code 0} true;
    $i610 := $and.i64($i609, $sub.i64(0, 3758620672));
    call {:si_unique_call 7175} {:cexpr "__cil_tmp401"} {:si_old_unique_call 2222} boogie_si_record_i64($i610);
    goto corral_source_split_4213;

  corral_source_split_4213:
    assume {:verifier.code 0} true;
    $i611 := $trunc.i64.i32($i610);
    goto corral_source_split_4214;

  corral_source_split_4214:
    assume {:verifier.code 0} true;
    $p612 := $i2p.i64.ref($i604);
    goto corral_source_split_4215;

  corral_source_split_4215:
    assume {:verifier.code 0} true;
    goto corral_source_split_4216;

  corral_source_split_4216:
    assume {:verifier.code 0} true;
    $i613 := $p2i.ref.i64($p9);
    call {:si_unique_call 7176} {:cexpr "__cil_tmp402"} {:si_old_unique_call 2223} boogie_si_record_i64($i613);
    goto corral_source_split_4217;

  corral_source_split_4217:
    assume {:verifier.code 0} true;
    $i614 := $add.i64($i613, 1144);
    call {:si_unique_call 7177} {:cexpr "__cil_tmp403"} {:si_old_unique_call 2224} boogie_si_record_i64($i614);
    goto corral_source_split_4218;

  corral_source_split_4218:
    assume {:verifier.code 0} true;
    $p615 := $i2p.i64.ref($i614);
    goto corral_source_split_4219;

  corral_source_split_4219:
    assume {:verifier.code 0} true;
    havoc $i616;
    call {:si_unique_call 7178} {:cexpr "__cil_tmp404"} {:si_old_unique_call 2225} boogie_si_record_i16($i616);
    goto corral_source_split_4220;

  corral_source_split_4220:
    assume {:verifier.code 0} true;
    $i617 := $zext.i16.i32($i616);
    call {:si_unique_call 7179} {:cexpr "__cil_tmp405"} {:si_old_unique_call 2226} boogie_si_record_i32($i617);
    goto corral_source_split_4221;

  corral_source_split_4221:
    assume {:verifier.code 0} true;
    $i618 := $ult.i32($i13, $i617);
    goto corral_source_split_4222;

  corral_source_split_4222:
    assume {:verifier.code 0} true;
    assume {:branchcond $i618} true;
    goto $bb193, $bb194;

  $bb194:
    assume !($i618 == 1);
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb238:
    assume {:verifier.code 0} true;
    $i746 := $p2i.ref.i64($p9);
    call {:si_unique_call 7180} {:cexpr "__cil_tmp484"} {:si_old_unique_call 2308} boogie_si_record_i64($i746);
    goto corral_source_split_4392;

  corral_source_split_4392:
    assume {:verifier.code 0} true;
    $i747 := $add.i64($i746, 1146);
    call {:si_unique_call 7181} {:cexpr "__cil_tmp485"} {:si_old_unique_call 2309} boogie_si_record_i64($i747);
    goto corral_source_split_4393;

  corral_source_split_4393:
    assume {:verifier.code 0} true;
    $p748 := $i2p.i64.ref($i747);
    goto corral_source_split_4394;

  corral_source_split_4394:
    assume {:verifier.code 0} true;
    havoc $i749;
    call {:si_unique_call 7182} {:cexpr "__cil_tmp486"} {:si_old_unique_call 2310} boogie_si_record_i16($i749);
    goto corral_source_split_4395;

  corral_source_split_4395:
    assume {:verifier.code 0} true;
    $i750 := $zext.i16.i32($i749);
    call {:si_unique_call 7183} {:cexpr "__cil_tmp487"} {:si_old_unique_call 2311} boogie_si_record_i32($i750);
    goto corral_source_split_4396;

  corral_source_split_4396:
    assume {:verifier.code 0} true;
    $i751 := $ult.i32($i557, $i750);
    goto corral_source_split_4397;

  corral_source_split_4397:
    assume {:verifier.code 0} true;
    assume {:branchcond $i751} true;
    goto $bb239, $bb240;

  $bb240:
    assume !($i751 == 1);
    goto corral_source_split_4408;

  corral_source_split_4408:
    assume {:verifier.code 0} true;
    $i800 := $p2i.ref.i64($p2);
    call {:si_unique_call 7184} {:cexpr "__cil_tmp520"} {:si_old_unique_call 2316} boogie_si_record_i64($i800);
    goto corral_source_split_4409;

  corral_source_split_4409:
    assume {:verifier.code 0} true;
    $i801 := $add.i64($i800, 60);
    call {:si_unique_call 7185} {:cexpr "__cil_tmp521"} {:si_old_unique_call 2317} boogie_si_record_i64($i801);
    goto corral_source_split_4410;

  corral_source_split_4410:
    assume {:verifier.code 0} true;
    $p802 := $i2p.i64.ref($i801);
    goto corral_source_split_4411;

  corral_source_split_4411:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb253:
    assume {:verifier.code 0} true;
    $i803 := $p2i.ref.i64($p2);
    call {:si_unique_call 7186} {:cexpr "__cil_tmp522"} {:si_old_unique_call 2345} boogie_si_record_i64($i803);
    goto corral_source_split_4467;

  corral_source_split_4467:
    assume {:verifier.code 0} true;
    $i804 := $add.i64($i803, 68);
    call {:si_unique_call 7187} {:cexpr "__cil_tmp523"} {:si_old_unique_call 2346} boogie_si_record_i64($i804);
    goto corral_source_split_4468;

  corral_source_split_4468:
    assume {:verifier.code 0} true;
    $i805 := $p2i.ref.i64($p2);
    call {:si_unique_call 7188} {:cexpr "__cil_tmp524"} {:si_old_unique_call 2347} boogie_si_record_i64($i805);
    goto corral_source_split_4469;

  corral_source_split_4469:
    assume {:verifier.code 0} true;
    $i806 := $add.i64($i805, 20);
    call {:si_unique_call 7189} {:cexpr "__cil_tmp525"} {:si_old_unique_call 2348} boogie_si_record_i64($i806);
    goto corral_source_split_4470;

  corral_source_split_4470:
    assume {:verifier.code 0} true;
    $p807 := $i2p.i64.ref($i806);
    goto corral_source_split_4471;

  corral_source_split_4471:
    assume {:verifier.code 0} true;
    havoc $i808;
    goto corral_source_split_4472;

  corral_source_split_4472:
    assume {:verifier.code 0} true;
    $p809 := $i2p.i64.ref($i804);
    goto corral_source_split_4473;

  corral_source_split_4473:
    assume {:verifier.code 0} true;
    goto corral_source_split_4474;

  corral_source_split_4474:
    assume {:verifier.code 0} true;
    $i810 := $p2i.ref.i64($p2);
    call {:si_unique_call 7190} {:cexpr "__cil_tmp526"} {:si_old_unique_call 2349} boogie_si_record_i64($i810);
    goto corral_source_split_4475;

  corral_source_split_4475:
    assume {:verifier.code 0} true;
    $i811 := $add.i64($i810, 72);
    call {:si_unique_call 7191} {:cexpr "__cil_tmp527"} {:si_old_unique_call 2350} boogie_si_record_i64($i811);
    goto corral_source_split_4476;

  corral_source_split_4476:
    assume {:verifier.code 0} true;
    $i812 := $p2i.ref.i64($p2);
    call {:si_unique_call 7192} {:cexpr "__cil_tmp528"} {:si_old_unique_call 2351} boogie_si_record_i64($i812);
    goto corral_source_split_4477;

  corral_source_split_4477:
    assume {:verifier.code 0} true;
    $i813 := $add.i64($i812, 24);
    call {:si_unique_call 7193} {:cexpr "__cil_tmp529"} {:si_old_unique_call 2352} boogie_si_record_i64($i813);
    goto corral_source_split_4478;

  corral_source_split_4478:
    assume {:verifier.code 0} true;
    $p814 := $i2p.i64.ref($i813);
    goto corral_source_split_4479;

  corral_source_split_4479:
    assume {:verifier.code 0} true;
    havoc $i815;
    goto corral_source_split_4480;

  corral_source_split_4480:
    assume {:verifier.code 0} true;
    $p816 := $i2p.i64.ref($i811);
    goto corral_source_split_4481;

  corral_source_split_4481:
    assume {:verifier.code 0} true;
    goto corral_source_split_4482;

  corral_source_split_4482:
    assume {:verifier.code 0} true;
    $i817 := $p2i.ref.i64($p2);
    call {:si_unique_call 7194} {:cexpr "__cil_tmp530"} {:si_old_unique_call 2353} boogie_si_record_i64($i817);
    goto corral_source_split_4483;

  corral_source_split_4483:
    assume {:verifier.code 0} true;
    $i818 := $add.i64($i817, 76);
    call {:si_unique_call 7195} {:cexpr "__cil_tmp531"} {:si_old_unique_call 2354} boogie_si_record_i64($i818);
    goto corral_source_split_4484;

  corral_source_split_4484:
    assume {:verifier.code 0} true;
    $i819 := $p2i.ref.i64($p2);
    call {:si_unique_call 7196} {:cexpr "__cil_tmp532"} {:si_old_unique_call 2355} boogie_si_record_i64($i819);
    goto corral_source_split_4485;

  corral_source_split_4485:
    assume {:verifier.code 0} true;
    $i820 := $add.i64($i819, 28);
    call {:si_unique_call 7197} {:cexpr "__cil_tmp533"} {:si_old_unique_call 2356} boogie_si_record_i64($i820);
    goto corral_source_split_4486;

  corral_source_split_4486:
    assume {:verifier.code 0} true;
    $p821 := $i2p.i64.ref($i820);
    goto corral_source_split_4487;

  corral_source_split_4487:
    assume {:verifier.code 0} true;
    havoc $i822;
    goto corral_source_split_4488;

  corral_source_split_4488:
    assume {:verifier.code 0} true;
    $p823 := $i2p.i64.ref($i818);
    goto corral_source_split_4489;

  corral_source_split_4489:
    assume {:verifier.code 0} true;
    goto corral_source_split_4490;

  corral_source_split_4490:
    assume {:verifier.code 0} true;
    $i824 := $p2i.ref.i64($p2);
    call {:si_unique_call 7198} {:cexpr "__cil_tmp534"} {:si_old_unique_call 2357} boogie_si_record_i64($i824);
    goto corral_source_split_4491;

  corral_source_split_4491:
    assume {:verifier.code 0} true;
    $i825 := $add.i64($i824, 80);
    call {:si_unique_call 7199} {:cexpr "__cil_tmp535"} {:si_old_unique_call 2358} boogie_si_record_i64($i825);
    goto corral_source_split_4492;

  corral_source_split_4492:
    assume {:verifier.code 0} true;
    $i826 := $p2i.ref.i64($p2);
    call {:si_unique_call 7200} {:cexpr "__cil_tmp536"} {:si_old_unique_call 2359} boogie_si_record_i64($i826);
    goto corral_source_split_4493;

  corral_source_split_4493:
    assume {:verifier.code 0} true;
    $i827 := $add.i64($i826, 32);
    call {:si_unique_call 7201} {:cexpr "__cil_tmp537"} {:si_old_unique_call 2360} boogie_si_record_i64($i827);
    goto corral_source_split_4494;

  corral_source_split_4494:
    assume {:verifier.code 0} true;
    $p828 := $i2p.i64.ref($i827);
    goto corral_source_split_4495;

  corral_source_split_4495:
    assume {:verifier.code 0} true;
    havoc $i829;
    goto corral_source_split_4496;

  corral_source_split_4496:
    assume {:verifier.code 0} true;
    $p830 := $i2p.i64.ref($i825);
    goto corral_source_split_4497;

  corral_source_split_4497:
    assume {:verifier.code 0} true;
    goto corral_source_split_4498;

  corral_source_split_4498:
    assume {:verifier.code 0} true;
    goto $bb254;

  $bb239:
    assume $i751 == 1;
    goto corral_source_split_4399;

  corral_source_split_4399:
    assume {:verifier.code 0} true;
    $i752 := $p2i.ref.i64($p2);
    call {:si_unique_call 7202} {:cexpr "__cil_tmp488"} {:si_old_unique_call 2312} boogie_si_record_i64($i752);
    goto corral_source_split_4400;

  corral_source_split_4400:
    assume {:verifier.code 0} true;
    $i753 := $add.i64($i752, 84);
    call {:si_unique_call 7203} {:cexpr "__cil_tmp489"} {:si_old_unique_call 2313} boogie_si_record_i64($i753);
    goto corral_source_split_4401;

  corral_source_split_4401:
    assume {:verifier.code 0} true;
    $p754 := $i2p.i64.ref($i753);
    goto corral_source_split_4402;

  corral_source_split_4402:
    assume {:verifier.code 0} true;
    havoc $i755;
    call {:si_unique_call 7204} {:cexpr "__cil_tmp490"} {:si_old_unique_call 2314} boogie_si_record_i32($i755);
    goto corral_source_split_4403;

  corral_source_split_4403:
    assume {:verifier.code 0} true;
    $i756 := $zext.i32.i64($i755);
    call {:si_unique_call 7205} {:cexpr "__cil_tmp491"} {:si_old_unique_call 2315} boogie_si_record_i64($i756);
    goto corral_source_split_4404;

  corral_source_split_4404:
    assume {:verifier.code 0} true;
    $i757 := $and.i64($i756, 2);
    goto corral_source_split_4405;

  corral_source_split_4405:
    assume {:verifier.code 0} true;
    $i758 := $ne.i64($i757, 0);
    goto corral_source_split_4406;

  corral_source_split_4406:
    assume {:verifier.code 0} true;
    assume {:branchcond $i758} true;
    goto $bb241, $bb242;

  $bb242:
    assume !($i758 == 1);
    goto corral_source_split_4436;

  corral_source_split_4436:
    assume {:verifier.code 0} true;
    $i797 := $p2i.ref.i64($p2);
    call {:si_unique_call 7206} {:cexpr "__cil_tmp518"} {:si_old_unique_call 2333} boogie_si_record_i64($i797);
    goto corral_source_split_4437;

  corral_source_split_4437:
    assume {:verifier.code 0} true;
    $i798 := $add.i64($i797, 60);
    call {:si_unique_call 7207} {:cexpr "__cil_tmp519"} {:si_old_unique_call 2334} boogie_si_record_i64($i798);
    goto corral_source_split_4438;

  corral_source_split_4438:
    assume {:verifier.code 0} true;
    $p799 := $i2p.i64.ref($i798);
    goto corral_source_split_4439;

  corral_source_split_4439:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb252:
    assume {:verifier.code 0} true;
    goto $bb253;

  $bb241:
    assume $i758 == 1;
    goto corral_source_split_4413;

  corral_source_split_4413:
    assume {:verifier.code 0} true;
    $i759 := $p2i.ref.i64($p2);
    call {:si_unique_call 7208} {:cexpr "__cil_tmp492"} {:si_old_unique_call 2318} boogie_si_record_i64($i759);
    goto corral_source_split_4414;

  corral_source_split_4414:
    assume {:verifier.code 0} true;
    $i760 := $add.i64($i759, 60);
    call {:si_unique_call 7209} {:cexpr "__cil_tmp493"} {:si_old_unique_call 2319} boogie_si_record_i64($i760);
    goto corral_source_split_4415;

  corral_source_split_4415:
    assume {:verifier.code 0} true;
    $i761 := $p2i.ref.i64($p9);
    call {:si_unique_call 7210} {:cexpr "__cil_tmp494"} {:si_old_unique_call 2320} boogie_si_record_i64($i761);
    goto corral_source_split_4416;

  corral_source_split_4416:
    assume {:verifier.code 0} true;
    $i762 := $add.i64($i761, 1146);
    call {:si_unique_call 7211} {:cexpr "__cil_tmp495"} {:si_old_unique_call 2321} boogie_si_record_i64($i762);
    goto corral_source_split_4417;

  corral_source_split_4417:
    assume {:verifier.code 0} true;
    $p763 := $i2p.i64.ref($i762);
    goto corral_source_split_4418;

  corral_source_split_4418:
    assume {:verifier.code 0} true;
    havoc $i764;
    call {:si_unique_call 7212} {:cexpr "__cil_tmp496"} {:si_old_unique_call 2322} boogie_si_record_i16($i764);
    goto corral_source_split_4419;

  corral_source_split_4419:
    assume {:verifier.code 0} true;
    $i765 := $zext.i16.i64($i764);
    call {:si_unique_call 7213} {:cexpr "__cil_tmp497"} {:si_old_unique_call 2323} boogie_si_record_i64($i765);
    goto corral_source_split_4420;

  corral_source_split_4420:
    assume {:verifier.code 0} true;
    $i766 := $zext.i32.i64($i557);
    call {:si_unique_call 7214} {:cexpr "__cil_tmp498"} {:si_old_unique_call 2324} boogie_si_record_i64($i766);
    goto corral_source_split_4421;

  corral_source_split_4421:
    assume {:verifier.code 0} true;
    $i767 := $mul.i64($i766, 1024);
    call {:si_unique_call 7215} {:cexpr "__cil_tmp499"} {:si_old_unique_call 2325} boogie_si_record_i64($i767);
    goto corral_source_split_4422;

  corral_source_split_4422:
    assume {:verifier.code 0} true;
    $i768 := $udiv.i64($i767, $i765);
    call {:si_unique_call 7216} {:cexpr "__cil_tmp500"} {:si_old_unique_call 2326} boogie_si_record_i64($i768);
    goto corral_source_split_4423;

  corral_source_split_4423:
    assume {:verifier.code 0} true;
    $i769 := $and.i64($i768, 1023);
    call {:si_unique_call 7217} {:cexpr "__cil_tmp501"} {:si_old_unique_call 2327} boogie_si_record_i64($i769);
    goto corral_source_split_4424;

  corral_source_split_4424:
    assume {:verifier.code 0} true;
    $i770 := $or.i64(3221225472, $i769);
    call {:si_unique_call 7218} {:cexpr "__cil_tmp502"} {:si_old_unique_call 2328} boogie_si_record_i64($i770);
    goto corral_source_split_4425;

  corral_source_split_4425:
    assume {:verifier.code 0} true;
    $i771 := $trunc.i64.i32($i770);
    goto corral_source_split_4426;

  corral_source_split_4426:
    assume {:verifier.code 0} true;
    $p772 := $i2p.i64.ref($i760);
    goto corral_source_split_4427;

  corral_source_split_4427:
    assume {:verifier.code 0} true;
    goto corral_source_split_4428;

  corral_source_split_4428:
    assume {:verifier.code 0} true;
    $i773 := $p2i.ref.i64($p9);
    call {:si_unique_call 7219} {:cexpr "__cil_tmp503"} {:si_old_unique_call 2329} boogie_si_record_i64($i773);
    goto corral_source_split_4429;

  corral_source_split_4429:
    assume {:verifier.code 0} true;
    $i774 := $add.i64($i773, 1044);
    call {:si_unique_call 7220} {:cexpr "__cil_tmp504"} {:si_old_unique_call 2330} boogie_si_record_i64($i774);
    goto corral_source_split_4430;

  corral_source_split_4430:
    assume {:verifier.code 0} true;
    $p775 := $i2p.i64.ref($i774);
    goto corral_source_split_4431;

  corral_source_split_4431:
    assume {:verifier.code 0} true;
    havoc $i776;
    call {:si_unique_call 7221} {:cexpr "__cil_tmp505"} {:si_old_unique_call 2331} boogie_si_record_i32($i776);
    goto corral_source_split_4432;

  corral_source_split_4432:
    assume {:verifier.code 0} true;
    $i777 := $and.i32($i776, 262144);
    call {:si_unique_call 7222} {:cexpr "__cil_tmp506"} {:si_old_unique_call 2332} boogie_si_record_i32($i777);
    goto corral_source_split_4433;

  corral_source_split_4433:
    assume {:verifier.code 0} true;
    $i778 := $ne.i32($i777, 0);
    goto corral_source_split_4434;

  corral_source_split_4434:
    assume {:verifier.code 0} true;
    assume {:branchcond $i778} true;
    goto $bb243, $bb244;

  $bb244:
    assume !($i778 == 1);
    goto corral_source_split_4441;

  corral_source_split_4441:
    assume {:verifier.code 0} true;
    $i779 := $p2i.ref.i64($p9);
    call {:si_unique_call 7223} {:cexpr "__cil_tmp507"} {:si_old_unique_call 2335} boogie_si_record_i64($i779);
    goto corral_source_split_4442;

  corral_source_split_4442:
    assume {:verifier.code 0} true;
    $i780 := $add.i64($i779, 1044);
    call {:si_unique_call 7224} {:cexpr "__cil_tmp508"} {:si_old_unique_call 2336} boogie_si_record_i64($i780);
    goto corral_source_split_4443;

  corral_source_split_4443:
    assume {:verifier.code 0} true;
    $p781 := $i2p.i64.ref($i780);
    goto corral_source_split_4444;

  corral_source_split_4444:
    assume {:verifier.code 0} true;
    havoc $i782;
    call {:si_unique_call 7225} {:cexpr "__cil_tmp509"} {:si_old_unique_call 2337} boogie_si_record_i32($i782);
    goto corral_source_split_4445;

  corral_source_split_4445:
    assume {:verifier.code 0} true;
    $i783 := $and.i32($i782, 512);
    goto corral_source_split_4446;

  corral_source_split_4446:
    assume {:verifier.code 0} true;
    $i784 := $ne.i32($i783, 0);
    goto corral_source_split_4447;

  corral_source_split_4447:
    assume {:verifier.code 0} true;
    assume {:branchcond $i784} true;
    goto $bb245, $bb246;

  $bb246:
    assume !($i784 == 1);
    assume {:verifier.code 0} true;
    $i785 := 800;
    goto $bb247;

  $bb247:
    assume {:verifier.code 0} true;
    goto corral_source_split_4451;

  corral_source_split_4451:
    assume {:verifier.code 0} true;
    $i786 := $ule.i32($i13, $i785);
    goto corral_source_split_4452;

  corral_source_split_4452:
    assume {:verifier.code 0} true;
    assume {:branchcond $i786} true;
    goto $bb248, $bb249;

  $bb249:
    assume !($i786 == 1);
    assume {:verifier.code 0} true;
    goto $bb250;

  $bb250:
    assume {:verifier.code 0} true;
    goto $bb251;

  $bb251:
    assume {:verifier.code 0} true;
    goto $bb252;

  $bb248:
    assume $i786 == 1;
    goto corral_source_split_4454;

  corral_source_split_4454:
    assume {:verifier.code 0} true;
    $i787 := $p2i.ref.i64($p2);
    call {:si_unique_call 7226} {:cexpr "__cil_tmp511"} {:si_old_unique_call 2338} boogie_si_record_i64($i787);
    goto corral_source_split_4455;

  corral_source_split_4455:
    assume {:verifier.code 0} true;
    $i788 := $add.i64($i787, 64);
    call {:si_unique_call 7227} {:cexpr "__cil_tmp512"} {:si_old_unique_call 2339} boogie_si_record_i64($i788);
    goto corral_source_split_4456;

  corral_source_split_4456:
    assume {:verifier.code 0} true;
    $i789 := $p2i.ref.i64($p2);
    call {:si_unique_call 7228} {:cexpr "__cil_tmp513"} {:si_old_unique_call 2340} boogie_si_record_i64($i789);
    goto corral_source_split_4457;

  corral_source_split_4457:
    assume {:verifier.code 0} true;
    $i790 := $add.i64($i789, 64);
    call {:si_unique_call 7229} {:cexpr "__cil_tmp514"} {:si_old_unique_call 2341} boogie_si_record_i64($i790);
    goto corral_source_split_4458;

  corral_source_split_4458:
    assume {:verifier.code 0} true;
    $p791 := $i2p.i64.ref($i790);
    goto corral_source_split_4459;

  corral_source_split_4459:
    assume {:verifier.code 0} true;
    havoc $i792;
    call {:si_unique_call 7230} {:cexpr "__cil_tmp515"} {:si_old_unique_call 2342} boogie_si_record_i32($i792);
    goto corral_source_split_4460;

  corral_source_split_4460:
    assume {:verifier.code 0} true;
    $i793 := $zext.i32.i64($i792);
    call {:si_unique_call 7231} {:cexpr "__cil_tmp516"} {:si_old_unique_call 2343} boogie_si_record_i64($i793);
    goto corral_source_split_4461;

  corral_source_split_4461:
    assume {:verifier.code 0} true;
    $i794 := $or.i64($i793, 1024);
    call {:si_unique_call 7232} {:cexpr "__cil_tmp517"} {:si_old_unique_call 2344} boogie_si_record_i64($i794);
    goto corral_source_split_4462;

  corral_source_split_4462:
    assume {:verifier.code 0} true;
    $i795 := $trunc.i64.i32($i794);
    goto corral_source_split_4463;

  corral_source_split_4463:
    assume {:verifier.code 0} true;
    $p796 := $i2p.i64.ref($i788);
    goto corral_source_split_4464;

  corral_source_split_4464:
    assume {:verifier.code 0} true;
    goto corral_source_split_4465;

  corral_source_split_4465:
    assume {:verifier.code 0} true;
    goto $bb250;

  $bb245:
    assume $i784 == 1;
    goto corral_source_split_4449;

  corral_source_split_4449:
    assume {:verifier.code 0} true;
    $i785 := 1024;
    goto $bb247;

  $bb243:
    assume $i778 == 1;
    assume {:verifier.code 0} true;
    goto $bb251;

  $bb193:
    assume $i618 == 1;
    goto corral_source_split_4224;

  corral_source_split_4224:
    assume {:verifier.code 0} true;
    $i619 := $p2i.ref.i64($p2);
    call {:si_unique_call 7233} {:cexpr "__cil_tmp406"} {:si_old_unique_call 2227} boogie_si_record_i64($i619);
    goto corral_source_split_4225;

  corral_source_split_4225:
    assume {:verifier.code 0} true;
    $i620 := $add.i64($i619, 84);
    call {:si_unique_call 7234} {:cexpr "__cil_tmp407"} {:si_old_unique_call 2228} boogie_si_record_i64($i620);
    goto corral_source_split_4226;

  corral_source_split_4226:
    assume {:verifier.code 0} true;
    $p621 := $i2p.i64.ref($i620);
    goto corral_source_split_4227;

  corral_source_split_4227:
    assume {:verifier.code 0} true;
    havoc $i622;
    call {:si_unique_call 7235} {:cexpr "__cil_tmp408"} {:si_old_unique_call 2229} boogie_si_record_i32($i622);
    goto corral_source_split_4228;

  corral_source_split_4228:
    assume {:verifier.code 0} true;
    $i623 := $zext.i32.i64($i622);
    call {:si_unique_call 7236} {:cexpr "__cil_tmp409"} {:si_old_unique_call 2230} boogie_si_record_i64($i623);
    goto corral_source_split_4229;

  corral_source_split_4229:
    assume {:verifier.code 0} true;
    $i624 := $and.i64($i623, 2);
    goto corral_source_split_4230;

  corral_source_split_4230:
    assume {:verifier.code 0} true;
    $i625 := $ne.i64($i624, 0);
    goto corral_source_split_4231;

  corral_source_split_4231:
    assume {:verifier.code 0} true;
    assume {:branchcond $i625} true;
    goto $bb195, $bb196;

  $bb196:
    assume !($i625 == 1);
    assume {:verifier.code 0} true;
    goto $bb237;

  $bb237:
    assume {:verifier.code 0} true;
    goto $bb238;

  $bb195:
    assume $i625 == 1;
    goto corral_source_split_4233;

  corral_source_split_4233:
    assume {:verifier.code 0} true;
    goto $bb197;

  $bb197:
    assume {:verifier.code 0} true;
    goto $bb198;

  $bb198:
    assume {:verifier.code 0} true;
    $i626 := $and.i32($i13, $sub.i32(0, 8));
    call {:si_unique_call 7237} {:cexpr "__cil_tmp410"} {:si_old_unique_call 2231} boogie_si_record_i32($i626);
    goto corral_source_split_4235;

  corral_source_split_4235:
    assume {:verifier.code 0} true;
    $i627 := $p2i.ref.i64($p9);
    call {:si_unique_call 7238} {:cexpr "__cil_tmp411"} {:si_old_unique_call 2232} boogie_si_record_i64($i627);
    goto corral_source_split_4236;

  corral_source_split_4236:
    assume {:verifier.code 0} true;
    $i628 := $add.i64($i627, 1144);
    call {:si_unique_call 7239} {:cexpr "__cil_tmp412"} {:si_old_unique_call 2233} boogie_si_record_i64($i628);
    goto corral_source_split_4237;

  corral_source_split_4237:
    assume {:verifier.code 0} true;
    $p629 := $i2p.i64.ref($i628);
    goto corral_source_split_4238;

  corral_source_split_4238:
    assume {:verifier.code 0} true;
    havoc $i630;
    call {:si_unique_call 7240} {:cexpr "__cil_tmp413"} {:si_old_unique_call 2234} boogie_si_record_i16($i630);
    goto corral_source_split_4239;

  corral_source_split_4239:
    assume {:verifier.code 0} true;
    $i631 := $zext.i16.i32($i630);
    call {:si_unique_call 7241} {:cexpr "__cil_tmp414"} {:si_old_unique_call 2235} boogie_si_record_i32($i631);
    goto corral_source_split_4240;

  corral_source_split_4240:
    assume {:verifier.code 0} true;
    $i632 := $sdiv.i32($i631, $i626);
    call {:si_unique_call 7242} {:cexpr "nStretch"} {:si_old_unique_call 2236} boogie_si_record_i32($i632);
    goto corral_source_split_4241;

  corral_source_split_4241:
    assume {:verifier.code 0} true;
    $i633 := $p2i.ref.i64($p9);
    call {:si_unique_call 7243} {:cexpr "__cil_tmp415"} {:si_old_unique_call 2237} boogie_si_record_i64($i633);
    goto corral_source_split_4242;

  corral_source_split_4242:
    assume {:verifier.code 0} true;
    $i634 := $add.i64($i633, 1144);
    call {:si_unique_call 7244} {:cexpr "__cil_tmp416"} {:si_old_unique_call 2238} boogie_si_record_i64($i634);
    goto corral_source_split_4243;

  corral_source_split_4243:
    assume {:verifier.code 0} true;
    $p635 := $i2p.i64.ref($i634);
    goto corral_source_split_4244;

  corral_source_split_4244:
    assume {:verifier.code 0} true;
    havoc $i636;
    call {:si_unique_call 7245} {:cexpr "__cil_tmp417"} {:si_old_unique_call 2239} boogie_si_record_i16($i636);
    goto corral_source_split_4245;

  corral_source_split_4245:
    assume {:verifier.code 0} true;
    $i637 := $zext.i16.i32($i636);
    call {:si_unique_call 7246} {:cexpr "__cil_tmp418"} {:si_old_unique_call 2240} boogie_si_record_i32($i637);
    goto corral_source_split_4246;

  corral_source_split_4246:
    assume {:verifier.code 0} true;
    $i638 := $srem.i32($i637, $i626);
    call {:si_unique_call 7247} {:cexpr "Remainder"} {:si_old_unique_call 2241} boogie_si_record_i32($i638);
    goto corral_source_split_4247;

  corral_source_split_4247:
    assume {:verifier.code 0} true;
    $i639 := $ne.i32($i638, 0);
    goto corral_source_split_4248;

  corral_source_split_4248:
    assume {:verifier.code 0} true;
    assume {:branchcond $i639} true;
    goto $bb199, $bb200;

  $bb200:
    assume !($i639 == 1);
    goto corral_source_split_4252;

  corral_source_split_4252:
    assume {:verifier.code 0} true;
    $i640 := $sgt.i32($i632, 2);
    goto corral_source_split_4253;

  corral_source_split_4253:
    assume {:verifier.code 0} true;
    assume {:branchcond $i640} true;
    goto $bb201, $bb202;

  $bb202:
    assume !($i640 == 1);
    goto corral_source_split_4257;

  corral_source_split_4257:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb204:
    assume {:verifier.code 0} true;
    $i641 := $p2i.ref.i64($p9);
    call {:si_unique_call 7248} {:cexpr "__cil_tmp419"} {:si_old_unique_call 2250} boogie_si_record_i64($i641);
    goto corral_source_split_4272;

  corral_source_split_4272:
    assume {:verifier.code 0} true;
    $i642 := $add.i64($i641, 1144);
    call {:si_unique_call 7249} {:cexpr "__cil_tmp420"} {:si_old_unique_call 2251} boogie_si_record_i64($i642);
    goto corral_source_split_4273;

  corral_source_split_4273:
    assume {:verifier.code 0} true;
    $p643 := $i2p.i64.ref($i642);
    goto corral_source_split_4274;

  corral_source_split_4274:
    assume {:verifier.code 0} true;
    havoc $i644;
    call {:si_unique_call 7250} {:cexpr "__cil_tmp421"} {:si_old_unique_call 2252} boogie_si_record_i16($i644);
    goto corral_source_split_4275;

  corral_source_split_4275:
    assume {:verifier.code 0} true;
    $i645 := $zext.i16.i32($i644);
    call {:si_unique_call 7251} {:cexpr "__cil_tmp422"} {:si_old_unique_call 2253} boogie_si_record_i32($i645);
    goto corral_source_split_4276;

  corral_source_split_4276:
    assume {:verifier.code 0} true;
    $i646 := $mul.i32($i626, 16);
    call {:si_unique_call 7252} {:cexpr "__cil_tmp423"} {:si_old_unique_call 2254} boogie_si_record_i32($i646);
    goto corral_source_split_4277;

  corral_source_split_4277:
    assume {:verifier.code 0} true;
    $i647 := $sdiv.i32($i646, $i645);
    call {:si_unique_call 7253} {:cexpr "__cil_tmp424"} {:si_old_unique_call 2255} boogie_si_record_i32($i647);
    goto corral_source_split_4278;

  corral_source_split_4278:
    assume {:verifier.code 0} true;
    $i648 := $slt.i32($i647, 7);
    goto corral_source_split_4279;

  corral_source_split_4279:
    assume {:verifier.code 0} true;
    assume {:branchcond $i648} true;
    goto $bb205, $bb206;

  $bb206:
    assume !($i648 == 1);
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb235:
    assume {:verifier.code 0} true;
    goto $bb236;

  $bb236:
    assume {:verifier.code 0} true;
    $i726 := $p2i.ref.i64($p2);
    call {:si_unique_call 7254} {:cexpr "__cil_tmp468"} {:si_old_unique_call 2292} boogie_si_record_i64($i726);
    goto corral_source_split_4370;

  corral_source_split_4370:
    assume {:verifier.code 0} true;
    $i727 := $add.i64($i726, 56);
    call {:si_unique_call 7255} {:cexpr "__cil_tmp469"} {:si_old_unique_call 2293} boogie_si_record_i64($i727);
    goto corral_source_split_4371;

  corral_source_split_4371:
    assume {:verifier.code 0} true;
    $i728 := $p2i.ref.i64($p9);
    call {:si_unique_call 7256} {:cexpr "__cil_tmp470"} {:si_old_unique_call 2294} boogie_si_record_i64($i728);
    goto corral_source_split_4372;

  corral_source_split_4372:
    assume {:verifier.code 0} true;
    $i729 := $add.i64($i728, 1144);
    call {:si_unique_call 7257} {:cexpr "__cil_tmp471"} {:si_old_unique_call 2295} boogie_si_record_i64($i729);
    goto corral_source_split_4373;

  corral_source_split_4373:
    assume {:verifier.code 0} true;
    $p730 := $i2p.i64.ref($i729);
    goto corral_source_split_4374;

  corral_source_split_4374:
    assume {:verifier.code 0} true;
    havoc $i731;
    call {:si_unique_call 7258} {:cexpr "__cil_tmp472"} {:si_old_unique_call 2296} boogie_si_record_i16($i731);
    goto corral_source_split_4375;

  corral_source_split_4375:
    assume {:verifier.code 0} true;
    $i732 := $zext.i16.i64($i731);
    call {:si_unique_call 7259} {:cexpr "__cil_tmp473"} {:si_old_unique_call 2297} boogie_si_record_i64($i732);
    goto corral_source_split_4376;

  corral_source_split_4376:
    assume {:verifier.code 0} true;
    $i733 := $sext.i32.i64($i626);
    call {:si_unique_call 7260} {:cexpr "__cil_tmp474"} {:si_old_unique_call 2298} boogie_si_record_i64($i733);
    goto corral_source_split_4377;

  corral_source_split_4377:
    assume {:verifier.code 0} true;
    $i734 := $mul.i64($i733, 4096);
    call {:si_unique_call 7261} {:cexpr "__cil_tmp475"} {:si_old_unique_call 2299} boogie_si_record_i64($i734);
    goto corral_source_split_4378;

  corral_source_split_4378:
    assume {:verifier.code 0} true;
    $i735 := $udiv.i64($i734, $i732);
    call {:si_unique_call 7262} {:cexpr "__cil_tmp476"} {:si_old_unique_call 2300} boogie_si_record_i64($i735);
    goto corral_source_split_4379;

  corral_source_split_4379:
    assume {:verifier.code 0} true;
    $i736 := $and.i64($i735, 4095);
    call {:si_unique_call 7263} {:cexpr "__cil_tmp477"} {:si_old_unique_call 2301} boogie_si_record_i64($i736);
    goto corral_source_split_4380;

  corral_source_split_4380:
    assume {:verifier.code 0} true;
    $i737 := $or.i64(3221225472, $i736);
    call {:si_unique_call 7264} {:cexpr "__cil_tmp478"} {:si_old_unique_call 2302} boogie_si_record_i64($i737);
    goto corral_source_split_4381;

  corral_source_split_4381:
    assume {:verifier.code 0} true;
    $i738 := $p2i.ref.i64($p2);
    call {:si_unique_call 7265} {:cexpr "__cil_tmp479"} {:si_old_unique_call 2303} boogie_si_record_i64($i738);
    goto corral_source_split_4382;

  corral_source_split_4382:
    assume {:verifier.code 0} true;
    $i739 := $add.i64($i738, 56);
    call {:si_unique_call 7266} {:cexpr "__cil_tmp480"} {:si_old_unique_call 2304} boogie_si_record_i64($i739);
    goto corral_source_split_4383;

  corral_source_split_4383:
    assume {:verifier.code 0} true;
    $p740 := $i2p.i64.ref($i739);
    goto corral_source_split_4384;

  corral_source_split_4384:
    assume {:verifier.code 0} true;
    havoc $i741;
    call {:si_unique_call 7267} {:cexpr "__cil_tmp481"} {:si_old_unique_call 2305} boogie_si_record_i32($i741);
    goto corral_source_split_4385;

  corral_source_split_4385:
    assume {:verifier.code 0} true;
    $i742 := $zext.i32.i64($i741);
    call {:si_unique_call 7268} {:cexpr "__cil_tmp482"} {:si_old_unique_call 2306} boogie_si_record_i64($i742);
    goto corral_source_split_4386;

  corral_source_split_4386:
    assume {:verifier.code 0} true;
    $i743 := $or.i64($i742, $i737);
    call {:si_unique_call 7269} {:cexpr "__cil_tmp483"} {:si_old_unique_call 2307} boogie_si_record_i64($i743);
    goto corral_source_split_4387;

  corral_source_split_4387:
    assume {:verifier.code 0} true;
    $i744 := $trunc.i64.i32($i743);
    goto corral_source_split_4388;

  corral_source_split_4388:
    assume {:verifier.code 0} true;
    $p745 := $i2p.i64.ref($i727);
    goto corral_source_split_4389;

  corral_source_split_4389:
    assume {:verifier.code 0} true;
    goto corral_source_split_4390;

  corral_source_split_4390:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb232:
    assume {:verifier.code 0} true;
    goto $bb237;

  $bb205:
    assume $i648 == 1;
    goto corral_source_split_4281;

  corral_source_split_4281:
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb203:
    assume {:verifier.code 0} true;
    goto corral_source_split_4259;

  corral_source_split_4259:
    assume {:verifier.code 0} true;
    $i649 := $p2i.ref.i64($p9);
    call {:si_unique_call 7270} {:cexpr "__cil_tmp427"} {:si_old_unique_call 2242} boogie_si_record_i64($i649);
    goto corral_source_split_4260;

  corral_source_split_4260:
    assume {:verifier.code 0} true;
    $i650 := $add.i64($i649, 1144);
    call {:si_unique_call 7271} {:cexpr "__cil_tmp428"} {:si_old_unique_call 2243} boogie_si_record_i64($i650);
    goto corral_source_split_4261;

  corral_source_split_4261:
    assume {:verifier.code 0} true;
    $p651 := $i2p.i64.ref($i650);
    goto corral_source_split_4262;

  corral_source_split_4262:
    assume {:verifier.code 0} true;
    havoc $i652;
    call {:si_unique_call 7272} {:cexpr "__cil_tmp429"} {:si_old_unique_call 2244} boogie_si_record_i16($i652);
    goto corral_source_split_4263;

  corral_source_split_4263:
    assume {:verifier.code 0} true;
    $i653 := $zext.i16.i32($i652);
    goto corral_source_split_4264;

  corral_source_split_4264:
    assume {:verifier.code 0} true;
    goto corral_source_split_4265;

  corral_source_split_4265:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7273} {:si_old_unique_call 2245} ATIReduceRatio($p3, $p4);
    goto corral_source_split_4266;

  corral_source_split_4266:
    assume {:verifier.code 0} true;
    havoc $i654;
    call {:si_unique_call 7274} {:cexpr "__cil_tmp431"} {:si_old_unique_call 2246} boogie_si_record_i32($i654);
    goto corral_source_split_4267;

  corral_source_split_4267:
    assume {:verifier.code 0} true;
    havoc $i655;
    call {:si_unique_call 7275} {:cexpr "__cil_tmp433"} {:si_old_unique_call 2247} boogie_si_record_i32($i655);
    goto corral_source_split_4268;

  corral_source_split_4268:
    assume {:verifier.code 0} true;
    $i656 := $mul.i32($i655, 16);
    call {:si_unique_call 7276} {:cexpr "__cil_tmp434"} {:si_old_unique_call 2248} boogie_si_record_i32($i656);
    goto corral_source_split_4269;

  corral_source_split_4269:
    assume {:verifier.code 0} true;
    $i657 := $sdiv.i32($i656, $i654);
    call {:si_unique_call 7277} {:cexpr "BestRemainder"} {:si_old_unique_call 2249} boogie_si_record_i32($i657);
    goto corral_source_split_4270;

  corral_source_split_4270:
    assume {:verifier.code 0} true;
    $i658, $i659, $i660 := $sub.i32(0, 1), $i657, 5;
    goto $bb207;

  $bb207:
    call {:si_unique_call 7278} $i658, $i659, $i660, $i661, $i662, $i663, $i664, $i667, $i668, $i669, $i670, $p671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684 := aty_var_to_crtc_loop_$bb207($i658, $i659, $i660, $i661, $i662, $i663, $i664, $i667, $i668, $i669, $i670, $p671, $i672, $i673, $i674, $i675, $i676, $i677, $i678, $i679, $i680, $i681, $i682, $i683, $i684);
    LoopBound_AssertVar := false;
    goto $bb207_last;

  $bb207_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4283;

  corral_source_split_4283:
    assume {:verifier.code 0} true;
    goto $bb208;

  $bb208:
    assume {:verifier.code 0} true;
    $i661 := $sub.i32($i660, 1);
    call {:si_unique_call 7279} {:cexpr "Index"} {:si_old_unique_call 2256} boogie_si_record_i32($i661);
    goto corral_source_split_4285;

  corral_source_split_4285:
    assume {:verifier.code 0} true;
    $i662 := $sge.i32($i661, 0);
    goto corral_source_split_4286;

  corral_source_split_4286:
    assume {:verifier.code 0} true;
    $i663, $i664 := $i658, $i659;
    assume {:branchcond $i662} true;
    goto $bb209, $bb210;

  $bb210:
    assume !($i662 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4290;

  corral_source_split_4290:
    assume {:verifier.code 0} true;
    $i665, $i666 := $i663, $i664;
    goto $bb212;

  $bb212:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4306;

  corral_source_split_4306:
    assume {:verifier.code 0} true;
    $i685 := $sge.i32($i665, 0);
    goto corral_source_split_4307;

  corral_source_split_4307:
    assume {:verifier.code 0} true;
    assume {:branchcond $i685} true;
    goto $bb219, $bb220;

  $bb220:
    assume !($i685 == 1);
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb234:
    assume {:verifier.code 0} true;
    goto $bb235;

  $bb219:
    assume $i685 == 1;
    goto corral_source_split_4318;

  corral_source_split_4318:
    assume {:verifier.code 0} true;
    $i686 := $ne.i32($i666, 0);
    goto corral_source_split_4319;

  corral_source_split_4319:
    assume {:verifier.code 0} true;
    assume {:branchcond $i686} true;
    goto $bb221, $bb222;

  $bb222:
    assume !($i686 == 1);
    goto corral_source_split_4321;

  corral_source_split_4321:
    assume {:verifier.code 0} true;
    $i687 := $sext.i32.i64($i665);
    goto corral_source_split_4322;

  corral_source_split_4322:
    assume {:verifier.code 0} true;
    $i688 := $mul.i64($i687, 1);
    call {:si_unique_call 7280} {:cexpr "__cil_tmp447"} {:si_old_unique_call 2267} boogie_si_record_i64($i688);
    goto corral_source_split_4323;

  corral_source_split_4323:
    assume {:verifier.code 0} true;
    $i689 := $add.i64($p2i.ref.i64(StretchLoops), $i688);
    call {:si_unique_call 7281} {:cexpr "__cil_tmp448"} {:si_old_unique_call 2268} boogie_si_record_i64($i689);
    goto corral_source_split_4324;

  corral_source_split_4324:
    assume {:verifier.code 0} true;
    $p690 := $i2p.i64.ref($i689);
    goto corral_source_split_4325;

  corral_source_split_4325:
    assume {:verifier.code 0} true;
    havoc $i691;
    call {:si_unique_call 7282} {:cexpr "__cil_tmp449"} {:si_old_unique_call 2269} boogie_si_record_i8($i691);
    goto corral_source_split_4326;

  corral_source_split_4326:
    assume {:verifier.code 0} true;
    $i692 := $sext.i8.i32($i691);
    call {:si_unique_call 7283} {:cexpr "Index"} {:si_old_unique_call 2270} boogie_si_record_i32($i692);
    goto corral_source_split_4327;

  corral_source_split_4327:
    assume {:verifier.code 0} true;
    $i693, $i694, $i695, $i696 := $i692, 0, 0, 1;
    goto $bb223;

  $bb223:
    call {:si_unique_call 7284} $i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i704, $i705, $i702, $i703, $i706, $i707, $i708 := aty_var_to_crtc_loop_$bb223_PassiveCopy($i693, $i694, $i695, $i696, $i697, $i698, $i699, $i700, $i701, $i704, $i705, $i702, $i703, $i706, $i707, $i708);
    goto $bb223_last;

  $bb223_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4329;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    goto $bb224;

  $bb224:
    assume {:verifier.code 0} true;
    $i697 := $sub.i32($i693, 1);
    call {:si_unique_call 7285} {:cexpr "Index"} {:si_old_unique_call 2271} boogie_si_record_i32($i697);
    goto corral_source_split_4331;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    $i698 := $sge.i32($i697, 0);
    goto corral_source_split_4332;

  corral_source_split_4332:
    assume {:verifier.code 0} true;
    $i699 := $i694;
    assume {:branchcond $i698} true;
    goto $bb225, $bb226;

  $bb226:
    assume !($i698 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_4336;

  corral_source_split_4336:
    assume {:verifier.code 0} true;
    goto $bb228;

  $bb228:
    assume {:verifier.code 0} true;
    $i709 := $p2i.ref.i64($p2);
    call {:si_unique_call 7286} {:cexpr "__cil_tmp454"} {:si_old_unique_call 2272} boogie_si_record_i64($i709);
    goto corral_source_split_4340;

  corral_source_split_4340:
    assume {:verifier.code 0} true;
    $i710 := $add.i64($i709, 56);
    call {:si_unique_call 7287} {:cexpr "__cil_tmp455"} {:si_old_unique_call 2273} boogie_si_record_i64($i710);
    goto corral_source_split_4341;

  corral_source_split_4341:
    assume {:verifier.code 0} true;
    $i711 := $sext.i32.i64($i699);
    call {:si_unique_call 7288} {:cexpr "__cil_tmp456"} {:si_old_unique_call 2274} boogie_si_record_i64($i711);
    goto corral_source_split_4342;

  corral_source_split_4342:
    assume {:verifier.code 0} true;
    $i712 := $and.i64($i711, 65535);
    call {:si_unique_call 7289} {:cexpr "__cil_tmp457"} {:si_old_unique_call 2275} boogie_si_record_i64($i712);
    goto corral_source_split_4343;

  corral_source_split_4343:
    assume {:verifier.code 0} true;
    $i713 := $sext.i32.i64($i665);
    call {:si_unique_call 7290} {:cexpr "__cil_tmp458"} {:si_old_unique_call 2276} boogie_si_record_i64($i713);
    goto corral_source_split_4344;

  corral_source_split_4344:
    assume {:verifier.code 0} true;
    $i714 := $and.i64($i713, 458752);
    call {:si_unique_call 7291} {:cexpr "__cil_tmp459"} {:si_old_unique_call 2277} boogie_si_record_i64($i714);
    goto corral_source_split_4345;

  corral_source_split_4345:
    assume {:verifier.code 0} true;
    $i715 := $shl.i64($i714, 16);
    call {:si_unique_call 7292} {:cexpr "__cil_tmp460"} {:si_old_unique_call 2278} boogie_si_record_i64($i715);
    goto corral_source_split_4346;

  corral_source_split_4346:
    assume {:verifier.code 0} true;
    $i716 := $or.i64(2147483648, $i715);
    call {:si_unique_call 7293} {:cexpr "__cil_tmp461"} {:si_old_unique_call 2279} boogie_si_record_i64($i716);
    goto corral_source_split_4347;

  corral_source_split_4347:
    assume {:verifier.code 0} true;
    $i717 := $or.i64($i716, $i712);
    call {:si_unique_call 7294} {:cexpr "__cil_tmp462"} {:si_old_unique_call 2280} boogie_si_record_i64($i717);
    goto corral_source_split_4348;

  corral_source_split_4348:
    assume {:verifier.code 0} true;
    $i718 := $p2i.ref.i64($p2);
    call {:si_unique_call 7295} {:cexpr "__cil_tmp463"} {:si_old_unique_call 2281} boogie_si_record_i64($i718);
    goto corral_source_split_4349;

  corral_source_split_4349:
    assume {:verifier.code 0} true;
    $i719 := $add.i64($i718, 56);
    call {:si_unique_call 7296} {:cexpr "__cil_tmp464"} {:si_old_unique_call 2282} boogie_si_record_i64($i719);
    goto corral_source_split_4350;

  corral_source_split_4350:
    assume {:verifier.code 0} true;
    $p720 := $i2p.i64.ref($i719);
    goto corral_source_split_4351;

  corral_source_split_4351:
    assume {:verifier.code 0} true;
    havoc $i721;
    call {:si_unique_call 7297} {:cexpr "__cil_tmp465"} {:si_old_unique_call 2283} boogie_si_record_i32($i721);
    goto corral_source_split_4352;

  corral_source_split_4352:
    assume {:verifier.code 0} true;
    $i722 := $zext.i32.i64($i721);
    call {:si_unique_call 7298} {:cexpr "__cil_tmp466"} {:si_old_unique_call 2284} boogie_si_record_i64($i722);
    goto corral_source_split_4353;

  corral_source_split_4353:
    assume {:verifier.code 0} true;
    $i723 := $or.i64($i722, $i717);
    call {:si_unique_call 7299} {:cexpr "__cil_tmp467"} {:si_old_unique_call 2285} boogie_si_record_i64($i723);
    goto corral_source_split_4354;

  corral_source_split_4354:
    assume {:verifier.code 0} true;
    $i724 := $trunc.i64.i32($i723);
    goto corral_source_split_4355;

  corral_source_split_4355:
    assume {:verifier.code 0} true;
    $p725 := $i2p.i64.ref($i710);
    goto corral_source_split_4356;

  corral_source_split_4356:
    assume {:verifier.code 0} true;
    goto corral_source_split_4357;

  corral_source_split_4357:
    assume {:verifier.code 0} true;
    goto $bb232;

  $bb225:
    assume $i698 == 1;
    goto corral_source_split_4334;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    goto $bb227;

  $bb227:
    assume {:verifier.code 0} true;
    $i700 := $sgt.i32($i695, 0);
    goto corral_source_split_4338;

  corral_source_split_4338:
    assume {:verifier.code 0} true;
    assume {:branchcond $i700} true;
    goto $bb229, $bb230;

  $bb230:
    assume !($i700 == 1);
    goto corral_source_split_4362;

  corral_source_split_4362:
    assume {:verifier.code 0} true;
    havoc $i704;
    call {:si_unique_call 7300} {:cexpr "__cil_tmp451"} {:si_old_unique_call 2287} boogie_si_record_i32($i704);
    goto corral_source_split_4363;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    $i705 := $add.i32($i695, $i704);
    call {:si_unique_call 7301} {:cexpr "Accumulator"} {:si_old_unique_call 2288} boogie_si_record_i32($i705);
    assume {:verifier.code 0} true;
    $i702, $i703 := $i694, $i705;
    goto $bb231;

  $bb231:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4365;

  corral_source_split_4365:
    assume {:verifier.code 0} true;
    havoc $i706;
    call {:si_unique_call 7302} {:cexpr "__cil_tmp453"} {:si_old_unique_call 2289} boogie_si_record_i32($i706);
    goto corral_source_split_4366;

  corral_source_split_4366:
    assume {:verifier.code 0} true;
    $i707 := $sub.i32($i703, $i706);
    call {:si_unique_call 7303} {:cexpr "Accumulator"} {:si_old_unique_call 2290} boogie_si_record_i32($i707);
    goto corral_source_split_4367;

  corral_source_split_4367:
    assume {:verifier.code 0} true;
    $i708 := $shl.i32($i696, 1);
    call {:si_unique_call 7304} {:cexpr "reuse_previous"} {:si_old_unique_call 2291} boogie_si_record_i32($i708);
    goto corral_source_split_4368;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    $i693, $i694, $i695, $i696 := $i697, $i702, $i707, $i708;
    goto corral_source_split_4368_dummy;

  corral_source_split_4368_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb229:
    assume $i700 == 1;
    goto corral_source_split_4359;

  corral_source_split_4359:
    assume {:verifier.code 0} true;
    $i701 := $or.i32($i694, $i696);
    call {:si_unique_call 7305} {:cexpr "horz_stretch_ratio"} {:si_old_unique_call 2286} boogie_si_record_i32($i701);
    goto corral_source_split_4360;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    $i702, $i703 := $i701, $i695;
    goto $bb231;

  $bb221:
    assume $i686 == 1;
    assume {:verifier.code 0} true;
    goto $bb233;

  $bb233:
    assume {:verifier.code 0} true;
    goto $bb234;

  $bb209:
    assume $i662 == 1;
    goto corral_source_split_4288;

  corral_source_split_4288:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    havoc $i667;
    call {:si_unique_call 7306} {:cexpr "__cil_tmp436"} {:si_old_unique_call 2257} boogie_si_record_i32($i667);
    goto corral_source_split_4292;

  corral_source_split_4292:
    assume {:verifier.code 0} true;
    $i668 := $sext.i32.i64($i661);
    goto corral_source_split_4293;

  corral_source_split_4293:
    assume {:verifier.code 0} true;
    $i669 := $mul.i64($i668, 1);
    call {:si_unique_call 7307} {:cexpr "__cil_tmp437"} {:si_old_unique_call 2258} boogie_si_record_i64($i669);
    goto corral_source_split_4294;

  corral_source_split_4294:
    assume {:verifier.code 0} true;
    $i670 := $add.i64($p2i.ref.i64(StretchLoops), $i669);
    call {:si_unique_call 7308} {:cexpr "__cil_tmp438"} {:si_old_unique_call 2259} boogie_si_record_i64($i670);
    goto corral_source_split_4295;

  corral_source_split_4295:
    assume {:verifier.code 0} true;
    $p671 := $i2p.i64.ref($i670);
    goto corral_source_split_4296;

  corral_source_split_4296:
    assume {:verifier.code 0} true;
    havoc $i672;
    call {:si_unique_call 7309} {:cexpr "__cil_tmp439"} {:si_old_unique_call 2260} boogie_si_record_i8($i672);
    goto corral_source_split_4297;

  corral_source_split_4297:
    assume {:verifier.code 0} true;
    $i673 := $sext.i8.i32($i672);
    call {:si_unique_call 7310} {:cexpr "__cil_tmp440"} {:si_old_unique_call 2261} boogie_si_record_i32($i673);
    goto corral_source_split_4298;

  corral_source_split_4298:
    assume {:verifier.code 0} true;
    havoc $i674;
    call {:si_unique_call 7311} {:cexpr "__cil_tmp442"} {:si_old_unique_call 2262} boogie_si_record_i32($i674);
    goto corral_source_split_4299;

  corral_source_split_4299:
    assume {:verifier.code 0} true;
    havoc $i675;
    call {:si_unique_call 7312} {:cexpr "__cil_tmp444"} {:si_old_unique_call 2263} boogie_si_record_i32($i675);
    goto corral_source_split_4300;

  corral_source_split_4300:
    assume {:verifier.code 0} true;
    $i676 := $sub.i32($i675, $i674);
    call {:si_unique_call 7313} {:cexpr "__cil_tmp445"} {:si_old_unique_call 2264} boogie_si_record_i32($i676);
    goto corral_source_split_4301;

  corral_source_split_4301:
    assume {:verifier.code 0} true;
    $i677 := $mul.i32($i676, $i673);
    call {:si_unique_call 7314} {:cexpr "__cil_tmp446"} {:si_old_unique_call 2265} boogie_si_record_i32($i677);
    goto corral_source_split_4302;

  corral_source_split_4302:
    assume {:verifier.code 0} true;
    $i678 := $srem.i32($i677, $i667);
    call {:si_unique_call 7315} {:cexpr "Remainder"} {:si_old_unique_call 2266} boogie_si_record_i32($i678);
    goto corral_source_split_4303;

  corral_source_split_4303:
    assume {:verifier.code 0} true;
    $i679 := $slt.i32($i678, $i659);
    goto corral_source_split_4304;

  corral_source_split_4304:
    assume {:verifier.code 0} true;
    assume {:branchcond $i679} true;
    goto $bb213, $bb214;

  $bb214:
    assume !($i679 == 1);
    assume {:verifier.code 0} true;
    $i683, $i684 := $i658, $i659;
    goto $bb218;

  $bb218:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4316;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    $i658, $i659, $i660 := $i683, $i684, $i661;
    goto corral_source_split_4316_dummy;

  corral_source_split_4316_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb213:
    assume $i679 == 1;
    goto corral_source_split_4309;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    $i680 := $ne.i32($i678, 0);
    goto corral_source_split_4310;

  corral_source_split_4310:
    assume {:verifier.code 0} true;
    $i681, $i682 := $i661, $i678;
    assume {:branchcond $i680} true;
    goto $bb215, $bb216;

  $bb216:
    assume !($i680 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4314;

  corral_source_split_4314:
    assume {:verifier.code 0} true;
    $i665, $i666 := $i681, $i682;
    goto $bb212;

  $bb215:
    assume $i680 == 1;
    goto corral_source_split_4312;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    $i683, $i684 := $i661, $i678;
    goto $bb218;

  $bb201:
    assume $i640 == 1;
    goto corral_source_split_4255;

  corral_source_split_4255:
    assume {:verifier.code 0} true;
    goto $bb203;

  $bb199:
    assume $i639 == 1;
    goto corral_source_split_4250;

  corral_source_split_4250:
    assume {:verifier.code 0} true;
    goto $bb204;

  $bb190:
    assume $i595 == 1;
    assume {:verifier.code 0} true;
    goto $bb192;

  $bb187:
    assume $i555 == 1;
    goto corral_source_split_4149;

  corral_source_split_4149:
    assume {:verifier.code 0} true;
    $i556 := $shl.i32($i17, 1);
    call {:si_unique_call 7316} {:cexpr "vdisplay"} {:si_old_unique_call 2183} boogie_si_record_i32($i556);
    goto corral_source_split_4150;

  corral_source_split_4150:
    assume {:verifier.code 0} true;
    $i557 := $i556;
    goto $bb189;

  $bb182:
    assume $i540 == 1;
    goto corral_source_split_4128;

  corral_source_split_4128:
    assume {:verifier.code 0} true;
    $i541 := $p2i.ref.i64($p2);
    call {:si_unique_call 7317} {:cexpr "__cil_tmp356"} {:si_old_unique_call 2175} boogie_si_record_i64($i541);
    goto corral_source_split_4129;

  corral_source_split_4129:
    assume {:verifier.code 0} true;
    $i542 := $add.i64($i541, 44);
    call {:si_unique_call 7318} {:cexpr "__cil_tmp357"} {:si_old_unique_call 2176} boogie_si_record_i64($i542);
    goto corral_source_split_4130;

  corral_source_split_4130:
    assume {:verifier.code 0} true;
    $i543 := $p2i.ref.i64($p2);
    call {:si_unique_call 7319} {:cexpr "__cil_tmp358"} {:si_old_unique_call 2177} boogie_si_record_i64($i543);
    goto corral_source_split_4131;

  corral_source_split_4131:
    assume {:verifier.code 0} true;
    $i544 := $add.i64($i543, 44);
    call {:si_unique_call 7320} {:cexpr "__cil_tmp359"} {:si_old_unique_call 2178} boogie_si_record_i64($i544);
    goto corral_source_split_4132;

  corral_source_split_4132:
    assume {:verifier.code 0} true;
    $p545 := $i2p.i64.ref($i544);
    goto corral_source_split_4133;

  corral_source_split_4133:
    assume {:verifier.code 0} true;
    havoc $i546;
    call {:si_unique_call 7321} {:cexpr "__cil_tmp360"} {:si_old_unique_call 2179} boogie_si_record_i32($i546);
    goto corral_source_split_4134;

  corral_source_split_4134:
    assume {:verifier.code 0} true;
    $i547 := $or.i32($i546, 2);
    goto corral_source_split_4135;

  corral_source_split_4135:
    assume {:verifier.code 0} true;
    $p548 := $i2p.i64.ref($i542);
    goto corral_source_split_4136;

  corral_source_split_4136:
    assume {:verifier.code 0} true;
    goto corral_source_split_4137;

  corral_source_split_4137:
    assume {:verifier.code 0} true;
    goto $bb184;

  $bb179:
    assume $i530 == 1;
    goto corral_source_split_4114;

  corral_source_split_4114:
    assume {:verifier.code 0} true;
    $i531 := $p2i.ref.i64($p2);
    call {:si_unique_call 7322} {:cexpr "__cil_tmp351"} {:si_old_unique_call 2170} boogie_si_record_i64($i531);
    goto corral_source_split_4115;

  corral_source_split_4115:
    assume {:verifier.code 0} true;
    $i532 := $add.i64($i531, 44);
    call {:si_unique_call 7323} {:cexpr "__cil_tmp352"} {:si_old_unique_call 2171} boogie_si_record_i64($i532);
    goto corral_source_split_4116;

  corral_source_split_4116:
    assume {:verifier.code 0} true;
    $i533 := $p2i.ref.i64($p2);
    call {:si_unique_call 7324} {:cexpr "__cil_tmp353"} {:si_old_unique_call 2172} boogie_si_record_i64($i533);
    goto corral_source_split_4117;

  corral_source_split_4117:
    assume {:verifier.code 0} true;
    $i534 := $add.i64($i533, 44);
    call {:si_unique_call 7325} {:cexpr "__cil_tmp354"} {:si_old_unique_call 2173} boogie_si_record_i64($i534);
    goto corral_source_split_4118;

  corral_source_split_4118:
    assume {:verifier.code 0} true;
    $p535 := $i2p.i64.ref($i534);
    goto corral_source_split_4119;

  corral_source_split_4119:
    assume {:verifier.code 0} true;
    havoc $i536;
    call {:si_unique_call 7326} {:cexpr "__cil_tmp355"} {:si_old_unique_call 2174} boogie_si_record_i32($i536);
    goto corral_source_split_4120;

  corral_source_split_4120:
    assume {:verifier.code 0} true;
    $i537 := $or.i32($i536, 1);
    goto corral_source_split_4121;

  corral_source_split_4121:
    assume {:verifier.code 0} true;
    $p538 := $i2p.i64.ref($i532);
    goto corral_source_split_4122;

  corral_source_split_4122:
    assume {:verifier.code 0} true;
    goto corral_source_split_4123;

  corral_source_split_4123:
    assume {:verifier.code 0} true;
    goto $bb181;

  $bb176:
    assume $i457 == 1;
    goto corral_source_split_4025;

  corral_source_split_4025:
    assume {:verifier.code 0} true;
    $i458 := 16;
    goto $bb178;

  $bb169:
    assume $i448 == 1;
    goto corral_source_split_4011;

  corral_source_split_4011:
    assume {:verifier.code 0} true;
    $i449 := $p2i.ref.i64($p1);
    call {:si_unique_call 7327} {:cexpr "__cil_tmp298"} {:si_old_unique_call 2116} boogie_si_record_i64($i449);
    goto corral_source_split_4012;

  corral_source_split_4012:
    assume {:verifier.code 0} true;
    $i450 := $add.i64($i449, 84);
    call {:si_unique_call 7328} {:cexpr "__cil_tmp299"} {:si_old_unique_call 2117} boogie_si_record_i64($i450);
    goto corral_source_split_4013;

  corral_source_split_4013:
    assume {:verifier.code 0} true;
    $p451 := $i2p.i64.ref($i450);
    goto corral_source_split_4014;

  corral_source_split_4014:
    assume {:verifier.code 0} true;
    havoc $i452;
    call {:si_unique_call 7329} {:cexpr "__cil_tmp300"} {:si_old_unique_call 2118} boogie_si_record_i32($i452);
    goto corral_source_split_4015;

  corral_source_split_4015:
    assume {:verifier.code 0} true;
    $i453 := $and.i32($i452, 2);
    call {:si_unique_call 7330} {:cexpr "__cil_tmp301"} {:si_old_unique_call 2119} boogie_si_record_i32($i453);
    goto corral_source_split_4016;

  corral_source_split_4016:
    assume {:verifier.code 0} true;
    $i454 := $ne.i32($i453, 0);
    goto corral_source_split_4017;

  corral_source_split_4017:
    assume {:verifier.code 0} true;
    assume {:branchcond $i454} true;
    goto $bb171, $bb172;

  $bb172:
    assume !($i454 == 1);
    goto corral_source_split_4019;

  corral_source_split_4019:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7331} {:si_old_unique_call 2120} $i455 := printk.ref.i32.i32(.str.16, $i428, 2047);
    goto corral_source_split_4020;

  corral_source_split_4020:
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb173:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb171:
    assume $i454 == 1;
    assume {:verifier.code 0} true;
    goto $bb173;

  $bb164:
    assume $i446 == 1;
    goto corral_source_split_4005;

  corral_source_split_4005:
    assume {:verifier.code 0} true;
    $i447 := 31;
    goto $bb166;

  $bb157:
    assume $i438 == 1;
    goto corral_source_split_3992;

  corral_source_split_3992:
    assume {:verifier.code 0} true;
    $i439 := $p2i.ref.i64($p1);
    call {:si_unique_call 7332} {:cexpr "__cil_tmp294"} {:si_old_unique_call 2111} boogie_si_record_i64($i439);
    goto corral_source_split_3993;

  corral_source_split_3993:
    assume {:verifier.code 0} true;
    $i440 := $add.i64($i439, 84);
    call {:si_unique_call 7333} {:cexpr "__cil_tmp295"} {:si_old_unique_call 2112} boogie_si_record_i64($i440);
    goto corral_source_split_3994;

  corral_source_split_3994:
    assume {:verifier.code 0} true;
    $p441 := $i2p.i64.ref($i440);
    goto corral_source_split_3995;

  corral_source_split_3995:
    assume {:verifier.code 0} true;
    havoc $i442;
    call {:si_unique_call 7334} {:cexpr "__cil_tmp296"} {:si_old_unique_call 2113} boogie_si_record_i32($i442);
    goto corral_source_split_3996;

  corral_source_split_3996:
    assume {:verifier.code 0} true;
    $i443 := $and.i32($i442, 2);
    call {:si_unique_call 7335} {:cexpr "__cil_tmp297"} {:si_old_unique_call 2114} boogie_si_record_i32($i443);
    goto corral_source_split_3997;

  corral_source_split_3997:
    assume {:verifier.code 0} true;
    $i444 := $ne.i32($i443, 0);
    goto corral_source_split_3998;

  corral_source_split_3998:
    assume {:verifier.code 0} true;
    assume {:branchcond $i444} true;
    goto $bb159, $bb160;

  $bb160:
    assume !($i444 == 1);
    goto corral_source_split_4000;

  corral_source_split_4000:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7336} {:si_old_unique_call 2115} $i445 := printk.ref.i32.i32(.str.15, $i426, 2047);
    goto corral_source_split_4001;

  corral_source_split_4001:
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb161:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb159:
    assume $i444 == 1;
    assume {:verifier.code 0} true;
    goto $bb161;

  $bb148:
    assume $i430 == 1;
    goto corral_source_split_3979;

  corral_source_split_3979:
    assume {:verifier.code 0} true;
    $i431 := $p2i.ref.i64($p1);
    call {:si_unique_call 7337} {:cexpr "__cil_tmp290"} {:si_old_unique_call 2106} boogie_si_record_i64($i431);
    goto corral_source_split_3980;

  corral_source_split_3980:
    assume {:verifier.code 0} true;
    $i432 := $add.i64($i431, 84);
    call {:si_unique_call 7338} {:cexpr "__cil_tmp291"} {:si_old_unique_call 2107} boogie_si_record_i64($i432);
    goto corral_source_split_3981;

  corral_source_split_3981:
    assume {:verifier.code 0} true;
    $p433 := $i2p.i64.ref($i432);
    goto corral_source_split_3982;

  corral_source_split_3982:
    assume {:verifier.code 0} true;
    havoc $i434;
    call {:si_unique_call 7339} {:cexpr "__cil_tmp292"} {:si_old_unique_call 2108} boogie_si_record_i32($i434);
    goto corral_source_split_3983;

  corral_source_split_3983:
    assume {:verifier.code 0} true;
    $i435 := $and.i32($i434, 2);
    call {:si_unique_call 7340} {:cexpr "__cil_tmp293"} {:si_old_unique_call 2109} boogie_si_record_i32($i435);
    goto corral_source_split_3984;

  corral_source_split_3984:
    assume {:verifier.code 0} true;
    $i436 := $ne.i32($i435, 0);
    goto corral_source_split_3985;

  corral_source_split_3985:
    assume {:verifier.code 0} true;
    assume {:branchcond $i436} true;
    goto $bb150, $bb151;

  $bb151:
    assume !($i436 == 1);
    goto corral_source_split_3987;

  corral_source_split_3987:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7341} {:si_old_unique_call 2110} $i437 := printk.ref.i32.i32(.str.14, $i425, 2047);
    goto corral_source_split_3988;

  corral_source_split_3988:
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb152:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb150:
    assume $i436 == 1;
    assume {:verifier.code 0} true;
    goto $bb152;

  $bb140:
    assume $i417 == 1;
    goto corral_source_split_3960;

  corral_source_split_3960:
    assume {:verifier.code 0} true;
    $i418 := $p2i.ref.i64($p2);
    call {:si_unique_call 7342} {:cexpr "__cil_tmp283"} {:si_old_unique_call 2097} boogie_si_record_i64($i418);
    goto corral_source_split_3961;

  corral_source_split_3961:
    assume {:verifier.code 0} true;
    $i419 := $add.i64($i418, 84);
    call {:si_unique_call 7343} {:cexpr "__cil_tmp284"} {:si_old_unique_call 2098} boogie_si_record_i64($i419);
    goto corral_source_split_3962;

  corral_source_split_3962:
    assume {:verifier.code 0} true;
    $p420 := $i2p.i64.ref($i419);
    goto corral_source_split_3963;

  corral_source_split_3963:
    assume {:verifier.code 0} true;
    havoc $i421;
    call {:si_unique_call 7344} {:cexpr "__cil_tmp285"} {:si_old_unique_call 2099} boogie_si_record_i32($i421);
    goto corral_source_split_3964;

  corral_source_split_3964:
    assume {:verifier.code 0} true;
    $i422 := $zext.i32.i64($i421);
    call {:si_unique_call 7345} {:cexpr "__cil_tmp286"} {:si_old_unique_call 2100} boogie_si_record_i64($i422);
    goto corral_source_split_3965;

  corral_source_split_3965:
    assume {:verifier.code 0} true;
    $i423 := $and.i64($i422, 2);
    goto corral_source_split_3966;

  corral_source_split_3966:
    assume {:verifier.code 0} true;
    $i424 := $ne.i64($i423, 0);
    goto corral_source_split_3967;

  corral_source_split_3967:
    assume {:verifier.code 0} true;
    assume {:branchcond $i424} true;
    goto $bb142, $bb143;

  $bb143:
    assume !($i424 == 1);
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb144:
    assume {:verifier.code 0} true;
    goto $bb145;

  $bb142:
    assume $i424 == 1;
    goto corral_source_split_3969;

  corral_source_split_3969:
    assume {:verifier.code 0} true;
    goto $bb144;

  $bb137:
    assume $i404 == 1;
    goto corral_source_split_3947;

  corral_source_split_3947:
    assume {:verifier.code 0} true;
    $i405 := $shl.i32($i17, 1);
    call {:si_unique_call 7346} {:cexpr "v_disp"} {:si_old_unique_call 2090} boogie_si_record_i32($i405);
    goto corral_source_split_3948;

  corral_source_split_3948:
    assume {:verifier.code 0} true;
    $i406 := $shl.i32($i361, 1);
    call {:si_unique_call 7347} {:cexpr "v_sync_strt"} {:si_old_unique_call 2091} boogie_si_record_i32($i406);
    goto corral_source_split_3949;

  corral_source_split_3949:
    assume {:verifier.code 0} true;
    $i407 := $shl.i32($i360, 1);
    call {:si_unique_call 7348} {:cexpr "v_sync_end"} {:si_old_unique_call 2092} boogie_si_record_i32($i407);
    goto corral_source_split_3950;

  corral_source_split_3950:
    assume {:verifier.code 0} true;
    $i408 := $shl.i32($i362, 1);
    call {:si_unique_call 7349} {:cexpr "v_total"} {:si_old_unique_call 2093} boogie_si_record_i32($i408);
    goto corral_source_split_3951;

  corral_source_split_3951:
    assume {:verifier.code 0} true;
    $i409, $i410, $i411, $i412 := $i407, $i406, $i405, $i408;
    goto $bb139;

  $bb130:
    assume $i395 == 1;
    goto corral_source_split_3933;

  corral_source_split_3933:
    assume {:verifier.code 0} true;
    $i396 := $p2i.ref.i64($p1);
    call {:si_unique_call 7350} {:cexpr "__cil_tmp276"} {:si_old_unique_call 2085} boogie_si_record_i64($i396);
    goto corral_source_split_3934;

  corral_source_split_3934:
    assume {:verifier.code 0} true;
    $i397 := $add.i64($i396, 84);
    call {:si_unique_call 7351} {:cexpr "__cil_tmp277"} {:si_old_unique_call 2086} boogie_si_record_i64($i397);
    goto corral_source_split_3935;

  corral_source_split_3935:
    assume {:verifier.code 0} true;
    $p398 := $i2p.i64.ref($i397);
    goto corral_source_split_3936;

  corral_source_split_3936:
    assume {:verifier.code 0} true;
    havoc $i399;
    call {:si_unique_call 7352} {:cexpr "__cil_tmp278"} {:si_old_unique_call 2087} boogie_si_record_i32($i399);
    goto corral_source_split_3937;

  corral_source_split_3937:
    assume {:verifier.code 0} true;
    $i400 := $and.i32($i399, 2);
    call {:si_unique_call 7353} {:cexpr "__cil_tmp279"} {:si_old_unique_call 2088} boogie_si_record_i32($i400);
    goto corral_source_split_3938;

  corral_source_split_3938:
    assume {:verifier.code 0} true;
    $i401 := $ne.i32($i400, 0);
    goto corral_source_split_3939;

  corral_source_split_3939:
    assume {:verifier.code 0} true;
    assume {:branchcond $i401} true;
    goto $bb132, $bb133;

  $bb133:
    assume !($i401 == 1);
    goto corral_source_split_3941;

  corral_source_split_3941:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7354} {:si_old_unique_call 2089} $i402 := printk.ref.i32.i32(.str.13, $i375, 511);
    goto corral_source_split_3942;

  corral_source_split_3942:
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb134:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb132:
    assume $i401 == 1;
    assume {:verifier.code 0} true;
    goto $bb134;

  $bb125:
    assume $i393 == 1;
    goto corral_source_split_3927;

  corral_source_split_3927:
    assume {:verifier.code 0} true;
    $i394 := 31;
    goto $bb127;

  $bb118:
    assume $i385 == 1;
    goto corral_source_split_3914;

  corral_source_split_3914:
    assume {:verifier.code 0} true;
    $i386 := $p2i.ref.i64($p1);
    call {:si_unique_call 7355} {:cexpr "__cil_tmp272"} {:si_old_unique_call 2080} boogie_si_record_i64($i386);
    goto corral_source_split_3915;

  corral_source_split_3915:
    assume {:verifier.code 0} true;
    $i387 := $add.i64($i386, 84);
    call {:si_unique_call 7356} {:cexpr "__cil_tmp273"} {:si_old_unique_call 2081} boogie_si_record_i64($i387);
    goto corral_source_split_3916;

  corral_source_split_3916:
    assume {:verifier.code 0} true;
    $p388 := $i2p.i64.ref($i387);
    goto corral_source_split_3917;

  corral_source_split_3917:
    assume {:verifier.code 0} true;
    havoc $i389;
    call {:si_unique_call 7357} {:cexpr "__cil_tmp274"} {:si_old_unique_call 2082} boogie_si_record_i32($i389);
    goto corral_source_split_3918;

  corral_source_split_3918:
    assume {:verifier.code 0} true;
    $i390 := $and.i32($i389, 2);
    call {:si_unique_call 7358} {:cexpr "__cil_tmp275"} {:si_old_unique_call 2083} boogie_si_record_i32($i390);
    goto corral_source_split_3919;

  corral_source_split_3919:
    assume {:verifier.code 0} true;
    $i391 := $ne.i32($i390, 0);
    goto corral_source_split_3920;

  corral_source_split_3920:
    assume {:verifier.code 0} true;
    assume {:branchcond $i391} true;
    goto $bb120, $bb121;

  $bb121:
    assume !($i391 == 1);
    goto corral_source_split_3922;

  corral_source_split_3922:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7359} {:si_old_unique_call 2084} $i392 := printk.ref.i32.i32(.str.12, $i371, 511);
    goto corral_source_split_3923;

  corral_source_split_3923:
    assume {:verifier.code 0} true;
    goto $bb122;

  $bb122:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb120:
    assume $i391 == 1;
    assume {:verifier.code 0} true;
    goto $bb122;

  $bb109:
    assume $i377 == 1;
    goto corral_source_split_3901;

  corral_source_split_3901:
    assume {:verifier.code 0} true;
    $i378 := $p2i.ref.i64($p1);
    call {:si_unique_call 7360} {:cexpr "__cil_tmp268"} {:si_old_unique_call 2075} boogie_si_record_i64($i378);
    goto corral_source_split_3902;

  corral_source_split_3902:
    assume {:verifier.code 0} true;
    $i379 := $add.i64($i378, 84);
    call {:si_unique_call 7361} {:cexpr "__cil_tmp269"} {:si_old_unique_call 2076} boogie_si_record_i64($i379);
    goto corral_source_split_3903;

  corral_source_split_3903:
    assume {:verifier.code 0} true;
    $p380 := $i2p.i64.ref($i379);
    goto corral_source_split_3904;

  corral_source_split_3904:
    assume {:verifier.code 0} true;
    havoc $i381;
    call {:si_unique_call 7362} {:cexpr "__cil_tmp270"} {:si_old_unique_call 2077} boogie_si_record_i32($i381);
    goto corral_source_split_3905;

  corral_source_split_3905:
    assume {:verifier.code 0} true;
    $i382 := $and.i32($i381, 2);
    call {:si_unique_call 7363} {:cexpr "__cil_tmp271"} {:si_old_unique_call 2078} boogie_si_record_i32($i382);
    goto corral_source_split_3906;

  corral_source_split_3906:
    assume {:verifier.code 0} true;
    $i383 := $ne.i32($i382, 0);
    goto corral_source_split_3907;

  corral_source_split_3907:
    assume {:verifier.code 0} true;
    assume {:branchcond $i383} true;
    goto $bb111, $bb112;

  $bb112:
    assume !($i383 == 1);
    goto corral_source_split_3909;

  corral_source_split_3909:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7364} {:si_old_unique_call 2079} $i384 := printk.ref.i32.i32(.str.11, $i369, 255);
    goto corral_source_split_3910;

  corral_source_split_3910:
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb113:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb111:
    assume $i383 == 1;
    assume {:verifier.code 0} true;
    goto $bb113;

  $bb95:
    assume $i281 == 1;
    goto corral_source_split_3808;

  corral_source_split_3808:
    assume {:verifier.code 0} true;
    $i282 := $p2i.ref.i64($p2);
    call {:si_unique_call 7365} {:cexpr "__cil_tmp218"} {:si_old_unique_call 2014} boogie_si_record_i64($i282);
    goto corral_source_split_3809;

  corral_source_split_3809:
    assume {:verifier.code 0} true;
    $i283 := $add.i64($i282, 84);
    call {:si_unique_call 7366} {:cexpr "__cil_tmp219"} {:si_old_unique_call 2015} boogie_si_record_i64($i283);
    goto corral_source_split_3810;

  corral_source_split_3810:
    assume {:verifier.code 0} true;
    $p284 := $i2p.i64.ref($i283);
    goto corral_source_split_3811;

  corral_source_split_3811:
    assume {:verifier.code 0} true;
    havoc $i285;
    call {:si_unique_call 7367} {:cexpr "__cil_tmp220"} {:si_old_unique_call 2016} boogie_si_record_i32($i285);
    goto corral_source_split_3812;

  corral_source_split_3812:
    assume {:verifier.code 0} true;
    $i286 := $zext.i32.i64($i285);
    call {:si_unique_call 7368} {:cexpr "__cil_tmp221"} {:si_old_unique_call 2017} boogie_si_record_i64($i286);
    goto corral_source_split_3813;

  corral_source_split_3813:
    assume {:verifier.code 0} true;
    $i287 := $and.i64($i286, 2);
    goto corral_source_split_3814;

  corral_source_split_3814:
    assume {:verifier.code 0} true;
    $i288 := $ne.i64($i287, 0);
    goto corral_source_split_3815;

  corral_source_split_3815:
    assume {:verifier.code 0} true;
    assume {:branchcond $i288} true;
    goto $bb97, $bb98;

  $bb98:
    assume !($i288 == 1);
    assume {:verifier.code 0} true;
    $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359 := $i159, $i154, $i164, $i143, $i138, $i133, $i149, $i57;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3886;

  corral_source_split_3886:
    assume {:verifier.code 0} true;
    $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367 := $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359;
    goto $bb106;

  $bb97:
    assume $i288 == 1;
    goto corral_source_split_3817;

  corral_source_split_3817:
    assume {:verifier.code 0} true;
    $i289 := $and.i32($i57, $sub.i32(0, 4));
    call {:si_unique_call 7369} {:cexpr "vmode"} {:si_old_unique_call 2018} boogie_si_record_i32($i289);
    goto corral_source_split_3818;

  corral_source_split_3818:
    assume {:verifier.code 0} true;
    $i290 := $p2i.ref.i64($p9);
    call {:si_unique_call 7370} {:cexpr "__cil_tmp222"} {:si_old_unique_call 2019} boogie_si_record_i64($i290);
    goto corral_source_split_3819;

  corral_source_split_3819:
    assume {:verifier.code 0} true;
    $i291 := $add.i64($i290, 1146);
    call {:si_unique_call 7371} {:cexpr "__cil_tmp223"} {:si_old_unique_call 2020} boogie_si_record_i64($i291);
    goto corral_source_split_3820;

  corral_source_split_3820:
    assume {:verifier.code 0} true;
    $p292 := $i2p.i64.ref($i291);
    goto corral_source_split_3821;

  corral_source_split_3821:
    assume {:verifier.code 0} true;
    havoc $i293;
    call {:si_unique_call 7372} {:cexpr "__cil_tmp224"} {:si_old_unique_call 2021} boogie_si_record_i16($i293);
    goto corral_source_split_3822;

  corral_source_split_3822:
    assume {:verifier.code 0} true;
    $i294 := $zext.i16.i32($i293);
    call {:si_unique_call 7373} {:cexpr "__cil_tmp225"} {:si_old_unique_call 2022} boogie_si_record_i32($i294);
    goto corral_source_split_3823;

  corral_source_split_3823:
    assume {:verifier.code 0} true;
    $i295 := $ult.i32($i17, $i294);
    goto corral_source_split_3824;

  corral_source_split_3824:
    assume {:verifier.code 0} true;
    assume {:branchcond $i295} true;
    goto $bb99, $bb100;

  $bb100:
    assume !($i295 == 1);
    assume {:verifier.code 0} true;
    $i306, $i307 := $i289, 1;
    goto $bb104;

  $bb104:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3840;

  corral_source_split_3840:
    assume {:verifier.code 0} true;
    $i308 := $p2i.ref.i64($p9);
    call {:si_unique_call 7374} {:cexpr "__cil_tmp231"} {:si_old_unique_call 2029} boogie_si_record_i64($i308);
    goto corral_source_split_3841;

  corral_source_split_3841:
    assume {:verifier.code 0} true;
    $i309 := $add.i64($i308, 1168);
    call {:si_unique_call 7375} {:cexpr "__cil_tmp232"} {:si_old_unique_call 2030} boogie_si_record_i64($i309);
    goto corral_source_split_3842;

  corral_source_split_3842:
    assume {:verifier.code 0} true;
    $p310 := $i2p.i64.ref($i309);
    goto corral_source_split_3843;

  corral_source_split_3843:
    assume {:verifier.code 0} true;
    havoc $i311;
    call {:si_unique_call 7376} {:cexpr "__cil_tmp233"} {:si_old_unique_call 2031} boogie_si_record_i16($i311);
    goto corral_source_split_3844;

  corral_source_split_3844:
    assume {:verifier.code 0} true;
    $i312 := $zext.i16.i32($i311);
    call {:si_unique_call 7377} {:cexpr "__cil_tmp234"} {:si_old_unique_call 2032} boogie_si_record_i32($i312);
    goto corral_source_split_3845;

  corral_source_split_3845:
    assume {:verifier.code 0} true;
    $i313 := $add.i32($i13, $i312);
    call {:si_unique_call 7378} {:cexpr "h_sync_strt"} {:si_old_unique_call 2033} boogie_si_record_i32($i313);
    goto corral_source_split_3846;

  corral_source_split_3846:
    assume {:verifier.code 0} true;
    $i314 := $p2i.ref.i64($p9);
    call {:si_unique_call 7379} {:cexpr "__cil_tmp235"} {:si_old_unique_call 2034} boogie_si_record_i64($i314);
    goto corral_source_split_3847;

  corral_source_split_3847:
    assume {:verifier.code 0} true;
    $i315 := $add.i64($i314, 1160);
    call {:si_unique_call 7380} {:cexpr "__cil_tmp236"} {:si_old_unique_call 2035} boogie_si_record_i64($i315);
    goto corral_source_split_3848;

  corral_source_split_3848:
    assume {:verifier.code 0} true;
    $p316 := $i2p.i64.ref($i315);
    goto corral_source_split_3849;

  corral_source_split_3849:
    assume {:verifier.code 0} true;
    havoc $i317;
    call {:si_unique_call 7381} {:cexpr "__cil_tmp237"} {:si_old_unique_call 2036} boogie_si_record_i16($i317);
    goto corral_source_split_3850;

  corral_source_split_3850:
    assume {:verifier.code 0} true;
    $i318 := $zext.i16.i32($i317);
    call {:si_unique_call 7382} {:cexpr "__cil_tmp238"} {:si_old_unique_call 2037} boogie_si_record_i32($i318);
    goto corral_source_split_3851;

  corral_source_split_3851:
    assume {:verifier.code 0} true;
    $i319 := $add.i32($i313, $i318);
    call {:si_unique_call 7383} {:cexpr "h_sync_end"} {:si_old_unique_call 2038} boogie_si_record_i32($i319);
    goto corral_source_split_3852;

  corral_source_split_3852:
    assume {:verifier.code 0} true;
    $i320 := $p2i.ref.i64($p9);
    call {:si_unique_call 7384} {:cexpr "__cil_tmp239"} {:si_old_unique_call 2039} boogie_si_record_i64($i320);
    goto corral_source_split_3853;

  corral_source_split_3853:
    assume {:verifier.code 0} true;
    $i321 := $add.i64($i320, 1158);
    call {:si_unique_call 7385} {:cexpr "__cil_tmp240"} {:si_old_unique_call 2040} boogie_si_record_i64($i321);
    goto corral_source_split_3854;

  corral_source_split_3854:
    assume {:verifier.code 0} true;
    $p322 := $i2p.i64.ref($i321);
    goto corral_source_split_3855;

  corral_source_split_3855:
    assume {:verifier.code 0} true;
    havoc $i323;
    call {:si_unique_call 7386} {:cexpr "__cil_tmp241"} {:si_old_unique_call 2041} boogie_si_record_i16($i323);
    goto corral_source_split_3856;

  corral_source_split_3856:
    assume {:verifier.code 0} true;
    $i324 := $zext.i16.i32($i323);
    call {:si_unique_call 7387} {:cexpr "h_sync_dly"} {:si_old_unique_call 2042} boogie_si_record_i32($i324);
    goto corral_source_split_3857;

  corral_source_split_3857:
    assume {:verifier.code 0} true;
    $i325 := $p2i.ref.i64($p9);
    call {:si_unique_call 7388} {:cexpr "__cil_tmp242"} {:si_old_unique_call 2043} boogie_si_record_i64($i325);
    goto corral_source_split_3858;

  corral_source_split_3858:
    assume {:verifier.code 0} true;
    $i326 := $add.i64($i325, 1172);
    call {:si_unique_call 7389} {:cexpr "__cil_tmp243"} {:si_old_unique_call 2044} boogie_si_record_i64($i326);
    goto corral_source_split_3859;

  corral_source_split_3859:
    assume {:verifier.code 0} true;
    $p327 := $i2p.i64.ref($i326);
    goto corral_source_split_3860;

  corral_source_split_3860:
    assume {:verifier.code 0} true;
    havoc $i328;
    call {:si_unique_call 7390} {:cexpr "__cil_tmp244"} {:si_old_unique_call 2045} boogie_si_record_i16($i328);
    goto corral_source_split_3861;

  corral_source_split_3861:
    assume {:verifier.code 0} true;
    $i329 := $zext.i16.i32($i328);
    call {:si_unique_call 7391} {:cexpr "__cil_tmp245"} {:si_old_unique_call 2046} boogie_si_record_i32($i329);
    goto corral_source_split_3862;

  corral_source_split_3862:
    assume {:verifier.code 0} true;
    $i330 := $add.i32($i13, $i329);
    call {:si_unique_call 7392} {:cexpr "h_total"} {:si_old_unique_call 2047} boogie_si_record_i32($i330);
    goto corral_source_split_3863;

  corral_source_split_3863:
    assume {:verifier.code 0} true;
    $i331 := $p2i.ref.i64($p9);
    call {:si_unique_call 7393} {:cexpr "__cil_tmp246"} {:si_old_unique_call 2048} boogie_si_record_i64($i331);
    goto corral_source_split_3864;

  corral_source_split_3864:
    assume {:verifier.code 0} true;
    $i332 := $add.i64($i331, 1170);
    call {:si_unique_call 7394} {:cexpr "__cil_tmp247"} {:si_old_unique_call 2049} boogie_si_record_i64($i332);
    goto corral_source_split_3865;

  corral_source_split_3865:
    assume {:verifier.code 0} true;
    $p333 := $i2p.i64.ref($i332);
    goto corral_source_split_3866;

  corral_source_split_3866:
    assume {:verifier.code 0} true;
    havoc $i334;
    call {:si_unique_call 7395} {:cexpr "__cil_tmp248"} {:si_old_unique_call 2050} boogie_si_record_i16($i334);
    goto corral_source_split_3867;

  corral_source_split_3867:
    assume {:verifier.code 0} true;
    $i335 := $zext.i16.i32($i334);
    call {:si_unique_call 7396} {:cexpr "__cil_tmp249"} {:si_old_unique_call 2051} boogie_si_record_i32($i335);
    goto corral_source_split_3868;

  corral_source_split_3868:
    assume {:verifier.code 0} true;
    $i336 := $sdiv.i32($i335, $i307);
    call {:si_unique_call 7397} {:cexpr "__cil_tmp250"} {:si_old_unique_call 2052} boogie_si_record_i32($i336);
    goto corral_source_split_3869;

  corral_source_split_3869:
    assume {:verifier.code 0} true;
    $i337 := $add.i32($i17, $i336);
    call {:si_unique_call 7398} {:cexpr "v_sync_strt"} {:si_old_unique_call 2053} boogie_si_record_i32($i337);
    goto corral_source_split_3870;

  corral_source_split_3870:
    assume {:verifier.code 0} true;
    $i338 := $p2i.ref.i64($p9);
    call {:si_unique_call 7399} {:cexpr "__cil_tmp252"} {:si_old_unique_call 2054} boogie_si_record_i64($i338);
    goto corral_source_split_3871;

  corral_source_split_3871:
    assume {:verifier.code 0} true;
    $i339 := $add.i64($i338, 1166);
    call {:si_unique_call 7400} {:cexpr "__cil_tmp253"} {:si_old_unique_call 2055} boogie_si_record_i64($i339);
    goto corral_source_split_3872;

  corral_source_split_3872:
    assume {:verifier.code 0} true;
    $p340 := $i2p.i64.ref($i339);
    goto corral_source_split_3873;

  corral_source_split_3873:
    assume {:verifier.code 0} true;
    havoc $i341;
    call {:si_unique_call 7401} {:cexpr "__cil_tmp254"} {:si_old_unique_call 2056} boogie_si_record_i16($i341);
    goto corral_source_split_3874;

  corral_source_split_3874:
    assume {:verifier.code 0} true;
    $i342 := $zext.i16.i32($i341);
    call {:si_unique_call 7402} {:cexpr "__cil_tmp255"} {:si_old_unique_call 2057} boogie_si_record_i32($i342);
    goto corral_source_split_3875;

  corral_source_split_3875:
    assume {:verifier.code 0} true;
    $i343 := $sdiv.i32($i342, $i307);
    call {:si_unique_call 7403} {:cexpr "__cil_tmp256"} {:si_old_unique_call 2058} boogie_si_record_i32($i343);
    goto corral_source_split_3876;

  corral_source_split_3876:
    assume {:verifier.code 0} true;
    $i344 := $add.i32($i337, $i343);
    call {:si_unique_call 7404} {:cexpr "v_sync_end"} {:si_old_unique_call 2059} boogie_si_record_i32($i344);
    goto corral_source_split_3877;

  corral_source_split_3877:
    assume {:verifier.code 0} true;
    $i345 := $p2i.ref.i64($p9);
    call {:si_unique_call 7405} {:cexpr "__cil_tmp258"} {:si_old_unique_call 2060} boogie_si_record_i64($i345);
    goto corral_source_split_3878;

  corral_source_split_3878:
    assume {:verifier.code 0} true;
    $i346 := $add.i64($i345, 1174);
    call {:si_unique_call 7406} {:cexpr "__cil_tmp259"} {:si_old_unique_call 2061} boogie_si_record_i64($i346);
    goto corral_source_split_3879;

  corral_source_split_3879:
    assume {:verifier.code 0} true;
    $p347 := $i2p.i64.ref($i346);
    goto corral_source_split_3880;

  corral_source_split_3880:
    assume {:verifier.code 0} true;
    havoc $i348;
    call {:si_unique_call 7407} {:cexpr "__cil_tmp260"} {:si_old_unique_call 2062} boogie_si_record_i16($i348);
    goto corral_source_split_3881;

  corral_source_split_3881:
    assume {:verifier.code 0} true;
    $i349 := $zext.i16.i32($i348);
    call {:si_unique_call 7408} {:cexpr "__cil_tmp261"} {:si_old_unique_call 2063} boogie_si_record_i32($i349);
    goto corral_source_split_3882;

  corral_source_split_3882:
    assume {:verifier.code 0} true;
    $i350 := $sdiv.i32($i349, $i307);
    call {:si_unique_call 7409} {:cexpr "__cil_tmp262"} {:si_old_unique_call 2064} boogie_si_record_i32($i350);
    goto corral_source_split_3883;

  corral_source_split_3883:
    assume {:verifier.code 0} true;
    $i351 := $add.i32($i17, $i350);
    call {:si_unique_call 7410} {:cexpr "v_total"} {:si_old_unique_call 2065} boogie_si_record_i32($i351);
    goto corral_source_split_3884;

  corral_source_split_3884:
    assume {:verifier.code 0} true;
    $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359 := $i344, $i337, $i351, $i324, $i319, $i313, $i330, $i306;
    goto $bb105;

  $bb99:
    assume $i295 == 1;
    goto corral_source_split_3826;

  corral_source_split_3826:
    assume {:verifier.code 0} true;
    $i296 := $p2i.ref.i64($p9);
    call {:si_unique_call 7411} {:cexpr "__cil_tmp226"} {:si_old_unique_call 2023} boogie_si_record_i64($i296);
    goto corral_source_split_3827;

  corral_source_split_3827:
    assume {:verifier.code 0} true;
    $i297 := $add.i64($i296, 1146);
    call {:si_unique_call 7412} {:cexpr "__cil_tmp227"} {:si_old_unique_call 2024} boogie_si_record_i64($i297);
    goto corral_source_split_3828;

  corral_source_split_3828:
    assume {:verifier.code 0} true;
    $p298 := $i2p.i64.ref($i297);
    goto corral_source_split_3829;

  corral_source_split_3829:
    assume {:verifier.code 0} true;
    havoc $i299;
    call {:si_unique_call 7413} {:cexpr "__cil_tmp228"} {:si_old_unique_call 2025} boogie_si_record_i16($i299);
    goto corral_source_split_3830;

  corral_source_split_3830:
    assume {:verifier.code 0} true;
    $i300 := $zext.i16.i32($i299);
    call {:si_unique_call 7414} {:cexpr "__cil_tmp229"} {:si_old_unique_call 2026} boogie_si_record_i32($i300);
    goto corral_source_split_3831;

  corral_source_split_3831:
    assume {:verifier.code 0} true;
    $i301 := $udiv.i32($i300, $i17);
    call {:si_unique_call 7415} {:cexpr "__cil_tmp230"} {:si_old_unique_call 2027} boogie_si_record_i32($i301);
    goto corral_source_split_3832;

  corral_source_split_3832:
    assume {:verifier.code 0} true;
    $i302 := $sgt.i32($i301, 1);
    goto corral_source_split_3833;

  corral_source_split_3833:
    assume {:verifier.code 0} true;
    assume {:branchcond $i302} true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i302 == 1);
    assume {:verifier.code 0} true;
    $i304, $i305 := $i289, $i301;
    goto $bb103;

  $bb103:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_3838;

  corral_source_split_3838:
    assume {:verifier.code 0} true;
    $i306, $i307 := $i304, $i305;
    goto $bb104;

  $bb101:
    assume $i302 == 1;
    goto corral_source_split_3835;

  corral_source_split_3835:
    assume {:verifier.code 0} true;
    $i303 := $or.i32($i289, 2);
    call {:si_unique_call 7416} {:cexpr "vmode"} {:si_old_unique_call 2028} boogie_si_record_i32($i303);
    goto corral_source_split_3836;

  corral_source_split_3836:
    assume {:verifier.code 0} true;
    $i304, $i305 := $i303, 2;
    goto $bb103;

  $bb67:
    assume $i169 == 1;
    goto corral_source_split_3661;

  corral_source_split_3661:
    assume {:verifier.code 0} true;
    $i170 := $p2i.ref.i64($p9);
    call {:si_unique_call 7417} {:cexpr "__cil_tmp145"} {:si_old_unique_call 1936} boogie_si_record_i64($i170);
    goto corral_source_split_3662;

  corral_source_split_3662:
    assume {:verifier.code 0} true;
    $i171 := $add.i64($i170, 1044);
    call {:si_unique_call 7418} {:cexpr "__cil_tmp146"} {:si_old_unique_call 1937} boogie_si_record_i64($i171);
    goto corral_source_split_3663;

  corral_source_split_3663:
    assume {:verifier.code 0} true;
    $p172 := $i2p.i64.ref($i171);
    goto corral_source_split_3664;

  corral_source_split_3664:
    assume {:verifier.code 0} true;
    havoc $i173;
    call {:si_unique_call 7419} {:cexpr "__cil_tmp147"} {:si_old_unique_call 1938} boogie_si_record_i32($i173);
    goto corral_source_split_3665;

  corral_source_split_3665:
    assume {:verifier.code 0} true;
    $i174 := $and.i32($i173, 262144);
    call {:si_unique_call 7420} {:cexpr "__cil_tmp148"} {:si_old_unique_call 1939} boogie_si_record_i32($i174);
    goto corral_source_split_3666;

  corral_source_split_3666:
    assume {:verifier.code 0} true;
    $i175 := $ne.i32($i174, 0);
    goto corral_source_split_3667;

  corral_source_split_3667:
    assume {:verifier.code 0} true;
    assume {:branchcond $i175} true;
    goto $bb69, $bb70;

  $bb70:
    assume !($i175 == 1);
    goto corral_source_split_3669;

  corral_source_split_3669:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7421} {:si_old_unique_call 1940} $i176 := aty_ld_le32(164, $p9);
    call {:si_unique_call 7422} {:cexpr "tmp___7"} {:si_old_unique_call 1941} boogie_si_record_i32($i176);
    goto corral_source_split_3670;

  corral_source_split_3670:
    assume {:verifier.code 0} true;
    $i177 := $p2i.ref.i64($p2);
    call {:si_unique_call 7423} {:cexpr "__cil_tmp150"} {:si_old_unique_call 1942} boogie_si_record_i64($i177);
    goto corral_source_split_3671;

  corral_source_split_3671:
    assume {:verifier.code 0} true;
    $i178 := $add.i64($i177, 92);
    call {:si_unique_call 7424} {:cexpr "__cil_tmp151"} {:si_old_unique_call 1943} boogie_si_record_i64($i178);
    goto corral_source_split_3672;

  corral_source_split_3672:
    assume {:verifier.code 0} true;
    $i179 := $and.i32($i176, $sub.i32(0, 1856));
    goto corral_source_split_3673;

  corral_source_split_3673:
    assume {:verifier.code 0} true;
    $p180 := $i2p.i64.ref($i178);
    goto corral_source_split_3674;

  corral_source_split_3674:
    assume {:verifier.code 0} true;
    goto corral_source_split_3675;

  corral_source_split_3675:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7425} {:si_old_unique_call 1944} aty_st_le32(164, $i176, $p9);
    goto corral_source_split_3676;

  corral_source_split_3676:
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    $i181 := $p2i.ref.i64($p9);
    call {:si_unique_call 7426} {:cexpr "__cil_tmp153"} {:si_old_unique_call 1945} boogie_si_record_i64($i181);
    goto corral_source_split_3678;

  corral_source_split_3678:
    assume {:verifier.code 0} true;
    $i182 := $add.i64($i181, 1044);
    call {:si_unique_call 7427} {:cexpr "__cil_tmp154"} {:si_old_unique_call 1946} boogie_si_record_i64($i182);
    goto corral_source_split_3679;

  corral_source_split_3679:
    assume {:verifier.code 0} true;
    $p183 := $i2p.i64.ref($i182);
    goto corral_source_split_3680;

  corral_source_split_3680:
    assume {:verifier.code 0} true;
    havoc $i184;
    call {:si_unique_call 7428} {:cexpr "__cil_tmp155"} {:si_old_unique_call 1947} boogie_si_record_i32($i184);
    goto corral_source_split_3681;

  corral_source_split_3681:
    assume {:verifier.code 0} true;
    $i185 := $and.i32($i184, 512);
    call {:si_unique_call 7429} {:cexpr "__cil_tmp156"} {:si_old_unique_call 1948} boogie_si_record_i32($i185);
    goto corral_source_split_3682;

  corral_source_split_3682:
    assume {:verifier.code 0} true;
    $i186 := $ne.i32($i185, 0);
    goto corral_source_split_3683;

  corral_source_split_3683:
    assume {:verifier.code 0} true;
    assume {:branchcond $i186} true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i186 == 1);
    goto corral_source_split_3685;

  corral_source_split_3685:
    assume {:verifier.code 0} true;
    $i187 := $p2i.ref.i64($p2);
    call {:si_unique_call 7430} {:cexpr "__cil_tmp157"} {:si_old_unique_call 1949} boogie_si_record_i64($i187);
    goto corral_source_split_3686;

  corral_source_split_3686:
    assume {:verifier.code 0} true;
    $i188 := $add.i64($i187, 92);
    call {:si_unique_call 7431} {:cexpr "__cil_tmp158"} {:si_old_unique_call 1950} boogie_si_record_i64($i188);
    goto corral_source_split_3687;

  corral_source_split_3687:
    assume {:verifier.code 0} true;
    $i189 := $p2i.ref.i64($p2);
    call {:si_unique_call 7432} {:cexpr "__cil_tmp159"} {:si_old_unique_call 1951} boogie_si_record_i64($i189);
    goto corral_source_split_3688;

  corral_source_split_3688:
    assume {:verifier.code 0} true;
    $i190 := $add.i64($i189, 92);
    call {:si_unique_call 7433} {:cexpr "__cil_tmp160"} {:si_old_unique_call 1952} boogie_si_record_i64($i190);
    goto corral_source_split_3689;

  corral_source_split_3689:
    assume {:verifier.code 0} true;
    $p191 := $i2p.i64.ref($i190);
    goto corral_source_split_3690;

  corral_source_split_3690:
    assume {:verifier.code 0} true;
    havoc $i192;
    call {:si_unique_call 7434} {:cexpr "__cil_tmp161"} {:si_old_unique_call 1953} boogie_si_record_i32($i192);
    goto corral_source_split_3691;

  corral_source_split_3691:
    assume {:verifier.code 0} true;
    $i193 := $or.i32($i192, 1024);
    goto corral_source_split_3692;

  corral_source_split_3692:
    assume {:verifier.code 0} true;
    $p194 := $i2p.i64.ref($i188);
    goto corral_source_split_3693;

  corral_source_split_3693:
    assume {:verifier.code 0} true;
    goto corral_source_split_3694;

  corral_source_split_3694:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7435} {:si_old_unique_call 1954} $i195 := aty_ld_lcd(0, $p9);
    call {:si_unique_call 7436} {:cexpr "tmp___8"} {:si_old_unique_call 1955} boogie_si_record_i32($i195);
    goto corral_source_split_3696;

  corral_source_split_3696:
    assume {:verifier.code 0} true;
    $i196 := $p2i.ref.i64($p2);
    call {:si_unique_call 7437} {:cexpr "__cil_tmp163"} {:si_old_unique_call 1956} boogie_si_record_i64($i196);
    goto corral_source_split_3697;

  corral_source_split_3697:
    assume {:verifier.code 0} true;
    $i197 := $add.i64($i196, 88);
    call {:si_unique_call 7438} {:cexpr "__cil_tmp164"} {:si_old_unique_call 1957} boogie_si_record_i64($i197);
    goto corral_source_split_3698;

  corral_source_split_3698:
    assume {:verifier.code 0} true;
    $i198 := $or.i32($i195, 16384);
    goto corral_source_split_3699;

  corral_source_split_3699:
    assume {:verifier.code 0} true;
    $p199 := $i2p.i64.ref($i197);
    goto corral_source_split_3700;

  corral_source_split_3700:
    assume {:verifier.code 0} true;
    goto corral_source_split_3701;

  corral_source_split_3701:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7439} {:si_old_unique_call 1958} $i200 := aty_ld_lcd(1, $p9);
    call {:si_unique_call 7440} {:cexpr "tmp___9"} {:si_old_unique_call 1959} boogie_si_record_i32($i200);
    goto corral_source_split_3702;

  corral_source_split_3702:
    assume {:verifier.code 0} true;
    $i201 := $p2i.ref.i64($p2);
    call {:si_unique_call 7441} {:cexpr "__cil_tmp166"} {:si_old_unique_call 1960} boogie_si_record_i64($i201);
    goto corral_source_split_3703;

  corral_source_split_3703:
    assume {:verifier.code 0} true;
    $i202 := $add.i64($i201, 84);
    call {:si_unique_call 7442} {:cexpr "__cil_tmp167"} {:si_old_unique_call 1961} boogie_si_record_i64($i202);
    goto corral_source_split_3704;

  corral_source_split_3704:
    assume {:verifier.code 0} true;
    $i203 := $zext.i32.i64($i200);
    call {:si_unique_call 7443} {:cexpr "__cil_tmp168"} {:si_old_unique_call 1962} boogie_si_record_i64($i203);
    goto corral_source_split_3705;

  corral_source_split_3705:
    assume {:verifier.code 0} true;
    $i204 := $and.i64($i203, $sub.i64(0, 134217729));
    call {:si_unique_call 7444} {:cexpr "__cil_tmp169"} {:si_old_unique_call 1963} boogie_si_record_i64($i204);
    goto corral_source_split_3706;

  corral_source_split_3706:
    assume {:verifier.code 0} true;
    $i205 := $trunc.i64.i32($i204);
    goto corral_source_split_3707;

  corral_source_split_3707:
    assume {:verifier.code 0} true;
    $p206 := $i2p.i64.ref($i202);
    goto corral_source_split_3708;

  corral_source_split_3708:
    assume {:verifier.code 0} true;
    goto corral_source_split_3709;

  corral_source_split_3709:
    assume {:verifier.code 0} true;
    $i207 := $p2i.ref.i64($p2);
    call {:si_unique_call 7445} {:cexpr "__cil_tmp170"} {:si_old_unique_call 1964} boogie_si_record_i64($i207);
    goto corral_source_split_3710;

  corral_source_split_3710:
    assume {:verifier.code 0} true;
    $i208 := $add.i64($i207, 84);
    call {:si_unique_call 7446} {:cexpr "__cil_tmp171"} {:si_old_unique_call 1965} boogie_si_record_i64($i208);
    goto corral_source_split_3711;

  corral_source_split_3711:
    assume {:verifier.code 0} true;
    $i209 := $p2i.ref.i64($p2);
    call {:si_unique_call 7447} {:cexpr "__cil_tmp172"} {:si_old_unique_call 1966} boogie_si_record_i64($i209);
    goto corral_source_split_3712;

  corral_source_split_3712:
    assume {:verifier.code 0} true;
    $i210 := $add.i64($i209, 84);
    call {:si_unique_call 7448} {:cexpr "__cil_tmp173"} {:si_old_unique_call 1967} boogie_si_record_i64($i210);
    goto corral_source_split_3713;

  corral_source_split_3713:
    assume {:verifier.code 0} true;
    $p211 := $i2p.i64.ref($i210);
    goto corral_source_split_3714;

  corral_source_split_3714:
    assume {:verifier.code 0} true;
    havoc $i212;
    call {:si_unique_call 7449} {:cexpr "__cil_tmp174"} {:si_old_unique_call 1968} boogie_si_record_i32($i212);
    goto corral_source_split_3715;

  corral_source_split_3715:
    assume {:verifier.code 0} true;
    $i213 := $zext.i32.i64($i212);
    call {:si_unique_call 7450} {:cexpr "__cil_tmp175"} {:si_old_unique_call 1969} boogie_si_record_i64($i213);
    goto corral_source_split_3716;

  corral_source_split_3716:
    assume {:verifier.code 0} true;
    $i214 := $and.i64($i213, $sub.i64(0, 3758162949));
    call {:si_unique_call 7451} {:cexpr "__cil_tmp176"} {:si_old_unique_call 1970} boogie_si_record_i64($i214);
    goto corral_source_split_3717;

  corral_source_split_3717:
    assume {:verifier.code 0} true;
    $i215 := $trunc.i64.i32($i214);
    goto corral_source_split_3718;

  corral_source_split_3718:
    assume {:verifier.code 0} true;
    $p216 := $i2p.i64.ref($i208);
    goto corral_source_split_3719;

  corral_source_split_3719:
    assume {:verifier.code 0} true;
    goto corral_source_split_3720;

  corral_source_split_3720:
    assume {:verifier.code 0} true;
    $i217 := $p2i.ref.i64($p2);
    call {:si_unique_call 7452} {:cexpr "__cil_tmp177"} {:si_old_unique_call 1971} boogie_si_record_i64($i217);
    goto corral_source_split_3721;

  corral_source_split_3721:
    assume {:verifier.code 0} true;
    $i218 := $add.i64($i217, 84);
    call {:si_unique_call 7453} {:cexpr "__cil_tmp178"} {:si_old_unique_call 1972} boogie_si_record_i64($i218);
    goto corral_source_split_3722;

  corral_source_split_3722:
    assume {:verifier.code 0} true;
    $i219 := $p2i.ref.i64($p2);
    call {:si_unique_call 7454} {:cexpr "__cil_tmp179"} {:si_old_unique_call 1973} boogie_si_record_i64($i219);
    goto corral_source_split_3723;

  corral_source_split_3723:
    assume {:verifier.code 0} true;
    $i220 := $add.i64($i219, 84);
    call {:si_unique_call 7455} {:cexpr "__cil_tmp180"} {:si_old_unique_call 1974} boogie_si_record_i64($i220);
    goto corral_source_split_3724;

  corral_source_split_3724:
    assume {:verifier.code 0} true;
    $p221 := $i2p.i64.ref($i220);
    goto corral_source_split_3725;

  corral_source_split_3725:
    assume {:verifier.code 0} true;
    havoc $i222;
    call {:si_unique_call 7456} {:cexpr "__cil_tmp181"} {:si_old_unique_call 1975} boogie_si_record_i32($i222);
    goto corral_source_split_3726;

  corral_source_split_3726:
    assume {:verifier.code 0} true;
    $i223 := $zext.i32.i64($i222);
    call {:si_unique_call 7457} {:cexpr "__cil_tmp182"} {:si_old_unique_call 1976} boogie_si_record_i64($i223);
    goto corral_source_split_3727;

  corral_source_split_3727:
    assume {:verifier.code 0} true;
    $i224 := $or.i64($i223, 80);
    call {:si_unique_call 7458} {:cexpr "__cil_tmp183"} {:si_old_unique_call 1977} boogie_si_record_i64($i224);
    goto corral_source_split_3728;

  corral_source_split_3728:
    assume {:verifier.code 0} true;
    $i225 := $trunc.i64.i32($i224);
    goto corral_source_split_3729;

  corral_source_split_3729:
    assume {:verifier.code 0} true;
    $p226 := $i2p.i64.ref($i218);
    goto corral_source_split_3730;

  corral_source_split_3730:
    assume {:verifier.code 0} true;
    goto corral_source_split_3731;

  corral_source_split_3731:
    assume {:verifier.code 0} true;
    $i227 := $p2i.ref.i64($p2);
    call {:si_unique_call 7459} {:cexpr "__cil_tmp184"} {:si_old_unique_call 1978} boogie_si_record_i64($i227);
    goto corral_source_split_3732;

  corral_source_split_3732:
    assume {:verifier.code 0} true;
    $i228 := $add.i64($i227, 84);
    call {:si_unique_call 7460} {:cexpr "__cil_tmp185"} {:si_old_unique_call 1979} boogie_si_record_i64($i228);
    goto corral_source_split_3733;

  corral_source_split_3733:
    assume {:verifier.code 0} true;
    $p229 := $i2p.i64.ref($i228);
    goto corral_source_split_3734;

  corral_source_split_3734:
    assume {:verifier.code 0} true;
    havoc $i230;
    call {:si_unique_call 7461} {:cexpr "__cil_tmp186"} {:si_old_unique_call 1980} boogie_si_record_i32($i230);
    goto corral_source_split_3735;

  corral_source_split_3735:
    assume {:verifier.code 0} true;
    $i231 := $zext.i32.i64($i230);
    call {:si_unique_call 7462} {:cexpr "__cil_tmp187"} {:si_old_unique_call 1981} boogie_si_record_i64($i231);
    goto corral_source_split_3736;

  corral_source_split_3736:
    assume {:verifier.code 0} true;
    $i232 := $and.i64($i231, 2);
    goto corral_source_split_3737;

  corral_source_split_3737:
    assume {:verifier.code 0} true;
    $i233 := $ne.i64($i232, 0);
    goto corral_source_split_3738;

  corral_source_split_3738:
    assume {:verifier.code 0} true;
    assume {:branchcond $i233} true;
    goto $bb75, $bb76;

  $bb76:
    assume !($i233 == 1);
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb75:
    assume $i233 == 1;
    goto corral_source_split_3740;

  corral_source_split_3740:
    assume {:verifier.code 0} true;
    $i234 := $p2i.ref.i64($p9);
    call {:si_unique_call 7463} {:cexpr "__cil_tmp188"} {:si_old_unique_call 1982} boogie_si_record_i64($i234);
    goto corral_source_split_3741;

  corral_source_split_3741:
    assume {:verifier.code 0} true;
    $i235 := $add.i64($i234, 1144);
    call {:si_unique_call 7464} {:cexpr "__cil_tmp189"} {:si_old_unique_call 1983} boogie_si_record_i64($i235);
    goto corral_source_split_3742;

  corral_source_split_3742:
    assume {:verifier.code 0} true;
    $p236 := $i2p.i64.ref($i235);
    goto corral_source_split_3743;

  corral_source_split_3743:
    assume {:verifier.code 0} true;
    havoc $i237;
    call {:si_unique_call 7465} {:cexpr "__cil_tmp190"} {:si_old_unique_call 1984} boogie_si_record_i16($i237);
    goto corral_source_split_3744;

  corral_source_split_3744:
    assume {:verifier.code 0} true;
    $i238 := $zext.i16.i32($i237);
    call {:si_unique_call 7466} {:cexpr "__cil_tmp191"} {:si_old_unique_call 1985} boogie_si_record_i32($i238);
    goto corral_source_split_3745;

  corral_source_split_3745:
    assume {:verifier.code 0} true;
    $i239 := $ugt.i32($i13, $i238);
    goto corral_source_split_3746;

  corral_source_split_3746:
    assume {:verifier.code 0} true;
    assume {:branchcond $i239} true;
    goto $bb77, $bb78;

  $bb78:
    assume !($i239 == 1);
    goto corral_source_split_3750;

  corral_source_split_3750:
    assume {:verifier.code 0} true;
    $i240 := $p2i.ref.i64($p9);
    call {:si_unique_call 7467} {:cexpr "__cil_tmp192"} {:si_old_unique_call 1986} boogie_si_record_i64($i240);
    goto corral_source_split_3751;

  corral_source_split_3751:
    assume {:verifier.code 0} true;
    $i241 := $add.i64($i240, 1146);
    call {:si_unique_call 7468} {:cexpr "__cil_tmp193"} {:si_old_unique_call 1987} boogie_si_record_i64($i241);
    goto corral_source_split_3752;

  corral_source_split_3752:
    assume {:verifier.code 0} true;
    $p242 := $i2p.i64.ref($i241);
    goto corral_source_split_3753;

  corral_source_split_3753:
    assume {:verifier.code 0} true;
    havoc $i243;
    call {:si_unique_call 7469} {:cexpr "__cil_tmp194"} {:si_old_unique_call 1988} boogie_si_record_i16($i243);
    goto corral_source_split_3754;

  corral_source_split_3754:
    assume {:verifier.code 0} true;
    $i244 := $zext.i16.i32($i243);
    call {:si_unique_call 7470} {:cexpr "__cil_tmp195"} {:si_old_unique_call 1989} boogie_si_record_i32($i244);
    goto corral_source_split_3755;

  corral_source_split_3755:
    assume {:verifier.code 0} true;
    $i245 := $ugt.i32($i17, $i244);
    goto corral_source_split_3756;

  corral_source_split_3756:
    assume {:verifier.code 0} true;
    assume {:branchcond $i245} true;
    goto $bb80, $bb81;

  $bb81:
    assume !($i245 == 1);
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb80:
    assume $i245 == 1;
    goto corral_source_split_3766;

  corral_source_split_3766:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    $i246 := $p2i.ref.i64($p2);
    call {:si_unique_call 7471} {:cexpr "__cil_tmp196"} {:si_old_unique_call 1990} boogie_si_record_i64($i246);
    goto corral_source_split_3758;

  corral_source_split_3758:
    assume {:verifier.code 0} true;
    $i247 := $add.i64($i246, 84);
    call {:si_unique_call 7472} {:cexpr "__cil_tmp197"} {:si_old_unique_call 1991} boogie_si_record_i64($i247);
    goto corral_source_split_3759;

  corral_source_split_3759:
    assume {:verifier.code 0} true;
    $p248 := $i2p.i64.ref($i247);
    goto corral_source_split_3760;

  corral_source_split_3760:
    assume {:verifier.code 0} true;
    havoc $i249;
    call {:si_unique_call 7473} {:cexpr "__cil_tmp198"} {:si_old_unique_call 1992} boogie_si_record_i32($i249);
    goto corral_source_split_3761;

  corral_source_split_3761:
    assume {:verifier.code 0} true;
    $i250 := $zext.i32.i64($i249);
    call {:si_unique_call 7474} {:cexpr "__cil_tmp199"} {:si_old_unique_call 1993} boogie_si_record_i64($i250);
    goto corral_source_split_3762;

  corral_source_split_3762:
    assume {:verifier.code 0} true;
    $i251 := $and.i64($i250, 1);
    goto corral_source_split_3763;

  corral_source_split_3763:
    assume {:verifier.code 0} true;
    $i252 := $ne.i64($i251, 0);
    goto corral_source_split_3764;

  corral_source_split_3764:
    assume {:verifier.code 0} true;
    assume {:branchcond $i252} true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i252 == 1);
    goto corral_source_split_3776;

  corral_source_split_3776:
    assume {:verifier.code 0} true;
    $i270 := $p2i.ref.i64($p1);
    call {:si_unique_call 7475} {:cexpr "__cil_tmp211"} {:si_old_unique_call 1998} boogie_si_record_i64($i270);
    goto corral_source_split_3777;

  corral_source_split_3777:
    assume {:verifier.code 0} true;
    $i271 := $add.i64($i270, 84);
    call {:si_unique_call 7476} {:cexpr "__cil_tmp212"} {:si_old_unique_call 1999} boogie_si_record_i64($i271);
    goto corral_source_split_3778;

  corral_source_split_3778:
    assume {:verifier.code 0} true;
    $p272 := $i2p.i64.ref($i271);
    goto corral_source_split_3779;

  corral_source_split_3779:
    assume {:verifier.code 0} true;
    havoc $i273;
    call {:si_unique_call 7477} {:cexpr "__cil_tmp213"} {:si_old_unique_call 2000} boogie_si_record_i32($i273);
    goto corral_source_split_3780;

  corral_source_split_3780:
    assume {:verifier.code 0} true;
    $i274 := $and.i32($i273, 2);
    call {:si_unique_call 7478} {:cexpr "__cil_tmp214"} {:si_old_unique_call 2001} boogie_si_record_i32($i274);
    goto corral_source_split_3781;

  corral_source_split_3781:
    assume {:verifier.code 0} true;
    $i275 := $ne.i32($i274, 0);
    goto corral_source_split_3782;

  corral_source_split_3782:
    assume {:verifier.code 0} true;
    assume {:branchcond $i275} true;
    goto $bb88, $bb89;

  $bb89:
    assume !($i275 == 1);
    goto corral_source_split_3799;

  corral_source_split_3799:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7479} {:si_old_unique_call 2010} $i276 := printk.ref(.str.10);
    goto corral_source_split_3800;

  corral_source_split_3800:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb88:
    assume $i275 == 1;
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb82:
    assume $i252 == 1;
    goto corral_source_split_3768;

  corral_source_split_3768:
    assume {:verifier.code 0} true;
    $i253 := $p2i.ref.i64($p1);
    call {:si_unique_call 7480} {:cexpr "__cil_tmp200"} {:si_old_unique_call 1994} boogie_si_record_i64($i253);
    goto corral_source_split_3769;

  corral_source_split_3769:
    assume {:verifier.code 0} true;
    $i254 := $add.i64($i253, 84);
    call {:si_unique_call 7481} {:cexpr "__cil_tmp201"} {:si_old_unique_call 1995} boogie_si_record_i64($i254);
    goto corral_source_split_3770;

  corral_source_split_3770:
    assume {:verifier.code 0} true;
    $p255 := $i2p.i64.ref($i254);
    goto corral_source_split_3771;

  corral_source_split_3771:
    assume {:verifier.code 0} true;
    havoc $i256;
    call {:si_unique_call 7482} {:cexpr "__cil_tmp202"} {:si_old_unique_call 1996} boogie_si_record_i32($i256);
    goto corral_source_split_3772;

  corral_source_split_3772:
    assume {:verifier.code 0} true;
    $i257 := $and.i32($i256, 2);
    call {:si_unique_call 7483} {:cexpr "__cil_tmp203"} {:si_old_unique_call 1997} boogie_si_record_i32($i257);
    goto corral_source_split_3773;

  corral_source_split_3773:
    assume {:verifier.code 0} true;
    $i258 := $ne.i32($i257, 0);
    goto corral_source_split_3774;

  corral_source_split_3774:
    assume {:verifier.code 0} true;
    assume {:branchcond $i258} true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i258 == 1);
    goto corral_source_split_3784;

  corral_source_split_3784:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7484} {:si_old_unique_call 2002} $i259 := printk.ref(.str.9);
    goto corral_source_split_3785;

  corral_source_split_3785:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    $i260 := $p2i.ref.i64($p2);
    call {:si_unique_call 7485} {:cexpr "__cil_tmp204"} {:si_old_unique_call 2003} boogie_si_record_i64($i260);
    goto corral_source_split_3787;

  corral_source_split_3787:
    assume {:verifier.code 0} true;
    $i261 := $add.i64($i260, 84);
    call {:si_unique_call 7486} {:cexpr "__cil_tmp205"} {:si_old_unique_call 2004} boogie_si_record_i64($i261);
    goto corral_source_split_3788;

  corral_source_split_3788:
    assume {:verifier.code 0} true;
    $i262 := $p2i.ref.i64($p2);
    call {:si_unique_call 7487} {:cexpr "__cil_tmp206"} {:si_old_unique_call 2005} boogie_si_record_i64($i262);
    goto corral_source_split_3789;

  corral_source_split_3789:
    assume {:verifier.code 0} true;
    $i263 := $add.i64($i262, 84);
    call {:si_unique_call 7488} {:cexpr "__cil_tmp207"} {:si_old_unique_call 2006} boogie_si_record_i64($i263);
    goto corral_source_split_3790;

  corral_source_split_3790:
    assume {:verifier.code 0} true;
    $p264 := $i2p.i64.ref($i263);
    goto corral_source_split_3791;

  corral_source_split_3791:
    assume {:verifier.code 0} true;
    havoc $i265;
    call {:si_unique_call 7489} {:cexpr "__cil_tmp208"} {:si_old_unique_call 2007} boogie_si_record_i32($i265);
    goto corral_source_split_3792;

  corral_source_split_3792:
    assume {:verifier.code 0} true;
    $i266 := $zext.i32.i64($i265);
    call {:si_unique_call 7490} {:cexpr "__cil_tmp209"} {:si_old_unique_call 2008} boogie_si_record_i64($i266);
    goto corral_source_split_3793;

  corral_source_split_3793:
    assume {:verifier.code 0} true;
    $i267 := $and.i64($i266, $sub.i64(0, 3));
    call {:si_unique_call 7491} {:cexpr "__cil_tmp210"} {:si_old_unique_call 2009} boogie_si_record_i64($i267);
    goto corral_source_split_3794;

  corral_source_split_3794:
    assume {:verifier.code 0} true;
    $i268 := $trunc.i64.i32($i267);
    goto corral_source_split_3795;

  corral_source_split_3795:
    assume {:verifier.code 0} true;
    $p269 := $i2p.i64.ref($i261);
    goto corral_source_split_3796;

  corral_source_split_3796:
    assume {:verifier.code 0} true;
    goto corral_source_split_3797;

  corral_source_split_3797:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb84:
    assume $i258 == 1;
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb77:
    assume $i239 == 1;
    goto corral_source_split_3748;

  corral_source_split_3748:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb72:
    assume $i186 == 1;
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb69:
    assume $i175 == 1;
    assume {:verifier.code 0} true;
    goto $bb71;

  $bb57:
    assume $i121 == 1;
    goto corral_source_split_3607;

  corral_source_split_3607:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p1);
    call {:si_unique_call 7492} {:cexpr "__cil_tmp109"} {:si_old_unique_call 1899} boogie_si_record_i64($i122);
    goto corral_source_split_3609;

  corral_source_split_3609:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 84);
    call {:si_unique_call 7493} {:cexpr "__cil_tmp110"} {:si_old_unique_call 1900} boogie_si_record_i64($i123);
    goto corral_source_split_3610;

  corral_source_split_3610:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_3611;

  corral_source_split_3611:
    assume {:verifier.code 0} true;
    havoc $i125;
    call {:si_unique_call 7494} {:cexpr "__cil_tmp111"} {:si_old_unique_call 1901} boogie_si_record_i32($i125);
    goto corral_source_split_3612;

  corral_source_split_3612:
    assume {:verifier.code 0} true;
    $i126 := $and.i32($i125, 2);
    call {:si_unique_call 7495} {:cexpr "__cil_tmp112"} {:si_old_unique_call 1902} boogie_si_record_i32($i126);
    goto corral_source_split_3613;

  corral_source_split_3613:
    assume {:verifier.code 0} true;
    $i127 := $ne.i32($i126, 0);
    goto corral_source_split_3614;

  corral_source_split_3614:
    assume {:verifier.code 0} true;
    assume {:branchcond $i127} true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i127 == 1);
    goto corral_source_split_3616;

  corral_source_split_3616:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7496} {:si_old_unique_call 1903} $i128 := printk.ref(.str.8);
    goto corral_source_split_3617;

  corral_source_split_3617:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb61:
    assume $i127 == 1;
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb54:
    assume $i120 == 1;
    goto corral_source_split_3602;

  corral_source_split_3602:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb51:
    assume $i118 == 1;
    goto corral_source_split_3597;

  corral_source_split_3597:
    assume {:verifier.code 0} true;
    $i119 := 0;
    goto $bb53;

  $bb48:
    assume $i115 == 1;
    goto corral_source_split_3591;

  corral_source_split_3591:
    assume {:verifier.code 0} true;
    $i116 := 0;
    goto $bb50;

  $bb39:
    assume $i106 == 1;
    goto corral_source_split_3576;

  corral_source_split_3576:
    assume {:verifier.code 0} true;
    goto $bb41;

  $bb41:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p1);
    call {:si_unique_call 7497} {:cexpr "__cil_tmp105"} {:si_old_unique_call 1894} boogie_si_record_i64($i107);
    goto corral_source_split_3578;

  corral_source_split_3578:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 84);
    call {:si_unique_call 7498} {:cexpr "__cil_tmp106"} {:si_old_unique_call 1895} boogie_si_record_i64($i108);
    goto corral_source_split_3579;

  corral_source_split_3579:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_3580;

  corral_source_split_3580:
    assume {:verifier.code 0} true;
    havoc $i110;
    call {:si_unique_call 7499} {:cexpr "__cil_tmp107"} {:si_old_unique_call 1896} boogie_si_record_i32($i110);
    goto corral_source_split_3581;

  corral_source_split_3581:
    assume {:verifier.code 0} true;
    $i111 := $and.i32($i110, 2);
    call {:si_unique_call 7500} {:cexpr "__cil_tmp108"} {:si_old_unique_call 1897} boogie_si_record_i32($i111);
    goto corral_source_split_3582;

  corral_source_split_3582:
    assume {:verifier.code 0} true;
    $i112 := $ne.i32($i111, 0);
    goto corral_source_split_3583;

  corral_source_split_3583:
    assume {:verifier.code 0} true;
    assume {:branchcond $i112} true;
    goto $bb43, $bb44;

  $bb44:
    assume !($i112 == 1);
    goto corral_source_split_3585;

  corral_source_split_3585:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7501} {:si_old_unique_call 1898} $i113 := printk.ref(.str.7);
    goto corral_source_split_3586;

  corral_source_split_3586:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    $i99 := $sub.i32(0, 22);
    goto $bb37;

  $bb43:
    assume $i112 == 1;
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb22:
    assume $i81 == 1;
    goto corral_source_split_3544;

  corral_source_split_3544:
    assume {:verifier.code 0} true;
    $i82 := $p2i.ref.i64($p9);
    call {:si_unique_call 7502} {:cexpr "__cil_tmp92"} {:si_old_unique_call 1886} boogie_si_record_i64($i82);
    goto corral_source_split_3545;

  corral_source_split_3545:
    assume {:verifier.code 0} true;
    $i83 := $add.i64($i82, 1044);
    call {:si_unique_call 7503} {:cexpr "__cil_tmp93"} {:si_old_unique_call 1887} boogie_si_record_i64($i83);
    goto corral_source_split_3546;

  corral_source_split_3546:
    assume {:verifier.code 0} true;
    $p84 := $i2p.i64.ref($i83);
    goto corral_source_split_3547;

  corral_source_split_3547:
    assume {:verifier.code 0} true;
    havoc $i85;
    call {:si_unique_call 7504} {:cexpr "__cil_tmp94"} {:si_old_unique_call 1888} boogie_si_record_i32($i85);
    goto corral_source_split_3548;

  corral_source_split_3548:
    assume {:verifier.code 0} true;
    $i86 := $and.i32($i85, 64);
    goto corral_source_split_3549;

  corral_source_split_3549:
    assume {:verifier.code 0} true;
    $i87 := $ne.i32($i86, 0);
    goto corral_source_split_3550;

  corral_source_split_3550:
    assume {:verifier.code 0} true;
    assume {:branchcond $i87} true;
    goto $bb24, $bb25;

  $bb25:
    assume !($i87 == 1);
    goto corral_source_split_3556;

  corral_source_split_3556:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb24:
    assume $i87 == 1;
    goto corral_source_split_3554;

  corral_source_split_3554:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i88, $i89, $i90 := 16908802, 1280, 24;
    goto $bb28;

  $bb19:
    assume $i76 == 1;
    goto corral_source_split_3539;

  corral_source_split_3539:
    assume {:verifier.code 0} true;
    $i77, $i78, $i79, $i80 := 33808, 17040388, 1024, 16;
    goto $bb21;

  $bb16:
    assume $i71 == 1;
    goto corral_source_split_3534;

  corral_source_split_3534:
    assume {:verifier.code 0} true;
    $i72, $i73, $i74, $i75 := 16912, 16974595, 768, 16;
    goto $bb18;

  $bb13:
    assume $i66 == 1;
    goto corral_source_split_3520;

  corral_source_split_3520:
    assume {:verifier.code 0} true;
    $i67, $i68, $i69, $i70 := 32896, 16908802, 512, 8;
    goto $bb15;

  $bb10:
    assume $i63 == 1;
    goto corral_source_split_3514;

  corral_source_split_3514:
    assume {:verifier.code 0} true;
    $i64 := $add.i32($i17, $i37);
    call {:si_unique_call 7505} {:cexpr "vyres"} {:si_old_unique_call 1879} boogie_si_record_i32($i64);
    goto corral_source_split_3515;

  corral_source_split_3515:
    assume {:verifier.code 0} true;
    $i65 := $i64;
    goto $bb12;

  $bb7:
    assume $i59 == 1;
    goto corral_source_split_3507;

  corral_source_split_3507:
    assume {:verifier.code 0} true;
    $i60 := $add.i32($i13, $i33);
    call {:si_unique_call 7506} {:cexpr "vxres"} {:si_old_unique_call 1877} boogie_si_record_i32($i60);
    goto corral_source_split_3508;

  corral_source_split_3508:
    assume {:verifier.code 0} true;
    $i61 := $i60;
    goto $bb9;

  $bb1:
    assume $i42 == 1;
    goto corral_source_split_3484;

  corral_source_split_3484:
    assume {:verifier.code 0} true;
    $i43 := $p2i.ref.i64($p1);
    call {:si_unique_call 7507} {:cexpr "__cil_tmp81"} {:si_old_unique_call 1867} boogie_si_record_i64($i43);
    goto corral_source_split_3485;

  corral_source_split_3485:
    assume {:verifier.code 0} true;
    $i44 := $add.i64($i43, 48);
    call {:si_unique_call 7508} {:cexpr "__cil_tmp82"} {:si_old_unique_call 1868} boogie_si_record_i64($i44);
    goto corral_source_split_3486;

  corral_source_split_3486:
    assume {:verifier.code 0} true;
    $p45 := $i2p.i64.ref($i44);
    goto corral_source_split_3487;

  corral_source_split_3487:
    assume {:verifier.code 0} true;
    havoc $i46;
    call {:si_unique_call 7509} {:cexpr "__cil_tmp83"} {:si_old_unique_call 1869} boogie_si_record_i32($i46);
    goto corral_source_split_3488;

  corral_source_split_3488:
    assume {:verifier.code 0} true;
    $i47 := $eq.i32($i46, 5);
    goto corral_source_split_3489;

  corral_source_split_3489:
    assume {:verifier.code 0} true;
    assume {:branchcond $i47} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i47 == 1);
    assume {:verifier.code 0} true;
    $i48 := 16;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_3493;

  corral_source_split_3493:
    assume {:verifier.code 0} true;
    $i49 := $i48;
    goto $bb6;

  $bb3:
    assume $i47 == 1;
    goto corral_source_split_3491;

  corral_source_split_3491:
    assume {:verifier.code 0} true;
    $i48 := 15;
    goto $bb5;
}



implementation {:LB_Mapping "wait_for_idle_loop_$bb1"} {:entrypoint} wait_for_idle_EntryCopy_wait_for_idle_loop_$bb1($p0: ref)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4583;

  corral_source_split_4583:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7533} {:si_old_unique_call 2399} wait_for_fifo(16, $p0);
    goto corral_source_split_4584;

  corral_source_split_4584:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call {:si_unique_call 7534} $i1, $i2, $i3 := wait_for_idle_loop_$bb1($p0, $i1, $i2, $i3);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7535} {:si_old_unique_call 2400} $i1 := aty_ld_le32(824, $p0);
    call {:si_unique_call 7536} {:cexpr "tmp___7"} {:si_old_unique_call 2401} boogie_si_record_i32($i1);
    goto corral_source_split_4586;

  corral_source_split_4586:
    assume {:verifier.code 0} true;
    $i2 := $and.i32($i1, 1);
    call {:si_unique_call 7537} {:cexpr "__cil_tmp6"} {:si_old_unique_call 2402} boogie_si_record_i32($i2);
    goto corral_source_split_4587;

  corral_source_split_4587:
    assume {:verifier.code 0} true;
    $i3 := $ne.i32($i2, 0);
    goto corral_source_split_4588;

  corral_source_split_4588:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i3 == 1);
    goto corral_source_split_4592;

  corral_source_split_4592:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p0);
    call {:si_unique_call 7538} {:cexpr "__cil_tmp7"} {:si_old_unique_call 2403} boogie_si_record_i64($i4);
    goto corral_source_split_4594;

  corral_source_split_4594:
    assume {:verifier.code 0} true;
    $i5 := $add.i64($i4, 1076);
    call {:si_unique_call 7539} {:cexpr "__cil_tmp8"} {:si_old_unique_call 2404} boogie_si_record_i64($i5);
    goto corral_source_split_4595;

  corral_source_split_4595:
    assume {:verifier.code 0} true;
    $p6 := $i2p.i64.ref($i5);
    goto corral_source_split_4596;

  corral_source_split_4596:
    assume {:verifier.code 0} true;
    goto corral_source_split_4597;

  corral_source_split_4597:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i3 == 1;
    goto corral_source_split_4590;

  corral_source_split_4590:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb5_dummy;

  $bb5_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "wait_for_fifo_loop_$bb1"} {:entrypoint} wait_for_fifo_EntryCopy_wait_for_fifo_loop_$bb1($i0: i16, $p1: ref)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 7781} {:cexpr "wait_for_fifo:arg:entries"} {:si_old_unique_call 2646} boogie_si_record_i16($i0);
    goto corral_source_split_4916;

  corral_source_split_4916:
    assume {:verifier.code 0} true;
    goto $bb1;

  $bb1:
    call {:si_unique_call 7782} $i2, $i3, $i4, $i5, $i6 := wait_for_fifo_loop_$bb1($i0, $p1, $i2, $i3, $i4, $i5, $i6);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    call {:si_unique_call 7783} {:si_old_unique_call 2647} $i2 := aty_ld_le32(784, $p1);
    call {:si_unique_call 7784} {:cexpr "tmp___7"} {:si_old_unique_call 2648} boogie_si_record_i32($i2);
    goto corral_source_split_4918;

  corral_source_split_4918:
    assume {:verifier.code 0} true;
    $i3 := $zext.i16.i32($i0);
    call {:si_unique_call 7785} {:cexpr "wait_for_fifo:arg:__cil_tmp4"} {:si_old_unique_call 2649} boogie_si_record_i16($i0);
    goto corral_source_split_4919;

  corral_source_split_4919:
    assume {:verifier.code 0} true;
    $i4 := $ashr.i32(32768, $i3);
    call {:si_unique_call 7786} {:cexpr "__cil_tmp5"} {:si_old_unique_call 2650} boogie_si_record_i32($i4);
    goto corral_source_split_4920;

  corral_source_split_4920:
    assume {:verifier.code 0} true;
    $i5 := $and.i32($i2, 65535);
    call {:si_unique_call 7787} {:cexpr "__cil_tmp7"} {:si_old_unique_call 2651} boogie_si_record_i32($i5);
    goto corral_source_split_4921;

  corral_source_split_4921:
    assume {:verifier.code 0} true;
    $i6 := $ugt.i32($i5, $i4);
    goto corral_source_split_4922;

  corral_source_split_4922:
    assume {:verifier.code 0} true;
    assume {:branchcond $i6} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i6 == 1);
    goto corral_source_split_4926;

  corral_source_split_4926:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i6 == 1;
    goto corral_source_split_4924;

  corral_source_split_4924:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb5_dummy;

  $bb5_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "ATIReduceRatio_loop_$bb1"} {:entrypoint} ATIReduceRatio_EntryCopy_ATIReduceRatio_loop_$bb1($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4928;

  corral_source_split_4928:
    assume {:verifier.code 0} true;
    havoc $i2;
    call {:si_unique_call 7788} {:cexpr "Multiplier"} {:si_old_unique_call 2652} boogie_si_record_i32($i2);
    goto corral_source_split_4929;

  corral_source_split_4929:
    assume {:verifier.code 0} true;
    havoc $i3;
    call {:si_unique_call 7789} {:cexpr "Divider"} {:si_old_unique_call 2653} boogie_si_record_i32($i3);
    goto corral_source_split_4930;

  corral_source_split_4930:
    assume {:verifier.code 0} true;
    $i4, $i5 := $i2, $i3;
    goto $bb1;

  $bb1:
    call {:si_unique_call 7790} $i4, $i5, $i6, $i7, $i8 := ATIReduceRatio_loop_$bb1($i4, $i5, $i6, $i7, $i8);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4932;

  corral_source_split_4932:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i6 := $srem.i32($i4, $i5);
    call {:si_unique_call 7791} {:cexpr "Remainder"} {:si_old_unique_call 2654} boogie_si_record_i32($i6);
    goto corral_source_split_4934;

  corral_source_split_4934:
    assume {:verifier.code 0} true;
    $i7 := $ne.i32($i6, 0);
    goto corral_source_split_4935;

  corral_source_split_4935:
    assume {:verifier.code 0} true;
    $i8 := $i5;
    assume {:branchcond $i7} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i7 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_4939;

  corral_source_split_4939:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    havoc $i9;
    call {:si_unique_call 7792} {:cexpr "__cil_tmp6"} {:si_old_unique_call 2655} boogie_si_record_i32($i9);
    goto corral_source_split_4941;

  corral_source_split_4941:
    assume {:verifier.code 0} true;
    $i10 := $sdiv.i32($i9, $i8);
    goto corral_source_split_4942;

  corral_source_split_4942:
    assume {:verifier.code 0} true;
    goto corral_source_split_4943;

  corral_source_split_4943:
    assume {:verifier.code 0} true;
    havoc $i11;
    call {:si_unique_call 7793} {:cexpr "__cil_tmp7"} {:si_old_unique_call 2656} boogie_si_record_i32($i11);
    goto corral_source_split_4944;

  corral_source_split_4944:
    assume {:verifier.code 0} true;
    $i12 := $sdiv.i32($i11, $i8);
    goto corral_source_split_4945;

  corral_source_split_4945:
    assume {:verifier.code 0} true;
    goto corral_source_split_4946;

  corral_source_split_4946:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb3:
    assume $i7 == 1;
    goto corral_source_split_4937;

  corral_source_split_4937:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i4, $i5 := $i5, $i6;
    goto $bb5_dummy;

  $bb5_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;
}



implementation {:LB_Mapping "aty_calc_mem_refresh_loop_$bb4"} {:entrypoint} aty_calc_mem_refresh_EntryCopy_aty_calc_mem_refresh_loop_$bb4($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $p16: ref;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $i42: i64;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $p64: ref;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $p80: ref;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $p88: ref;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i64;
  var $i93: i64;
  var $p94: ref;
  var $i95: i32;
  var $i96: i32;
  var $i97: i1;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i64;
  var $i103: i32;
  var $p106: ref;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i64;
  var $i111: i32;
  var $p104: ref;
  var $i105: i32;
  var $i112: i32;
  var $i113: i1;
  var $i114: i32;
  var $i116: i64;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i32;
  var $i115: i32;
  var $i122: i64;
  var $i123: i64;
  var $i124: i8;
  var $p125: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 8463} {:si_old_unique_call 3326} $p2 := $alloc($mul.ref(28, $zext.i32.i64(1)));
    assume {:verifier.code 0} true;
    call {:si_unique_call 8464} {:si_old_unique_call 3327} $p3 := $alloc($mul.ref(60, $zext.i32.i64(1)));
    call {:si_unique_call 8465} {:cexpr "aty_calc_mem_refresh:arg:xclk___0"} {:si_old_unique_call 3328} boogie_si_record_i32($i1);
    goto corral_source_split_6492;

  corral_source_split_6492:
    assume {:verifier.code 0} true;
    $p4 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6493;

  corral_source_split_6493:
    assume {:verifier.code 0} true;
    $i5 := $p2i.ref.i64($p4);
    goto corral_source_split_6494;

  corral_source_split_6494:
    assume {:verifier.code 0} true;
    $i6 := $add.i64($i5, 0);
    call {:si_unique_call 8466} {:cexpr "__cil_tmp9"} {:si_old_unique_call 3329} boogie_si_record_i64($i6);
    goto corral_source_split_6495;

  corral_source_split_6495:
    assume {:verifier.code 0} true;
    $p7 := $i2p.i64.ref($i6);
    goto corral_source_split_6496;

  corral_source_split_6496:
    assume {:verifier.code 0} true;
    goto corral_source_split_6497;

  corral_source_split_6497:
    assume {:verifier.code 0} true;
    $p8 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6498;

  corral_source_split_6498:
    assume {:verifier.code 0} true;
    $i9 := $p2i.ref.i64($p8);
    goto corral_source_split_6499;

  corral_source_split_6499:
    assume {:verifier.code 0} true;
    $i10 := $add.i64($i9, 4);
    call {:si_unique_call 8467} {:cexpr "__cil_tmp11"} {:si_old_unique_call 3330} boogie_si_record_i64($i10);
    goto corral_source_split_6500;

  corral_source_split_6500:
    assume {:verifier.code 0} true;
    $p11 := $i2p.i64.ref($i10);
    goto corral_source_split_6501;

  corral_source_split_6501:
    assume {:verifier.code 0} true;
    goto corral_source_split_6502;

  corral_source_split_6502:
    assume {:verifier.code 0} true;
    $p12 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6503;

  corral_source_split_6503:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p12);
    goto corral_source_split_6504;

  corral_source_split_6504:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 8);
    call {:si_unique_call 8468} {:cexpr "__cil_tmp13"} {:si_old_unique_call 3331} boogie_si_record_i64($i14);
    goto corral_source_split_6505;

  corral_source_split_6505:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_6506;

  corral_source_split_6506:
    assume {:verifier.code 0} true;
    goto corral_source_split_6507;

  corral_source_split_6507:
    assume {:verifier.code 0} true;
    $p16 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6508;

  corral_source_split_6508:
    assume {:verifier.code 0} true;
    $i17 := $p2i.ref.i64($p16);
    goto corral_source_split_6509;

  corral_source_split_6509:
    assume {:verifier.code 0} true;
    $i18 := $add.i64($i17, 12);
    call {:si_unique_call 8469} {:cexpr "__cil_tmp15"} {:si_old_unique_call 3332} boogie_si_record_i64($i18);
    goto corral_source_split_6510;

  corral_source_split_6510:
    assume {:verifier.code 0} true;
    $p19 := $i2p.i64.ref($i18);
    goto corral_source_split_6511;

  corral_source_split_6511:
    assume {:verifier.code 0} true;
    goto corral_source_split_6512;

  corral_source_split_6512:
    assume {:verifier.code 0} true;
    $p20 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6513;

  corral_source_split_6513:
    assume {:verifier.code 0} true;
    $i21 := $p2i.ref.i64($p20);
    goto corral_source_split_6514;

  corral_source_split_6514:
    assume {:verifier.code 0} true;
    $i22 := $add.i64($i21, 16);
    call {:si_unique_call 8470} {:cexpr "__cil_tmp17"} {:si_old_unique_call 3333} boogie_si_record_i64($i22);
    goto corral_source_split_6515;

  corral_source_split_6515:
    assume {:verifier.code 0} true;
    $p23 := $i2p.i64.ref($i22);
    goto corral_source_split_6516;

  corral_source_split_6516:
    assume {:verifier.code 0} true;
    goto corral_source_split_6517;

  corral_source_split_6517:
    assume {:verifier.code 0} true;
    $p24 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6518;

  corral_source_split_6518:
    assume {:verifier.code 0} true;
    $i25 := $p2i.ref.i64($p24);
    goto corral_source_split_6519;

  corral_source_split_6519:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 20);
    call {:si_unique_call 8471} {:cexpr "__cil_tmp19"} {:si_old_unique_call 3334} boogie_si_record_i64($i26);
    goto corral_source_split_6520;

  corral_source_split_6520:
    assume {:verifier.code 0} true;
    $p27 := $i2p.i64.ref($i26);
    goto corral_source_split_6521;

  corral_source_split_6521:
    assume {:verifier.code 0} true;
    goto corral_source_split_6522;

  corral_source_split_6522:
    assume {:verifier.code 0} true;
    $p28 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6523;

  corral_source_split_6523:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p28);
    goto corral_source_split_6524;

  corral_source_split_6524:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 24);
    call {:si_unique_call 8472} {:cexpr "__cil_tmp21"} {:si_old_unique_call 3335} boogie_si_record_i64($i30);
    goto corral_source_split_6525;

  corral_source_split_6525:
    assume {:verifier.code 0} true;
    $p31 := $i2p.i64.ref($i30);
    goto corral_source_split_6526;

  corral_source_split_6526:
    assume {:verifier.code 0} true;
    goto corral_source_split_6527;

  corral_source_split_6527:
    assume {:verifier.code 0} true;
    $p32 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6528;

  corral_source_split_6528:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p32);
    goto corral_source_split_6529;

  corral_source_split_6529:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 0);
    call {:si_unique_call 8473} {:cexpr "__cil_tmp23"} {:si_old_unique_call 3336} boogie_si_record_i64($i34);
    goto corral_source_split_6530;

  corral_source_split_6530:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_6531;

  corral_source_split_6531:
    assume {:verifier.code 0} true;
    goto corral_source_split_6532;

  corral_source_split_6532:
    assume {:verifier.code 0} true;
    $p36 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6533;

  corral_source_split_6533:
    assume {:verifier.code 0} true;
    $i37 := $p2i.ref.i64($p36);
    goto corral_source_split_6534;

  corral_source_split_6534:
    assume {:verifier.code 0} true;
    $i38 := $add.i64($i37, 4);
    call {:si_unique_call 8474} {:cexpr "__cil_tmp25"} {:si_old_unique_call 3337} boogie_si_record_i64($i38);
    goto corral_source_split_6535;

  corral_source_split_6535:
    assume {:verifier.code 0} true;
    $p39 := $i2p.i64.ref($i38);
    goto corral_source_split_6536;

  corral_source_split_6536:
    assume {:verifier.code 0} true;
    goto corral_source_split_6537;

  corral_source_split_6537:
    assume {:verifier.code 0} true;
    $p40 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6538;

  corral_source_split_6538:
    assume {:verifier.code 0} true;
    $i41 := $p2i.ref.i64($p40);
    goto corral_source_split_6539;

  corral_source_split_6539:
    assume {:verifier.code 0} true;
    $i42 := $add.i64($i41, 8);
    call {:si_unique_call 8475} {:cexpr "__cil_tmp27"} {:si_old_unique_call 3338} boogie_si_record_i64($i42);
    goto corral_source_split_6540;

  corral_source_split_6540:
    assume {:verifier.code 0} true;
    $p43 := $i2p.i64.ref($i42);
    goto corral_source_split_6541;

  corral_source_split_6541:
    assume {:verifier.code 0} true;
    goto corral_source_split_6542;

  corral_source_split_6542:
    assume {:verifier.code 0} true;
    $p44 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6543;

  corral_source_split_6543:
    assume {:verifier.code 0} true;
    $i45 := $p2i.ref.i64($p44);
    goto corral_source_split_6544;

  corral_source_split_6544:
    assume {:verifier.code 0} true;
    $i46 := $add.i64($i45, 12);
    call {:si_unique_call 8476} {:cexpr "__cil_tmp29"} {:si_old_unique_call 3339} boogie_si_record_i64($i46);
    goto corral_source_split_6545;

  corral_source_split_6545:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i46);
    goto corral_source_split_6546;

  corral_source_split_6546:
    assume {:verifier.code 0} true;
    goto corral_source_split_6547;

  corral_source_split_6547:
    assume {:verifier.code 0} true;
    $p48 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6548;

  corral_source_split_6548:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p48);
    goto corral_source_split_6549;

  corral_source_split_6549:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 16);
    call {:si_unique_call 8477} {:cexpr "__cil_tmp31"} {:si_old_unique_call 3340} boogie_si_record_i64($i50);
    goto corral_source_split_6550;

  corral_source_split_6550:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_6551;

  corral_source_split_6551:
    assume {:verifier.code 0} true;
    goto corral_source_split_6552;

  corral_source_split_6552:
    assume {:verifier.code 0} true;
    $p52 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6553;

  corral_source_split_6553:
    assume {:verifier.code 0} true;
    $i53 := $p2i.ref.i64($p52);
    goto corral_source_split_6554;

  corral_source_split_6554:
    assume {:verifier.code 0} true;
    $i54 := $add.i64($i53, 20);
    call {:si_unique_call 8478} {:cexpr "__cil_tmp33"} {:si_old_unique_call 3341} boogie_si_record_i64($i54);
    goto corral_source_split_6555;

  corral_source_split_6555:
    assume {:verifier.code 0} true;
    $p55 := $i2p.i64.ref($i54);
    goto corral_source_split_6556;

  corral_source_split_6556:
    assume {:verifier.code 0} true;
    goto corral_source_split_6557;

  corral_source_split_6557:
    assume {:verifier.code 0} true;
    $p56 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6558;

  corral_source_split_6558:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p56);
    goto corral_source_split_6559;

  corral_source_split_6559:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 24);
    call {:si_unique_call 8479} {:cexpr "__cil_tmp35"} {:si_old_unique_call 3342} boogie_si_record_i64($i58);
    goto corral_source_split_6560;

  corral_source_split_6560:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_6561;

  corral_source_split_6561:
    assume {:verifier.code 0} true;
    goto corral_source_split_6562;

  corral_source_split_6562:
    assume {:verifier.code 0} true;
    $p60 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6563;

  corral_source_split_6563:
    assume {:verifier.code 0} true;
    $i61 := $p2i.ref.i64($p60);
    goto corral_source_split_6564;

  corral_source_split_6564:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($i61, 28);
    call {:si_unique_call 8480} {:cexpr "__cil_tmp37"} {:si_old_unique_call 3343} boogie_si_record_i64($i62);
    goto corral_source_split_6565;

  corral_source_split_6565:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_6566;

  corral_source_split_6566:
    assume {:verifier.code 0} true;
    goto corral_source_split_6567;

  corral_source_split_6567:
    assume {:verifier.code 0} true;
    $p64 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6568;

  corral_source_split_6568:
    assume {:verifier.code 0} true;
    $i65 := $p2i.ref.i64($p64);
    goto corral_source_split_6569;

  corral_source_split_6569:
    assume {:verifier.code 0} true;
    $i66 := $add.i64($i65, 32);
    call {:si_unique_call 8481} {:cexpr "__cil_tmp39"} {:si_old_unique_call 3344} boogie_si_record_i64($i66);
    goto corral_source_split_6570;

  corral_source_split_6570:
    assume {:verifier.code 0} true;
    $p67 := $i2p.i64.ref($i66);
    goto corral_source_split_6571;

  corral_source_split_6571:
    assume {:verifier.code 0} true;
    goto corral_source_split_6572;

  corral_source_split_6572:
    assume {:verifier.code 0} true;
    $p68 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6573;

  corral_source_split_6573:
    assume {:verifier.code 0} true;
    $i69 := $p2i.ref.i64($p68);
    goto corral_source_split_6574;

  corral_source_split_6574:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, 36);
    call {:si_unique_call 8482} {:cexpr "__cil_tmp41"} {:si_old_unique_call 3345} boogie_si_record_i64($i70);
    goto corral_source_split_6575;

  corral_source_split_6575:
    assume {:verifier.code 0} true;
    $p71 := $i2p.i64.ref($i70);
    goto corral_source_split_6576;

  corral_source_split_6576:
    assume {:verifier.code 0} true;
    goto corral_source_split_6577;

  corral_source_split_6577:
    assume {:verifier.code 0} true;
    $p72 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6578;

  corral_source_split_6578:
    assume {:verifier.code 0} true;
    $i73 := $p2i.ref.i64($p72);
    goto corral_source_split_6579;

  corral_source_split_6579:
    assume {:verifier.code 0} true;
    $i74 := $add.i64($i73, 40);
    call {:si_unique_call 8483} {:cexpr "__cil_tmp43"} {:si_old_unique_call 3346} boogie_si_record_i64($i74);
    goto corral_source_split_6580;

  corral_source_split_6580:
    assume {:verifier.code 0} true;
    $p75 := $i2p.i64.ref($i74);
    goto corral_source_split_6581;

  corral_source_split_6581:
    assume {:verifier.code 0} true;
    goto corral_source_split_6582;

  corral_source_split_6582:
    assume {:verifier.code 0} true;
    $p76 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6583;

  corral_source_split_6583:
    assume {:verifier.code 0} true;
    $i77 := $p2i.ref.i64($p76);
    goto corral_source_split_6584;

  corral_source_split_6584:
    assume {:verifier.code 0} true;
    $i78 := $add.i64($i77, 44);
    call {:si_unique_call 8484} {:cexpr "__cil_tmp45"} {:si_old_unique_call 3347} boogie_si_record_i64($i78);
    goto corral_source_split_6585;

  corral_source_split_6585:
    assume {:verifier.code 0} true;
    $p79 := $i2p.i64.ref($i78);
    goto corral_source_split_6586;

  corral_source_split_6586:
    assume {:verifier.code 0} true;
    goto corral_source_split_6587;

  corral_source_split_6587:
    assume {:verifier.code 0} true;
    $p80 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6588;

  corral_source_split_6588:
    assume {:verifier.code 0} true;
    $i81 := $p2i.ref.i64($p80);
    goto corral_source_split_6589;

  corral_source_split_6589:
    assume {:verifier.code 0} true;
    $i82 := $add.i64($i81, 48);
    call {:si_unique_call 8485} {:cexpr "__cil_tmp47"} {:si_old_unique_call 3348} boogie_si_record_i64($i82);
    goto corral_source_split_6590;

  corral_source_split_6590:
    assume {:verifier.code 0} true;
    $p83 := $i2p.i64.ref($i82);
    goto corral_source_split_6591;

  corral_source_split_6591:
    assume {:verifier.code 0} true;
    goto corral_source_split_6592;

  corral_source_split_6592:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6593;

  corral_source_split_6593:
    assume {:verifier.code 0} true;
    $i85 := $p2i.ref.i64($p84);
    goto corral_source_split_6594;

  corral_source_split_6594:
    assume {:verifier.code 0} true;
    $i86 := $add.i64($i85, 52);
    call {:si_unique_call 8486} {:cexpr "__cil_tmp49"} {:si_old_unique_call 3349} boogie_si_record_i64($i86);
    goto corral_source_split_6595;

  corral_source_split_6595:
    assume {:verifier.code 0} true;
    $p87 := $i2p.i64.ref($i86);
    goto corral_source_split_6596;

  corral_source_split_6596:
    assume {:verifier.code 0} true;
    goto corral_source_split_6597;

  corral_source_split_6597:
    assume {:verifier.code 0} true;
    $p88 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6598;

  corral_source_split_6598:
    assume {:verifier.code 0} true;
    $i89 := $p2i.ref.i64($p88);
    goto corral_source_split_6599;

  corral_source_split_6599:
    assume {:verifier.code 0} true;
    $i90 := $add.i64($i89, 56);
    call {:si_unique_call 8487} {:cexpr "__cil_tmp51"} {:si_old_unique_call 3350} boogie_si_record_i64($i90);
    goto corral_source_split_6600;

  corral_source_split_6600:
    assume {:verifier.code 0} true;
    $p91 := $i2p.i64.ref($i90);
    goto corral_source_split_6601;

  corral_source_split_6601:
    assume {:verifier.code 0} true;
    goto corral_source_split_6602;

  corral_source_split_6602:
    assume {:verifier.code 0} true;
    $i92 := $p2i.ref.i64($p0);
    call {:si_unique_call 8488} {:cexpr "__cil_tmp52"} {:si_old_unique_call 3351} boogie_si_record_i64($i92);
    goto corral_source_split_6603;

  corral_source_split_6603:
    assume {:verifier.code 0} true;
    $i93 := $add.i64($i92, 1044);
    call {:si_unique_call 8489} {:cexpr "__cil_tmp53"} {:si_old_unique_call 3352} boogie_si_record_i64($i93);
    goto corral_source_split_6604;

  corral_source_split_6604:
    assume {:verifier.code 0} true;
    $p94 := $i2p.i64.ref($i93);
    goto corral_source_split_6605;

  corral_source_split_6605:
    assume {:verifier.code 0} true;
    havoc $i95;
    call {:si_unique_call 8490} {:cexpr "__cil_tmp54"} {:si_old_unique_call 3353} boogie_si_record_i32($i95);
    goto corral_source_split_6606;

  corral_source_split_6606:
    assume {:verifier.code 0} true;
    $i96 := $and.i32($i95, 4194304);
    goto corral_source_split_6607;

  corral_source_split_6607:
    assume {:verifier.code 0} true;
    $i97 := $ne.i32($i96, 0);
    goto corral_source_split_6608;

  corral_source_split_6608:
    assume {:verifier.code 0} true;
    assume {:branchcond $i97} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i97 == 1);
    goto corral_source_split_6618;

  corral_source_split_6618:
    assume {:verifier.code 0} true;
    $p106 := $add.ref($add.ref($p2, $mul.ref(0, 28)), $mul.ref(0, 4));
    goto corral_source_split_6619;

  corral_source_split_6619:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p106);
    goto corral_source_split_6620;

  corral_source_split_6620:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 0);
    call {:si_unique_call 8491} {:cexpr "__cil_tmp61"} {:si_old_unique_call 3357} boogie_si_record_i64($i108);
    goto corral_source_split_6621;

  corral_source_split_6621:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_6622;

  corral_source_split_6622:
    assume {:verifier.code 0} true;
    $i110 := $add.i64(7, 0);
    call {:si_unique_call 8492} {:cexpr "__cil_tmp64"} {:si_old_unique_call 3358} boogie_si_record_i64($i110);
    goto corral_source_split_6623;

  corral_source_split_6623:
    assume {:verifier.code 0} true;
    $i111 := $trunc.i64.i32($i110);
    call {:si_unique_call 8493} {:cexpr "size"} {:si_old_unique_call 3359} boogie_si_record_i32($i111);
    assume {:verifier.code 0} true;
    $p104, $i105 := $p109, $i111;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_6625;

  corral_source_split_6625:
    assume {:verifier.code 0} true;
    $i112 := 0;
    goto $bb4;

  $bb4:
    call {:si_unique_call 8494} $i112, $i113, $i114, $i116, $p117, $i118, $i119, $i120, $i121 := aty_calc_mem_refresh_loop_$bb4($i1, $p104, $i105, $i112, $i113, $i114, $i116, $p117, $i118, $i119, $i120, $i121);
    LoopBound_AssertVar := false;
    goto $bb4_last;

  $bb4_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_6627;

  corral_source_split_6627:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i113 := $slt.i32($i112, $i105);
    goto corral_source_split_6629;

  corral_source_split_6629:
    assume {:verifier.code 0} true;
    $i114 := $i112;
    assume {:branchcond $i113} true;
    goto $bb6, $bb7;

  $bb7:
    assume !($i113 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_6633;

  corral_source_split_6633:
    assume {:verifier.code 0} true;
    $i115 := $i114;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_6640;

  corral_source_split_6640:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p0);
    call {:si_unique_call 8495} {:cexpr "__cil_tmp68"} {:si_old_unique_call 3361} boogie_si_record_i64($i122);
    goto corral_source_split_6641;

  corral_source_split_6641:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 1066);
    call {:si_unique_call 8496} {:cexpr "__cil_tmp69"} {:si_old_unique_call 3362} boogie_si_record_i64($i123);
    goto corral_source_split_6642;

  corral_source_split_6642:
    assume {:verifier.code 0} true;
    $i124 := $trunc.i32.i8($i115);
    goto corral_source_split_6643;

  corral_source_split_6643:
    assume {:verifier.code 0} true;
    $p125 := $i2p.i64.ref($i123);
    goto corral_source_split_6644;

  corral_source_split_6644:
    assume {:verifier.code 0} true;
    goto corral_source_split_6645;

  corral_source_split_6645:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb6:
    assume $i113 == 1;
    goto corral_source_split_6631;

  corral_source_split_6631:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    $i116 := $sext.i32.i64($i112);
    goto corral_source_split_6635;

  corral_source_split_6635:
    assume {:verifier.code 0} true;
    $p117 := $add.ref($p104, $mul.ref($i116, 4));
    goto corral_source_split_6636;

  corral_source_split_6636:
    assume {:verifier.code 0} true;
    havoc $i118;
    call {:si_unique_call 8497} {:cexpr "__cil_tmp66"} {:si_old_unique_call 3360} boogie_si_record_i32($i118);
    goto corral_source_split_6637;

  corral_source_split_6637:
    assume {:verifier.code 0} true;
    $i119 := $slt.i32($i1, $i118);
    goto corral_source_split_6638;

  corral_source_split_6638:
    assume {:verifier.code 0} true;
    $i120 := $i112;
    assume {:branchcond $i119} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    $i121 := $add.i32($i112, 1);
    call {:si_unique_call 8498} {:cexpr "i"} {:si_old_unique_call 3363} boogie_si_record_i32($i121);
    goto corral_source_split_6649;

  corral_source_split_6649:
    assume {:verifier.code 0} true;
    $i112 := $i121;
    goto corral_source_split_6649_dummy;

  corral_source_split_6649_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb10:
    assume $i119 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_6647;

  corral_source_split_6647:
    assume {:verifier.code 0} true;
    $i115 := $i120;
    goto $bb9;

  $bb1:
    assume $i97 == 1;
    goto corral_source_split_6610;

  corral_source_split_6610:
    assume {:verifier.code 0} true;
    $p98 := $add.ref($add.ref($p3, $mul.ref(0, 60)), $mul.ref(0, 4));
    goto corral_source_split_6611;

  corral_source_split_6611:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p98);
    goto corral_source_split_6612;

  corral_source_split_6612:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 0);
    call {:si_unique_call 8499} {:cexpr "__cil_tmp56"} {:si_old_unique_call 3354} boogie_si_record_i64($i100);
    goto corral_source_split_6613;

  corral_source_split_6613:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_6614;

  corral_source_split_6614:
    assume {:verifier.code 0} true;
    $i102 := $add.i64(15, 0);
    call {:si_unique_call 8500} {:cexpr "__cil_tmp59"} {:si_old_unique_call 3355} boogie_si_record_i64($i102);
    goto corral_source_split_6615;

  corral_source_split_6615:
    assume {:verifier.code 0} true;
    $i103 := $trunc.i64.i32($i102);
    call {:si_unique_call 8501} {:cexpr "size"} {:si_old_unique_call 3356} boogie_si_record_i32($i103);
    goto corral_source_split_6616;

  corral_source_split_6616:
    assume {:verifier.code 0} true;
    $p104, $i105 := $p101, $i103;
    goto $bb3;
}



implementation {:LB_Mapping "atyfb_cursor_loop_$bb25"} {:entrypoint} atyfb_cursor_EntryCopy_atyfb_cursor_loop_$bb25($p0: ref, $p1: ref) returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i16;
  var $i17: i1;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $i21: i32;
  var $p22: ref;
  var $i23: i16;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i32;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i16;
  var $i35: i32;
  var $i36: i64;
  var $i37: i64;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i16;
  var $i45: i32;
  var $i46: i16;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i32;
  var $i51: i64;
  var $i52: i64;
  var $p53: ref;
  var $i54: i16;
  var $i55: i32;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i32;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i16;
  var $i65: i32;
  var $i66: i16;
  var $i67: i64;
  var $i68: i64;
  var $p69: ref;
  var $i70: i32;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $i74: i32;
  var $i75: i32;
  var $i76: i1;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i64;
  var $i84: i64;
  var $p85: ref;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $p97: ref;
  var $i98: i16;
  var $i99: i32;
  var $i100: i32;
  var $i101: i1;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i32;
  var $i106: i64;
  var $i107: i64;
  var $p108: ref;
  var $i109: i32;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $p115: ref;
  var $i116: i16;
  var $i117: i32;
  var $i118: i32;
  var $i119: i32;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $p123: ref;
  var $i124: i64;
  var $p125: ref;
  var $i126: i16;
  var $i127: i32;
  var $i128: i32;
  var $i129: i32;
  var $i130: i64;
  var $i131: i64;
  var $p132: ref;
  var $p133: ref;
  var $i134: i64;
  var $p135: ref;
  var $i136: i16;
  var $i137: i32;
  var $i138: i32;
  var $i139: i32;
  var $i140: i32;
  var $i141: i32;
  var $i142: i32;
  var $i143: i64;
  var $i144: i64;
  var $p145: ref;
  var $p146: ref;
  var $i147: i64;
  var $p148: ref;
  var $i149: i16;
  var $i150: i32;
  var $i151: i32;
  var $i152: i32;
  var $i153: i64;
  var $i154: i64;
  var $p155: ref;
  var $p156: ref;
  var $i157: i64;
  var $p158: ref;
  var $i159: i16;
  var $i160: i32;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $p166: ref;
  var $i167: i64;
  var $p168: ref;
  var $i169: i16;
  var $i170: i32;
  var $i171: i32;
  var $i172: i32;
  var $i173: i32;
  var $i174: i32;
  var $p175: ref;
  var $i176: i16;
  var $i177: i32;
  var $i178: i32;
  var $i179: i1;
  var $i180: i64;
  var $i181: i64;
  var $p182: ref;
  var $p183: ref;
  var $i184: i64;
  var $i185: i64;
  var $p186: ref;
  var $p187: ref;
  var $i188: i64;
  var $i189: i64;
  var $p190: ref;
  var $p191: ref;
  var $i192: i64;
  var $i193: i64;
  var $p194: ref;
  var $i195: i32;
  var $i196: i32;
  var $i197: i32;
  var $i198: i64;
  var $i199: i64;
  var $p200: ref;
  var $i201: i32;
  var $i202: i64;
  var $i203: i64;
  var $p204: ref;
  var $i205: i32;
  var $i206: i32;
  var $i207: i32;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $i211: i32;
  var $i212: i1;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $i216: i32;
  var $i217: i1;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $i222: i8;
  var $p223: ref;
  var $i224: i8;
  var $i225: i64;
  var $i226: i64;
  var $p227: ref;
  var $i228: i16;
  var $i229: i32;
  var $i230: i1;
  var $i231: i32;
  var $i232: i1;
  var $p233: ref;
  var $i234: i32;
  var $i235: i32;
  var $i236: i32;
  var $i237: i32;
  var $i238: i64;
  var $i239: i64;
  var $i240: i64;
  var $p241: ref;
  var $i242: i8;
  var $i243: i64;
  var $p244: ref;
  var $i245: i32;
  var $i246: i32;
  var $i247: i32;
  var $i248: i32;
  var $i249: i64;
  var $i250: i64;
  var $i251: i64;
  var $p252: ref;
  var $i253: i8;
  var $p255: ref;
  var $i256: i32;
  var $i257: i32;
  var $i258: i32;
  var $i259: i32;
  var $i260: i64;
  var $i261: i64;
  var $i262: i64;
  var $p263: ref;
  var $i264: i8;
  var $i265: i64;
  var $p266: ref;
  var $i267: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i32;
  var $i271: i64;
  var $i272: i64;
  var $i273: i64;
  var $p274: ref;
  var $i275: i8;
  var $p254: ref;
  var $i276: i32;
  var $i277: i64;
  var $p278: ref;
  var $i279: i32;
  var $i12: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7037;

  corral_source_split_7037:
    assume {:verifier.code 0} true;
    $i2 := $p2i.ref.i64($p0);
    call {:si_unique_call 8711} {:cexpr "__cil_tmp32"} {:si_old_unique_call 3573} boogie_si_record_i64($i2);
    goto corral_source_split_7038;

  corral_source_split_7038:
    assume {:verifier.code 0} true;
    $i3 := $add.i64($i2, 1160);
    call {:si_unique_call 8712} {:cexpr "__cil_tmp33"} {:si_old_unique_call 3574} boogie_si_record_i64($i3);
    goto corral_source_split_7039;

  corral_source_split_7039:
    assume {:verifier.code 0} true;
    $p4 := $i2p.i64.ref($i3);
    goto corral_source_split_7040;

  corral_source_split_7040:
    assume {:verifier.code 0} true;
    havoc $p5;
    goto corral_source_split_7041;

  corral_source_split_7041:
    assume {:verifier.code 0} true;
    $p6 := $bitcast.ref.ref($p5);
    goto corral_source_split_7042;

  corral_source_split_7042:
    assume {:verifier.code 0} true;
    $i7 := $p2i.ref.i64($p6);
    call {:si_unique_call 8713} {:cexpr "__cil_tmp35"} {:si_old_unique_call 3575} boogie_si_record_i64($i7);
    goto corral_source_split_7043;

  corral_source_split_7043:
    assume {:verifier.code 0} true;
    $i8 := $add.i64($i7, 1080);
    call {:si_unique_call 8714} {:cexpr "__cil_tmp36"} {:si_old_unique_call 3576} boogie_si_record_i64($i8);
    goto corral_source_split_7044;

  corral_source_split_7044:
    assume {:verifier.code 0} true;
    $p9 := $i2p.i64.ref($i8);
    goto corral_source_split_7045;

  corral_source_split_7045:
    assume {:verifier.code 0} true;
    havoc $i10;
    goto corral_source_split_7046;

  corral_source_split_7046:
    assume {:verifier.code 0} true;
    $i11 := $ne.i32($i10, 0);
    goto corral_source_split_7047;

  corral_source_split_7047:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i11 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8715} {:si_old_unique_call 3577} wait_for_fifo(1, $p6);
    goto corral_source_split_7053;

  corral_source_split_7053:
    assume {:verifier.code 0} true;
    $i13 := $p2i.ref.i64($p1);
    call {:si_unique_call 8716} {:cexpr "__cil_tmp39"} {:si_old_unique_call 3578} boogie_si_record_i64($i13);
    goto corral_source_split_7054;

  corral_source_split_7054:
    assume {:verifier.code 0} true;
    $i14 := $add.i64($i13, 2);
    call {:si_unique_call 8717} {:cexpr "__cil_tmp40"} {:si_old_unique_call 3579} boogie_si_record_i64($i14);
    goto corral_source_split_7055;

  corral_source_split_7055:
    assume {:verifier.code 0} true;
    $p15 := $i2p.i64.ref($i14);
    goto corral_source_split_7056;

  corral_source_split_7056:
    assume {:verifier.code 0} true;
    havoc $i16;
    goto corral_source_split_7057;

  corral_source_split_7057:
    assume {:verifier.code 0} true;
    $i17 := $ne.i16($i16, 0);
    goto corral_source_split_7058;

  corral_source_split_7058:
    assume {:verifier.code 0} true;
    assume {:branchcond $i17} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i17 == 1);
    goto corral_source_split_7065;

  corral_source_split_7065:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8718} {:si_old_unique_call 3584} $i20 := aty_ld_le32(208, $p6);
    call {:si_unique_call 8719} {:cexpr "tmp___8"} {:si_old_unique_call 3585} boogie_si_record_i32($i20);
    goto corral_source_split_7066;

  corral_source_split_7066:
    assume {:verifier.code 0} true;
    $i21 := $and.i32($i20, $sub.i32(0, 129));
    call {:si_unique_call 8720} {:cexpr "__cil_tmp45"} {:si_old_unique_call 3586} boogie_si_record_i32($i21);
    goto corral_source_split_7067;

  corral_source_split_7067:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8721} {:si_old_unique_call 3587} aty_st_le32(208, $i21, $p6);
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    $p22 := $bitcast.ref.ref($p1);
    goto corral_source_split_7069;

  corral_source_split_7069:
    assume {:verifier.code 0} true;
    havoc $i23;
    call {:si_unique_call 8722} {:cexpr "__cil_tmp47"} {:si_old_unique_call 3588} boogie_si_record_i16($i23);
    goto corral_source_split_7070;

  corral_source_split_7070:
    assume {:verifier.code 0} true;
    $i24 := $zext.i16.i32($i23);
    call {:si_unique_call 8723} {:cexpr "__cil_tmp48"} {:si_old_unique_call 3589} boogie_si_record_i32($i24);
    goto corral_source_split_7071;

  corral_source_split_7071:
    assume {:verifier.code 0} true;
    $i25 := $and.i32($i24, 2);
    goto corral_source_split_7072;

  corral_source_split_7072:
    assume {:verifier.code 0} true;
    $i26 := $ne.i32($i25, 0);
    goto corral_source_split_7073;

  corral_source_split_7073:
    assume {:verifier.code 0} true;
    assume {:branchcond $i26} true;
    goto $bb8, $bb9;

  $bb9:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $p97 := $bitcast.ref.ref($p1);
    goto corral_source_split_7157;

  corral_source_split_7157:
    assume {:verifier.code 0} true;
    havoc $i98;
    call {:si_unique_call 8724} {:cexpr "__cil_tmp112"} {:si_old_unique_call 3645} boogie_si_record_i16($i98);
    goto corral_source_split_7158;

  corral_source_split_7158:
    assume {:verifier.code 0} true;
    $i99 := $zext.i16.i32($i98);
    call {:si_unique_call 8725} {:cexpr "__cil_tmp113"} {:si_old_unique_call 3646} boogie_si_record_i32($i99);
    goto corral_source_split_7159;

  corral_source_split_7159:
    assume {:verifier.code 0} true;
    $i100 := $and.i32($i99, 8);
    goto corral_source_split_7160;

  corral_source_split_7160:
    assume {:verifier.code 0} true;
    $i101 := $ne.i32($i100, 0);
    goto corral_source_split_7161;

  corral_source_split_7161:
    assume {:verifier.code 0} true;
    assume {:branchcond $i101} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i101 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $p175 := $bitcast.ref.ref($p1);
    goto corral_source_split_7241;

  corral_source_split_7241:
    assume {:verifier.code 0} true;
    havoc $i176;
    call {:si_unique_call 8726} {:cexpr "__cil_tmp183"} {:si_old_unique_call 3697} boogie_si_record_i16($i176);
    goto corral_source_split_7242;

  corral_source_split_7242:
    assume {:verifier.code 0} true;
    $i177 := $zext.i16.i32($i176);
    call {:si_unique_call 8727} {:cexpr "__cil_tmp184"} {:si_old_unique_call 3698} boogie_si_record_i32($i177);
    goto corral_source_split_7243;

  corral_source_split_7243:
    assume {:verifier.code 0} true;
    $i178 := $and.i32($i177, 17);
    goto corral_source_split_7244;

  corral_source_split_7244:
    assume {:verifier.code 0} true;
    $i179 := $ne.i32($i178, 0);
    goto corral_source_split_7245;

  corral_source_split_7245:
    assume {:verifier.code 0} true;
    assume {:branchcond $i179} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i179 == 1);
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    $i12 := 0;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    goto corral_source_split_7051;

  corral_source_split_7051:
    assume {:verifier.code 0} true;
    $r := $i12;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb23:
    assume $i179 == 1;
    goto corral_source_split_7247;

  corral_source_split_7247:
    assume {:verifier.code 0} true;
    $i180 := $p2i.ref.i64($p1);
    call {:si_unique_call 8728} {:cexpr "__cil_tmp186"} {:si_old_unique_call 3699} boogie_si_record_i64($i180);
    goto corral_source_split_7248;

  corral_source_split_7248:
    assume {:verifier.code 0} true;
    $i181 := $add.i64($i180, 56);
    call {:si_unique_call 8729} {:cexpr "__cil_tmp187"} {:si_old_unique_call 3700} boogie_si_record_i64($i181);
    goto corral_source_split_7249;

  corral_source_split_7249:
    assume {:verifier.code 0} true;
    $p182 := $i2p.i64.ref($i181);
    goto corral_source_split_7250;

  corral_source_split_7250:
    assume {:verifier.code 0} true;
    havoc $p183;
    goto corral_source_split_7251;

  corral_source_split_7251:
    assume {:verifier.code 0} true;
    $i184 := $p2i.ref.i64($p1);
    call {:si_unique_call 8730} {:cexpr "__cil_tmp189"} {:si_old_unique_call 3701} boogie_si_record_i64($i184);
    goto corral_source_split_7252;

  corral_source_split_7252:
    assume {:verifier.code 0} true;
    $i185 := $add.i64($i184, 8);
    call {:si_unique_call 8731} {:cexpr "__cil_tmp190"} {:si_old_unique_call 3702} boogie_si_record_i64($i185);
    goto corral_source_split_7253;

  corral_source_split_7253:
    assume {:verifier.code 0} true;
    $p186 := $i2p.i64.ref($i185);
    goto corral_source_split_7254;

  corral_source_split_7254:
    assume {:verifier.code 0} true;
    havoc $p187;
    goto corral_source_split_7255;

  corral_source_split_7255:
    assume {:verifier.code 0} true;
    $i188 := $p2i.ref.i64($p0);
    call {:si_unique_call 8732} {:cexpr "__cil_tmp192"} {:si_old_unique_call 3703} boogie_si_record_i64($i188);
    goto corral_source_split_7256;

  corral_source_split_7256:
    assume {:verifier.code 0} true;
    $i189 := $add.i64($i188, 632);
    call {:si_unique_call 8733} {:cexpr "__cil_tmp193"} {:si_old_unique_call 3704} boogie_si_record_i64($i189);
    goto corral_source_split_7257;

  corral_source_split_7257:
    assume {:verifier.code 0} true;
    $p190 := $i2p.i64.ref($i189);
    goto corral_source_split_7258;

  corral_source_split_7258:
    assume {:verifier.code 0} true;
    havoc $p191;
    goto corral_source_split_7259;

  corral_source_split_7259:
    assume {:verifier.code 0} true;
    $i192 := $p2i.ref.i64($p1);
    call {:si_unique_call 8734} {:cexpr "__cil_tmp195"} {:si_old_unique_call 3705} boogie_si_record_i64($i192);
    goto corral_source_split_7260;

  corral_source_split_7260:
    assume {:verifier.code 0} true;
    $i193 := $add.i64($i192, 32);
    call {:si_unique_call 8735} {:cexpr "__cil_tmp196"} {:si_old_unique_call 3706} boogie_si_record_i64($i193);
    goto corral_source_split_7261;

  corral_source_split_7261:
    assume {:verifier.code 0} true;
    $p194 := $i2p.i64.ref($i193);
    goto corral_source_split_7262;

  corral_source_split_7262:
    assume {:verifier.code 0} true;
    havoc $i195;
    call {:si_unique_call 8736} {:cexpr "__cil_tmp197"} {:si_old_unique_call 3707} boogie_si_record_i32($i195);
    goto corral_source_split_7263;

  corral_source_split_7263:
    assume {:verifier.code 0} true;
    $i196 := $add.i32($i195, 7);
    call {:si_unique_call 8737} {:cexpr "__cil_tmp198"} {:si_old_unique_call 3708} boogie_si_record_i32($i196);
    goto corral_source_split_7264;

  corral_source_split_7264:
    assume {:verifier.code 0} true;
    $i197 := $lshr.i32($i196, 3);
    call {:si_unique_call 8738} {:cexpr "width"} {:si_old_unique_call 3709} boogie_si_record_i32($i197);
    goto corral_source_split_7265;

  corral_source_split_7265:
    assume {:verifier.code 0} true;
    $i198 := $p2i.ref.i64($p1);
    call {:si_unique_call 8739} {:cexpr "__cil_tmp200"} {:si_old_unique_call 3710} boogie_si_record_i64($i198);
    goto corral_source_split_7266;

  corral_source_split_7266:
    assume {:verifier.code 0} true;
    $i199 := $add.i64($i198, 36);
    call {:si_unique_call 8740} {:cexpr "__cil_tmp201"} {:si_old_unique_call 3711} boogie_si_record_i64($i199);
    goto corral_source_split_7267;

  corral_source_split_7267:
    assume {:verifier.code 0} true;
    $p200 := $i2p.i64.ref($i199);
    goto corral_source_split_7268;

  corral_source_split_7268:
    assume {:verifier.code 0} true;
    havoc $i201;
    call {:si_unique_call 8741} {:cexpr "height"} {:si_old_unique_call 3712} boogie_si_record_i32($i201);
    goto corral_source_split_7269;

  corral_source_split_7269:
    assume {:verifier.code 0} true;
    $i202 := $p2i.ref.i64($p0);
    call {:si_unique_call 8742} {:cexpr "__cil_tmp203"} {:si_old_unique_call 3713} boogie_si_record_i64($i202);
    goto corral_source_split_7270;

  corral_source_split_7270:
    assume {:verifier.code 0} true;
    $i203 := $add.i64($i202, 652);
    call {:si_unique_call 8743} {:cexpr "__cil_tmp204"} {:si_old_unique_call 3714} boogie_si_record_i64($i203);
    goto corral_source_split_7271;

  corral_source_split_7271:
    assume {:verifier.code 0} true;
    $p204 := $i2p.i64.ref($i203);
    goto corral_source_split_7272;

  corral_source_split_7272:
    assume {:verifier.code 0} true;
    havoc $i205;
    call {:si_unique_call 8744} {:cexpr "align"} {:si_old_unique_call 3715} boogie_si_record_i32($i205);
    goto corral_source_split_7273;

  corral_source_split_7273:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8745} {:si_old_unique_call 3716} memset_io($p191, $sub.i8(0, 86), 1024);
    goto corral_source_split_7274;

  corral_source_split_7274:
    assume {:verifier.code 0} true;
    $i206 := $mul.i32($i197, 2);
    call {:si_unique_call 8746} {:cexpr "__cil_tmp207"} {:si_old_unique_call 3717} boogie_si_record_i32($i206);
    goto corral_source_split_7275;

  corral_source_split_7275:
    assume {:verifier.code 0} true;
    $i207 := $sub.i32($i205, $i206);
    call {:si_unique_call 8747} {:cexpr "offset"} {:si_old_unique_call 3718} boogie_si_record_i32($i207);
    goto corral_source_split_7276;

  corral_source_split_7276:
    assume {:verifier.code 0} true;
    $p208, $p209, $p210, $i211 := $p183, $p187, $p191, 0;
    goto $bb25;

  $bb25:
    call {:si_unique_call 8748} $p208, $p209, $p210, $i211, $i212, $p213, $p214, $p215, $i216, $i217, $p218, $p219, $p220, $p221, $i222, $p223, $i224, $i225, $i226, $p227, $i228, $i229, $i230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $p241, $i242, $i243, $p244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $i253, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $p263, $i264, $i265, $p266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $p274, $i275, $p254, $i276, $i277, $p278, $i279 := atyfb_cursor_loop_$bb25($p1, $i197, $i201, $i207, $p208, $p209, $p210, $i211, $i212, $p213, $p214, $p215, $i216, $i217, $p218, $p219, $p220, $p221, $i222, $p223, $i224, $i225, $i226, $p227, $i228, $i229, $i230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $p241, $i242, $i243, $p244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $i253, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $p263, $i264, $i265, $p266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $p274, $i275, $p254, $i276, $i277, $p278, $i279);
    LoopBound_AssertVar := false;
    goto $bb25_last;

  $bb25_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7278;

  corral_source_split_7278:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    $i212 := $ult.i32($i211, $i201);
    goto corral_source_split_7280;

  corral_source_split_7280:
    assume {:verifier.code 0} true;
    assume {:branchcond $i212} true;
    goto $bb27, $bb28;

  $bb28:
    assume !($i212 == 1);
    goto corral_source_split_7284;

  corral_source_split_7284:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb27:
    assume $i212 == 1;
    goto corral_source_split_7282;

  corral_source_split_7282:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    $p213, $p214, $p215, $i216 := $p208, $p209, $p210, 0;
    goto $bb31;

  $bb31:
    call {:si_unique_call 8749} $p213, $p214, $p215, $i216, $i217, $p218, $p219, $p220, $p221, $i222, $p223, $i224, $i225, $i226, $p227, $i228, $i229, $i230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $p241, $i242, $i243, $p244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $i253, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $p263, $i264, $i265, $p266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $p274, $i275, $p254, $i276 := atyfb_cursor_loop_$bb31($p1, $i197, $p213, $p214, $p215, $i216, $i217, $p218, $p219, $p220, $p221, $i222, $p223, $i224, $i225, $i226, $p227, $i228, $i229, $i230, $i231, $i232, $p233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $p241, $i242, $i243, $p244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $p252, $i253, $p255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $p263, $i264, $i265, $p266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $p274, $i275, $p254, $i276);
    goto $bb31_last;

  $bb31_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7286;

  corral_source_split_7286:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $i217 := $ult.i32($i216, $i197);
    goto corral_source_split_7288;

  corral_source_split_7288:
    assume {:verifier.code 0} true;
    $p218, $p219, $p220 := $p213, $p214, $p215;
    assume {:branchcond $i217} true;
    goto $bb33, $bb34;

  $bb34:
    assume !($i217 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7292;

  corral_source_split_7292:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i277 := $zext.i32.i64($i207);
    goto corral_source_split_7305;

  corral_source_split_7305:
    assume {:verifier.code 0} true;
    $p278 := $add.ref($p220, $mul.ref($i277, 1));
    goto corral_source_split_7306;

  corral_source_split_7306:
    assume {:verifier.code 0} true;
    $i279 := $add.i32($i211, 1);
    call {:si_unique_call 8750} {:cexpr "i"} {:si_old_unique_call 3724} boogie_si_record_i32($i279);
    goto corral_source_split_7307;

  corral_source_split_7307:
    assume {:verifier.code 0} true;
    $p208, $p209, $p210, $i211 := $p218, $p219, $p278, $i279;
    goto corral_source_split_7307_dummy;

  corral_source_split_7307_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb33:
    assume $i217 == 1;
    goto corral_source_split_7290;

  corral_source_split_7290:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    $p221 := $add.ref($p213, $mul.ref(1, 1));
    goto corral_source_split_7294;

  corral_source_split_7294:
    assume {:verifier.code 0} true;
    havoc $i222;
    call {:si_unique_call 8751} {:cexpr "b"} {:si_old_unique_call 3719} boogie_si_record_i8($i222);
    goto corral_source_split_7295;

  corral_source_split_7295:
    assume {:verifier.code 0} true;
    $p223 := $add.ref($p214, $mul.ref(1, 1));
    goto corral_source_split_7296;

  corral_source_split_7296:
    assume {:verifier.code 0} true;
    havoc $i224;
    call {:si_unique_call 8752} {:cexpr "m"} {:si_old_unique_call 3720} boogie_si_record_i8($i224);
    goto corral_source_split_7297;

  corral_source_split_7297:
    assume {:verifier.code 0} true;
    $i225 := $p2i.ref.i64($p1);
    call {:si_unique_call 8753} {:cexpr "__cil_tmp208"} {:si_old_unique_call 3721} boogie_si_record_i64($i225);
    goto corral_source_split_7298;

  corral_source_split_7298:
    assume {:verifier.code 0} true;
    $i226 := $add.i64($i225, 4);
    call {:si_unique_call 8754} {:cexpr "__cil_tmp209"} {:si_old_unique_call 3722} boogie_si_record_i64($i226);
    goto corral_source_split_7299;

  corral_source_split_7299:
    assume {:verifier.code 0} true;
    $p227 := $i2p.i64.ref($i226);
    goto corral_source_split_7300;

  corral_source_split_7300:
    assume {:verifier.code 0} true;
    havoc $i228;
    call {:si_unique_call 8755} {:cexpr "__cil_tmp210"} {:si_old_unique_call 3723} boogie_si_record_i16($i228);
    goto corral_source_split_7301;

  corral_source_split_7301:
    assume {:verifier.code 0} true;
    $i229 := $zext.i16.i32($i228);
    goto corral_source_split_7302;

  corral_source_split_7302:
    assume {:verifier.code 0} true;
    $i230 := $eq.i32($i229, 1);
    goto corral_source_split_7303;

  corral_source_split_7303:
    assume {:verifier.code 0} true;
    assume {:branchcond $i230} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i230 == 1);
    goto corral_source_split_7311;

  corral_source_split_7311:
    assume {:verifier.code 0} true;
    $i231 := $zext.i16.i32($i228);
    goto corral_source_split_7312;

  corral_source_split_7312:
    assume {:verifier.code 0} true;
    $i232 := $eq.i32($i231, 0);
    goto corral_source_split_7313;

  corral_source_split_7313:
    assume {:verifier.code 0} true;
    assume {:branchcond $i232} true;
    goto $bb40, $bb41;

  $bb41:
    assume !($i232 == 1);
    goto corral_source_split_7340;

  corral_source_split_7340:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb43, $bb44;

  $bb44:
    assume !(0 == 1);
    goto corral_source_split_7367;

  corral_source_split_7367:
    assume {:verifier.code 0} true;
    $p254 := $p215;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    $i276 := $add.i32($i216, 1);
    call {:si_unique_call 8756} {:cexpr "j"} {:si_old_unique_call 3757} boogie_si_record_i32($i276);
    goto corral_source_split_7369;

  corral_source_split_7369:
    assume {:verifier.code 0} true;
    $p213, $p214, $p215, $i216 := $p221, $p223, $p254, $i276;
    goto corral_source_split_7369_dummy;

  corral_source_split_7369_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb43:
    assume 0 == 1;
    goto corral_source_split_7365;

  corral_source_split_7365:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $p233 := $add.ref($p215, $mul.ref(1, 1));
    goto corral_source_split_7315;

  corral_source_split_7315:
    assume {:verifier.code 0} true;
    $i234 := $zext.i8.i32($i224);
    call {:si_unique_call 8757} {:cexpr "__cil_tmp211"} {:si_old_unique_call 3725} boogie_si_record_i32($i234);
    goto corral_source_split_7316;

  corral_source_split_7316:
    assume {:verifier.code 0} true;
    $i235 := $zext.i8.i32($i222);
    call {:si_unique_call 8758} {:cexpr "__cil_tmp212"} {:si_old_unique_call 3726} boogie_si_record_i32($i235);
    goto corral_source_split_7317;

  corral_source_split_7317:
    assume {:verifier.code 0} true;
    $i236 := $xor.i32($i235, $i234);
    call {:si_unique_call 8759} {:cexpr "__cil_tmp213"} {:si_old_unique_call 3727} boogie_si_record_i32($i236);
    goto corral_source_split_7318;

  corral_source_split_7318:
    assume {:verifier.code 0} true;
    $i237 := $ashr.i32($i236, 4);
    call {:si_unique_call 8760} {:cexpr "__cil_tmp214"} {:si_old_unique_call 3728} boogie_si_record_i32($i237);
    goto corral_source_split_7319;

  corral_source_split_7319:
    assume {:verifier.code 0} true;
    $i238 := $sext.i32.i64($i237);
    goto corral_source_split_7320;

  corral_source_split_7320:
    assume {:verifier.code 0} true;
    $i239 := $mul.i64($i238, 1);
    call {:si_unique_call 8761} {:cexpr "__cil_tmp215"} {:si_old_unique_call 3729} boogie_si_record_i64($i239);
    goto corral_source_split_7321;

  corral_source_split_7321:
    assume {:verifier.code 0} true;
    $i240 := $add.i64($p2i.ref.i64(cursor_bits_lookup), $i239);
    call {:si_unique_call 8762} {:cexpr "__cil_tmp216"} {:si_old_unique_call 3730} boogie_si_record_i64($i240);
    goto corral_source_split_7322;

  corral_source_split_7322:
    assume {:verifier.code 0} true;
    $p241 := $i2p.i64.ref($i240);
    goto corral_source_split_7323;

  corral_source_split_7323:
    assume {:verifier.code 0} true;
    havoc $i242;
    call {:si_unique_call 8763} {:cexpr "__cil_tmp217"} {:si_old_unique_call 3731} boogie_si_record_i8($i242);
    goto corral_source_split_7324;

  corral_source_split_7324:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8764} {:si_old_unique_call 3732} __writeb($i242, $p215);
    $i243 := $add.i64(1, 1);
    goto corral_source_split_7325;

  corral_source_split_7325:
    assume {:verifier.code 0} true;
    $p244 := $add.ref($p215, $mul.ref($i243, 1));
    goto corral_source_split_7326;

  corral_source_split_7326:
    assume {:verifier.code 0} true;
    $i245 := $zext.i8.i32($i224);
    call {:si_unique_call 8765} {:cexpr "__cil_tmp220"} {:si_old_unique_call 3733} boogie_si_record_i32($i245);
    goto corral_source_split_7327;

  corral_source_split_7327:
    assume {:verifier.code 0} true;
    $i246 := $zext.i8.i32($i222);
    call {:si_unique_call 8766} {:cexpr "__cil_tmp221"} {:si_old_unique_call 3734} boogie_si_record_i32($i246);
    goto corral_source_split_7328;

  corral_source_split_7328:
    assume {:verifier.code 0} true;
    $i247 := $xor.i32($i246, $i245);
    call {:si_unique_call 8767} {:cexpr "__cil_tmp222"} {:si_old_unique_call 3735} boogie_si_record_i32($i247);
    goto corral_source_split_7329;

  corral_source_split_7329:
    assume {:verifier.code 0} true;
    $i248 := $and.i32($i247, 15);
    call {:si_unique_call 8768} {:cexpr "__cil_tmp223"} {:si_old_unique_call 3736} boogie_si_record_i32($i248);
    goto corral_source_split_7330;

  corral_source_split_7330:
    assume {:verifier.code 0} true;
    $i249 := $sext.i32.i64($i248);
    goto corral_source_split_7331;

  corral_source_split_7331:
    assume {:verifier.code 0} true;
    $i250 := $mul.i64($i249, 1);
    call {:si_unique_call 8769} {:cexpr "__cil_tmp224"} {:si_old_unique_call 3737} boogie_si_record_i64($i250);
    goto corral_source_split_7332;

  corral_source_split_7332:
    assume {:verifier.code 0} true;
    $i251 := $add.i64($p2i.ref.i64(cursor_bits_lookup), $i250);
    call {:si_unique_call 8770} {:cexpr "__cil_tmp225"} {:si_old_unique_call 3738} boogie_si_record_i64($i251);
    goto corral_source_split_7333;

  corral_source_split_7333:
    assume {:verifier.code 0} true;
    $p252 := $i2p.i64.ref($i251);
    goto corral_source_split_7334;

  corral_source_split_7334:
    assume {:verifier.code 0} true;
    havoc $i253;
    call {:si_unique_call 8771} {:cexpr "__cil_tmp226"} {:si_old_unique_call 3739} boogie_si_record_i8($i253);
    goto corral_source_split_7335;

  corral_source_split_7335:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8772} {:si_old_unique_call 3740} __writeb($i253, $p233);
    goto corral_source_split_7336;

  corral_source_split_7336:
    assume {:verifier.code 0} true;
    $p254 := $p244;
    goto $bb45;

  $bb40:
    assume $i232 == 1;
    goto corral_source_split_7338;

  corral_source_split_7338:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    $p255 := $add.ref($p215, $mul.ref(1, 1));
    goto corral_source_split_7342;

  corral_source_split_7342:
    assume {:verifier.code 0} true;
    $i256 := $zext.i8.i32($i224);
    call {:si_unique_call 8773} {:cexpr "__cil_tmp229"} {:si_old_unique_call 3741} boogie_si_record_i32($i256);
    goto corral_source_split_7343;

  corral_source_split_7343:
    assume {:verifier.code 0} true;
    $i257 := $zext.i8.i32($i222);
    call {:si_unique_call 8774} {:cexpr "__cil_tmp230"} {:si_old_unique_call 3742} boogie_si_record_i32($i257);
    goto corral_source_split_7344;

  corral_source_split_7344:
    assume {:verifier.code 0} true;
    $i258 := $and.i32($i257, $i256);
    call {:si_unique_call 8775} {:cexpr "__cil_tmp231"} {:si_old_unique_call 3743} boogie_si_record_i32($i258);
    goto corral_source_split_7345;

  corral_source_split_7345:
    assume {:verifier.code 0} true;
    $i259 := $ashr.i32($i258, 4);
    call {:si_unique_call 8776} {:cexpr "__cil_tmp232"} {:si_old_unique_call 3744} boogie_si_record_i32($i259);
    goto corral_source_split_7346;

  corral_source_split_7346:
    assume {:verifier.code 0} true;
    $i260 := $sext.i32.i64($i259);
    goto corral_source_split_7347;

  corral_source_split_7347:
    assume {:verifier.code 0} true;
    $i261 := $mul.i64($i260, 1);
    call {:si_unique_call 8777} {:cexpr "__cil_tmp233"} {:si_old_unique_call 3745} boogie_si_record_i64($i261);
    goto corral_source_split_7348;

  corral_source_split_7348:
    assume {:verifier.code 0} true;
    $i262 := $add.i64($p2i.ref.i64(cursor_bits_lookup), $i261);
    call {:si_unique_call 8778} {:cexpr "__cil_tmp234"} {:si_old_unique_call 3746} boogie_si_record_i64($i262);
    goto corral_source_split_7349;

  corral_source_split_7349:
    assume {:verifier.code 0} true;
    $p263 := $i2p.i64.ref($i262);
    goto corral_source_split_7350;

  corral_source_split_7350:
    assume {:verifier.code 0} true;
    havoc $i264;
    call {:si_unique_call 8779} {:cexpr "__cil_tmp235"} {:si_old_unique_call 3747} boogie_si_record_i8($i264);
    goto corral_source_split_7351;

  corral_source_split_7351:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8780} {:si_old_unique_call 3748} __writeb($i264, $p215);
    $i265 := $add.i64(1, 1);
    goto corral_source_split_7352;

  corral_source_split_7352:
    assume {:verifier.code 0} true;
    $p266 := $add.ref($p215, $mul.ref($i265, 1));
    goto corral_source_split_7353;

  corral_source_split_7353:
    assume {:verifier.code 0} true;
    $i267 := $zext.i8.i32($i224);
    call {:si_unique_call 8781} {:cexpr "__cil_tmp238"} {:si_old_unique_call 3749} boogie_si_record_i32($i267);
    goto corral_source_split_7354;

  corral_source_split_7354:
    assume {:verifier.code 0} true;
    $i268 := $zext.i8.i32($i222);
    call {:si_unique_call 8782} {:cexpr "__cil_tmp239"} {:si_old_unique_call 3750} boogie_si_record_i32($i268);
    goto corral_source_split_7355;

  corral_source_split_7355:
    assume {:verifier.code 0} true;
    $i269 := $and.i32($i268, $i267);
    call {:si_unique_call 8783} {:cexpr "__cil_tmp240"} {:si_old_unique_call 3751} boogie_si_record_i32($i269);
    goto corral_source_split_7356;

  corral_source_split_7356:
    assume {:verifier.code 0} true;
    $i270 := $and.i32($i269, 15);
    call {:si_unique_call 8784} {:cexpr "__cil_tmp241"} {:si_old_unique_call 3752} boogie_si_record_i32($i270);
    goto corral_source_split_7357;

  corral_source_split_7357:
    assume {:verifier.code 0} true;
    $i271 := $sext.i32.i64($i270);
    goto corral_source_split_7358;

  corral_source_split_7358:
    assume {:verifier.code 0} true;
    $i272 := $mul.i64($i271, 1);
    call {:si_unique_call 8785} {:cexpr "__cil_tmp242"} {:si_old_unique_call 3753} boogie_si_record_i64($i272);
    goto corral_source_split_7359;

  corral_source_split_7359:
    assume {:verifier.code 0} true;
    $i273 := $add.i64($p2i.ref.i64(cursor_bits_lookup), $i272);
    call {:si_unique_call 8786} {:cexpr "__cil_tmp243"} {:si_old_unique_call 3754} boogie_si_record_i64($i273);
    goto corral_source_split_7360;

  corral_source_split_7360:
    assume {:verifier.code 0} true;
    $p274 := $i2p.i64.ref($i273);
    goto corral_source_split_7361;

  corral_source_split_7361:
    assume {:verifier.code 0} true;
    havoc $i275;
    call {:si_unique_call 8787} {:cexpr "__cil_tmp244"} {:si_old_unique_call 3755} boogie_si_record_i8($i275);
    goto corral_source_split_7362;

  corral_source_split_7362:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8788} {:si_old_unique_call 3756} __writeb($i275, $p255);
    goto corral_source_split_7363;

  corral_source_split_7363:
    assume {:verifier.code 0} true;
    $p254 := $p266;
    goto $bb45;

  $bb37:
    assume $i230 == 1;
    goto corral_source_split_7309;

  corral_source_split_7309:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb20:
    assume $i101 == 1;
    goto corral_source_split_7163;

  corral_source_split_7163:
    assume {:verifier.code 0} true;
    $i102 := $p2i.ref.i64($p1);
    call {:si_unique_call 8789} {:cexpr "__cil_tmp115"} {:si_old_unique_call 3647} boogie_si_record_i64($i102);
    goto corral_source_split_7164;

  corral_source_split_7164:
    assume {:verifier.code 0} true;
    $i103 := $add.i64($i102, 40);
    call {:si_unique_call 8790} {:cexpr "__cil_tmp116"} {:si_old_unique_call 3648} boogie_si_record_i64($i103);
    goto corral_source_split_7165;

  corral_source_split_7165:
    assume {:verifier.code 0} true;
    $p104 := $i2p.i64.ref($i103);
    goto corral_source_split_7166;

  corral_source_split_7166:
    assume {:verifier.code 0} true;
    havoc $i105;
    call {:si_unique_call 8791} {:cexpr "fg_idx"} {:si_old_unique_call 3649} boogie_si_record_i32($i105);
    goto corral_source_split_7167;

  corral_source_split_7167:
    assume {:verifier.code 0} true;
    $i106 := $p2i.ref.i64($p1);
    call {:si_unique_call 8792} {:cexpr "__cil_tmp118"} {:si_old_unique_call 3650} boogie_si_record_i64($i106);
    goto corral_source_split_7168;

  corral_source_split_7168:
    assume {:verifier.code 0} true;
    $i107 := $add.i64($i106, 44);
    call {:si_unique_call 8793} {:cexpr "__cil_tmp119"} {:si_old_unique_call 3651} boogie_si_record_i64($i107);
    goto corral_source_split_7169;

  corral_source_split_7169:
    assume {:verifier.code 0} true;
    $p108 := $i2p.i64.ref($i107);
    goto corral_source_split_7170;

  corral_source_split_7170:
    assume {:verifier.code 0} true;
    havoc $i109;
    call {:si_unique_call 8794} {:cexpr "bg_idx"} {:si_old_unique_call 3652} boogie_si_record_i32($i109);
    goto corral_source_split_7171;

  corral_source_split_7171:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p0);
    call {:si_unique_call 8795} {:cexpr "__cil_tmp121"} {:si_old_unique_call 3653} boogie_si_record_i64($i110);
    goto corral_source_split_7172;

  corral_source_split_7172:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 712);
    call {:si_unique_call 8796} {:cexpr "__cil_tmp122"} {:si_old_unique_call 3654} boogie_si_record_i64($i111);
    goto corral_source_split_7173;

  corral_source_split_7173:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_7174;

  corral_source_split_7174:
    assume {:verifier.code 0} true;
    havoc $p113;
    goto corral_source_split_7175;

  corral_source_split_7175:
    assume {:verifier.code 0} true;
    $i114 := $zext.i32.i64($i105);
    goto corral_source_split_7176;

  corral_source_split_7176:
    assume {:verifier.code 0} true;
    $p115 := $add.ref($p113, $mul.ref($i114, 2));
    goto corral_source_split_7177;

  corral_source_split_7177:
    assume {:verifier.code 0} true;
    havoc $i116;
    call {:si_unique_call 8797} {:cexpr "__cil_tmp125"} {:si_old_unique_call 3655} boogie_si_record_i16($i116);
    goto corral_source_split_7178;

  corral_source_split_7178:
    assume {:verifier.code 0} true;
    $i117 := $zext.i16.i32($i116);
    call {:si_unique_call 8798} {:cexpr "__cil_tmp126"} {:si_old_unique_call 3656} boogie_si_record_i32($i117);
    goto corral_source_split_7179;

  corral_source_split_7179:
    assume {:verifier.code 0} true;
    $i118 := $and.i32($i117, 255);
    call {:si_unique_call 8799} {:cexpr "__cil_tmp127"} {:si_old_unique_call 3657} boogie_si_record_i32($i118);
    goto corral_source_split_7180;

  corral_source_split_7180:
    assume {:verifier.code 0} true;
    $i119 := $shl.i32($i118, 8);
    call {:si_unique_call 8800} {:cexpr "__cil_tmp128"} {:si_old_unique_call 3658} boogie_si_record_i32($i119);
    goto corral_source_split_7181;

  corral_source_split_7181:
    assume {:verifier.code 0} true;
    $i120 := $p2i.ref.i64($p0);
    call {:si_unique_call 8801} {:cexpr "__cil_tmp130"} {:si_old_unique_call 3659} boogie_si_record_i64($i120);
    goto corral_source_split_7182;

  corral_source_split_7182:
    assume {:verifier.code 0} true;
    $i121 := $add.i64($i120, 704);
    call {:si_unique_call 8802} {:cexpr "__cil_tmp131"} {:si_old_unique_call 3660} boogie_si_record_i64($i121);
    goto corral_source_split_7183;

  corral_source_split_7183:
    assume {:verifier.code 0} true;
    $p122 := $i2p.i64.ref($i121);
    goto corral_source_split_7184;

  corral_source_split_7184:
    assume {:verifier.code 0} true;
    havoc $p123;
    goto corral_source_split_7185;

  corral_source_split_7185:
    assume {:verifier.code 0} true;
    $i124 := $zext.i32.i64($i105);
    goto corral_source_split_7186;

  corral_source_split_7186:
    assume {:verifier.code 0} true;
    $p125 := $add.ref($p123, $mul.ref($i124, 2));
    goto corral_source_split_7187;

  corral_source_split_7187:
    assume {:verifier.code 0} true;
    havoc $i126;
    call {:si_unique_call 8803} {:cexpr "__cil_tmp134"} {:si_old_unique_call 3661} boogie_si_record_i16($i126);
    goto corral_source_split_7188;

  corral_source_split_7188:
    assume {:verifier.code 0} true;
    $i127 := $zext.i16.i32($i126);
    call {:si_unique_call 8804} {:cexpr "__cil_tmp135"} {:si_old_unique_call 3662} boogie_si_record_i32($i127);
    goto corral_source_split_7189;

  corral_source_split_7189:
    assume {:verifier.code 0} true;
    $i128 := $and.i32($i127, 255);
    call {:si_unique_call 8805} {:cexpr "__cil_tmp136"} {:si_old_unique_call 3663} boogie_si_record_i32($i128);
    goto corral_source_split_7190;

  corral_source_split_7190:
    assume {:verifier.code 0} true;
    $i129 := $shl.i32($i128, 16);
    call {:si_unique_call 8806} {:cexpr "__cil_tmp137"} {:si_old_unique_call 3664} boogie_si_record_i32($i129);
    goto corral_source_split_7191;

  corral_source_split_7191:
    assume {:verifier.code 0} true;
    $i130 := $p2i.ref.i64($p0);
    call {:si_unique_call 8807} {:cexpr "__cil_tmp139"} {:si_old_unique_call 3665} boogie_si_record_i64($i130);
    goto corral_source_split_7192;

  corral_source_split_7192:
    assume {:verifier.code 0} true;
    $i131 := $add.i64($i130, 696);
    call {:si_unique_call 8808} {:cexpr "__cil_tmp140"} {:si_old_unique_call 3666} boogie_si_record_i64($i131);
    goto corral_source_split_7193;

  corral_source_split_7193:
    assume {:verifier.code 0} true;
    $p132 := $i2p.i64.ref($i131);
    goto corral_source_split_7194;

  corral_source_split_7194:
    assume {:verifier.code 0} true;
    havoc $p133;
    goto corral_source_split_7195;

  corral_source_split_7195:
    assume {:verifier.code 0} true;
    $i134 := $zext.i32.i64($i105);
    goto corral_source_split_7196;

  corral_source_split_7196:
    assume {:verifier.code 0} true;
    $p135 := $add.ref($p133, $mul.ref($i134, 2));
    goto corral_source_split_7197;

  corral_source_split_7197:
    assume {:verifier.code 0} true;
    havoc $i136;
    call {:si_unique_call 8809} {:cexpr "__cil_tmp143"} {:si_old_unique_call 3667} boogie_si_record_i16($i136);
    goto corral_source_split_7198;

  corral_source_split_7198:
    assume {:verifier.code 0} true;
    $i137 := $zext.i16.i32($i136);
    call {:si_unique_call 8810} {:cexpr "__cil_tmp144"} {:si_old_unique_call 3668} boogie_si_record_i32($i137);
    goto corral_source_split_7199;

  corral_source_split_7199:
    assume {:verifier.code 0} true;
    $i138 := $and.i32($i137, 255);
    call {:si_unique_call 8811} {:cexpr "__cil_tmp145"} {:si_old_unique_call 3669} boogie_si_record_i32($i138);
    goto corral_source_split_7200;

  corral_source_split_7200:
    assume {:verifier.code 0} true;
    $i139 := $shl.i32($i138, 24);
    call {:si_unique_call 8812} {:cexpr "__cil_tmp146"} {:si_old_unique_call 3670} boogie_si_record_i32($i139);
    goto corral_source_split_7201;

  corral_source_split_7201:
    assume {:verifier.code 0} true;
    $i140 := $or.i32($i139, $i129);
    call {:si_unique_call 8813} {:cexpr "__cil_tmp147"} {:si_old_unique_call 3671} boogie_si_record_i32($i140);
    goto corral_source_split_7202;

  corral_source_split_7202:
    assume {:verifier.code 0} true;
    $i141 := $or.i32($i140, $i119);
    call {:si_unique_call 8814} {:cexpr "__cil_tmp148"} {:si_old_unique_call 3672} boogie_si_record_i32($i141);
    goto corral_source_split_7203;

  corral_source_split_7203:
    assume {:verifier.code 0} true;
    $i142 := $or.i32($i141, 255);
    call {:si_unique_call 8815} {:cexpr "__cil_tmp149"} {:si_old_unique_call 3673} boogie_si_record_i32($i142);
    goto corral_source_split_7204;

  corral_source_split_7204:
    assume {:verifier.code 0} true;
    $i143 := $p2i.ref.i64($p0);
    call {:si_unique_call 8816} {:cexpr "__cil_tmp151"} {:si_old_unique_call 3674} boogie_si_record_i64($i143);
    goto corral_source_split_7205;

  corral_source_split_7205:
    assume {:verifier.code 0} true;
    $i144 := $add.i64($i143, 712);
    call {:si_unique_call 8817} {:cexpr "__cil_tmp152"} {:si_old_unique_call 3675} boogie_si_record_i64($i144);
    goto corral_source_split_7206;

  corral_source_split_7206:
    assume {:verifier.code 0} true;
    $p145 := $i2p.i64.ref($i144);
    goto corral_source_split_7207;

  corral_source_split_7207:
    assume {:verifier.code 0} true;
    havoc $p146;
    goto corral_source_split_7208;

  corral_source_split_7208:
    assume {:verifier.code 0} true;
    $i147 := $zext.i32.i64($i109);
    goto corral_source_split_7209;

  corral_source_split_7209:
    assume {:verifier.code 0} true;
    $p148 := $add.ref($p146, $mul.ref($i147, 2));
    goto corral_source_split_7210;

  corral_source_split_7210:
    assume {:verifier.code 0} true;
    havoc $i149;
    call {:si_unique_call 8818} {:cexpr "__cil_tmp155"} {:si_old_unique_call 3676} boogie_si_record_i16($i149);
    goto corral_source_split_7211;

  corral_source_split_7211:
    assume {:verifier.code 0} true;
    $i150 := $zext.i16.i32($i149);
    call {:si_unique_call 8819} {:cexpr "__cil_tmp156"} {:si_old_unique_call 3677} boogie_si_record_i32($i150);
    goto corral_source_split_7212;

  corral_source_split_7212:
    assume {:verifier.code 0} true;
    $i151 := $and.i32($i150, 255);
    call {:si_unique_call 8820} {:cexpr "__cil_tmp157"} {:si_old_unique_call 3678} boogie_si_record_i32($i151);
    goto corral_source_split_7213;

  corral_source_split_7213:
    assume {:verifier.code 0} true;
    $i152 := $shl.i32($i151, 8);
    call {:si_unique_call 8821} {:cexpr "__cil_tmp158"} {:si_old_unique_call 3679} boogie_si_record_i32($i152);
    goto corral_source_split_7214;

  corral_source_split_7214:
    assume {:verifier.code 0} true;
    $i153 := $p2i.ref.i64($p0);
    call {:si_unique_call 8822} {:cexpr "__cil_tmp160"} {:si_old_unique_call 3680} boogie_si_record_i64($i153);
    goto corral_source_split_7215;

  corral_source_split_7215:
    assume {:verifier.code 0} true;
    $i154 := $add.i64($i153, 704);
    call {:si_unique_call 8823} {:cexpr "__cil_tmp161"} {:si_old_unique_call 3681} boogie_si_record_i64($i154);
    goto corral_source_split_7216;

  corral_source_split_7216:
    assume {:verifier.code 0} true;
    $p155 := $i2p.i64.ref($i154);
    goto corral_source_split_7217;

  corral_source_split_7217:
    assume {:verifier.code 0} true;
    havoc $p156;
    goto corral_source_split_7218;

  corral_source_split_7218:
    assume {:verifier.code 0} true;
    $i157 := $zext.i32.i64($i109);
    goto corral_source_split_7219;

  corral_source_split_7219:
    assume {:verifier.code 0} true;
    $p158 := $add.ref($p156, $mul.ref($i157, 2));
    goto corral_source_split_7220;

  corral_source_split_7220:
    assume {:verifier.code 0} true;
    havoc $i159;
    call {:si_unique_call 8824} {:cexpr "__cil_tmp164"} {:si_old_unique_call 3682} boogie_si_record_i16($i159);
    goto corral_source_split_7221;

  corral_source_split_7221:
    assume {:verifier.code 0} true;
    $i160 := $zext.i16.i32($i159);
    call {:si_unique_call 8825} {:cexpr "__cil_tmp165"} {:si_old_unique_call 3683} boogie_si_record_i32($i160);
    goto corral_source_split_7222;

  corral_source_split_7222:
    assume {:verifier.code 0} true;
    $i161 := $and.i32($i160, 255);
    call {:si_unique_call 8826} {:cexpr "__cil_tmp166"} {:si_old_unique_call 3684} boogie_si_record_i32($i161);
    goto corral_source_split_7223;

  corral_source_split_7223:
    assume {:verifier.code 0} true;
    $i162 := $shl.i32($i161, 16);
    call {:si_unique_call 8827} {:cexpr "__cil_tmp167"} {:si_old_unique_call 3685} boogie_si_record_i32($i162);
    goto corral_source_split_7224;

  corral_source_split_7224:
    assume {:verifier.code 0} true;
    $i163 := $p2i.ref.i64($p0);
    call {:si_unique_call 8828} {:cexpr "__cil_tmp169"} {:si_old_unique_call 3686} boogie_si_record_i64($i163);
    goto corral_source_split_7225;

  corral_source_split_7225:
    assume {:verifier.code 0} true;
    $i164 := $add.i64($i163, 696);
    call {:si_unique_call 8829} {:cexpr "__cil_tmp170"} {:si_old_unique_call 3687} boogie_si_record_i64($i164);
    goto corral_source_split_7226;

  corral_source_split_7226:
    assume {:verifier.code 0} true;
    $p165 := $i2p.i64.ref($i164);
    goto corral_source_split_7227;

  corral_source_split_7227:
    assume {:verifier.code 0} true;
    havoc $p166;
    goto corral_source_split_7228;

  corral_source_split_7228:
    assume {:verifier.code 0} true;
    $i167 := $zext.i32.i64($i109);
    goto corral_source_split_7229;

  corral_source_split_7229:
    assume {:verifier.code 0} true;
    $p168 := $add.ref($p166, $mul.ref($i167, 2));
    goto corral_source_split_7230;

  corral_source_split_7230:
    assume {:verifier.code 0} true;
    havoc $i169;
    call {:si_unique_call 8830} {:cexpr "__cil_tmp173"} {:si_old_unique_call 3688} boogie_si_record_i16($i169);
    goto corral_source_split_7231;

  corral_source_split_7231:
    assume {:verifier.code 0} true;
    $i170 := $zext.i16.i32($i169);
    call {:si_unique_call 8831} {:cexpr "__cil_tmp174"} {:si_old_unique_call 3689} boogie_si_record_i32($i170);
    goto corral_source_split_7232;

  corral_source_split_7232:
    assume {:verifier.code 0} true;
    $i171 := $and.i32($i170, 255);
    call {:si_unique_call 8832} {:cexpr "__cil_tmp175"} {:si_old_unique_call 3690} boogie_si_record_i32($i171);
    goto corral_source_split_7233;

  corral_source_split_7233:
    assume {:verifier.code 0} true;
    $i172 := $shl.i32($i171, 24);
    call {:si_unique_call 8833} {:cexpr "__cil_tmp176"} {:si_old_unique_call 3691} boogie_si_record_i32($i172);
    goto corral_source_split_7234;

  corral_source_split_7234:
    assume {:verifier.code 0} true;
    $i173 := $or.i32($i172, $i162);
    call {:si_unique_call 8834} {:cexpr "__cil_tmp177"} {:si_old_unique_call 3692} boogie_si_record_i32($i173);
    goto corral_source_split_7235;

  corral_source_split_7235:
    assume {:verifier.code 0} true;
    $i174 := $or.i32($i173, $i152);
    call {:si_unique_call 8835} {:cexpr "__cil_tmp178"} {:si_old_unique_call 3693} boogie_si_record_i32($i174);
    goto corral_source_split_7236;

  corral_source_split_7236:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8836} {:si_old_unique_call 3694} wait_for_fifo(2, $p6);
    goto corral_source_split_7237;

  corral_source_split_7237:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8837} {:si_old_unique_call 3695} aty_st_le32(96, $i174, $p6);
    goto corral_source_split_7238;

  corral_source_split_7238:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8838} {:si_old_unique_call 3696} aty_st_le32(100, $i142, $p6);
    goto corral_source_split_7239;

  corral_source_split_7239:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb8:
    assume $i26 == 1;
    goto corral_source_split_7075;

  corral_source_split_7075:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p0);
    call {:si_unique_call 8839} {:cexpr "__cil_tmp50"} {:si_old_unique_call 3590} boogie_si_record_i64($i27);
    goto corral_source_split_7076;

  corral_source_split_7076:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 176);
    call {:si_unique_call 8840} {:cexpr "__cil_tmp51"} {:si_old_unique_call 3591} boogie_si_record_i64($i28);
    goto corral_source_split_7077;

  corral_source_split_7077:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_7078;

  corral_source_split_7078:
    assume {:verifier.code 0} true;
    havoc $i30;
    call {:si_unique_call 8841} {:cexpr "__cil_tmp52"} {:si_old_unique_call 3592} boogie_si_record_i32($i30);
    goto corral_source_split_7079;

  corral_source_split_7079:
    assume {:verifier.code 0} true;
    $i31 := $p2i.ref.i64($p1);
    call {:si_unique_call 8842} {:cexpr "__cil_tmp53"} {:si_old_unique_call 3593} boogie_si_record_i64($i31);
    goto corral_source_split_7080;

  corral_source_split_7080:
    assume {:verifier.code 0} true;
    $i32 := $add.i64($i31, 16);
    call {:si_unique_call 8843} {:cexpr "__cil_tmp54"} {:si_old_unique_call 3594} boogie_si_record_i64($i32);
    goto corral_source_split_7081;

  corral_source_split_7081:
    assume {:verifier.code 0} true;
    $p33 := $i2p.i64.ref($i32);
    goto corral_source_split_7082;

  corral_source_split_7082:
    assume {:verifier.code 0} true;
    havoc $i34;
    call {:si_unique_call 8844} {:cexpr "__cil_tmp55"} {:si_old_unique_call 3595} boogie_si_record_i16($i34);
    goto corral_source_split_7083;

  corral_source_split_7083:
    assume {:verifier.code 0} true;
    $i35 := $zext.i16.i32($i34);
    call {:si_unique_call 8845} {:cexpr "__cil_tmp56"} {:si_old_unique_call 3596} boogie_si_record_i32($i35);
    goto corral_source_split_7084;

  corral_source_split_7084:
    assume {:verifier.code 0} true;
    $i36 := $p2i.ref.i64($p1);
    call {:si_unique_call 8846} {:cexpr "__cil_tmp57"} {:si_old_unique_call 3597} boogie_si_record_i64($i36);
    goto corral_source_split_7085;

  corral_source_split_7085:
    assume {:verifier.code 0} true;
    $i37 := $add.i64($i36, 24);
    call {:si_unique_call 8847} {:cexpr "__cil_tmp58"} {:si_old_unique_call 3598} boogie_si_record_i64($i37);
    goto corral_source_split_7086;

  corral_source_split_7086:
    assume {:verifier.code 0} true;
    $p38 := $i2p.i64.ref($i37);
    goto corral_source_split_7087;

  corral_source_split_7087:
    assume {:verifier.code 0} true;
    havoc $i39;
    call {:si_unique_call 8848} {:cexpr "__cil_tmp59"} {:si_old_unique_call 3599} boogie_si_record_i32($i39);
    goto corral_source_split_7088;

  corral_source_split_7088:
    assume {:verifier.code 0} true;
    $i40 := $sub.i32($i39, $i35);
    call {:si_unique_call 8849} {:cexpr "__cil_tmp60"} {:si_old_unique_call 3600} boogie_si_record_i32($i40);
    goto corral_source_split_7089;

  corral_source_split_7089:
    assume {:verifier.code 0} true;
    $i41 := $sub.i32($i40, $i30);
    call {:si_unique_call 8850} {:cexpr "__cil_tmp61"} {:si_old_unique_call 3601} boogie_si_record_i32($i41);
    goto corral_source_split_7090;

  corral_source_split_7090:
    assume {:verifier.code 0} true;
    $i42 := $slt.i32($i41, 0);
    goto corral_source_split_7091;

  corral_source_split_7091:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i42 == 1);
    assume {:verifier.code 0} true;
    $i45, $i46 := $i41, 0;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7097;

  corral_source_split_7097:
    assume {:verifier.code 0} true;
    $i47 := $p2i.ref.i64($p0);
    call {:si_unique_call 8851} {:cexpr "__cil_tmp64"} {:si_old_unique_call 3604} boogie_si_record_i64($i47);
    goto corral_source_split_7098;

  corral_source_split_7098:
    assume {:verifier.code 0} true;
    $i48 := $add.i64($i47, 180);
    call {:si_unique_call 8852} {:cexpr "__cil_tmp65"} {:si_old_unique_call 3605} boogie_si_record_i64($i48);
    goto corral_source_split_7099;

  corral_source_split_7099:
    assume {:verifier.code 0} true;
    $p49 := $i2p.i64.ref($i48);
    goto corral_source_split_7100;

  corral_source_split_7100:
    assume {:verifier.code 0} true;
    havoc $i50;
    call {:si_unique_call 8853} {:cexpr "__cil_tmp66"} {:si_old_unique_call 3606} boogie_si_record_i32($i50);
    goto corral_source_split_7101;

  corral_source_split_7101:
    assume {:verifier.code 0} true;
    $i51 := $p2i.ref.i64($p1);
    call {:si_unique_call 8854} {:cexpr "__cil_tmp68"} {:si_old_unique_call 3607} boogie_si_record_i64($i51);
    goto corral_source_split_7102;

  corral_source_split_7102:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 18);
    call {:si_unique_call 8855} {:cexpr "__cil_tmp69"} {:si_old_unique_call 3608} boogie_si_record_i64($i52);
    goto corral_source_split_7103;

  corral_source_split_7103:
    assume {:verifier.code 0} true;
    $p53 := $i2p.i64.ref($i52);
    goto corral_source_split_7104;

  corral_source_split_7104:
    assume {:verifier.code 0} true;
    havoc $i54;
    call {:si_unique_call 8856} {:cexpr "__cil_tmp70"} {:si_old_unique_call 3609} boogie_si_record_i16($i54);
    goto corral_source_split_7105;

  corral_source_split_7105:
    assume {:verifier.code 0} true;
    $i55 := $zext.i16.i32($i54);
    call {:si_unique_call 8857} {:cexpr "__cil_tmp71"} {:si_old_unique_call 3610} boogie_si_record_i32($i55);
    goto corral_source_split_7106;

  corral_source_split_7106:
    assume {:verifier.code 0} true;
    $i56 := $p2i.ref.i64($p1);
    call {:si_unique_call 8858} {:cexpr "__cil_tmp73"} {:si_old_unique_call 3611} boogie_si_record_i64($i56);
    goto corral_source_split_7107;

  corral_source_split_7107:
    assume {:verifier.code 0} true;
    $i57 := $add.i64($i56, 28);
    call {:si_unique_call 8859} {:cexpr "__cil_tmp74"} {:si_old_unique_call 3612} boogie_si_record_i64($i57);
    goto corral_source_split_7108;

  corral_source_split_7108:
    assume {:verifier.code 0} true;
    $p58 := $i2p.i64.ref($i57);
    goto corral_source_split_7109;

  corral_source_split_7109:
    assume {:verifier.code 0} true;
    havoc $i59;
    call {:si_unique_call 8860} {:cexpr "__cil_tmp75"} {:si_old_unique_call 3613} boogie_si_record_i32($i59);
    goto corral_source_split_7110;

  corral_source_split_7110:
    assume {:verifier.code 0} true;
    $i60 := $sub.i32($i59, $i55);
    call {:si_unique_call 8861} {:cexpr "__cil_tmp76"} {:si_old_unique_call 3614} boogie_si_record_i32($i60);
    goto corral_source_split_7111;

  corral_source_split_7111:
    assume {:verifier.code 0} true;
    $i61 := $sub.i32($i60, $i50);
    call {:si_unique_call 8862} {:cexpr "__cil_tmp77"} {:si_old_unique_call 3615} boogie_si_record_i32($i61);
    goto corral_source_split_7112;

  corral_source_split_7112:
    assume {:verifier.code 0} true;
    $i62 := $slt.i32($i61, 0);
    goto corral_source_split_7113;

  corral_source_split_7113:
    assume {:verifier.code 0} true;
    assume {:branchcond $i62} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i62 == 1);
    assume {:verifier.code 0} true;
    $i65, $i66 := $i61, 0;
    goto $bb15;

  $bb15:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7119;

  corral_source_split_7119:
    assume {:verifier.code 0} true;
    $i67 := $p2i.ref.i64($p1);
    call {:si_unique_call 8863} {:cexpr "__cil_tmp80"} {:si_old_unique_call 3618} boogie_si_record_i64($i67);
    goto corral_source_split_7120;

  corral_source_split_7120:
    assume {:verifier.code 0} true;
    $i68 := $add.i64($i67, 36);
    call {:si_unique_call 8864} {:cexpr "__cil_tmp81"} {:si_old_unique_call 3619} boogie_si_record_i64($i68);
    goto corral_source_split_7121;

  corral_source_split_7121:
    assume {:verifier.code 0} true;
    $p69 := $i2p.i64.ref($i68);
    goto corral_source_split_7122;

  corral_source_split_7122:
    assume {:verifier.code 0} true;
    havoc $i70;
    call {:si_unique_call 8865} {:cexpr "__cil_tmp82"} {:si_old_unique_call 3620} boogie_si_record_i32($i70);
    goto corral_source_split_7123;

  corral_source_split_7123:
    assume {:verifier.code 0} true;
    $i71 := $p2i.ref.i64($p6);
    call {:si_unique_call 8866} {:cexpr "__cil_tmp84"} {:si_old_unique_call 3621} boogie_si_record_i64($i71);
    goto corral_source_split_7124;

  corral_source_split_7124:
    assume {:verifier.code 0} true;
    $i72 := $add.i64($i71, 908);
    call {:si_unique_call 8867} {:cexpr "__cil_tmp85"} {:si_old_unique_call 3622} boogie_si_record_i64($i72);
    goto corral_source_split_7125;

  corral_source_split_7125:
    assume {:verifier.code 0} true;
    $p73 := $i2p.i64.ref($i72);
    goto corral_source_split_7126;

  corral_source_split_7126:
    assume {:verifier.code 0} true;
    havoc $i74;
    call {:si_unique_call 8868} {:cexpr "__cil_tmp86"} {:si_old_unique_call 3623} boogie_si_record_i32($i74);
    goto corral_source_split_7127;

  corral_source_split_7127:
    assume {:verifier.code 0} true;
    $i75 := $and.i32($i74, 1);
    goto corral_source_split_7128;

  corral_source_split_7128:
    assume {:verifier.code 0} true;
    $i76 := $ne.i32($i75, 0);
    goto corral_source_split_7129;

  corral_source_split_7129:
    assume {:verifier.code 0} true;
    assume {:branchcond $i76} true;
    goto $bb16, $bb17;

  $bb17:
    assume !($i76 == 1);
    assume {:verifier.code 0} true;
    $i79, $i80 := $i70, $i65;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7135;

  corral_source_split_7135:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8869} {:si_old_unique_call 3626} wait_for_fifo(3, $p6);
    goto corral_source_split_7136;

  corral_source_split_7136:
    assume {:verifier.code 0} true;
    $i81 := $zext.i16.i32($i66);
    call {:si_unique_call 8870} {:cexpr "__cil_tmp89"} {:si_old_unique_call 3627} boogie_si_record_i32($i81);
    goto corral_source_split_7137;

  corral_source_split_7137:
    assume {:verifier.code 0} true;
    $i82 := $shl.i32($i81, 1);
    call {:si_unique_call 8871} {:cexpr "__cil_tmp90"} {:si_old_unique_call 3628} boogie_si_record_i32($i82);
    goto corral_source_split_7138;

  corral_source_split_7138:
    assume {:verifier.code 0} true;
    $i83 := $p2i.ref.i64($p0);
    call {:si_unique_call 8872} {:cexpr "__cil_tmp93"} {:si_old_unique_call 3629} boogie_si_record_i64($i83);
    goto corral_source_split_7139;

  corral_source_split_7139:
    assume {:verifier.code 0} true;
    $i84 := $add.i64($i83, 344);
    call {:si_unique_call 8873} {:cexpr "__cil_tmp94"} {:si_old_unique_call 3630} boogie_si_record_i64($i84);
    goto corral_source_split_7140;

  corral_source_split_7140:
    assume {:verifier.code 0} true;
    $p85 := $i2p.i64.ref($i84);
    goto corral_source_split_7141;

  corral_source_split_7141:
    assume {:verifier.code 0} true;
    havoc $i86;
    call {:si_unique_call 8874} {:cexpr "__cil_tmp95"} {:si_old_unique_call 3631} boogie_si_record_i32($i86);
    goto corral_source_split_7142;

  corral_source_split_7142:
    assume {:verifier.code 0} true;
    $i87 := $lshr.i32($i86, 3);
    call {:si_unique_call 8875} {:cexpr "__cil_tmp96"} {:si_old_unique_call 3632} boogie_si_record_i32($i87);
    goto corral_source_split_7143;

  corral_source_split_7143:
    assume {:verifier.code 0} true;
    $i88 := $add.i32($i87, $i82);
    call {:si_unique_call 8876} {:cexpr "__cil_tmp97"} {:si_old_unique_call 3633} boogie_si_record_i32($i88);
    goto corral_source_split_7144;

  corral_source_split_7144:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8877} {:si_old_unique_call 3634} aty_st_le32(104, $i88, $p6);
    goto corral_source_split_7145;

  corral_source_split_7145:
    assume {:verifier.code 0} true;
    $i89 := $zext.i16.i32($i46);
    call {:si_unique_call 8878} {:cexpr "__cil_tmp99"} {:si_old_unique_call 3635} boogie_si_record_i32($i89);
    goto corral_source_split_7146;

  corral_source_split_7146:
    assume {:verifier.code 0} true;
    $i90 := $zext.i16.i32($i66);
    call {:si_unique_call 8879} {:cexpr "__cil_tmp100"} {:si_old_unique_call 3636} boogie_si_record_i32($i90);
    goto corral_source_split_7147;

  corral_source_split_7147:
    assume {:verifier.code 0} true;
    $i91 := $sub.i32(64, $i79);
    call {:si_unique_call 8880} {:cexpr "__cil_tmp101"} {:si_old_unique_call 3637} boogie_si_record_i32($i91);
    goto corral_source_split_7148;

  corral_source_split_7148:
    assume {:verifier.code 0} true;
    $i92 := $add.i32($i91, $i90);
    call {:si_unique_call 8881} {:cexpr "__cil_tmp102"} {:si_old_unique_call 3638} boogie_si_record_i32($i92);
    goto corral_source_split_7149;

  corral_source_split_7149:
    assume {:verifier.code 0} true;
    $i93 := $shl.i32($i92, 16);
    call {:si_unique_call 8882} {:cexpr "__cil_tmp104"} {:si_old_unique_call 3639} boogie_si_record_i32($i93);
    goto corral_source_split_7150;

  corral_source_split_7150:
    assume {:verifier.code 0} true;
    $i94 := $or.i32($i93, $i89);
    call {:si_unique_call 8883} {:cexpr "__cil_tmp105"} {:si_old_unique_call 3640} boogie_si_record_i32($i94);
    goto corral_source_split_7151;

  corral_source_split_7151:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8884} {:si_old_unique_call 3641} aty_st_le32(112, $i94, $p6);
    goto corral_source_split_7152;

  corral_source_split_7152:
    assume {:verifier.code 0} true;
    $i95 := $shl.i32($i80, 16);
    call {:si_unique_call 8885} {:cexpr "__cil_tmp109"} {:si_old_unique_call 3642} boogie_si_record_i32($i95);
    goto corral_source_split_7153;

  corral_source_split_7153:
    assume {:verifier.code 0} true;
    $i96 := $or.i32($i95, $i45);
    call {:si_unique_call 8886} {:cexpr "__cil_tmp110"} {:si_old_unique_call 3643} boogie_si_record_i32($i96);
    goto corral_source_split_7154;

  corral_source_split_7154:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8887} {:si_old_unique_call 3644} aty_st_le32(108, $i96, $p6);
    goto corral_source_split_7155;

  corral_source_split_7155:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb16:
    assume $i76 == 1;
    goto corral_source_split_7131;

  corral_source_split_7131:
    assume {:verifier.code 0} true;
    $i77 := $shl.i32($i65, 1);
    call {:si_unique_call 8888} {:cexpr "y"} {:si_old_unique_call 3624} boogie_si_record_i32($i77);
    goto corral_source_split_7132;

  corral_source_split_7132:
    assume {:verifier.code 0} true;
    $i78 := $shl.i32($i70, 1);
    call {:si_unique_call 8889} {:cexpr "h"} {:si_old_unique_call 3625} boogie_si_record_i32($i78);
    goto corral_source_split_7133;

  corral_source_split_7133:
    assume {:verifier.code 0} true;
    $i79, $i80 := $i78, $i77;
    goto $bb18;

  $bb13:
    assume $i62 == 1;
    goto corral_source_split_7115;

  corral_source_split_7115:
    assume {:verifier.code 0} true;
    $i63 := $sub.i32(0, $i61);
    call {:si_unique_call 8890} {:cexpr "__cil_tmp78"} {:si_old_unique_call 3616} boogie_si_record_i32($i63);
    goto corral_source_split_7116;

  corral_source_split_7116:
    assume {:verifier.code 0} true;
    $i64 := $trunc.i32.i16($i63);
    call {:si_unique_call 8891} {:cexpr "yoff"} {:si_old_unique_call 3617} boogie_si_record_i16($i64);
    goto corral_source_split_7117;

  corral_source_split_7117:
    assume {:verifier.code 0} true;
    $i65, $i66 := 0, $i64;
    goto $bb15;

  $bb10:
    assume $i42 == 1;
    goto corral_source_split_7093;

  corral_source_split_7093:
    assume {:verifier.code 0} true;
    $i43 := $sub.i32(0, $i41);
    call {:si_unique_call 8892} {:cexpr "__cil_tmp62"} {:si_old_unique_call 3602} boogie_si_record_i32($i43);
    goto corral_source_split_7094;

  corral_source_split_7094:
    assume {:verifier.code 0} true;
    $i44 := $trunc.i32.i16($i43);
    call {:si_unique_call 8893} {:cexpr "xoff"} {:si_old_unique_call 3603} boogie_si_record_i16($i44);
    goto corral_source_split_7095;

  corral_source_split_7095:
    assume {:verifier.code 0} true;
    $i45, $i46 := 0, $i44;
    goto $bb12;

  $bb5:
    assume $i17 == 1;
    goto corral_source_split_7060;

  corral_source_split_7060:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8894} {:si_old_unique_call 3580} $i18 := aty_ld_le32(208, $p6);
    call {:si_unique_call 8895} {:cexpr "tmp___7"} {:si_old_unique_call 3581} boogie_si_record_i32($i18);
    goto corral_source_split_7061;

  corral_source_split_7061:
    assume {:verifier.code 0} true;
    $i19 := $or.i32($i18, 128);
    call {:si_unique_call 8896} {:cexpr "__cil_tmp42"} {:si_old_unique_call 3582} boogie_si_record_i32($i19);
    goto corral_source_split_7062;

  corral_source_split_7062:
    assume {:verifier.code 0} true;
    call {:si_unique_call 8897} {:si_old_unique_call 3583} aty_st_le32(208, $i19, $p6);
    goto corral_source_split_7063;

  corral_source_split_7063:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb1:
    assume $i11 == 1;
    goto corral_source_split_7049;

  corral_source_split_7049:
    assume {:verifier.code 0} true;
    $i12 := $sub.i32(0, 1);
    goto $bb3;
}



implementation {:LB_Mapping "correct_chipset_loop_$bb1"} {:entrypoint} correct_chipset_EntryCopy_correct_chipset_loop_$bb1($p0: ref) returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i16;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $i7: i32;
  var $i22: i1;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $i39: i64;
  var $i40: i64;
  var $i41: i64;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $i48: i64;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $i57: i64;
  var $i58: i64;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $i66: i64;
  var $i67: i64;
  var $i68: i64;
  var $i69: i64;
  var $i70: i64;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $p74: ref;
  var $i75: i32;
  var $i76: i32;
  var $i77: i16;
  var $i78: i32;
  var $i79: i32;
  var $i80: i8;
  var $i81: i64;
  var $i82: i64;
  var $p83: ref;
  var $i84: i16;
  var $i85: i32;
  var $i86: i1;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i1;
  var $i93: i32;
  var $i94: i1;
  var $i96: i32;
  var $i97: i1;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $i101: i32;
  var $i102: i1;
  var $i103: i32;
  var $i104: i1;
  var $i105: i32;
  var $i106: i32;
  var $i107: i1;
  var $i108: i32;
  var $i109: i1;
  var $i110: i64;
  var $i111: i64;
  var $p112: ref;
  var $i113: i64;
  var $i114: i64;
  var $p115: ref;
  var $i116: i64;
  var $i117: i64;
  var $p118: ref;
  var $i119: i64;
  var $i120: i64;
  var $p121: ref;
  var $i122: i64;
  var $i123: i64;
  var $p124: ref;
  var $i126: i64;
  var $i127: i64;
  var $p128: ref;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i64;
  var $i133: i64;
  var $p134: ref;
  var $i135: i64;
  var $i136: i64;
  var $p137: ref;
  var $i138: i64;
  var $i139: i64;
  var $p140: ref;
  var $p125: ref;
  var $i142: i64;
  var $i143: i64;
  var $p144: ref;
  var $i145: i64;
  var $i146: i64;
  var $p147: ref;
  var $i148: i64;
  var $i149: i64;
  var $p150: ref;
  var $i151: i64;
  var $i152: i64;
  var $p153: ref;
  var $i154: i64;
  var $i155: i64;
  var $p156: ref;
  var $i157: i64;
  var $i158: i64;
  var $p159: ref;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i64;
  var $i164: i64;
  var $p165: ref;
  var $i166: i64;
  var $i167: i64;
  var $p168: ref;
  var $i169: i64;
  var $i170: i64;
  var $p171: ref;
  var $p141: ref;
  var $i172: i32;
  var $i173: i32;
  var $i174: i1;
  var $i175: i32;
  var $i176: i1;
  var $i177: i64;
  var $i178: i64;
  var $p179: ref;
  var $i180: i64;
  var $i181: i64;
  var $p182: ref;
  var $i183: i64;
  var $i184: i64;
  var $p185: ref;
  var $i186: i64;
  var $i187: i64;
  var $p188: ref;
  var $i189: i64;
  var $i190: i64;
  var $p191: ref;
  var $i193: i64;
  var $i194: i64;
  var $p195: ref;
  var $i196: i64;
  var $i197: i64;
  var $p198: ref;
  var $i199: i64;
  var $i200: i64;
  var $p201: ref;
  var $i202: i64;
  var $i203: i64;
  var $p204: ref;
  var $i205: i64;
  var $i206: i64;
  var $p207: ref;
  var $p192: ref;
  var $p95: ref;
  var $i208: i32;
  var $i209: i32;
  var $i210: i32;
  var $i23: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7897;

  corral_source_split_7897:
    assume {:verifier.code 0} true;
    $i1 := $add.i64(35, 0);
    call {:si_unique_call 9177} {:cexpr "__cil_tmp8"} {:si_old_unique_call 4037} boogie_si_record_i64($i1);
    goto corral_source_split_7898;

  corral_source_split_7898:
    assume {:verifier.code 0} true;
    $i2 := $sub.i64($i1, 1);
    call {:si_unique_call 9178} {:cexpr "__cil_tmp9"} {:si_old_unique_call 4038} boogie_si_record_i64($i2);
    goto corral_source_split_7899;

  corral_source_split_7899:
    assume {:verifier.code 0} true;
    $i3 := $trunc.i64.i32($i2);
    call {:si_unique_call 9179} {:cexpr "i"} {:si_old_unique_call 4039} boogie_si_record_i32($i3);
    goto corral_source_split_7900;

  corral_source_split_7900:
    assume {:verifier.code 0} true;
    $i4 := $i3;
    goto $bb1;

  $bb1:
    call {:si_unique_call 9180} $i4, $i5, $i6, $i8, $i9, $i10, $p11, $i12, $i13, $i14, $i15, $p16, $i17, $i18, $i19, $i20, $i21 := correct_chipset_loop_$bb1($p0, $i4, $i5, $i6, $i8, $i9, $i10, $p11, $i12, $i13, $i14, $i15, $p16, $i17, $i18, $i19, $i20, $i21);
    LoopBound_AssertVar := false;
    goto $bb1_last;

  $bb1_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_7902;

  corral_source_split_7902:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    $i5 := $sge.i32($i4, 0);
    goto corral_source_split_7904;

  corral_source_split_7904:
    assume {:verifier.code 0} true;
    $i6 := $i4;
    assume {:branchcond $i5} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i5 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_7908;

  corral_source_split_7908:
    assume {:verifier.code 0} true;
    $i7 := $i6;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_7923;

  corral_source_split_7923:
    assume {:verifier.code 0} true;
    $i22 := $slt.i32($i7, 0);
    goto corral_source_split_7924;

  corral_source_split_7924:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    $i24 := $sext.i32.i64($i7);
    goto corral_source_split_7934;

  corral_source_split_7934:
    assume {:verifier.code 0} true;
    $i25 := $mul.i64($i24, 40);
    call {:si_unique_call 9181} {:cexpr "__cil_tmp18"} {:si_old_unique_call 4049} boogie_si_record_i64($i25);
    goto corral_source_split_7935;

  corral_source_split_7935:
    assume {:verifier.code 0} true;
    $i26 := $add.i64($i25, 8);
    call {:si_unique_call 9182} {:cexpr "__cil_tmp19"} {:si_old_unique_call 4050} boogie_si_record_i64($i26);
    goto corral_source_split_7936;

  corral_source_split_7936:
    assume {:verifier.code 0} true;
    $i27 := $add.i64($p2i.ref.i64(aty_chips), $i26);
    call {:si_unique_call 9183} {:cexpr "__cil_tmp20"} {:si_old_unique_call 4051} boogie_si_record_i64($i27);
    goto corral_source_split_7937;

  corral_source_split_7937:
    assume {:verifier.code 0} true;
    $p28 := $i2p.i64.ref($i27);
    goto corral_source_split_7938;

  corral_source_split_7938:
    assume {:verifier.code 0} true;
    havoc $p29;
    goto corral_source_split_7939;

  corral_source_split_7939:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p0);
    call {:si_unique_call 9184} {:cexpr "__cil_tmp21"} {:si_old_unique_call 4052} boogie_si_record_i64($i30);
    goto corral_source_split_7940;

  corral_source_split_7940:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 1008);
    call {:si_unique_call 9185} {:cexpr "__cil_tmp22"} {:si_old_unique_call 4053} boogie_si_record_i64($i31);
    goto corral_source_split_7941;

  corral_source_split_7941:
    assume {:verifier.code 0} true;
    $i32 := $sext.i32.i64($i7);
    goto corral_source_split_7942;

  corral_source_split_7942:
    assume {:verifier.code 0} true;
    $i33 := $mul.i64($i32, 40);
    call {:si_unique_call 9186} {:cexpr "__cil_tmp23"} {:si_old_unique_call 4054} boogie_si_record_i64($i33);
    goto corral_source_split_7943;

  corral_source_split_7943:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 16);
    call {:si_unique_call 9187} {:cexpr "__cil_tmp24"} {:si_old_unique_call 4055} boogie_si_record_i64($i34);
    goto corral_source_split_7944;

  corral_source_split_7944:
    assume {:verifier.code 0} true;
    $i35 := $add.i64($p2i.ref.i64(aty_chips), $i34);
    call {:si_unique_call 9188} {:cexpr "__cil_tmp25"} {:si_old_unique_call 4056} boogie_si_record_i64($i35);
    goto corral_source_split_7945;

  corral_source_split_7945:
    assume {:verifier.code 0} true;
    $p36 := $i2p.i64.ref($i35);
    goto corral_source_split_7946;

  corral_source_split_7946:
    assume {:verifier.code 0} true;
    havoc $i37;
    goto corral_source_split_7947;

  corral_source_split_7947:
    assume {:verifier.code 0} true;
    $p38 := $i2p.i64.ref($i31);
    goto corral_source_split_7948;

  corral_source_split_7948:
    assume {:verifier.code 0} true;
    goto corral_source_split_7949;

  corral_source_split_7949:
    assume {:verifier.code 0} true;
    $i39 := $p2i.ref.i64($p0);
    call {:si_unique_call 9189} {:cexpr "__cil_tmp27"} {:si_old_unique_call 4057} boogie_si_record_i64($i39);
    goto corral_source_split_7950;

  corral_source_split_7950:
    assume {:verifier.code 0} true;
    $i40 := $add.i64($i39, 1020);
    call {:si_unique_call 9190} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4058} boogie_si_record_i64($i40);
    goto corral_source_split_7951;

  corral_source_split_7951:
    assume {:verifier.code 0} true;
    $i41 := $sext.i32.i64($i7);
    goto corral_source_split_7952;

  corral_source_split_7952:
    assume {:verifier.code 0} true;
    $i42 := $mul.i64($i41, 40);
    call {:si_unique_call 9191} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4059} boogie_si_record_i64($i42);
    goto corral_source_split_7953;

  corral_source_split_7953:
    assume {:verifier.code 0} true;
    $i43 := $add.i64($i42, 20);
    call {:si_unique_call 9192} {:cexpr "__cil_tmp30"} {:si_old_unique_call 4060} boogie_si_record_i64($i43);
    goto corral_source_split_7954;

  corral_source_split_7954:
    assume {:verifier.code 0} true;
    $i44 := $add.i64($p2i.ref.i64(aty_chips), $i43);
    call {:si_unique_call 9193} {:cexpr "__cil_tmp31"} {:si_old_unique_call 4061} boogie_si_record_i64($i44);
    goto corral_source_split_7955;

  corral_source_split_7955:
    assume {:verifier.code 0} true;
    $p45 := $i2p.i64.ref($i44);
    goto corral_source_split_7956;

  corral_source_split_7956:
    assume {:verifier.code 0} true;
    havoc $i46;
    goto corral_source_split_7957;

  corral_source_split_7957:
    assume {:verifier.code 0} true;
    $p47 := $i2p.i64.ref($i40);
    goto corral_source_split_7958;

  corral_source_split_7958:
    assume {:verifier.code 0} true;
    goto corral_source_split_7959;

  corral_source_split_7959:
    assume {:verifier.code 0} true;
    $i48 := $p2i.ref.i64($p0);
    call {:si_unique_call 9194} {:cexpr "__cil_tmp33"} {:si_old_unique_call 4062} boogie_si_record_i64($i48);
    goto corral_source_split_7960;

  corral_source_split_7960:
    assume {:verifier.code 0} true;
    $i49 := $add.i64($i48, 1028);
    call {:si_unique_call 9195} {:cexpr "__cil_tmp34"} {:si_old_unique_call 4063} boogie_si_record_i64($i49);
    goto corral_source_split_7961;

  corral_source_split_7961:
    assume {:verifier.code 0} true;
    $i50 := $sext.i32.i64($i7);
    goto corral_source_split_7962;

  corral_source_split_7962:
    assume {:verifier.code 0} true;
    $i51 := $mul.i64($i50, 40);
    call {:si_unique_call 9196} {:cexpr "__cil_tmp35"} {:si_old_unique_call 4064} boogie_si_record_i64($i51);
    goto corral_source_split_7963;

  corral_source_split_7963:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 24);
    call {:si_unique_call 9197} {:cexpr "__cil_tmp36"} {:si_old_unique_call 4065} boogie_si_record_i64($i52);
    goto corral_source_split_7964;

  corral_source_split_7964:
    assume {:verifier.code 0} true;
    $i53 := $add.i64($p2i.ref.i64(aty_chips), $i52);
    call {:si_unique_call 9198} {:cexpr "__cil_tmp37"} {:si_old_unique_call 4066} boogie_si_record_i64($i53);
    goto corral_source_split_7965;

  corral_source_split_7965:
    assume {:verifier.code 0} true;
    $p54 := $i2p.i64.ref($i53);
    goto corral_source_split_7966;

  corral_source_split_7966:
    assume {:verifier.code 0} true;
    havoc $i55;
    goto corral_source_split_7967;

  corral_source_split_7967:
    assume {:verifier.code 0} true;
    $p56 := $i2p.i64.ref($i49);
    goto corral_source_split_7968;

  corral_source_split_7968:
    assume {:verifier.code 0} true;
    goto corral_source_split_7969;

  corral_source_split_7969:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p0);
    call {:si_unique_call 9199} {:cexpr "__cil_tmp39"} {:si_old_unique_call 4067} boogie_si_record_i64($i57);
    goto corral_source_split_7970;

  corral_source_split_7970:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 1040);
    call {:si_unique_call 9200} {:cexpr "__cil_tmp40"} {:si_old_unique_call 4068} boogie_si_record_i64($i58);
    goto corral_source_split_7971;

  corral_source_split_7971:
    assume {:verifier.code 0} true;
    $i59 := $sext.i32.i64($i7);
    goto corral_source_split_7972;

  corral_source_split_7972:
    assume {:verifier.code 0} true;
    $i60 := $mul.i64($i59, 40);
    call {:si_unique_call 9201} {:cexpr "__cil_tmp41"} {:si_old_unique_call 4069} boogie_si_record_i64($i60);
    goto corral_source_split_7973;

  corral_source_split_7973:
    assume {:verifier.code 0} true;
    $i61 := $add.i64($i60, 28);
    call {:si_unique_call 9202} {:cexpr "__cil_tmp42"} {:si_old_unique_call 4070} boogie_si_record_i64($i61);
    goto corral_source_split_7974;

  corral_source_split_7974:
    assume {:verifier.code 0} true;
    $i62 := $add.i64($p2i.ref.i64(aty_chips), $i61);
    call {:si_unique_call 9203} {:cexpr "__cil_tmp43"} {:si_old_unique_call 4071} boogie_si_record_i64($i62);
    goto corral_source_split_7975;

  corral_source_split_7975:
    assume {:verifier.code 0} true;
    $p63 := $i2p.i64.ref($i62);
    goto corral_source_split_7976;

  corral_source_split_7976:
    assume {:verifier.code 0} true;
    havoc $i64;
    goto corral_source_split_7977;

  corral_source_split_7977:
    assume {:verifier.code 0} true;
    $p65 := $i2p.i64.ref($i58);
    goto corral_source_split_7978;

  corral_source_split_7978:
    assume {:verifier.code 0} true;
    goto corral_source_split_7979;

  corral_source_split_7979:
    assume {:verifier.code 0} true;
    $i66 := $p2i.ref.i64($p0);
    call {:si_unique_call 9204} {:cexpr "__cil_tmp44"} {:si_old_unique_call 4072} boogie_si_record_i64($i66);
    goto corral_source_split_7980;

  corral_source_split_7980:
    assume {:verifier.code 0} true;
    $i67 := $add.i64($i66, 1044);
    call {:si_unique_call 9205} {:cexpr "__cil_tmp45"} {:si_old_unique_call 4073} boogie_si_record_i64($i67);
    goto corral_source_split_7981;

  corral_source_split_7981:
    assume {:verifier.code 0} true;
    $i68 := $sext.i32.i64($i7);
    goto corral_source_split_7982;

  corral_source_split_7982:
    assume {:verifier.code 0} true;
    $i69 := $mul.i64($i68, 40);
    call {:si_unique_call 9206} {:cexpr "__cil_tmp46"} {:si_old_unique_call 4074} boogie_si_record_i64($i69);
    goto corral_source_split_7983;

  corral_source_split_7983:
    assume {:verifier.code 0} true;
    $i70 := $add.i64($i69, 32);
    call {:si_unique_call 9207} {:cexpr "__cil_tmp47"} {:si_old_unique_call 4075} boogie_si_record_i64($i70);
    goto corral_source_split_7984;

  corral_source_split_7984:
    assume {:verifier.code 0} true;
    $i71 := $add.i64($p2i.ref.i64(aty_chips), $i70);
    call {:si_unique_call 9208} {:cexpr "__cil_tmp48"} {:si_old_unique_call 4076} boogie_si_record_i64($i71);
    goto corral_source_split_7985;

  corral_source_split_7985:
    assume {:verifier.code 0} true;
    $p72 := $i2p.i64.ref($i71);
    goto corral_source_split_7986;

  corral_source_split_7986:
    assume {:verifier.code 0} true;
    havoc $i73;
    goto corral_source_split_7987;

  corral_source_split_7987:
    assume {:verifier.code 0} true;
    $p74 := $i2p.i64.ref($i67);
    goto corral_source_split_7988;

  corral_source_split_7988:
    assume {:verifier.code 0} true;
    goto corral_source_split_7989;

  corral_source_split_7989:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9209} {:si_old_unique_call 4077} $i75 := aty_ld_le32(224, $p0);
    call {:si_unique_call 9210} {:cexpr "chip_id"} {:si_old_unique_call 4078} boogie_si_record_i32($i75);
    goto corral_source_split_7990;

  corral_source_split_7990:
    assume {:verifier.code 0} true;
    $i76 := $and.i32($i75, 65535);
    call {:si_unique_call 9211} {:cexpr "__cil_tmp50"} {:si_old_unique_call 4079} boogie_si_record_i32($i76);
    goto corral_source_split_7991;

  corral_source_split_7991:
    assume {:verifier.code 0} true;
    $i77 := $trunc.i32.i16($i76);
    call {:si_unique_call 9212} {:cexpr "type"} {:si_old_unique_call 4080} boogie_si_record_i16($i77);
    goto corral_source_split_7992;

  corral_source_split_7992:
    assume {:verifier.code 0} true;
    $i78 := $and.i32($i75, $sub.i32(0, 16777216));
    call {:si_unique_call 9213} {:cexpr "__cil_tmp51"} {:si_old_unique_call 4081} boogie_si_record_i32($i78);
    goto corral_source_split_7993;

  corral_source_split_7993:
    assume {:verifier.code 0} true;
    $i79 := $lshr.i32($i78, 24);
    call {:si_unique_call 9214} {:cexpr "__cil_tmp52"} {:si_old_unique_call 4082} boogie_si_record_i32($i79);
    goto corral_source_split_7994;

  corral_source_split_7994:
    assume {:verifier.code 0} true;
    $i80 := $trunc.i32.i8($i79);
    call {:si_unique_call 9215} {:cexpr "rev"} {:si_old_unique_call 4083} boogie_si_record_i8($i80);
    goto corral_source_split_7995;

  corral_source_split_7995:
    assume {:verifier.code 0} true;
    $i81 := $p2i.ref.i64($p0);
    call {:si_unique_call 9216} {:cexpr "__cil_tmp53"} {:si_old_unique_call 4084} boogie_si_record_i64($i81);
    goto corral_source_split_7996;

  corral_source_split_7996:
    assume {:verifier.code 0} true;
    $i82 := $add.i64($i81, 1068);
    call {:si_unique_call 9217} {:cexpr "__cil_tmp54"} {:si_old_unique_call 4085} boogie_si_record_i64($i82);
    goto corral_source_split_7997;

  corral_source_split_7997:
    assume {:verifier.code 0} true;
    $p83 := $i2p.i64.ref($i82);
    goto corral_source_split_7998;

  corral_source_split_7998:
    assume {:verifier.code 0} true;
    havoc $i84;
    call {:si_unique_call 9218} {:cexpr "__cil_tmp55"} {:si_old_unique_call 4086} boogie_si_record_i16($i84);
    goto corral_source_split_7999;

  corral_source_split_7999:
    assume {:verifier.code 0} true;
    $i85 := $zext.i16.i32($i84);
    goto corral_source_split_8000;

  corral_source_split_8000:
    assume {:verifier.code 0} true;
    $i86 := $eq.i32($i85, 18264);
    goto corral_source_split_8001;

  corral_source_split_8001:
    assume {:verifier.code 0} true;
    assume {:branchcond $i86} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i86 == 1);
    goto corral_source_split_8005;

  corral_source_split_8005:
    assume {:verifier.code 0} true;
    $i87 := $zext.i16.i32($i84);
    goto corral_source_split_8006;

  corral_source_split_8006:
    assume {:verifier.code 0} true;
    $i88 := $eq.i32($i87, 17240);
    goto corral_source_split_8007;

  corral_source_split_8007:
    assume {:verifier.code 0} true;
    assume {:branchcond $i88} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i88 == 1);
    goto corral_source_split_8014;

  corral_source_split_8014:
    assume {:verifier.code 0} true;
    $i89 := $zext.i16.i32($i84);
    goto corral_source_split_8015;

  corral_source_split_8015:
    assume {:verifier.code 0} true;
    $i90 := $eq.i32($i89, 22100);
    goto corral_source_split_8016;

  corral_source_split_8016:
    assume {:verifier.code 0} true;
    assume {:branchcond $i90} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i90 == 1);
    goto corral_source_split_8023;

  corral_source_split_8023:
    assume {:verifier.code 0} true;
    $i91 := $zext.i16.i32($i84);
    goto corral_source_split_8024;

  corral_source_split_8024:
    assume {:verifier.code 0} true;
    $i92 := $eq.i32($i91, 18260);
    goto corral_source_split_8025;

  corral_source_split_8025:
    assume {:verifier.code 0} true;
    assume {:branchcond $i92} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i92 == 1);
    goto corral_source_split_8033;

  corral_source_split_8033:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb26, $bb27;

  $bb27:
    assume !(0 == 1);
    goto corral_source_split_8041;

  corral_source_split_8041:
    assume {:verifier.code 0} true;
    $p95 := $p29;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    $i208 := $zext.i16.i32($i77);
    call {:si_unique_call 9219} {:cexpr "__cil_tmp139"} {:si_old_unique_call 4152} boogie_si_record_i32($i208);
    goto corral_source_split_8225;

  corral_source_split_8225:
    assume {:verifier.code 0} true;
    $i209 := $zext.i8.i32($i80);
    call {:si_unique_call 9220} {:cexpr "__cil_tmp140"} {:si_old_unique_call 4153} boogie_si_record_i32($i209);
    goto corral_source_split_8226;

  corral_source_split_8226:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9221} {:si_old_unique_call 4154} $i210 := printk.ref.ref.i32.i32(.str.29, $p95, $i208, $i209);
    goto corral_source_split_8227;

  corral_source_split_8227:
    assume {:verifier.code 0} true;
    $i23 := 0;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto corral_source_split_7932;

  corral_source_split_7932:
    assume {:verifier.code 0} true;
    $r := $i23;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb26:
    assume 0 == 1;
    goto corral_source_split_8039;

  corral_source_split_8039:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    $i93 := $zext.i16.i32($i77);
    call {:si_unique_call 9222} {:cexpr "__cil_tmp56"} {:si_old_unique_call 4087} boogie_si_record_i32($i93);
    goto corral_source_split_8009;

  corral_source_split_8009:
    assume {:verifier.code 0} true;
    $i94 := $ne.i32($i93, 215);
    goto corral_source_split_8010;

  corral_source_split_8010:
    assume {:verifier.code 0} true;
    assume {:branchcond $i94} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i94 == 1);
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $p95 := $p29;
    goto $bb31;

  $bb28:
    assume $i94 == 1;
    goto corral_source_split_8043;

  corral_source_split_8043:
    assume {:verifier.code 0} true;
    $i23 := $sub.i32(0, 19);
    goto $bb12;

  $bb23:
    assume $i92 == 1;
    goto corral_source_split_8031;

  corral_source_split_8031:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i172 := $zext.i8.i32($i80);
    call {:si_unique_call 9223} {:cexpr "__cil_tmp112"} {:si_old_unique_call 4090} boogie_si_record_i32($i172);
    goto corral_source_split_8035;

  corral_source_split_8035:
    assume {:verifier.code 0} true;
    $i173 := $and.i32($i172, 7);
    goto corral_source_split_8036;

  corral_source_split_8036:
    assume {:verifier.code 0} true;
    $i174 := $eq.i32($i173, 1);
    goto corral_source_split_8037;

  corral_source_split_8037:
    assume {:verifier.code 0} true;
    assume {:branchcond $i174} true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i174 == 1);
    goto corral_source_split_8171;

  corral_source_split_8171:
    assume {:verifier.code 0} true;
    $i175 := $and.i32($i172, 7);
    goto corral_source_split_8172;

  corral_source_split_8172:
    assume {:verifier.code 0} true;
    $i176 := $eq.i32($i175, 2);
    goto corral_source_split_8173;

  corral_source_split_8173:
    assume {:verifier.code 0} true;
    assume {:branchcond $i176} true;
    goto $bb66, $bb67;

  $bb67:
    assume !($i176 == 1);
    goto corral_source_split_8198;

  corral_source_split_8198:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb69, $bb70;

  $bb70:
    assume !(0 == 1);
    goto corral_source_split_8223;

  corral_source_split_8223:
    assume {:verifier.code 0} true;
    $p192 := $p29;
    goto $bb71;

  $bb71:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb72;

  $bb72:
    assume {:verifier.code 0} true;
    goto $bb73;

  $bb73:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    $p95 := $p192;
    goto $bb31;

  $bb69:
    assume 0 == 1;
    goto corral_source_split_8221;

  corral_source_split_8221:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    $i177 := $p2i.ref.i64($p0);
    call {:si_unique_call 9224} {:cexpr "__cil_tmp113"} {:si_old_unique_call 4132} boogie_si_record_i64($i177);
    goto corral_source_split_8175;

  corral_source_split_8175:
    assume {:verifier.code 0} true;
    $i178 := $add.i64($i177, 1008);
    call {:si_unique_call 9225} {:cexpr "__cil_tmp114"} {:si_old_unique_call 4133} boogie_si_record_i64($i178);
    goto corral_source_split_8176;

  corral_source_split_8176:
    assume {:verifier.code 0} true;
    $p179 := $i2p.i64.ref($i178);
    goto corral_source_split_8177;

  corral_source_split_8177:
    assume {:verifier.code 0} true;
    goto corral_source_split_8178;

  corral_source_split_8178:
    assume {:verifier.code 0} true;
    $i180 := $p2i.ref.i64($p0);
    call {:si_unique_call 9226} {:cexpr "__cil_tmp116"} {:si_old_unique_call 4134} boogie_si_record_i64($i180);
    goto corral_source_split_8179;

  corral_source_split_8179:
    assume {:verifier.code 0} true;
    $i181 := $add.i64($i180, 1020);
    call {:si_unique_call 9227} {:cexpr "__cil_tmp117"} {:si_old_unique_call 4135} boogie_si_record_i64($i181);
    goto corral_source_split_8180;

  corral_source_split_8180:
    assume {:verifier.code 0} true;
    $p182 := $i2p.i64.ref($i181);
    goto corral_source_split_8181;

  corral_source_split_8181:
    assume {:verifier.code 0} true;
    goto corral_source_split_8182;

  corral_source_split_8182:
    assume {:verifier.code 0} true;
    $i183 := $p2i.ref.i64($p0);
    call {:si_unique_call 9228} {:cexpr "__cil_tmp119"} {:si_old_unique_call 4136} boogie_si_record_i64($i183);
    goto corral_source_split_8183;

  corral_source_split_8183:
    assume {:verifier.code 0} true;
    $i184 := $add.i64($i183, 1028);
    call {:si_unique_call 9229} {:cexpr "__cil_tmp120"} {:si_old_unique_call 4137} boogie_si_record_i64($i184);
    goto corral_source_split_8184;

  corral_source_split_8184:
    assume {:verifier.code 0} true;
    $p185 := $i2p.i64.ref($i184);
    goto corral_source_split_8185;

  corral_source_split_8185:
    assume {:verifier.code 0} true;
    goto corral_source_split_8186;

  corral_source_split_8186:
    assume {:verifier.code 0} true;
    $i186 := $p2i.ref.i64($p0);
    call {:si_unique_call 9230} {:cexpr "__cil_tmp122"} {:si_old_unique_call 4138} boogie_si_record_i64($i186);
    goto corral_source_split_8187;

  corral_source_split_8187:
    assume {:verifier.code 0} true;
    $i187 := $add.i64($i186, 1040);
    call {:si_unique_call 9231} {:cexpr "__cil_tmp123"} {:si_old_unique_call 4139} boogie_si_record_i64($i187);
    goto corral_source_split_8188;

  corral_source_split_8188:
    assume {:verifier.code 0} true;
    $p188 := $i2p.i64.ref($i187);
    goto corral_source_split_8189;

  corral_source_split_8189:
    assume {:verifier.code 0} true;
    goto corral_source_split_8190;

  corral_source_split_8190:
    assume {:verifier.code 0} true;
    $i189 := $p2i.ref.i64($p0);
    call {:si_unique_call 9232} {:cexpr "__cil_tmp124"} {:si_old_unique_call 4140} boogie_si_record_i64($i189);
    goto corral_source_split_8191;

  corral_source_split_8191:
    assume {:verifier.code 0} true;
    $i190 := $add.i64($i189, 1044);
    call {:si_unique_call 9233} {:cexpr "__cil_tmp125"} {:si_old_unique_call 4141} boogie_si_record_i64($i190);
    goto corral_source_split_8192;

  corral_source_split_8192:
    assume {:verifier.code 0} true;
    $p191 := $i2p.i64.ref($i190);
    goto corral_source_split_8193;

  corral_source_split_8193:
    assume {:verifier.code 0} true;
    goto corral_source_split_8194;

  corral_source_split_8194:
    assume {:verifier.code 0} true;
    $p192 := .str.27;
    goto $bb71;

  $bb66:
    assume $i176 == 1;
    goto corral_source_split_8196;

  corral_source_split_8196:
    assume {:verifier.code 0} true;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    $i193 := $p2i.ref.i64($p0);
    call {:si_unique_call 9234} {:cexpr "__cil_tmp126"} {:si_old_unique_call 4142} boogie_si_record_i64($i193);
    goto corral_source_split_8200;

  corral_source_split_8200:
    assume {:verifier.code 0} true;
    $i194 := $add.i64($i193, 1008);
    call {:si_unique_call 9235} {:cexpr "__cil_tmp127"} {:si_old_unique_call 4143} boogie_si_record_i64($i194);
    goto corral_source_split_8201;

  corral_source_split_8201:
    assume {:verifier.code 0} true;
    $p195 := $i2p.i64.ref($i194);
    goto corral_source_split_8202;

  corral_source_split_8202:
    assume {:verifier.code 0} true;
    goto corral_source_split_8203;

  corral_source_split_8203:
    assume {:verifier.code 0} true;
    $i196 := $p2i.ref.i64($p0);
    call {:si_unique_call 9236} {:cexpr "__cil_tmp129"} {:si_old_unique_call 4144} boogie_si_record_i64($i196);
    goto corral_source_split_8204;

  corral_source_split_8204:
    assume {:verifier.code 0} true;
    $i197 := $add.i64($i196, 1020);
    call {:si_unique_call 9237} {:cexpr "__cil_tmp130"} {:si_old_unique_call 4145} boogie_si_record_i64($i197);
    goto corral_source_split_8205;

  corral_source_split_8205:
    assume {:verifier.code 0} true;
    $p198 := $i2p.i64.ref($i197);
    goto corral_source_split_8206;

  corral_source_split_8206:
    assume {:verifier.code 0} true;
    goto corral_source_split_8207;

  corral_source_split_8207:
    assume {:verifier.code 0} true;
    $i199 := $p2i.ref.i64($p0);
    call {:si_unique_call 9238} {:cexpr "__cil_tmp132"} {:si_old_unique_call 4146} boogie_si_record_i64($i199);
    goto corral_source_split_8208;

  corral_source_split_8208:
    assume {:verifier.code 0} true;
    $i200 := $add.i64($i199, 1028);
    call {:si_unique_call 9239} {:cexpr "__cil_tmp133"} {:si_old_unique_call 4147} boogie_si_record_i64($i200);
    goto corral_source_split_8209;

  corral_source_split_8209:
    assume {:verifier.code 0} true;
    $p201 := $i2p.i64.ref($i200);
    goto corral_source_split_8210;

  corral_source_split_8210:
    assume {:verifier.code 0} true;
    goto corral_source_split_8211;

  corral_source_split_8211:
    assume {:verifier.code 0} true;
    $i202 := $p2i.ref.i64($p0);
    call {:si_unique_call 9240} {:cexpr "__cil_tmp135"} {:si_old_unique_call 4148} boogie_si_record_i64($i202);
    goto corral_source_split_8212;

  corral_source_split_8212:
    assume {:verifier.code 0} true;
    $i203 := $add.i64($i202, 1040);
    call {:si_unique_call 9241} {:cexpr "__cil_tmp136"} {:si_old_unique_call 4149} boogie_si_record_i64($i203);
    goto corral_source_split_8213;

  corral_source_split_8213:
    assume {:verifier.code 0} true;
    $p204 := $i2p.i64.ref($i203);
    goto corral_source_split_8214;

  corral_source_split_8214:
    assume {:verifier.code 0} true;
    goto corral_source_split_8215;

  corral_source_split_8215:
    assume {:verifier.code 0} true;
    $i205 := $p2i.ref.i64($p0);
    call {:si_unique_call 9242} {:cexpr "__cil_tmp137"} {:si_old_unique_call 4150} boogie_si_record_i64($i205);
    goto corral_source_split_8216;

  corral_source_split_8216:
    assume {:verifier.code 0} true;
    $i206 := $add.i64($i205, 1044);
    call {:si_unique_call 9243} {:cexpr "__cil_tmp138"} {:si_old_unique_call 4151} boogie_si_record_i64($i206);
    goto corral_source_split_8217;

  corral_source_split_8217:
    assume {:verifier.code 0} true;
    $p207 := $i2p.i64.ref($i206);
    goto corral_source_split_8218;

  corral_source_split_8218:
    assume {:verifier.code 0} true;
    goto corral_source_split_8219;

  corral_source_split_8219:
    assume {:verifier.code 0} true;
    $p192 := .str.28;
    goto $bb71;

  $bb63:
    assume $i174 == 1;
    goto corral_source_split_8169;

  corral_source_split_8169:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb20:
    assume $i90 == 1;
    goto corral_source_split_8021;

  corral_source_split_8021:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i98 := $zext.i8.i32($i80);
    call {:si_unique_call 9244} {:cexpr "__cil_tmp58"} {:si_old_unique_call 4089} boogie_si_record_i32($i98);
    goto corral_source_split_8027;

  corral_source_split_8027:
    assume {:verifier.code 0} true;
    $i99 := $and.i32($i98, 7);
    goto corral_source_split_8028;

  corral_source_split_8028:
    assume {:verifier.code 0} true;
    $i100 := $eq.i32($i99, 0);
    goto corral_source_split_8029;

  corral_source_split_8029:
    assume {:verifier.code 0} true;
    assume {:branchcond $i100} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i100 == 1);
    goto corral_source_split_8049;

  corral_source_split_8049:
    assume {:verifier.code 0} true;
    $i101 := $and.i32($i98, 7);
    goto corral_source_split_8050;

  corral_source_split_8050:
    assume {:verifier.code 0} true;
    $i102 := $eq.i32($i101, 1);
    goto corral_source_split_8051;

  corral_source_split_8051:
    assume {:verifier.code 0} true;
    assume {:branchcond $i102} true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i102 == 1);
    goto corral_source_split_8059;

  corral_source_split_8059:
    assume {:verifier.code 0} true;
    $i103 := $and.i32($i98, 7);
    goto corral_source_split_8060;

  corral_source_split_8060:
    assume {:verifier.code 0} true;
    $i104 := $eq.i32($i103, 2);
    goto corral_source_split_8061;

  corral_source_split_8061:
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i104 == 1);
    goto corral_source_split_8086;

  corral_source_split_8086:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb44, $bb45;

  $bb45:
    assume !(0 == 1);
    goto corral_source_split_8111;

  corral_source_split_8111:
    assume {:verifier.code 0} true;
    $p141 := $p29;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    goto $bb62;

  $bb62:
    assume {:verifier.code 0} true;
    $p95 := $p141;
    goto $bb31;

  $bb44:
    assume 0 == 1;
    goto corral_source_split_8109;

  corral_source_split_8109:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i105 := $zext.i8.i32($i80);
    call {:si_unique_call 9245} {:cexpr "__cil_tmp59"} {:si_old_unique_call 4091} boogie_si_record_i32($i105);
    goto corral_source_split_8053;

  corral_source_split_8053:
    assume {:verifier.code 0} true;
    $i106 := $and.i32($i105, 192);
    goto corral_source_split_8054;

  corral_source_split_8054:
    assume {:verifier.code 0} true;
    $i107 := $eq.i32($i106, 0);
    goto corral_source_split_8055;

  corral_source_split_8055:
    assume {:verifier.code 0} true;
    assume {:branchcond $i107} true;
    goto $bb46, $bb47;

  $bb47:
    assume !($i107 == 1);
    goto corral_source_split_8115;

  corral_source_split_8115:
    assume {:verifier.code 0} true;
    $i108 := $and.i32($i105, 192);
    goto corral_source_split_8116;

  corral_source_split_8116:
    assume {:verifier.code 0} true;
    $i109 := $eq.i32($i108, 64);
    goto corral_source_split_8117;

  corral_source_split_8117:
    assume {:verifier.code 0} true;
    assume {:branchcond $i109} true;
    goto $bb49, $bb50;

  $bb50:
    assume !($i109 == 1);
    goto corral_source_split_8142;

  corral_source_split_8142:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb52, $bb53;

  $bb53:
    assume !(0 == 1);
    goto corral_source_split_8167;

  corral_source_split_8167:
    assume {:verifier.code 0} true;
    $p125 := $p29;
    goto $bb54;

  $bb54:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    goto $bb56;

  $bb56:
    assume {:verifier.code 0} true;
    goto $bb57;

  $bb57:
    assume {:verifier.code 0} true;
    $p141 := $p125;
    goto $bb58;

  $bb52:
    assume 0 == 1;
    goto corral_source_split_8165;

  corral_source_split_8165:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    $i110 := $p2i.ref.i64($p0);
    call {:si_unique_call 9246} {:cexpr "__cil_tmp60"} {:si_old_unique_call 4112} boogie_si_record_i64($i110);
    goto corral_source_split_8119;

  corral_source_split_8119:
    assume {:verifier.code 0} true;
    $i111 := $add.i64($i110, 1008);
    call {:si_unique_call 9247} {:cexpr "__cil_tmp61"} {:si_old_unique_call 4113} boogie_si_record_i64($i111);
    goto corral_source_split_8120;

  corral_source_split_8120:
    assume {:verifier.code 0} true;
    $p112 := $i2p.i64.ref($i111);
    goto corral_source_split_8121;

  corral_source_split_8121:
    assume {:verifier.code 0} true;
    goto corral_source_split_8122;

  corral_source_split_8122:
    assume {:verifier.code 0} true;
    $i113 := $p2i.ref.i64($p0);
    call {:si_unique_call 9248} {:cexpr "__cil_tmp63"} {:si_old_unique_call 4114} boogie_si_record_i64($i113);
    goto corral_source_split_8123;

  corral_source_split_8123:
    assume {:verifier.code 0} true;
    $i114 := $add.i64($i113, 1020);
    call {:si_unique_call 9249} {:cexpr "__cil_tmp64"} {:si_old_unique_call 4115} boogie_si_record_i64($i114);
    goto corral_source_split_8124;

  corral_source_split_8124:
    assume {:verifier.code 0} true;
    $p115 := $i2p.i64.ref($i114);
    goto corral_source_split_8125;

  corral_source_split_8125:
    assume {:verifier.code 0} true;
    goto corral_source_split_8126;

  corral_source_split_8126:
    assume {:verifier.code 0} true;
    $i116 := $p2i.ref.i64($p0);
    call {:si_unique_call 9250} {:cexpr "__cil_tmp66"} {:si_old_unique_call 4116} boogie_si_record_i64($i116);
    goto corral_source_split_8127;

  corral_source_split_8127:
    assume {:verifier.code 0} true;
    $i117 := $add.i64($i116, 1028);
    call {:si_unique_call 9251} {:cexpr "__cil_tmp67"} {:si_old_unique_call 4117} boogie_si_record_i64($i117);
    goto corral_source_split_8128;

  corral_source_split_8128:
    assume {:verifier.code 0} true;
    $p118 := $i2p.i64.ref($i117);
    goto corral_source_split_8129;

  corral_source_split_8129:
    assume {:verifier.code 0} true;
    goto corral_source_split_8130;

  corral_source_split_8130:
    assume {:verifier.code 0} true;
    $i119 := $p2i.ref.i64($p0);
    call {:si_unique_call 9252} {:cexpr "__cil_tmp69"} {:si_old_unique_call 4118} boogie_si_record_i64($i119);
    goto corral_source_split_8131;

  corral_source_split_8131:
    assume {:verifier.code 0} true;
    $i120 := $add.i64($i119, 1040);
    call {:si_unique_call 9253} {:cexpr "__cil_tmp70"} {:si_old_unique_call 4119} boogie_si_record_i64($i120);
    goto corral_source_split_8132;

  corral_source_split_8132:
    assume {:verifier.code 0} true;
    $p121 := $i2p.i64.ref($i120);
    goto corral_source_split_8133;

  corral_source_split_8133:
    assume {:verifier.code 0} true;
    goto corral_source_split_8134;

  corral_source_split_8134:
    assume {:verifier.code 0} true;
    $i122 := $p2i.ref.i64($p0);
    call {:si_unique_call 9254} {:cexpr "__cil_tmp71"} {:si_old_unique_call 4120} boogie_si_record_i64($i122);
    goto corral_source_split_8135;

  corral_source_split_8135:
    assume {:verifier.code 0} true;
    $i123 := $add.i64($i122, 1044);
    call {:si_unique_call 9255} {:cexpr "__cil_tmp72"} {:si_old_unique_call 4121} boogie_si_record_i64($i123);
    goto corral_source_split_8136;

  corral_source_split_8136:
    assume {:verifier.code 0} true;
    $p124 := $i2p.i64.ref($i123);
    goto corral_source_split_8137;

  corral_source_split_8137:
    assume {:verifier.code 0} true;
    goto corral_source_split_8138;

  corral_source_split_8138:
    assume {:verifier.code 0} true;
    $p125 := .str.23;
    goto $bb54;

  $bb49:
    assume $i109 == 1;
    goto corral_source_split_8140;

  corral_source_split_8140:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $i126 := $p2i.ref.i64($p0);
    call {:si_unique_call 9256} {:cexpr "__cil_tmp73"} {:si_old_unique_call 4122} boogie_si_record_i64($i126);
    goto corral_source_split_8144;

  corral_source_split_8144:
    assume {:verifier.code 0} true;
    $i127 := $add.i64($i126, 1008);
    call {:si_unique_call 9257} {:cexpr "__cil_tmp74"} {:si_old_unique_call 4123} boogie_si_record_i64($i127);
    goto corral_source_split_8145;

  corral_source_split_8145:
    assume {:verifier.code 0} true;
    $p128 := $i2p.i64.ref($i127);
    goto corral_source_split_8146;

  corral_source_split_8146:
    assume {:verifier.code 0} true;
    goto corral_source_split_8147;

  corral_source_split_8147:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p0);
    call {:si_unique_call 9258} {:cexpr "__cil_tmp76"} {:si_old_unique_call 4124} boogie_si_record_i64($i129);
    goto corral_source_split_8148;

  corral_source_split_8148:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 1020);
    call {:si_unique_call 9259} {:cexpr "__cil_tmp77"} {:si_old_unique_call 4125} boogie_si_record_i64($i130);
    goto corral_source_split_8149;

  corral_source_split_8149:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_8150;

  corral_source_split_8150:
    assume {:verifier.code 0} true;
    goto corral_source_split_8151;

  corral_source_split_8151:
    assume {:verifier.code 0} true;
    $i132 := $p2i.ref.i64($p0);
    call {:si_unique_call 9260} {:cexpr "__cil_tmp79"} {:si_old_unique_call 4126} boogie_si_record_i64($i132);
    goto corral_source_split_8152;

  corral_source_split_8152:
    assume {:verifier.code 0} true;
    $i133 := $add.i64($i132, 1028);
    call {:si_unique_call 9261} {:cexpr "__cil_tmp80"} {:si_old_unique_call 4127} boogie_si_record_i64($i133);
    goto corral_source_split_8153;

  corral_source_split_8153:
    assume {:verifier.code 0} true;
    $p134 := $i2p.i64.ref($i133);
    goto corral_source_split_8154;

  corral_source_split_8154:
    assume {:verifier.code 0} true;
    goto corral_source_split_8155;

  corral_source_split_8155:
    assume {:verifier.code 0} true;
    $i135 := $p2i.ref.i64($p0);
    call {:si_unique_call 9262} {:cexpr "__cil_tmp82"} {:si_old_unique_call 4128} boogie_si_record_i64($i135);
    goto corral_source_split_8156;

  corral_source_split_8156:
    assume {:verifier.code 0} true;
    $i136 := $add.i64($i135, 1040);
    call {:si_unique_call 9263} {:cexpr "__cil_tmp83"} {:si_old_unique_call 4129} boogie_si_record_i64($i136);
    goto corral_source_split_8157;

  corral_source_split_8157:
    assume {:verifier.code 0} true;
    $p137 := $i2p.i64.ref($i136);
    goto corral_source_split_8158;

  corral_source_split_8158:
    assume {:verifier.code 0} true;
    goto corral_source_split_8159;

  corral_source_split_8159:
    assume {:verifier.code 0} true;
    $i138 := $p2i.ref.i64($p0);
    call {:si_unique_call 9264} {:cexpr "__cil_tmp84"} {:si_old_unique_call 4130} boogie_si_record_i64($i138);
    goto corral_source_split_8160;

  corral_source_split_8160:
    assume {:verifier.code 0} true;
    $i139 := $add.i64($i138, 1044);
    call {:si_unique_call 9265} {:cexpr "__cil_tmp85"} {:si_old_unique_call 4131} boogie_si_record_i64($i139);
    goto corral_source_split_8161;

  corral_source_split_8161:
    assume {:verifier.code 0} true;
    $p140 := $i2p.i64.ref($i139);
    goto corral_source_split_8162;

  corral_source_split_8162:
    assume {:verifier.code 0} true;
    goto corral_source_split_8163;

  corral_source_split_8163:
    assume {:verifier.code 0} true;
    $p125 := .str.24;
    goto $bb54;

  $bb46:
    assume $i107 == 1;
    goto corral_source_split_8113;

  corral_source_split_8113:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb41:
    assume $i104 == 1;
    goto corral_source_split_8084;

  corral_source_split_8084:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    $i157 := $p2i.ref.i64($p0);
    call {:si_unique_call 9266} {:cexpr "__cil_tmp99"} {:si_old_unique_call 4102} boogie_si_record_i64($i157);
    goto corral_source_split_8088;

  corral_source_split_8088:
    assume {:verifier.code 0} true;
    $i158 := $add.i64($i157, 1008);
    call {:si_unique_call 9267} {:cexpr "__cil_tmp100"} {:si_old_unique_call 4103} boogie_si_record_i64($i158);
    goto corral_source_split_8089;

  corral_source_split_8089:
    assume {:verifier.code 0} true;
    $p159 := $i2p.i64.ref($i158);
    goto corral_source_split_8090;

  corral_source_split_8090:
    assume {:verifier.code 0} true;
    goto corral_source_split_8091;

  corral_source_split_8091:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p0);
    call {:si_unique_call 9268} {:cexpr "__cil_tmp102"} {:si_old_unique_call 4104} boogie_si_record_i64($i160);
    goto corral_source_split_8092;

  corral_source_split_8092:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 1020);
    call {:si_unique_call 9269} {:cexpr "__cil_tmp103"} {:si_old_unique_call 4105} boogie_si_record_i64($i161);
    goto corral_source_split_8093;

  corral_source_split_8093:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_8094;

  corral_source_split_8094:
    assume {:verifier.code 0} true;
    goto corral_source_split_8095;

  corral_source_split_8095:
    assume {:verifier.code 0} true;
    $i163 := $p2i.ref.i64($p0);
    call {:si_unique_call 9270} {:cexpr "__cil_tmp105"} {:si_old_unique_call 4106} boogie_si_record_i64($i163);
    goto corral_source_split_8096;

  corral_source_split_8096:
    assume {:verifier.code 0} true;
    $i164 := $add.i64($i163, 1028);
    call {:si_unique_call 9271} {:cexpr "__cil_tmp106"} {:si_old_unique_call 4107} boogie_si_record_i64($i164);
    goto corral_source_split_8097;

  corral_source_split_8097:
    assume {:verifier.code 0} true;
    $p165 := $i2p.i64.ref($i164);
    goto corral_source_split_8098;

  corral_source_split_8098:
    assume {:verifier.code 0} true;
    goto corral_source_split_8099;

  corral_source_split_8099:
    assume {:verifier.code 0} true;
    $i166 := $p2i.ref.i64($p0);
    call {:si_unique_call 9272} {:cexpr "__cil_tmp108"} {:si_old_unique_call 4108} boogie_si_record_i64($i166);
    goto corral_source_split_8100;

  corral_source_split_8100:
    assume {:verifier.code 0} true;
    $i167 := $add.i64($i166, 1040);
    call {:si_unique_call 9273} {:cexpr "__cil_tmp109"} {:si_old_unique_call 4109} boogie_si_record_i64($i167);
    goto corral_source_split_8101;

  corral_source_split_8101:
    assume {:verifier.code 0} true;
    $p168 := $i2p.i64.ref($i167);
    goto corral_source_split_8102;

  corral_source_split_8102:
    assume {:verifier.code 0} true;
    goto corral_source_split_8103;

  corral_source_split_8103:
    assume {:verifier.code 0} true;
    $i169 := $p2i.ref.i64($p0);
    call {:si_unique_call 9274} {:cexpr "__cil_tmp110"} {:si_old_unique_call 4110} boogie_si_record_i64($i169);
    goto corral_source_split_8104;

  corral_source_split_8104:
    assume {:verifier.code 0} true;
    $i170 := $add.i64($i169, 1044);
    call {:si_unique_call 9275} {:cexpr "__cil_tmp111"} {:si_old_unique_call 4111} boogie_si_record_i64($i170);
    goto corral_source_split_8105;

  corral_source_split_8105:
    assume {:verifier.code 0} true;
    $p171 := $i2p.i64.ref($i170);
    goto corral_source_split_8106;

  corral_source_split_8106:
    assume {:verifier.code 0} true;
    goto corral_source_split_8107;

  corral_source_split_8107:
    assume {:verifier.code 0} true;
    $p141 := .str.26;
    goto $bb58;

  $bb38:
    assume $i102 == 1;
    goto corral_source_split_8057;

  corral_source_split_8057:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i142 := $p2i.ref.i64($p0);
    call {:si_unique_call 9276} {:cexpr "__cil_tmp86"} {:si_old_unique_call 4092} boogie_si_record_i64($i142);
    goto corral_source_split_8063;

  corral_source_split_8063:
    assume {:verifier.code 0} true;
    $i143 := $add.i64($i142, 1008);
    call {:si_unique_call 9277} {:cexpr "__cil_tmp87"} {:si_old_unique_call 4093} boogie_si_record_i64($i143);
    goto corral_source_split_8064;

  corral_source_split_8064:
    assume {:verifier.code 0} true;
    $p144 := $i2p.i64.ref($i143);
    goto corral_source_split_8065;

  corral_source_split_8065:
    assume {:verifier.code 0} true;
    goto corral_source_split_8066;

  corral_source_split_8066:
    assume {:verifier.code 0} true;
    $i145 := $p2i.ref.i64($p0);
    call {:si_unique_call 9278} {:cexpr "__cil_tmp89"} {:si_old_unique_call 4094} boogie_si_record_i64($i145);
    goto corral_source_split_8067;

  corral_source_split_8067:
    assume {:verifier.code 0} true;
    $i146 := $add.i64($i145, 1020);
    call {:si_unique_call 9279} {:cexpr "__cil_tmp90"} {:si_old_unique_call 4095} boogie_si_record_i64($i146);
    goto corral_source_split_8068;

  corral_source_split_8068:
    assume {:verifier.code 0} true;
    $p147 := $i2p.i64.ref($i146);
    goto corral_source_split_8069;

  corral_source_split_8069:
    assume {:verifier.code 0} true;
    goto corral_source_split_8070;

  corral_source_split_8070:
    assume {:verifier.code 0} true;
    $i148 := $p2i.ref.i64($p0);
    call {:si_unique_call 9280} {:cexpr "__cil_tmp92"} {:si_old_unique_call 4096} boogie_si_record_i64($i148);
    goto corral_source_split_8071;

  corral_source_split_8071:
    assume {:verifier.code 0} true;
    $i149 := $add.i64($i148, 1028);
    call {:si_unique_call 9281} {:cexpr "__cil_tmp93"} {:si_old_unique_call 4097} boogie_si_record_i64($i149);
    goto corral_source_split_8072;

  corral_source_split_8072:
    assume {:verifier.code 0} true;
    $p150 := $i2p.i64.ref($i149);
    goto corral_source_split_8073;

  corral_source_split_8073:
    assume {:verifier.code 0} true;
    goto corral_source_split_8074;

  corral_source_split_8074:
    assume {:verifier.code 0} true;
    $i151 := $p2i.ref.i64($p0);
    call {:si_unique_call 9282} {:cexpr "__cil_tmp95"} {:si_old_unique_call 4098} boogie_si_record_i64($i151);
    goto corral_source_split_8075;

  corral_source_split_8075:
    assume {:verifier.code 0} true;
    $i152 := $add.i64($i151, 1040);
    call {:si_unique_call 9283} {:cexpr "__cil_tmp96"} {:si_old_unique_call 4099} boogie_si_record_i64($i152);
    goto corral_source_split_8076;

  corral_source_split_8076:
    assume {:verifier.code 0} true;
    $p153 := $i2p.i64.ref($i152);
    goto corral_source_split_8077;

  corral_source_split_8077:
    assume {:verifier.code 0} true;
    goto corral_source_split_8078;

  corral_source_split_8078:
    assume {:verifier.code 0} true;
    $i154 := $p2i.ref.i64($p0);
    call {:si_unique_call 9284} {:cexpr "__cil_tmp97"} {:si_old_unique_call 4100} boogie_si_record_i64($i154);
    goto corral_source_split_8079;

  corral_source_split_8079:
    assume {:verifier.code 0} true;
    $i155 := $add.i64($i154, 1044);
    call {:si_unique_call 9285} {:cexpr "__cil_tmp98"} {:si_old_unique_call 4101} boogie_si_record_i64($i155);
    goto corral_source_split_8080;

  corral_source_split_8080:
    assume {:verifier.code 0} true;
    $p156 := $i2p.i64.ref($i155);
    goto corral_source_split_8081;

  corral_source_split_8081:
    assume {:verifier.code 0} true;
    goto corral_source_split_8082;

  corral_source_split_8082:
    assume {:verifier.code 0} true;
    $p141 := .str.25;
    goto $bb58;

  $bb35:
    assume $i100 == 1;
    goto corral_source_split_8047;

  corral_source_split_8047:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb17:
    assume $i88 == 1;
    goto corral_source_split_8012;

  corral_source_split_8012:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    $i96 := $zext.i16.i32($i77);
    call {:si_unique_call 9286} {:cexpr "__cil_tmp57"} {:si_old_unique_call 4088} boogie_si_record_i32($i96);
    goto corral_source_split_8018;

  corral_source_split_8018:
    assume {:verifier.code 0} true;
    $i97 := $ne.i32($i96, 87);
    goto corral_source_split_8019;

  corral_source_split_8019:
    assume {:verifier.code 0} true;
    assume {:branchcond $i97} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i97 == 1);
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $p95 := $p29;
    goto $bb31;

  $bb32:
    assume $i97 == 1;
    goto corral_source_split_8045;

  corral_source_split_8045:
    assume {:verifier.code 0} true;
    $i23 := $sub.i32(0, 19);
    goto $bb12;

  $bb14:
    assume $i86 == 1;
    goto corral_source_split_8003;

  corral_source_split_8003:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb10:
    assume $i22 == 1;
    goto corral_source_split_7930;

  corral_source_split_7930:
    assume {:verifier.code 0} true;
    $i23 := $sub.i32(0, 19);
    goto $bb12;

  $bb3:
    assume $i5 == 1;
    goto corral_source_split_7906;

  corral_source_split_7906:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    $i8 := $sext.i32.i64($i4);
    goto corral_source_split_7910;

  corral_source_split_7910:
    assume {:verifier.code 0} true;
    $i9 := $mul.i64($i8, 40);
    call {:si_unique_call 9287} {:cexpr "__cil_tmp10"} {:si_old_unique_call 4040} boogie_si_record_i64($i9);
    goto corral_source_split_7911;

  corral_source_split_7911:
    assume {:verifier.code 0} true;
    $i10 := $add.i64($p2i.ref.i64(aty_chips), $i9);
    call {:si_unique_call 9288} {:cexpr "__cil_tmp11"} {:si_old_unique_call 4041} boogie_si_record_i64($i10);
    goto corral_source_split_7912;

  corral_source_split_7912:
    assume {:verifier.code 0} true;
    $p11 := $i2p.i64.ref($i10);
    goto corral_source_split_7913;

  corral_source_split_7913:
    assume {:verifier.code 0} true;
    havoc $i12;
    call {:si_unique_call 9289} {:cexpr "__cil_tmp12"} {:si_old_unique_call 4042} boogie_si_record_i16($i12);
    goto corral_source_split_7914;

  corral_source_split_7914:
    assume {:verifier.code 0} true;
    $i13 := $zext.i16.i32($i12);
    call {:si_unique_call 9290} {:cexpr "__cil_tmp13"} {:si_old_unique_call 4043} boogie_si_record_i32($i13);
    goto corral_source_split_7915;

  corral_source_split_7915:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p0);
    call {:si_unique_call 9291} {:cexpr "__cil_tmp14"} {:si_old_unique_call 4044} boogie_si_record_i64($i14);
    goto corral_source_split_7916;

  corral_source_split_7916:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 1068);
    call {:si_unique_call 9292} {:cexpr "__cil_tmp15"} {:si_old_unique_call 4045} boogie_si_record_i64($i15);
    goto corral_source_split_7917;

  corral_source_split_7917:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_7918;

  corral_source_split_7918:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 9293} {:cexpr "__cil_tmp16"} {:si_old_unique_call 4046} boogie_si_record_i16($i17);
    goto corral_source_split_7919;

  corral_source_split_7919:
    assume {:verifier.code 0} true;
    $i18 := $zext.i16.i32($i17);
    call {:si_unique_call 9294} {:cexpr "__cil_tmp17"} {:si_old_unique_call 4047} boogie_si_record_i32($i18);
    goto corral_source_split_7920;

  corral_source_split_7920:
    assume {:verifier.code 0} true;
    $i19 := $eq.i32($i18, $i13);
    goto corral_source_split_7921;

  corral_source_split_7921:
    assume {:verifier.code 0} true;
    $i20 := $i4;
    assume {:branchcond $i19} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i19 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    $i21 := $sub.i32($i4, 1);
    call {:si_unique_call 9295} {:cexpr "i"} {:si_old_unique_call 4048} boogie_si_record_i32($i21);
    goto corral_source_split_7928;

  corral_source_split_7928:
    assume {:verifier.code 0} true;
    $i4 := $i21;
    goto corral_source_split_7928_dummy;

  corral_source_split_7928_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb7:
    assume $i19 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_7926;

  corral_source_split_7926:
    assume {:verifier.code 0} true;
    $i7 := $i20;
    goto $bb6;
}



implementation {:LB_Mapping "atyfb_setcolreg_loop_$bb62"} {:entrypoint} atyfb_setcolreg_EntryCopy_atyfb_setcolreg_loop_$bb62($i0: i32, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref) returns ($r: i32)
{
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i32;
  var $i33: i1;
  var $i35: i1;
  var $i36: i1;
  var $i37: i1;
  var $i38: i1;
  var $i39: i1;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $i48: i8;
  var $p49: ref;
  var $i50: i64;
  var $i51: i64;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $i56: i8;
  var $p57: ref;
  var $i58: i64;
  var $i59: i64;
  var $i60: i64;
  var $i61: i64;
  var $i62: i64;
  var $i63: i64;
  var $i64: i8;
  var $p65: ref;
  var $i66: i1;
  var $i67: i1;
  var $i68: i1;
  var $i69: i1;
  var $i70: i1;
  var $i71: i64;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i32;
  var $i76: i32;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i89: i32;
  var $i90: i32;
  var $i91: i64;
  var $p92: ref;
  var $i93: i32;
  var $i94: i32;
  var $i95: i8;
  var $i96: i32;
  var $i97: i32;
  var $i98: i64;
  var $i99: i64;
  var $p100: ref;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $i104: i32;
  var $i105: i32;
  var $i106: i8;
  var $i107: i64;
  var $i108: i64;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $i112: i1;
  var $i113: i1;
  var $i114: i1;
  var $i115: i32;
  var $i116: i32;
  var $i117: i64;
  var $i118: i64;
  var $i119: i64;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $p123: ref;
  var $i124: i8;
  var $i125: i32;
  var $i126: i32;
  var $i127: i64;
  var $i128: i64;
  var $i129: i64;
  var $i130: i64;
  var $i131: i64;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $i135: i32;
  var $i136: i64;
  var $i137: i64;
  var $i138: i64;
  var $i139: i64;
  var $i140: i64;
  var $i141: i64;
  var $p142: ref;
  var $i143: i8;
  var $i144: i32;
  var $i145: i32;
  var $i149: i1;
  var $i150: i32;
  var $i151: i32;
  var $i152: i1;
  var $i153: i32;
  var $i154: i32;
  var $i155: i32;
  var $i146: i32;
  var $i147: i32;
  var $i148: i32;
  var $i156: i32;
  var $i157: i32;
  var $i158: i32;
  var $i34: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 9355} {:cexpr "atyfb_setcolreg:arg:regno"} {:si_old_unique_call 4214} boogie_si_record_i32($i0);
    call {:si_unique_call 9356} {:cexpr "atyfb_setcolreg:arg:red"} {:si_old_unique_call 4215} boogie_si_record_i32($i1);
    call {:si_unique_call 9357} {:cexpr "atyfb_setcolreg:arg:green"} {:si_old_unique_call 4216} boogie_si_record_i32($i2);
    call {:si_unique_call 9358} {:cexpr "atyfb_setcolreg:arg:blue"} {:si_old_unique_call 4217} boogie_si_record_i32($i3);
    call {:si_unique_call 9359} {:cexpr "atyfb_setcolreg:arg:transp"} {:si_old_unique_call 4218} boogie_si_record_i32($i4);
    goto corral_source_split_8345;

  corral_source_split_8345:
    assume {:verifier.code 0} true;
    $i6 := $p2i.ref.i64($p5);
    call {:si_unique_call 9360} {:cexpr "__cil_tmp12"} {:si_old_unique_call 4219} boogie_si_record_i64($i6);
    goto corral_source_split_8346;

  corral_source_split_8346:
    assume {:verifier.code 0} true;
    $i7 := $add.i64($i6, 1160);
    call {:si_unique_call 9361} {:cexpr "__cil_tmp13"} {:si_old_unique_call 4220} boogie_si_record_i64($i7);
    goto corral_source_split_8347;

  corral_source_split_8347:
    assume {:verifier.code 0} true;
    $p8 := $i2p.i64.ref($i7);
    goto corral_source_split_8348;

  corral_source_split_8348:
    assume {:verifier.code 0} true;
    havoc $p9;
    goto corral_source_split_8349;

  corral_source_split_8349:
    assume {:verifier.code 0} true;
    $p10 := $bitcast.ref.ref($p9);
    goto corral_source_split_8350;

  corral_source_split_8350:
    assume {:verifier.code 0} true;
    $i11 := $p2i.ref.i64($p5);
    call {:si_unique_call 9362} {:cexpr "__cil_tmp15"} {:si_old_unique_call 4221} boogie_si_record_i64($i11);
    goto corral_source_split_8351;

  corral_source_split_8351:
    assume {:verifier.code 0} true;
    $i12 := $add.i64($i11, 1136);
    call {:si_unique_call 9363} {:cexpr "__cil_tmp16"} {:si_old_unique_call 4222} boogie_si_record_i64($i12);
    goto corral_source_split_8352;

  corral_source_split_8352:
    assume {:verifier.code 0} true;
    $p13 := $i2p.i64.ref($i12);
    goto corral_source_split_8353;

  corral_source_split_8353:
    assume {:verifier.code 0} true;
    havoc $p14;
    goto corral_source_split_8354;

  corral_source_split_8354:
    assume {:verifier.code 0} true;
    $p15 := $bitcast.ref.ref($p14);
    goto corral_source_split_8355;

  corral_source_split_8355:
    assume {:verifier.code 0} true;
    $i16 := $p2i.ref.i64($p5);
    call {:si_unique_call 9364} {:cexpr "__cil_tmp19"} {:si_old_unique_call 4223} boogie_si_record_i64($i16);
    goto corral_source_split_8356;

  corral_source_split_8356:
    assume {:verifier.code 0} true;
    $i17 := $add.i64($i16, 184);
    call {:si_unique_call 9365} {:cexpr "__cil_tmp20"} {:si_old_unique_call 4224} boogie_si_record_i64($i17);
    goto corral_source_split_8357;

  corral_source_split_8357:
    assume {:verifier.code 0} true;
    $p18 := $i2p.i64.ref($i17);
    goto corral_source_split_8358;

  corral_source_split_8358:
    assume {:verifier.code 0} true;
    havoc $i19;
    call {:si_unique_call 9366} {:cexpr "__cil_tmp21"} {:si_old_unique_call 4225} boogie_si_record_i32($i19);
    goto corral_source_split_8359;

  corral_source_split_8359:
    assume {:verifier.code 0} true;
    $i20 := $eq.i32($i19, 16);
    goto corral_source_split_8360;

  corral_source_split_8360:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i20 == 1);
    assume {:verifier.code 0} true;
    $i28 := $i19;
    goto $bb6;

  $bb6:
    assume {:verifier.code 0} true;
    goto corral_source_split_8374;

  corral_source_split_8374:
    assume {:verifier.code 0} true;
    $i29 := $p2i.ref.i64($p10);
    call {:si_unique_call 9367} {:cexpr "__cil_tmp27"} {:si_old_unique_call 4230} boogie_si_record_i64($i29);
    goto corral_source_split_8375;

  corral_source_split_8375:
    assume {:verifier.code 0} true;
    $i30 := $add.i64($i29, 1080);
    call {:si_unique_call 9368} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4231} boogie_si_record_i64($i30);
    goto corral_source_split_8376;

  corral_source_split_8376:
    assume {:verifier.code 0} true;
    $p31 := $i2p.i64.ref($i30);
    goto corral_source_split_8377;

  corral_source_split_8377:
    assume {:verifier.code 0} true;
    havoc $i32;
    goto corral_source_split_8378;

  corral_source_split_8378:
    assume {:verifier.code 0} true;
    $i33 := $ne.i32($i32, 0);
    goto corral_source_split_8379;

  corral_source_split_8379:
    assume {:verifier.code 0} true;
    assume {:branchcond $i33} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i33 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i35 := $ugt.i32($i0, 255);
    goto corral_source_split_8385;

  corral_source_split_8385:
    assume {:verifier.code 0} true;
    assume {:branchcond $i35} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i35 == 1);
    goto corral_source_split_8389;

  corral_source_split_8389:
    assume {:verifier.code 0} true;
    $i36 := $eq.i32($i28, 16);
    goto corral_source_split_8390;

  corral_source_split_8390:
    assume {:verifier.code 0} true;
    assume {:branchcond $i36} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i36 == 1);
    goto corral_source_split_8395;

  corral_source_split_8395:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    $i38 := $eq.i32($i28, 15);
    goto corral_source_split_8401;

  corral_source_split_8401:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb18, $bb19;

  $bb19:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i40 := $lshr.i32($i1, 8);
    call {:si_unique_call 9369} {:cexpr "red"} {:si_old_unique_call 4232} boogie_si_record_i32($i40);
    goto corral_source_split_8408;

  corral_source_split_8408:
    assume {:verifier.code 0} true;
    $i41 := $lshr.i32($i2, 8);
    call {:si_unique_call 9370} {:cexpr "green"} {:si_old_unique_call 4233} boogie_si_record_i32($i41);
    goto corral_source_split_8409;

  corral_source_split_8409:
    assume {:verifier.code 0} true;
    $i42 := $lshr.i32($i3, 8);
    call {:si_unique_call 9371} {:cexpr "blue"} {:si_old_unique_call 4234} boogie_si_record_i32($i42);
    goto corral_source_split_8410;

  corral_source_split_8410:
    assume {:verifier.code 0} true;
    $i43 := $zext.i32.i64($i0);
    goto corral_source_split_8411;

  corral_source_split_8411:
    assume {:verifier.code 0} true;
    $i44 := $mul.i64($i43, 3);
    call {:si_unique_call 9372} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4235} boogie_si_record_i64($i44);
    goto corral_source_split_8412;

  corral_source_split_8412:
    assume {:verifier.code 0} true;
    $i45 := $add.i64(64, $i44);
    call {:si_unique_call 9373} {:cexpr "__cil_tmp30"} {:si_old_unique_call 4236} boogie_si_record_i64($i45);
    goto corral_source_split_8413;

  corral_source_split_8413:
    assume {:verifier.code 0} true;
    $i46 := $p2i.ref.i64($p10);
    call {:si_unique_call 9374} {:cexpr "__cil_tmp31"} {:si_old_unique_call 4237} boogie_si_record_i64($i46);
    goto corral_source_split_8414;

  corral_source_split_8414:
    assume {:verifier.code 0} true;
    $i47 := $add.i64($i46, $i45);
    call {:si_unique_call 9375} {:cexpr "__cil_tmp32"} {:si_old_unique_call 4238} boogie_si_record_i64($i47);
    goto corral_source_split_8415;

  corral_source_split_8415:
    assume {:verifier.code 0} true;
    $i48 := $trunc.i32.i8($i40);
    goto corral_source_split_8416;

  corral_source_split_8416:
    assume {:verifier.code 0} true;
    $p49 := $i2p.i64.ref($i47);
    goto corral_source_split_8417;

  corral_source_split_8417:
    assume {:verifier.code 0} true;
    goto corral_source_split_8418;

  corral_source_split_8418:
    assume {:verifier.code 0} true;
    $i50 := $zext.i32.i64($i0);
    goto corral_source_split_8419;

  corral_source_split_8419:
    assume {:verifier.code 0} true;
    $i51 := $mul.i64($i50, 3);
    call {:si_unique_call 9376} {:cexpr "__cil_tmp33"} {:si_old_unique_call 4239} boogie_si_record_i64($i51);
    goto corral_source_split_8420;

  corral_source_split_8420:
    assume {:verifier.code 0} true;
    $i52 := $add.i64($i51, 1);
    call {:si_unique_call 9377} {:cexpr "__cil_tmp34"} {:si_old_unique_call 4240} boogie_si_record_i64($i52);
    goto corral_source_split_8421;

  corral_source_split_8421:
    assume {:verifier.code 0} true;
    $i53 := $add.i64(64, $i52);
    call {:si_unique_call 9378} {:cexpr "__cil_tmp35"} {:si_old_unique_call 4241} boogie_si_record_i64($i53);
    goto corral_source_split_8422;

  corral_source_split_8422:
    assume {:verifier.code 0} true;
    $i54 := $p2i.ref.i64($p10);
    call {:si_unique_call 9379} {:cexpr "__cil_tmp36"} {:si_old_unique_call 4242} boogie_si_record_i64($i54);
    goto corral_source_split_8423;

  corral_source_split_8423:
    assume {:verifier.code 0} true;
    $i55 := $add.i64($i54, $i53);
    call {:si_unique_call 9380} {:cexpr "__cil_tmp37"} {:si_old_unique_call 4243} boogie_si_record_i64($i55);
    goto corral_source_split_8424;

  corral_source_split_8424:
    assume {:verifier.code 0} true;
    $i56 := $trunc.i32.i8($i41);
    goto corral_source_split_8425;

  corral_source_split_8425:
    assume {:verifier.code 0} true;
    $p57 := $i2p.i64.ref($i55);
    goto corral_source_split_8426;

  corral_source_split_8426:
    assume {:verifier.code 0} true;
    goto corral_source_split_8427;

  corral_source_split_8427:
    assume {:verifier.code 0} true;
    $i58 := $zext.i32.i64($i0);
    goto corral_source_split_8428;

  corral_source_split_8428:
    assume {:verifier.code 0} true;
    $i59 := $mul.i64($i58, 3);
    call {:si_unique_call 9381} {:cexpr "__cil_tmp38"} {:si_old_unique_call 4244} boogie_si_record_i64($i59);
    goto corral_source_split_8429;

  corral_source_split_8429:
    assume {:verifier.code 0} true;
    $i60 := $add.i64($i59, 2);
    call {:si_unique_call 9382} {:cexpr "__cil_tmp39"} {:si_old_unique_call 4245} boogie_si_record_i64($i60);
    goto corral_source_split_8430;

  corral_source_split_8430:
    assume {:verifier.code 0} true;
    $i61 := $add.i64(64, $i60);
    call {:si_unique_call 9383} {:cexpr "__cil_tmp40"} {:si_old_unique_call 4246} boogie_si_record_i64($i61);
    goto corral_source_split_8431;

  corral_source_split_8431:
    assume {:verifier.code 0} true;
    $i62 := $p2i.ref.i64($p10);
    call {:si_unique_call 9384} {:cexpr "__cil_tmp41"} {:si_old_unique_call 4247} boogie_si_record_i64($i62);
    goto corral_source_split_8432;

  corral_source_split_8432:
    assume {:verifier.code 0} true;
    $i63 := $add.i64($i62, $i61);
    call {:si_unique_call 9385} {:cexpr "__cil_tmp42"} {:si_old_unique_call 4248} boogie_si_record_i64($i63);
    goto corral_source_split_8433;

  corral_source_split_8433:
    assume {:verifier.code 0} true;
    $i64 := $trunc.i32.i8($i42);
    goto corral_source_split_8434;

  corral_source_split_8434:
    assume {:verifier.code 0} true;
    $p65 := $i2p.i64.ref($i63);
    goto corral_source_split_8435;

  corral_source_split_8435:
    assume {:verifier.code 0} true;
    goto corral_source_split_8436;

  corral_source_split_8436:
    assume {:verifier.code 0} true;
    $i66 := $ult.i32($i0, 16);
    goto corral_source_split_8437;

  corral_source_split_8437:
    assume {:verifier.code 0} true;
    assume {:branchcond $i66} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i66 == 1);
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9386} {:si_old_unique_call 4262} $i95 := aty_ld_8(196, $p10);
    call {:si_unique_call 9387} {:cexpr "tmp___7"} {:si_old_unique_call 4263} boogie_si_record_i8($i95);
    goto corral_source_split_8497;

  corral_source_split_8497:
    assume {:verifier.code 0} true;
    $i96 := $zext.i8.i32($i95);
    call {:si_unique_call 9388} {:cexpr "__cil_tmp61"} {:si_old_unique_call 4264} boogie_si_record_i32($i96);
    goto corral_source_split_8498;

  corral_source_split_8498:
    assume {:verifier.code 0} true;
    $i97 := $and.i32($i96, 252);
    call {:si_unique_call 9389} {:cexpr "i"} {:si_old_unique_call 4265} boogie_si_record_i32($i97);
    goto corral_source_split_8499;

  corral_source_split_8499:
    assume {:verifier.code 0} true;
    $i98 := $p2i.ref.i64($p10);
    call {:si_unique_call 9390} {:cexpr "__cil_tmp62"} {:si_old_unique_call 4266} boogie_si_record_i64($i98);
    goto corral_source_split_8500;

  corral_source_split_8500:
    assume {:verifier.code 0} true;
    $i99 := $add.i64($i98, 1044);
    call {:si_unique_call 9391} {:cexpr "__cil_tmp63"} {:si_old_unique_call 4267} boogie_si_record_i64($i99);
    goto corral_source_split_8501;

  corral_source_split_8501:
    assume {:verifier.code 0} true;
    $p100 := $i2p.i64.ref($i99);
    goto corral_source_split_8502;

  corral_source_split_8502:
    assume {:verifier.code 0} true;
    havoc $i101;
    call {:si_unique_call 9392} {:cexpr "__cil_tmp64"} {:si_old_unique_call 4268} boogie_si_record_i32($i101);
    goto corral_source_split_8503;

  corral_source_split_8503:
    assume {:verifier.code 0} true;
    $i102 := $and.i32($i101, 131072);
    goto corral_source_split_8504;

  corral_source_split_8504:
    assume {:verifier.code 0} true;
    $i103 := $ne.i32($i102, 0);
    goto corral_source_split_8505;

  corral_source_split_8505:
    assume {:verifier.code 0} true;
    assume {:branchcond $i103} true;
    goto $bb49, $bb50;

  $bb50:
    assume !($i103 == 1);
    assume {:verifier.code 0} true;
    $i105 := $i97;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    goto corral_source_split_8510;

  corral_source_split_8510:
    assume {:verifier.code 0} true;
    $i106 := $trunc.i32.i8($i105);
    call {:si_unique_call 9393} {:cexpr "__cil_tmp65"} {:si_old_unique_call 4270} boogie_si_record_i8($i106);
    goto corral_source_split_8511;

  corral_source_split_8511:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9394} {:si_old_unique_call 4271} aty_st_8(196, $i106, $p10);
    goto corral_source_split_8512;

  corral_source_split_8512:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9395} {:si_old_unique_call 4272} aty_st_8(194, $sub.i8(0, 1), $p10);
    goto corral_source_split_8513;

  corral_source_split_8513:
    assume {:verifier.code 0} true;
    $i107 := $p2i.ref.i64($p10);
    call {:si_unique_call 9396} {:cexpr "__cil_tmp69"} {:si_old_unique_call 4273} boogie_si_record_i64($i107);
    goto corral_source_split_8514;

  corral_source_split_8514:
    assume {:verifier.code 0} true;
    $i108 := $add.i64($i107, 1044);
    call {:si_unique_call 9397} {:cexpr "__cil_tmp70"} {:si_old_unique_call 4274} boogie_si_record_i64($i108);
    goto corral_source_split_8515;

  corral_source_split_8515:
    assume {:verifier.code 0} true;
    $p109 := $i2p.i64.ref($i108);
    goto corral_source_split_8516;

  corral_source_split_8516:
    assume {:verifier.code 0} true;
    havoc $i110;
    call {:si_unique_call 9398} {:cexpr "__cil_tmp71"} {:si_old_unique_call 4275} boogie_si_record_i32($i110);
    goto corral_source_split_8517;

  corral_source_split_8517:
    assume {:verifier.code 0} true;
    $i111 := $and.i32($i110, 64);
    goto corral_source_split_8518;

  corral_source_split_8518:
    assume {:verifier.code 0} true;
    $i112 := $ne.i32($i111, 0);
    goto corral_source_split_8519;

  corral_source_split_8519:
    assume {:verifier.code 0} true;
    assume {:branchcond $i112} true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i112 == 1);
    assume {:verifier.code 0} true;
    $i156, $i157, $i158 := $i42, $i40, $i0;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_8582;

  corral_source_split_8582:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9399} {:si_old_unique_call 4306} aty_st_pal($i158, $i157, $i41, $i156, $p10);
    goto corral_source_split_8583;

  corral_source_split_8583:
    assume {:verifier.code 0} true;
    $i34 := 0;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_8383;

  corral_source_split_8383:
    assume {:verifier.code 0} true;
    $r := $i34;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb52:
    assume $i112 == 1;
    goto corral_source_split_8521;

  corral_source_split_8521:
    assume {:verifier.code 0} true;
    $i113 := $eq.i32($i28, 16);
    goto corral_source_split_8522;

  corral_source_split_8522:
    assume {:verifier.code 0} true;
    assume {:branchcond $i113} true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i113 == 1);
    goto corral_source_split_8527;

  corral_source_split_8527:
    assume {:verifier.code 0} true;
    $i149 := $eq.i32($i28, 15);
    goto corral_source_split_8528;

  corral_source_split_8528:
    assume {:verifier.code 0} true;
    assume {:branchcond $i149} true;
    goto $bb60, $bb61;

  $bb61:
    assume !($i149 == 1);
    assume {:verifier.code 0} true;
    $i155 := $i0;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i146, $i147, $i148 := $i42, $i40, $i155;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_8565;

  corral_source_split_8565:
    assume {:verifier.code 0} true;
    $i156, $i157, $i158 := $i146, $i147, $i148;
    goto $bb69;

  $bb60:
    assume $i149 == 1;
    goto corral_source_split_8567;

  corral_source_split_8567:
    assume {:verifier.code 0} true;
    $i150 := $shl.i32($i0, 3);
    call {:si_unique_call 9400} {:cexpr "regno"} {:si_old_unique_call 4302} boogie_si_record_i32($i150);
    goto corral_source_split_8568;

  corral_source_split_8568:
    assume {:verifier.code 0} true;
    $i151 := 0;
    goto $bb62;

  $bb62:
    call {:si_unique_call 9401} $i151, $i152, $i153, $i154 := atyfb_setcolreg_loop_$bb62($p10, $i40, $i41, $i42, $i150, $i151, $i152, $i153, $i154);
    LoopBound_AssertVar := false;
    goto $bb62_last;

  $bb62_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_8570;

  corral_source_split_8570:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    $i152 := $slt.i32($i151, 8);
    goto corral_source_split_8572;

  corral_source_split_8572:
    assume {:verifier.code 0} true;
    assume {:branchcond $i152} true;
    goto $bb64, $bb65;

  $bb65:
    assume !($i152 == 1);
    goto corral_source_split_8576;

  corral_source_split_8576:
    assume {:verifier.code 0} true;
    goto $bb67;

  $bb67:
    assume {:verifier.code 0} true;
    $i155 := $i150;
    goto $bb68;

  $bb64:
    assume $i152 == 1;
    goto corral_source_split_8574;

  corral_source_split_8574:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    $i153 := $add.i32($i150, $i151);
    call {:si_unique_call 9402} {:cexpr "__cil_tmp96"} {:si_old_unique_call 4303} boogie_si_record_i32($i153);
    goto corral_source_split_8578;

  corral_source_split_8578:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9403} {:si_old_unique_call 4304} aty_st_pal($i153, $i40, $i41, $i42, $p10);
    goto corral_source_split_8579;

  corral_source_split_8579:
    assume {:verifier.code 0} true;
    $i154 := $add.i32($i151, 1);
    call {:si_unique_call 9404} {:cexpr "i"} {:si_old_unique_call 4305} boogie_si_record_i32($i154);
    goto corral_source_split_8580;

  corral_source_split_8580:
    assume {:verifier.code 0} true;
    $i151 := $i154;
    goto corral_source_split_8580_dummy;

  corral_source_split_8580_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb54:
    assume $i113 == 1;
    goto corral_source_split_8524;

  corral_source_split_8524:
    assume {:verifier.code 0} true;
    $i114 := $ult.i32($i0, 32);
    goto corral_source_split_8525;

  corral_source_split_8525:
    assume {:verifier.code 0} true;
    assume {:branchcond $i114} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i114 == 1);
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    $i126 := $lshr.i32($i0, 1);
    call {:si_unique_call 9405} {:cexpr "__cil_tmp82"} {:si_old_unique_call 4286} boogie_si_record_i32($i126);
    goto corral_source_split_8544;

  corral_source_split_8544:
    assume {:verifier.code 0} true;
    $i127 := $zext.i32.i64($i126);
    goto corral_source_split_8545;

  corral_source_split_8545:
    assume {:verifier.code 0} true;
    $i128 := $mul.i64($i127, 3);
    call {:si_unique_call 9406} {:cexpr "__cil_tmp83"} {:si_old_unique_call 4287} boogie_si_record_i64($i128);
    goto corral_source_split_8546;

  corral_source_split_8546:
    assume {:verifier.code 0} true;
    $i129 := $add.i64(64, $i128);
    call {:si_unique_call 9407} {:cexpr "__cil_tmp84"} {:si_old_unique_call 4288} boogie_si_record_i64($i129);
    goto corral_source_split_8547;

  corral_source_split_8547:
    assume {:verifier.code 0} true;
    $i130 := $p2i.ref.i64($p10);
    call {:si_unique_call 9408} {:cexpr "__cil_tmp85"} {:si_old_unique_call 4289} boogie_si_record_i64($i130);
    goto corral_source_split_8548;

  corral_source_split_8548:
    assume {:verifier.code 0} true;
    $i131 := $add.i64($i130, $i129);
    call {:si_unique_call 9409} {:cexpr "__cil_tmp86"} {:si_old_unique_call 4290} boogie_si_record_i64($i131);
    goto corral_source_split_8549;

  corral_source_split_8549:
    assume {:verifier.code 0} true;
    $p132 := $i2p.i64.ref($i131);
    goto corral_source_split_8550;

  corral_source_split_8550:
    assume {:verifier.code 0} true;
    havoc $i133;
    call {:si_unique_call 9410} {:cexpr "__cil_tmp87"} {:si_old_unique_call 4291} boogie_si_record_i8($i133);
    goto corral_source_split_8551;

  corral_source_split_8551:
    assume {:verifier.code 0} true;
    $i134 := $zext.i8.i32($i133);
    call {:si_unique_call 9411} {:cexpr "red"} {:si_old_unique_call 4292} boogie_si_record_i32($i134);
    goto corral_source_split_8552;

  corral_source_split_8552:
    assume {:verifier.code 0} true;
    $i135 := $lshr.i32($i0, 1);
    call {:si_unique_call 9412} {:cexpr "__cil_tmp88"} {:si_old_unique_call 4293} boogie_si_record_i32($i135);
    goto corral_source_split_8553;

  corral_source_split_8553:
    assume {:verifier.code 0} true;
    $i136 := $zext.i32.i64($i135);
    goto corral_source_split_8554;

  corral_source_split_8554:
    assume {:verifier.code 0} true;
    $i137 := $mul.i64($i136, 3);
    call {:si_unique_call 9413} {:cexpr "__cil_tmp89"} {:si_old_unique_call 4294} boogie_si_record_i64($i137);
    goto corral_source_split_8555;

  corral_source_split_8555:
    assume {:verifier.code 0} true;
    $i138 := $add.i64($i137, 2);
    call {:si_unique_call 9414} {:cexpr "__cil_tmp90"} {:si_old_unique_call 4295} boogie_si_record_i64($i138);
    goto corral_source_split_8556;

  corral_source_split_8556:
    assume {:verifier.code 0} true;
    $i139 := $add.i64(64, $i138);
    call {:si_unique_call 9415} {:cexpr "__cil_tmp91"} {:si_old_unique_call 4296} boogie_si_record_i64($i139);
    goto corral_source_split_8557;

  corral_source_split_8557:
    assume {:verifier.code 0} true;
    $i140 := $p2i.ref.i64($p10);
    call {:si_unique_call 9416} {:cexpr "__cil_tmp92"} {:si_old_unique_call 4297} boogie_si_record_i64($i140);
    goto corral_source_split_8558;

  corral_source_split_8558:
    assume {:verifier.code 0} true;
    $i141 := $add.i64($i140, $i139);
    call {:si_unique_call 9417} {:cexpr "__cil_tmp93"} {:si_old_unique_call 4298} boogie_si_record_i64($i141);
    goto corral_source_split_8559;

  corral_source_split_8559:
    assume {:verifier.code 0} true;
    $p142 := $i2p.i64.ref($i141);
    goto corral_source_split_8560;

  corral_source_split_8560:
    assume {:verifier.code 0} true;
    havoc $i143;
    call {:si_unique_call 9418} {:cexpr "__cil_tmp94"} {:si_old_unique_call 4299} boogie_si_record_i8($i143);
    goto corral_source_split_8561;

  corral_source_split_8561:
    assume {:verifier.code 0} true;
    $i144 := $zext.i8.i32($i143);
    call {:si_unique_call 9419} {:cexpr "blue"} {:si_old_unique_call 4300} boogie_si_record_i32($i144);
    goto corral_source_split_8562;

  corral_source_split_8562:
    assume {:verifier.code 0} true;
    $i145 := $shl.i32($i0, 2);
    call {:si_unique_call 9420} {:cexpr "regno"} {:si_old_unique_call 4301} boogie_si_record_i32($i145);
    goto corral_source_split_8563;

  corral_source_split_8563:
    assume {:verifier.code 0} true;
    $i146, $i147, $i148 := $i144, $i134, $i145;
    goto $bb59;

  $bb56:
    assume $i114 == 1;
    goto corral_source_split_8530;

  corral_source_split_8530:
    assume {:verifier.code 0} true;
    $i115 := $shl.i32($i0, 3);
    call {:si_unique_call 9421} {:cexpr "__cil_tmp72"} {:si_old_unique_call 4276} boogie_si_record_i32($i115);
    goto corral_source_split_8531;

  corral_source_split_8531:
    assume {:verifier.code 0} true;
    $i116 := $shl.i32($i0, 1);
    call {:si_unique_call 9422} {:cexpr "__cil_tmp73"} {:si_old_unique_call 4277} boogie_si_record_i32($i116);
    goto corral_source_split_8532;

  corral_source_split_8532:
    assume {:verifier.code 0} true;
    $i117 := $zext.i32.i64($i116);
    goto corral_source_split_8533;

  corral_source_split_8533:
    assume {:verifier.code 0} true;
    $i118 := $mul.i64($i117, 3);
    call {:si_unique_call 9423} {:cexpr "__cil_tmp74"} {:si_old_unique_call 4278} boogie_si_record_i64($i118);
    goto corral_source_split_8534;

  corral_source_split_8534:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 1);
    call {:si_unique_call 9424} {:cexpr "__cil_tmp75"} {:si_old_unique_call 4279} boogie_si_record_i64($i119);
    goto corral_source_split_8535;

  corral_source_split_8535:
    assume {:verifier.code 0} true;
    $i120 := $add.i64(64, $i119);
    call {:si_unique_call 9425} {:cexpr "__cil_tmp76"} {:si_old_unique_call 4280} boogie_si_record_i64($i120);
    goto corral_source_split_8536;

  corral_source_split_8536:
    assume {:verifier.code 0} true;
    $i121 := $p2i.ref.i64($p10);
    call {:si_unique_call 9426} {:cexpr "__cil_tmp77"} {:si_old_unique_call 4281} boogie_si_record_i64($i121);
    goto corral_source_split_8537;

  corral_source_split_8537:
    assume {:verifier.code 0} true;
    $i122 := $add.i64($i121, $i120);
    call {:si_unique_call 9427} {:cexpr "__cil_tmp78"} {:si_old_unique_call 4282} boogie_si_record_i64($i122);
    goto corral_source_split_8538;

  corral_source_split_8538:
    assume {:verifier.code 0} true;
    $p123 := $i2p.i64.ref($i122);
    goto corral_source_split_8539;

  corral_source_split_8539:
    assume {:verifier.code 0} true;
    havoc $i124;
    call {:si_unique_call 9428} {:cexpr "__cil_tmp79"} {:si_old_unique_call 4283} boogie_si_record_i8($i124);
    goto corral_source_split_8540;

  corral_source_split_8540:
    assume {:verifier.code 0} true;
    $i125 := $zext.i8.i32($i124);
    call {:si_unique_call 9429} {:cexpr "__cil_tmp80"} {:si_old_unique_call 4284} boogie_si_record_i32($i125);
    goto corral_source_split_8541;

  corral_source_split_8541:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9430} {:si_old_unique_call 4285} aty_st_pal($i115, $i40, $i125, $i42, $p10);
    goto corral_source_split_8542;

  corral_source_split_8542:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb49:
    assume $i103 == 1;
    goto corral_source_split_8507;

  corral_source_split_8507:
    assume {:verifier.code 0} true;
    $i104 := $or.i32($i97, 2);
    call {:si_unique_call 9431} {:cexpr "i"} {:si_old_unique_call 4269} boogie_si_record_i32($i104);
    goto corral_source_split_8508;

  corral_source_split_8508:
    assume {:verifier.code 0} true;
    $i105 := $i104;
    goto $bb51;

  $bb26:
    assume $i66 == 1;
    goto corral_source_split_8439;

  corral_source_split_8439:
    assume {:verifier.code 0} true;
    $i67 := $eq.i32($i28, 15);
    goto corral_source_split_8440;

  corral_source_split_8440:
    assume {:verifier.code 0} true;
    assume {:branchcond $i67} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i67 == 1);
    goto corral_source_split_8444;

  corral_source_split_8444:
    assume {:verifier.code 0} true;
    $i68 := $eq.i32($i28, 16);
    goto corral_source_split_8445;

  corral_source_split_8445:
    assume {:verifier.code 0} true;
    assume {:branchcond $i68} true;
    goto $bb31, $bb32;

  $bb32:
    assume !($i68 == 1);
    goto corral_source_split_8457;

  corral_source_split_8457:
    assume {:verifier.code 0} true;
    $i69 := $eq.i32($i28, 24);
    goto corral_source_split_8458;

  corral_source_split_8458:
    assume {:verifier.code 0} true;
    assume {:branchcond $i69} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i69 == 1);
    goto corral_source_split_8470;

  corral_source_split_8470:
    assume {:verifier.code 0} true;
    $i70 := $eq.i32($i28, 32);
    goto corral_source_split_8471;

  corral_source_split_8471:
    assume {:verifier.code 0} true;
    assume {:branchcond $i70} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i70 == 1);
    goto corral_source_split_8483;

  corral_source_split_8483:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb40, $bb41;

  $bb41:
    assume !(0 == 1);
    goto corral_source_split_8495;

  corral_source_split_8495:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb40:
    assume 0 == 1;
    goto corral_source_split_8493;

  corral_source_split_8493:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    $i71 := $zext.i32.i64($i0);
    goto corral_source_split_8447;

  corral_source_split_8447:
    assume {:verifier.code 0} true;
    $p72 := $add.ref($p15, $mul.ref($i71, 4));
    goto corral_source_split_8448;

  corral_source_split_8448:
    assume {:verifier.code 0} true;
    $i73 := $shl.i32($i0, 5);
    call {:si_unique_call 9432} {:cexpr "__cil_tmp44"} {:si_old_unique_call 4249} boogie_si_record_i32($i73);
    goto corral_source_split_8449;

  corral_source_split_8449:
    assume {:verifier.code 0} true;
    $i74 := $shl.i32($i0, 10);
    call {:si_unique_call 9433} {:cexpr "__cil_tmp45"} {:si_old_unique_call 4250} boogie_si_record_i32($i74);
    goto corral_source_split_8450;

  corral_source_split_8450:
    assume {:verifier.code 0} true;
    $i75 := $or.i32($i74, $i73);
    call {:si_unique_call 9434} {:cexpr "__cil_tmp46"} {:si_old_unique_call 4251} boogie_si_record_i32($i75);
    goto corral_source_split_8451;

  corral_source_split_8451:
    assume {:verifier.code 0} true;
    $i76 := $or.i32($i75, $i0);
    goto corral_source_split_8452;

  corral_source_split_8452:
    assume {:verifier.code 0} true;
    goto corral_source_split_8453;

  corral_source_split_8453:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb37:
    assume $i70 == 1;
    goto corral_source_split_8481;

  corral_source_split_8481:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i89 := $shl.i32($i0, 8);
    call {:si_unique_call 9435} {:cexpr "__cil_tmp55"} {:si_old_unique_call 4258} boogie_si_record_i32($i89);
    goto corral_source_split_8485;

  corral_source_split_8485:
    assume {:verifier.code 0} true;
    $i90 := $or.i32($i89, $i0);
    call {:si_unique_call 9436} {:cexpr "__cil_tmp56"} {:si_old_unique_call 4259} boogie_si_record_i32($i90);
    goto corral_source_split_8486;

  corral_source_split_8486:
    assume {:verifier.code 0} true;
    $i91 := $zext.i32.i64($i0);
    goto corral_source_split_8487;

  corral_source_split_8487:
    assume {:verifier.code 0} true;
    $p92 := $add.ref($p15, $mul.ref($i91, 4));
    goto corral_source_split_8488;

  corral_source_split_8488:
    assume {:verifier.code 0} true;
    $i93 := $shl.i32($i90, 16);
    call {:si_unique_call 9437} {:cexpr "__cil_tmp58"} {:si_old_unique_call 4260} boogie_si_record_i32($i93);
    goto corral_source_split_8489;

  corral_source_split_8489:
    assume {:verifier.code 0} true;
    $i94 := $or.i32($i93, $i90);
    call {:si_unique_call 9438} {:cexpr "__cil_tmp59"} {:si_old_unique_call 4261} boogie_si_record_i32($i94);
    goto corral_source_split_8490;

  corral_source_split_8490:
    assume {:verifier.code 0} true;
    goto corral_source_split_8491;

  corral_source_split_8491:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb34:
    assume $i69 == 1;
    goto corral_source_split_8468;

  corral_source_split_8468:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i83 := $zext.i32.i64($i0);
    goto corral_source_split_8473;

  corral_source_split_8473:
    assume {:verifier.code 0} true;
    $p84 := $add.ref($p15, $mul.ref($i83, 4));
    goto corral_source_split_8474;

  corral_source_split_8474:
    assume {:verifier.code 0} true;
    $i85 := $shl.i32($i0, 8);
    call {:si_unique_call 9439} {:cexpr "__cil_tmp52"} {:si_old_unique_call 4255} boogie_si_record_i32($i85);
    goto corral_source_split_8475;

  corral_source_split_8475:
    assume {:verifier.code 0} true;
    $i86 := $shl.i32($i0, 16);
    call {:si_unique_call 9440} {:cexpr "__cil_tmp53"} {:si_old_unique_call 4256} boogie_si_record_i32($i86);
    goto corral_source_split_8476;

  corral_source_split_8476:
    assume {:verifier.code 0} true;
    $i87 := $or.i32($i86, $i85);
    call {:si_unique_call 9441} {:cexpr "__cil_tmp54"} {:si_old_unique_call 4257} boogie_si_record_i32($i87);
    goto corral_source_split_8477;

  corral_source_split_8477:
    assume {:verifier.code 0} true;
    $i88 := $or.i32($i87, $i0);
    goto corral_source_split_8478;

  corral_source_split_8478:
    assume {:verifier.code 0} true;
    goto corral_source_split_8479;

  corral_source_split_8479:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb31:
    assume $i68 == 1;
    goto corral_source_split_8455;

  corral_source_split_8455:
    assume {:verifier.code 0} true;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    $i77 := $zext.i32.i64($i0);
    goto corral_source_split_8460;

  corral_source_split_8460:
    assume {:verifier.code 0} true;
    $p78 := $add.ref($p15, $mul.ref($i77, 4));
    goto corral_source_split_8461;

  corral_source_split_8461:
    assume {:verifier.code 0} true;
    $i79 := $shl.i32($i0, 5);
    call {:si_unique_call 9442} {:cexpr "__cil_tmp48"} {:si_old_unique_call 4252} boogie_si_record_i32($i79);
    goto corral_source_split_8462;

  corral_source_split_8462:
    assume {:verifier.code 0} true;
    $i80 := $shl.i32($i0, 11);
    call {:si_unique_call 9443} {:cexpr "__cil_tmp49"} {:si_old_unique_call 4253} boogie_si_record_i32($i80);
    goto corral_source_split_8463;

  corral_source_split_8463:
    assume {:verifier.code 0} true;
    $i81 := $or.i32($i80, $i79);
    call {:si_unique_call 9444} {:cexpr "__cil_tmp50"} {:si_old_unique_call 4254} boogie_si_record_i32($i81);
    goto corral_source_split_8464;

  corral_source_split_8464:
    assume {:verifier.code 0} true;
    $i82 := $or.i32($i81, $i0);
    goto corral_source_split_8465;

  corral_source_split_8465:
    assume {:verifier.code 0} true;
    goto corral_source_split_8466;

  corral_source_split_8466:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb28:
    assume $i67 == 1;
    goto corral_source_split_8442;

  corral_source_split_8442:
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb18:
    assume $i38 == 1;
    goto corral_source_split_8403;

  corral_source_split_8403:
    assume {:verifier.code 0} true;
    $i39 := $ugt.i32($i0, 31);
    goto corral_source_split_8404;

  corral_source_split_8404:
    assume {:verifier.code 0} true;
    assume {:branchcond $i39} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i39 == 1);
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb20:
    assume $i39 == 1;
    goto corral_source_split_8406;

  corral_source_split_8406:
    assume {:verifier.code 0} true;
    $i34 := 1;
    goto $bb9;

  $bb13:
    assume $i36 == 1;
    goto corral_source_split_8392;

  corral_source_split_8392:
    assume {:verifier.code 0} true;
    $i37 := $ugt.i32($i0, 63);
    goto corral_source_split_8393;

  corral_source_split_8393:
    assume {:verifier.code 0} true;
    assume {:branchcond $i37} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i37 == 1);
    goto corral_source_split_8399;

  corral_source_split_8399:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb15:
    assume $i37 == 1;
    goto corral_source_split_8397;

  corral_source_split_8397:
    assume {:verifier.code 0} true;
    $i34 := 1;
    goto $bb9;

  $bb11:
    assume $i35 == 1;
    goto corral_source_split_8387;

  corral_source_split_8387:
    assume {:verifier.code 0} true;
    $i34 := 1;
    goto $bb9;

  $bb7:
    assume $i33 == 1;
    goto corral_source_split_8381;

  corral_source_split_8381:
    assume {:verifier.code 0} true;
    $i34 := 0;
    goto $bb9;

  $bb1:
    assume $i20 == 1;
    goto corral_source_split_8362;

  corral_source_split_8362:
    assume {:verifier.code 0} true;
    $i21 := $add.i64(160, 48);
    call {:si_unique_call 9445} {:cexpr "__cil_tmp23"} {:si_old_unique_call 4226} boogie_si_record_i64($i21);
    goto corral_source_split_8363;

  corral_source_split_8363:
    assume {:verifier.code 0} true;
    $i22 := $p2i.ref.i64($p5);
    call {:si_unique_call 9446} {:cexpr "__cil_tmp24"} {:si_old_unique_call 4227} boogie_si_record_i64($i22);
    goto corral_source_split_8364;

  corral_source_split_8364:
    assume {:verifier.code 0} true;
    $i23 := $add.i64($i22, $i21);
    call {:si_unique_call 9447} {:cexpr "__cil_tmp25"} {:si_old_unique_call 4228} boogie_si_record_i64($i23);
    goto corral_source_split_8365;

  corral_source_split_8365:
    assume {:verifier.code 0} true;
    $p24 := $i2p.i64.ref($i23);
    goto corral_source_split_8366;

  corral_source_split_8366:
    assume {:verifier.code 0} true;
    havoc $i25;
    call {:si_unique_call 9448} {:cexpr "__cil_tmp26"} {:si_old_unique_call 4229} boogie_si_record_i32($i25);
    goto corral_source_split_8367;

  corral_source_split_8367:
    assume {:verifier.code 0} true;
    $i26 := $eq.i32($i25, 5);
    goto corral_source_split_8368;

  corral_source_split_8368:
    assume {:verifier.code 0} true;
    assume {:branchcond $i26} true;
    goto $bb3, $bb4;

  $bb4:
    assume !($i26 == 1);
    assume {:verifier.code 0} true;
    $i27 := 16;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_8372;

  corral_source_split_8372:
    assume {:verifier.code 0} true;
    $i28 := $i27;
    goto $bb6;

  $bb3:
    assume $i26 == 1;
    goto corral_source_split_8370;

  corral_source_split_8370:
    assume {:verifier.code 0} true;
    $i27 := 15;
    goto $bb5;
}



implementation {:LB_Mapping "atyfb_imageblit_loop_$bb111"} {:entrypoint} atyfb_imageblit_EntryCopy_atyfb_imageblit_loop_$bb111($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i1;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i32;
  var $i56: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i1;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i76: i32;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i1;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i32;
  var $i109: i32;
  var $i110: i1;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i124: i64;
  var $i125: i64;
  var $p126: ref;
  var $i127: i32;
  var $i128: i1;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i64;
  var $p139: ref;
  var $i140: i32;
  var $i141: i64;
  var $i142: i64;
  var $p143: ref;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i64;
  var $p151: ref;
  var $i152: i32;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i1;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i64;
  var $p170: ref;
  var $i171: i32;
  var $i172: i64;
  var $i173: i64;
  var $p174: ref;
  var $i175: i32;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $i181: i64;
  var $p182: ref;
  var $i183: i32;
  var $i186: i64;
  var $i187: i64;
  var $p188: ref;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i32;
  var $i184: i32;
  var $i185: i32;
  var $i153: i32;
  var $i154: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i16;
  var $i199: i16;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $i203: i32;
  var $i204: i16;
  var $i205: i64;
  var $i206: i64;
  var $p207: ref;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $p211: ref;
  var $i212: i8;
  var $i213: i32;
  var $i214: i64;
  var $i215: i64;
  var $p216: ref;
  var $i217: i32;
  var $i218: i32;
  var $i219: i32;
  var $i220: i32;
  var $i221: i32;
  var $i222: i64;
  var $i223: i64;
  var $p224: ref;
  var $i225: i32;
  var $i226: i1;
  var $i227: i32;
  var $i228: i1;
  var $i229: i64;
  var $i230: i64;
  var $p231: ref;
  var $p232: ref;
  var $i233: i64;
  var $i234: i64;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $i238: i32;
  var $i239: i32;
  var $p240: ref;
  var $i241: i32;
  var $i242: i1;
  var $p243: ref;
  var $i244: i32;
  var $i245: i32;
  var $i246: i32;
  var $i247: i32;
  var $p248: ref;
  var $i249: i32;
  var $p250: ref;
  var $i251: i1;
  var $i257: i1;
  var $i258: i32;
  var $i259: i32;
  var $i260: i32;
  var $p261: ref;
  var $i262: i32;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $p255: ref;
  var $i256: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i32;
  var $i271: i32;
  var $p272: ref;
  var $i273: i32;
  var $i274: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i32;
  var $p278: ref;
  var $i279: i32;
  var $i280: i8;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i32;
  var $i285: i8;
  var $i286: i32;
  var $i287: i32;
  var $i288: i8;
  var $i289: i32;
  var $i290: i1;
  var $i291: i32;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i32;
  var $i296: i1;
  var $i297: i1;
  var $i298: i32;
  var $p299: ref;
  var $i300: i1;
  var $i301: i64;
  var $i302: i64;
  var $p303: ref;
  var $i304: i32;
  var $i305: i32;
  var $i306: i32;
  var $i307: i32;
  var $i308: i32;
  var $i309: i32;
  var $p310: ref;
  var $i311: i32;
  var $i312: i32;
  var $i313: i32;
  var $p314: ref;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $p266: ref;
  var $i267: i32;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i64;
  var $i319: i64;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i32;
  var $i325: i1;
  var $i326: i32;
  var $i327: i32;
  var $p328: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 9653} {:si_old_unique_call 4511} $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    goto corral_source_split_8968;

  corral_source_split_8968:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p0);
    call {:si_unique_call 9654} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4512} boogie_si_record_i64($i3);
    goto corral_source_split_8969;

  corral_source_split_8969:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 1160);
    call {:si_unique_call 9655} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4513} boogie_si_record_i64($i4);
    goto corral_source_split_8970;

  corral_source_split_8970:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_8971;

  corral_source_split_8971:
    assume {:verifier.code 0} true;
    havoc $p6;
    goto corral_source_split_8972;

  corral_source_split_8972:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p6);
    goto corral_source_split_8973;

  corral_source_split_8973:
    assume {:verifier.code 0} true;
    $p8 := $bitcast.ref.ref($p1);
    goto corral_source_split_8974;

  corral_source_split_8974:
    assume {:verifier.code 0} true;
    havoc $i9;
    call {:si_unique_call 9656} {:cexpr "__cil_tmp31"} {:si_old_unique_call 4514} boogie_si_record_i32($i9);
    goto corral_source_split_8975;

  corral_source_split_8975:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p1);
    call {:si_unique_call 9657} {:cexpr "__cil_tmp32"} {:si_old_unique_call 4515} boogie_si_record_i64($i10);
    goto corral_source_split_8976;

  corral_source_split_8976:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 4);
    call {:si_unique_call 9658} {:cexpr "__cil_tmp33"} {:si_old_unique_call 4516} boogie_si_record_i64($i11);
    goto corral_source_split_8977;

  corral_source_split_8977:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_8978;

  corral_source_split_8978:
    assume {:verifier.code 0} true;
    havoc $i13;
    call {:si_unique_call 9659} {:cexpr "__cil_tmp34"} {:si_old_unique_call 4517} boogie_si_record_i32($i13);
    goto corral_source_split_8979;

  corral_source_split_8979:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p1);
    call {:si_unique_call 9660} {:cexpr "__cil_tmp35"} {:si_old_unique_call 4518} boogie_si_record_i64($i14);
    goto corral_source_split_8980;

  corral_source_split_8980:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 8);
    call {:si_unique_call 9661} {:cexpr "__cil_tmp36"} {:si_old_unique_call 4519} boogie_si_record_i64($i15);
    goto corral_source_split_8981;

  corral_source_split_8981:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_8982;

  corral_source_split_8982:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 9662} {:cexpr "__cil_tmp37"} {:si_old_unique_call 4520} boogie_si_record_i32($i17);
    goto corral_source_split_8983;

  corral_source_split_8983:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p7);
    call {:si_unique_call 9663} {:cexpr "__cil_tmp38"} {:si_old_unique_call 4521} boogie_si_record_i64($i18);
    goto corral_source_split_8984;

  corral_source_split_8984:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 1080);
    call {:si_unique_call 9664} {:cexpr "__cil_tmp39"} {:si_old_unique_call 4522} boogie_si_record_i64($i19);
    goto corral_source_split_8985;

  corral_source_split_8985:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_8986;

  corral_source_split_8986:
    assume {:verifier.code 0} true;
    havoc $i21;
    goto corral_source_split_8987;

  corral_source_split_8987:
    assume {:verifier.code 0} true;
    $i22 := $ne.i32($i21, 0);
    goto corral_source_split_8988;

  corral_source_split_8988:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 9665} {:cexpr "__cil_tmp40"} {:si_old_unique_call 4523} boogie_si_record_i64($i23);
    goto corral_source_split_8992;

  corral_source_split_8992:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 8);
    call {:si_unique_call 9666} {:cexpr "__cil_tmp41"} {:si_old_unique_call 4524} boogie_si_record_i64($i24);
    goto corral_source_split_8993;

  corral_source_split_8993:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_8994;

  corral_source_split_8994:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 9667} {:cexpr "__cil_tmp42"} {:si_old_unique_call 4525} boogie_si_record_i32($i26);
    goto corral_source_split_8995;

  corral_source_split_8995:
    assume {:verifier.code 0} true;
    $i27 := $ne.i32($i26, 0);
    goto corral_source_split_8996;

  corral_source_split_8996:
    assume {:verifier.code 0} true;
    assume {:branchcond $i27} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i27 == 1);
    goto corral_source_split_9005;

  corral_source_split_9005:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb5:
    assume $i27 == 1;
    goto corral_source_split_8998;

  corral_source_split_8998:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p1);
    call {:si_unique_call 9668} {:cexpr "__cil_tmp43"} {:si_old_unique_call 4526} boogie_si_record_i64($i28);
    goto corral_source_split_8999;

  corral_source_split_8999:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 12);
    call {:si_unique_call 9669} {:cexpr "__cil_tmp44"} {:si_old_unique_call 4527} boogie_si_record_i64($i29);
    goto corral_source_split_9000;

  corral_source_split_9000:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_9001;

  corral_source_split_9001:
    assume {:verifier.code 0} true;
    havoc $i31;
    call {:si_unique_call 9670} {:cexpr "__cil_tmp45"} {:si_old_unique_call 4528} boogie_si_record_i32($i31);
    goto corral_source_split_9002;

  corral_source_split_9002:
    assume {:verifier.code 0} true;
    $i32 := $ne.i32($i31, 0);
    goto corral_source_split_9003;

  corral_source_split_9003:
    assume {:verifier.code 0} true;
    assume {:branchcond $i32} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i32 == 1);
    goto corral_source_split_9007;

  corral_source_split_9007:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb7:
    assume $i32 == 1;
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p7);
    call {:si_unique_call 9671} {:cexpr "__cil_tmp46"} {:si_old_unique_call 4529} boogie_si_record_i64($i33);
    goto corral_source_split_9009;

  corral_source_split_9009:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 1072);
    call {:si_unique_call 9672} {:cexpr "__cil_tmp47"} {:si_old_unique_call 4530} boogie_si_record_i64($i34);
    goto corral_source_split_9010;

  corral_source_split_9010:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_9011;

  corral_source_split_9011:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 9673} {:cexpr "__cil_tmp48"} {:si_old_unique_call 4531} boogie_si_record_i32($i36);
    goto corral_source_split_9012;

  corral_source_split_9012:
    assume {:verifier.code 0} true;
    $i37 := $ne.i32($i36, 0);
    goto corral_source_split_9013;

  corral_source_split_9013:
    assume {:verifier.code 0} true;
    assume {:branchcond $i37} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i37 == 1);
    goto corral_source_split_9023;

  corral_source_split_9023:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9674} {:si_old_unique_call 4536} cfb_imageblit($p0, $p1);
    goto corral_source_split_9024;

  corral_source_split_9024:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb11:
    assume $i37 == 1;
    goto corral_source_split_9015;

  corral_source_split_9015:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p1);
    call {:si_unique_call 9675} {:cexpr "__cil_tmp49"} {:si_old_unique_call 4532} boogie_si_record_i64($i38);
    goto corral_source_split_9016;

  corral_source_split_9016:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 9676} {:cexpr "__cil_tmp50"} {:si_old_unique_call 4533} boogie_si_record_i64($i39);
    goto corral_source_split_9017;

  corral_source_split_9017:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_9018;

  corral_source_split_9018:
    assume {:verifier.code 0} true;
    havoc $i41;
    call {:si_unique_call 9677} {:cexpr "__cil_tmp51"} {:si_old_unique_call 4534} boogie_si_record_i8($i41);
    goto corral_source_split_9019;

  corral_source_split_9019:
    assume {:verifier.code 0} true;
    $i42 := $zext.i8.i32($i41);
    call {:si_unique_call 9678} {:cexpr "__cil_tmp52"} {:si_old_unique_call 4535} boogie_si_record_i32($i42);
    goto corral_source_split_9020;

  corral_source_split_9020:
    assume {:verifier.code 0} true;
    $i43 := $ne.i32($i42, 1);
    goto corral_source_split_9021;

  corral_source_split_9021:
    assume {:verifier.code 0} true;
    assume {:branchcond $i43} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i43 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9679} {:si_old_unique_call 4545} $i54 := aty_ld_le32(720, $p7);
    call {:si_unique_call 9680} {:cexpr "pix_width_save"} {:si_old_unique_call 4546} boogie_si_record_i32($i54);
    goto corral_source_split_9041;

  corral_source_split_9041:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9681} {:si_old_unique_call 4547} $i55 := aty_ld_le32(576, $p7);
    call {:si_unique_call 9682} {:cexpr "tmp___7"} {:si_old_unique_call 4548} boogie_si_record_i32($i55);
    goto corral_source_split_9042;

  corral_source_split_9042:
    assume {:verifier.code 0} true;
    $i56 := $or.i32($i55, 1);
    call {:si_unique_call 9683} {:cexpr "host_cntl"} {:si_old_unique_call 4549} boogie_si_record_i32($i56);
    goto corral_source_split_9043;

  corral_source_split_9043:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p1);
    call {:si_unique_call 9684} {:cexpr "__cil_tmp63"} {:si_old_unique_call 4550} boogie_si_record_i64($i57);
    goto corral_source_split_9044;

  corral_source_split_9044:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 24);
    call {:si_unique_call 9685} {:cexpr "__cil_tmp64"} {:si_old_unique_call 4551} boogie_si_record_i64($i58);
    goto corral_source_split_9045;

  corral_source_split_9045:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_9046;

  corral_source_split_9046:
    assume {:verifier.code 0} true;
    havoc $i60;
    call {:si_unique_call 9686} {:cexpr "__cil_tmp65"} {:si_old_unique_call 4552} boogie_si_record_i8($i60);
    goto corral_source_split_9047;

  corral_source_split_9047:
    assume {:verifier.code 0} true;
    $i61 := $zext.i8.i32($i60);
    goto corral_source_split_9048;

  corral_source_split_9048:
    assume {:verifier.code 0} true;
    $i62 := $eq.i32($i61, 1);
    goto corral_source_split_9049;

  corral_source_split_9049:
    assume {:verifier.code 0} true;
    assume {:branchcond $i62} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i62 == 1);
    goto corral_source_split_9053;

  corral_source_split_9053:
    assume {:verifier.code 0} true;
    $i63 := $zext.i8.i32($i60);
    goto corral_source_split_9054;

  corral_source_split_9054:
    assume {:verifier.code 0} true;
    $i64 := $eq.i32($i63, 4);
    goto corral_source_split_9055;

  corral_source_split_9055:
    assume {:verifier.code 0} true;
    assume {:branchcond $i64} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i64 == 1);
    goto corral_source_split_9061;

  corral_source_split_9061:
    assume {:verifier.code 0} true;
    $i65 := $zext.i8.i32($i60);
    goto corral_source_split_9062;

  corral_source_split_9062:
    assume {:verifier.code 0} true;
    $i66 := $eq.i32($i65, 8);
    goto corral_source_split_9063;

  corral_source_split_9063:
    assume {:verifier.code 0} true;
    assume {:branchcond $i66} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i66 == 1);
    goto corral_source_split_9070;

  corral_source_split_9070:
    assume {:verifier.code 0} true;
    $i67 := $zext.i8.i32($i60);
    goto corral_source_split_9071;

  corral_source_split_9071:
    assume {:verifier.code 0} true;
    $i68 := $eq.i32($i67, 15);
    goto corral_source_split_9072;

  corral_source_split_9072:
    assume {:verifier.code 0} true;
    assume {:branchcond $i68} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i68 == 1);
    goto corral_source_split_9079;

  corral_source_split_9079:
    assume {:verifier.code 0} true;
    $i69 := $zext.i8.i32($i60);
    goto corral_source_split_9080;

  corral_source_split_9080:
    assume {:verifier.code 0} true;
    $i70 := $eq.i32($i69, 16);
    goto corral_source_split_9081;

  corral_source_split_9081:
    assume {:verifier.code 0} true;
    assume {:branchcond $i70} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i70 == 1);
    goto corral_source_split_9088;

  corral_source_split_9088:
    assume {:verifier.code 0} true;
    $i71 := $zext.i8.i32($i60);
    goto corral_source_split_9089;

  corral_source_split_9089:
    assume {:verifier.code 0} true;
    $i72 := $eq.i32($i71, 24);
    goto corral_source_split_9090;

  corral_source_split_9090:
    assume {:verifier.code 0} true;
    assume {:branchcond $i72} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i72 == 1);
    goto corral_source_split_9097;

  corral_source_split_9097:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i60);
    goto corral_source_split_9098;

  corral_source_split_9098:
    assume {:verifier.code 0} true;
    $i74 := $eq.i32($i73, 32);
    goto corral_source_split_9099;

  corral_source_split_9099:
    assume {:verifier.code 0} true;
    assume {:branchcond $i74} true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i74 == 1);
    goto corral_source_split_9106;

  corral_source_split_9106:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb41, $bb42;

  $bb42:
    assume !(0 == 1);
    goto corral_source_split_9113;

  corral_source_split_9113:
    assume {:verifier.code 0} true;
    $i76 := $i54;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $i89 := $p2i.ref.i64($p0);
    call {:si_unique_call 9687} {:cexpr "__cil_tmp67"} {:si_old_unique_call 4566} boogie_si_record_i64($i89);
    goto corral_source_split_9115;

  corral_source_split_9115:
    assume {:verifier.code 0} true;
    $i90 := $add.i64($i89, 184);
    call {:si_unique_call 9688} {:cexpr "__cil_tmp68"} {:si_old_unique_call 4567} boogie_si_record_i64($i90);
    goto corral_source_split_9116;

  corral_source_split_9116:
    assume {:verifier.code 0} true;
    $p91 := $i2p.i64.ref($i90);
    goto corral_source_split_9117;

  corral_source_split_9117:
    assume {:verifier.code 0} true;
    havoc $i92;
    call {:si_unique_call 9689} {:cexpr "__cil_tmp69"} {:si_old_unique_call 4568} boogie_si_record_i32($i92);
    goto corral_source_split_9118;

  corral_source_split_9118:
    assume {:verifier.code 0} true;
    $i93 := $eq.i32($i92, 24);
    goto corral_source_split_9119;

  corral_source_split_9119:
    assume {:verifier.code 0} true;
    assume {:branchcond $i93} true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i93 == 1);
    assume {:verifier.code 0} true;
    $i114, $i115, $i116, $i117 := 0, $i76, $i17, $i9;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9149;

  corral_source_split_9149:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p1);
    call {:si_unique_call 9690} {:cexpr "__cil_tmp78"} {:si_old_unique_call 4583} boogie_si_record_i64($i118);
    goto corral_source_split_9150;

  corral_source_split_9150:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 24);
    call {:si_unique_call 9691} {:cexpr "__cil_tmp79"} {:si_old_unique_call 4584} boogie_si_record_i64($i119);
    goto corral_source_split_9151;

  corral_source_split_9151:
    assume {:verifier.code 0} true;
    $p120 := $i2p.i64.ref($i119);
    goto corral_source_split_9152;

  corral_source_split_9152:
    assume {:verifier.code 0} true;
    havoc $i121;
    call {:si_unique_call 9692} {:cexpr "__cil_tmp80"} {:si_old_unique_call 4585} boogie_si_record_i8($i121);
    goto corral_source_split_9153;

  corral_source_split_9153:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i32($i121);
    call {:si_unique_call 9693} {:cexpr "__cil_tmp81"} {:si_old_unique_call 4586} boogie_si_record_i32($i122);
    goto corral_source_split_9154;

  corral_source_split_9154:
    assume {:verifier.code 0} true;
    $i123 := $eq.i32($i122, 1);
    goto corral_source_split_9155;

  corral_source_split_9155:
    assume {:verifier.code 0} true;
    assume {:branchcond $i123} true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i123 == 1);
    assume {:verifier.code 0} true;
    $i194, $i195 := 327683, 512;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9237;

  corral_source_split_9237:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9694} {:si_old_unique_call 4626} wait_for_fifo(6, $p7);
    goto corral_source_split_9238;

  corral_source_split_9238:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9695} {:si_old_unique_call 4627} aty_st_le32(712, $sub.i32(0, 1), $p7);
    goto corral_source_split_9239;

  corral_source_split_9239:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9696} {:si_old_unique_call 4628} aty_st_le32(720, $i115, $p7);
    goto corral_source_split_9240;

  corral_source_split_9240:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9697} {:si_old_unique_call 4629} aty_st_le32(724, $i194, $p7);
    goto corral_source_split_9241;

  corral_source_split_9241:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9698} {:si_old_unique_call 4630} aty_st_le32(728, $i195, $p7);
    goto corral_source_split_9242;

  corral_source_split_9242:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9699} {:si_old_unique_call 4631} aty_st_le32(576, $i56, $p7);
    goto corral_source_split_9243;

  corral_source_split_9243:
    assume {:verifier.code 0} true;
    $i196 := $or.i32(3, $i114);
    call {:si_unique_call 9700} {:cexpr "__cil_tmp139"} {:si_old_unique_call 4632} boogie_si_record_i32($i196);
    goto corral_source_split_9244;

  corral_source_split_9244:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9701} {:si_old_unique_call 4633} aty_st_le32(304, $i196, $p7);
    goto corral_source_split_9245;

  corral_source_split_9245:
    assume {:verifier.code 0} true;
    $i197 := $trunc.i32.i16($i117);
    call {:si_unique_call 9702} {:cexpr "__cil_tmp141"} {:si_old_unique_call 4634} boogie_si_record_i16($i197);
    goto corral_source_split_9246;

  corral_source_split_9246:
    assume {:verifier.code 0} true;
    $i198 := $trunc.i32.i16($i13);
    call {:si_unique_call 9703} {:cexpr "__cil_tmp142"} {:si_old_unique_call 4635} boogie_si_record_i16($i198);
    goto corral_source_split_9247;

  corral_source_split_9247:
    assume {:verifier.code 0} true;
    $i199 := $trunc.i32.i16($i116);
    call {:si_unique_call 9704} {:cexpr "__cil_tmp143"} {:si_old_unique_call 4636} boogie_si_record_i16($i199);
    goto corral_source_split_9248;

  corral_source_split_9248:
    assume {:verifier.code 0} true;
    $i200 := $p2i.ref.i64($p1);
    call {:si_unique_call 9705} {:cexpr "__cil_tmp144"} {:si_old_unique_call 4637} boogie_si_record_i64($i200);
    goto corral_source_split_9249;

  corral_source_split_9249:
    assume {:verifier.code 0} true;
    $i201 := $add.i64($i200, 12);
    call {:si_unique_call 9706} {:cexpr "__cil_tmp145"} {:si_old_unique_call 4638} boogie_si_record_i64($i201);
    goto corral_source_split_9250;

  corral_source_split_9250:
    assume {:verifier.code 0} true;
    $p202 := $i2p.i64.ref($i201);
    goto corral_source_split_9251;

  corral_source_split_9251:
    assume {:verifier.code 0} true;
    havoc $i203;
    call {:si_unique_call 9707} {:cexpr "__cil_tmp146"} {:si_old_unique_call 4639} boogie_si_record_i32($i203);
    goto corral_source_split_9252;

  corral_source_split_9252:
    assume {:verifier.code 0} true;
    $i204 := $trunc.i32.i16($i203);
    call {:si_unique_call 9708} {:cexpr "__cil_tmp147"} {:si_old_unique_call 4640} boogie_si_record_i16($i204);
    goto corral_source_split_9253;

  corral_source_split_9253:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9709} {:si_old_unique_call 4641} draw_rect($i197, $i198, $i199, $i204, $p7);
    goto corral_source_split_9254;

  corral_source_split_9254:
    assume {:verifier.code 0} true;
    $i205 := $p2i.ref.i64($p1);
    call {:si_unique_call 9710} {:cexpr "__cil_tmp148"} {:si_old_unique_call 4642} boogie_si_record_i64($i205);
    goto corral_source_split_9255;

  corral_source_split_9255:
    assume {:verifier.code 0} true;
    $i206 := $add.i64($i205, 12);
    call {:si_unique_call 9711} {:cexpr "__cil_tmp149"} {:si_old_unique_call 4643} boogie_si_record_i64($i206);
    goto corral_source_split_9256;

  corral_source_split_9256:
    assume {:verifier.code 0} true;
    $p207 := $i2p.i64.ref($i206);
    goto corral_source_split_9257;

  corral_source_split_9257:
    assume {:verifier.code 0} true;
    havoc $i208;
    call {:si_unique_call 9712} {:cexpr "__cil_tmp150"} {:si_old_unique_call 4644} boogie_si_record_i32($i208);
    goto corral_source_split_9258;

  corral_source_split_9258:
    assume {:verifier.code 0} true;
    $i209 := $p2i.ref.i64($p1);
    call {:si_unique_call 9713} {:cexpr "__cil_tmp151"} {:si_old_unique_call 4645} boogie_si_record_i64($i209);
    goto corral_source_split_9259;

  corral_source_split_9259:
    assume {:verifier.code 0} true;
    $i210 := $add.i64($i209, 24);
    call {:si_unique_call 9714} {:cexpr "__cil_tmp152"} {:si_old_unique_call 4646} boogie_si_record_i64($i210);
    goto corral_source_split_9260;

  corral_source_split_9260:
    assume {:verifier.code 0} true;
    $p211 := $i2p.i64.ref($i210);
    goto corral_source_split_9261;

  corral_source_split_9261:
    assume {:verifier.code 0} true;
    havoc $i212;
    call {:si_unique_call 9715} {:cexpr "__cil_tmp153"} {:si_old_unique_call 4647} boogie_si_record_i8($i212);
    goto corral_source_split_9262;

  corral_source_split_9262:
    assume {:verifier.code 0} true;
    $i213 := $zext.i8.i32($i212);
    call {:si_unique_call 9716} {:cexpr "__cil_tmp154"} {:si_old_unique_call 4648} boogie_si_record_i32($i213);
    goto corral_source_split_9263;

  corral_source_split_9263:
    assume {:verifier.code 0} true;
    $i214 := $p2i.ref.i64($p1);
    call {:si_unique_call 9717} {:cexpr "__cil_tmp155"} {:si_old_unique_call 4649} boogie_si_record_i64($i214);
    goto corral_source_split_9264;

  corral_source_split_9264:
    assume {:verifier.code 0} true;
    $i215 := $add.i64($i214, 8);
    call {:si_unique_call 9718} {:cexpr "__cil_tmp156"} {:si_old_unique_call 4650} boogie_si_record_i64($i215);
    goto corral_source_split_9265;

  corral_source_split_9265:
    assume {:verifier.code 0} true;
    $p216 := $i2p.i64.ref($i215);
    goto corral_source_split_9266;

  corral_source_split_9266:
    assume {:verifier.code 0} true;
    havoc $i217;
    call {:si_unique_call 9719} {:cexpr "__cil_tmp157"} {:si_old_unique_call 4651} boogie_si_record_i32($i217);
    goto corral_source_split_9267;

  corral_source_split_9267:
    assume {:verifier.code 0} true;
    $i218 := $mul.i32($i217, $i213);
    call {:si_unique_call 9720} {:cexpr "__cil_tmp158"} {:si_old_unique_call 4652} boogie_si_record_i32($i218);
    goto corral_source_split_9268;

  corral_source_split_9268:
    assume {:verifier.code 0} true;
    $i219 := $add.i32($i218, 7);
    call {:si_unique_call 9721} {:cexpr "__cil_tmp159"} {:si_old_unique_call 4653} boogie_si_record_i32($i219);
    goto corral_source_split_9269;

  corral_source_split_9269:
    assume {:verifier.code 0} true;
    $i220 := $udiv.i32($i219, 8);
    call {:si_unique_call 9722} {:cexpr "__cil_tmp160"} {:si_old_unique_call 4654} boogie_si_record_i32($i220);
    goto corral_source_split_9270;

  corral_source_split_9270:
    assume {:verifier.code 0} true;
    $i221 := $mul.i32($i220, $i208);
    call {:si_unique_call 9723} {:cexpr "__cil_tmp161"} {:si_old_unique_call 4655} boogie_si_record_i32($i221);
    goto corral_source_split_9271;

  corral_source_split_9271:
    assume {:verifier.code 0} true;
    $i222 := $p2i.ref.i64($p0);
    call {:si_unique_call 9724} {:cexpr "__cil_tmp163"} {:si_old_unique_call 4656} boogie_si_record_i64($i222);
    goto corral_source_split_9272;

  corral_source_split_9272:
    assume {:verifier.code 0} true;
    $i223 := $add.i64($i222, 184);
    call {:si_unique_call 9725} {:cexpr "__cil_tmp164"} {:si_old_unique_call 4657} boogie_si_record_i64($i223);
    goto corral_source_split_9273;

  corral_source_split_9273:
    assume {:verifier.code 0} true;
    $p224 := $i2p.i64.ref($i223);
    goto corral_source_split_9274;

  corral_source_split_9274:
    assume {:verifier.code 0} true;
    havoc $i225;
    call {:si_unique_call 9726} {:cexpr "__cil_tmp165"} {:si_old_unique_call 4658} boogie_si_record_i32($i225);
    goto corral_source_split_9275;

  corral_source_split_9275:
    assume {:verifier.code 0} true;
    $i226 := $eq.i32($i225, 24);
    goto corral_source_split_9276;

  corral_source_split_9276:
    assume {:verifier.code 0} true;
    assume {:branchcond $i226} true;
    goto $bb70, $bb71;

  $bb71:
    assume !($i226 == 1);
    goto corral_source_split_9282;

  corral_source_split_9282:
    assume {:verifier.code 0} true;
    goto $bb109;

  $bb109:
    assume {:verifier.code 0} true;
    $i316 := $add.i32($i221, 3);
    call {:si_unique_call 9727} {:cexpr "__cil_tmp190"} {:si_old_unique_call 4685} boogie_si_record_i32($i316);
    goto corral_source_split_9377;

  corral_source_split_9377:
    assume {:verifier.code 0} true;
    $i317 := $udiv.i32($i316, 4);
    call {:si_unique_call 9728} {:cexpr "dwords"} {:si_old_unique_call 4686} boogie_si_record_i32($i317);
    goto corral_source_split_9378;

  corral_source_split_9378:
    assume {:verifier.code 0} true;
    $i318 := $p2i.ref.i64($p1);
    call {:si_unique_call 9729} {:cexpr "__cil_tmp191"} {:si_old_unique_call 4687} boogie_si_record_i64($i318);
    goto corral_source_split_9379;

  corral_source_split_9379:
    assume {:verifier.code 0} true;
    $i319 := $add.i64($i318, 32);
    call {:si_unique_call 9730} {:cexpr "__cil_tmp192"} {:si_old_unique_call 4688} boogie_si_record_i64($i319);
    goto corral_source_split_9380;

  corral_source_split_9380:
    assume {:verifier.code 0} true;
    $p320 := $i2p.i64.ref($i319);
    goto corral_source_split_9381;

  corral_source_split_9381:
    assume {:verifier.code 0} true;
    havoc $p321;
    goto corral_source_split_9382;

  corral_source_split_9382:
    assume {:verifier.code 0} true;
    $p322 := $bitcast.ref.ref($p321);
    goto corral_source_split_9383;

  corral_source_split_9383:
    assume {:verifier.code 0} true;
    $p323, $i324 := $p321, $i317;
    goto $bb111;

  $bb111:
    call {:si_unique_call 9731} $p323, $i324, $i325, $i326, $i327, $p328 := atyfb_imageblit_loop_$bb111($p7, $p323, $i324, $i325, $i326, $i327, $p328);
    LoopBound_AssertVar := false;
    goto $bb111_last;

  $bb111_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9388;

  corral_source_split_9388:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    $i325 := $ne.i32($i324, 0);
    goto corral_source_split_9390;

  corral_source_split_9390:
    assume {:verifier.code 0} true;
    assume {:branchcond $i325} true;
    goto $bb113, $bb114;

  $bb114:
    assume !($i325 == 1);
    goto corral_source_split_9394;

  corral_source_split_9394:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9732} {:si_old_unique_call 4689} wait_for_fifo(1, $p7);
    goto corral_source_split_9385;

  corral_source_split_9385:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9733} {:si_old_unique_call 4690} aty_st_le32(720, $i54, $p7);
    goto corral_source_split_9386;

  corral_source_split_9386:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb113:
    assume $i325 == 1;
    goto corral_source_split_9392;

  corral_source_split_9392:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9734} {:si_old_unique_call 4691} wait_for_fifo(1, $p7);
    goto corral_source_split_9396;

  corral_source_split_9396:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9735} {:si_old_unique_call 4692} $i326 := __le32_to_cpup($p323);
    call {:si_unique_call 9736} {:cexpr "tmp___8"} {:si_old_unique_call 4693} boogie_si_record_i32($i326);
    goto corral_source_split_9397;

  corral_source_split_9397:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9737} {:si_old_unique_call 4694} aty_st_le32(512, $i326, $p7);
    goto corral_source_split_9398;

  corral_source_split_9398:
    assume {:verifier.code 0} true;
    $i327 := $sub.i32($i324, 1);
    call {:si_unique_call 9738} {:cexpr "dwords"} {:si_old_unique_call 4695} boogie_si_record_i32($i327);
    goto corral_source_split_9399;

  corral_source_split_9399:
    assume {:verifier.code 0} true;
    $p328 := $add.ref($p323, $mul.ref(1, 4));
    goto corral_source_split_9400;

  corral_source_split_9400:
    assume {:verifier.code 0} true;
    $p323, $i324 := $p328, $i327;
    goto corral_source_split_9400_dummy;

  corral_source_split_9400_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb70:
    assume $i226 == 1;
    goto corral_source_split_9278;

  corral_source_split_9278:
    assume {:verifier.code 0} true;
    $i227 := $and.i32($i115, 8192);
    call {:si_unique_call 9739} {:cexpr "__cil_tmp166"} {:si_old_unique_call 4659} boogie_si_record_i32($i227);
    goto corral_source_split_9279;

  corral_source_split_9279:
    assume {:verifier.code 0} true;
    $i228 := $ne.i32($i227, 0);
    goto corral_source_split_9280;

  corral_source_split_9280:
    assume {:verifier.code 0} true;
    assume {:branchcond $i228} true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i228 == 1);
    goto corral_source_split_9286;

  corral_source_split_9286:
    assume {:verifier.code 0} true;
    $i229 := $p2i.ref.i64($p1);
    call {:si_unique_call 9740} {:cexpr "__cil_tmp167"} {:si_old_unique_call 4660} boogie_si_record_i64($i229);
    goto corral_source_split_9287;

  corral_source_split_9287:
    assume {:verifier.code 0} true;
    $i230 := $add.i64($i229, 32);
    call {:si_unique_call 9741} {:cexpr "__cil_tmp168"} {:si_old_unique_call 4661} boogie_si_record_i64($i230);
    goto corral_source_split_9288;

  corral_source_split_9288:
    assume {:verifier.code 0} true;
    $p231 := $i2p.i64.ref($i230);
    goto corral_source_split_9289;

  corral_source_split_9289:
    assume {:verifier.code 0} true;
    havoc $p232;
    goto corral_source_split_9290;

  corral_source_split_9290:
    assume {:verifier.code 0} true;
    $i233 := $p2i.ref.i64($p1);
    call {:si_unique_call 9742} {:cexpr "__cil_tmp170"} {:si_old_unique_call 4662} boogie_si_record_i64($i233);
    goto corral_source_split_9291;

  corral_source_split_9291:
    assume {:verifier.code 0} true;
    $i234 := $add.i64($i233, 8);
    call {:si_unique_call 9743} {:cexpr "__cil_tmp171"} {:si_old_unique_call 4663} boogie_si_record_i64($i234);
    goto corral_source_split_9292;

  corral_source_split_9292:
    assume {:verifier.code 0} true;
    $p235 := $i2p.i64.ref($i234);
    goto corral_source_split_9293;

  corral_source_split_9293:
    assume {:verifier.code 0} true;
    havoc $i236;
    call {:si_unique_call 9744} {:cexpr "__cil_tmp172"} {:si_old_unique_call 4664} boogie_si_record_i32($i236);
    goto corral_source_split_9294;

  corral_source_split_9294:
    assume {:verifier.code 0} true;
    $i237, $i238, $i239, $p240, $i241 := 7, 0, $i236, $p232, $i221;
    goto $bb74;

  $bb74:
    call {:si_unique_call 9745} $i237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314, $i263, $i264, $i265, $p266, $i267, $i315 := atyfb_imageblit_loop_$bb74_PassiveCopy($p1, $p2, $p7, $i237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314, $i263, $i264, $i265, $p266, $i267, $i315);
    goto $bb74_last;

  $bb74_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9296;

  corral_source_split_9296:
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $i242 := $ne.i32($i241, 0);
    goto corral_source_split_9298;

  corral_source_split_9298:
    assume {:verifier.code 0} true;
    assume {:branchcond $i242} true;
    goto $bb76, $bb77;

  $bb77:
    assume !($i242 == 1);
    goto corral_source_split_9302;

  corral_source_split_9302:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb76:
    assume $i242 == 1;
    goto corral_source_split_9300;

  corral_source_split_9300:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto corral_source_split_9304;

  corral_source_split_9304:
    assume {:verifier.code 0} true;
    $p243 := $bitcast.ref.ref($p2);
    goto corral_source_split_9305;

  corral_source_split_9305:
    assume {:verifier.code 0} true;
    $i244, $i245, $i246, $i247, $p248, $i249, $p250 := $i237, $i238, 0, $i239, $p240, $i241, $p2;
    goto $bb80;

  $bb80:
    call {:si_unique_call 9746} $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314 := atyfb_imageblit_loop_$bb80($p1, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314);
    goto $bb80_last;

  $bb80_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9307;

  corral_source_split_9307:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    $i251 := $slt.i32($i246, 4);
    goto corral_source_split_9309;

  corral_source_split_9309:
    assume {:verifier.code 0} true;
    $i252, $i253, $i254, $p255, $i256 := $i244, $i245, $i247, $p248, $i249;
    assume {:branchcond $i251} true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i251 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9314;

  corral_source_split_9314:
    assume {:verifier.code 0} true;
    $i263, $i264, $i265, $p266, $i267 := $i252, $i253, $i254, $p255, $i256;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9320;

  corral_source_split_9320:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9747} {:si_old_unique_call 4665} wait_for_fifo(1, $p7);
    goto corral_source_split_9321;

  corral_source_split_9321:
    assume {:verifier.code 0} true;
    havoc $i315;
    call {:si_unique_call 9748} {:cexpr "__cil_tmp188"} {:si_old_unique_call 4666} boogie_si_record_i32($i315);
    goto corral_source_split_9322;

  corral_source_split_9322:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9749} {:si_old_unique_call 4667} aty_st_le32(512, $i315, $p7);
    goto corral_source_split_9323;

  corral_source_split_9323:
    assume {:verifier.code 0} true;
    $i237, $i238, $i239, $p240, $i241 := $i263, $i264, $i265, $p266, $i267;
    goto corral_source_split_9323_dummy;

  corral_source_split_9323_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb82:
    assume $i251 == 1;
    goto corral_source_split_9311;

  corral_source_split_9311:
    assume {:verifier.code 0} true;
    $i257 := $ne.i32($i249, 0);
    goto corral_source_split_9312;

  corral_source_split_9312:
    assume {:verifier.code 0} true;
    $i258, $i259, $i260, $p261, $i262 := $i244, $i245, $i247, $p248, $i249;
    assume {:branchcond $i257} true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i257 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9318;

  corral_source_split_9318:
    assume {:verifier.code 0} true;
    $i263, $i264, $i265, $p266, $i267 := $i258, $i259, $i260, $p261, $i262;
    goto $bb87;

  $bb84:
    assume $i257 == 1;
    goto corral_source_split_9316;

  corral_source_split_9316:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    $i268, $i269, $i270, $i271, $p272, $i273 := 7, $i244, $i245, $i247, $p248, $i249;
    goto $bb89;

  $bb89:
    call {:si_unique_call 9750} $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312 := atyfb_imageblit_loop_$bb89($p1, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312);
    goto $bb89_last;

  $bb89_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9325;

  corral_source_split_9325:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $i274 := $sge.i32($i268, 0);
    goto corral_source_split_9327;

  corral_source_split_9327:
    assume {:verifier.code 0} true;
    $i275, $i276, $i277, $p278, $i279 := $i269, $i270, $i271, $p272, $i273;
    assume {:branchcond $i274} true;
    goto $bb91, $bb92;

  $bb92:
    assume !($i274 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9331;

  corral_source_split_9331:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i313 := $add.i32($i246, 1);
    call {:si_unique_call 9751} {:cexpr "byte_id_in_dword"} {:si_old_unique_call 4677} boogie_si_record_i32($i313);
    goto corral_source_split_9346;

  corral_source_split_9346:
    assume {:verifier.code 0} true;
    $p314 := $add.ref($p250, $mul.ref(1, 1));
    goto corral_source_split_9347;

  corral_source_split_9347:
    assume {:verifier.code 0} true;
    $i244, $i245, $i246, $i247, $p248, $i249, $p250 := $i275, $i276, $i313, $i277, $p278, $i279, $p314;
    goto corral_source_split_9347_dummy;

  corral_source_split_9347_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb91:
    assume $i274 == 1;
    goto corral_source_split_9329;

  corral_source_split_9329:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    havoc $i280;
    call {:si_unique_call 9752} {:cexpr "__cil_tmp174"} {:si_old_unique_call 4668} boogie_si_record_i8($i280);
    goto corral_source_split_9333;

  corral_source_split_9333:
    assume {:verifier.code 0} true;
    $i281 := $zext.i8.i32($i280);
    call {:si_unique_call 9753} {:cexpr "__cil_tmp175"} {:si_old_unique_call 4669} boogie_si_record_i32($i281);
    goto corral_source_split_9334;

  corral_source_split_9334:
    assume {:verifier.code 0} true;
    $i282 := $ashr.i32($i281, $i269);
    call {:si_unique_call 9754} {:cexpr "__cil_tmp176"} {:si_old_unique_call 4670} boogie_si_record_i32($i282);
    goto corral_source_split_9335;

  corral_source_split_9335:
    assume {:verifier.code 0} true;
    $i283 := $and.i32($i282, 1);
    call {:si_unique_call 9755} {:cexpr "__cil_tmp177"} {:si_old_unique_call 4671} boogie_si_record_i32($i283);
    goto corral_source_split_9336;

  corral_source_split_9336:
    assume {:verifier.code 0} true;
    $i284 := $shl.i32($i283, $i268);
    call {:si_unique_call 9756} {:cexpr "__cil_tmp178"} {:si_old_unique_call 4672} boogie_si_record_i32($i284);
    goto corral_source_split_9337;

  corral_source_split_9337:
    assume {:verifier.code 0} true;
    havoc $i285;
    call {:si_unique_call 9757} {:cexpr "__cil_tmp179"} {:si_old_unique_call 4673} boogie_si_record_i8($i285);
    goto corral_source_split_9338;

  corral_source_split_9338:
    assume {:verifier.code 0} true;
    $i286 := $zext.i8.i32($i285);
    call {:si_unique_call 9758} {:cexpr "__cil_tmp180"} {:si_old_unique_call 4674} boogie_si_record_i32($i286);
    goto corral_source_split_9339;

  corral_source_split_9339:
    assume {:verifier.code 0} true;
    $i287 := $or.i32($i286, $i284);
    call {:si_unique_call 9759} {:cexpr "__cil_tmp181"} {:si_old_unique_call 4675} boogie_si_record_i32($i287);
    goto corral_source_split_9340;

  corral_source_split_9340:
    assume {:verifier.code 0} true;
    $i288 := $trunc.i32.i8($i287);
    goto corral_source_split_9341;

  corral_source_split_9341:
    assume {:verifier.code 0} true;
    goto corral_source_split_9342;

  corral_source_split_9342:
    assume {:verifier.code 0} true;
    $i289 := $add.i32($i270, 1);
    call {:si_unique_call 9760} {:cexpr "mult24"} {:si_old_unique_call 4676} boogie_si_record_i32($i289);
    goto corral_source_split_9343;

  corral_source_split_9343:
    assume {:verifier.code 0} true;
    $i290 := $eq.i32($i289, 3);
    goto corral_source_split_9344;

  corral_source_split_9344:
    assume {:verifier.code 0} true;
    assume {:branchcond $i290} true;
    goto $bb95, $bb96;

  $bb96:
    assume !($i290 == 1);
    assume {:verifier.code 0} true;
    $i293, $i294, $i295 := $i269, $i289, $i271;
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9353;

  corral_source_split_9353:
    assume {:verifier.code 0} true;
    $i296 := $slt.i32($i293, 0);
    goto corral_source_split_9354;

  corral_source_split_9354:
    assume {:verifier.code 0} true;
    assume {:branchcond $i296} true;
    goto $bb98, $bb99;

  $bb99:
    assume !($i296 == 1);
    goto corral_source_split_9358;

  corral_source_split_9358:
    assume {:verifier.code 0} true;
    $i297 := $eq.i32($i295, 0);
    goto corral_source_split_9359;

  corral_source_split_9359:
    assume {:verifier.code 0} true;
    assume {:branchcond $i297} true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i297 == 1);
    assume {:verifier.code 0} true;
    $i307, $i308, $i309, $p310, $i311 := $i268, $i293, $i295, $p272, $i273;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $i312 := $sub.i32($i307, 1);
    call {:si_unique_call 9761} {:cexpr "outbit"} {:si_old_unique_call 4684} boogie_si_record_i32($i312);
    goto corral_source_split_9375;

  corral_source_split_9375:
    assume {:verifier.code 0} true;
    $i268, $i269, $i270, $i271, $p272, $i273 := $i312, $i308, $i294, $i309, $p310, $i311;
    goto corral_source_split_9375_dummy;

  corral_source_split_9375_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb101:
    assume $i297 == 1;
    goto corral_source_split_9365;

  corral_source_split_9365:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $i298 := $sub.i32($i273, 1);
    call {:si_unique_call 9762} {:cexpr "src_bytes"} {:si_old_unique_call 4680} boogie_si_record_i32($i298);
    goto corral_source_split_9361;

  corral_source_split_9361:
    assume {:verifier.code 0} true;
    $p299 := $add.ref($p272, $mul.ref(1, 1));
    goto corral_source_split_9362;

  corral_source_split_9362:
    assume {:verifier.code 0} true;
    $i300 := $eq.i32($i295, 0);
    goto corral_source_split_9363;

  corral_source_split_9363:
    assume {:verifier.code 0} true;
    assume {:branchcond $i300} true;
    goto $bb103, $bb104;

  $bb104:
    assume !($i300 == 1);
    assume {:verifier.code 0} true;
    $i305, $i306 := $i268, $i295;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9373;

  corral_source_split_9373:
    assume {:verifier.code 0} true;
    $i307, $i308, $i309, $p310, $i311 := $i305, 7, $i306, $p299, $i298;
    goto $bb106;

  $bb103:
    assume $i300 == 1;
    goto corral_source_split_9367;

  corral_source_split_9367:
    assume {:verifier.code 0} true;
    $i301 := $p2i.ref.i64($p1);
    call {:si_unique_call 9763} {:cexpr "__cil_tmp182"} {:si_old_unique_call 4681} boogie_si_record_i64($i301);
    goto corral_source_split_9368;

  corral_source_split_9368:
    assume {:verifier.code 0} true;
    $i302 := $add.i64($i301, 8);
    call {:si_unique_call 9764} {:cexpr "__cil_tmp183"} {:si_old_unique_call 4682} boogie_si_record_i64($i302);
    goto corral_source_split_9369;

  corral_source_split_9369:
    assume {:verifier.code 0} true;
    $p303 := $i2p.i64.ref($i302);
    goto corral_source_split_9370;

  corral_source_split_9370:
    assume {:verifier.code 0} true;
    havoc $i304;
    call {:si_unique_call 9765} {:cexpr "__cil_tmp184"} {:si_old_unique_call 4683} boogie_si_record_i32($i304);
    goto corral_source_split_9371;

  corral_source_split_9371:
    assume {:verifier.code 0} true;
    $i305, $i306 := 0, $i304;
    goto $bb105;

  $bb98:
    assume $i296 == 1;
    goto corral_source_split_9356;

  corral_source_split_9356:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb95:
    assume $i290 == 1;
    goto corral_source_split_9349;

  corral_source_split_9349:
    assume {:verifier.code 0} true;
    $i291 := $sub.i32($i269, 1);
    call {:si_unique_call 9766} {:cexpr "inbit"} {:si_old_unique_call 4678} boogie_si_record_i32($i291);
    goto corral_source_split_9350;

  corral_source_split_9350:
    assume {:verifier.code 0} true;
    $i292 := $sub.i32($i271, 1);
    call {:si_unique_call 9767} {:cexpr "width___0"} {:si_old_unique_call 4679} boogie_si_record_i32($i292);
    goto corral_source_split_9351;

  corral_source_split_9351:
    assume {:verifier.code 0} true;
    $i293, $i294, $i295 := $i291, 0, $i292;
    goto $bb97;

  $bb72:
    assume $i228 == 1;
    goto corral_source_split_9284;

  corral_source_split_9284:
    assume {:verifier.code 0} true;
    goto $bb109;

  $bb61:
    assume $i123 == 1;
    goto corral_source_split_9157;

  corral_source_split_9157:
    assume {:verifier.code 0} true;
    $i124 := $p2i.ref.i64($p0);
    call {:si_unique_call 9768} {:cexpr "__cil_tmp83"} {:si_old_unique_call 4587} boogie_si_record_i64($i124);
    goto corral_source_split_9158;

  corral_source_split_9158:
    assume {:verifier.code 0} true;
    $i125 := $add.i64($i124, 356);
    call {:si_unique_call 9769} {:cexpr "__cil_tmp84"} {:si_old_unique_call 4588} boogie_si_record_i64($i125);
    goto corral_source_split_9159;

  corral_source_split_9159:
    assume {:verifier.code 0} true;
    $p126 := $i2p.i64.ref($i125);
    goto corral_source_split_9160;

  corral_source_split_9160:
    assume {:verifier.code 0} true;
    havoc $i127;
    call {:si_unique_call 9770} {:cexpr "__cil_tmp85"} {:si_old_unique_call 4589} boogie_si_record_i32($i127);
    goto corral_source_split_9161;

  corral_source_split_9161:
    assume {:verifier.code 0} true;
    $i128 := $eq.i32($i127, 2);
    goto corral_source_split_9162;

  corral_source_split_9162:
    assume {:verifier.code 0} true;
    assume {:branchcond $i128} true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i128 == 1);
    goto corral_source_split_9190;

  corral_source_split_9190:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p0);
    call {:si_unique_call 9771} {:cexpr "__cil_tmp103"} {:si_old_unique_call 4602} boogie_si_record_i64($i155);
    goto corral_source_split_9191;

  corral_source_split_9191:
    assume {:verifier.code 0} true;
    $i156 := $add.i64($i155, 356);
    call {:si_unique_call 9772} {:cexpr "__cil_tmp104"} {:si_old_unique_call 4603} boogie_si_record_i64($i156);
    goto corral_source_split_9192;

  corral_source_split_9192:
    assume {:verifier.code 0} true;
    $p157 := $i2p.i64.ref($i156);
    goto corral_source_split_9193;

  corral_source_split_9193:
    assume {:verifier.code 0} true;
    havoc $i158;
    call {:si_unique_call 9773} {:cexpr "__cil_tmp105"} {:si_old_unique_call 4604} boogie_si_record_i32($i158);
    goto corral_source_split_9194;

  corral_source_split_9194:
    assume {:verifier.code 0} true;
    $i159 := $eq.i32($i158, 4);
    goto corral_source_split_9195;

  corral_source_split_9195:
    assume {:verifier.code 0} true;
    assume {:branchcond $i159} true;
    goto $bb66, $bb67;

  $bb67:
    assume !($i159 == 1);
    goto corral_source_split_9228;

  corral_source_split_9228:
    assume {:verifier.code 0} true;
    $i186 := $p2i.ref.i64($p1);
    call {:si_unique_call 9774} {:cexpr "__cil_tmp122"} {:si_old_unique_call 4620} boogie_si_record_i64($i186);
    goto corral_source_split_9229;

  corral_source_split_9229:
    assume {:verifier.code 0} true;
    $i187 := $add.i64($i186, 16);
    call {:si_unique_call 9775} {:cexpr "__cil_tmp123"} {:si_old_unique_call 4621} boogie_si_record_i64($i187);
    goto corral_source_split_9230;

  corral_source_split_9230:
    assume {:verifier.code 0} true;
    $p188 := $i2p.i64.ref($i187);
    goto corral_source_split_9231;

  corral_source_split_9231:
    assume {:verifier.code 0} true;
    havoc $i189;
    call {:si_unique_call 9776} {:cexpr "__cil_tmp124"} {:si_old_unique_call 4622} boogie_si_record_i32($i189);
    goto corral_source_split_9232;

  corral_source_split_9232:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p1);
    call {:si_unique_call 9777} {:cexpr "__cil_tmp125"} {:si_old_unique_call 4623} boogie_si_record_i64($i190);
    goto corral_source_split_9233;

  corral_source_split_9233:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 20);
    call {:si_unique_call 9778} {:cexpr "__cil_tmp126"} {:si_old_unique_call 4624} boogie_si_record_i64($i191);
    goto corral_source_split_9234;

  corral_source_split_9234:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_9235;

  corral_source_split_9235:
    assume {:verifier.code 0} true;
    havoc $i193;
    call {:si_unique_call 9779} {:cexpr "__cil_tmp127"} {:si_old_unique_call 4625} boogie_si_record_i32($i193);
    assume {:verifier.code 0} true;
    $i184, $i185 := $i193, $i189;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i153, $i154 := $i184, $i185;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9197;

  corral_source_split_9197:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9780} {:si_old_unique_call 4605} wait_for_fifo(2, $p7);
    goto corral_source_split_9198;

  corral_source_split_9198:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9781} {:si_old_unique_call 4606} aty_st_le32(704, $i153, $p7);
    goto corral_source_split_9199;

  corral_source_split_9199:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9782} {:si_old_unique_call 4607} aty_st_le32(708, $i154, $p7);
    goto corral_source_split_9200;

  corral_source_split_9200:
    assume {:verifier.code 0} true;
    $i194, $i195 := 458759, 131328;
    goto $bb69;

  $bb66:
    assume $i159 == 1;
    goto corral_source_split_9202;

  corral_source_split_9202:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p1);
    call {:si_unique_call 9783} {:cexpr "__cil_tmp106"} {:si_old_unique_call 4608} boogie_si_record_i64($i160);
    goto corral_source_split_9203;

  corral_source_split_9203:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 16);
    call {:si_unique_call 9784} {:cexpr "__cil_tmp107"} {:si_old_unique_call 4609} boogie_si_record_i64($i161);
    goto corral_source_split_9204;

  corral_source_split_9204:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_9205;

  corral_source_split_9205:
    assume {:verifier.code 0} true;
    havoc $i163;
    call {:si_unique_call 9785} {:cexpr "__cil_tmp108"} {:si_old_unique_call 4610} boogie_si_record_i32($i163);
    goto corral_source_split_9206;

  corral_source_split_9206:
    assume {:verifier.code 0} true;
    $i164 := $p2i.ref.i64($p0);
    call {:si_unique_call 9786} {:cexpr "__cil_tmp109"} {:si_old_unique_call 4611} boogie_si_record_i64($i164);
    goto corral_source_split_9207;

  corral_source_split_9207:
    assume {:verifier.code 0} true;
    $i165 := $add.i64($i164, 1136);
    call {:si_unique_call 9787} {:cexpr "__cil_tmp110"} {:si_old_unique_call 4612} boogie_si_record_i64($i165);
    goto corral_source_split_9208;

  corral_source_split_9208:
    assume {:verifier.code 0} true;
    $p166 := $i2p.i64.ref($i165);
    goto corral_source_split_9209;

  corral_source_split_9209:
    assume {:verifier.code 0} true;
    havoc $p167;
    goto corral_source_split_9210;

  corral_source_split_9210:
    assume {:verifier.code 0} true;
    $p168 := $bitcast.ref.ref($p167);
    goto corral_source_split_9211;

  corral_source_split_9211:
    assume {:verifier.code 0} true;
    $i169 := $zext.i32.i64($i163);
    goto corral_source_split_9212;

  corral_source_split_9212:
    assume {:verifier.code 0} true;
    $p170 := $add.ref($p168, $mul.ref($i169, 4));
    goto corral_source_split_9213;

  corral_source_split_9213:
    assume {:verifier.code 0} true;
    havoc $i171;
    call {:si_unique_call 9788} {:cexpr "fg"} {:si_old_unique_call 4613} boogie_si_record_i32($i171);
    goto corral_source_split_9214;

  corral_source_split_9214:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p1);
    call {:si_unique_call 9789} {:cexpr "__cil_tmp114"} {:si_old_unique_call 4614} boogie_si_record_i64($i172);
    goto corral_source_split_9215;

  corral_source_split_9215:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 20);
    call {:si_unique_call 9790} {:cexpr "__cil_tmp115"} {:si_old_unique_call 4615} boogie_si_record_i64($i173);
    goto corral_source_split_9216;

  corral_source_split_9216:
    assume {:verifier.code 0} true;
    $p174 := $i2p.i64.ref($i173);
    goto corral_source_split_9217;

  corral_source_split_9217:
    assume {:verifier.code 0} true;
    havoc $i175;
    call {:si_unique_call 9791} {:cexpr "__cil_tmp116"} {:si_old_unique_call 4616} boogie_si_record_i32($i175);
    goto corral_source_split_9218;

  corral_source_split_9218:
    assume {:verifier.code 0} true;
    $i176 := $p2i.ref.i64($p0);
    call {:si_unique_call 9792} {:cexpr "__cil_tmp117"} {:si_old_unique_call 4617} boogie_si_record_i64($i176);
    goto corral_source_split_9219;

  corral_source_split_9219:
    assume {:verifier.code 0} true;
    $i177 := $add.i64($i176, 1136);
    call {:si_unique_call 9793} {:cexpr "__cil_tmp118"} {:si_old_unique_call 4618} boogie_si_record_i64($i177);
    goto corral_source_split_9220;

  corral_source_split_9220:
    assume {:verifier.code 0} true;
    $p178 := $i2p.i64.ref($i177);
    goto corral_source_split_9221;

  corral_source_split_9221:
    assume {:verifier.code 0} true;
    havoc $p179;
    goto corral_source_split_9222;

  corral_source_split_9222:
    assume {:verifier.code 0} true;
    $p180 := $bitcast.ref.ref($p179);
    goto corral_source_split_9223;

  corral_source_split_9223:
    assume {:verifier.code 0} true;
    $i181 := $zext.i32.i64($i175);
    goto corral_source_split_9224;

  corral_source_split_9224:
    assume {:verifier.code 0} true;
    $p182 := $add.ref($p180, $mul.ref($i181, 4));
    goto corral_source_split_9225;

  corral_source_split_9225:
    assume {:verifier.code 0} true;
    havoc $i183;
    call {:si_unique_call 9794} {:cexpr "bg"} {:si_old_unique_call 4619} boogie_si_record_i32($i183);
    goto corral_source_split_9226;

  corral_source_split_9226:
    assume {:verifier.code 0} true;
    $i184, $i185 := $i183, $i171;
    goto $bb68;

  $bb63:
    assume $i128 == 1;
    goto corral_source_split_9164;

  corral_source_split_9164:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p1);
    call {:si_unique_call 9795} {:cexpr "__cil_tmp86"} {:si_old_unique_call 4590} boogie_si_record_i64($i129);
    goto corral_source_split_9165;

  corral_source_split_9165:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 16);
    call {:si_unique_call 9796} {:cexpr "__cil_tmp87"} {:si_old_unique_call 4591} boogie_si_record_i64($i130);
    goto corral_source_split_9166;

  corral_source_split_9166:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_9167;

  corral_source_split_9167:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 9797} {:cexpr "__cil_tmp88"} {:si_old_unique_call 4592} boogie_si_record_i32($i132);
    goto corral_source_split_9168;

  corral_source_split_9168:
    assume {:verifier.code 0} true;
    $i133 := $p2i.ref.i64($p0);
    call {:si_unique_call 9798} {:cexpr "__cil_tmp89"} {:si_old_unique_call 4593} boogie_si_record_i64($i133);
    goto corral_source_split_9169;

  corral_source_split_9169:
    assume {:verifier.code 0} true;
    $i134 := $add.i64($i133, 1136);
    call {:si_unique_call 9799} {:cexpr "__cil_tmp90"} {:si_old_unique_call 4594} boogie_si_record_i64($i134);
    goto corral_source_split_9170;

  corral_source_split_9170:
    assume {:verifier.code 0} true;
    $p135 := $i2p.i64.ref($i134);
    goto corral_source_split_9171;

  corral_source_split_9171:
    assume {:verifier.code 0} true;
    havoc $p136;
    goto corral_source_split_9172;

  corral_source_split_9172:
    assume {:verifier.code 0} true;
    $p137 := $bitcast.ref.ref($p136);
    goto corral_source_split_9173;

  corral_source_split_9173:
    assume {:verifier.code 0} true;
    $i138 := $zext.i32.i64($i132);
    goto corral_source_split_9174;

  corral_source_split_9174:
    assume {:verifier.code 0} true;
    $p139 := $add.ref($p137, $mul.ref($i138, 4));
    goto corral_source_split_9175;

  corral_source_split_9175:
    assume {:verifier.code 0} true;
    havoc $i140;
    call {:si_unique_call 9800} {:cexpr "fg"} {:si_old_unique_call 4595} boogie_si_record_i32($i140);
    goto corral_source_split_9176;

  corral_source_split_9176:
    assume {:verifier.code 0} true;
    $i141 := $p2i.ref.i64($p1);
    call {:si_unique_call 9801} {:cexpr "__cil_tmp94"} {:si_old_unique_call 4596} boogie_si_record_i64($i141);
    goto corral_source_split_9177;

  corral_source_split_9177:
    assume {:verifier.code 0} true;
    $i142 := $add.i64($i141, 20);
    call {:si_unique_call 9802} {:cexpr "__cil_tmp95"} {:si_old_unique_call 4597} boogie_si_record_i64($i142);
    goto corral_source_split_9178;

  corral_source_split_9178:
    assume {:verifier.code 0} true;
    $p143 := $i2p.i64.ref($i142);
    goto corral_source_split_9179;

  corral_source_split_9179:
    assume {:verifier.code 0} true;
    havoc $i144;
    call {:si_unique_call 9803} {:cexpr "__cil_tmp96"} {:si_old_unique_call 4598} boogie_si_record_i32($i144);
    goto corral_source_split_9180;

  corral_source_split_9180:
    assume {:verifier.code 0} true;
    $i145 := $p2i.ref.i64($p0);
    call {:si_unique_call 9804} {:cexpr "__cil_tmp97"} {:si_old_unique_call 4599} boogie_si_record_i64($i145);
    goto corral_source_split_9181;

  corral_source_split_9181:
    assume {:verifier.code 0} true;
    $i146 := $add.i64($i145, 1136);
    call {:si_unique_call 9805} {:cexpr "__cil_tmp98"} {:si_old_unique_call 4600} boogie_si_record_i64($i146);
    goto corral_source_split_9182;

  corral_source_split_9182:
    assume {:verifier.code 0} true;
    $p147 := $i2p.i64.ref($i146);
    goto corral_source_split_9183;

  corral_source_split_9183:
    assume {:verifier.code 0} true;
    havoc $p148;
    goto corral_source_split_9184;

  corral_source_split_9184:
    assume {:verifier.code 0} true;
    $p149 := $bitcast.ref.ref($p148);
    goto corral_source_split_9185;

  corral_source_split_9185:
    assume {:verifier.code 0} true;
    $i150 := $zext.i32.i64($i144);
    goto corral_source_split_9186;

  corral_source_split_9186:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($p149, $mul.ref($i150, 4));
    goto corral_source_split_9187;

  corral_source_split_9187:
    assume {:verifier.code 0} true;
    havoc $i152;
    call {:si_unique_call 9806} {:cexpr "bg"} {:si_old_unique_call 4601} boogie_si_record_i32($i152);
    goto corral_source_split_9188;

  corral_source_split_9188:
    assume {:verifier.code 0} true;
    $i153, $i154 := $i152, $i140;
    goto $bb65;

  $bb52:
    assume $i93 == 1;
    goto corral_source_split_9121;

  corral_source_split_9121:
    assume {:verifier.code 0} true;
    $i94 := $mul.i32($i9, 3);
    call {:si_unique_call 9807} {:cexpr "dx"} {:si_old_unique_call 4569} boogie_si_record_i32($i94);
    goto corral_source_split_9122;

  corral_source_split_9122:
    assume {:verifier.code 0} true;
    $i95 := $mul.i32($i17, 3);
    call {:si_unique_call 9808} {:cexpr "width"} {:si_old_unique_call 4570} boogie_si_record_i32($i95);
    goto corral_source_split_9123;

  corral_source_split_9123:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9809} {:si_old_unique_call 4571} $i96 := rotation24bpp($i94, 1);
    call {:si_unique_call 9810} {:cexpr "rotation"} {:si_old_unique_call 4572} boogie_si_record_i32($i96);
    goto corral_source_split_9124;

  corral_source_split_9124:
    assume {:verifier.code 0} true;
    $i97 := $and.i32($i76, $sub.i32(0, 16));
    call {:si_unique_call 9811} {:cexpr "pix_width"} {:si_old_unique_call 4573} boogie_si_record_i32($i97);
    goto corral_source_split_9125;

  corral_source_split_9125:
    assume {:verifier.code 0} true;
    $i98 := $or.i32($i97, 2);
    call {:si_unique_call 9812} {:cexpr "pix_width"} {:si_old_unique_call 4574} boogie_si_record_i32($i98);
    goto corral_source_split_9126;

  corral_source_split_9126:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p7);
    call {:si_unique_call 9813} {:cexpr "__cil_tmp71"} {:si_old_unique_call 4575} boogie_si_record_i64($i99);
    goto corral_source_split_9127;

  corral_source_split_9127:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 1044);
    call {:si_unique_call 9814} {:cexpr "__cil_tmp72"} {:si_old_unique_call 4576} boogie_si_record_i64($i100);
    goto corral_source_split_9128;

  corral_source_split_9128:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_9129;

  corral_source_split_9129:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 9815} {:cexpr "__cil_tmp73"} {:si_old_unique_call 4577} boogie_si_record_i32($i102);
    goto corral_source_split_9130;

  corral_source_split_9130:
    assume {:verifier.code 0} true;
    $i103 := $and.i32($i102, 2097152);
    goto corral_source_split_9131;

  corral_source_split_9131:
    assume {:verifier.code 0} true;
    $i104 := $ne.i32($i103, 0);
    goto corral_source_split_9132;

  corral_source_split_9132:
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i104 == 1);
    assume {:verifier.code 0} true;
    $i113 := $i98;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    goto corral_source_split_9147;

  corral_source_split_9147:
    assume {:verifier.code 0} true;
    $i114, $i115, $i116, $i117 := $i96, $i113, $i95, $i94;
    goto $bb60;

  $bb54:
    assume $i104 == 1;
    goto corral_source_split_9134;

  corral_source_split_9134:
    assume {:verifier.code 0} true;
    $i105 := $p2i.ref.i64($p1);
    call {:si_unique_call 9816} {:cexpr "__cil_tmp74"} {:si_old_unique_call 4578} boogie_si_record_i64($i105);
    goto corral_source_split_9135;

  corral_source_split_9135:
    assume {:verifier.code 0} true;
    $i106 := $add.i64($i105, 8);
    call {:si_unique_call 9817} {:cexpr "__cil_tmp75"} {:si_old_unique_call 4579} boogie_si_record_i64($i106);
    goto corral_source_split_9136;

  corral_source_split_9136:
    assume {:verifier.code 0} true;
    $p107 := $i2p.i64.ref($i106);
    goto corral_source_split_9137;

  corral_source_split_9137:
    assume {:verifier.code 0} true;
    havoc $i108;
    call {:si_unique_call 9818} {:cexpr "__cil_tmp76"} {:si_old_unique_call 4580} boogie_si_record_i32($i108);
    goto corral_source_split_9138;

  corral_source_split_9138:
    assume {:verifier.code 0} true;
    $i109 := $urem.i32($i108, 8);
    call {:si_unique_call 9819} {:cexpr "__cil_tmp77"} {:si_old_unique_call 4581} boogie_si_record_i32($i109);
    goto corral_source_split_9139;

  corral_source_split_9139:
    assume {:verifier.code 0} true;
    $i110 := $eq.i32($i109, 0);
    goto corral_source_split_9140;

  corral_source_split_9140:
    assume {:verifier.code 0} true;
    assume {:branchcond $i110} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i110 == 1);
    assume {:verifier.code 0} true;
    $i112 := $i98;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    goto corral_source_split_9145;

  corral_source_split_9145:
    assume {:verifier.code 0} true;
    $i113 := $i112;
    goto $bb59;

  $bb56:
    assume $i110 == 1;
    goto corral_source_split_9142;

  corral_source_split_9142:
    assume {:verifier.code 0} true;
    $i111 := $or.i32($i98, 8192);
    call {:si_unique_call 9820} {:cexpr "pix_width"} {:si_old_unique_call 4582} boogie_si_record_i32($i111);
    goto corral_source_split_9143;

  corral_source_split_9143:
    assume {:verifier.code 0} true;
    $i112 := $i111;
    goto $bb58;

  $bb41:
    assume 0 == 1;
    goto corral_source_split_9111;

  corral_source_split_9111:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i75 := $and.i32($i54, $sub.i32(0, 17760257));
    call {:si_unique_call 9821} {:cexpr "pix_width"} {:si_old_unique_call 4553} boogie_si_record_i32($i75);
    goto corral_source_split_9057;

  corral_source_split_9057:
    assume {:verifier.code 0} true;
    $i76 := $i75;
    goto $bb43;

  $bb38:
    assume $i74 == 1;
    goto corral_source_split_9104;

  corral_source_split_9104:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i87 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9822} {:cexpr "pix_width"} {:si_old_unique_call 4564} boogie_si_record_i32($i87);
    goto corral_source_split_9108;

  corral_source_split_9108:
    assume {:verifier.code 0} true;
    $i88 := $or.i32($i87, 393216);
    call {:si_unique_call 9823} {:cexpr "pix_width"} {:si_old_unique_call 4565} boogie_si_record_i32($i88);
    goto corral_source_split_9109;

  corral_source_split_9109:
    assume {:verifier.code 0} true;
    $i76 := $i88;
    goto $bb43;

  $bb35:
    assume $i72 == 1;
    goto corral_source_split_9095;

  corral_source_split_9095:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i85 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9824} {:cexpr "pix_width"} {:si_old_unique_call 4562} boogie_si_record_i32($i85);
    goto corral_source_split_9101;

  corral_source_split_9101:
    assume {:verifier.code 0} true;
    $i86 := $or.i32($i85, 327680);
    call {:si_unique_call 9825} {:cexpr "pix_width"} {:si_old_unique_call 4563} boogie_si_record_i32($i86);
    goto corral_source_split_9102;

  corral_source_split_9102:
    assume {:verifier.code 0} true;
    $i76 := $i86;
    goto $bb43;

  $bb32:
    assume $i70 == 1;
    goto corral_source_split_9086;

  corral_source_split_9086:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $i83 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9826} {:cexpr "pix_width"} {:si_old_unique_call 4560} boogie_si_record_i32($i83);
    goto corral_source_split_9092;

  corral_source_split_9092:
    assume {:verifier.code 0} true;
    $i84 := $or.i32($i83, 262144);
    call {:si_unique_call 9827} {:cexpr "pix_width"} {:si_old_unique_call 4561} boogie_si_record_i32($i84);
    goto corral_source_split_9093;

  corral_source_split_9093:
    assume {:verifier.code 0} true;
    $i76 := $i84;
    goto $bb43;

  $bb29:
    assume $i68 == 1;
    goto corral_source_split_9077;

  corral_source_split_9077:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i81 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9828} {:cexpr "pix_width"} {:si_old_unique_call 4558} boogie_si_record_i32($i81);
    goto corral_source_split_9083;

  corral_source_split_9083:
    assume {:verifier.code 0} true;
    $i82 := $or.i32($i81, 196608);
    call {:si_unique_call 9829} {:cexpr "pix_width"} {:si_old_unique_call 4559} boogie_si_record_i32($i82);
    goto corral_source_split_9084;

  corral_source_split_9084:
    assume {:verifier.code 0} true;
    $i76 := $i82;
    goto $bb43;

  $bb26:
    assume $i66 == 1;
    goto corral_source_split_9068;

  corral_source_split_9068:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $i79 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9830} {:cexpr "pix_width"} {:si_old_unique_call 4556} boogie_si_record_i32($i79);
    goto corral_source_split_9074;

  corral_source_split_9074:
    assume {:verifier.code 0} true;
    $i80 := $or.i32($i79, 131072);
    call {:si_unique_call 9831} {:cexpr "pix_width"} {:si_old_unique_call 4557} boogie_si_record_i32($i80);
    goto corral_source_split_9075;

  corral_source_split_9075:
    assume {:verifier.code 0} true;
    $i76 := $i80;
    goto $bb43;

  $bb23:
    assume $i64 == 1;
    goto corral_source_split_9059;

  corral_source_split_9059:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i77 := $and.i32($i54, $sub.i32(0, 17760257));
    call {:si_unique_call 9832} {:cexpr "pix_width"} {:si_old_unique_call 4554} boogie_si_record_i32($i77);
    goto corral_source_split_9065;

  corral_source_split_9065:
    assume {:verifier.code 0} true;
    $i78 := $or.i32($i77, 65536);
    call {:si_unique_call 9833} {:cexpr "pix_width"} {:si_old_unique_call 4555} boogie_si_record_i32($i78);
    goto corral_source_split_9066;

  corral_source_split_9066:
    assume {:verifier.code 0} true;
    $i76 := $i78;
    goto $bb43;

  $bb20:
    assume $i62 == 1;
    goto corral_source_split_9051;

  corral_source_split_9051:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb13:
    assume $i43 == 1;
    goto corral_source_split_9026;

  corral_source_split_9026:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p1);
    call {:si_unique_call 9834} {:cexpr "__cil_tmp53"} {:si_old_unique_call 4537} boogie_si_record_i64($i44);
    goto corral_source_split_9027;

  corral_source_split_9027:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 24);
    call {:si_unique_call 9835} {:cexpr "__cil_tmp54"} {:si_old_unique_call 4538} boogie_si_record_i64($i45);
    goto corral_source_split_9028;

  corral_source_split_9028:
    assume {:verifier.code 0} true;
    $p46 := $i2p.i64.ref($i45);
    goto corral_source_split_9029;

  corral_source_split_9029:
    assume {:verifier.code 0} true;
    havoc $i47;
    call {:si_unique_call 9836} {:cexpr "__cil_tmp55"} {:si_old_unique_call 4539} boogie_si_record_i8($i47);
    goto corral_source_split_9030;

  corral_source_split_9030:
    assume {:verifier.code 0} true;
    $i48 := $zext.i8.i32($i47);
    call {:si_unique_call 9837} {:cexpr "__cil_tmp56"} {:si_old_unique_call 4540} boogie_si_record_i32($i48);
    goto corral_source_split_9031;

  corral_source_split_9031:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p0);
    call {:si_unique_call 9838} {:cexpr "__cil_tmp58"} {:si_old_unique_call 4541} boogie_si_record_i64($i49);
    goto corral_source_split_9032;

  corral_source_split_9032:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 184);
    call {:si_unique_call 9839} {:cexpr "__cil_tmp59"} {:si_old_unique_call 4542} boogie_si_record_i64($i50);
    goto corral_source_split_9033;

  corral_source_split_9033:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_9034;

  corral_source_split_9034:
    assume {:verifier.code 0} true;
    havoc $i52;
    call {:si_unique_call 9840} {:cexpr "__cil_tmp60"} {:si_old_unique_call 4543} boogie_si_record_i32($i52);
    goto corral_source_split_9035;

  corral_source_split_9035:
    assume {:verifier.code 0} true;
    $i53 := $ne.i32($i52, $i48);
    goto corral_source_split_9036;

  corral_source_split_9036:
    assume {:verifier.code 0} true;
    assume {:branchcond $i53} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i53 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb15:
    assume $i53 == 1;
    goto corral_source_split_9038;

  corral_source_split_9038:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9841} {:si_old_unique_call 4544} cfb_imageblit($p0, $p1);
    goto corral_source_split_9039;

  corral_source_split_9039:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb1:
    assume $i22 == 1;
    goto corral_source_split_8990;

  corral_source_split_8990:
    assume {:verifier.code 0} true;
    goto $bb3;
}



implementation {:LB_Mapping "atyfb_imageblit_loop_$bb74"} {:entrypoint} atyfb_imageblit_EntryCopy_atyfb_imageblit_loop_$bb74($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i1;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i64;
  var $i50: i64;
  var $p51: ref;
  var $i52: i32;
  var $i53: i1;
  var $i54: i32;
  var $i55: i32;
  var $i56: i32;
  var $i57: i64;
  var $i58: i64;
  var $p59: ref;
  var $i60: i8;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i1;
  var $i65: i32;
  var $i66: i1;
  var $i67: i32;
  var $i68: i1;
  var $i69: i32;
  var $i70: i1;
  var $i71: i32;
  var $i72: i1;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i77: i32;
  var $i78: i32;
  var $i79: i32;
  var $i80: i32;
  var $i81: i32;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i32;
  var $i76: i32;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i1;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $i98: i32;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i32;
  var $i103: i32;
  var $i104: i1;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i32;
  var $i109: i32;
  var $i110: i1;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i32;
  var $i118: i64;
  var $i119: i64;
  var $p120: ref;
  var $i121: i8;
  var $i122: i32;
  var $i123: i1;
  var $i124: i64;
  var $i125: i64;
  var $p126: ref;
  var $i127: i32;
  var $i128: i1;
  var $i129: i64;
  var $i130: i64;
  var $p131: ref;
  var $i132: i32;
  var $i133: i64;
  var $i134: i64;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i64;
  var $p139: ref;
  var $i140: i32;
  var $i141: i64;
  var $i142: i64;
  var $p143: ref;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $i150: i64;
  var $p151: ref;
  var $i152: i32;
  var $i155: i64;
  var $i156: i64;
  var $p157: ref;
  var $i158: i32;
  var $i159: i1;
  var $i160: i64;
  var $i161: i64;
  var $p162: ref;
  var $i163: i32;
  var $i164: i64;
  var $i165: i64;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i64;
  var $p170: ref;
  var $i171: i32;
  var $i172: i64;
  var $i173: i64;
  var $p174: ref;
  var $i175: i32;
  var $i176: i64;
  var $i177: i64;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $i181: i64;
  var $p182: ref;
  var $i183: i32;
  var $i186: i64;
  var $i187: i64;
  var $p188: ref;
  var $i189: i32;
  var $i190: i64;
  var $i191: i64;
  var $p192: ref;
  var $i193: i32;
  var $i184: i32;
  var $i185: i32;
  var $i153: i32;
  var $i154: i32;
  var $i194: i32;
  var $i195: i32;
  var $i196: i32;
  var $i197: i16;
  var $i198: i16;
  var $i199: i16;
  var $i200: i64;
  var $i201: i64;
  var $p202: ref;
  var $i203: i32;
  var $i204: i16;
  var $i205: i64;
  var $i206: i64;
  var $p207: ref;
  var $i208: i32;
  var $i209: i64;
  var $i210: i64;
  var $p211: ref;
  var $i212: i8;
  var $i213: i32;
  var $i214: i64;
  var $i215: i64;
  var $p216: ref;
  var $i217: i32;
  var $i218: i32;
  var $i219: i32;
  var $i220: i32;
  var $i221: i32;
  var $i222: i64;
  var $i223: i64;
  var $p224: ref;
  var $i225: i32;
  var $i226: i1;
  var $i227: i32;
  var $i228: i1;
  var $i229: i64;
  var $i230: i64;
  var $p231: ref;
  var $p232: ref;
  var $i233: i64;
  var $i234: i64;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $i238: i32;
  var $i239: i32;
  var $p240: ref;
  var $i241: i32;
  var $i242: i1;
  var $p243: ref;
  var $i244: i32;
  var $i245: i32;
  var $i246: i32;
  var $i247: i32;
  var $p248: ref;
  var $i249: i32;
  var $p250: ref;
  var $i251: i1;
  var $i257: i1;
  var $i258: i32;
  var $i259: i32;
  var $i260: i32;
  var $p261: ref;
  var $i262: i32;
  var $i252: i32;
  var $i253: i32;
  var $i254: i32;
  var $p255: ref;
  var $i256: i32;
  var $i268: i32;
  var $i269: i32;
  var $i270: i32;
  var $i271: i32;
  var $p272: ref;
  var $i273: i32;
  var $i274: i1;
  var $i275: i32;
  var $i276: i32;
  var $i277: i32;
  var $p278: ref;
  var $i279: i32;
  var $i280: i8;
  var $i281: i32;
  var $i282: i32;
  var $i283: i32;
  var $i284: i32;
  var $i285: i8;
  var $i286: i32;
  var $i287: i32;
  var $i288: i8;
  var $i289: i32;
  var $i290: i1;
  var $i291: i32;
  var $i292: i32;
  var $i293: i32;
  var $i294: i32;
  var $i295: i32;
  var $i296: i1;
  var $i297: i1;
  var $i298: i32;
  var $p299: ref;
  var $i300: i1;
  var $i301: i64;
  var $i302: i64;
  var $p303: ref;
  var $i304: i32;
  var $i305: i32;
  var $i306: i32;
  var $i307: i32;
  var $i308: i32;
  var $i309: i32;
  var $p310: ref;
  var $i311: i32;
  var $i312: i32;
  var $i313: i32;
  var $p314: ref;
  var $i263: i32;
  var $i264: i32;
  var $i265: i32;
  var $p266: ref;
  var $i267: i32;
  var $i315: i32;
  var $i316: i32;
  var $i317: i32;
  var $i318: i64;
  var $i319: i64;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i32;
  var $i325: i1;
  var $i326: i32;
  var $i327: i32;
  var $p328: ref;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 9653} {:si_old_unique_call 4511} $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
    goto corral_source_split_8968;

  corral_source_split_8968:
    assume {:verifier.code 0} true;
    $i3 := $p2i.ref.i64($p0);
    call {:si_unique_call 9654} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4512} boogie_si_record_i64($i3);
    goto corral_source_split_8969;

  corral_source_split_8969:
    assume {:verifier.code 0} true;
    $i4 := $add.i64($i3, 1160);
    call {:si_unique_call 9655} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4513} boogie_si_record_i64($i4);
    goto corral_source_split_8970;

  corral_source_split_8970:
    assume {:verifier.code 0} true;
    $p5 := $i2p.i64.ref($i4);
    goto corral_source_split_8971;

  corral_source_split_8971:
    assume {:verifier.code 0} true;
    havoc $p6;
    goto corral_source_split_8972;

  corral_source_split_8972:
    assume {:verifier.code 0} true;
    $p7 := $bitcast.ref.ref($p6);
    goto corral_source_split_8973;

  corral_source_split_8973:
    assume {:verifier.code 0} true;
    $p8 := $bitcast.ref.ref($p1);
    goto corral_source_split_8974;

  corral_source_split_8974:
    assume {:verifier.code 0} true;
    havoc $i9;
    call {:si_unique_call 9656} {:cexpr "__cil_tmp31"} {:si_old_unique_call 4514} boogie_si_record_i32($i9);
    goto corral_source_split_8975;

  corral_source_split_8975:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p1);
    call {:si_unique_call 9657} {:cexpr "__cil_tmp32"} {:si_old_unique_call 4515} boogie_si_record_i64($i10);
    goto corral_source_split_8976;

  corral_source_split_8976:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 4);
    call {:si_unique_call 9658} {:cexpr "__cil_tmp33"} {:si_old_unique_call 4516} boogie_si_record_i64($i11);
    goto corral_source_split_8977;

  corral_source_split_8977:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_8978;

  corral_source_split_8978:
    assume {:verifier.code 0} true;
    havoc $i13;
    call {:si_unique_call 9659} {:cexpr "__cil_tmp34"} {:si_old_unique_call 4517} boogie_si_record_i32($i13);
    goto corral_source_split_8979;

  corral_source_split_8979:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p1);
    call {:si_unique_call 9660} {:cexpr "__cil_tmp35"} {:si_old_unique_call 4518} boogie_si_record_i64($i14);
    goto corral_source_split_8980;

  corral_source_split_8980:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 8);
    call {:si_unique_call 9661} {:cexpr "__cil_tmp36"} {:si_old_unique_call 4519} boogie_si_record_i64($i15);
    goto corral_source_split_8981;

  corral_source_split_8981:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_8982;

  corral_source_split_8982:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 9662} {:cexpr "__cil_tmp37"} {:si_old_unique_call 4520} boogie_si_record_i32($i17);
    goto corral_source_split_8983;

  corral_source_split_8983:
    assume {:verifier.code 0} true;
    $i18 := $p2i.ref.i64($p7);
    call {:si_unique_call 9663} {:cexpr "__cil_tmp38"} {:si_old_unique_call 4521} boogie_si_record_i64($i18);
    goto corral_source_split_8984;

  corral_source_split_8984:
    assume {:verifier.code 0} true;
    $i19 := $add.i64($i18, 1080);
    call {:si_unique_call 9664} {:cexpr "__cil_tmp39"} {:si_old_unique_call 4522} boogie_si_record_i64($i19);
    goto corral_source_split_8985;

  corral_source_split_8985:
    assume {:verifier.code 0} true;
    $p20 := $i2p.i64.ref($i19);
    goto corral_source_split_8986;

  corral_source_split_8986:
    assume {:verifier.code 0} true;
    havoc $i21;
    goto corral_source_split_8987;

  corral_source_split_8987:
    assume {:verifier.code 0} true;
    $i22 := $ne.i32($i21, 0);
    goto corral_source_split_8988;

  corral_source_split_8988:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i22 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p1);
    call {:si_unique_call 9665} {:cexpr "__cil_tmp40"} {:si_old_unique_call 4523} boogie_si_record_i64($i23);
    goto corral_source_split_8992;

  corral_source_split_8992:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 8);
    call {:si_unique_call 9666} {:cexpr "__cil_tmp41"} {:si_old_unique_call 4524} boogie_si_record_i64($i24);
    goto corral_source_split_8993;

  corral_source_split_8993:
    assume {:verifier.code 0} true;
    $p25 := $i2p.i64.ref($i24);
    goto corral_source_split_8994;

  corral_source_split_8994:
    assume {:verifier.code 0} true;
    havoc $i26;
    call {:si_unique_call 9667} {:cexpr "__cil_tmp42"} {:si_old_unique_call 4525} boogie_si_record_i32($i26);
    goto corral_source_split_8995;

  corral_source_split_8995:
    assume {:verifier.code 0} true;
    $i27 := $ne.i32($i26, 0);
    goto corral_source_split_8996;

  corral_source_split_8996:
    assume {:verifier.code 0} true;
    assume {:branchcond $i27} true;
    goto $bb5, $bb6;

  $bb6:
    assume !($i27 == 1);
    goto corral_source_split_9005;

  corral_source_split_9005:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb5:
    assume $i27 == 1;
    goto corral_source_split_8998;

  corral_source_split_8998:
    assume {:verifier.code 0} true;
    $i28 := $p2i.ref.i64($p1);
    call {:si_unique_call 9668} {:cexpr "__cil_tmp43"} {:si_old_unique_call 4526} boogie_si_record_i64($i28);
    goto corral_source_split_8999;

  corral_source_split_8999:
    assume {:verifier.code 0} true;
    $i29 := $add.i64($i28, 12);
    call {:si_unique_call 9669} {:cexpr "__cil_tmp44"} {:si_old_unique_call 4527} boogie_si_record_i64($i29);
    goto corral_source_split_9000;

  corral_source_split_9000:
    assume {:verifier.code 0} true;
    $p30 := $i2p.i64.ref($i29);
    goto corral_source_split_9001;

  corral_source_split_9001:
    assume {:verifier.code 0} true;
    havoc $i31;
    call {:si_unique_call 9670} {:cexpr "__cil_tmp45"} {:si_old_unique_call 4528} boogie_si_record_i32($i31);
    goto corral_source_split_9002;

  corral_source_split_9002:
    assume {:verifier.code 0} true;
    $i32 := $ne.i32($i31, 0);
    goto corral_source_split_9003;

  corral_source_split_9003:
    assume {:verifier.code 0} true;
    assume {:branchcond $i32} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i32 == 1);
    goto corral_source_split_9007;

  corral_source_split_9007:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb7:
    assume $i32 == 1;
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    $i33 := $p2i.ref.i64($p7);
    call {:si_unique_call 9671} {:cexpr "__cil_tmp46"} {:si_old_unique_call 4529} boogie_si_record_i64($i33);
    goto corral_source_split_9009;

  corral_source_split_9009:
    assume {:verifier.code 0} true;
    $i34 := $add.i64($i33, 1072);
    call {:si_unique_call 9672} {:cexpr "__cil_tmp47"} {:si_old_unique_call 4530} boogie_si_record_i64($i34);
    goto corral_source_split_9010;

  corral_source_split_9010:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i34);
    goto corral_source_split_9011;

  corral_source_split_9011:
    assume {:verifier.code 0} true;
    havoc $i36;
    call {:si_unique_call 9673} {:cexpr "__cil_tmp48"} {:si_old_unique_call 4531} boogie_si_record_i32($i36);
    goto corral_source_split_9012;

  corral_source_split_9012:
    assume {:verifier.code 0} true;
    $i37 := $ne.i32($i36, 0);
    goto corral_source_split_9013;

  corral_source_split_9013:
    assume {:verifier.code 0} true;
    assume {:branchcond $i37} true;
    goto $bb11, $bb12;

  $bb12:
    assume !($i37 == 1);
    goto corral_source_split_9023;

  corral_source_split_9023:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9674} {:si_old_unique_call 4536} cfb_imageblit($p0, $p1);
    goto corral_source_split_9024;

  corral_source_split_9024:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb11:
    assume $i37 == 1;
    goto corral_source_split_9015;

  corral_source_split_9015:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p1);
    call {:si_unique_call 9675} {:cexpr "__cil_tmp49"} {:si_old_unique_call 4532} boogie_si_record_i64($i38);
    goto corral_source_split_9016;

  corral_source_split_9016:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 9676} {:cexpr "__cil_tmp50"} {:si_old_unique_call 4533} boogie_si_record_i64($i39);
    goto corral_source_split_9017;

  corral_source_split_9017:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_9018;

  corral_source_split_9018:
    assume {:verifier.code 0} true;
    havoc $i41;
    call {:si_unique_call 9677} {:cexpr "__cil_tmp51"} {:si_old_unique_call 4534} boogie_si_record_i8($i41);
    goto corral_source_split_9019;

  corral_source_split_9019:
    assume {:verifier.code 0} true;
    $i42 := $zext.i8.i32($i41);
    call {:si_unique_call 9678} {:cexpr "__cil_tmp52"} {:si_old_unique_call 4535} boogie_si_record_i32($i42);
    goto corral_source_split_9020;

  corral_source_split_9020:
    assume {:verifier.code 0} true;
    $i43 := $ne.i32($i42, 1);
    goto corral_source_split_9021;

  corral_source_split_9021:
    assume {:verifier.code 0} true;
    assume {:branchcond $i43} true;
    goto $bb13, $bb14;

  $bb14:
    assume !($i43 == 1);
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9679} {:si_old_unique_call 4545} $i54 := aty_ld_le32(720, $p7);
    call {:si_unique_call 9680} {:cexpr "pix_width_save"} {:si_old_unique_call 4546} boogie_si_record_i32($i54);
    goto corral_source_split_9041;

  corral_source_split_9041:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9681} {:si_old_unique_call 4547} $i55 := aty_ld_le32(576, $p7);
    call {:si_unique_call 9682} {:cexpr "tmp___7"} {:si_old_unique_call 4548} boogie_si_record_i32($i55);
    goto corral_source_split_9042;

  corral_source_split_9042:
    assume {:verifier.code 0} true;
    $i56 := $or.i32($i55, 1);
    call {:si_unique_call 9683} {:cexpr "host_cntl"} {:si_old_unique_call 4549} boogie_si_record_i32($i56);
    goto corral_source_split_9043;

  corral_source_split_9043:
    assume {:verifier.code 0} true;
    $i57 := $p2i.ref.i64($p1);
    call {:si_unique_call 9684} {:cexpr "__cil_tmp63"} {:si_old_unique_call 4550} boogie_si_record_i64($i57);
    goto corral_source_split_9044;

  corral_source_split_9044:
    assume {:verifier.code 0} true;
    $i58 := $add.i64($i57, 24);
    call {:si_unique_call 9685} {:cexpr "__cil_tmp64"} {:si_old_unique_call 4551} boogie_si_record_i64($i58);
    goto corral_source_split_9045;

  corral_source_split_9045:
    assume {:verifier.code 0} true;
    $p59 := $i2p.i64.ref($i58);
    goto corral_source_split_9046;

  corral_source_split_9046:
    assume {:verifier.code 0} true;
    havoc $i60;
    call {:si_unique_call 9686} {:cexpr "__cil_tmp65"} {:si_old_unique_call 4552} boogie_si_record_i8($i60);
    goto corral_source_split_9047;

  corral_source_split_9047:
    assume {:verifier.code 0} true;
    $i61 := $zext.i8.i32($i60);
    goto corral_source_split_9048;

  corral_source_split_9048:
    assume {:verifier.code 0} true;
    $i62 := $eq.i32($i61, 1);
    goto corral_source_split_9049;

  corral_source_split_9049:
    assume {:verifier.code 0} true;
    assume {:branchcond $i62} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i62 == 1);
    goto corral_source_split_9053;

  corral_source_split_9053:
    assume {:verifier.code 0} true;
    $i63 := $zext.i8.i32($i60);
    goto corral_source_split_9054;

  corral_source_split_9054:
    assume {:verifier.code 0} true;
    $i64 := $eq.i32($i63, 4);
    goto corral_source_split_9055;

  corral_source_split_9055:
    assume {:verifier.code 0} true;
    assume {:branchcond $i64} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i64 == 1);
    goto corral_source_split_9061;

  corral_source_split_9061:
    assume {:verifier.code 0} true;
    $i65 := $zext.i8.i32($i60);
    goto corral_source_split_9062;

  corral_source_split_9062:
    assume {:verifier.code 0} true;
    $i66 := $eq.i32($i65, 8);
    goto corral_source_split_9063;

  corral_source_split_9063:
    assume {:verifier.code 0} true;
    assume {:branchcond $i66} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i66 == 1);
    goto corral_source_split_9070;

  corral_source_split_9070:
    assume {:verifier.code 0} true;
    $i67 := $zext.i8.i32($i60);
    goto corral_source_split_9071;

  corral_source_split_9071:
    assume {:verifier.code 0} true;
    $i68 := $eq.i32($i67, 15);
    goto corral_source_split_9072;

  corral_source_split_9072:
    assume {:verifier.code 0} true;
    assume {:branchcond $i68} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i68 == 1);
    goto corral_source_split_9079;

  corral_source_split_9079:
    assume {:verifier.code 0} true;
    $i69 := $zext.i8.i32($i60);
    goto corral_source_split_9080;

  corral_source_split_9080:
    assume {:verifier.code 0} true;
    $i70 := $eq.i32($i69, 16);
    goto corral_source_split_9081;

  corral_source_split_9081:
    assume {:verifier.code 0} true;
    assume {:branchcond $i70} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i70 == 1);
    goto corral_source_split_9088;

  corral_source_split_9088:
    assume {:verifier.code 0} true;
    $i71 := $zext.i8.i32($i60);
    goto corral_source_split_9089;

  corral_source_split_9089:
    assume {:verifier.code 0} true;
    $i72 := $eq.i32($i71, 24);
    goto corral_source_split_9090;

  corral_source_split_9090:
    assume {:verifier.code 0} true;
    assume {:branchcond $i72} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i72 == 1);
    goto corral_source_split_9097;

  corral_source_split_9097:
    assume {:verifier.code 0} true;
    $i73 := $zext.i8.i32($i60);
    goto corral_source_split_9098;

  corral_source_split_9098:
    assume {:verifier.code 0} true;
    $i74 := $eq.i32($i73, 32);
    goto corral_source_split_9099;

  corral_source_split_9099:
    assume {:verifier.code 0} true;
    assume {:branchcond $i74} true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i74 == 1);
    goto corral_source_split_9106;

  corral_source_split_9106:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb41, $bb42;

  $bb42:
    assume !(0 == 1);
    goto corral_source_split_9113;

  corral_source_split_9113:
    assume {:verifier.code 0} true;
    $i76 := $i54;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb44;

  $bb44:
    assume {:verifier.code 0} true;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    goto $bb50;

  $bb50:
    assume {:verifier.code 0} true;
    goto $bb51;

  $bb51:
    assume {:verifier.code 0} true;
    $i89 := $p2i.ref.i64($p0);
    call {:si_unique_call 9687} {:cexpr "__cil_tmp67"} {:si_old_unique_call 4566} boogie_si_record_i64($i89);
    goto corral_source_split_9115;

  corral_source_split_9115:
    assume {:verifier.code 0} true;
    $i90 := $add.i64($i89, 184);
    call {:si_unique_call 9688} {:cexpr "__cil_tmp68"} {:si_old_unique_call 4567} boogie_si_record_i64($i90);
    goto corral_source_split_9116;

  corral_source_split_9116:
    assume {:verifier.code 0} true;
    $p91 := $i2p.i64.ref($i90);
    goto corral_source_split_9117;

  corral_source_split_9117:
    assume {:verifier.code 0} true;
    havoc $i92;
    call {:si_unique_call 9689} {:cexpr "__cil_tmp69"} {:si_old_unique_call 4568} boogie_si_record_i32($i92);
    goto corral_source_split_9118;

  corral_source_split_9118:
    assume {:verifier.code 0} true;
    $i93 := $eq.i32($i92, 24);
    goto corral_source_split_9119;

  corral_source_split_9119:
    assume {:verifier.code 0} true;
    assume {:branchcond $i93} true;
    goto $bb52, $bb53;

  $bb53:
    assume !($i93 == 1);
    assume {:verifier.code 0} true;
    $i114, $i115, $i116, $i117 := 0, $i76, $i17, $i9;
    goto $bb60;

  $bb60:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9149;

  corral_source_split_9149:
    assume {:verifier.code 0} true;
    $i118 := $p2i.ref.i64($p1);
    call {:si_unique_call 9690} {:cexpr "__cil_tmp78"} {:si_old_unique_call 4583} boogie_si_record_i64($i118);
    goto corral_source_split_9150;

  corral_source_split_9150:
    assume {:verifier.code 0} true;
    $i119 := $add.i64($i118, 24);
    call {:si_unique_call 9691} {:cexpr "__cil_tmp79"} {:si_old_unique_call 4584} boogie_si_record_i64($i119);
    goto corral_source_split_9151;

  corral_source_split_9151:
    assume {:verifier.code 0} true;
    $p120 := $i2p.i64.ref($i119);
    goto corral_source_split_9152;

  corral_source_split_9152:
    assume {:verifier.code 0} true;
    havoc $i121;
    call {:si_unique_call 9692} {:cexpr "__cil_tmp80"} {:si_old_unique_call 4585} boogie_si_record_i8($i121);
    goto corral_source_split_9153;

  corral_source_split_9153:
    assume {:verifier.code 0} true;
    $i122 := $zext.i8.i32($i121);
    call {:si_unique_call 9693} {:cexpr "__cil_tmp81"} {:si_old_unique_call 4586} boogie_si_record_i32($i122);
    goto corral_source_split_9154;

  corral_source_split_9154:
    assume {:verifier.code 0} true;
    $i123 := $eq.i32($i122, 1);
    goto corral_source_split_9155;

  corral_source_split_9155:
    assume {:verifier.code 0} true;
    assume {:branchcond $i123} true;
    goto $bb61, $bb62;

  $bb62:
    assume !($i123 == 1);
    assume {:verifier.code 0} true;
    $i194, $i195 := 327683, 512;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9237;

  corral_source_split_9237:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9694} {:si_old_unique_call 4626} wait_for_fifo(6, $p7);
    goto corral_source_split_9238;

  corral_source_split_9238:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9695} {:si_old_unique_call 4627} aty_st_le32(712, $sub.i32(0, 1), $p7);
    goto corral_source_split_9239;

  corral_source_split_9239:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9696} {:si_old_unique_call 4628} aty_st_le32(720, $i115, $p7);
    goto corral_source_split_9240;

  corral_source_split_9240:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9697} {:si_old_unique_call 4629} aty_st_le32(724, $i194, $p7);
    goto corral_source_split_9241;

  corral_source_split_9241:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9698} {:si_old_unique_call 4630} aty_st_le32(728, $i195, $p7);
    goto corral_source_split_9242;

  corral_source_split_9242:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9699} {:si_old_unique_call 4631} aty_st_le32(576, $i56, $p7);
    goto corral_source_split_9243;

  corral_source_split_9243:
    assume {:verifier.code 0} true;
    $i196 := $or.i32(3, $i114);
    call {:si_unique_call 9700} {:cexpr "__cil_tmp139"} {:si_old_unique_call 4632} boogie_si_record_i32($i196);
    goto corral_source_split_9244;

  corral_source_split_9244:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9701} {:si_old_unique_call 4633} aty_st_le32(304, $i196, $p7);
    goto corral_source_split_9245;

  corral_source_split_9245:
    assume {:verifier.code 0} true;
    $i197 := $trunc.i32.i16($i117);
    call {:si_unique_call 9702} {:cexpr "__cil_tmp141"} {:si_old_unique_call 4634} boogie_si_record_i16($i197);
    goto corral_source_split_9246;

  corral_source_split_9246:
    assume {:verifier.code 0} true;
    $i198 := $trunc.i32.i16($i13);
    call {:si_unique_call 9703} {:cexpr "__cil_tmp142"} {:si_old_unique_call 4635} boogie_si_record_i16($i198);
    goto corral_source_split_9247;

  corral_source_split_9247:
    assume {:verifier.code 0} true;
    $i199 := $trunc.i32.i16($i116);
    call {:si_unique_call 9704} {:cexpr "__cil_tmp143"} {:si_old_unique_call 4636} boogie_si_record_i16($i199);
    goto corral_source_split_9248;

  corral_source_split_9248:
    assume {:verifier.code 0} true;
    $i200 := $p2i.ref.i64($p1);
    call {:si_unique_call 9705} {:cexpr "__cil_tmp144"} {:si_old_unique_call 4637} boogie_si_record_i64($i200);
    goto corral_source_split_9249;

  corral_source_split_9249:
    assume {:verifier.code 0} true;
    $i201 := $add.i64($i200, 12);
    call {:si_unique_call 9706} {:cexpr "__cil_tmp145"} {:si_old_unique_call 4638} boogie_si_record_i64($i201);
    goto corral_source_split_9250;

  corral_source_split_9250:
    assume {:verifier.code 0} true;
    $p202 := $i2p.i64.ref($i201);
    goto corral_source_split_9251;

  corral_source_split_9251:
    assume {:verifier.code 0} true;
    havoc $i203;
    call {:si_unique_call 9707} {:cexpr "__cil_tmp146"} {:si_old_unique_call 4639} boogie_si_record_i32($i203);
    goto corral_source_split_9252;

  corral_source_split_9252:
    assume {:verifier.code 0} true;
    $i204 := $trunc.i32.i16($i203);
    call {:si_unique_call 9708} {:cexpr "__cil_tmp147"} {:si_old_unique_call 4640} boogie_si_record_i16($i204);
    goto corral_source_split_9253;

  corral_source_split_9253:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9709} {:si_old_unique_call 4641} draw_rect($i197, $i198, $i199, $i204, $p7);
    goto corral_source_split_9254;

  corral_source_split_9254:
    assume {:verifier.code 0} true;
    $i205 := $p2i.ref.i64($p1);
    call {:si_unique_call 9710} {:cexpr "__cil_tmp148"} {:si_old_unique_call 4642} boogie_si_record_i64($i205);
    goto corral_source_split_9255;

  corral_source_split_9255:
    assume {:verifier.code 0} true;
    $i206 := $add.i64($i205, 12);
    call {:si_unique_call 9711} {:cexpr "__cil_tmp149"} {:si_old_unique_call 4643} boogie_si_record_i64($i206);
    goto corral_source_split_9256;

  corral_source_split_9256:
    assume {:verifier.code 0} true;
    $p207 := $i2p.i64.ref($i206);
    goto corral_source_split_9257;

  corral_source_split_9257:
    assume {:verifier.code 0} true;
    havoc $i208;
    call {:si_unique_call 9712} {:cexpr "__cil_tmp150"} {:si_old_unique_call 4644} boogie_si_record_i32($i208);
    goto corral_source_split_9258;

  corral_source_split_9258:
    assume {:verifier.code 0} true;
    $i209 := $p2i.ref.i64($p1);
    call {:si_unique_call 9713} {:cexpr "__cil_tmp151"} {:si_old_unique_call 4645} boogie_si_record_i64($i209);
    goto corral_source_split_9259;

  corral_source_split_9259:
    assume {:verifier.code 0} true;
    $i210 := $add.i64($i209, 24);
    call {:si_unique_call 9714} {:cexpr "__cil_tmp152"} {:si_old_unique_call 4646} boogie_si_record_i64($i210);
    goto corral_source_split_9260;

  corral_source_split_9260:
    assume {:verifier.code 0} true;
    $p211 := $i2p.i64.ref($i210);
    goto corral_source_split_9261;

  corral_source_split_9261:
    assume {:verifier.code 0} true;
    havoc $i212;
    call {:si_unique_call 9715} {:cexpr "__cil_tmp153"} {:si_old_unique_call 4647} boogie_si_record_i8($i212);
    goto corral_source_split_9262;

  corral_source_split_9262:
    assume {:verifier.code 0} true;
    $i213 := $zext.i8.i32($i212);
    call {:si_unique_call 9716} {:cexpr "__cil_tmp154"} {:si_old_unique_call 4648} boogie_si_record_i32($i213);
    goto corral_source_split_9263;

  corral_source_split_9263:
    assume {:verifier.code 0} true;
    $i214 := $p2i.ref.i64($p1);
    call {:si_unique_call 9717} {:cexpr "__cil_tmp155"} {:si_old_unique_call 4649} boogie_si_record_i64($i214);
    goto corral_source_split_9264;

  corral_source_split_9264:
    assume {:verifier.code 0} true;
    $i215 := $add.i64($i214, 8);
    call {:si_unique_call 9718} {:cexpr "__cil_tmp156"} {:si_old_unique_call 4650} boogie_si_record_i64($i215);
    goto corral_source_split_9265;

  corral_source_split_9265:
    assume {:verifier.code 0} true;
    $p216 := $i2p.i64.ref($i215);
    goto corral_source_split_9266;

  corral_source_split_9266:
    assume {:verifier.code 0} true;
    havoc $i217;
    call {:si_unique_call 9719} {:cexpr "__cil_tmp157"} {:si_old_unique_call 4651} boogie_si_record_i32($i217);
    goto corral_source_split_9267;

  corral_source_split_9267:
    assume {:verifier.code 0} true;
    $i218 := $mul.i32($i217, $i213);
    call {:si_unique_call 9720} {:cexpr "__cil_tmp158"} {:si_old_unique_call 4652} boogie_si_record_i32($i218);
    goto corral_source_split_9268;

  corral_source_split_9268:
    assume {:verifier.code 0} true;
    $i219 := $add.i32($i218, 7);
    call {:si_unique_call 9721} {:cexpr "__cil_tmp159"} {:si_old_unique_call 4653} boogie_si_record_i32($i219);
    goto corral_source_split_9269;

  corral_source_split_9269:
    assume {:verifier.code 0} true;
    $i220 := $udiv.i32($i219, 8);
    call {:si_unique_call 9722} {:cexpr "__cil_tmp160"} {:si_old_unique_call 4654} boogie_si_record_i32($i220);
    goto corral_source_split_9270;

  corral_source_split_9270:
    assume {:verifier.code 0} true;
    $i221 := $mul.i32($i220, $i208);
    call {:si_unique_call 9723} {:cexpr "__cil_tmp161"} {:si_old_unique_call 4655} boogie_si_record_i32($i221);
    goto corral_source_split_9271;

  corral_source_split_9271:
    assume {:verifier.code 0} true;
    $i222 := $p2i.ref.i64($p0);
    call {:si_unique_call 9724} {:cexpr "__cil_tmp163"} {:si_old_unique_call 4656} boogie_si_record_i64($i222);
    goto corral_source_split_9272;

  corral_source_split_9272:
    assume {:verifier.code 0} true;
    $i223 := $add.i64($i222, 184);
    call {:si_unique_call 9725} {:cexpr "__cil_tmp164"} {:si_old_unique_call 4657} boogie_si_record_i64($i223);
    goto corral_source_split_9273;

  corral_source_split_9273:
    assume {:verifier.code 0} true;
    $p224 := $i2p.i64.ref($i223);
    goto corral_source_split_9274;

  corral_source_split_9274:
    assume {:verifier.code 0} true;
    havoc $i225;
    call {:si_unique_call 9726} {:cexpr "__cil_tmp165"} {:si_old_unique_call 4658} boogie_si_record_i32($i225);
    goto corral_source_split_9275;

  corral_source_split_9275:
    assume {:verifier.code 0} true;
    $i226 := $eq.i32($i225, 24);
    goto corral_source_split_9276;

  corral_source_split_9276:
    assume {:verifier.code 0} true;
    assume {:branchcond $i226} true;
    goto $bb70, $bb71;

  $bb71:
    assume !($i226 == 1);
    goto corral_source_split_9282;

  corral_source_split_9282:
    assume {:verifier.code 0} true;
    goto $bb109;

  $bb109:
    assume {:verifier.code 0} true;
    $i316 := $add.i32($i221, 3);
    call {:si_unique_call 9727} {:cexpr "__cil_tmp190"} {:si_old_unique_call 4685} boogie_si_record_i32($i316);
    goto corral_source_split_9377;

  corral_source_split_9377:
    assume {:verifier.code 0} true;
    $i317 := $udiv.i32($i316, 4);
    call {:si_unique_call 9728} {:cexpr "dwords"} {:si_old_unique_call 4686} boogie_si_record_i32($i317);
    goto corral_source_split_9378;

  corral_source_split_9378:
    assume {:verifier.code 0} true;
    $i318 := $p2i.ref.i64($p1);
    call {:si_unique_call 9729} {:cexpr "__cil_tmp191"} {:si_old_unique_call 4687} boogie_si_record_i64($i318);
    goto corral_source_split_9379;

  corral_source_split_9379:
    assume {:verifier.code 0} true;
    $i319 := $add.i64($i318, 32);
    call {:si_unique_call 9730} {:cexpr "__cil_tmp192"} {:si_old_unique_call 4688} boogie_si_record_i64($i319);
    goto corral_source_split_9380;

  corral_source_split_9380:
    assume {:verifier.code 0} true;
    $p320 := $i2p.i64.ref($i319);
    goto corral_source_split_9381;

  corral_source_split_9381:
    assume {:verifier.code 0} true;
    havoc $p321;
    goto corral_source_split_9382;

  corral_source_split_9382:
    assume {:verifier.code 0} true;
    $p322 := $bitcast.ref.ref($p321);
    goto corral_source_split_9383;

  corral_source_split_9383:
    assume {:verifier.code 0} true;
    $p323, $i324 := $p321, $i317;
    goto $bb111;

  $bb111:
    call {:si_unique_call 9731} $p323, $i324, $i325, $i326, $i327, $p328 := atyfb_imageblit_loop_$bb111_PassiveCopy($p7, $p323, $i324, $i325, $i326, $i327, $p328);
    goto $bb111_last;

  $bb111_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9388;

  corral_source_split_9388:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    $i325 := $ne.i32($i324, 0);
    goto corral_source_split_9390;

  corral_source_split_9390:
    assume {:verifier.code 0} true;
    assume {:branchcond $i325} true;
    goto $bb113, $bb114;

  $bb114:
    assume !($i325 == 1);
    goto corral_source_split_9394;

  corral_source_split_9394:
    assume {:verifier.code 0} true;
    goto $bb116;

  $bb116:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb110:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9732} {:si_old_unique_call 4689} wait_for_fifo(1, $p7);
    goto corral_source_split_9385;

  corral_source_split_9385:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9733} {:si_old_unique_call 4690} aty_st_le32(720, $i54, $p7);
    goto corral_source_split_9386;

  corral_source_split_9386:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb113:
    assume $i325 == 1;
    goto corral_source_split_9392;

  corral_source_split_9392:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9734} {:si_old_unique_call 4691} wait_for_fifo(1, $p7);
    goto corral_source_split_9396;

  corral_source_split_9396:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9735} {:si_old_unique_call 4692} $i326 := __le32_to_cpup($p323);
    call {:si_unique_call 9736} {:cexpr "tmp___8"} {:si_old_unique_call 4693} boogie_si_record_i32($i326);
    goto corral_source_split_9397;

  corral_source_split_9397:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9737} {:si_old_unique_call 4694} aty_st_le32(512, $i326, $p7);
    goto corral_source_split_9398;

  corral_source_split_9398:
    assume {:verifier.code 0} true;
    $i327 := $sub.i32($i324, 1);
    call {:si_unique_call 9738} {:cexpr "dwords"} {:si_old_unique_call 4695} boogie_si_record_i32($i327);
    goto corral_source_split_9399;

  corral_source_split_9399:
    assume {:verifier.code 0} true;
    $p328 := $add.ref($p323, $mul.ref(1, 4));
    goto corral_source_split_9400;

  corral_source_split_9400:
    assume {:verifier.code 0} true;
    $p323, $i324 := $p328, $i327;
    goto corral_source_split_9400_dummy;

  corral_source_split_9400_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb70:
    assume $i226 == 1;
    goto corral_source_split_9278;

  corral_source_split_9278:
    assume {:verifier.code 0} true;
    $i227 := $and.i32($i115, 8192);
    call {:si_unique_call 9739} {:cexpr "__cil_tmp166"} {:si_old_unique_call 4659} boogie_si_record_i32($i227);
    goto corral_source_split_9279;

  corral_source_split_9279:
    assume {:verifier.code 0} true;
    $i228 := $ne.i32($i227, 0);
    goto corral_source_split_9280;

  corral_source_split_9280:
    assume {:verifier.code 0} true;
    assume {:branchcond $i228} true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i228 == 1);
    goto corral_source_split_9286;

  corral_source_split_9286:
    assume {:verifier.code 0} true;
    $i229 := $p2i.ref.i64($p1);
    call {:si_unique_call 9740} {:cexpr "__cil_tmp167"} {:si_old_unique_call 4660} boogie_si_record_i64($i229);
    goto corral_source_split_9287;

  corral_source_split_9287:
    assume {:verifier.code 0} true;
    $i230 := $add.i64($i229, 32);
    call {:si_unique_call 9741} {:cexpr "__cil_tmp168"} {:si_old_unique_call 4661} boogie_si_record_i64($i230);
    goto corral_source_split_9288;

  corral_source_split_9288:
    assume {:verifier.code 0} true;
    $p231 := $i2p.i64.ref($i230);
    goto corral_source_split_9289;

  corral_source_split_9289:
    assume {:verifier.code 0} true;
    havoc $p232;
    goto corral_source_split_9290;

  corral_source_split_9290:
    assume {:verifier.code 0} true;
    $i233 := $p2i.ref.i64($p1);
    call {:si_unique_call 9742} {:cexpr "__cil_tmp170"} {:si_old_unique_call 4662} boogie_si_record_i64($i233);
    goto corral_source_split_9291;

  corral_source_split_9291:
    assume {:verifier.code 0} true;
    $i234 := $add.i64($i233, 8);
    call {:si_unique_call 9743} {:cexpr "__cil_tmp171"} {:si_old_unique_call 4663} boogie_si_record_i64($i234);
    goto corral_source_split_9292;

  corral_source_split_9292:
    assume {:verifier.code 0} true;
    $p235 := $i2p.i64.ref($i234);
    goto corral_source_split_9293;

  corral_source_split_9293:
    assume {:verifier.code 0} true;
    havoc $i236;
    call {:si_unique_call 9744} {:cexpr "__cil_tmp172"} {:si_old_unique_call 4664} boogie_si_record_i32($i236);
    goto corral_source_split_9294;

  corral_source_split_9294:
    assume {:verifier.code 0} true;
    $i237, $i238, $i239, $p240, $i241 := 7, 0, $i236, $p232, $i221;
    goto $bb74;

  $bb74:
    call {:si_unique_call 9745} $i237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314, $i263, $i264, $i265, $p266, $i267, $i315 := atyfb_imageblit_loop_$bb74($p1, $p2, $p7, $i237, $i238, $i239, $p240, $i241, $i242, $p243, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314, $i263, $i264, $i265, $p266, $i267, $i315);
    LoopBound_AssertVar := false;
    goto $bb74_last;

  $bb74_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9296;

  corral_source_split_9296:
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $i242 := $ne.i32($i241, 0);
    goto corral_source_split_9298;

  corral_source_split_9298:
    assume {:verifier.code 0} true;
    assume {:branchcond $i242} true;
    goto $bb76, $bb77;

  $bb77:
    assume !($i242 == 1);
    goto corral_source_split_9302;

  corral_source_split_9302:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb108;

  $bb108:
    assume {:verifier.code 0} true;
    goto $bb110;

  $bb76:
    assume $i242 == 1;
    goto corral_source_split_9300;

  corral_source_split_9300:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto corral_source_split_9304;

  corral_source_split_9304:
    assume {:verifier.code 0} true;
    $p243 := $bitcast.ref.ref($p2);
    goto corral_source_split_9305;

  corral_source_split_9305:
    assume {:verifier.code 0} true;
    $i244, $i245, $i246, $i247, $p248, $i249, $p250 := $i237, $i238, 0, $i239, $p240, $i241, $p2;
    goto $bb80;

  $bb80:
    call {:si_unique_call 9746} $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314 := atyfb_imageblit_loop_$bb80($p1, $i244, $i245, $i246, $i247, $p248, $i249, $p250, $i251, $i257, $i258, $i259, $i260, $p261, $i262, $i252, $i253, $i254, $p255, $i256, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312, $i313, $p314);
    goto $bb80_last;

  $bb80_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9307;

  corral_source_split_9307:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    $i251 := $slt.i32($i246, 4);
    goto corral_source_split_9309;

  corral_source_split_9309:
    assume {:verifier.code 0} true;
    $i252, $i253, $i254, $p255, $i256 := $i244, $i245, $i247, $p248, $i249;
    assume {:branchcond $i251} true;
    goto $bb82, $bb83;

  $bb83:
    assume !($i251 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9314;

  corral_source_split_9314:
    assume {:verifier.code 0} true;
    $i263, $i264, $i265, $p266, $i267 := $i252, $i253, $i254, $p255, $i256;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9320;

  corral_source_split_9320:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9747} {:si_old_unique_call 4665} wait_for_fifo(1, $p7);
    goto corral_source_split_9321;

  corral_source_split_9321:
    assume {:verifier.code 0} true;
    havoc $i315;
    call {:si_unique_call 9748} {:cexpr "__cil_tmp188"} {:si_old_unique_call 4666} boogie_si_record_i32($i315);
    goto corral_source_split_9322;

  corral_source_split_9322:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9749} {:si_old_unique_call 4667} aty_st_le32(512, $i315, $p7);
    goto corral_source_split_9323;

  corral_source_split_9323:
    assume {:verifier.code 0} true;
    $i237, $i238, $i239, $p240, $i241 := $i263, $i264, $i265, $p266, $i267;
    goto corral_source_split_9323_dummy;

  corral_source_split_9323_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb82:
    assume $i251 == 1;
    goto corral_source_split_9311;

  corral_source_split_9311:
    assume {:verifier.code 0} true;
    $i257 := $ne.i32($i249, 0);
    goto corral_source_split_9312;

  corral_source_split_9312:
    assume {:verifier.code 0} true;
    $i258, $i259, $i260, $p261, $i262 := $i244, $i245, $i247, $p248, $i249;
    assume {:branchcond $i257} true;
    goto $bb84, $bb85;

  $bb85:
    assume !($i257 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9318;

  corral_source_split_9318:
    assume {:verifier.code 0} true;
    $i263, $i264, $i265, $p266, $i267 := $i258, $i259, $i260, $p261, $i262;
    goto $bb87;

  $bb84:
    assume $i257 == 1;
    goto corral_source_split_9316;

  corral_source_split_9316:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    $i268, $i269, $i270, $i271, $p272, $i273 := 7, $i244, $i245, $i247, $p248, $i249;
    goto $bb89;

  $bb89:
    call {:si_unique_call 9750} $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312 := atyfb_imageblit_loop_$bb89($p1, $i268, $i269, $i270, $i271, $p272, $i273, $i274, $i275, $i276, $i277, $p278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $p299, $i300, $i301, $i302, $p303, $i304, $i305, $i306, $i307, $i308, $i309, $p310, $i311, $i312);
    goto $bb89_last;

  $bb89_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9325;

  corral_source_split_9325:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    $i274 := $sge.i32($i268, 0);
    goto corral_source_split_9327;

  corral_source_split_9327:
    assume {:verifier.code 0} true;
    $i275, $i276, $i277, $p278, $i279 := $i269, $i270, $i271, $p272, $i273;
    assume {:branchcond $i274} true;
    goto $bb91, $bb92;

  $bb92:
    assume !($i274 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9331;

  corral_source_split_9331:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i313 := $add.i32($i246, 1);
    call {:si_unique_call 9751} {:cexpr "byte_id_in_dword"} {:si_old_unique_call 4677} boogie_si_record_i32($i313);
    goto corral_source_split_9346;

  corral_source_split_9346:
    assume {:verifier.code 0} true;
    $p314 := $add.ref($p250, $mul.ref(1, 1));
    goto corral_source_split_9347;

  corral_source_split_9347:
    assume {:verifier.code 0} true;
    $i244, $i245, $i246, $i247, $p248, $i249, $p250 := $i275, $i276, $i313, $i277, $p278, $i279, $p314;
    goto corral_source_split_9347_dummy;

  corral_source_split_9347_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb91:
    assume $i274 == 1;
    goto corral_source_split_9329;

  corral_source_split_9329:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    havoc $i280;
    call {:si_unique_call 9752} {:cexpr "__cil_tmp174"} {:si_old_unique_call 4668} boogie_si_record_i8($i280);
    goto corral_source_split_9333;

  corral_source_split_9333:
    assume {:verifier.code 0} true;
    $i281 := $zext.i8.i32($i280);
    call {:si_unique_call 9753} {:cexpr "__cil_tmp175"} {:si_old_unique_call 4669} boogie_si_record_i32($i281);
    goto corral_source_split_9334;

  corral_source_split_9334:
    assume {:verifier.code 0} true;
    $i282 := $ashr.i32($i281, $i269);
    call {:si_unique_call 9754} {:cexpr "__cil_tmp176"} {:si_old_unique_call 4670} boogie_si_record_i32($i282);
    goto corral_source_split_9335;

  corral_source_split_9335:
    assume {:verifier.code 0} true;
    $i283 := $and.i32($i282, 1);
    call {:si_unique_call 9755} {:cexpr "__cil_tmp177"} {:si_old_unique_call 4671} boogie_si_record_i32($i283);
    goto corral_source_split_9336;

  corral_source_split_9336:
    assume {:verifier.code 0} true;
    $i284 := $shl.i32($i283, $i268);
    call {:si_unique_call 9756} {:cexpr "__cil_tmp178"} {:si_old_unique_call 4672} boogie_si_record_i32($i284);
    goto corral_source_split_9337;

  corral_source_split_9337:
    assume {:verifier.code 0} true;
    havoc $i285;
    call {:si_unique_call 9757} {:cexpr "__cil_tmp179"} {:si_old_unique_call 4673} boogie_si_record_i8($i285);
    goto corral_source_split_9338;

  corral_source_split_9338:
    assume {:verifier.code 0} true;
    $i286 := $zext.i8.i32($i285);
    call {:si_unique_call 9758} {:cexpr "__cil_tmp180"} {:si_old_unique_call 4674} boogie_si_record_i32($i286);
    goto corral_source_split_9339;

  corral_source_split_9339:
    assume {:verifier.code 0} true;
    $i287 := $or.i32($i286, $i284);
    call {:si_unique_call 9759} {:cexpr "__cil_tmp181"} {:si_old_unique_call 4675} boogie_si_record_i32($i287);
    goto corral_source_split_9340;

  corral_source_split_9340:
    assume {:verifier.code 0} true;
    $i288 := $trunc.i32.i8($i287);
    goto corral_source_split_9341;

  corral_source_split_9341:
    assume {:verifier.code 0} true;
    goto corral_source_split_9342;

  corral_source_split_9342:
    assume {:verifier.code 0} true;
    $i289 := $add.i32($i270, 1);
    call {:si_unique_call 9760} {:cexpr "mult24"} {:si_old_unique_call 4676} boogie_si_record_i32($i289);
    goto corral_source_split_9343;

  corral_source_split_9343:
    assume {:verifier.code 0} true;
    $i290 := $eq.i32($i289, 3);
    goto corral_source_split_9344;

  corral_source_split_9344:
    assume {:verifier.code 0} true;
    assume {:branchcond $i290} true;
    goto $bb95, $bb96;

  $bb96:
    assume !($i290 == 1);
    assume {:verifier.code 0} true;
    $i293, $i294, $i295 := $i269, $i289, $i271;
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9353;

  corral_source_split_9353:
    assume {:verifier.code 0} true;
    $i296 := $slt.i32($i293, 0);
    goto corral_source_split_9354;

  corral_source_split_9354:
    assume {:verifier.code 0} true;
    assume {:branchcond $i296} true;
    goto $bb98, $bb99;

  $bb99:
    assume !($i296 == 1);
    goto corral_source_split_9358;

  corral_source_split_9358:
    assume {:verifier.code 0} true;
    $i297 := $eq.i32($i295, 0);
    goto corral_source_split_9359;

  corral_source_split_9359:
    assume {:verifier.code 0} true;
    assume {:branchcond $i297} true;
    goto $bb101, $bb102;

  $bb102:
    assume !($i297 == 1);
    assume {:verifier.code 0} true;
    $i307, $i308, $i309, $p310, $i311 := $i268, $i293, $i295, $p272, $i273;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    $i312 := $sub.i32($i307, 1);
    call {:si_unique_call 9761} {:cexpr "outbit"} {:si_old_unique_call 4684} boogie_si_record_i32($i312);
    goto corral_source_split_9375;

  corral_source_split_9375:
    assume {:verifier.code 0} true;
    $i268, $i269, $i270, $i271, $p272, $i273 := $i312, $i308, $i294, $i309, $p310, $i311;
    goto corral_source_split_9375_dummy;

  corral_source_split_9375_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb101:
    assume $i297 == 1;
    goto corral_source_split_9365;

  corral_source_split_9365:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    $i298 := $sub.i32($i273, 1);
    call {:si_unique_call 9762} {:cexpr "src_bytes"} {:si_old_unique_call 4680} boogie_si_record_i32($i298);
    goto corral_source_split_9361;

  corral_source_split_9361:
    assume {:verifier.code 0} true;
    $p299 := $add.ref($p272, $mul.ref(1, 1));
    goto corral_source_split_9362;

  corral_source_split_9362:
    assume {:verifier.code 0} true;
    $i300 := $eq.i32($i295, 0);
    goto corral_source_split_9363;

  corral_source_split_9363:
    assume {:verifier.code 0} true;
    assume {:branchcond $i300} true;
    goto $bb103, $bb104;

  $bb104:
    assume !($i300 == 1);
    assume {:verifier.code 0} true;
    $i305, $i306 := $i268, $i295;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9373;

  corral_source_split_9373:
    assume {:verifier.code 0} true;
    $i307, $i308, $i309, $p310, $i311 := $i305, 7, $i306, $p299, $i298;
    goto $bb106;

  $bb103:
    assume $i300 == 1;
    goto corral_source_split_9367;

  corral_source_split_9367:
    assume {:verifier.code 0} true;
    $i301 := $p2i.ref.i64($p1);
    call {:si_unique_call 9763} {:cexpr "__cil_tmp182"} {:si_old_unique_call 4681} boogie_si_record_i64($i301);
    goto corral_source_split_9368;

  corral_source_split_9368:
    assume {:verifier.code 0} true;
    $i302 := $add.i64($i301, 8);
    call {:si_unique_call 9764} {:cexpr "__cil_tmp183"} {:si_old_unique_call 4682} boogie_si_record_i64($i302);
    goto corral_source_split_9369;

  corral_source_split_9369:
    assume {:verifier.code 0} true;
    $p303 := $i2p.i64.ref($i302);
    goto corral_source_split_9370;

  corral_source_split_9370:
    assume {:verifier.code 0} true;
    havoc $i304;
    call {:si_unique_call 9765} {:cexpr "__cil_tmp184"} {:si_old_unique_call 4683} boogie_si_record_i32($i304);
    goto corral_source_split_9371;

  corral_source_split_9371:
    assume {:verifier.code 0} true;
    $i305, $i306 := 0, $i304;
    goto $bb105;

  $bb98:
    assume $i296 == 1;
    goto corral_source_split_9356;

  corral_source_split_9356:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb95:
    assume $i290 == 1;
    goto corral_source_split_9349;

  corral_source_split_9349:
    assume {:verifier.code 0} true;
    $i291 := $sub.i32($i269, 1);
    call {:si_unique_call 9766} {:cexpr "inbit"} {:si_old_unique_call 4678} boogie_si_record_i32($i291);
    goto corral_source_split_9350;

  corral_source_split_9350:
    assume {:verifier.code 0} true;
    $i292 := $sub.i32($i271, 1);
    call {:si_unique_call 9767} {:cexpr "width___0"} {:si_old_unique_call 4679} boogie_si_record_i32($i292);
    goto corral_source_split_9351;

  corral_source_split_9351:
    assume {:verifier.code 0} true;
    $i293, $i294, $i295 := $i291, 0, $i292;
    goto $bb97;

  $bb72:
    assume $i228 == 1;
    goto corral_source_split_9284;

  corral_source_split_9284:
    assume {:verifier.code 0} true;
    goto $bb109;

  $bb61:
    assume $i123 == 1;
    goto corral_source_split_9157;

  corral_source_split_9157:
    assume {:verifier.code 0} true;
    $i124 := $p2i.ref.i64($p0);
    call {:si_unique_call 9768} {:cexpr "__cil_tmp83"} {:si_old_unique_call 4587} boogie_si_record_i64($i124);
    goto corral_source_split_9158;

  corral_source_split_9158:
    assume {:verifier.code 0} true;
    $i125 := $add.i64($i124, 356);
    call {:si_unique_call 9769} {:cexpr "__cil_tmp84"} {:si_old_unique_call 4588} boogie_si_record_i64($i125);
    goto corral_source_split_9159;

  corral_source_split_9159:
    assume {:verifier.code 0} true;
    $p126 := $i2p.i64.ref($i125);
    goto corral_source_split_9160;

  corral_source_split_9160:
    assume {:verifier.code 0} true;
    havoc $i127;
    call {:si_unique_call 9770} {:cexpr "__cil_tmp85"} {:si_old_unique_call 4589} boogie_si_record_i32($i127);
    goto corral_source_split_9161;

  corral_source_split_9161:
    assume {:verifier.code 0} true;
    $i128 := $eq.i32($i127, 2);
    goto corral_source_split_9162;

  corral_source_split_9162:
    assume {:verifier.code 0} true;
    assume {:branchcond $i128} true;
    goto $bb63, $bb64;

  $bb64:
    assume !($i128 == 1);
    goto corral_source_split_9190;

  corral_source_split_9190:
    assume {:verifier.code 0} true;
    $i155 := $p2i.ref.i64($p0);
    call {:si_unique_call 9771} {:cexpr "__cil_tmp103"} {:si_old_unique_call 4602} boogie_si_record_i64($i155);
    goto corral_source_split_9191;

  corral_source_split_9191:
    assume {:verifier.code 0} true;
    $i156 := $add.i64($i155, 356);
    call {:si_unique_call 9772} {:cexpr "__cil_tmp104"} {:si_old_unique_call 4603} boogie_si_record_i64($i156);
    goto corral_source_split_9192;

  corral_source_split_9192:
    assume {:verifier.code 0} true;
    $p157 := $i2p.i64.ref($i156);
    goto corral_source_split_9193;

  corral_source_split_9193:
    assume {:verifier.code 0} true;
    havoc $i158;
    call {:si_unique_call 9773} {:cexpr "__cil_tmp105"} {:si_old_unique_call 4604} boogie_si_record_i32($i158);
    goto corral_source_split_9194;

  corral_source_split_9194:
    assume {:verifier.code 0} true;
    $i159 := $eq.i32($i158, 4);
    goto corral_source_split_9195;

  corral_source_split_9195:
    assume {:verifier.code 0} true;
    assume {:branchcond $i159} true;
    goto $bb66, $bb67;

  $bb67:
    assume !($i159 == 1);
    goto corral_source_split_9228;

  corral_source_split_9228:
    assume {:verifier.code 0} true;
    $i186 := $p2i.ref.i64($p1);
    call {:si_unique_call 9774} {:cexpr "__cil_tmp122"} {:si_old_unique_call 4620} boogie_si_record_i64($i186);
    goto corral_source_split_9229;

  corral_source_split_9229:
    assume {:verifier.code 0} true;
    $i187 := $add.i64($i186, 16);
    call {:si_unique_call 9775} {:cexpr "__cil_tmp123"} {:si_old_unique_call 4621} boogie_si_record_i64($i187);
    goto corral_source_split_9230;

  corral_source_split_9230:
    assume {:verifier.code 0} true;
    $p188 := $i2p.i64.ref($i187);
    goto corral_source_split_9231;

  corral_source_split_9231:
    assume {:verifier.code 0} true;
    havoc $i189;
    call {:si_unique_call 9776} {:cexpr "__cil_tmp124"} {:si_old_unique_call 4622} boogie_si_record_i32($i189);
    goto corral_source_split_9232;

  corral_source_split_9232:
    assume {:verifier.code 0} true;
    $i190 := $p2i.ref.i64($p1);
    call {:si_unique_call 9777} {:cexpr "__cil_tmp125"} {:si_old_unique_call 4623} boogie_si_record_i64($i190);
    goto corral_source_split_9233;

  corral_source_split_9233:
    assume {:verifier.code 0} true;
    $i191 := $add.i64($i190, 20);
    call {:si_unique_call 9778} {:cexpr "__cil_tmp126"} {:si_old_unique_call 4624} boogie_si_record_i64($i191);
    goto corral_source_split_9234;

  corral_source_split_9234:
    assume {:verifier.code 0} true;
    $p192 := $i2p.i64.ref($i191);
    goto corral_source_split_9235;

  corral_source_split_9235:
    assume {:verifier.code 0} true;
    havoc $i193;
    call {:si_unique_call 9779} {:cexpr "__cil_tmp127"} {:si_old_unique_call 4625} boogie_si_record_i32($i193);
    assume {:verifier.code 0} true;
    $i184, $i185 := $i193, $i189;
    goto $bb68;

  $bb68:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    $i153, $i154 := $i184, $i185;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9197;

  corral_source_split_9197:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9780} {:si_old_unique_call 4605} wait_for_fifo(2, $p7);
    goto corral_source_split_9198;

  corral_source_split_9198:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9781} {:si_old_unique_call 4606} aty_st_le32(704, $i153, $p7);
    goto corral_source_split_9199;

  corral_source_split_9199:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9782} {:si_old_unique_call 4607} aty_st_le32(708, $i154, $p7);
    goto corral_source_split_9200;

  corral_source_split_9200:
    assume {:verifier.code 0} true;
    $i194, $i195 := 458759, 131328;
    goto $bb69;

  $bb66:
    assume $i159 == 1;
    goto corral_source_split_9202;

  corral_source_split_9202:
    assume {:verifier.code 0} true;
    $i160 := $p2i.ref.i64($p1);
    call {:si_unique_call 9783} {:cexpr "__cil_tmp106"} {:si_old_unique_call 4608} boogie_si_record_i64($i160);
    goto corral_source_split_9203;

  corral_source_split_9203:
    assume {:verifier.code 0} true;
    $i161 := $add.i64($i160, 16);
    call {:si_unique_call 9784} {:cexpr "__cil_tmp107"} {:si_old_unique_call 4609} boogie_si_record_i64($i161);
    goto corral_source_split_9204;

  corral_source_split_9204:
    assume {:verifier.code 0} true;
    $p162 := $i2p.i64.ref($i161);
    goto corral_source_split_9205;

  corral_source_split_9205:
    assume {:verifier.code 0} true;
    havoc $i163;
    call {:si_unique_call 9785} {:cexpr "__cil_tmp108"} {:si_old_unique_call 4610} boogie_si_record_i32($i163);
    goto corral_source_split_9206;

  corral_source_split_9206:
    assume {:verifier.code 0} true;
    $i164 := $p2i.ref.i64($p0);
    call {:si_unique_call 9786} {:cexpr "__cil_tmp109"} {:si_old_unique_call 4611} boogie_si_record_i64($i164);
    goto corral_source_split_9207;

  corral_source_split_9207:
    assume {:verifier.code 0} true;
    $i165 := $add.i64($i164, 1136);
    call {:si_unique_call 9787} {:cexpr "__cil_tmp110"} {:si_old_unique_call 4612} boogie_si_record_i64($i165);
    goto corral_source_split_9208;

  corral_source_split_9208:
    assume {:verifier.code 0} true;
    $p166 := $i2p.i64.ref($i165);
    goto corral_source_split_9209;

  corral_source_split_9209:
    assume {:verifier.code 0} true;
    havoc $p167;
    goto corral_source_split_9210;

  corral_source_split_9210:
    assume {:verifier.code 0} true;
    $p168 := $bitcast.ref.ref($p167);
    goto corral_source_split_9211;

  corral_source_split_9211:
    assume {:verifier.code 0} true;
    $i169 := $zext.i32.i64($i163);
    goto corral_source_split_9212;

  corral_source_split_9212:
    assume {:verifier.code 0} true;
    $p170 := $add.ref($p168, $mul.ref($i169, 4));
    goto corral_source_split_9213;

  corral_source_split_9213:
    assume {:verifier.code 0} true;
    havoc $i171;
    call {:si_unique_call 9788} {:cexpr "fg"} {:si_old_unique_call 4613} boogie_si_record_i32($i171);
    goto corral_source_split_9214;

  corral_source_split_9214:
    assume {:verifier.code 0} true;
    $i172 := $p2i.ref.i64($p1);
    call {:si_unique_call 9789} {:cexpr "__cil_tmp114"} {:si_old_unique_call 4614} boogie_si_record_i64($i172);
    goto corral_source_split_9215;

  corral_source_split_9215:
    assume {:verifier.code 0} true;
    $i173 := $add.i64($i172, 20);
    call {:si_unique_call 9790} {:cexpr "__cil_tmp115"} {:si_old_unique_call 4615} boogie_si_record_i64($i173);
    goto corral_source_split_9216;

  corral_source_split_9216:
    assume {:verifier.code 0} true;
    $p174 := $i2p.i64.ref($i173);
    goto corral_source_split_9217;

  corral_source_split_9217:
    assume {:verifier.code 0} true;
    havoc $i175;
    call {:si_unique_call 9791} {:cexpr "__cil_tmp116"} {:si_old_unique_call 4616} boogie_si_record_i32($i175);
    goto corral_source_split_9218;

  corral_source_split_9218:
    assume {:verifier.code 0} true;
    $i176 := $p2i.ref.i64($p0);
    call {:si_unique_call 9792} {:cexpr "__cil_tmp117"} {:si_old_unique_call 4617} boogie_si_record_i64($i176);
    goto corral_source_split_9219;

  corral_source_split_9219:
    assume {:verifier.code 0} true;
    $i177 := $add.i64($i176, 1136);
    call {:si_unique_call 9793} {:cexpr "__cil_tmp118"} {:si_old_unique_call 4618} boogie_si_record_i64($i177);
    goto corral_source_split_9220;

  corral_source_split_9220:
    assume {:verifier.code 0} true;
    $p178 := $i2p.i64.ref($i177);
    goto corral_source_split_9221;

  corral_source_split_9221:
    assume {:verifier.code 0} true;
    havoc $p179;
    goto corral_source_split_9222;

  corral_source_split_9222:
    assume {:verifier.code 0} true;
    $p180 := $bitcast.ref.ref($p179);
    goto corral_source_split_9223;

  corral_source_split_9223:
    assume {:verifier.code 0} true;
    $i181 := $zext.i32.i64($i175);
    goto corral_source_split_9224;

  corral_source_split_9224:
    assume {:verifier.code 0} true;
    $p182 := $add.ref($p180, $mul.ref($i181, 4));
    goto corral_source_split_9225;

  corral_source_split_9225:
    assume {:verifier.code 0} true;
    havoc $i183;
    call {:si_unique_call 9794} {:cexpr "bg"} {:si_old_unique_call 4619} boogie_si_record_i32($i183);
    goto corral_source_split_9226;

  corral_source_split_9226:
    assume {:verifier.code 0} true;
    $i184, $i185 := $i183, $i171;
    goto $bb68;

  $bb63:
    assume $i128 == 1;
    goto corral_source_split_9164;

  corral_source_split_9164:
    assume {:verifier.code 0} true;
    $i129 := $p2i.ref.i64($p1);
    call {:si_unique_call 9795} {:cexpr "__cil_tmp86"} {:si_old_unique_call 4590} boogie_si_record_i64($i129);
    goto corral_source_split_9165;

  corral_source_split_9165:
    assume {:verifier.code 0} true;
    $i130 := $add.i64($i129, 16);
    call {:si_unique_call 9796} {:cexpr "__cil_tmp87"} {:si_old_unique_call 4591} boogie_si_record_i64($i130);
    goto corral_source_split_9166;

  corral_source_split_9166:
    assume {:verifier.code 0} true;
    $p131 := $i2p.i64.ref($i130);
    goto corral_source_split_9167;

  corral_source_split_9167:
    assume {:verifier.code 0} true;
    havoc $i132;
    call {:si_unique_call 9797} {:cexpr "__cil_tmp88"} {:si_old_unique_call 4592} boogie_si_record_i32($i132);
    goto corral_source_split_9168;

  corral_source_split_9168:
    assume {:verifier.code 0} true;
    $i133 := $p2i.ref.i64($p0);
    call {:si_unique_call 9798} {:cexpr "__cil_tmp89"} {:si_old_unique_call 4593} boogie_si_record_i64($i133);
    goto corral_source_split_9169;

  corral_source_split_9169:
    assume {:verifier.code 0} true;
    $i134 := $add.i64($i133, 1136);
    call {:si_unique_call 9799} {:cexpr "__cil_tmp90"} {:si_old_unique_call 4594} boogie_si_record_i64($i134);
    goto corral_source_split_9170;

  corral_source_split_9170:
    assume {:verifier.code 0} true;
    $p135 := $i2p.i64.ref($i134);
    goto corral_source_split_9171;

  corral_source_split_9171:
    assume {:verifier.code 0} true;
    havoc $p136;
    goto corral_source_split_9172;

  corral_source_split_9172:
    assume {:verifier.code 0} true;
    $p137 := $bitcast.ref.ref($p136);
    goto corral_source_split_9173;

  corral_source_split_9173:
    assume {:verifier.code 0} true;
    $i138 := $zext.i32.i64($i132);
    goto corral_source_split_9174;

  corral_source_split_9174:
    assume {:verifier.code 0} true;
    $p139 := $add.ref($p137, $mul.ref($i138, 4));
    goto corral_source_split_9175;

  corral_source_split_9175:
    assume {:verifier.code 0} true;
    havoc $i140;
    call {:si_unique_call 9800} {:cexpr "fg"} {:si_old_unique_call 4595} boogie_si_record_i32($i140);
    goto corral_source_split_9176;

  corral_source_split_9176:
    assume {:verifier.code 0} true;
    $i141 := $p2i.ref.i64($p1);
    call {:si_unique_call 9801} {:cexpr "__cil_tmp94"} {:si_old_unique_call 4596} boogie_si_record_i64($i141);
    goto corral_source_split_9177;

  corral_source_split_9177:
    assume {:verifier.code 0} true;
    $i142 := $add.i64($i141, 20);
    call {:si_unique_call 9802} {:cexpr "__cil_tmp95"} {:si_old_unique_call 4597} boogie_si_record_i64($i142);
    goto corral_source_split_9178;

  corral_source_split_9178:
    assume {:verifier.code 0} true;
    $p143 := $i2p.i64.ref($i142);
    goto corral_source_split_9179;

  corral_source_split_9179:
    assume {:verifier.code 0} true;
    havoc $i144;
    call {:si_unique_call 9803} {:cexpr "__cil_tmp96"} {:si_old_unique_call 4598} boogie_si_record_i32($i144);
    goto corral_source_split_9180;

  corral_source_split_9180:
    assume {:verifier.code 0} true;
    $i145 := $p2i.ref.i64($p0);
    call {:si_unique_call 9804} {:cexpr "__cil_tmp97"} {:si_old_unique_call 4599} boogie_si_record_i64($i145);
    goto corral_source_split_9181;

  corral_source_split_9181:
    assume {:verifier.code 0} true;
    $i146 := $add.i64($i145, 1136);
    call {:si_unique_call 9805} {:cexpr "__cil_tmp98"} {:si_old_unique_call 4600} boogie_si_record_i64($i146);
    goto corral_source_split_9182;

  corral_source_split_9182:
    assume {:verifier.code 0} true;
    $p147 := $i2p.i64.ref($i146);
    goto corral_source_split_9183;

  corral_source_split_9183:
    assume {:verifier.code 0} true;
    havoc $p148;
    goto corral_source_split_9184;

  corral_source_split_9184:
    assume {:verifier.code 0} true;
    $p149 := $bitcast.ref.ref($p148);
    goto corral_source_split_9185;

  corral_source_split_9185:
    assume {:verifier.code 0} true;
    $i150 := $zext.i32.i64($i144);
    goto corral_source_split_9186;

  corral_source_split_9186:
    assume {:verifier.code 0} true;
    $p151 := $add.ref($p149, $mul.ref($i150, 4));
    goto corral_source_split_9187;

  corral_source_split_9187:
    assume {:verifier.code 0} true;
    havoc $i152;
    call {:si_unique_call 9806} {:cexpr "bg"} {:si_old_unique_call 4601} boogie_si_record_i32($i152);
    goto corral_source_split_9188;

  corral_source_split_9188:
    assume {:verifier.code 0} true;
    $i153, $i154 := $i152, $i140;
    goto $bb65;

  $bb52:
    assume $i93 == 1;
    goto corral_source_split_9121;

  corral_source_split_9121:
    assume {:verifier.code 0} true;
    $i94 := $mul.i32($i9, 3);
    call {:si_unique_call 9807} {:cexpr "dx"} {:si_old_unique_call 4569} boogie_si_record_i32($i94);
    goto corral_source_split_9122;

  corral_source_split_9122:
    assume {:verifier.code 0} true;
    $i95 := $mul.i32($i17, 3);
    call {:si_unique_call 9808} {:cexpr "width"} {:si_old_unique_call 4570} boogie_si_record_i32($i95);
    goto corral_source_split_9123;

  corral_source_split_9123:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9809} {:si_old_unique_call 4571} $i96 := rotation24bpp($i94, 1);
    call {:si_unique_call 9810} {:cexpr "rotation"} {:si_old_unique_call 4572} boogie_si_record_i32($i96);
    goto corral_source_split_9124;

  corral_source_split_9124:
    assume {:verifier.code 0} true;
    $i97 := $and.i32($i76, $sub.i32(0, 16));
    call {:si_unique_call 9811} {:cexpr "pix_width"} {:si_old_unique_call 4573} boogie_si_record_i32($i97);
    goto corral_source_split_9125;

  corral_source_split_9125:
    assume {:verifier.code 0} true;
    $i98 := $or.i32($i97, 2);
    call {:si_unique_call 9812} {:cexpr "pix_width"} {:si_old_unique_call 4574} boogie_si_record_i32($i98);
    goto corral_source_split_9126;

  corral_source_split_9126:
    assume {:verifier.code 0} true;
    $i99 := $p2i.ref.i64($p7);
    call {:si_unique_call 9813} {:cexpr "__cil_tmp71"} {:si_old_unique_call 4575} boogie_si_record_i64($i99);
    goto corral_source_split_9127;

  corral_source_split_9127:
    assume {:verifier.code 0} true;
    $i100 := $add.i64($i99, 1044);
    call {:si_unique_call 9814} {:cexpr "__cil_tmp72"} {:si_old_unique_call 4576} boogie_si_record_i64($i100);
    goto corral_source_split_9128;

  corral_source_split_9128:
    assume {:verifier.code 0} true;
    $p101 := $i2p.i64.ref($i100);
    goto corral_source_split_9129;

  corral_source_split_9129:
    assume {:verifier.code 0} true;
    havoc $i102;
    call {:si_unique_call 9815} {:cexpr "__cil_tmp73"} {:si_old_unique_call 4577} boogie_si_record_i32($i102);
    goto corral_source_split_9130;

  corral_source_split_9130:
    assume {:verifier.code 0} true;
    $i103 := $and.i32($i102, 2097152);
    goto corral_source_split_9131;

  corral_source_split_9131:
    assume {:verifier.code 0} true;
    $i104 := $ne.i32($i103, 0);
    goto corral_source_split_9132;

  corral_source_split_9132:
    assume {:verifier.code 0} true;
    assume {:branchcond $i104} true;
    goto $bb54, $bb55;

  $bb55:
    assume !($i104 == 1);
    assume {:verifier.code 0} true;
    $i113 := $i98;
    goto $bb59;

  $bb59:
    assume {:verifier.code 0} true;
    goto corral_source_split_9147;

  corral_source_split_9147:
    assume {:verifier.code 0} true;
    $i114, $i115, $i116, $i117 := $i96, $i113, $i95, $i94;
    goto $bb60;

  $bb54:
    assume $i104 == 1;
    goto corral_source_split_9134;

  corral_source_split_9134:
    assume {:verifier.code 0} true;
    $i105 := $p2i.ref.i64($p1);
    call {:si_unique_call 9816} {:cexpr "__cil_tmp74"} {:si_old_unique_call 4578} boogie_si_record_i64($i105);
    goto corral_source_split_9135;

  corral_source_split_9135:
    assume {:verifier.code 0} true;
    $i106 := $add.i64($i105, 8);
    call {:si_unique_call 9817} {:cexpr "__cil_tmp75"} {:si_old_unique_call 4579} boogie_si_record_i64($i106);
    goto corral_source_split_9136;

  corral_source_split_9136:
    assume {:verifier.code 0} true;
    $p107 := $i2p.i64.ref($i106);
    goto corral_source_split_9137;

  corral_source_split_9137:
    assume {:verifier.code 0} true;
    havoc $i108;
    call {:si_unique_call 9818} {:cexpr "__cil_tmp76"} {:si_old_unique_call 4580} boogie_si_record_i32($i108);
    goto corral_source_split_9138;

  corral_source_split_9138:
    assume {:verifier.code 0} true;
    $i109 := $urem.i32($i108, 8);
    call {:si_unique_call 9819} {:cexpr "__cil_tmp77"} {:si_old_unique_call 4581} boogie_si_record_i32($i109);
    goto corral_source_split_9139;

  corral_source_split_9139:
    assume {:verifier.code 0} true;
    $i110 := $eq.i32($i109, 0);
    goto corral_source_split_9140;

  corral_source_split_9140:
    assume {:verifier.code 0} true;
    assume {:branchcond $i110} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i110 == 1);
    assume {:verifier.code 0} true;
    $i112 := $i98;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    goto corral_source_split_9145;

  corral_source_split_9145:
    assume {:verifier.code 0} true;
    $i113 := $i112;
    goto $bb59;

  $bb56:
    assume $i110 == 1;
    goto corral_source_split_9142;

  corral_source_split_9142:
    assume {:verifier.code 0} true;
    $i111 := $or.i32($i98, 8192);
    call {:si_unique_call 9820} {:cexpr "pix_width"} {:si_old_unique_call 4582} boogie_si_record_i32($i111);
    goto corral_source_split_9143;

  corral_source_split_9143:
    assume {:verifier.code 0} true;
    $i112 := $i111;
    goto $bb58;

  $bb41:
    assume 0 == 1;
    goto corral_source_split_9111;

  corral_source_split_9111:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    $i75 := $and.i32($i54, $sub.i32(0, 17760257));
    call {:si_unique_call 9821} {:cexpr "pix_width"} {:si_old_unique_call 4553} boogie_si_record_i32($i75);
    goto corral_source_split_9057;

  corral_source_split_9057:
    assume {:verifier.code 0} true;
    $i76 := $i75;
    goto $bb43;

  $bb38:
    assume $i74 == 1;
    goto corral_source_split_9104;

  corral_source_split_9104:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i87 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9822} {:cexpr "pix_width"} {:si_old_unique_call 4564} boogie_si_record_i32($i87);
    goto corral_source_split_9108;

  corral_source_split_9108:
    assume {:verifier.code 0} true;
    $i88 := $or.i32($i87, 393216);
    call {:si_unique_call 9823} {:cexpr "pix_width"} {:si_old_unique_call 4565} boogie_si_record_i32($i88);
    goto corral_source_split_9109;

  corral_source_split_9109:
    assume {:verifier.code 0} true;
    $i76 := $i88;
    goto $bb43;

  $bb35:
    assume $i72 == 1;
    goto corral_source_split_9095;

  corral_source_split_9095:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    $i85 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9824} {:cexpr "pix_width"} {:si_old_unique_call 4562} boogie_si_record_i32($i85);
    goto corral_source_split_9101;

  corral_source_split_9101:
    assume {:verifier.code 0} true;
    $i86 := $or.i32($i85, 327680);
    call {:si_unique_call 9825} {:cexpr "pix_width"} {:si_old_unique_call 4563} boogie_si_record_i32($i86);
    goto corral_source_split_9102;

  corral_source_split_9102:
    assume {:verifier.code 0} true;
    $i76 := $i86;
    goto $bb43;

  $bb32:
    assume $i70 == 1;
    goto corral_source_split_9086;

  corral_source_split_9086:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    $i83 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9826} {:cexpr "pix_width"} {:si_old_unique_call 4560} boogie_si_record_i32($i83);
    goto corral_source_split_9092;

  corral_source_split_9092:
    assume {:verifier.code 0} true;
    $i84 := $or.i32($i83, 262144);
    call {:si_unique_call 9827} {:cexpr "pix_width"} {:si_old_unique_call 4561} boogie_si_record_i32($i84);
    goto corral_source_split_9093;

  corral_source_split_9093:
    assume {:verifier.code 0} true;
    $i76 := $i84;
    goto $bb43;

  $bb29:
    assume $i68 == 1;
    goto corral_source_split_9077;

  corral_source_split_9077:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i81 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9828} {:cexpr "pix_width"} {:si_old_unique_call 4558} boogie_si_record_i32($i81);
    goto corral_source_split_9083;

  corral_source_split_9083:
    assume {:verifier.code 0} true;
    $i82 := $or.i32($i81, 196608);
    call {:si_unique_call 9829} {:cexpr "pix_width"} {:si_old_unique_call 4559} boogie_si_record_i32($i82);
    goto corral_source_split_9084;

  corral_source_split_9084:
    assume {:verifier.code 0} true;
    $i76 := $i82;
    goto $bb43;

  $bb26:
    assume $i66 == 1;
    goto corral_source_split_9068;

  corral_source_split_9068:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    $i79 := $and.i32($i54, $sub.i32(0, 983041));
    call {:si_unique_call 9830} {:cexpr "pix_width"} {:si_old_unique_call 4556} boogie_si_record_i32($i79);
    goto corral_source_split_9074;

  corral_source_split_9074:
    assume {:verifier.code 0} true;
    $i80 := $or.i32($i79, 131072);
    call {:si_unique_call 9831} {:cexpr "pix_width"} {:si_old_unique_call 4557} boogie_si_record_i32($i80);
    goto corral_source_split_9075;

  corral_source_split_9075:
    assume {:verifier.code 0} true;
    $i76 := $i80;
    goto $bb43;

  $bb23:
    assume $i64 == 1;
    goto corral_source_split_9059;

  corral_source_split_9059:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    $i77 := $and.i32($i54, $sub.i32(0, 17760257));
    call {:si_unique_call 9832} {:cexpr "pix_width"} {:si_old_unique_call 4554} boogie_si_record_i32($i77);
    goto corral_source_split_9065;

  corral_source_split_9065:
    assume {:verifier.code 0} true;
    $i78 := $or.i32($i77, 65536);
    call {:si_unique_call 9833} {:cexpr "pix_width"} {:si_old_unique_call 4555} boogie_si_record_i32($i78);
    goto corral_source_split_9066;

  corral_source_split_9066:
    assume {:verifier.code 0} true;
    $i76 := $i78;
    goto $bb43;

  $bb20:
    assume $i62 == 1;
    goto corral_source_split_9051;

  corral_source_split_9051:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb13:
    assume $i43 == 1;
    goto corral_source_split_9026;

  corral_source_split_9026:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p1);
    call {:si_unique_call 9834} {:cexpr "__cil_tmp53"} {:si_old_unique_call 4537} boogie_si_record_i64($i44);
    goto corral_source_split_9027;

  corral_source_split_9027:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 24);
    call {:si_unique_call 9835} {:cexpr "__cil_tmp54"} {:si_old_unique_call 4538} boogie_si_record_i64($i45);
    goto corral_source_split_9028;

  corral_source_split_9028:
    assume {:verifier.code 0} true;
    $p46 := $i2p.i64.ref($i45);
    goto corral_source_split_9029;

  corral_source_split_9029:
    assume {:verifier.code 0} true;
    havoc $i47;
    call {:si_unique_call 9836} {:cexpr "__cil_tmp55"} {:si_old_unique_call 4539} boogie_si_record_i8($i47);
    goto corral_source_split_9030;

  corral_source_split_9030:
    assume {:verifier.code 0} true;
    $i48 := $zext.i8.i32($i47);
    call {:si_unique_call 9837} {:cexpr "__cil_tmp56"} {:si_old_unique_call 4540} boogie_si_record_i32($i48);
    goto corral_source_split_9031;

  corral_source_split_9031:
    assume {:verifier.code 0} true;
    $i49 := $p2i.ref.i64($p0);
    call {:si_unique_call 9838} {:cexpr "__cil_tmp58"} {:si_old_unique_call 4541} boogie_si_record_i64($i49);
    goto corral_source_split_9032;

  corral_source_split_9032:
    assume {:verifier.code 0} true;
    $i50 := $add.i64($i49, 184);
    call {:si_unique_call 9839} {:cexpr "__cil_tmp59"} {:si_old_unique_call 4542} boogie_si_record_i64($i50);
    goto corral_source_split_9033;

  corral_source_split_9033:
    assume {:verifier.code 0} true;
    $p51 := $i2p.i64.ref($i50);
    goto corral_source_split_9034;

  corral_source_split_9034:
    assume {:verifier.code 0} true;
    havoc $i52;
    call {:si_unique_call 9840} {:cexpr "__cil_tmp60"} {:si_old_unique_call 4543} boogie_si_record_i32($i52);
    goto corral_source_split_9035;

  corral_source_split_9035:
    assume {:verifier.code 0} true;
    $i53 := $ne.i32($i52, $i48);
    goto corral_source_split_9036;

  corral_source_split_9036:
    assume {:verifier.code 0} true;
    assume {:branchcond $i53} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i53 == 1);
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb15:
    assume $i53 == 1;
    goto corral_source_split_9038;

  corral_source_split_9038:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9841} {:si_old_unique_call 4544} cfb_imageblit($p0, $p1);
    goto corral_source_split_9039;

  corral_source_split_9039:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb1:
    assume $i22 == 1;
    goto corral_source_split_8990;

  corral_source_split_8990:
    assume {:verifier.code 0} true;
    goto $bb3;
}



implementation {:LB_Mapping "aty_waitforvblank_loop_$bb19"} {:entrypoint} aty_waitforvblank_EntryCopy_aty_waitforvblank_loop_$bb19($p0: ref, $i1: i32) returns ($r: i32)
{
  var $p2: ref;
  var $i3: i1;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $i42: i64;
  var $p43: ref;
  var $i44: i64;
  var $i45: i64;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i49: i64;
  var $p51: ref;
  var $i52: i32;
  var $i53: i1;
  var $i54: i64;
  var $i55: i1;
  var $i56: i64;
  var $i50: i64;
  var $p57: ref;
  var $i58: i64;
  var $i59: i32;
  var $i60: i1;
  var $i61: i1;
  var $i62: i32;
  var $i7: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    call {:si_unique_call 9855} {:si_old_unique_call 4712} $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
    call {:si_unique_call 9856} {:cexpr "aty_waitforvblank:arg:crtc"} {:si_old_unique_call 4713} boogie_si_record_i32($i1);
    goto corral_source_split_9481;

  corral_source_split_9481:
    assume {:verifier.code 0} true;
    $i3 := $eq.i32($i1, 0);
    goto corral_source_split_9482;

  corral_source_split_9482:
    assume {:verifier.code 0} true;
    assume {:branchcond $i3} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i3 == 1);
    goto corral_source_split_9486;

  corral_source_split_9486:
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i7 := $sub.i32(0, 19);
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    goto corral_source_split_9496;

  corral_source_split_9496:
    assume {:verifier.code 0} true;
    $r := $i7;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb1:
    assume $i3 == 1;
    goto corral_source_split_9484;

  corral_source_split_9484:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    $i4 := $p2i.ref.i64($p0);
    call {:si_unique_call 9857} {:cexpr "__cil_tmp11"} {:si_old_unique_call 4714} boogie_si_record_i64($i4);
    goto corral_source_split_9488;

  corral_source_split_9488:
    assume {:verifier.code 0} true;
    $i5 := $add.i64($i4, 1192);
    call {:si_unique_call 9858} {:cexpr "__cil_tmp12"} {:si_old_unique_call 4715} boogie_si_record_i64($i5);
    goto corral_source_split_9489;

  corral_source_split_9489:
    assume {:verifier.code 0} true;
    $p6 := $i2p.i64.ref($i5);
    goto corral_source_split_9490;

  corral_source_split_9490:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9859} {:si_old_unique_call 4716} $i8 := aty_enable_irq($p0, 0);
    call {:si_unique_call 9860} {:cexpr "ret"} {:si_old_unique_call 4717} boogie_si_record_i32($i8);
    goto corral_source_split_9498;

  corral_source_split_9498:
    assume {:verifier.code 0} true;
    $i9 := $ne.i32($i8, 0);
    goto corral_source_split_9499;

  corral_source_split_9499:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb12, $bb13;

  $bb13:
    assume !($i9 == 1);
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    $i10 := $p2i.ref.i64($p6);
    call {:si_unique_call 9861} {:cexpr "__cil_tmp13"} {:si_old_unique_call 4718} boogie_si_record_i64($i10);
    goto corral_source_split_9503;

  corral_source_split_9503:
    assume {:verifier.code 0} true;
    $i11 := $add.i64($i10, 40);
    call {:si_unique_call 9862} {:cexpr "__cil_tmp14"} {:si_old_unique_call 4719} boogie_si_record_i64($i11);
    goto corral_source_split_9504;

  corral_source_split_9504:
    assume {:verifier.code 0} true;
    $p12 := $i2p.i64.ref($i11);
    goto corral_source_split_9505;

  corral_source_split_9505:
    assume {:verifier.code 0} true;
    havoc $i13;
    call {:si_unique_call 9863} {:cexpr "count"} {:si_old_unique_call 4720} boogie_si_record_i32($i13);
    goto corral_source_split_9506;

  corral_source_split_9506:
    assume {:verifier.code 0} true;
    $i14 := $p2i.ref.i64($p6);
    call {:si_unique_call 9864} {:cexpr "__cil_tmp15"} {:si_old_unique_call 4721} boogie_si_record_i64($i14);
    goto corral_source_split_9507;

  corral_source_split_9507:
    assume {:verifier.code 0} true;
    $i15 := $add.i64($i14, 40);
    call {:si_unique_call 9865} {:cexpr "__cil_tmp16"} {:si_old_unique_call 4722} boogie_si_record_i64($i15);
    goto corral_source_split_9508;

  corral_source_split_9508:
    assume {:verifier.code 0} true;
    $p16 := $i2p.i64.ref($i15);
    goto corral_source_split_9509;

  corral_source_split_9509:
    assume {:verifier.code 0} true;
    havoc $i17;
    call {:si_unique_call 9866} {:cexpr "__cil_tmp17"} {:si_old_unique_call 4723} boogie_si_record_i32($i17);
    goto corral_source_split_9510;

  corral_source_split_9510:
    assume {:verifier.code 0} true;
    $i18 := $ne.i32($i13, $i17);
    goto corral_source_split_9511;

  corral_source_split_9511:
    assume {:verifier.code 0} true;
    $i19 := $zext.i1.i32($i18);
    call {:si_unique_call 9867} {:cexpr "__cil_tmp18"} {:si_old_unique_call 4724} boogie_si_record_i32($i19);
    goto corral_source_split_9512;

  corral_source_split_9512:
    assume {:verifier.code 0} true;
    $i20 := $ne.i32($i19, 0);
    goto corral_source_split_9513;

  corral_source_split_9513:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb15, $bb16;

  $bb16:
    assume !($i20 == 1);
    goto corral_source_split_9515;

  corral_source_split_9515:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    call {:si_unique_call 9868} {:si_old_unique_call 4725} $p21 := devirtbounce.12(0, current_task);
    goto corral_source_split_9517;

  corral_source_split_9517:
    assume {:verifier.code 0} true;
    $p22 := $bitcast.ref.ref($p2);
    goto corral_source_split_9518;

  corral_source_split_9518:
    assume {:verifier.code 0} true;
    goto corral_source_split_9519;

  corral_source_split_9519:
    assume {:verifier.code 0} true;
    $i23 := $p2i.ref.i64($p2);
    goto corral_source_split_9520;

  corral_source_split_9520:
    assume {:verifier.code 0} true;
    $i24 := $add.i64($i23, 8);
    call {:si_unique_call 9869} {:cexpr "__cil_tmp20"} {:si_old_unique_call 4726} boogie_si_record_i64($i24);
    goto corral_source_split_9521;

  corral_source_split_9521:
    assume {:verifier.code 0} true;
    $p25 := $bitcast.ref.ref($p21);
    goto corral_source_split_9522;

  corral_source_split_9522:
    assume {:verifier.code 0} true;
    $p26 := $i2p.i64.ref($i24);
    goto corral_source_split_9523;

  corral_source_split_9523:
    assume {:verifier.code 0} true;
    goto corral_source_split_9524;

  corral_source_split_9524:
    assume {:verifier.code 0} true;
    $i27 := $p2i.ref.i64($p2);
    goto corral_source_split_9525;

  corral_source_split_9525:
    assume {:verifier.code 0} true;
    $i28 := $add.i64($i27, 16);
    call {:si_unique_call 9870} {:cexpr "__cil_tmp21"} {:si_old_unique_call 4727} boogie_si_record_i64($i28);
    goto corral_source_split_9526;

  corral_source_split_9526:
    assume {:verifier.code 0} true;
    $p29 := $i2p.i64.ref($i28);
    goto corral_source_split_9527;

  corral_source_split_9527:
    assume {:verifier.code 0} true;
    goto corral_source_split_9528;

  corral_source_split_9528:
    assume {:verifier.code 0} true;
    $i30 := $p2i.ref.i64($p2);
    goto corral_source_split_9529;

  corral_source_split_9529:
    assume {:verifier.code 0} true;
    $i31 := $add.i64($i30, 24);
    call {:si_unique_call 9871} {:cexpr "__cil_tmp22"} {:si_old_unique_call 4728} boogie_si_record_i64($i31);
    goto corral_source_split_9530;

  corral_source_split_9530:
    assume {:verifier.code 0} true;
    $i32 := $p2i.ref.i64($p2);
    goto corral_source_split_9531;

  corral_source_split_9531:
    assume {:verifier.code 0} true;
    $i33 := $add.i64($i32, 24);
    call {:si_unique_call 9872} {:cexpr "__cil_tmp23"} {:si_old_unique_call 4729} boogie_si_record_i64($i33);
    goto corral_source_split_9532;

  corral_source_split_9532:
    assume {:verifier.code 0} true;
    $p34 := $i2p.i64.ref($i33);
    goto corral_source_split_9533;

  corral_source_split_9533:
    assume {:verifier.code 0} true;
    $p35 := $i2p.i64.ref($i31);
    goto corral_source_split_9534;

  corral_source_split_9534:
    assume {:verifier.code 0} true;
    goto corral_source_split_9535;

  corral_source_split_9535:
    assume {:verifier.code 0} true;
    $i36 := $p2i.ref.i64($p2);
    goto corral_source_split_9536;

  corral_source_split_9536:
    assume {:verifier.code 0} true;
    $i37 := $add.i64($i36, 32);
    call {:si_unique_call 9873} {:cexpr "__cil_tmp25"} {:si_old_unique_call 4730} boogie_si_record_i64($i37);
    goto corral_source_split_9537;

  corral_source_split_9537:
    assume {:verifier.code 0} true;
    $i38 := $p2i.ref.i64($p2);
    goto corral_source_split_9538;

  corral_source_split_9538:
    assume {:verifier.code 0} true;
    $i39 := $add.i64($i38, 24);
    call {:si_unique_call 9874} {:cexpr "__cil_tmp26"} {:si_old_unique_call 4731} boogie_si_record_i64($i39);
    goto corral_source_split_9539;

  corral_source_split_9539:
    assume {:verifier.code 0} true;
    $p40 := $i2p.i64.ref($i39);
    goto corral_source_split_9540;

  corral_source_split_9540:
    assume {:verifier.code 0} true;
    $p41 := $i2p.i64.ref($i37);
    goto corral_source_split_9541;

  corral_source_split_9541:
    assume {:verifier.code 0} true;
    goto corral_source_split_9542;

  corral_source_split_9542:
    assume {:verifier.code 0} true;
    $i42 := 25;
    goto $bb19;

  $bb19:
    call {:si_unique_call 9875} $i42, $p43, $i44, $i45, $p46, $i47, $i48, $i49, $p51, $i52, $i53, $i54, $i55, $i56 := aty_waitforvblank_loop_$bb19($p2, $p6, $i13, $i42, $p43, $i44, $i45, $p46, $i47, $i48, $i49, $p51, $i52, $i53, $i54, $i55, $i56);
    LoopBound_AssertVar := false;
    goto $bb19_last;

  $bb19_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_9544;

  corral_source_split_9544:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    $p43 := $bitcast.ref.ref($p6);
    goto corral_source_split_9546;

  corral_source_split_9546:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9876} {:si_old_unique_call 4732} prepare_to_wait($p43, $p2, 1);
    goto corral_source_split_9547;

  corral_source_split_9547:
    assume {:verifier.code 0} true;
    $i44 := $p2i.ref.i64($p6);
    call {:si_unique_call 9877} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4733} boogie_si_record_i64($i44);
    goto corral_source_split_9548;

  corral_source_split_9548:
    assume {:verifier.code 0} true;
    $i45 := $add.i64($i44, 40);
    call {:si_unique_call 9878} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4734} boogie_si_record_i64($i45);
    goto corral_source_split_9549;

  corral_source_split_9549:
    assume {:verifier.code 0} true;
    $p46 := $i2p.i64.ref($i45);
    goto corral_source_split_9550;

  corral_source_split_9550:
    assume {:verifier.code 0} true;
    havoc $i47;
    call {:si_unique_call 9879} {:cexpr "__cil_tmp30"} {:si_old_unique_call 4735} boogie_si_record_i32($i47);
    goto corral_source_split_9551;

  corral_source_split_9551:
    assume {:verifier.code 0} true;
    $i48 := $ne.i32($i13, $i47);
    goto corral_source_split_9552;

  corral_source_split_9552:
    assume {:verifier.code 0} true;
    $i49 := $i42;
    assume {:branchcond $i48} true;
    goto $bb21, $bb22;

  $bb22:
    assume !($i48 == 1);
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    call {:si_unique_call 9880} {:si_old_unique_call 4737} $p51 := devirtbounce.12(0, current_task);
    goto corral_source_split_9560;

  corral_source_split_9560:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9881} {:si_old_unique_call 4738} $i52 := signal_pending($p51);
    call {:si_unique_call 9882} {:cexpr "tmp___9"} {:si_old_unique_call 4739} boogie_si_record_i32($i52);
    goto corral_source_split_9561;

  corral_source_split_9561:
    assume {:verifier.code 0} true;
    $i53 := $ne.i32($i52, 0);
    goto corral_source_split_9562;

  corral_source_split_9562:
    assume {:verifier.code 0} true;
    assume {:branchcond $i53} true;
    goto $bb25, $bb26;

  $bb26:
    assume !($i53 == 1);
    goto corral_source_split_9566;

  corral_source_split_9566:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9883} {:si_old_unique_call 4740} $i54 := schedule_timeout($i42);
    call {:si_unique_call 9884} {:cexpr "__ret"} {:si_old_unique_call 4741} boogie_si_record_i64($i54);
    goto corral_source_split_9567;

  corral_source_split_9567:
    assume {:verifier.code 0} true;
    $i55 := $ne.i64($i54, 0);
    goto corral_source_split_9568;

  corral_source_split_9568:
    assume {:verifier.code 0} true;
    $i56 := $i54;
    assume {:branchcond $i55} true;
    goto $bb28, $bb29;

  $bb29:
    assume !($i55 == 1);
    assume {:verifier.code 0} true;
    goto corral_source_split_9570;

  corral_source_split_9570:
    assume {:verifier.code 0} true;
    $i50 := $i56;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    goto corral_source_split_9556;

  corral_source_split_9556:
    assume {:verifier.code 0} true;
    $p57 := $bitcast.ref.ref($p6);
    goto corral_source_split_9557;

  corral_source_split_9557:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9885} {:si_old_unique_call 4736} finish_wait($p57, $p2);
    goto corral_source_split_9558;

  corral_source_split_9558:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    $i58 := $i50;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    goto corral_source_split_9572;

  corral_source_split_9572:
    assume {:verifier.code 0} true;
    $i59 := $trunc.i64.i32($i58);
    call {:si_unique_call 9886} {:cexpr "ret"} {:si_old_unique_call 4742} boogie_si_record_i32($i59);
    goto corral_source_split_9573;

  corral_source_split_9573:
    assume {:verifier.code 0} true;
    $i60 := $slt.i32($i59, 0);
    goto corral_source_split_9574;

  corral_source_split_9574:
    assume {:verifier.code 0} true;
    assume {:branchcond $i60} true;
    goto $bb34, $bb35;

  $bb35:
    assume !($i60 == 1);
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    $i61 := $eq.i32($i59, 0);
    goto corral_source_split_9578;

  corral_source_split_9578:
    assume {:verifier.code 0} true;
    assume {:branchcond $i61} true;
    goto $bb37, $bb38;

  $bb38:
    assume !($i61 == 1);
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    $i7 := 0;
    goto $bb9;

  $bb37:
    assume $i61 == 1;
    goto corral_source_split_9580;

  corral_source_split_9580:
    assume {:verifier.code 0} true;
    call {:si_unique_call 9887} {:si_old_unique_call 4743} $i62 := aty_enable_irq($p0, 1);
    goto corral_source_split_9581;

  corral_source_split_9581:
    assume {:verifier.code 0} true;
    $i7 := $sub.i32(0, 110);
    goto $bb9;

  $bb34:
    assume $i60 == 1;
    goto corral_source_split_9576;

  corral_source_split_9576:
    assume {:verifier.code 0} true;
    $i7 := $i59;
    goto $bb9;

  $bb28:
    assume $i55 == 1;
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    $i42 := $i54;
    goto $bb31_dummy;

  $bb31_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb25:
    assume $i53 == 1;
    goto corral_source_split_9564;

  corral_source_split_9564:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    $i50 := $sub.i64(0, 512);
    goto $bb23;

  $bb21:
    assume $i48 == 1;
    assume {:verifier.code 0} true;
    goto corral_source_split_9554;

  corral_source_split_9554:
    assume {:verifier.code 0} true;
    $i50 := $i49;
    goto $bb23;

  $bb15:
    assume $i20 == 1;
    assume {:verifier.code 0} true;
    $i58 := 25;
    goto $bb33;

  $bb12:
    assume $i9 == 1;
    goto corral_source_split_9501;

  corral_source_split_9501:
    assume {:verifier.code 0} true;
    $i7 := $i8;
    goto $bb9;
}



implementation {:LB_Mapping "main_loop_$bb5"} {:entrypoint} main_EntryCopy_main_loop_$bb5()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i32;
  var $i28: i32;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i32;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i32;
  var $i42: i1;
  var $i43: i32;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i32;
  var $i27: i32;
  var LoopBound_AssertVar: bool;

  $bb0:
    LoopBound_AssertVar := true;
    call {:si_unique_call 10143} {:si_old_unique_call 4999} $initialize();
    goto corral_source_split_10022;

  corral_source_split_10022:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10144} {:cexpr "smack:entry:main"} {:si_old_unique_call 5000} boogie_si_record_ref(main);
    goto corral_source_split_10023;

  corral_source_split_10023:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10145} {:cexpr "LDV_IN_INTERRUPT"} {:si_old_unique_call 5001} boogie_si_record_i32(1);
    goto corral_source_split_10024;

  corral_source_split_10024:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10146} {:si_old_unique_call 5002} ldv_initialize();
    goto corral_source_split_10025;

  corral_source_split_10025:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10147} {:si_old_unique_call 5003} $i0 := atyfb_init();
    call {:si_unique_call 10148} {:cexpr "tmp___7"} {:si_old_unique_call 5004} boogie_si_record_i32($i0);
    goto corral_source_split_10026;

  corral_source_split_10026:
    assume {:verifier.code 0} true;
    $i1 := $ne.i32($i0, 0);
    goto corral_source_split_10027;

  corral_source_split_10027:
    assume {:verifier.code 0} true;
    assume {:branchcond $i1} true;
    goto $bb1, $bb2;

  $bb2:
    assume !($i1 == 1);
    assume {:verifier.code 0} true;
    goto $bb4;

  $bb4:
    assume {:verifier.code 0} true;
    $i2 := 0;
    goto $bb5;

  $bb5:
    call {:si_unique_call 10149} $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i27 := main_loop_$bb5($i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i27);
    LoopBound_AssertVar := false;
    goto $bb5_last;

  $bb5_last:
    assume {:verifier.code 0} true;
    goto corral_source_split_10033;

  corral_source_split_10033:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 1} true;
    call {:si_unique_call 10150} {:si_old_unique_call 5006} $i3 := __VERIFIER_nondet_int();
    call {:si_unique_call 10151} {:cexpr "smack:ext:__VERIFIER_nondet_int"} {:si_old_unique_call 5007} boogie_si_record_i32($i3);
    call {:si_unique_call 10152} {:cexpr "tmp___9"} {:si_old_unique_call 5008} boogie_si_record_i32($i3);
    goto corral_source_split_10035;

  corral_source_split_10035:
    assume {:verifier.code 0} true;
    $i4 := $ne.i32($i3, 0);
    goto corral_source_split_10036;

  corral_source_split_10036:
    assume {:verifier.code 0} true;
    assume {:branchcond $i4} true;
    goto $bb7, $bb8;

  $bb8:
    assume !($i4 == 1);
    goto corral_source_split_10040;

  corral_source_split_10040:
    assume {:verifier.code 0} true;
    $i5 := $eq.i32($i2, 0);
    goto corral_source_split_10041;

  corral_source_split_10041:
    assume {:verifier.code 0} true;
    $i6 := $zext.i1.i32($i5);
    call {:si_unique_call 10153} {:cexpr "__cil_tmp27"} {:si_old_unique_call 5009} boogie_si_record_i32($i6);
    goto corral_source_split_10042;

  corral_source_split_10042:
    assume {:verifier.code 0} true;
    $i7 := $ne.i32($i6, 0);
    goto corral_source_split_10043;

  corral_source_split_10043:
    assume {:verifier.code 0} true;
    assume {:branchcond $i7} true;
    goto $bb10, $bb11;

  $bb11:
    assume !($i7 == 1);
    goto corral_source_split_10050;

  corral_source_split_10050:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 1} true;
    call {:si_unique_call 10154} {:si_old_unique_call 5010} $i8 := __VERIFIER_nondet_int();
    call {:si_unique_call 10155} {:cexpr "smack:ext:__VERIFIER_nondet_int"} {:si_old_unique_call 5011} boogie_si_record_i32($i8);
    call {:si_unique_call 10156} {:cexpr "tmp___8"} {:si_old_unique_call 5012} boogie_si_record_i32($i8);
    goto corral_source_split_10045;

  corral_source_split_10045:
    assume {:verifier.code 0} true;
    $i9 := $eq.i32($i8, 0);
    goto corral_source_split_10046;

  corral_source_split_10046:
    assume {:verifier.code 0} true;
    assume {:branchcond $i9} true;
    goto $bb14, $bb15;

  $bb15:
    assume !($i9 == 1);
    goto corral_source_split_10054;

  corral_source_split_10054:
    assume {:verifier.code 0} true;
    $i10 := $eq.i32($i8, 1);
    goto corral_source_split_10055;

  corral_source_split_10055:
    assume {:verifier.code 0} true;
    assume {:branchcond $i10} true;
    goto $bb17, $bb18;

  $bb18:
    assume !($i10 == 1);
    goto corral_source_split_10061;

  corral_source_split_10061:
    assume {:verifier.code 0} true;
    $i11 := $eq.i32($i8, 2);
    goto corral_source_split_10062;

  corral_source_split_10062:
    assume {:verifier.code 0} true;
    assume {:branchcond $i11} true;
    goto $bb20, $bb21;

  $bb21:
    assume !($i11 == 1);
    goto corral_source_split_10068;

  corral_source_split_10068:
    assume {:verifier.code 0} true;
    $i12 := $eq.i32($i8, 3);
    goto corral_source_split_10069;

  corral_source_split_10069:
    assume {:verifier.code 0} true;
    assume {:branchcond $i12} true;
    goto $bb23, $bb24;

  $bb24:
    assume !($i12 == 1);
    goto corral_source_split_10075;

  corral_source_split_10075:
    assume {:verifier.code 0} true;
    $i13 := $eq.i32($i8, 4);
    goto corral_source_split_10076;

  corral_source_split_10076:
    assume {:verifier.code 0} true;
    assume {:branchcond $i13} true;
    goto $bb26, $bb27;

  $bb27:
    assume !($i13 == 1);
    goto corral_source_split_10082;

  corral_source_split_10082:
    assume {:verifier.code 0} true;
    $i14 := $eq.i32($i8, 5);
    goto corral_source_split_10083;

  corral_source_split_10083:
    assume {:verifier.code 0} true;
    assume {:branchcond $i14} true;
    goto $bb29, $bb30;

  $bb30:
    assume !($i14 == 1);
    goto corral_source_split_10089;

  corral_source_split_10089:
    assume {:verifier.code 0} true;
    $i15 := $eq.i32($i8, 6);
    goto corral_source_split_10090;

  corral_source_split_10090:
    assume {:verifier.code 0} true;
    assume {:branchcond $i15} true;
    goto $bb32, $bb33;

  $bb33:
    assume !($i15 == 1);
    goto corral_source_split_10096;

  corral_source_split_10096:
    assume {:verifier.code 0} true;
    $i16 := $eq.i32($i8, 7);
    goto corral_source_split_10097;

  corral_source_split_10097:
    assume {:verifier.code 0} true;
    assume {:branchcond $i16} true;
    goto $bb35, $bb36;

  $bb36:
    assume !($i16 == 1);
    goto corral_source_split_10103;

  corral_source_split_10103:
    assume {:verifier.code 0} true;
    $i17 := $eq.i32($i8, 8);
    goto corral_source_split_10104;

  corral_source_split_10104:
    assume {:verifier.code 0} true;
    assume {:branchcond $i17} true;
    goto $bb38, $bb39;

  $bb39:
    assume !($i17 == 1);
    goto corral_source_split_10110;

  corral_source_split_10110:
    assume {:verifier.code 0} true;
    $i18 := $eq.i32($i8, 9);
    goto corral_source_split_10111;

  corral_source_split_10111:
    assume {:verifier.code 0} true;
    assume {:branchcond $i18} true;
    goto $bb41, $bb42;

  $bb42:
    assume !($i18 == 1);
    goto corral_source_split_10115;

  corral_source_split_10115:
    assume {:verifier.code 0} true;
    $i19 := $eq.i32($i8, 10);
    goto corral_source_split_10116;

  corral_source_split_10116:
    assume {:verifier.code 0} true;
    assume {:branchcond $i19} true;
    goto $bb44, $bb45;

  $bb45:
    assume !($i19 == 1);
    goto corral_source_split_10122;

  corral_source_split_10122:
    assume {:verifier.code 0} true;
    $i20 := $eq.i32($i8, 11);
    goto corral_source_split_10123;

  corral_source_split_10123:
    assume {:verifier.code 0} true;
    assume {:branchcond $i20} true;
    goto $bb47, $bb48;

  $bb48:
    assume !($i20 == 1);
    goto corral_source_split_10129;

  corral_source_split_10129:
    assume {:verifier.code 0} true;
    $i21 := $eq.i32($i8, 12);
    goto corral_source_split_10130;

  corral_source_split_10130:
    assume {:verifier.code 0} true;
    assume {:branchcond $i21} true;
    goto $bb50, $bb51;

  $bb51:
    assume !($i21 == 1);
    goto corral_source_split_10136;

  corral_source_split_10136:
    assume {:verifier.code 0} true;
    $i22 := $eq.i32($i8, 13);
    goto corral_source_split_10137;

  corral_source_split_10137:
    assume {:verifier.code 0} true;
    assume {:branchcond $i22} true;
    goto $bb53, $bb54;

  $bb54:
    assume !($i22 == 1);
    goto corral_source_split_10143;

  corral_source_split_10143:
    assume {:verifier.code 0} true;
    $i23 := $eq.i32($i8, 14);
    goto corral_source_split_10144;

  corral_source_split_10144:
    assume {:verifier.code 0} true;
    assume {:branchcond $i23} true;
    goto $bb56, $bb57;

  $bb57:
    assume !($i23 == 1);
    goto corral_source_split_10150;

  corral_source_split_10150:
    assume {:verifier.code 0} true;
    $i24 := $eq.i32($i8, 15);
    goto corral_source_split_10151;

  corral_source_split_10151:
    assume {:verifier.code 0} true;
    assume {:branchcond $i24} true;
    goto $bb59, $bb60;

  $bb60:
    assume !($i24 == 1);
    goto corral_source_split_10157;

  corral_source_split_10157:
    assume {:verifier.code 0} true;
    $i25 := $eq.i32($i8, 16);
    goto corral_source_split_10158;

  corral_source_split_10158:
    assume {:verifier.code 0} true;
    assume {:branchcond $i25} true;
    goto $bb62, $bb63;

  $bb63:
    assume !($i25 == 1);
    goto corral_source_split_10164;

  corral_source_split_10164:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb82:
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    goto $bb85;

  $bb85:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    $i2 := $i27;
    goto $bb94_dummy;

  $bb94_dummy:
    assume false;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb62:
    assume $i25 == 1;
    goto corral_source_split_10162;

  corral_source_split_10162:
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10157} {:cexpr "LDV_IN_INTERRUPT"} {:si_old_unique_call 5027} boogie_si_record_i32(2);
    goto corral_source_split_10166;

  corral_source_split_10166:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10158} {:si_old_unique_call 5028} $i47 := aty_irq($u0, $u10);
    goto corral_source_split_10167;

  corral_source_split_10167:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10159} {:cexpr "LDV_IN_INTERRUPT"} {:si_old_unique_call 5029} boogie_si_record_i32(1);
    goto corral_source_split_10168;

  corral_source_split_10168:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb59:
    assume $i24 == 1;
    goto corral_source_split_10155;

  corral_source_split_10155:
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10160} {:si_old_unique_call 5026} $i46 := atyfb_reboot_notify($u9, $u1, $u10);
    goto corral_source_split_10160;

  corral_source_split_10160:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb56:
    assume $i23 == 1;
    goto corral_source_split_10148;

  corral_source_split_10148:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10161} {:si_old_unique_call 5025} $i45 := atyfb_pci_resume($u7);
    goto corral_source_split_10153;

  corral_source_split_10153:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb53:
    assume $i22 == 1;
    goto corral_source_split_10141;

  corral_source_split_10141:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10162} {:si_old_unique_call 5024} $i44 := atyfb_pci_suspend($u7, $u0);
    goto corral_source_split_10146;

  corral_source_split_10146:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb50:
    assume $i21 == 1;
    goto corral_source_split_10134;

  corral_source_split_10134:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    $i38 := $eq.i32($i2, 0);
    goto corral_source_split_10139;

  corral_source_split_10139:
    assume {:verifier.code 0} true;
    assume {:branchcond $i38} true;
    goto $bb70, $bb71;

  $bb71:
    assume !($i38 == 1);
    assume {:verifier.code 0} true;
    $i43 := $i2;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    goto corral_source_split_10182;

  corral_source_split_10182:
    assume {:verifier.code 0} true;
    $i27 := $i43;
    goto $bb69;

  $bb70:
    assume $i38 == 1;
    goto corral_source_split_10170;

  corral_source_split_10170:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10163} {:si_old_unique_call 5030} $i39 := atyfb_pci_probe($u7, $u8);
    goto corral_source_split_10171;

  corral_source_split_10171:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10164} {:cexpr "res_atyfb_pci_probe_44"} {:si_old_unique_call 5031} boogie_si_record_i32($i39);
    goto corral_source_split_10172;

  corral_source_split_10172:
    assume {:verifier.code 0} true;
    havoc $i40;
    goto corral_source_split_10173;

  corral_source_split_10173:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10165} {:si_old_unique_call 5032} ldv_check_return_value($i40);
    goto corral_source_split_10174;

  corral_source_split_10174:
    assume {:verifier.code 0} true;
    havoc $i41;
    goto corral_source_split_10175;

  corral_source_split_10175:
    assume {:verifier.code 0} true;
    $i42 := $ne.i32($i41, 0);
    goto corral_source_split_10176;

  corral_source_split_10176:
    assume {:verifier.code 0} true;
    assume {:branchcond $i42} true;
    goto $bb72, $bb73;

  $bb73:
    assume !($i42 == 1);
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    $i43 := 0;
    goto $bb76;

  $bb72:
    assume $i42 == 1;
    goto corral_source_split_10178;

  corral_source_split_10178:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb74:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10166} {:si_old_unique_call 5033} atyfb_exit();
    goto corral_source_split_10180;

  corral_source_split_10180:
    assume {:verifier.code 0} true;
    goto $bb3;

  $bb3:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10167} {:si_old_unique_call 5005} ldv_check_final_state();
    goto corral_source_split_10031;

  corral_source_split_10031:
    assume {:verifier.code 0} true;
    assume {:OldAssert} !LoopBound_AssertVar;
    return;

  $bb47:
    assume $i20 == 1;
    goto corral_source_split_10127;

  corral_source_split_10127:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10168} {:si_old_unique_call 5023} $i37 := aty_bl_update_status($u6);
    goto corral_source_split_10132;

  corral_source_split_10132:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb44:
    assume $i19 == 1;
    goto corral_source_split_10120;

  corral_source_split_10120:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10169} {:si_old_unique_call 5022} $i36 := aty_bl_get_brightness($u6);
    goto corral_source_split_10125;

  corral_source_split_10125:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb41:
    assume $i18 == 1;
    goto corral_source_split_10113;

  corral_source_split_10113:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10170} {:si_old_unique_call 5021} $i35 := atyfb_sync($u4);
    goto corral_source_split_10118;

  corral_source_split_10118:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb38:
    assume $i17 == 1;
    goto corral_source_split_10108;

  corral_source_split_10108:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb35:
    assume $i16 == 1;
    goto corral_source_split_10101;

  corral_source_split_10101:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10171} {:si_old_unique_call 5020} $i34 := atyfb_ioctl($u4, $u0, $u1);
    goto corral_source_split_10106;

  corral_source_split_10106:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb32:
    assume $i15 == 1;
    goto corral_source_split_10094;

  corral_source_split_10094:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10172} {:si_old_unique_call 5019} $i33 := atyfb_blank($u0, $u4);
    goto corral_source_split_10099;

  corral_source_split_10099:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb29:
    assume $i14 == 1;
    goto corral_source_split_10087;

  corral_source_split_10087:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10173} {:si_old_unique_call 5018} $i32 := atyfb_pan_display($u5, $u4);
    goto corral_source_split_10092;

  corral_source_split_10092:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb26:
    assume $i13 == 1;
    goto corral_source_split_10080;

  corral_source_split_10080:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10174} {:si_old_unique_call 5017} $i31 := atyfb_setcolreg($u0, $u0, $u0, $u0, $u0, $u4);
    goto corral_source_split_10085;

  corral_source_split_10085:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb23:
    assume $i12 == 1;
    goto corral_source_split_10073;

  corral_source_split_10073:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10175} {:si_old_unique_call 5016} $i30 := atyfb_set_par($u4);
    goto corral_source_split_10078;

  corral_source_split_10078:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb20:
    assume $i11 == 1;
    goto corral_source_split_10066;

  corral_source_split_10066:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10176} {:si_old_unique_call 5015} $i29 := atyfb_check_var($u5, $u4);
    goto corral_source_split_10071;

  corral_source_split_10071:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb17:
    assume $i10 == 1;
    goto corral_source_split_10059;

  corral_source_split_10059:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10177} {:si_old_unique_call 5014} $i28 := atyfb_release($u4, $u0);
    goto corral_source_split_10064;

  corral_source_split_10064:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb14:
    assume $i9 == 1;
    goto corral_source_split_10052;

  corral_source_split_10052:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10178} {:si_old_unique_call 5013} $i26 := atyfb_open($u4, $u0);
    goto corral_source_split_10057;

  corral_source_split_10057:
    assume {:verifier.code 0} true;
    $i27 := $i2;
    goto $bb69;

  $bb10:
    assume $i7 == 1;
    goto corral_source_split_10048;

  corral_source_split_10048:
    assume {:verifier.code 0} true;
    goto $bb13;

  $bb13:
    assume {:verifier.code 0} true;
    goto $bb74;

  $bb7:
    assume $i4 == 1;
    goto corral_source_split_10038;

  corral_source_split_10038:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb1:
    assume $i1 == 1;
    goto corral_source_split_10029;

  corral_source_split_10029:
    assume {:verifier.code 0} true;
    goto $bb3;
}



procedure aty_var_to_pll_514_EntryCopy_aty_var_to_pll_514_loop_$bb1($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_18818_EntryCopy_aty_var_to_pll_18818_loop_$bb6($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb19($p0: ref, $p1: ref);



procedure aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb13($p0: ref, $p1: ref);



procedure aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb7($p0: ref, $p1: ref);



procedure aty_set_pll18818_EntryCopy_aty_set_pll18818_loop_$bb1($p0: ref, $p1: ref);



procedure aty_var_to_pll_1703_EntryCopy_aty_var_to_pll_1703_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_1703_EntryCopy_aty_var_to_pll_1703_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_8398_EntryCopy_aty_var_to_pll_8398_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_8398_EntryCopy_aty_var_to_pll_8398_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_408_EntryCopy_aty_var_to_pll_408_loop_$bb16($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_var_to_pll_408_EntryCopy_aty_var_to_pll_408_loop_$bb10($p0: ref, $i1: i32, $i2: i32, $p3: ref) returns ($r: i32);



procedure aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb30($p0: ref, $p1: ref);



procedure aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb24($p0: ref, $p1: ref);



procedure aty_set_pll_ct_EntryCopy_aty_set_pll_ct_loop_$bb18($p0: ref, $p1: ref);



procedure aty_valid_pll_ct_EntryCopy_aty_valid_pll_ct_loop_$bb10($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



procedure aty_dsp_gt_EntryCopy_aty_dsp_gt_loop_$bb16($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



procedure aty_dsp_gt_EntryCopy_aty_dsp_gt_loop_$bb10($p0: ref, $i1: i32, $p2: ref) returns ($r: i32);



procedure aty_var_to_crtc_EntryCopy_aty_var_to_crtc_loop_$bb223($p0: ref, $p1: ref, $p2: ref) returns ($r: i32);



procedure aty_var_to_crtc_EntryCopy_aty_var_to_crtc_loop_$bb207($p0: ref, $p1: ref, $p2: ref) returns ($r: i32);



procedure wait_for_idle_EntryCopy_wait_for_idle_loop_$bb1($p0: ref);



procedure wait_for_fifo_EntryCopy_wait_for_fifo_loop_$bb1($i0: i16, $p1: ref);



procedure ATIReduceRatio_EntryCopy_ATIReduceRatio_loop_$bb1($p0: ref, $p1: ref);



procedure aty_calc_mem_refresh_EntryCopy_aty_calc_mem_refresh_loop_$bb4($p0: ref, $i1: i32);



procedure atyfb_cursor_EntryCopy_atyfb_cursor_loop_$bb25($p0: ref, $p1: ref) returns ($r: i32);



procedure correct_chipset_EntryCopy_correct_chipset_loop_$bb1($p0: ref) returns ($r: i32);



procedure atyfb_setcolreg_EntryCopy_atyfb_setcolreg_loop_$bb62($i0: i32, $i1: i32, $i2: i32, $i3: i32, $i4: i32, $p5: ref) returns ($r: i32);



procedure atyfb_imageblit_EntryCopy_atyfb_imageblit_loop_$bb111($p0: ref, $p1: ref);



procedure atyfb_imageblit_EntryCopy_atyfb_imageblit_loop_$bb74($p0: ref, $p1: ref);



procedure aty_waitforvblank_EntryCopy_aty_waitforvblank_loop_$bb19($p0: ref, $i1: i32) returns ($r: i32);



procedure {:entrypoint} main_EntryCopy_main_loop_$bb5();



implementation aty_var_to_pll_514_loop_$bb1(in_$i1: i32, in_$i4: i32, in_$i5: i64, in_$i6: i64, in_$i7: i1, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i32, in_$i13: i1, in_$i14: i32, in_$i32: i32) returns (out_$i4: i32, out_$i5: i64, out_$i6: i64, out_$i7: i1, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i32, out_$i13: i1, out_$i14: i32, out_$i32: i32)
{

  entry:
    out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i32 := in_$i4, in_$i5, in_$i6, in_$i7, in_$i8, in_$i9, in_$i10, in_$p11, in_$i12, in_$i13, in_$i14, in_$i32;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    goto corral_source_split_91;

  corral_source_split_91:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i5 := $add.i64(7, 0);
    call {:si_unique_call 10259} {:cexpr "__cil_tmp7"} {:si_old_unique_call 53} boogie_si_record_i64(out_$i5);
    goto corral_source_split_93;

  corral_source_split_93:
    assume {:verifier.code 0} true;
    out_$i6 := $sext.i32.i64(out_$i4);
    call {:si_unique_call 10258} {:cexpr "__cil_tmp8"} {:si_old_unique_call 54} boogie_si_record_i64(out_$i6);
    goto corral_source_split_94;

  corral_source_split_94:
    assume {:verifier.code 0} true;
    out_$i7 := $ult.i64(out_$i6, out_$i5);
    goto corral_source_split_95;

  corral_source_split_95:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i7 == 1;
    goto corral_source_split_97;

  corral_source_split_97:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i8 := $sext.i32.i64(out_$i4);
    goto corral_source_split_101;

  corral_source_split_101:
    assume {:verifier.code 0} true;
    out_$i9 := $mul.i64(out_$i8, 8);
    call {:si_unique_call 10257} {:cexpr "__cil_tmp9"} {:si_old_unique_call 55} boogie_si_record_i64(out_$i9);
    goto corral_source_split_102;

  corral_source_split_102:
    assume {:verifier.code 0} true;
    out_$i10 := $add.i64($p2i.ref.i64(RGB514_clocks), out_$i9);
    call {:si_unique_call 10256} {:cexpr "__cil_tmp10"} {:si_old_unique_call 56} boogie_si_record_i64(out_$i10);
    goto corral_source_split_103;

  corral_source_split_103:
    assume {:verifier.code 0} true;
    out_$p11 := $i2p.i64.ref(out_$i10);
    goto corral_source_split_104;

  corral_source_split_104:
    assume {:verifier.code 0} true;
    havoc out_$i12;
    call {:si_unique_call 10255} {:cexpr "__cil_tmp11"} {:si_old_unique_call 57} boogie_si_record_i32(out_$i12);
    goto corral_source_split_105;

  corral_source_split_105:
    assume {:verifier.code 0} true;
    out_$i13 := $ule.i32(in_$i1, out_$i12);
    goto corral_source_split_106;

  corral_source_split_106:
    assume {:verifier.code 0} true;
    out_$i14 := out_$i4;
    assume true;
    goto $bb8;

  $bb8:
    assume !(out_$i13 == 1);
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    out_$i32 := $add.i32(out_$i4, 1);
    call {:si_unique_call 10254} {:cexpr "i"} {:si_old_unique_call 66} boogie_si_record_i32(out_$i32);
    goto corral_source_split_130;

  corral_source_split_130:
    assume {:verifier.code 0} true;
    out_$i4 := out_$i32;
    goto corral_source_split_130_dummy;

  corral_source_split_130_dummy:
    call {:si_unique_call 10260} {:si_old_unique_call 1} out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i32 := aty_var_to_pll_514_loop_$bb1(in_$i1, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i32);
    return;
}



implementation aty_var_to_pll_18818_loop_$bb6(in_$i8: i32, in_$i9: i32, in_$i10: i1, in_$i11: i32, in_$i12: i32, in_$i13: i32, in_$i14: i32) returns (out_$i8: i32, out_$i9: i32, out_$i10: i1, out_$i11: i32, out_$i12: i32, out_$i13: i32, out_$i14: i32)
{

  entry:
    out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14 := in_$i8, in_$i9, in_$i10, in_$i11, in_$i12, in_$i13, in_$i14;
    goto $bb6, exit;

  exit:
    return;

  $bb6:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_387;

  corral_source_split_387:
    assume {:verifier.code 0} true;
    goto $bb7;

  $bb7:
    assume {:verifier.code 0} true;
    out_$i10 := $ult.i32(out_$i8, 8000);
    goto corral_source_split_389;

  corral_source_split_389:
    assume {:verifier.code 0} true;
    out_$i11, out_$i12 := out_$i8, out_$i9;
    assume true;
    goto $bb8;

  $bb8:
    assume out_$i10 == 1;
    goto corral_source_split_391;

  corral_source_split_391:
    assume {:verifier.code 0} true;
    goto $bb10;

  $bb10:
    assume {:verifier.code 0} true;
    out_$i13 := $mul.i32(out_$i8, 2);
    call {:si_unique_call 10262} {:cexpr "MHz100"} {:si_old_unique_call 186} boogie_si_record_i32(out_$i13);
    goto corral_source_split_395;

  corral_source_split_395:
    assume {:verifier.code 0} true;
    out_$i14 := $mul.i32(out_$i9, 2);
    call {:si_unique_call 10261} {:cexpr "post_divider"} {:si_old_unique_call 187} boogie_si_record_i32(out_$i14);
    goto corral_source_split_396;

  corral_source_split_396:
    assume {:verifier.code 0} true;
    out_$i8, out_$i9 := out_$i13, out_$i14;
    goto corral_source_split_396_dummy;

  corral_source_split_396_dummy:
    call {:si_unique_call 10263} {:si_old_unique_call 1} out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14 := aty_var_to_pll_18818_loop_$bb6(out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14);
    return;
}



implementation aty_set_pll18818_loop_$bb19(in_$i63: i64, in_$i64: i64, in_$i65: i1) returns (out_$i63: i64, out_$i64: i64, out_$i65: i1)
{

  entry:
    out_$i63, out_$i64, out_$i65 := in_$i63, in_$i64, in_$i65;
    goto $bb19, exit;

  exit:
    return;

  $bb19:
    assume {:verifier.code 0} true;
    goto corral_source_split_556;

  corral_source_split_556:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    out_$i64 := $sub.i64(out_$i63, 1);
    call {:si_unique_call 10265} {:cexpr "__ms___1"} {:si_old_unique_call 268} boogie_si_record_i64(out_$i64);
    goto corral_source_split_558;

  corral_source_split_558:
    assume {:verifier.code 0} true;
    out_$i65 := $ne.i64(out_$i63, 0);
    goto corral_source_split_559;

  corral_source_split_559:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb21;

  $bb21:
    assume out_$i65 == 1;
    goto corral_source_split_561;

  corral_source_split_561:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10264} {:si_old_unique_call 269} ___udelay(4295000);
    goto corral_source_split_565;

  corral_source_split_565:
    assume {:verifier.code 0} true;
    out_$i63 := out_$i64;
    goto corral_source_split_565_dummy;

  corral_source_split_565_dummy:
    call {:si_unique_call 10266} {:si_old_unique_call 1} out_$i63, out_$i64, out_$i65 := aty_set_pll18818_loop_$bb19(out_$i63, out_$i64, out_$i65);
    return;
}



implementation aty_set_pll18818_loop_$bb13(in_$p6: ref, in_$i46: i32, in_$i47: i32, in_$i48: i1, in_$i49: i32, in_$i50: i8, in_$i51: i32, in_$i52: i32) returns (out_$i46: i32, out_$i47: i32, out_$i48: i1, out_$i49: i32, out_$i50: i8, out_$i51: i32, out_$i52: i32)
{

  entry:
    out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52 := in_$i46, in_$i47, in_$i48, in_$i49, in_$i50, in_$i51, in_$i52;
    goto $bb13, exit;

  exit:
    return;

  $bb13:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_528;

  corral_source_split_528:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i48 := $ult.i32(out_$i47, 13);
    goto corral_source_split_530;

  corral_source_split_530:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb15;

  $bb15:
    assume out_$i48 == 1;
    goto corral_source_split_532;

  corral_source_split_532:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i49 := $and.i32(out_$i46, 1);
    call {:si_unique_call 10271} {:cexpr "__cil_tmp62"} {:si_old_unique_call 251} boogie_si_record_i32(out_$i49);
    goto corral_source_split_536;

  corral_source_split_536:
    assume {:verifier.code 0} true;
    out_$i50 := $trunc.i32.i8(out_$i49);
    call {:si_unique_call 10270} {:cexpr "__cil_tmp63"} {:si_old_unique_call 252} boogie_si_record_i8(out_$i50);
    goto corral_source_split_537;

  corral_source_split_537:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10269} {:si_old_unique_call 253} aty_ICS2595_put1bit(out_$i50, in_$p6);
    goto corral_source_split_538;

  corral_source_split_538:
    assume {:verifier.code 0} true;
    out_$i51 := $lshr.i32(out_$i46, 1);
    call {:si_unique_call 10268} {:cexpr "program_bits"} {:si_old_unique_call 254} boogie_si_record_i32(out_$i51);
    goto corral_source_split_539;

  corral_source_split_539:
    assume {:verifier.code 0} true;
    out_$i52 := $add.i32(out_$i47, 1);
    call {:si_unique_call 10267} {:cexpr "i"} {:si_old_unique_call 255} boogie_si_record_i32(out_$i52);
    goto corral_source_split_540;

  corral_source_split_540:
    assume {:verifier.code 0} true;
    out_$i46, out_$i47 := out_$i51, out_$i52;
    goto corral_source_split_540_dummy;

  corral_source_split_540_dummy:
    call {:si_unique_call 10272} {:si_old_unique_call 1} out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52 := aty_set_pll18818_loop_$bb13(in_$p6, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52);
    return;
}



implementation aty_set_pll18818_loop_$bb7(in_$p6: ref, in_$i39: i32, in_$i40: i32, in_$i41: i1, in_$i42: i32, in_$i43: i8, in_$i44: i32, in_$i45: i32) returns (out_$i39: i32, out_$i40: i32, out_$i41: i1, out_$i42: i32, out_$i43: i8, out_$i44: i32, out_$i45: i32)
{

  entry:
    out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45 := in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45;
    goto $bb7, exit;

  exit:
    return;

  $bb7:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_514;

  corral_source_split_514:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i41 := $ult.i32(out_$i40, 5);
    goto corral_source_split_516;

  corral_source_split_516:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb9;

  $bb9:
    assume out_$i41 == 1;
    goto corral_source_split_518;

  corral_source_split_518:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i42 := $and.i32(out_$i39, 1);
    call {:si_unique_call 10277} {:cexpr "__cil_tmp59"} {:si_old_unique_call 246} boogie_si_record_i32(out_$i42);
    goto corral_source_split_522;

  corral_source_split_522:
    assume {:verifier.code 0} true;
    out_$i43 := $trunc.i32.i8(out_$i42);
    call {:si_unique_call 10276} {:cexpr "__cil_tmp60"} {:si_old_unique_call 247} boogie_si_record_i8(out_$i43);
    goto corral_source_split_523;

  corral_source_split_523:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10275} {:si_old_unique_call 248} aty_ICS2595_put1bit(out_$i43, in_$p6);
    goto corral_source_split_524;

  corral_source_split_524:
    assume {:verifier.code 0} true;
    out_$i44 := $lshr.i32(out_$i39, 1);
    call {:si_unique_call 10274} {:cexpr "locationAddr"} {:si_old_unique_call 249} boogie_si_record_i32(out_$i44);
    goto corral_source_split_525;

  corral_source_split_525:
    assume {:verifier.code 0} true;
    out_$i45 := $add.i32(out_$i40, 1);
    call {:si_unique_call 10273} {:cexpr "i"} {:si_old_unique_call 250} boogie_si_record_i32(out_$i45);
    goto corral_source_split_526;

  corral_source_split_526:
    assume {:verifier.code 0} true;
    out_$i39, out_$i40 := out_$i44, out_$i45;
    goto corral_source_split_526_dummy;

  corral_source_split_526_dummy:
    call {:si_unique_call 10278} {:si_old_unique_call 1} out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45 := aty_set_pll18818_loop_$bb7(in_$p6, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45);
    return;
}



implementation aty_set_pll18818_loop_$bb1(in_$i18: i64, in_$i19: i64, in_$i20: i1) returns (out_$i18: i64, out_$i19: i64, out_$i20: i1)
{

  entry:
    out_$i18, out_$i19, out_$i20 := in_$i18, in_$i19, in_$i20;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    goto corral_source_split_477;

  corral_source_split_477:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i19 := $sub.i64(out_$i18, 1);
    call {:si_unique_call 10280} {:cexpr "__ms"} {:si_old_unique_call 223} boogie_si_record_i64(out_$i19);
    goto corral_source_split_479;

  corral_source_split_479:
    assume {:verifier.code 0} true;
    out_$i20 := $ne.i64(out_$i18, 0);
    goto corral_source_split_480;

  corral_source_split_480:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i20 == 1;
    goto corral_source_split_482;

  corral_source_split_482:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10279} {:si_old_unique_call 224} ___udelay(4295000);
    goto corral_source_split_486;

  corral_source_split_486:
    assume {:verifier.code 0} true;
    out_$i18 := out_$i19;
    goto corral_source_split_486_dummy;

  corral_source_split_486_dummy:
    call {:si_unique_call 10281} {:si_old_unique_call 1} out_$i18, out_$i19, out_$i20 := aty_set_pll18818_loop_$bb1(out_$i18, out_$i19, out_$i20);
    return;
}



implementation aty_var_to_pll_1703_loop_$bb16(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16)
{

  entry:
    out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62 := in_$i27, in_$i28, in_$i29, in_$i30, in_$i31, in_$i32, in_$i33, in_$i34, in_$i35, in_$i36, in_$i37, in_$i38, in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45, in_$i46, in_$i47, in_$i48, in_$i49, in_$i50, in_$i51, in_$i52, in_$i53, in_$i54, in_$i55, in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$i62;
    goto $bb16, exit;

  exit:
    return;

  $bb16:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_697;

  corral_source_split_697:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i31 := $urem.i32(out_$i27, 1432);
    call {:si_unique_call 10305} {:cexpr "__cil_tmp22"} {:si_old_unique_call 356} boogie_si_record_i32(out_$i31);
    goto corral_source_split_699;

  corral_source_split_699:
    assume {:verifier.code 0} true;
    out_$i32 := $trunc.i32.i16(out_$i31);
    call {:si_unique_call 10304} {:cexpr "remainder"} {:si_old_unique_call 357} boogie_si_record_i16(out_$i32);
    goto corral_source_split_700;

  corral_source_split_700:
    assume {:verifier.code 0} true;
    out_$i33 := $udiv.i32(out_$i27, 1432);
    call {:si_unique_call 10303} {:cexpr "tempB"} {:si_old_unique_call 358} boogie_si_record_i32(out_$i33);
    goto corral_source_split_701;

  corral_source_split_701:
    assume {:verifier.code 0} true;
    out_$i34 := $and.i32(out_$i33, 65535);
    call {:si_unique_call 10302} {:cexpr "__cil_tmp23"} {:si_old_unique_call 359} boogie_si_record_i32(out_$i34);
    goto corral_source_split_702;

  corral_source_split_702:
    assume {:verifier.code 0} true;
    out_$i35 := $ule.i32(out_$i34, 127);
    goto corral_source_split_703;

  corral_source_split_703:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !(out_$i35 == 1);
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i28, out_$i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_727;

  corral_source_split_727:
    assume {:verifier.code 0} true;
    out_$i56 := $add.i32(out_$i27, in_$i16);
    call {:si_unique_call 10286} {:cexpr "temp"} {:si_old_unique_call 375} boogie_si_record_i32(out_$i56);
    goto corral_source_split_728;

  corral_source_split_728:
    assume {:verifier.code 0} true;
    out_$i57 := $sext.i16.i32(out_$i30);
    call {:si_unique_call 10285} {:cexpr "__cil_tmp37"} {:si_old_unique_call 376} boogie_si_record_i32(out_$i57);
    goto corral_source_split_729;

  corral_source_split_729:
    assume {:verifier.code 0} true;
    out_$i58 := $add.i32(out_$i57, 1);
    call {:si_unique_call 10284} {:cexpr "__cil_tmp38"} {:si_old_unique_call 377} boogie_si_record_i32(out_$i58);
    goto corral_source_split_730;

  corral_source_split_730:
    assume {:verifier.code 0} true;
    out_$i59 := $trunc.i32.i16(out_$i58);
    call {:si_unique_call 10283} {:cexpr "tempA"} {:si_old_unique_call 378} boogie_si_record_i16(out_$i59);
    goto corral_source_split_731;

  corral_source_split_731:
    assume {:verifier.code 0} true;
    out_$i60 := $sext.i16.i32(out_$i59);
    call {:si_unique_call 10282} {:cexpr "__cil_tmp40"} {:si_old_unique_call 379} boogie_si_record_i32(out_$i60);
    goto corral_source_split_732;

  corral_source_split_732:
    assume {:verifier.code 0} true;
    out_$i61 := $sle.i32(out_$i60, 12);
    goto corral_source_split_733;

  corral_source_split_733:
    assume {:verifier.code 0} true;
    out_$i62 := out_$i55;
    assume true;
    goto $bb24;

  $bb24:
    assume out_$i61 == 1;
    goto corral_source_split_735;

  corral_source_split_735:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i27, out_$i28, out_$i29, out_$i30 := out_$i56, out_$i54, out_$i55, out_$i59;
    goto $bb26_dummy;

  $bb26_dummy:
    call {:si_unique_call 10306} {:si_old_unique_call 1} out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62 := aty_var_to_pll_1703_loop_$bb16(in_$i16, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62);
    return;

  $bb18:
    assume out_$i35 == 1;
    goto corral_source_split_705;

  corral_source_split_705:
    assume {:verifier.code 0} true;
    out_$i36 := $zext.i16.i32(out_$i28);
    call {:si_unique_call 10301} {:cexpr "__cil_tmp24"} {:si_old_unique_call 360} boogie_si_record_i32(out_$i36);
    goto corral_source_split_706;

  corral_source_split_706:
    assume {:verifier.code 0} true;
    out_$i37 := $zext.i16.i32(out_$i32);
    call {:si_unique_call 10300} {:cexpr "__cil_tmp25"} {:si_old_unique_call 361} boogie_si_record_i32(out_$i37);
    goto corral_source_split_707;

  corral_source_split_707:
    assume {:verifier.code 0} true;
    out_$i38 := $sle.i32(out_$i37, out_$i36);
    goto corral_source_split_708;

  corral_source_split_708:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb21:
    assume !(out_$i38 == 1);
    assume {:verifier.code 0} true;
    out_$i52, out_$i53 := out_$i28, out_$i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_725;

  corral_source_split_725:
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i52, out_$i53;
    goto $bb23;

  $bb20:
    assume out_$i38 == 1;
    goto corral_source_split_710;

  corral_source_split_710:
    assume {:verifier.code 0} true;
    out_$i39 := $sext.i16.i32(out_$i29);
    call {:si_unique_call 10299} {:cexpr "__cil_tmp26"} {:si_old_unique_call 362} boogie_si_record_i32(out_$i39);
    goto corral_source_split_711;

  corral_source_split_711:
    assume {:verifier.code 0} true;
    out_$i40 := $and.i32(out_$i39, $sub.i32(0, 32));
    call {:si_unique_call 10298} {:cexpr "__cil_tmp27"} {:si_old_unique_call 363} boogie_si_record_i32(out_$i40);
    goto corral_source_split_712;

  corral_source_split_712:
    assume {:verifier.code 0} true;
    out_$i41 := $trunc.i32.i16(out_$i40);
    call {:si_unique_call 10297} {:cexpr "divider"} {:si_old_unique_call 364} boogie_si_record_i16(out_$i41);
    goto corral_source_split_713;

  corral_source_split_713:
    assume {:verifier.code 0} true;
    out_$i42 := $sext.i16.i32(out_$i30);
    call {:si_unique_call 10296} {:cexpr "__cil_tmp28"} {:si_old_unique_call 365} boogie_si_record_i32(out_$i42);
    goto corral_source_split_714;

  corral_source_split_714:
    assume {:verifier.code 0} true;
    out_$i43 := $sext.i16.i32(out_$i41);
    call {:si_unique_call 10295} {:cexpr "__cil_tmp29"} {:si_old_unique_call 366} boogie_si_record_i32(out_$i43);
    goto corral_source_split_715;

  corral_source_split_715:
    assume {:verifier.code 0} true;
    out_$i44 := $or.i32(out_$i43, out_$i42);
    call {:si_unique_call 10294} {:cexpr "__cil_tmp30"} {:si_old_unique_call 367} boogie_si_record_i32(out_$i44);
    goto corral_source_split_716;

  corral_source_split_716:
    assume {:verifier.code 0} true;
    out_$i45 := $trunc.i32.i16(out_$i44);
    call {:si_unique_call 10293} {:cexpr "divider"} {:si_old_unique_call 368} boogie_si_record_i16(out_$i45);
    goto corral_source_split_717;

  corral_source_split_717:
    assume {:verifier.code 0} true;
    out_$i46 := $and.i32(out_$i33, 255);
    call {:si_unique_call 10292} {:cexpr "__cil_tmp31"} {:si_old_unique_call 369} boogie_si_record_i32(out_$i46);
    goto corral_source_split_718;

  corral_source_split_718:
    assume {:verifier.code 0} true;
    out_$i47 := $shl.i32(out_$i46, 8);
    call {:si_unique_call 10291} {:cexpr "__cil_tmp32"} {:si_old_unique_call 370} boogie_si_record_i32(out_$i47);
    goto corral_source_split_719;

  corral_source_split_719:
    assume {:verifier.code 0} true;
    out_$i48 := $sext.i16.i32(out_$i45);
    call {:si_unique_call 10290} {:cexpr "__cil_tmp33"} {:si_old_unique_call 371} boogie_si_record_i32(out_$i48);
    goto corral_source_split_720;

  corral_source_split_720:
    assume {:verifier.code 0} true;
    out_$i49 := $and.i32(out_$i48, 255);
    call {:si_unique_call 10289} {:cexpr "__cil_tmp34"} {:si_old_unique_call 372} boogie_si_record_i32(out_$i49);
    goto corral_source_split_721;

  corral_source_split_721:
    assume {:verifier.code 0} true;
    out_$i50 := $add.i32(out_$i49, out_$i47);
    call {:si_unique_call 10288} {:cexpr "__cil_tmp36"} {:si_old_unique_call 373} boogie_si_record_i32(out_$i50);
    goto corral_source_split_722;

  corral_source_split_722:
    assume {:verifier.code 0} true;
    out_$i51 := $trunc.i32.i16(out_$i50);
    call {:si_unique_call 10287} {:cexpr "divider"} {:si_old_unique_call 374} boogie_si_record_i16(out_$i51);
    goto corral_source_split_723;

  corral_source_split_723:
    assume {:verifier.code 0} true;
    out_$i52, out_$i53 := out_$i32, out_$i51;
    goto $bb22;
}



implementation aty_var_to_pll_1703_loop_$bb10(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16)
{

  entry:
    out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := in_$i13, in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21;
    goto $bb10, exit;

  exit:
    return;

  $bb10:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_678;

  corral_source_split_678:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i15 := $ult.i32(out_$i13, in_$i12);
    goto corral_source_split_680;

  corral_source_split_680:
    assume {:verifier.code 0} true;
    out_$i16, out_$i17 := out_$i13, out_$i14;
    assume true;
    goto $bb12;

  $bb12:
    assume out_$i15 == 1;
    goto corral_source_split_682;

  corral_source_split_682:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i18 := $shl.i32(out_$i13, 1);
    call {:si_unique_call 10310} {:cexpr "mhz100"} {:si_old_unique_call 347} boogie_si_record_i32(out_$i18);
    goto corral_source_split_686;

  corral_source_split_686:
    assume {:verifier.code 0} true;
    out_$i19 := $sext.i16.i32(out_$i14);
    call {:si_unique_call 10309} {:cexpr "__cil_tmp17"} {:si_old_unique_call 348} boogie_si_record_i32(out_$i19);
    goto corral_source_split_687;

  corral_source_split_687:
    assume {:verifier.code 0} true;
    out_$i20 := $add.i32(out_$i19, 32);
    call {:si_unique_call 10308} {:cexpr "__cil_tmp18"} {:si_old_unique_call 349} boogie_si_record_i32(out_$i20);
    goto corral_source_split_688;

  corral_source_split_688:
    assume {:verifier.code 0} true;
    out_$i21 := $trunc.i32.i16(out_$i20);
    call {:si_unique_call 10307} {:cexpr "divider"} {:si_old_unique_call 350} boogie_si_record_i16(out_$i21);
    goto corral_source_split_689;

  corral_source_split_689:
    assume {:verifier.code 0} true;
    out_$i13, out_$i14 := out_$i18, out_$i21;
    goto corral_source_split_689_dummy;

  corral_source_split_689_dummy:
    call {:si_unique_call 10311} {:si_old_unique_call 1} out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := aty_var_to_pll_1703_loop_$bb10(in_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21);
    return;
}



implementation aty_var_to_pll_8398_loop_$bb16(in_$i12: i32, in_$i24: i16, in_$i25: i32, in_$i26: i16, in_$i27: i16, in_$i28: i16, in_$i29: i32, in_$i30: i1, in_$i31: i16, in_$i32: i16, in_$i33: i32, in_$i34: i16, in_$i35: i16, in_$i36: i16, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i16, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i1, in_$i52: i32, in_$i54: i32, in_$i53: i32, in_$i55: i1, in_$i56: i32, in_$i57: i16, in_$i58: i16, in_$i59: i32, in_$i60: i32, in_$i61: i16, in_$i62: i32, in_$i63: i32, in_$i64: i16) returns (out_$i25: i32, out_$i26: i16, out_$i27: i16, out_$i28: i16, out_$i29: i32, out_$i30: i1, out_$i31: i16, out_$i32: i16, out_$i33: i32, out_$i34: i16, out_$i35: i16, out_$i36: i16, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i16, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i1, out_$i52: i32, out_$i54: i32, out_$i53: i32, out_$i55: i1, out_$i56: i32, out_$i57: i16, out_$i58: i16, out_$i59: i32, out_$i60: i32, out_$i61: i16, out_$i62: i32, out_$i63: i32, out_$i64: i16)
{

  entry:
    out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i54, out_$i53, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64 := in_$i25, in_$i26, in_$i27, in_$i28, in_$i29, in_$i30, in_$i31, in_$i32, in_$i33, in_$i34, in_$i35, in_$i36, in_$i37, in_$i38, in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45, in_$i46, in_$i47, in_$i48, in_$i49, in_$i50, in_$i51, in_$i52, in_$i54, in_$i53, in_$i55, in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$i62, in_$i63, in_$i64;
    goto $bb16, exit;

  exit:
    return;

  $bb16:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_833;

  corral_source_split_833:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i29 := $zext.i16.i32(out_$i26);
    call {:si_unique_call 10347} {:cexpr "__cil_tmp28"} {:si_old_unique_call 430} boogie_si_record_i32(out_$i29);
    goto corral_source_split_835;

  corral_source_split_835:
    assume {:verifier.code 0} true;
    out_$i30 := $sle.i32(out_$i29, 30);
    goto corral_source_split_836;

  corral_source_split_836:
    assume {:verifier.code 0} true;
    out_$i31, out_$i32 := out_$i27, out_$i28;
    assume true;
    goto $bb18;

  $bb18:
    assume out_$i30 == 1;
    goto corral_source_split_838;

  corral_source_split_838:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    out_$i33, out_$i34, out_$i35, out_$i36 := out_$i25, 35, out_$i27, out_$i28;
    goto $bb22;

  $bb22:
    call {:si_unique_call 10332} out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i54, out_$i53, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61 := aty_var_to_pll_8398_loop_$bb22(in_$i12, in_$i24, out_$i26, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i54, out_$i53, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61);
    goto $bb22_last;

  $bb22_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_849;

  corral_source_split_849:
    assume {:verifier.code 0} true;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    out_$i37 := $zext.i16.i32(out_$i34);
    call {:si_unique_call 10331} {:cexpr "__cil_tmp29"} {:si_old_unique_call 438} boogie_si_record_i32(out_$i37);
    goto corral_source_split_851;

  corral_source_split_851:
    assume {:verifier.code 0} true;
    out_$i38 := $sle.i32(out_$i37, 247);
    goto corral_source_split_852;

  corral_source_split_852:
    assume {:verifier.code 0} true;
    out_$i39, out_$i40, out_$i41 := out_$i33, out_$i35, out_$i36;
    assume true;
    goto $bb24, $bb25;

  $bb25:
    assume !(out_$i38 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_856;

  corral_source_split_856:
    assume {:verifier.code 0} true;
    goto $bb27;

  $bb27:
    assume {:verifier.code 0} true;
    out_$i62 := $zext.i16.i32(out_$i26);
    call {:si_unique_call 10330} {:cexpr "__cil_tmp40"} {:si_old_unique_call 448} boogie_si_record_i32(out_$i62);
    goto corral_source_split_869;

  corral_source_split_869:
    assume {:verifier.code 0} true;
    out_$i63 := $add.i32(out_$i62, 1);
    call {:si_unique_call 10329} {:cexpr "__cil_tmp41"} {:si_old_unique_call 449} boogie_si_record_i32(out_$i63);
    goto corral_source_split_870;

  corral_source_split_870:
    assume {:verifier.code 0} true;
    out_$i64 := $trunc.i32.i16(out_$i63);
    call {:si_unique_call 10328} {:cexpr "m"} {:si_old_unique_call 450} boogie_si_record_i16(out_$i64);
    goto corral_source_split_871;

  corral_source_split_871:
    assume {:verifier.code 0} true;
    out_$i25, out_$i26, out_$i27, out_$i28 := out_$i39, out_$i64, out_$i40, out_$i41;
    goto corral_source_split_871_dummy;

  corral_source_split_871_dummy:
    call {:si_unique_call 10348} {:si_old_unique_call 1} out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i54, out_$i53, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64 := aty_var_to_pll_8398_loop_$bb16(in_$i12, in_$i24, out_$i25, out_$i26, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i54, out_$i53, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62, out_$i63, out_$i64);
    return;

  $bb24:
    assume out_$i38 == 1;
    goto corral_source_split_854;

  corral_source_split_854:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i42 := $zext.i16.i32(out_$i34);
    call {:si_unique_call 10346} {:cexpr "__cil_tmp30"} {:si_old_unique_call 439} boogie_si_record_i32(out_$i42);
    goto corral_source_split_858;

  corral_source_split_858:
    assume {:verifier.code 0} true;
    out_$i43 := $add.i32(out_$i42, 8);
    call {:si_unique_call 10345} {:cexpr "__cil_tmp31"} {:si_old_unique_call 440} boogie_si_record_i32(out_$i43);
    goto corral_source_split_859;

  corral_source_split_859:
    assume {:verifier.code 0} true;
    out_$i44 := $mul.i32(938356, out_$i43);
    call {:si_unique_call 10344} {:cexpr "tempA"} {:si_old_unique_call 441} boogie_si_record_i32(out_$i44);
    goto corral_source_split_860;

  corral_source_split_860:
    assume {:verifier.code 0} true;
    out_$i45 := $zext.i16.i32(in_$i24);
    call {:si_unique_call 10343} {:cexpr "__cil_tmp33"} {:si_old_unique_call 442} boogie_si_record_i32(out_$i45);
    goto corral_source_split_861;

  corral_source_split_861:
    assume {:verifier.code 0} true;
    out_$i46 := $mul.i32(out_$i45, 256);
    call {:si_unique_call 10342} {:cexpr "__cil_tmp34"} {:si_old_unique_call 443} boogie_si_record_i32(out_$i46);
    goto corral_source_split_862;

  corral_source_split_862:
    assume {:verifier.code 0} true;
    out_$i47 := $zext.i16.i32(out_$i26);
    call {:si_unique_call 10341} {:cexpr "__cil_tmp35"} {:si_old_unique_call 444} boogie_si_record_i32(out_$i47);
    goto corral_source_split_863;

  corral_source_split_863:
    assume {:verifier.code 0} true;
    out_$i48 := $add.i32(out_$i47, 2);
    call {:si_unique_call 10340} {:cexpr "__cil_tmp36"} {:si_old_unique_call 445} boogie_si_record_i32(out_$i48);
    goto corral_source_split_864;

  corral_source_split_864:
    assume {:verifier.code 0} true;
    out_$i49 := $mul.i32(out_$i46, out_$i48);
    call {:si_unique_call 10339} {:cexpr "tempB"} {:si_old_unique_call 446} boogie_si_record_i32(out_$i49);
    goto corral_source_split_865;

  corral_source_split_865:
    assume {:verifier.code 0} true;
    out_$i50 := $udiv.i32(out_$i44, out_$i49);
    call {:si_unique_call 10338} {:cexpr "fOut"} {:si_old_unique_call 447} boogie_si_record_i32(out_$i50);
    goto corral_source_split_866;

  corral_source_split_866:
    assume {:verifier.code 0} true;
    out_$i51 := $ugt.i32(in_$i12, out_$i50);
    goto corral_source_split_867;

  corral_source_split_867:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb28, $bb29;

  $bb29:
    assume !(out_$i51 == 1);
    goto corral_source_split_876;

  corral_source_split_876:
    assume {:verifier.code 0} true;
    out_$i54 := $sub.i32(out_$i50, in_$i12);
    call {:si_unique_call 10336} {:cexpr "diff"} {:si_old_unique_call 452} boogie_si_record_i32(out_$i54);
    assume {:verifier.code 0} true;
    out_$i53 := out_$i54;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_878;

  corral_source_split_878:
    assume {:verifier.code 0} true;
    out_$i55 := $ult.i32(out_$i53, out_$i33);
    goto corral_source_split_879;

  corral_source_split_879:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb31, $bb32;

  $bb32:
    assume !(out_$i55 == 1);
    assume {:verifier.code 0} true;
    out_$i56, out_$i57, out_$i58 := out_$i33, out_$i35, out_$i36;
    goto $bb33;

  $bb33:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_883;

  corral_source_split_883:
    assume {:verifier.code 0} true;
    out_$i59 := $zext.i16.i32(out_$i34);
    call {:si_unique_call 10335} {:cexpr "__cil_tmp38"} {:si_old_unique_call 453} boogie_si_record_i32(out_$i59);
    goto corral_source_split_884;

  corral_source_split_884:
    assume {:verifier.code 0} true;
    out_$i60 := $add.i32(out_$i59, 1);
    call {:si_unique_call 10334} {:cexpr "__cil_tmp39"} {:si_old_unique_call 454} boogie_si_record_i32(out_$i60);
    goto corral_source_split_885;

  corral_source_split_885:
    assume {:verifier.code 0} true;
    out_$i61 := $trunc.i32.i16(out_$i60);
    call {:si_unique_call 10333} {:cexpr "n"} {:si_old_unique_call 455} boogie_si_record_i16(out_$i61);
    goto corral_source_split_886;

  corral_source_split_886:
    assume {:verifier.code 0} true;
    out_$i33, out_$i34, out_$i35, out_$i36 := out_$i56, out_$i61, out_$i57, out_$i58;
    assume false;
    return;

  $bb31:
    assume out_$i55 == 1;
    goto corral_source_split_881;

  corral_source_split_881:
    assume {:verifier.code 0} true;
    out_$i56, out_$i57, out_$i58 := out_$i53, out_$i26, out_$i34;
    goto $bb33;

  $bb28:
    assume out_$i51 == 1;
    goto corral_source_split_873;

  corral_source_split_873:
    assume {:verifier.code 0} true;
    out_$i52 := $sub.i32(in_$i12, out_$i50);
    call {:si_unique_call 10337} {:cexpr "diff"} {:si_old_unique_call 451} boogie_si_record_i32(out_$i52);
    goto corral_source_split_874;

  corral_source_split_874:
    assume {:verifier.code 0} true;
    out_$i53 := out_$i52;
    goto $bb30;
}



implementation aty_var_to_pll_8398_loop_$bb10(in_$i13: i32, in_$i14: i32, in_$i15: i16, in_$i16: i1, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i14: i32, out_$i15: i16, out_$i16: i1, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16)
{

  entry:
    out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21;
    goto $bb10, exit;

  exit:
    return;

  $bb10:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_816;

  corral_source_split_816:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i16 := $ult.i32(out_$i14, in_$i13);
    goto corral_source_split_818;

  corral_source_split_818:
    assume {:verifier.code 0} true;
    out_$i17 := out_$i15;
    assume true;
    goto $bb12;

  $bb12:
    assume out_$i16 == 1;
    goto corral_source_split_820;

  corral_source_split_820:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i18 := $shl.i32(out_$i14, 1);
    call {:si_unique_call 10352} {:cexpr "mhz100"} {:si_old_unique_call 423} boogie_si_record_i32(out_$i18);
    goto corral_source_split_824;

  corral_source_split_824:
    assume {:verifier.code 0} true;
    out_$i19 := $zext.i16.i32(out_$i15);
    call {:si_unique_call 10351} {:cexpr "__cil_tmp24"} {:si_old_unique_call 424} boogie_si_record_i32(out_$i19);
    goto corral_source_split_825;

  corral_source_split_825:
    assume {:verifier.code 0} true;
    out_$i20 := $add.i32(out_$i19, 1);
    call {:si_unique_call 10350} {:cexpr "__cil_tmp25"} {:si_old_unique_call 425} boogie_si_record_i32(out_$i20);
    goto corral_source_split_826;

  corral_source_split_826:
    assume {:verifier.code 0} true;
    out_$i21 := $trunc.i32.i16(out_$i20);
    call {:si_unique_call 10349} {:cexpr "k"} {:si_old_unique_call 426} boogie_si_record_i16(out_$i21);
    goto corral_source_split_827;

  corral_source_split_827:
    assume {:verifier.code 0} true;
    out_$i14, out_$i15 := out_$i18, out_$i21;
    goto corral_source_split_827_dummy;

  corral_source_split_827_dummy:
    call {:si_unique_call 10353} {:si_old_unique_call 1} out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := aty_var_to_pll_8398_loop_$bb10(in_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21);
    return;
}



implementation aty_var_to_pll_408_loop_$bb16(in_$i16: i32, in_$i27: i32, in_$i28: i16, in_$i29: i16, in_$i30: i16, in_$i31: i32, in_$i32: i16, in_$i33: i32, in_$i34: i32, in_$i35: i1, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i16, in_$i42: i32, in_$i43: i32, in_$i44: i32, in_$i45: i16, in_$i46: i32, in_$i47: i32, in_$i48: i32, in_$i49: i32, in_$i50: i32, in_$i51: i16, in_$i52: i16, in_$i53: i16, in_$i54: i16, in_$i55: i16, in_$i56: i32, in_$i57: i32, in_$i58: i32, in_$i59: i16, in_$i60: i32, in_$i61: i1, in_$i62: i16) returns (out_$i27: i32, out_$i28: i16, out_$i29: i16, out_$i30: i16, out_$i31: i32, out_$i32: i16, out_$i33: i32, out_$i34: i32, out_$i35: i1, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i16, out_$i42: i32, out_$i43: i32, out_$i44: i32, out_$i45: i16, out_$i46: i32, out_$i47: i32, out_$i48: i32, out_$i49: i32, out_$i50: i32, out_$i51: i16, out_$i52: i16, out_$i53: i16, out_$i54: i16, out_$i55: i16, out_$i56: i32, out_$i57: i32, out_$i58: i32, out_$i59: i16, out_$i60: i32, out_$i61: i1, out_$i62: i16)
{

  entry:
    out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62 := in_$i27, in_$i28, in_$i29, in_$i30, in_$i31, in_$i32, in_$i33, in_$i34, in_$i35, in_$i36, in_$i37, in_$i38, in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45, in_$i46, in_$i47, in_$i48, in_$i49, in_$i50, in_$i51, in_$i52, in_$i53, in_$i54, in_$i55, in_$i56, in_$i57, in_$i58, in_$i59, in_$i60, in_$i61, in_$i62;
    goto $bb16, exit;

  exit:
    return;

  $bb16:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_990;

  corral_source_split_990:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i31 := $urem.i32(out_$i27, 1432);
    call {:si_unique_call 10377} {:cexpr "__cil_tmp22"} {:si_old_unique_call 514} boogie_si_record_i32(out_$i31);
    goto corral_source_split_992;

  corral_source_split_992:
    assume {:verifier.code 0} true;
    out_$i32 := $trunc.i32.i16(out_$i31);
    call {:si_unique_call 10376} {:cexpr "remainder"} {:si_old_unique_call 515} boogie_si_record_i16(out_$i32);
    goto corral_source_split_993;

  corral_source_split_993:
    assume {:verifier.code 0} true;
    out_$i33 := $udiv.i32(out_$i27, 1432);
    call {:si_unique_call 10375} {:cexpr "tempB"} {:si_old_unique_call 516} boogie_si_record_i32(out_$i33);
    goto corral_source_split_994;

  corral_source_split_994:
    assume {:verifier.code 0} true;
    out_$i34 := $and.i32(out_$i33, 65535);
    call {:si_unique_call 10374} {:cexpr "__cil_tmp23"} {:si_old_unique_call 517} boogie_si_record_i32(out_$i34);
    goto corral_source_split_995;

  corral_source_split_995:
    assume {:verifier.code 0} true;
    out_$i35 := $ule.i32(out_$i34, 255);
    goto corral_source_split_996;

  corral_source_split_996:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb18, $bb19;

  $bb19:
    assume !(out_$i35 == 1);
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i28, out_$i29;
    goto $bb23;

  $bb23:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1020;

  corral_source_split_1020:
    assume {:verifier.code 0} true;
    out_$i56 := $add.i32(out_$i27, in_$i16);
    call {:si_unique_call 10358} {:cexpr "temp"} {:si_old_unique_call 533} boogie_si_record_i32(out_$i56);
    goto corral_source_split_1021;

  corral_source_split_1021:
    assume {:verifier.code 0} true;
    out_$i57 := $sext.i16.i32(out_$i30);
    call {:si_unique_call 10357} {:cexpr "__cil_tmp37"} {:si_old_unique_call 534} boogie_si_record_i32(out_$i57);
    goto corral_source_split_1022;

  corral_source_split_1022:
    assume {:verifier.code 0} true;
    out_$i58 := $add.i32(out_$i57, 1);
    call {:si_unique_call 10356} {:cexpr "__cil_tmp38"} {:si_old_unique_call 535} boogie_si_record_i32(out_$i58);
    goto corral_source_split_1023;

  corral_source_split_1023:
    assume {:verifier.code 0} true;
    out_$i59 := $trunc.i32.i16(out_$i58);
    call {:si_unique_call 10355} {:cexpr "tempA"} {:si_old_unique_call 536} boogie_si_record_i16(out_$i59);
    goto corral_source_split_1024;

  corral_source_split_1024:
    assume {:verifier.code 0} true;
    out_$i60 := $sext.i16.i32(out_$i59);
    call {:si_unique_call 10354} {:cexpr "__cil_tmp39"} {:si_old_unique_call 537} boogie_si_record_i32(out_$i60);
    goto corral_source_split_1025;

  corral_source_split_1025:
    assume {:verifier.code 0} true;
    out_$i61 := $sle.i32(out_$i60, 32);
    goto corral_source_split_1026;

  corral_source_split_1026:
    assume {:verifier.code 0} true;
    out_$i62 := out_$i55;
    assume true;
    goto $bb24;

  $bb24:
    assume out_$i61 == 1;
    goto corral_source_split_1028;

  corral_source_split_1028:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i27, out_$i28, out_$i29, out_$i30 := out_$i56, out_$i54, out_$i55, out_$i59;
    goto $bb26_dummy;

  $bb26_dummy:
    call {:si_unique_call 10378} {:si_old_unique_call 1} out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62 := aty_var_to_pll_408_loop_$bb16(in_$i16, out_$i27, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i48, out_$i49, out_$i50, out_$i51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56, out_$i57, out_$i58, out_$i59, out_$i60, out_$i61, out_$i62);
    return;

  $bb18:
    assume out_$i35 == 1;
    goto corral_source_split_998;

  corral_source_split_998:
    assume {:verifier.code 0} true;
    out_$i36 := $zext.i16.i32(out_$i28);
    call {:si_unique_call 10373} {:cexpr "__cil_tmp24"} {:si_old_unique_call 518} boogie_si_record_i32(out_$i36);
    goto corral_source_split_999;

  corral_source_split_999:
    assume {:verifier.code 0} true;
    out_$i37 := $zext.i16.i32(out_$i32);
    call {:si_unique_call 10372} {:cexpr "__cil_tmp25"} {:si_old_unique_call 519} boogie_si_record_i32(out_$i37);
    goto corral_source_split_1000;

  corral_source_split_1000:
    assume {:verifier.code 0} true;
    out_$i38 := $sle.i32(out_$i37, out_$i36);
    goto corral_source_split_1001;

  corral_source_split_1001:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb21:
    assume !(out_$i38 == 1);
    assume {:verifier.code 0} true;
    out_$i52, out_$i53 := out_$i28, out_$i29;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_1018;

  corral_source_split_1018:
    assume {:verifier.code 0} true;
    out_$i54, out_$i55 := out_$i52, out_$i53;
    goto $bb23;

  $bb20:
    assume out_$i38 == 1;
    goto corral_source_split_1003;

  corral_source_split_1003:
    assume {:verifier.code 0} true;
    out_$i39 := $sext.i16.i32(out_$i29);
    call {:si_unique_call 10371} {:cexpr "__cil_tmp26"} {:si_old_unique_call 520} boogie_si_record_i32(out_$i39);
    goto corral_source_split_1004;

  corral_source_split_1004:
    assume {:verifier.code 0} true;
    out_$i40 := $and.i32(out_$i39, $sub.i32(0, 64));
    call {:si_unique_call 10370} {:cexpr "__cil_tmp27"} {:si_old_unique_call 521} boogie_si_record_i32(out_$i40);
    goto corral_source_split_1005;

  corral_source_split_1005:
    assume {:verifier.code 0} true;
    out_$i41 := $trunc.i32.i16(out_$i40);
    call {:si_unique_call 10369} {:cexpr "divider"} {:si_old_unique_call 522} boogie_si_record_i16(out_$i41);
    goto corral_source_split_1006;

  corral_source_split_1006:
    assume {:verifier.code 0} true;
    out_$i42 := $sext.i16.i32(out_$i30);
    call {:si_unique_call 10368} {:cexpr "__cil_tmp28"} {:si_old_unique_call 523} boogie_si_record_i32(out_$i42);
    goto corral_source_split_1007;

  corral_source_split_1007:
    assume {:verifier.code 0} true;
    out_$i43 := $sext.i16.i32(out_$i41);
    call {:si_unique_call 10367} {:cexpr "__cil_tmp29"} {:si_old_unique_call 524} boogie_si_record_i32(out_$i43);
    goto corral_source_split_1008;

  corral_source_split_1008:
    assume {:verifier.code 0} true;
    out_$i44 := $or.i32(out_$i43, out_$i42);
    call {:si_unique_call 10366} {:cexpr "__cil_tmp30"} {:si_old_unique_call 525} boogie_si_record_i32(out_$i44);
    goto corral_source_split_1009;

  corral_source_split_1009:
    assume {:verifier.code 0} true;
    out_$i45 := $trunc.i32.i16(out_$i44);
    call {:si_unique_call 10365} {:cexpr "divider"} {:si_old_unique_call 526} boogie_si_record_i16(out_$i45);
    goto corral_source_split_1010;

  corral_source_split_1010:
    assume {:verifier.code 0} true;
    out_$i46 := $and.i32(out_$i33, 255);
    call {:si_unique_call 10364} {:cexpr "__cil_tmp31"} {:si_old_unique_call 527} boogie_si_record_i32(out_$i46);
    goto corral_source_split_1011;

  corral_source_split_1011:
    assume {:verifier.code 0} true;
    out_$i47 := $shl.i32(out_$i46, 8);
    call {:si_unique_call 10363} {:cexpr "__cil_tmp32"} {:si_old_unique_call 528} boogie_si_record_i32(out_$i47);
    goto corral_source_split_1012;

  corral_source_split_1012:
    assume {:verifier.code 0} true;
    out_$i48 := $sext.i16.i32(out_$i45);
    call {:si_unique_call 10362} {:cexpr "__cil_tmp33"} {:si_old_unique_call 529} boogie_si_record_i32(out_$i48);
    goto corral_source_split_1013;

  corral_source_split_1013:
    assume {:verifier.code 0} true;
    out_$i49 := $and.i32(out_$i48, 255);
    call {:si_unique_call 10361} {:cexpr "__cil_tmp34"} {:si_old_unique_call 530} boogie_si_record_i32(out_$i49);
    goto corral_source_split_1014;

  corral_source_split_1014:
    assume {:verifier.code 0} true;
    out_$i50 := $add.i32(out_$i49, out_$i47);
    call {:si_unique_call 10360} {:cexpr "__cil_tmp36"} {:si_old_unique_call 531} boogie_si_record_i32(out_$i50);
    goto corral_source_split_1015;

  corral_source_split_1015:
    assume {:verifier.code 0} true;
    out_$i51 := $trunc.i32.i16(out_$i50);
    call {:si_unique_call 10359} {:cexpr "divider"} {:si_old_unique_call 532} boogie_si_record_i16(out_$i51);
    goto corral_source_split_1016;

  corral_source_split_1016:
    assume {:verifier.code 0} true;
    out_$i52, out_$i53 := out_$i32, out_$i51;
    goto $bb22;
}



implementation aty_var_to_pll_408_loop_$bb10(in_$i12: i32, in_$i13: i32, in_$i14: i16, in_$i15: i1, in_$i16: i32, in_$i17: i16, in_$i18: i32, in_$i19: i32, in_$i20: i32, in_$i21: i16) returns (out_$i13: i32, out_$i14: i16, out_$i15: i1, out_$i16: i32, out_$i17: i16, out_$i18: i32, out_$i19: i32, out_$i20: i32, out_$i21: i16)
{

  entry:
    out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := in_$i13, in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21;
    goto $bb10, exit;

  exit:
    return;

  $bb10:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_971;

  corral_source_split_971:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i15 := $ult.i32(out_$i13, in_$i12);
    goto corral_source_split_973;

  corral_source_split_973:
    assume {:verifier.code 0} true;
    out_$i16, out_$i17 := out_$i13, out_$i14;
    assume true;
    goto $bb12;

  $bb12:
    assume out_$i15 == 1;
    goto corral_source_split_975;

  corral_source_split_975:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i18 := $shl.i32(out_$i13, 1);
    call {:si_unique_call 10382} {:cexpr "mhz100"} {:si_old_unique_call 505} boogie_si_record_i32(out_$i18);
    goto corral_source_split_979;

  corral_source_split_979:
    assume {:verifier.code 0} true;
    out_$i19 := $sext.i16.i32(out_$i14);
    call {:si_unique_call 10381} {:cexpr "__cil_tmp17"} {:si_old_unique_call 506} boogie_si_record_i32(out_$i19);
    goto corral_source_split_980;

  corral_source_split_980:
    assume {:verifier.code 0} true;
    out_$i20 := $add.i32(out_$i19, 64);
    call {:si_unique_call 10380} {:cexpr "__cil_tmp18"} {:si_old_unique_call 507} boogie_si_record_i32(out_$i20);
    goto corral_source_split_981;

  corral_source_split_981:
    assume {:verifier.code 0} true;
    out_$i21 := $trunc.i32.i16(out_$i20);
    call {:si_unique_call 10379} {:cexpr "divider"} {:si_old_unique_call 508} boogie_si_record_i16(out_$i21);
    goto corral_source_split_982;

  corral_source_split_982:
    assume {:verifier.code 0} true;
    out_$i13, out_$i14 := out_$i18, out_$i21;
    goto corral_source_split_982_dummy;

  corral_source_split_982_dummy:
    call {:si_unique_call 10383} {:si_old_unique_call 1} out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := aty_var_to_pll_408_loop_$bb10(in_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21);
    return;
}



implementation aty_set_pll_ct_loop_$bb30(in_$i153: i64, in_$i154: i64, in_$i155: i1) returns (out_$i153: i64, out_$i154: i64, out_$i155: i1)
{

  entry:
    out_$i153, out_$i154, out_$i155 := in_$i153, in_$i154, in_$i155;
    goto $bb30, exit;

  exit:
    return;

  $bb30:
    assume {:verifier.code 0} true;
    goto corral_source_split_1388;

  corral_source_split_1388:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    out_$i154 := $sub.i64(out_$i153, 1);
    call {:si_unique_call 10385} {:cexpr "__ms___3"} {:si_old_unique_call 782} boogie_si_record_i64(out_$i154);
    goto corral_source_split_1390;

  corral_source_split_1390:
    assume {:verifier.code 0} true;
    out_$i155 := $ne.i64(out_$i153, 0);
    goto corral_source_split_1391;

  corral_source_split_1391:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32;

  $bb32:
    assume out_$i155 == 1;
    goto corral_source_split_1393;

  corral_source_split_1393:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10384} {:si_old_unique_call 783} ___udelay(4295000);
    goto corral_source_split_1397;

  corral_source_split_1397:
    assume {:verifier.code 0} true;
    out_$i153 := out_$i154;
    goto corral_source_split_1397_dummy;

  corral_source_split_1397_dummy:
    call {:si_unique_call 10386} {:si_old_unique_call 1} out_$i153, out_$i154, out_$i155 := aty_set_pll_ct_loop_$bb30(out_$i153, out_$i154, out_$i155);
    return;
}



implementation aty_set_pll_ct_loop_$bb24(in_$i147: i64, in_$i148: i64, in_$i149: i1) returns (out_$i147: i64, out_$i148: i64, out_$i149: i1)
{

  entry:
    out_$i147, out_$i148, out_$i149 := in_$i147, in_$i148, in_$i149;
    goto $bb24, exit;

  exit:
    return;

  $bb24:
    assume {:verifier.code 0} true;
    goto corral_source_split_1372;

  corral_source_split_1372:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    out_$i148 := $sub.i64(out_$i147, 1);
    call {:si_unique_call 10388} {:cexpr "__ms___2"} {:si_old_unique_call 776} boogie_si_record_i64(out_$i148);
    goto corral_source_split_1374;

  corral_source_split_1374:
    assume {:verifier.code 0} true;
    out_$i149 := $ne.i64(out_$i147, 0);
    goto corral_source_split_1375;

  corral_source_split_1375:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26;

  $bb26:
    assume out_$i149 == 1;
    goto corral_source_split_1377;

  corral_source_split_1377:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10387} {:si_old_unique_call 777} ___udelay(4295000);
    goto corral_source_split_1381;

  corral_source_split_1381:
    assume {:verifier.code 0} true;
    out_$i147 := out_$i148;
    goto corral_source_split_1381_dummy;

  corral_source_split_1381_dummy:
    call {:si_unique_call 10389} {:si_old_unique_call 1} out_$i147, out_$i148, out_$i149 := aty_set_pll_ct_loop_$bb24(out_$i147, out_$i148, out_$i149);
    return;
}



implementation aty_set_pll_ct_loop_$bb18(in_$i144: i64, in_$i145: i64, in_$i146: i1) returns (out_$i144: i64, out_$i145: i64, out_$i146: i1)
{

  entry:
    out_$i144, out_$i145, out_$i146 := in_$i144, in_$i145, in_$i146;
    goto $bb18, exit;

  exit:
    return;

  $bb18:
    assume {:verifier.code 0} true;
    goto corral_source_split_1359;

  corral_source_split_1359:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    out_$i145 := $sub.i64(out_$i144, 1);
    call {:si_unique_call 10391} {:cexpr "__ms___1"} {:si_old_unique_call 773} boogie_si_record_i64(out_$i145);
    goto corral_source_split_1361;

  corral_source_split_1361:
    assume {:verifier.code 0} true;
    out_$i146 := $ne.i64(out_$i144, 0);
    goto corral_source_split_1362;

  corral_source_split_1362:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20;

  $bb20:
    assume out_$i146 == 1;
    goto corral_source_split_1364;

  corral_source_split_1364:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10390} {:si_old_unique_call 774} ___udelay(4295000);
    goto corral_source_split_1368;

  corral_source_split_1368:
    assume {:verifier.code 0} true;
    out_$i144 := out_$i145;
    goto corral_source_split_1368_dummy;

  corral_source_split_1368_dummy:
    call {:si_unique_call 10392} {:si_old_unique_call 1} out_$i144, out_$i145, out_$i146 := aty_set_pll_ct_loop_$bb18(out_$i144, out_$i145, out_$i146);
    return;
}



implementation aty_valid_pll_ct_loop_$bb10(in_$p7: ref, in_$i105: i32, in_$i106: i32, in_$i107: i64, in_$i108: i64, in_$p109: ref, in_$i110: i32, in_$i111: i1, in_$i113: i1, in_$i114: i32, in_$i112: i32, in_$i116: i32, in_$i117: i32) returns (out_$i105: i32, out_$i106: i32, out_$i107: i64, out_$i108: i64, out_$p109: ref, out_$i110: i32, out_$i111: i1, out_$i113: i1, out_$i114: i32, out_$i112: i32, out_$i116: i32, out_$i117: i32)
{

  entry:
    out_$i105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i113, out_$i114, out_$i112, out_$i116, out_$i117 := in_$i105, in_$i106, in_$i107, in_$i108, in_$p109, in_$i110, in_$i111, in_$i113, in_$i114, in_$i112, in_$i116, in_$i117;
    goto $bb10, exit;

  exit:
    return;

  $bb10:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2430;

  corral_source_split_2430:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i107 := $p2i.ref.i64(in_$p7);
    call {:si_unique_call 10397} {:cexpr "__cil_tmp76"} {:si_old_unique_call 1345} boogie_si_record_i64(out_$i107);
    goto corral_source_split_2432;

  corral_source_split_2432:
    assume {:verifier.code 0} true;
    out_$i108 := $add.i64(out_$i107, 1040);
    call {:si_unique_call 10396} {:cexpr "__cil_tmp77"} {:si_old_unique_call 1346} boogie_si_record_i64(out_$i108);
    goto corral_source_split_2433;

  corral_source_split_2433:
    assume {:verifier.code 0} true;
    out_$p109 := $i2p.i64.ref(out_$i108);
    goto corral_source_split_2434;

  corral_source_split_2434:
    assume {:verifier.code 0} true;
    havoc out_$i110;
    call {:si_unique_call 10395} {:cexpr "__cil_tmp78"} {:si_old_unique_call 1347} boogie_si_record_i32(out_$i110);
    goto corral_source_split_2435;

  corral_source_split_2435:
    assume {:verifier.code 0} true;
    out_$i111 := $sgt.i32(out_$i105, out_$i110);
    goto corral_source_split_2436;

  corral_source_split_2436:
    assume {:verifier.code 0} true;
    out_$i112 := out_$i106;
    assume true;
    goto $bb12;

  $bb12:
    assume out_$i111 == 1;
    goto corral_source_split_2438;

  corral_source_split_2438:
    assume {:verifier.code 0} true;
    out_$i113 := $slt.i32(out_$i106, 2);
    goto corral_source_split_2439;

  corral_source_split_2439:
    assume {:verifier.code 0} true;
    out_$i114 := out_$i106;
    assume true;
    goto $bb14;

  $bb14:
    assume out_$i113 == 1;
    goto corral_source_split_2443;

  corral_source_split_2443:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    goto $bb18;

  $bb18:
    assume {:verifier.code 0} true;
    out_$i116 := $ashr.i32(out_$i105, 1);
    call {:si_unique_call 10394} {:cexpr "ecp"} {:si_old_unique_call 1356} boogie_si_record_i32(out_$i116);
    goto corral_source_split_2461;

  corral_source_split_2461:
    assume {:verifier.code 0} true;
    out_$i117 := $add.i32(out_$i106, 1);
    call {:si_unique_call 10393} {:cexpr "ecp_div"} {:si_old_unique_call 1357} boogie_si_record_i32(out_$i117);
    goto corral_source_split_2462;

  corral_source_split_2462:
    assume {:verifier.code 0} true;
    out_$i105, out_$i106 := out_$i116, out_$i117;
    goto corral_source_split_2462_dummy;

  corral_source_split_2462_dummy:
    call {:si_unique_call 10398} {:si_old_unique_call 1} out_$i105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i113, out_$i114, out_$i112, out_$i116, out_$i117 := aty_valid_pll_ct_loop_$bb10(in_$p7, out_$i105, out_$i106, out_$i107, out_$i108, out_$p109, out_$i110, out_$i111, out_$i113, out_$i114, out_$i112, out_$i116, out_$i117);
    return;
}



implementation aty_dsp_gt_loop_$bb16(in_$i100: i32, in_$i101: i8, in_$i102: i1, in_$i103: i8, in_$i104: i32, in_$i105: i32, in_$i106: i32, in_$i107: i8) returns (out_$i100: i32, out_$i101: i8, out_$i102: i1, out_$i103: i8, out_$i104: i32, out_$i105: i32, out_$i106: i32, out_$i107: i8)
{

  entry:
    out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$i106, out_$i107 := in_$i100, in_$i101, in_$i102, in_$i103, in_$i104, in_$i105, in_$i106, in_$i107;
    goto $bb16, exit;

  exit:
    return;

  $bb16:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2574;

  corral_source_split_2574:
    assume {:verifier.code 0} true;
    goto $bb17;

  $bb17:
    assume {:verifier.code 0} true;
    out_$i102 := $ne.i32(out_$i100, 0);
    goto corral_source_split_2576;

  corral_source_split_2576:
    assume {:verifier.code 0} true;
    out_$i103 := out_$i101;
    assume true;
    goto $bb18;

  $bb18:
    assume out_$i102 == 1;
    goto corral_source_split_2578;

  corral_source_split_2578:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    out_$i104 := $lshr.i32(out_$i100, 1);
    call {:si_unique_call 10402} {:cexpr "tmp___7"} {:si_old_unique_call 1427} boogie_si_record_i32(out_$i104);
    goto corral_source_split_2582;

  corral_source_split_2582:
    assume {:verifier.code 0} true;
    out_$i105 := $sext.i8.i32(out_$i101);
    call {:si_unique_call 10401} {:cexpr "__cil_tmp72"} {:si_old_unique_call 1428} boogie_si_record_i32(out_$i105);
    goto corral_source_split_2583;

  corral_source_split_2583:
    assume {:verifier.code 0} true;
    out_$i106 := $add.i32(out_$i105, 1);
    call {:si_unique_call 10400} {:cexpr "__cil_tmp73"} {:si_old_unique_call 1429} boogie_si_record_i32(out_$i106);
    goto corral_source_split_2584;

  corral_source_split_2584:
    assume {:verifier.code 0} true;
    out_$i107 := $trunc.i32.i8(out_$i106);
    call {:si_unique_call 10399} {:cexpr "dsp_precision"} {:si_old_unique_call 1430} boogie_si_record_i8(out_$i107);
    goto corral_source_split_2585;

  corral_source_split_2585:
    assume {:verifier.code 0} true;
    out_$i100, out_$i101 := out_$i104, out_$i107;
    goto corral_source_split_2585_dummy;

  corral_source_split_2585_dummy:
    call {:si_unique_call 10403} {:si_old_unique_call 1} out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$i106, out_$i107 := aty_dsp_gt_loop_$bb16(out_$i100, out_$i101, out_$i102, out_$i103, out_$i104, out_$i105, out_$i106, out_$i107);
    return;
}



implementation aty_dsp_gt_loop_$bb10(in_$i83: i32, in_$i84: i32, in_$i85: i32, in_$i86: i32, in_$i87: i1, in_$i88: i32, in_$i89: i32, in_$i90: i32, in_$i91: i32) returns (out_$i83: i32, out_$i84: i32, out_$i85: i32, out_$i86: i32, out_$i87: i1, out_$i88: i32, out_$i89: i32, out_$i90: i32, out_$i91: i32)
{

  entry:
    out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91 := in_$i83, in_$i84, in_$i85, in_$i86, in_$i87, in_$i88, in_$i89, in_$i90, in_$i91;
    goto $bb10, exit;

  exit:
    return;

  $bb10:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_2552;

  corral_source_split_2552:
    assume {:verifier.code 0} true;
    goto $bb11;

  $bb11:
    assume {:verifier.code 0} true;
    out_$i85 := $or.i32(out_$i84, out_$i83);
    call {:si_unique_call 10407} {:cexpr "__cil_tmp64"} {:si_old_unique_call 1416} boogie_si_record_i32(out_$i85);
    goto corral_source_split_2554;

  corral_source_split_2554:
    assume {:verifier.code 0} true;
    out_$i86 := $and.i32(out_$i85, 1);
    call {:si_unique_call 10406} {:cexpr "__cil_tmp65"} {:si_old_unique_call 1417} boogie_si_record_i32(out_$i86);
    goto corral_source_split_2555;

  corral_source_split_2555:
    assume {:verifier.code 0} true;
    out_$i87 := $eq.i32(out_$i86, 0);
    goto corral_source_split_2556;

  corral_source_split_2556:
    assume {:verifier.code 0} true;
    out_$i88, out_$i89 := out_$i83, out_$i84;
    assume true;
    goto $bb12;

  $bb12:
    assume out_$i87 == 1;
    goto corral_source_split_2558;

  corral_source_split_2558:
    assume {:verifier.code 0} true;
    goto $bb14;

  $bb14:
    assume {:verifier.code 0} true;
    out_$i90 := $lshr.i32(out_$i84, 1);
    call {:si_unique_call 10405} {:cexpr "multiplier"} {:si_old_unique_call 1418} boogie_si_record_i32(out_$i90);
    goto corral_source_split_2562;

  corral_source_split_2562:
    assume {:verifier.code 0} true;
    out_$i91 := $lshr.i32(out_$i83, 1);
    call {:si_unique_call 10404} {:cexpr "divider"} {:si_old_unique_call 1419} boogie_si_record_i32(out_$i91);
    goto corral_source_split_2563;

  corral_source_split_2563:
    assume {:verifier.code 0} true;
    out_$i83, out_$i84 := out_$i91, out_$i90;
    goto corral_source_split_2563_dummy;

  corral_source_split_2563_dummy:
    call {:si_unique_call 10408} {:si_old_unique_call 1} out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91 := aty_dsp_gt_loop_$bb10(out_$i83, out_$i84, out_$i85, out_$i86, out_$i87, out_$i88, out_$i89, out_$i90, out_$i91);
    return;
}



implementation aty_var_to_crtc_loop_$bb223(in_$i693: i32, in_$i694: i32, in_$i695: i32, in_$i696: i32, in_$i697: i32, in_$i698: i1, in_$i699: i32, in_$i700: i1, in_$i701: i32, in_$i704: i32, in_$i705: i32, in_$i702: i32, in_$i703: i32, in_$i706: i32, in_$i707: i32, in_$i708: i32) returns (out_$i693: i32, out_$i694: i32, out_$i695: i32, out_$i696: i32, out_$i697: i32, out_$i698: i1, out_$i699: i32, out_$i700: i1, out_$i701: i32, out_$i704: i32, out_$i705: i32, out_$i702: i32, out_$i703: i32, out_$i706: i32, out_$i707: i32, out_$i708: i32)
{

  entry:
    out_$i693, out_$i694, out_$i695, out_$i696, out_$i697, out_$i698, out_$i699, out_$i700, out_$i701, out_$i704, out_$i705, out_$i702, out_$i703, out_$i706, out_$i707, out_$i708 := in_$i693, in_$i694, in_$i695, in_$i696, in_$i697, in_$i698, in_$i699, in_$i700, in_$i701, in_$i704, in_$i705, in_$i702, in_$i703, in_$i706, in_$i707, in_$i708;
    goto $bb223, exit;

  exit:
    return;

  $bb223:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4329;

  corral_source_split_4329:
    assume {:verifier.code 0} true;
    goto $bb224;

  $bb224:
    assume {:verifier.code 0} true;
    out_$i697 := $sub.i32(out_$i693, 1);
    call {:si_unique_call 10414} {:cexpr "Index"} {:si_old_unique_call 2271} boogie_si_record_i32(out_$i697);
    goto corral_source_split_4331;

  corral_source_split_4331:
    assume {:verifier.code 0} true;
    out_$i698 := $sge.i32(out_$i697, 0);
    goto corral_source_split_4332;

  corral_source_split_4332:
    assume {:verifier.code 0} true;
    out_$i699 := out_$i694;
    assume true;
    goto $bb225;

  $bb225:
    assume out_$i698 == 1;
    goto corral_source_split_4334;

  corral_source_split_4334:
    assume {:verifier.code 0} true;
    goto $bb227;

  $bb227:
    assume {:verifier.code 0} true;
    out_$i700 := $sgt.i32(out_$i695, 0);
    goto corral_source_split_4338;

  corral_source_split_4338:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb229, $bb230;

  $bb230:
    assume !(out_$i700 == 1);
    goto corral_source_split_4362;

  corral_source_split_4362:
    assume {:verifier.code 0} true;
    havoc out_$i704;
    call {:si_unique_call 10415} {:cexpr "__cil_tmp451"} {:si_old_unique_call 2287} boogie_si_record_i32(out_$i704);
    goto corral_source_split_4363;

  corral_source_split_4363:
    assume {:verifier.code 0} true;
    out_$i705 := $add.i32(out_$i695, out_$i704);
    call {:si_unique_call 10412} {:cexpr "Accumulator"} {:si_old_unique_call 2288} boogie_si_record_i32(out_$i705);
    assume {:verifier.code 0} true;
    out_$i702, out_$i703 := out_$i694, out_$i705;
    goto $bb231;

  $bb231:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4365;

  corral_source_split_4365:
    assume {:verifier.code 0} true;
    havoc out_$i706;
    call {:si_unique_call 10411} {:cexpr "__cil_tmp453"} {:si_old_unique_call 2289} boogie_si_record_i32(out_$i706);
    goto corral_source_split_4366;

  corral_source_split_4366:
    assume {:verifier.code 0} true;
    out_$i707 := $sub.i32(out_$i703, out_$i706);
    call {:si_unique_call 10410} {:cexpr "Accumulator"} {:si_old_unique_call 2290} boogie_si_record_i32(out_$i707);
    goto corral_source_split_4367;

  corral_source_split_4367:
    assume {:verifier.code 0} true;
    out_$i708 := $shl.i32(out_$i696, 1);
    call {:si_unique_call 10409} {:cexpr "reuse_previous"} {:si_old_unique_call 2291} boogie_si_record_i32(out_$i708);
    goto corral_source_split_4368;

  corral_source_split_4368:
    assume {:verifier.code 0} true;
    out_$i693, out_$i694, out_$i695, out_$i696 := out_$i697, out_$i702, out_$i707, out_$i708;
    goto corral_source_split_4368_dummy;

  corral_source_split_4368_dummy:
    call {:si_unique_call 10416} {:si_old_unique_call 1} out_$i693, out_$i694, out_$i695, out_$i696, out_$i697, out_$i698, out_$i699, out_$i700, out_$i701, out_$i704, out_$i705, out_$i702, out_$i703, out_$i706, out_$i707, out_$i708 := aty_var_to_crtc_loop_$bb223(out_$i693, out_$i694, out_$i695, out_$i696, out_$i697, out_$i698, out_$i699, out_$i700, out_$i701, out_$i704, out_$i705, out_$i702, out_$i703, out_$i706, out_$i707, out_$i708);
    return;

  $bb229:
    assume out_$i700 == 1;
    goto corral_source_split_4359;

  corral_source_split_4359:
    assume {:verifier.code 0} true;
    out_$i701 := $or.i32(out_$i694, out_$i696);
    call {:si_unique_call 10413} {:cexpr "horz_stretch_ratio"} {:si_old_unique_call 2286} boogie_si_record_i32(out_$i701);
    goto corral_source_split_4360;

  corral_source_split_4360:
    assume {:verifier.code 0} true;
    out_$i702, out_$i703 := out_$i701, out_$i695;
    goto $bb231;
}



implementation aty_var_to_crtc_loop_$bb207(in_$i658: i32, in_$i659: i32, in_$i660: i32, in_$i661: i32, in_$i662: i1, in_$i663: i32, in_$i664: i32, in_$i667: i32, in_$i668: i64, in_$i669: i64, in_$i670: i64, in_$p671: ref, in_$i672: i8, in_$i673: i32, in_$i674: i32, in_$i675: i32, in_$i676: i32, in_$i677: i32, in_$i678: i32, in_$i679: i1, in_$i680: i1, in_$i681: i32, in_$i682: i32, in_$i683: i32, in_$i684: i32) returns (out_$i658: i32, out_$i659: i32, out_$i660: i32, out_$i661: i32, out_$i662: i1, out_$i663: i32, out_$i664: i32, out_$i667: i32, out_$i668: i64, out_$i669: i64, out_$i670: i64, out_$p671: ref, out_$i672: i8, out_$i673: i32, out_$i674: i32, out_$i675: i32, out_$i676: i32, out_$i677: i32, out_$i678: i32, out_$i679: i1, out_$i680: i1, out_$i681: i32, out_$i682: i32, out_$i683: i32, out_$i684: i32)
{

  entry:
    out_$i658, out_$i659, out_$i660, out_$i661, out_$i662, out_$i663, out_$i664, out_$i667, out_$i668, out_$i669, out_$i670, out_$p671, out_$i672, out_$i673, out_$i674, out_$i675, out_$i676, out_$i677, out_$i678, out_$i679, out_$i680, out_$i681, out_$i682, out_$i683, out_$i684 := in_$i658, in_$i659, in_$i660, in_$i661, in_$i662, in_$i663, in_$i664, in_$i667, in_$i668, in_$i669, in_$i670, in_$p671, in_$i672, in_$i673, in_$i674, in_$i675, in_$i676, in_$i677, in_$i678, in_$i679, in_$i680, in_$i681, in_$i682, in_$i683, in_$i684;
    goto $bb207, exit;

  exit:
    return;

  $bb207:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4283;

  corral_source_split_4283:
    assume {:verifier.code 0} true;
    goto $bb208;

  $bb208:
    assume {:verifier.code 0} true;
    out_$i661 := $sub.i32(out_$i660, 1);
    call {:si_unique_call 10427} {:cexpr "Index"} {:si_old_unique_call 2256} boogie_si_record_i32(out_$i661);
    goto corral_source_split_4285;

  corral_source_split_4285:
    assume {:verifier.code 0} true;
    out_$i662 := $sge.i32(out_$i661, 0);
    goto corral_source_split_4286;

  corral_source_split_4286:
    assume {:verifier.code 0} true;
    out_$i663, out_$i664 := out_$i658, out_$i659;
    assume true;
    goto $bb209;

  $bb209:
    assume out_$i662 == 1;
    goto corral_source_split_4288;

  corral_source_split_4288:
    assume {:verifier.code 0} true;
    goto $bb211;

  $bb211:
    assume {:verifier.code 0} true;
    havoc out_$i667;
    call {:si_unique_call 10426} {:cexpr "__cil_tmp436"} {:si_old_unique_call 2257} boogie_si_record_i32(out_$i667);
    goto corral_source_split_4292;

  corral_source_split_4292:
    assume {:verifier.code 0} true;
    out_$i668 := $sext.i32.i64(out_$i661);
    goto corral_source_split_4293;

  corral_source_split_4293:
    assume {:verifier.code 0} true;
    out_$i669 := $mul.i64(out_$i668, 1);
    call {:si_unique_call 10425} {:cexpr "__cil_tmp437"} {:si_old_unique_call 2258} boogie_si_record_i64(out_$i669);
    goto corral_source_split_4294;

  corral_source_split_4294:
    assume {:verifier.code 0} true;
    out_$i670 := $add.i64($p2i.ref.i64(StretchLoops), out_$i669);
    call {:si_unique_call 10424} {:cexpr "__cil_tmp438"} {:si_old_unique_call 2259} boogie_si_record_i64(out_$i670);
    goto corral_source_split_4295;

  corral_source_split_4295:
    assume {:verifier.code 0} true;
    out_$p671 := $i2p.i64.ref(out_$i670);
    goto corral_source_split_4296;

  corral_source_split_4296:
    assume {:verifier.code 0} true;
    havoc out_$i672;
    call {:si_unique_call 10423} {:cexpr "__cil_tmp439"} {:si_old_unique_call 2260} boogie_si_record_i8(out_$i672);
    goto corral_source_split_4297;

  corral_source_split_4297:
    assume {:verifier.code 0} true;
    out_$i673 := $sext.i8.i32(out_$i672);
    call {:si_unique_call 10422} {:cexpr "__cil_tmp440"} {:si_old_unique_call 2261} boogie_si_record_i32(out_$i673);
    goto corral_source_split_4298;

  corral_source_split_4298:
    assume {:verifier.code 0} true;
    havoc out_$i674;
    call {:si_unique_call 10421} {:cexpr "__cil_tmp442"} {:si_old_unique_call 2262} boogie_si_record_i32(out_$i674);
    goto corral_source_split_4299;

  corral_source_split_4299:
    assume {:verifier.code 0} true;
    havoc out_$i675;
    call {:si_unique_call 10420} {:cexpr "__cil_tmp444"} {:si_old_unique_call 2263} boogie_si_record_i32(out_$i675);
    goto corral_source_split_4300;

  corral_source_split_4300:
    assume {:verifier.code 0} true;
    out_$i676 := $sub.i32(out_$i675, out_$i674);
    call {:si_unique_call 10419} {:cexpr "__cil_tmp445"} {:si_old_unique_call 2264} boogie_si_record_i32(out_$i676);
    goto corral_source_split_4301;

  corral_source_split_4301:
    assume {:verifier.code 0} true;
    out_$i677 := $mul.i32(out_$i676, out_$i673);
    call {:si_unique_call 10418} {:cexpr "__cil_tmp446"} {:si_old_unique_call 2265} boogie_si_record_i32(out_$i677);
    goto corral_source_split_4302;

  corral_source_split_4302:
    assume {:verifier.code 0} true;
    out_$i678 := $srem.i32(out_$i677, out_$i667);
    call {:si_unique_call 10417} {:cexpr "Remainder"} {:si_old_unique_call 2266} boogie_si_record_i32(out_$i678);
    goto corral_source_split_4303;

  corral_source_split_4303:
    assume {:verifier.code 0} true;
    out_$i679 := $slt.i32(out_$i678, out_$i659);
    goto corral_source_split_4304;

  corral_source_split_4304:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb213, $bb214;

  $bb214:
    assume !(out_$i679 == 1);
    assume {:verifier.code 0} true;
    out_$i683, out_$i684 := out_$i658, out_$i659;
    goto $bb218;

  $bb218:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4316;

  corral_source_split_4316:
    assume {:verifier.code 0} true;
    out_$i658, out_$i659, out_$i660 := out_$i683, out_$i684, out_$i661;
    goto corral_source_split_4316_dummy;

  corral_source_split_4316_dummy:
    call {:si_unique_call 10428} {:si_old_unique_call 1} out_$i658, out_$i659, out_$i660, out_$i661, out_$i662, out_$i663, out_$i664, out_$i667, out_$i668, out_$i669, out_$i670, out_$p671, out_$i672, out_$i673, out_$i674, out_$i675, out_$i676, out_$i677, out_$i678, out_$i679, out_$i680, out_$i681, out_$i682, out_$i683, out_$i684 := aty_var_to_crtc_loop_$bb207(out_$i658, out_$i659, out_$i660, out_$i661, out_$i662, out_$i663, out_$i664, out_$i667, out_$i668, out_$i669, out_$i670, out_$p671, out_$i672, out_$i673, out_$i674, out_$i675, out_$i676, out_$i677, out_$i678, out_$i679, out_$i680, out_$i681, out_$i682, out_$i683, out_$i684);
    return;

  $bb213:
    assume out_$i679 == 1;
    goto corral_source_split_4309;

  corral_source_split_4309:
    assume {:verifier.code 0} true;
    out_$i680 := $ne.i32(out_$i678, 0);
    goto corral_source_split_4310;

  corral_source_split_4310:
    assume {:verifier.code 0} true;
    out_$i681, out_$i682 := out_$i661, out_$i678;
    assume true;
    goto $bb215;

  $bb215:
    assume out_$i680 == 1;
    goto corral_source_split_4312;

  corral_source_split_4312:
    assume {:verifier.code 0} true;
    goto $bb217;

  $bb217:
    assume {:verifier.code 0} true;
    out_$i683, out_$i684 := out_$i661, out_$i678;
    goto $bb218;
}



implementation wait_for_idle_loop_$bb1(in_$p0: ref, in_$i1: i32, in_$i2: i32, in_$i3: i1) returns (out_$i1: i32, out_$i2: i32, out_$i3: i1)
{

  entry:
    out_$i1, out_$i2, out_$i3 := in_$i1, in_$i2, in_$i3;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10430} {:si_old_unique_call 2400} out_$i1 := aty_ld_le32(824, in_$p0);
    call {:si_unique_call 10431} {:cexpr "tmp___7"} {:si_old_unique_call 2401} boogie_si_record_i32(out_$i1);
    goto corral_source_split_4586;

  corral_source_split_4586:
    assume {:verifier.code 0} true;
    out_$i2 := $and.i32(out_$i1, 1);
    call {:si_unique_call 10429} {:cexpr "__cil_tmp6"} {:si_old_unique_call 2402} boogie_si_record_i32(out_$i2);
    goto corral_source_split_4587;

  corral_source_split_4587:
    assume {:verifier.code 0} true;
    out_$i3 := $ne.i32(out_$i2, 0);
    goto corral_source_split_4588;

  corral_source_split_4588:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i3 == 1;
    goto corral_source_split_4590;

  corral_source_split_4590:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb5_dummy;

  $bb5_dummy:
    call {:si_unique_call 10432} {:si_old_unique_call 1} out_$i1, out_$i2, out_$i3 := wait_for_idle_loop_$bb1(in_$p0, out_$i1, out_$i2, out_$i3);
    return;
}



implementation wait_for_fifo_loop_$bb1(in_$i0: i16, in_$p1: ref, in_$i2: i32, in_$i3: i32, in_$i4: i32, in_$i5: i32, in_$i6: i1) returns (out_$i2: i32, out_$i3: i32, out_$i4: i32, out_$i5: i32, out_$i6: i1)
{

  entry:
    out_$i2, out_$i3, out_$i4, out_$i5, out_$i6 := in_$i2, in_$i3, in_$i4, in_$i5, in_$i6;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10436} {:si_old_unique_call 2647} out_$i2 := aty_ld_le32(784, in_$p1);
    call {:si_unique_call 10437} {:cexpr "tmp___7"} {:si_old_unique_call 2648} boogie_si_record_i32(out_$i2);
    goto corral_source_split_4918;

  corral_source_split_4918:
    assume {:verifier.code 0} true;
    out_$i3 := $zext.i16.i32(in_$i0);
    call {:si_unique_call 10435} {:cexpr "wait_for_fifo:arg:__cil_tmp4"} {:si_old_unique_call 2649} boogie_si_record_i16(in_$i0);
    goto corral_source_split_4919;

  corral_source_split_4919:
    assume {:verifier.code 0} true;
    out_$i4 := $ashr.i32(32768, out_$i3);
    call {:si_unique_call 10434} {:cexpr "__cil_tmp5"} {:si_old_unique_call 2650} boogie_si_record_i32(out_$i4);
    goto corral_source_split_4920;

  corral_source_split_4920:
    assume {:verifier.code 0} true;
    out_$i5 := $and.i32(out_$i2, 65535);
    call {:si_unique_call 10433} {:cexpr "__cil_tmp7"} {:si_old_unique_call 2651} boogie_si_record_i32(out_$i5);
    goto corral_source_split_4921;

  corral_source_split_4921:
    assume {:verifier.code 0} true;
    out_$i6 := $ugt.i32(out_$i5, out_$i4);
    goto corral_source_split_4922;

  corral_source_split_4922:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i6 == 1;
    goto corral_source_split_4924;

  corral_source_split_4924:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    goto $bb5_dummy;

  $bb5_dummy:
    call {:si_unique_call 10438} {:si_old_unique_call 1} out_$i2, out_$i3, out_$i4, out_$i5, out_$i6 := wait_for_fifo_loop_$bb1(in_$i0, in_$p1, out_$i2, out_$i3, out_$i4, out_$i5, out_$i6);
    return;
}



implementation ATIReduceRatio_loop_$bb1(in_$i4: i32, in_$i5: i32, in_$i6: i32, in_$i7: i1, in_$i8: i32) returns (out_$i4: i32, out_$i5: i32, out_$i6: i32, out_$i7: i1, out_$i8: i32)
{

  entry:
    out_$i4, out_$i5, out_$i6, out_$i7, out_$i8 := in_$i4, in_$i5, in_$i6, in_$i7, in_$i8;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_4932;

  corral_source_split_4932:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i6 := $srem.i32(out_$i4, out_$i5);
    call {:si_unique_call 10439} {:cexpr "Remainder"} {:si_old_unique_call 2654} boogie_si_record_i32(out_$i6);
    goto corral_source_split_4934;

  corral_source_split_4934:
    assume {:verifier.code 0} true;
    out_$i7 := $ne.i32(out_$i6, 0);
    goto corral_source_split_4935;

  corral_source_split_4935:
    assume {:verifier.code 0} true;
    out_$i8 := out_$i5;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i7 == 1;
    goto corral_source_split_4937;

  corral_source_split_4937:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i4, out_$i5 := out_$i5, out_$i6;
    goto $bb5_dummy;

  $bb5_dummy:
    call {:si_unique_call 10440} {:si_old_unique_call 1} out_$i4, out_$i5, out_$i6, out_$i7, out_$i8 := ATIReduceRatio_loop_$bb1(out_$i4, out_$i5, out_$i6, out_$i7, out_$i8);
    return;
}



implementation aty_calc_mem_refresh_loop_$bb4(in_$i1: i32, in_$p104: ref, in_$i105: i32, in_$i112: i32, in_$i113: i1, in_$i114: i32, in_$i116: i64, in_$p117: ref, in_$i118: i32, in_$i119: i1, in_$i120: i32, in_$i121: i32) returns (out_$i112: i32, out_$i113: i1, out_$i114: i32, out_$i116: i64, out_$p117: ref, out_$i118: i32, out_$i119: i1, out_$i120: i32, out_$i121: i32)
{

  entry:
    out_$i112, out_$i113, out_$i114, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$i121 := in_$i112, in_$i113, in_$i114, in_$i116, in_$p117, in_$i118, in_$i119, in_$i120, in_$i121;
    goto $bb4, exit;

  exit:
    return;

  $bb4:
    assume {:verifier.code 0} true;
    goto corral_source_split_6627;

  corral_source_split_6627:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i113 := $slt.i32(out_$i112, in_$i105);
    goto corral_source_split_6629;

  corral_source_split_6629:
    assume {:verifier.code 0} true;
    out_$i114 := out_$i112;
    assume true;
    goto $bb6;

  $bb6:
    assume out_$i113 == 1;
    goto corral_source_split_6631;

  corral_source_split_6631:
    assume {:verifier.code 0} true;
    goto $bb8;

  $bb8:
    assume {:verifier.code 0} true;
    out_$i116 := $sext.i32.i64(out_$i112);
    goto corral_source_split_6635;

  corral_source_split_6635:
    assume {:verifier.code 0} true;
    out_$p117 := $add.ref(in_$p104, $mul.ref(out_$i116, 4));
    goto corral_source_split_6636;

  corral_source_split_6636:
    assume {:verifier.code 0} true;
    havoc out_$i118;
    call {:si_unique_call 10442} {:cexpr "__cil_tmp66"} {:si_old_unique_call 3360} boogie_si_record_i32(out_$i118);
    goto corral_source_split_6637;

  corral_source_split_6637:
    assume {:verifier.code 0} true;
    out_$i119 := $slt.i32(in_$i1, out_$i118);
    goto corral_source_split_6638;

  corral_source_split_6638:
    assume {:verifier.code 0} true;
    out_$i120 := out_$i112;
    assume true;
    goto $bb11;

  $bb11:
    assume !(out_$i119 == 1);
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    out_$i121 := $add.i32(out_$i112, 1);
    call {:si_unique_call 10441} {:cexpr "i"} {:si_old_unique_call 3363} boogie_si_record_i32(out_$i121);
    goto corral_source_split_6649;

  corral_source_split_6649:
    assume {:verifier.code 0} true;
    out_$i112 := out_$i121;
    goto corral_source_split_6649_dummy;

  corral_source_split_6649_dummy:
    call {:si_unique_call 10443} {:si_old_unique_call 1} out_$i112, out_$i113, out_$i114, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$i121 := aty_calc_mem_refresh_loop_$bb4(in_$i1, in_$p104, in_$i105, out_$i112, out_$i113, out_$i114, out_$i116, out_$p117, out_$i118, out_$i119, out_$i120, out_$i121);
    return;
}



implementation atyfb_cursor_loop_$bb25(in_$p1: ref, in_$i197: i32, in_$i201: i32, in_$i207: i32, in_$p208: ref, in_$p209: ref, in_$p210: ref, in_$i211: i32, in_$i212: i1, in_$p213: ref, in_$p214: ref, in_$p215: ref, in_$i216: i32, in_$i217: i1, in_$p218: ref, in_$p219: ref, in_$p220: ref, in_$p221: ref, in_$i222: i8, in_$p223: ref, in_$i224: i8, in_$i225: i64, in_$i226: i64, in_$p227: ref, in_$i228: i16, in_$i229: i32, in_$i230: i1, in_$i231: i32, in_$i232: i1, in_$p233: ref, in_$i234: i32, in_$i235: i32, in_$i236: i32, in_$i237: i32, in_$i238: i64, in_$i239: i64, in_$i240: i64, in_$p241: ref, in_$i242: i8, in_$i243: i64, in_$p244: ref, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$i248: i32, in_$i249: i64, in_$i250: i64, in_$i251: i64, in_$p252: ref, in_$i253: i8, in_$p255: ref, in_$i256: i32, in_$i257: i32, in_$i258: i32, in_$i259: i32, in_$i260: i64, in_$i261: i64, in_$i262: i64, in_$p263: ref, in_$i264: i8, in_$i265: i64, in_$p266: ref, in_$i267: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i64, in_$i272: i64, in_$i273: i64, in_$p274: ref, in_$i275: i8, in_$p254: ref, in_$i276: i32, in_$i277: i64, in_$p278: ref, in_$i279: i32) returns (out_$p208: ref, out_$p209: ref, out_$p210: ref, out_$i211: i32, out_$i212: i1, out_$p213: ref, out_$p214: ref, out_$p215: ref, out_$i216: i32, out_$i217: i1, out_$p218: ref, out_$p219: ref, out_$p220: ref, out_$p221: ref, out_$i222: i8, out_$p223: ref, out_$i224: i8, out_$i225: i64, out_$i226: i64, out_$p227: ref, out_$i228: i16, out_$i229: i32, out_$i230: i1, out_$i231: i32, out_$i232: i1, out_$p233: ref, out_$i234: i32, out_$i235: i32, out_$i236: i32, out_$i237: i32, out_$i238: i64, out_$i239: i64, out_$i240: i64, out_$p241: ref, out_$i242: i8, out_$i243: i64, out_$p244: ref, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$i248: i32, out_$i249: i64, out_$i250: i64, out_$i251: i64, out_$p252: ref, out_$i253: i8, out_$p255: ref, out_$i256: i32, out_$i257: i32, out_$i258: i32, out_$i259: i32, out_$i260: i64, out_$i261: i64, out_$i262: i64, out_$p263: ref, out_$i264: i8, out_$i265: i64, out_$p266: ref, out_$i267: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i64, out_$i272: i64, out_$i273: i64, out_$p274: ref, out_$i275: i8, out_$p254: ref, out_$i276: i32, out_$i277: i64, out_$p278: ref, out_$i279: i32)
{

  entry:
    out_$p208, out_$p209, out_$p210, out_$i211, out_$i212, out_$p213, out_$p214, out_$p215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$p221, out_$i222, out_$p223, out_$i224, out_$i225, out_$i226, out_$p227, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$p244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$i253, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$p263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$p274, out_$i275, out_$p254, out_$i276, out_$i277, out_$p278, out_$i279 := in_$p208, in_$p209, in_$p210, in_$i211, in_$i212, in_$p213, in_$p214, in_$p215, in_$i216, in_$i217, in_$p218, in_$p219, in_$p220, in_$p221, in_$i222, in_$p223, in_$i224, in_$i225, in_$i226, in_$p227, in_$i228, in_$i229, in_$i230, in_$i231, in_$i232, in_$p233, in_$i234, in_$i235, in_$i236, in_$i237, in_$i238, in_$i239, in_$i240, in_$p241, in_$i242, in_$i243, in_$p244, in_$i245, in_$i246, in_$i247, in_$i248, in_$i249, in_$i250, in_$i251, in_$p252, in_$i253, in_$p255, in_$i256, in_$i257, in_$i258, in_$i259, in_$i260, in_$i261, in_$i262, in_$p263, in_$i264, in_$i265, in_$p266, in_$i267, in_$i268, in_$i269, in_$i270, in_$i271, in_$i272, in_$i273, in_$p274, in_$i275, in_$p254, in_$i276, in_$i277, in_$p278, in_$i279;
    goto $bb25, exit;

  exit:
    return;

  $bb25:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7278;

  corral_source_split_7278:
    assume {:verifier.code 0} true;
    goto $bb26;

  $bb26:
    assume {:verifier.code 0} true;
    out_$i212 := $ult.i32(out_$i211, in_$i201);
    goto corral_source_split_7280;

  corral_source_split_7280:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb27;

  $bb27:
    assume out_$i212 == 1;
    goto corral_source_split_7282;

  corral_source_split_7282:
    assume {:verifier.code 0} true;
    goto $bb29;

  $bb29:
    assume {:verifier.code 0} true;
    out_$p213, out_$p214, out_$p215, out_$i216 := out_$p208, out_$p209, out_$p210, 0;
    goto $bb31;

  $bb31:
    call {:si_unique_call 10484} out_$p213, out_$p214, out_$p215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$p221, out_$i222, out_$p223, out_$i224, out_$i225, out_$i226, out_$p227, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$p244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$i253, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$p263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$p274, out_$i275, out_$p254, out_$i276 := atyfb_cursor_loop_$bb31(in_$p1, in_$i197, out_$p213, out_$p214, out_$p215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$p221, out_$i222, out_$p223, out_$i224, out_$i225, out_$i226, out_$p227, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$p244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$i253, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$p263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$p274, out_$i275, out_$p254, out_$i276);
    goto $bb31_last;

  $bb31_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7286;

  corral_source_split_7286:
    assume {:verifier.code 0} true;
    goto $bb32;

  $bb32:
    assume {:verifier.code 0} true;
    out_$i217 := $ult.i32(out_$i216, in_$i197);
    goto corral_source_split_7288;

  corral_source_split_7288:
    assume {:verifier.code 0} true;
    out_$p218, out_$p219, out_$p220 := out_$p213, out_$p214, out_$p215;
    assume true;
    goto $bb33, $bb34;

  $bb34:
    assume !(out_$i217 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_7292;

  corral_source_split_7292:
    assume {:verifier.code 0} true;
    goto $bb36;

  $bb36:
    assume {:verifier.code 0} true;
    out_$i277 := $zext.i32.i64(in_$i207);
    goto corral_source_split_7305;

  corral_source_split_7305:
    assume {:verifier.code 0} true;
    out_$p278 := $add.ref(out_$p220, $mul.ref(out_$i277, 1));
    goto corral_source_split_7306;

  corral_source_split_7306:
    assume {:verifier.code 0} true;
    out_$i279 := $add.i32(out_$i211, 1);
    call {:si_unique_call 10483} {:cexpr "i"} {:si_old_unique_call 3724} boogie_si_record_i32(out_$i279);
    goto corral_source_split_7307;

  corral_source_split_7307:
    assume {:verifier.code 0} true;
    out_$p208, out_$p209, out_$p210, out_$i211 := out_$p218, out_$p219, out_$p278, out_$i279;
    goto corral_source_split_7307_dummy;

  corral_source_split_7307_dummy:
    call {:si_unique_call 10523} {:si_old_unique_call 1} out_$p208, out_$p209, out_$p210, out_$i211, out_$i212, out_$p213, out_$p214, out_$p215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$p221, out_$i222, out_$p223, out_$i224, out_$i225, out_$i226, out_$p227, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$p244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$i253, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$p263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$p274, out_$i275, out_$p254, out_$i276, out_$i277, out_$p278, out_$i279 := atyfb_cursor_loop_$bb25(in_$p1, in_$i197, in_$i201, in_$i207, out_$p208, out_$p209, out_$p210, out_$i211, out_$i212, out_$p213, out_$p214, out_$p215, out_$i216, out_$i217, out_$p218, out_$p219, out_$p220, out_$p221, out_$i222, out_$p223, out_$i224, out_$i225, out_$i226, out_$p227, out_$i228, out_$i229, out_$i230, out_$i231, out_$i232, out_$p233, out_$i234, out_$i235, out_$i236, out_$i237, out_$i238, out_$i239, out_$i240, out_$p241, out_$i242, out_$i243, out_$p244, out_$i245, out_$i246, out_$i247, out_$i248, out_$i249, out_$i250, out_$i251, out_$p252, out_$i253, out_$p255, out_$i256, out_$i257, out_$i258, out_$i259, out_$i260, out_$i261, out_$i262, out_$p263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i268, out_$i269, out_$i270, out_$i271, out_$i272, out_$i273, out_$p274, out_$i275, out_$p254, out_$i276, out_$i277, out_$p278, out_$i279);
    return;

  $bb33:
    assume out_$i217 == 1;
    goto corral_source_split_7290;

  corral_source_split_7290:
    assume {:verifier.code 0} true;
    goto $bb35;

  $bb35:
    assume {:verifier.code 0} true;
    out_$p221 := $add.ref(out_$p213, $mul.ref(1, 1));
    goto corral_source_split_7294;

  corral_source_split_7294:
    assume {:verifier.code 0} true;
    havoc out_$i222;
    call {:si_unique_call 10506} {:cexpr "b"} {:si_old_unique_call 3719} boogie_si_record_i8(out_$i222);
    goto corral_source_split_7295;

  corral_source_split_7295:
    assume {:verifier.code 0} true;
    out_$p223 := $add.ref(out_$p214, $mul.ref(1, 1));
    goto corral_source_split_7296;

  corral_source_split_7296:
    assume {:verifier.code 0} true;
    havoc out_$i224;
    call {:si_unique_call 10505} {:cexpr "m"} {:si_old_unique_call 3720} boogie_si_record_i8(out_$i224);
    goto corral_source_split_7297;

  corral_source_split_7297:
    assume {:verifier.code 0} true;
    out_$i225 := $p2i.ref.i64(in_$p1);
    call {:si_unique_call 10504} {:cexpr "__cil_tmp208"} {:si_old_unique_call 3721} boogie_si_record_i64(out_$i225);
    goto corral_source_split_7298;

  corral_source_split_7298:
    assume {:verifier.code 0} true;
    out_$i226 := $add.i64(out_$i225, 4);
    call {:si_unique_call 10503} {:cexpr "__cil_tmp209"} {:si_old_unique_call 3722} boogie_si_record_i64(out_$i226);
    goto corral_source_split_7299;

  corral_source_split_7299:
    assume {:verifier.code 0} true;
    out_$p227 := $i2p.i64.ref(out_$i226);
    goto corral_source_split_7300;

  corral_source_split_7300:
    assume {:verifier.code 0} true;
    havoc out_$i228;
    call {:si_unique_call 10502} {:cexpr "__cil_tmp210"} {:si_old_unique_call 3723} boogie_si_record_i16(out_$i228);
    goto corral_source_split_7301;

  corral_source_split_7301:
    assume {:verifier.code 0} true;
    out_$i229 := $zext.i16.i32(out_$i228);
    goto corral_source_split_7302;

  corral_source_split_7302:
    assume {:verifier.code 0} true;
    out_$i230 := $eq.i32(out_$i229, 1);
    goto corral_source_split_7303;

  corral_source_split_7303:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb37, $bb38;

  $bb38:
    assume !(out_$i230 == 1);
    goto corral_source_split_7311;

  corral_source_split_7311:
    assume {:verifier.code 0} true;
    out_$i231 := $zext.i16.i32(out_$i228);
    goto corral_source_split_7312;

  corral_source_split_7312:
    assume {:verifier.code 0} true;
    out_$i232 := $eq.i32(out_$i231, 0);
    goto corral_source_split_7313;

  corral_source_split_7313:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb40, $bb41;

  $bb41:
    assume !(out_$i232 == 1);
    goto corral_source_split_7340;

  corral_source_split_7340:
    assume {:verifier.code 0} true;
    assume {:branchcond 0} true;
    goto $bb43, $bb44;

  $bb44:
    assume !(0 == 1);
    goto corral_source_split_7367;

  corral_source_split_7367:
    assume {:verifier.code 0} true;
    out_$p254 := out_$p215;
    goto $bb45;

  $bb45:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    goto $bb47;

  $bb47:
    assume {:verifier.code 0} true;
    goto $bb48;

  $bb48:
    assume {:verifier.code 0} true;
    out_$i276 := $add.i32(out_$i216, 1);
    call {:si_unique_call 10485} {:cexpr "j"} {:si_old_unique_call 3757} boogie_si_record_i32(out_$i276);
    goto corral_source_split_7369;

  corral_source_split_7369:
    assume {:verifier.code 0} true;
    out_$p213, out_$p214, out_$p215, out_$i216 := out_$p221, out_$p223, out_$p254, out_$i276;
    assume false;
    return;

  $bb43:
    assume 0 == 1;
    goto corral_source_split_7365;

  corral_source_split_7365:
    assume {:verifier.code 0} true;
    goto $bb39;

  $bb39:
    assume {:verifier.code 0} true;
    out_$p233 := $add.ref(out_$p215, $mul.ref(1, 1));
    goto corral_source_split_7315;

  corral_source_split_7315:
    assume {:verifier.code 0} true;
    out_$i234 := $zext.i8.i32(out_$i224);
    call {:si_unique_call 10522} {:cexpr "__cil_tmp211"} {:si_old_unique_call 3725} boogie_si_record_i32(out_$i234);
    goto corral_source_split_7316;

  corral_source_split_7316:
    assume {:verifier.code 0} true;
    out_$i235 := $zext.i8.i32(out_$i222);
    call {:si_unique_call 10521} {:cexpr "__cil_tmp212"} {:si_old_unique_call 3726} boogie_si_record_i32(out_$i235);
    goto corral_source_split_7317;

  corral_source_split_7317:
    assume {:verifier.code 0} true;
    out_$i236 := $xor.i32(out_$i235, out_$i234);
    call {:si_unique_call 10520} {:cexpr "__cil_tmp213"} {:si_old_unique_call 3727} boogie_si_record_i32(out_$i236);
    goto corral_source_split_7318;

  corral_source_split_7318:
    assume {:verifier.code 0} true;
    out_$i237 := $ashr.i32(out_$i236, 4);
    call {:si_unique_call 10519} {:cexpr "__cil_tmp214"} {:si_old_unique_call 3728} boogie_si_record_i32(out_$i237);
    goto corral_source_split_7319;

  corral_source_split_7319:
    assume {:verifier.code 0} true;
    out_$i238 := $sext.i32.i64(out_$i237);
    goto corral_source_split_7320;

  corral_source_split_7320:
    assume {:verifier.code 0} true;
    out_$i239 := $mul.i64(out_$i238, 1);
    call {:si_unique_call 10518} {:cexpr "__cil_tmp215"} {:si_old_unique_call 3729} boogie_si_record_i64(out_$i239);
    goto corral_source_split_7321;

  corral_source_split_7321:
    assume {:verifier.code 0} true;
    out_$i240 := $add.i64($p2i.ref.i64(cursor_bits_lookup), out_$i239);
    call {:si_unique_call 10517} {:cexpr "__cil_tmp216"} {:si_old_unique_call 3730} boogie_si_record_i64(out_$i240);
    goto corral_source_split_7322;

  corral_source_split_7322:
    assume {:verifier.code 0} true;
    out_$p241 := $i2p.i64.ref(out_$i240);
    goto corral_source_split_7323;

  corral_source_split_7323:
    assume {:verifier.code 0} true;
    havoc out_$i242;
    call {:si_unique_call 10516} {:cexpr "__cil_tmp217"} {:si_old_unique_call 3731} boogie_si_record_i8(out_$i242);
    goto corral_source_split_7324;

  corral_source_split_7324:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10515} {:si_old_unique_call 3732} __writeb(out_$i242, out_$p215);
    out_$i243 := $add.i64(1, 1);
    goto corral_source_split_7325;

  corral_source_split_7325:
    assume {:verifier.code 0} true;
    out_$p244 := $add.ref(out_$p215, $mul.ref(out_$i243, 1));
    goto corral_source_split_7326;

  corral_source_split_7326:
    assume {:verifier.code 0} true;
    out_$i245 := $zext.i8.i32(out_$i224);
    call {:si_unique_call 10514} {:cexpr "__cil_tmp220"} {:si_old_unique_call 3733} boogie_si_record_i32(out_$i245);
    goto corral_source_split_7327;

  corral_source_split_7327:
    assume {:verifier.code 0} true;
    out_$i246 := $zext.i8.i32(out_$i222);
    call {:si_unique_call 10513} {:cexpr "__cil_tmp221"} {:si_old_unique_call 3734} boogie_si_record_i32(out_$i246);
    goto corral_source_split_7328;

  corral_source_split_7328:
    assume {:verifier.code 0} true;
    out_$i247 := $xor.i32(out_$i246, out_$i245);
    call {:si_unique_call 10512} {:cexpr "__cil_tmp222"} {:si_old_unique_call 3735} boogie_si_record_i32(out_$i247);
    goto corral_source_split_7329;

  corral_source_split_7329:
    assume {:verifier.code 0} true;
    out_$i248 := $and.i32(out_$i247, 15);
    call {:si_unique_call 10511} {:cexpr "__cil_tmp223"} {:si_old_unique_call 3736} boogie_si_record_i32(out_$i248);
    goto corral_source_split_7330;

  corral_source_split_7330:
    assume {:verifier.code 0} true;
    out_$i249 := $sext.i32.i64(out_$i248);
    goto corral_source_split_7331;

  corral_source_split_7331:
    assume {:verifier.code 0} true;
    out_$i250 := $mul.i64(out_$i249, 1);
    call {:si_unique_call 10510} {:cexpr "__cil_tmp224"} {:si_old_unique_call 3737} boogie_si_record_i64(out_$i250);
    goto corral_source_split_7332;

  corral_source_split_7332:
    assume {:verifier.code 0} true;
    out_$i251 := $add.i64($p2i.ref.i64(cursor_bits_lookup), out_$i250);
    call {:si_unique_call 10509} {:cexpr "__cil_tmp225"} {:si_old_unique_call 3738} boogie_si_record_i64(out_$i251);
    goto corral_source_split_7333;

  corral_source_split_7333:
    assume {:verifier.code 0} true;
    out_$p252 := $i2p.i64.ref(out_$i251);
    goto corral_source_split_7334;

  corral_source_split_7334:
    assume {:verifier.code 0} true;
    havoc out_$i253;
    call {:si_unique_call 10508} {:cexpr "__cil_tmp226"} {:si_old_unique_call 3739} boogie_si_record_i8(out_$i253);
    goto corral_source_split_7335;

  corral_source_split_7335:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10507} {:si_old_unique_call 3740} __writeb(out_$i253, out_$p233);
    goto corral_source_split_7336;

  corral_source_split_7336:
    assume {:verifier.code 0} true;
    out_$p254 := out_$p244;
    goto $bb45;

  $bb40:
    assume out_$i232 == 1;
    goto corral_source_split_7338;

  corral_source_split_7338:
    assume {:verifier.code 0} true;
    goto $bb42;

  $bb42:
    assume {:verifier.code 0} true;
    out_$p255 := $add.ref(out_$p215, $mul.ref(1, 1));
    goto corral_source_split_7342;

  corral_source_split_7342:
    assume {:verifier.code 0} true;
    out_$i256 := $zext.i8.i32(out_$i224);
    call {:si_unique_call 10501} {:cexpr "__cil_tmp229"} {:si_old_unique_call 3741} boogie_si_record_i32(out_$i256);
    goto corral_source_split_7343;

  corral_source_split_7343:
    assume {:verifier.code 0} true;
    out_$i257 := $zext.i8.i32(out_$i222);
    call {:si_unique_call 10500} {:cexpr "__cil_tmp230"} {:si_old_unique_call 3742} boogie_si_record_i32(out_$i257);
    goto corral_source_split_7344;

  corral_source_split_7344:
    assume {:verifier.code 0} true;
    out_$i258 := $and.i32(out_$i257, out_$i256);
    call {:si_unique_call 10499} {:cexpr "__cil_tmp231"} {:si_old_unique_call 3743} boogie_si_record_i32(out_$i258);
    goto corral_source_split_7345;

  corral_source_split_7345:
    assume {:verifier.code 0} true;
    out_$i259 := $ashr.i32(out_$i258, 4);
    call {:si_unique_call 10498} {:cexpr "__cil_tmp232"} {:si_old_unique_call 3744} boogie_si_record_i32(out_$i259);
    goto corral_source_split_7346;

  corral_source_split_7346:
    assume {:verifier.code 0} true;
    out_$i260 := $sext.i32.i64(out_$i259);
    goto corral_source_split_7347;

  corral_source_split_7347:
    assume {:verifier.code 0} true;
    out_$i261 := $mul.i64(out_$i260, 1);
    call {:si_unique_call 10497} {:cexpr "__cil_tmp233"} {:si_old_unique_call 3745} boogie_si_record_i64(out_$i261);
    goto corral_source_split_7348;

  corral_source_split_7348:
    assume {:verifier.code 0} true;
    out_$i262 := $add.i64($p2i.ref.i64(cursor_bits_lookup), out_$i261);
    call {:si_unique_call 10496} {:cexpr "__cil_tmp234"} {:si_old_unique_call 3746} boogie_si_record_i64(out_$i262);
    goto corral_source_split_7349;

  corral_source_split_7349:
    assume {:verifier.code 0} true;
    out_$p263 := $i2p.i64.ref(out_$i262);
    goto corral_source_split_7350;

  corral_source_split_7350:
    assume {:verifier.code 0} true;
    havoc out_$i264;
    call {:si_unique_call 10495} {:cexpr "__cil_tmp235"} {:si_old_unique_call 3747} boogie_si_record_i8(out_$i264);
    goto corral_source_split_7351;

  corral_source_split_7351:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10494} {:si_old_unique_call 3748} __writeb(out_$i264, out_$p215);
    out_$i265 := $add.i64(1, 1);
    goto corral_source_split_7352;

  corral_source_split_7352:
    assume {:verifier.code 0} true;
    out_$p266 := $add.ref(out_$p215, $mul.ref(out_$i265, 1));
    goto corral_source_split_7353;

  corral_source_split_7353:
    assume {:verifier.code 0} true;
    out_$i267 := $zext.i8.i32(out_$i224);
    call {:si_unique_call 10493} {:cexpr "__cil_tmp238"} {:si_old_unique_call 3749} boogie_si_record_i32(out_$i267);
    goto corral_source_split_7354;

  corral_source_split_7354:
    assume {:verifier.code 0} true;
    out_$i268 := $zext.i8.i32(out_$i222);
    call {:si_unique_call 10492} {:cexpr "__cil_tmp239"} {:si_old_unique_call 3750} boogie_si_record_i32(out_$i268);
    goto corral_source_split_7355;

  corral_source_split_7355:
    assume {:verifier.code 0} true;
    out_$i269 := $and.i32(out_$i268, out_$i267);
    call {:si_unique_call 10491} {:cexpr "__cil_tmp240"} {:si_old_unique_call 3751} boogie_si_record_i32(out_$i269);
    goto corral_source_split_7356;

  corral_source_split_7356:
    assume {:verifier.code 0} true;
    out_$i270 := $and.i32(out_$i269, 15);
    call {:si_unique_call 10490} {:cexpr "__cil_tmp241"} {:si_old_unique_call 3752} boogie_si_record_i32(out_$i270);
    goto corral_source_split_7357;

  corral_source_split_7357:
    assume {:verifier.code 0} true;
    out_$i271 := $sext.i32.i64(out_$i270);
    goto corral_source_split_7358;

  corral_source_split_7358:
    assume {:verifier.code 0} true;
    out_$i272 := $mul.i64(out_$i271, 1);
    call {:si_unique_call 10489} {:cexpr "__cil_tmp242"} {:si_old_unique_call 3753} boogie_si_record_i64(out_$i272);
    goto corral_source_split_7359;

  corral_source_split_7359:
    assume {:verifier.code 0} true;
    out_$i273 := $add.i64($p2i.ref.i64(cursor_bits_lookup), out_$i272);
    call {:si_unique_call 10488} {:cexpr "__cil_tmp243"} {:si_old_unique_call 3754} boogie_si_record_i64(out_$i273);
    goto corral_source_split_7360;

  corral_source_split_7360:
    assume {:verifier.code 0} true;
    out_$p274 := $i2p.i64.ref(out_$i273);
    goto corral_source_split_7361;

  corral_source_split_7361:
    assume {:verifier.code 0} true;
    havoc out_$i275;
    call {:si_unique_call 10487} {:cexpr "__cil_tmp244"} {:si_old_unique_call 3755} boogie_si_record_i8(out_$i275);
    goto corral_source_split_7362;

  corral_source_split_7362:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10486} {:si_old_unique_call 3756} __writeb(out_$i275, out_$p255);
    goto corral_source_split_7363;

  corral_source_split_7363:
    assume {:verifier.code 0} true;
    out_$p254 := out_$p266;
    goto $bb45;

  $bb37:
    assume out_$i230 == 1;
    goto corral_source_split_7309;

  corral_source_split_7309:
    assume {:verifier.code 0} true;
    goto $bb39;
}



implementation correct_chipset_loop_$bb1(in_$p0: ref, in_$i4: i32, in_$i5: i1, in_$i6: i32, in_$i8: i64, in_$i9: i64, in_$i10: i64, in_$p11: ref, in_$i12: i16, in_$i13: i32, in_$i14: i64, in_$i15: i64, in_$p16: ref, in_$i17: i16, in_$i18: i32, in_$i19: i1, in_$i20: i32, in_$i21: i32) returns (out_$i4: i32, out_$i5: i1, out_$i6: i32, out_$i8: i64, out_$i9: i64, out_$i10: i64, out_$p11: ref, out_$i12: i16, out_$i13: i32, out_$i14: i64, out_$i15: i64, out_$p16: ref, out_$i17: i16, out_$i18: i32, out_$i19: i1, out_$i20: i32, out_$i21: i32)
{

  entry:
    out_$i4, out_$i5, out_$i6, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i15, out_$p16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := in_$i4, in_$i5, in_$i6, in_$i8, in_$i9, in_$i10, in_$p11, in_$i12, in_$i13, in_$i14, in_$i15, in_$p16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21;
    goto $bb1, exit;

  exit:
    return;

  $bb1:
    assume {:verifier.code 0} true;
    goto corral_source_split_7902;

  corral_source_split_7902:
    assume {:verifier.code 0} true;
    goto $bb2;

  $bb2:
    assume {:verifier.code 0} true;
    out_$i5 := $sge.i32(out_$i4, 0);
    goto corral_source_split_7904;

  corral_source_split_7904:
    assume {:verifier.code 0} true;
    out_$i6 := out_$i4;
    assume true;
    goto $bb3;

  $bb3:
    assume out_$i5 == 1;
    goto corral_source_split_7906;

  corral_source_split_7906:
    assume {:verifier.code 0} true;
    goto $bb5;

  $bb5:
    assume {:verifier.code 0} true;
    out_$i8 := $sext.i32.i64(out_$i4);
    goto corral_source_split_7910;

  corral_source_split_7910:
    assume {:verifier.code 0} true;
    out_$i9 := $mul.i64(out_$i8, 40);
    call {:si_unique_call 10532} {:cexpr "__cil_tmp10"} {:si_old_unique_call 4040} boogie_si_record_i64(out_$i9);
    goto corral_source_split_7911;

  corral_source_split_7911:
    assume {:verifier.code 0} true;
    out_$i10 := $add.i64($p2i.ref.i64(aty_chips), out_$i9);
    call {:si_unique_call 10531} {:cexpr "__cil_tmp11"} {:si_old_unique_call 4041} boogie_si_record_i64(out_$i10);
    goto corral_source_split_7912;

  corral_source_split_7912:
    assume {:verifier.code 0} true;
    out_$p11 := $i2p.i64.ref(out_$i10);
    goto corral_source_split_7913;

  corral_source_split_7913:
    assume {:verifier.code 0} true;
    havoc out_$i12;
    call {:si_unique_call 10530} {:cexpr "__cil_tmp12"} {:si_old_unique_call 4042} boogie_si_record_i16(out_$i12);
    goto corral_source_split_7914;

  corral_source_split_7914:
    assume {:verifier.code 0} true;
    out_$i13 := $zext.i16.i32(out_$i12);
    call {:si_unique_call 10529} {:cexpr "__cil_tmp13"} {:si_old_unique_call 4043} boogie_si_record_i32(out_$i13);
    goto corral_source_split_7915;

  corral_source_split_7915:
    assume {:verifier.code 0} true;
    out_$i14 := $p2i.ref.i64(in_$p0);
    call {:si_unique_call 10528} {:cexpr "__cil_tmp14"} {:si_old_unique_call 4044} boogie_si_record_i64(out_$i14);
    goto corral_source_split_7916;

  corral_source_split_7916:
    assume {:verifier.code 0} true;
    out_$i15 := $add.i64(out_$i14, 1068);
    call {:si_unique_call 10527} {:cexpr "__cil_tmp15"} {:si_old_unique_call 4045} boogie_si_record_i64(out_$i15);
    goto corral_source_split_7917;

  corral_source_split_7917:
    assume {:verifier.code 0} true;
    out_$p16 := $i2p.i64.ref(out_$i15);
    goto corral_source_split_7918;

  corral_source_split_7918:
    assume {:verifier.code 0} true;
    havoc out_$i17;
    call {:si_unique_call 10526} {:cexpr "__cil_tmp16"} {:si_old_unique_call 4046} boogie_si_record_i16(out_$i17);
    goto corral_source_split_7919;

  corral_source_split_7919:
    assume {:verifier.code 0} true;
    out_$i18 := $zext.i16.i32(out_$i17);
    call {:si_unique_call 10525} {:cexpr "__cil_tmp17"} {:si_old_unique_call 4047} boogie_si_record_i32(out_$i18);
    goto corral_source_split_7920;

  corral_source_split_7920:
    assume {:verifier.code 0} true;
    out_$i19 := $eq.i32(out_$i18, out_$i13);
    goto corral_source_split_7921;

  corral_source_split_7921:
    assume {:verifier.code 0} true;
    out_$i20 := out_$i4;
    assume true;
    goto $bb8;

  $bb8:
    assume !(out_$i19 == 1);
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 0} true;
    out_$i21 := $sub.i32(out_$i4, 1);
    call {:si_unique_call 10524} {:cexpr "i"} {:si_old_unique_call 4048} boogie_si_record_i32(out_$i21);
    goto corral_source_split_7928;

  corral_source_split_7928:
    assume {:verifier.code 0} true;
    out_$i4 := out_$i21;
    goto corral_source_split_7928_dummy;

  corral_source_split_7928_dummy:
    call {:si_unique_call 10533} {:si_old_unique_call 1} out_$i4, out_$i5, out_$i6, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i15, out_$p16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21 := correct_chipset_loop_$bb1(in_$p0, out_$i4, out_$i5, out_$i6, out_$i8, out_$i9, out_$i10, out_$p11, out_$i12, out_$i13, out_$i14, out_$i15, out_$p16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21);
    return;
}



implementation atyfb_setcolreg_loop_$bb62(in_$p10: ref, in_$i40: i32, in_$i41: i32, in_$i42: i32, in_$i150: i32, in_$i151: i32, in_$i152: i1, in_$i153: i32, in_$i154: i32) returns (out_$i151: i32, out_$i152: i1, out_$i153: i32, out_$i154: i32)
{

  entry:
    out_$i151, out_$i152, out_$i153, out_$i154 := in_$i151, in_$i152, in_$i153, in_$i154;
    goto $bb62, exit;

  exit:
    return;

  $bb62:
    assume {:verifier.code 0} true;
    goto corral_source_split_8570;

  corral_source_split_8570:
    assume {:verifier.code 0} true;
    goto $bb63;

  $bb63:
    assume {:verifier.code 0} true;
    out_$i152 := $slt.i32(out_$i151, 8);
    goto corral_source_split_8572;

  corral_source_split_8572:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb64;

  $bb64:
    assume out_$i152 == 1;
    goto corral_source_split_8574;

  corral_source_split_8574:
    assume {:verifier.code 0} true;
    goto $bb66;

  $bb66:
    assume {:verifier.code 0} true;
    out_$i153 := $add.i32(in_$i150, out_$i151);
    call {:si_unique_call 10536} {:cexpr "__cil_tmp96"} {:si_old_unique_call 4303} boogie_si_record_i32(out_$i153);
    goto corral_source_split_8578;

  corral_source_split_8578:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10535} {:si_old_unique_call 4304} aty_st_pal(out_$i153, in_$i40, in_$i41, in_$i42, in_$p10);
    goto corral_source_split_8579;

  corral_source_split_8579:
    assume {:verifier.code 0} true;
    out_$i154 := $add.i32(out_$i151, 1);
    call {:si_unique_call 10534} {:cexpr "i"} {:si_old_unique_call 4305} boogie_si_record_i32(out_$i154);
    goto corral_source_split_8580;

  corral_source_split_8580:
    assume {:verifier.code 0} true;
    out_$i151 := out_$i154;
    goto corral_source_split_8580_dummy;

  corral_source_split_8580_dummy:
    call {:si_unique_call 10537} {:si_old_unique_call 1} out_$i151, out_$i152, out_$i153, out_$i154 := atyfb_setcolreg_loop_$bb62(in_$p10, in_$i40, in_$i41, in_$i42, in_$i150, out_$i151, out_$i152, out_$i153, out_$i154);
    return;
}



implementation atyfb_imageblit_loop_$bb111(in_$p7: ref, in_$p323: ref, in_$i324: i32, in_$i325: i1, in_$i326: i32, in_$i327: i32, in_$p328: ref) returns (out_$p323: ref, out_$i324: i32, out_$i325: i1, out_$i326: i32, out_$i327: i32, out_$p328: ref)
{

  entry:
    out_$p323, out_$i324, out_$i325, out_$i326, out_$i327, out_$p328 := in_$p323, in_$i324, in_$i325, in_$i326, in_$i327, in_$p328;
    goto $bb111, exit;

  exit:
    return;

  $bb111:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9388;

  corral_source_split_9388:
    assume {:verifier.code 0} true;
    goto $bb112;

  $bb112:
    assume {:verifier.code 0} true;
    out_$i325 := $ne.i32(out_$i324, 0);
    goto corral_source_split_9390;

  corral_source_split_9390:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb113;

  $bb113:
    assume out_$i325 == 1;
    goto corral_source_split_9392;

  corral_source_split_9392:
    assume {:verifier.code 0} true;
    goto $bb115;

  $bb115:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10542} {:si_old_unique_call 4691} wait_for_fifo(1, in_$p7);
    goto corral_source_split_9396;

  corral_source_split_9396:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10540} {:si_old_unique_call 4692} out_$i326 := __le32_to_cpup(out_$p323);
    call {:si_unique_call 10541} {:cexpr "tmp___8"} {:si_old_unique_call 4693} boogie_si_record_i32(out_$i326);
    goto corral_source_split_9397;

  corral_source_split_9397:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10539} {:si_old_unique_call 4694} aty_st_le32(512, out_$i326, in_$p7);
    goto corral_source_split_9398;

  corral_source_split_9398:
    assume {:verifier.code 0} true;
    out_$i327 := $sub.i32(out_$i324, 1);
    call {:si_unique_call 10538} {:cexpr "dwords"} {:si_old_unique_call 4695} boogie_si_record_i32(out_$i327);
    goto corral_source_split_9399;

  corral_source_split_9399:
    assume {:verifier.code 0} true;
    out_$p328 := $add.ref(out_$p323, $mul.ref(1, 4));
    goto corral_source_split_9400;

  corral_source_split_9400:
    assume {:verifier.code 0} true;
    out_$p323, out_$i324 := out_$p328, out_$i327;
    goto corral_source_split_9400_dummy;

  corral_source_split_9400_dummy:
    call {:si_unique_call 10543} {:si_old_unique_call 1} out_$p323, out_$i324, out_$i325, out_$i326, out_$i327, out_$p328 := atyfb_imageblit_loop_$bb111(in_$p7, out_$p323, out_$i324, out_$i325, out_$i326, out_$i327, out_$p328);
    return;
}



implementation atyfb_imageblit_loop_$bb74(in_$p1: ref, in_$p2: ref, in_$p7: ref, in_$i237: i32, in_$i238: i32, in_$i239: i32, in_$p240: ref, in_$i241: i32, in_$i242: i1, in_$p243: ref, in_$i244: i32, in_$i245: i32, in_$i246: i32, in_$i247: i32, in_$p248: ref, in_$i249: i32, in_$p250: ref, in_$i251: i1, in_$i257: i1, in_$i258: i32, in_$i259: i32, in_$i260: i32, in_$p261: ref, in_$i262: i32, in_$i252: i32, in_$i253: i32, in_$i254: i32, in_$p255: ref, in_$i256: i32, in_$i268: i32, in_$i269: i32, in_$i270: i32, in_$i271: i32, in_$p272: ref, in_$i273: i32, in_$i274: i1, in_$i275: i32, in_$i276: i32, in_$i277: i32, in_$p278: ref, in_$i279: i32, in_$i280: i8, in_$i281: i32, in_$i282: i32, in_$i283: i32, in_$i284: i32, in_$i285: i8, in_$i286: i32, in_$i287: i32, in_$i288: i8, in_$i289: i32, in_$i290: i1, in_$i291: i32, in_$i292: i32, in_$i293: i32, in_$i294: i32, in_$i295: i32, in_$i296: i1, in_$i297: i1, in_$i298: i32, in_$p299: ref, in_$i300: i1, in_$i301: i64, in_$i302: i64, in_$p303: ref, in_$i304: i32, in_$i305: i32, in_$i306: i32, in_$i307: i32, in_$i308: i32, in_$i309: i32, in_$p310: ref, in_$i311: i32, in_$i312: i32, in_$i313: i32, in_$p314: ref, in_$i263: i32, in_$i264: i32, in_$i265: i32, in_$p266: ref, in_$i267: i32, in_$i315: i32) returns (out_$i237: i32, out_$i238: i32, out_$i239: i32, out_$p240: ref, out_$i241: i32, out_$i242: i1, out_$p243: ref, out_$i244: i32, out_$i245: i32, out_$i246: i32, out_$i247: i32, out_$p248: ref, out_$i249: i32, out_$p250: ref, out_$i251: i1, out_$i257: i1, out_$i258: i32, out_$i259: i32, out_$i260: i32, out_$p261: ref, out_$i262: i32, out_$i252: i32, out_$i253: i32, out_$i254: i32, out_$p255: ref, out_$i256: i32, out_$i268: i32, out_$i269: i32, out_$i270: i32, out_$i271: i32, out_$p272: ref, out_$i273: i32, out_$i274: i1, out_$i275: i32, out_$i276: i32, out_$i277: i32, out_$p278: ref, out_$i279: i32, out_$i280: i8, out_$i281: i32, out_$i282: i32, out_$i283: i32, out_$i284: i32, out_$i285: i8, out_$i286: i32, out_$i287: i32, out_$i288: i8, out_$i289: i32, out_$i290: i1, out_$i291: i32, out_$i292: i32, out_$i293: i32, out_$i294: i32, out_$i295: i32, out_$i296: i1, out_$i297: i1, out_$i298: i32, out_$p299: ref, out_$i300: i1, out_$i301: i64, out_$i302: i64, out_$p303: ref, out_$i304: i32, out_$i305: i32, out_$i306: i32, out_$i307: i32, out_$i308: i32, out_$i309: i32, out_$p310: ref, out_$i311: i32, out_$i312: i32, out_$i313: i32, out_$p314: ref, out_$i263: i32, out_$i264: i32, out_$i265: i32, out_$p266: ref, out_$i267: i32, out_$i315: i32)
{

  entry:
    out_$i237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250, out_$i251, out_$i257, out_$i258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312, out_$i313, out_$p314, out_$i263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i315 := in_$i237, in_$i238, in_$i239, in_$p240, in_$i241, in_$i242, in_$p243, in_$i244, in_$i245, in_$i246, in_$i247, in_$p248, in_$i249, in_$p250, in_$i251, in_$i257, in_$i258, in_$i259, in_$i260, in_$p261, in_$i262, in_$i252, in_$i253, in_$i254, in_$p255, in_$i256, in_$i268, in_$i269, in_$i270, in_$i271, in_$p272, in_$i273, in_$i274, in_$i275, in_$i276, in_$i277, in_$p278, in_$i279, in_$i280, in_$i281, in_$i282, in_$i283, in_$i284, in_$i285, in_$i286, in_$i287, in_$i288, in_$i289, in_$i290, in_$i291, in_$i292, in_$i293, in_$i294, in_$i295, in_$i296, in_$i297, in_$i298, in_$p299, in_$i300, in_$i301, in_$i302, in_$p303, in_$i304, in_$i305, in_$i306, in_$i307, in_$i308, in_$i309, in_$p310, in_$i311, in_$i312, in_$i313, in_$p314, in_$i263, in_$i264, in_$i265, in_$p266, in_$i267, in_$i315;
    goto $bb74, exit;

  exit:
    return;

  $bb74:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9296;

  corral_source_split_9296:
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    out_$i242 := $ne.i32(out_$i241, 0);
    goto corral_source_split_9298;

  corral_source_split_9298:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb76;

  $bb76:
    assume out_$i242 == 1;
    goto corral_source_split_9300;

  corral_source_split_9300:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto corral_source_split_9304;

  corral_source_split_9304:
    assume {:verifier.code 0} true;
    out_$p243 := $bitcast.ref.ref(in_$p2);
    goto corral_source_split_9305;

  corral_source_split_9305:
    assume {:verifier.code 0} true;
    out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250 := out_$i237, out_$i238, 0, out_$i239, out_$p240, out_$i241, in_$p2;
    goto $bb80;

  $bb80:
    call {:si_unique_call 10583} out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250, out_$i251, out_$i257, out_$i258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312, out_$i313, out_$p314 := atyfb_imageblit_loop_$bb80(in_$p1, out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250, out_$i251, out_$i257, out_$i258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312, out_$i313, out_$p314);
    goto $bb80_last;

  $bb80_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9307;

  corral_source_split_9307:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    out_$i251 := $slt.i32(out_$i246, 4);
    goto corral_source_split_9309;

  corral_source_split_9309:
    assume {:verifier.code 0} true;
    out_$i252, out_$i253, out_$i254, out_$p255, out_$i256 := out_$i244, out_$i245, out_$i247, out_$p248, out_$i249;
    assume true;
    goto $bb82, $bb83;

  $bb83:
    assume !(out_$i251 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9314;

  corral_source_split_9314:
    assume {:verifier.code 0} true;
    out_$i263, out_$i264, out_$i265, out_$p266, out_$i267 := out_$i252, out_$i253, out_$i254, out_$p255, out_$i256;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9320;

  corral_source_split_9320:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10582} {:si_old_unique_call 4665} wait_for_fifo(1, in_$p7);
    goto corral_source_split_9321;

  corral_source_split_9321:
    assume {:verifier.code 0} true;
    havoc out_$i315;
    call {:si_unique_call 10581} {:cexpr "__cil_tmp188"} {:si_old_unique_call 4666} boogie_si_record_i32(out_$i315);
    goto corral_source_split_9322;

  corral_source_split_9322:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10580} {:si_old_unique_call 4667} aty_st_le32(512, out_$i315, in_$p7);
    goto corral_source_split_9323;

  corral_source_split_9323:
    assume {:verifier.code 0} true;
    out_$i237, out_$i238, out_$i239, out_$p240, out_$i241 := out_$i263, out_$i264, out_$i265, out_$p266, out_$i267;
    goto corral_source_split_9323_dummy;

  corral_source_split_9323_dummy:
    call {:si_unique_call 10602} {:si_old_unique_call 1} out_$i237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250, out_$i251, out_$i257, out_$i258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312, out_$i313, out_$p314, out_$i263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i315 := atyfb_imageblit_loop_$bb74(in_$p1, in_$p2, in_$p7, out_$i237, out_$i238, out_$i239, out_$p240, out_$i241, out_$i242, out_$p243, out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250, out_$i251, out_$i257, out_$i258, out_$i259, out_$i260, out_$p261, out_$i262, out_$i252, out_$i253, out_$i254, out_$p255, out_$i256, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312, out_$i313, out_$p314, out_$i263, out_$i264, out_$i265, out_$p266, out_$i267, out_$i315);
    return;

  $bb82:
    assume out_$i251 == 1;
    goto corral_source_split_9311;

  corral_source_split_9311:
    assume {:verifier.code 0} true;
    out_$i257 := $ne.i32(out_$i249, 0);
    goto corral_source_split_9312;

  corral_source_split_9312:
    assume {:verifier.code 0} true;
    out_$i258, out_$i259, out_$i260, out_$p261, out_$i262 := out_$i244, out_$i245, out_$i247, out_$p248, out_$i249;
    assume true;
    goto $bb84, $bb85;

  $bb85:
    assume !(out_$i257 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9318;

  corral_source_split_9318:
    assume {:verifier.code 0} true;
    out_$i263, out_$i264, out_$i265, out_$p266, out_$i267 := out_$i258, out_$i259, out_$i260, out_$p261, out_$i262;
    goto $bb87;

  $bb84:
    assume out_$i257 == 1;
    goto corral_source_split_9316;

  corral_source_split_9316:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273 := 7, out_$i244, out_$i245, out_$i247, out_$p248, out_$i249;
    goto $bb89;

  $bb89:
    call {:si_unique_call 10585} out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312 := atyfb_imageblit_loop_$bb89(in_$p1, out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273, out_$i274, out_$i275, out_$i276, out_$i277, out_$p278, out_$i279, out_$i280, out_$i281, out_$i282, out_$i283, out_$i284, out_$i285, out_$i286, out_$i287, out_$i288, out_$i289, out_$i290, out_$i291, out_$i292, out_$i293, out_$i294, out_$i295, out_$i296, out_$i297, out_$i298, out_$p299, out_$i300, out_$i301, out_$i302, out_$p303, out_$i304, out_$i305, out_$i306, out_$i307, out_$i308, out_$i309, out_$p310, out_$i311, out_$i312);
    goto $bb89_last;

  $bb89_last:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9325;

  corral_source_split_9325:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    out_$i274 := $sge.i32(out_$i268, 0);
    goto corral_source_split_9327;

  corral_source_split_9327:
    assume {:verifier.code 0} true;
    out_$i275, out_$i276, out_$i277, out_$p278, out_$i279 := out_$i269, out_$i270, out_$i271, out_$p272, out_$i273;
    assume true;
    goto $bb91, $bb92;

  $bb92:
    assume !(out_$i274 == 1);
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9331;

  corral_source_split_9331:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    out_$i313 := $add.i32(out_$i246, 1);
    call {:si_unique_call 10584} {:cexpr "byte_id_in_dword"} {:si_old_unique_call 4677} boogie_si_record_i32(out_$i313);
    goto corral_source_split_9346;

  corral_source_split_9346:
    assume {:verifier.code 0} true;
    out_$p314 := $add.ref(out_$p250, $mul.ref(1, 1));
    goto corral_source_split_9347;

  corral_source_split_9347:
    assume {:verifier.code 0} true;
    out_$i244, out_$i245, out_$i246, out_$i247, out_$p248, out_$i249, out_$p250 := out_$i275, out_$i276, out_$i313, out_$i277, out_$p278, out_$i279, out_$p314;
    assume false;
    return;

  $bb91:
    assume out_$i274 == 1;
    goto corral_source_split_9329;

  corral_source_split_9329:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    havoc out_$i280;
    call {:si_unique_call 10601} {:cexpr "__cil_tmp174"} {:si_old_unique_call 4668} boogie_si_record_i8(out_$i280);
    goto corral_source_split_9333;

  corral_source_split_9333:
    assume {:verifier.code 0} true;
    out_$i281 := $zext.i8.i32(out_$i280);
    call {:si_unique_call 10600} {:cexpr "__cil_tmp175"} {:si_old_unique_call 4669} boogie_si_record_i32(out_$i281);
    goto corral_source_split_9334;

  corral_source_split_9334:
    assume {:verifier.code 0} true;
    out_$i282 := $ashr.i32(out_$i281, out_$i269);
    call {:si_unique_call 10599} {:cexpr "__cil_tmp176"} {:si_old_unique_call 4670} boogie_si_record_i32(out_$i282);
    goto corral_source_split_9335;

  corral_source_split_9335:
    assume {:verifier.code 0} true;
    out_$i283 := $and.i32(out_$i282, 1);
    call {:si_unique_call 10598} {:cexpr "__cil_tmp177"} {:si_old_unique_call 4671} boogie_si_record_i32(out_$i283);
    goto corral_source_split_9336;

  corral_source_split_9336:
    assume {:verifier.code 0} true;
    out_$i284 := $shl.i32(out_$i283, out_$i268);
    call {:si_unique_call 10597} {:cexpr "__cil_tmp178"} {:si_old_unique_call 4672} boogie_si_record_i32(out_$i284);
    goto corral_source_split_9337;

  corral_source_split_9337:
    assume {:verifier.code 0} true;
    havoc out_$i285;
    call {:si_unique_call 10596} {:cexpr "__cil_tmp179"} {:si_old_unique_call 4673} boogie_si_record_i8(out_$i285);
    goto corral_source_split_9338;

  corral_source_split_9338:
    assume {:verifier.code 0} true;
    out_$i286 := $zext.i8.i32(out_$i285);
    call {:si_unique_call 10595} {:cexpr "__cil_tmp180"} {:si_old_unique_call 4674} boogie_si_record_i32(out_$i286);
    goto corral_source_split_9339;

  corral_source_split_9339:
    assume {:verifier.code 0} true;
    out_$i287 := $or.i32(out_$i286, out_$i284);
    call {:si_unique_call 10594} {:cexpr "__cil_tmp181"} {:si_old_unique_call 4675} boogie_si_record_i32(out_$i287);
    goto corral_source_split_9340;

  corral_source_split_9340:
    assume {:verifier.code 0} true;
    out_$i288 := $trunc.i32.i8(out_$i287);
    goto corral_source_split_9341;

  corral_source_split_9341:
    assume {:verifier.code 0} true;
    goto corral_source_split_9342;

  corral_source_split_9342:
    assume {:verifier.code 0} true;
    out_$i289 := $add.i32(out_$i270, 1);
    call {:si_unique_call 10593} {:cexpr "mult24"} {:si_old_unique_call 4676} boogie_si_record_i32(out_$i289);
    goto corral_source_split_9343;

  corral_source_split_9343:
    assume {:verifier.code 0} true;
    out_$i290 := $eq.i32(out_$i289, 3);
    goto corral_source_split_9344;

  corral_source_split_9344:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb95, $bb96;

  $bb96:
    assume !(out_$i290 == 1);
    assume {:verifier.code 0} true;
    out_$i293, out_$i294, out_$i295 := out_$i269, out_$i289, out_$i271;
    goto $bb97;

  $bb97:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9353;

  corral_source_split_9353:
    assume {:verifier.code 0} true;
    out_$i296 := $slt.i32(out_$i293, 0);
    goto corral_source_split_9354;

  corral_source_split_9354:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb98, $bb99;

  $bb99:
    assume !(out_$i296 == 1);
    goto corral_source_split_9358;

  corral_source_split_9358:
    assume {:verifier.code 0} true;
    out_$i297 := $eq.i32(out_$i295, 0);
    goto corral_source_split_9359;

  corral_source_split_9359:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb101, $bb102;

  $bb102:
    assume !(out_$i297 == 1);
    assume {:verifier.code 0} true;
    out_$i307, out_$i308, out_$i309, out_$p310, out_$i311 := out_$i268, out_$i293, out_$i295, out_$p272, out_$i273;
    goto $bb106;

  $bb106:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb107;

  $bb107:
    assume {:verifier.code 0} true;
    out_$i312 := $sub.i32(out_$i307, 1);
    call {:si_unique_call 10586} {:cexpr "outbit"} {:si_old_unique_call 4684} boogie_si_record_i32(out_$i312);
    goto corral_source_split_9375;

  corral_source_split_9375:
    assume {:verifier.code 0} true;
    out_$i268, out_$i269, out_$i270, out_$i271, out_$p272, out_$i273 := out_$i312, out_$i308, out_$i294, out_$i309, out_$p310, out_$i311;
    assume false;
    return;

  $bb101:
    assume out_$i297 == 1;
    goto corral_source_split_9365;

  corral_source_split_9365:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb100:
    assume {:verifier.code 0} true;
    out_$i298 := $sub.i32(out_$i273, 1);
    call {:si_unique_call 10590} {:cexpr "src_bytes"} {:si_old_unique_call 4680} boogie_si_record_i32(out_$i298);
    goto corral_source_split_9361;

  corral_source_split_9361:
    assume {:verifier.code 0} true;
    out_$p299 := $add.ref(out_$p272, $mul.ref(1, 1));
    goto corral_source_split_9362;

  corral_source_split_9362:
    assume {:verifier.code 0} true;
    out_$i300 := $eq.i32(out_$i295, 0);
    goto corral_source_split_9363;

  corral_source_split_9363:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb103, $bb104;

  $bb104:
    assume !(out_$i300 == 1);
    assume {:verifier.code 0} true;
    out_$i305, out_$i306 := out_$i268, out_$i295;
    goto $bb105;

  $bb105:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto corral_source_split_9373;

  corral_source_split_9373:
    assume {:verifier.code 0} true;
    out_$i307, out_$i308, out_$i309, out_$p310, out_$i311 := out_$i305, 7, out_$i306, out_$p299, out_$i298;
    goto $bb106;

  $bb103:
    assume out_$i300 == 1;
    goto corral_source_split_9367;

  corral_source_split_9367:
    assume {:verifier.code 0} true;
    out_$i301 := $p2i.ref.i64(in_$p1);
    call {:si_unique_call 10589} {:cexpr "__cil_tmp182"} {:si_old_unique_call 4681} boogie_si_record_i64(out_$i301);
    goto corral_source_split_9368;

  corral_source_split_9368:
    assume {:verifier.code 0} true;
    out_$i302 := $add.i64(out_$i301, 8);
    call {:si_unique_call 10588} {:cexpr "__cil_tmp183"} {:si_old_unique_call 4682} boogie_si_record_i64(out_$i302);
    goto corral_source_split_9369;

  corral_source_split_9369:
    assume {:verifier.code 0} true;
    out_$p303 := $i2p.i64.ref(out_$i302);
    goto corral_source_split_9370;

  corral_source_split_9370:
    assume {:verifier.code 0} true;
    havoc out_$i304;
    call {:si_unique_call 10587} {:cexpr "__cil_tmp184"} {:si_old_unique_call 4683} boogie_si_record_i32(out_$i304);
    goto corral_source_split_9371;

  corral_source_split_9371:
    assume {:verifier.code 0} true;
    out_$i305, out_$i306 := 0, out_$i304;
    goto $bb105;

  $bb98:
    assume out_$i296 == 1;
    goto corral_source_split_9356;

  corral_source_split_9356:
    assume {:verifier.code 0} true;
    goto $bb100;

  $bb95:
    assume out_$i290 == 1;
    goto corral_source_split_9349;

  corral_source_split_9349:
    assume {:verifier.code 0} true;
    out_$i291 := $sub.i32(out_$i269, 1);
    call {:si_unique_call 10592} {:cexpr "inbit"} {:si_old_unique_call 4678} boogie_si_record_i32(out_$i291);
    goto corral_source_split_9350;

  corral_source_split_9350:
    assume {:verifier.code 0} true;
    out_$i292 := $sub.i32(out_$i271, 1);
    call {:si_unique_call 10591} {:cexpr "width___0"} {:si_old_unique_call 4679} boogie_si_record_i32(out_$i292);
    goto corral_source_split_9351;

  corral_source_split_9351:
    assume {:verifier.code 0} true;
    out_$i293, out_$i294, out_$i295 := out_$i291, 0, out_$i292;
    goto $bb97;
}



implementation aty_waitforvblank_loop_$bb19(in_$p2: ref, in_$p6: ref, in_$i13: i32, in_$i42: i64, in_$p43: ref, in_$i44: i64, in_$i45: i64, in_$p46: ref, in_$i47: i32, in_$i48: i1, in_$i49: i64, in_$p51: ref, in_$i52: i32, in_$i53: i1, in_$i54: i64, in_$i55: i1, in_$i56: i64) returns (out_$i42: i64, out_$p43: ref, out_$i44: i64, out_$i45: i64, out_$p46: ref, out_$i47: i32, out_$i48: i1, out_$i49: i64, out_$p51: ref, out_$i52: i32, out_$i53: i1, out_$i54: i64, out_$i55: i1, out_$i56: i64)
{

  entry:
    out_$i42, out_$p43, out_$i44, out_$i45, out_$p46, out_$i47, out_$i48, out_$i49, out_$p51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56 := in_$i42, in_$p43, in_$i44, in_$i45, in_$p46, in_$i47, in_$i48, in_$i49, in_$p51, in_$i52, in_$i53, in_$i54, in_$i55, in_$i56;
    goto $bb19, exit;

  exit:
    return;

  $bb19:
    assume {:verifier.code 0} true;
    goto corral_source_split_9544;

  corral_source_split_9544:
    assume {:verifier.code 0} true;
    goto $bb20;

  $bb20:
    assume {:verifier.code 0} true;
    out_$p43 := $bitcast.ref.ref(in_$p6);
    goto corral_source_split_9546;

  corral_source_split_9546:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10611} {:si_old_unique_call 4732} prepare_to_wait(out_$p43, in_$p2, 1);
    goto corral_source_split_9547;

  corral_source_split_9547:
    assume {:verifier.code 0} true;
    out_$i44 := $p2i.ref.i64(in_$p6);
    call {:si_unique_call 10610} {:cexpr "__cil_tmp28"} {:si_old_unique_call 4733} boogie_si_record_i64(out_$i44);
    goto corral_source_split_9548;

  corral_source_split_9548:
    assume {:verifier.code 0} true;
    out_$i45 := $add.i64(out_$i44, 40);
    call {:si_unique_call 10609} {:cexpr "__cil_tmp29"} {:si_old_unique_call 4734} boogie_si_record_i64(out_$i45);
    goto corral_source_split_9549;

  corral_source_split_9549:
    assume {:verifier.code 0} true;
    out_$p46 := $i2p.i64.ref(out_$i45);
    goto corral_source_split_9550;

  corral_source_split_9550:
    assume {:verifier.code 0} true;
    havoc out_$i47;
    call {:si_unique_call 10608} {:cexpr "__cil_tmp30"} {:si_old_unique_call 4735} boogie_si_record_i32(out_$i47);
    goto corral_source_split_9551;

  corral_source_split_9551:
    assume {:verifier.code 0} true;
    out_$i48 := $ne.i32(in_$i13, out_$i47);
    goto corral_source_split_9552;

  corral_source_split_9552:
    assume {:verifier.code 0} true;
    out_$i49 := out_$i42;
    assume true;
    goto $bb22;

  $bb22:
    assume !(out_$i48 == 1);
    assume {:verifier.code 0} true;
    goto $bb24;

  $bb24:
    call {:si_unique_call 10607} {:si_old_unique_call 4737} out_$p51 := devirtbounce.12(0, current_task);
    goto corral_source_split_9560;

  corral_source_split_9560:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10605} {:si_old_unique_call 4738} out_$i52 := signal_pending(out_$p51);
    call {:si_unique_call 10606} {:cexpr "tmp___9"} {:si_old_unique_call 4739} boogie_si_record_i32(out_$i52);
    goto corral_source_split_9561;

  corral_source_split_9561:
    assume {:verifier.code 0} true;
    out_$i53 := $ne.i32(out_$i52, 0);
    goto corral_source_split_9562;

  corral_source_split_9562:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26;

  $bb26:
    assume !(out_$i53 == 1);
    goto corral_source_split_9566;

  corral_source_split_9566:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10603} {:si_old_unique_call 4740} out_$i54 := schedule_timeout(out_$i42);
    call {:si_unique_call 10604} {:cexpr "__ret"} {:si_old_unique_call 4741} boogie_si_record_i64(out_$i54);
    goto corral_source_split_9567;

  corral_source_split_9567:
    assume {:verifier.code 0} true;
    out_$i55 := $ne.i64(out_$i54, 0);
    goto corral_source_split_9568;

  corral_source_split_9568:
    assume {:verifier.code 0} true;
    out_$i56 := out_$i54;
    assume true;
    goto $bb28;

  $bb28:
    assume out_$i55 == 1;
    assume {:verifier.code 0} true;
    goto $bb30;

  $bb30:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    out_$i42 := out_$i54;
    goto $bb31_dummy;

  $bb31_dummy:
    call {:si_unique_call 10612} {:si_old_unique_call 1} out_$i42, out_$p43, out_$i44, out_$i45, out_$p46, out_$i47, out_$i48, out_$i49, out_$p51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56 := aty_waitforvblank_loop_$bb19(in_$p2, in_$p6, in_$i13, out_$i42, out_$p43, out_$i44, out_$i45, out_$p46, out_$i47, out_$i48, out_$i49, out_$p51, out_$i52, out_$i53, out_$i54, out_$i55, out_$i56);
    return;
}



implementation main_loop_$bb5(in_$i2: i32, in_$i3: i32, in_$i4: i1, in_$i5: i1, in_$i6: i32, in_$i7: i1, in_$i8: i32, in_$i9: i1, in_$i10: i1, in_$i11: i1, in_$i12: i1, in_$i13: i1, in_$i14: i1, in_$i15: i1, in_$i16: i1, in_$i17: i1, in_$i18: i1, in_$i19: i1, in_$i20: i1, in_$i21: i1, in_$i22: i1, in_$i23: i1, in_$i24: i1, in_$i25: i1, in_$i26: i32, in_$i28: i32, in_$i29: i32, in_$i30: i32, in_$i31: i32, in_$i32: i32, in_$i33: i32, in_$i34: i32, in_$i35: i32, in_$i36: i32, in_$i37: i32, in_$i38: i1, in_$i39: i32, in_$i40: i32, in_$i41: i32, in_$i42: i1, in_$i43: i32, in_$i44: i32, in_$i45: i32, in_$i46: i32, in_$i47: i32, in_$i27: i32) returns (out_$i2: i32, out_$i3: i32, out_$i4: i1, out_$i5: i1, out_$i6: i32, out_$i7: i1, out_$i8: i32, out_$i9: i1, out_$i10: i1, out_$i11: i1, out_$i12: i1, out_$i13: i1, out_$i14: i1, out_$i15: i1, out_$i16: i1, out_$i17: i1, out_$i18: i1, out_$i19: i1, out_$i20: i1, out_$i21: i1, out_$i22: i1, out_$i23: i1, out_$i24: i1, out_$i25: i1, out_$i26: i32, out_$i28: i32, out_$i29: i32, out_$i30: i32, out_$i31: i32, out_$i32: i32, out_$i33: i32, out_$i34: i32, out_$i35: i32, out_$i36: i32, out_$i37: i32, out_$i38: i1, out_$i39: i32, out_$i40: i32, out_$i41: i32, out_$i42: i1, out_$i43: i32, out_$i44: i32, out_$i45: i32, out_$i46: i32, out_$i47: i32, out_$i27: i32)
{

  entry:
    out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i27 := in_$i2, in_$i3, in_$i4, in_$i5, in_$i6, in_$i7, in_$i8, in_$i9, in_$i10, in_$i11, in_$i12, in_$i13, in_$i14, in_$i15, in_$i16, in_$i17, in_$i18, in_$i19, in_$i20, in_$i21, in_$i22, in_$i23, in_$i24, in_$i25, in_$i26, in_$i28, in_$i29, in_$i30, in_$i31, in_$i32, in_$i33, in_$i34, in_$i35, in_$i36, in_$i37, in_$i38, in_$i39, in_$i40, in_$i41, in_$i42, in_$i43, in_$i44, in_$i45, in_$i46, in_$i47, in_$i27;
    goto $bb5, exit;

  exit:
    return;

  $bb5:
    assume {:verifier.code 0} true;
    goto corral_source_split_10033;

  corral_source_split_10033:
    assume {:verifier.code 0} true;
    goto $bb6;

  $bb6:
    assume {:verifier.code 1} true;
    call {:si_unique_call 10617} {:si_old_unique_call 5006} out_$i3 := __VERIFIER_nondet_int();
    call {:si_unique_call 10618} {:cexpr "smack:ext:__VERIFIER_nondet_int"} {:si_old_unique_call 5007} boogie_si_record_i32(out_$i3);
    call {:si_unique_call 10619} {:cexpr "tmp___9"} {:si_old_unique_call 5008} boogie_si_record_i32(out_$i3);
    goto corral_source_split_10035;

  corral_source_split_10035:
    assume {:verifier.code 0} true;
    out_$i4 := $ne.i32(out_$i3, 0);
    goto corral_source_split_10036;

  corral_source_split_10036:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb7, $bb8;

  $bb8:
    assume !(out_$i4 == 1);
    goto corral_source_split_10040;

  corral_source_split_10040:
    assume {:verifier.code 0} true;
    out_$i5 := $eq.i32(out_$i2, 0);
    goto corral_source_split_10041;

  corral_source_split_10041:
    assume {:verifier.code 0} true;
    out_$i6 := $zext.i1.i32(out_$i5);
    call {:si_unique_call 10620} {:cexpr "__cil_tmp27"} {:si_old_unique_call 5009} boogie_si_record_i32(out_$i6);
    goto corral_source_split_10042;

  corral_source_split_10042:
    assume {:verifier.code 0} true;
    out_$i7 := $ne.i32(out_$i6, 0);
    goto corral_source_split_10043;

  corral_source_split_10043:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb11;

  $bb11:
    assume !(out_$i7 == 1);
    goto corral_source_split_10050;

  corral_source_split_10050:
    assume {:verifier.code 0} true;
    goto $bb12;

  $bb12:
    assume {:verifier.code 0} true;
    goto $bb9;

  $bb9:
    assume {:verifier.code 1} true;
    call {:si_unique_call 10614} {:si_old_unique_call 5010} out_$i8 := __VERIFIER_nondet_int();
    call {:si_unique_call 10615} {:cexpr "smack:ext:__VERIFIER_nondet_int"} {:si_old_unique_call 5011} boogie_si_record_i32(out_$i8);
    call {:si_unique_call 10616} {:cexpr "tmp___8"} {:si_old_unique_call 5012} boogie_si_record_i32(out_$i8);
    goto corral_source_split_10045;

  corral_source_split_10045:
    assume {:verifier.code 0} true;
    out_$i9 := $eq.i32(out_$i8, 0);
    goto corral_source_split_10046;

  corral_source_split_10046:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb14, $bb15;

  $bb15:
    assume !(out_$i9 == 1);
    goto corral_source_split_10054;

  corral_source_split_10054:
    assume {:verifier.code 0} true;
    out_$i10 := $eq.i32(out_$i8, 1);
    goto corral_source_split_10055;

  corral_source_split_10055:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb17, $bb18;

  $bb18:
    assume !(out_$i10 == 1);
    goto corral_source_split_10061;

  corral_source_split_10061:
    assume {:verifier.code 0} true;
    out_$i11 := $eq.i32(out_$i8, 2);
    goto corral_source_split_10062;

  corral_source_split_10062:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb20, $bb21;

  $bb21:
    assume !(out_$i11 == 1);
    goto corral_source_split_10068;

  corral_source_split_10068:
    assume {:verifier.code 0} true;
    out_$i12 := $eq.i32(out_$i8, 3);
    goto corral_source_split_10069;

  corral_source_split_10069:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb23, $bb24;

  $bb24:
    assume !(out_$i12 == 1);
    goto corral_source_split_10075;

  corral_source_split_10075:
    assume {:verifier.code 0} true;
    out_$i13 := $eq.i32(out_$i8, 4);
    goto corral_source_split_10076;

  corral_source_split_10076:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb26, $bb27;

  $bb27:
    assume !(out_$i13 == 1);
    goto corral_source_split_10082;

  corral_source_split_10082:
    assume {:verifier.code 0} true;
    out_$i14 := $eq.i32(out_$i8, 5);
    goto corral_source_split_10083;

  corral_source_split_10083:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb29, $bb30;

  $bb30:
    assume !(out_$i14 == 1);
    goto corral_source_split_10089;

  corral_source_split_10089:
    assume {:verifier.code 0} true;
    out_$i15 := $eq.i32(out_$i8, 6);
    goto corral_source_split_10090;

  corral_source_split_10090:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb32, $bb33;

  $bb33:
    assume !(out_$i15 == 1);
    goto corral_source_split_10096;

  corral_source_split_10096:
    assume {:verifier.code 0} true;
    out_$i16 := $eq.i32(out_$i8, 7);
    goto corral_source_split_10097;

  corral_source_split_10097:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb35, $bb36;

  $bb36:
    assume !(out_$i16 == 1);
    goto corral_source_split_10103;

  corral_source_split_10103:
    assume {:verifier.code 0} true;
    out_$i17 := $eq.i32(out_$i8, 8);
    goto corral_source_split_10104;

  corral_source_split_10104:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb38, $bb39;

  $bb39:
    assume !(out_$i17 == 1);
    goto corral_source_split_10110;

  corral_source_split_10110:
    assume {:verifier.code 0} true;
    out_$i18 := $eq.i32(out_$i8, 9);
    goto corral_source_split_10111;

  corral_source_split_10111:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb41, $bb42;

  $bb42:
    assume !(out_$i18 == 1);
    goto corral_source_split_10115;

  corral_source_split_10115:
    assume {:verifier.code 0} true;
    out_$i19 := $eq.i32(out_$i8, 10);
    goto corral_source_split_10116;

  corral_source_split_10116:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb44, $bb45;

  $bb45:
    assume !(out_$i19 == 1);
    goto corral_source_split_10122;

  corral_source_split_10122:
    assume {:verifier.code 0} true;
    out_$i20 := $eq.i32(out_$i8, 11);
    goto corral_source_split_10123;

  corral_source_split_10123:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb47, $bb48;

  $bb48:
    assume !(out_$i20 == 1);
    goto corral_source_split_10129;

  corral_source_split_10129:
    assume {:verifier.code 0} true;
    out_$i21 := $eq.i32(out_$i8, 12);
    goto corral_source_split_10130;

  corral_source_split_10130:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb50, $bb51;

  $bb51:
    assume !(out_$i21 == 1);
    goto corral_source_split_10136;

  corral_source_split_10136:
    assume {:verifier.code 0} true;
    out_$i22 := $eq.i32(out_$i8, 13);
    goto corral_source_split_10137;

  corral_source_split_10137:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb53, $bb54;

  $bb54:
    assume !(out_$i22 == 1);
    goto corral_source_split_10143;

  corral_source_split_10143:
    assume {:verifier.code 0} true;
    out_$i23 := $eq.i32(out_$i8, 14);
    goto corral_source_split_10144;

  corral_source_split_10144:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb56, $bb57;

  $bb57:
    assume !(out_$i23 == 1);
    goto corral_source_split_10150;

  corral_source_split_10150:
    assume {:verifier.code 0} true;
    out_$i24 := $eq.i32(out_$i8, 15);
    goto corral_source_split_10151;

  corral_source_split_10151:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb59, $bb60;

  $bb60:
    assume !(out_$i24 == 1);
    goto corral_source_split_10157;

  corral_source_split_10157:
    assume {:verifier.code 0} true;
    out_$i25 := $eq.i32(out_$i8, 16);
    goto corral_source_split_10158;

  corral_source_split_10158:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb62, $bb63;

  $bb63:
    assume !(out_$i25 == 1);
    goto corral_source_split_10164;

  corral_source_split_10164:
    assume {:verifier.code 0} true;
    goto $bb65;

  $bb65:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb69:
    assume {:verifier.code 0} true;
    assume {:verifier.code 0} true;
    goto $bb77;

  $bb77:
    assume {:verifier.code 0} true;
    goto $bb78;

  $bb78:
    assume {:verifier.code 0} true;
    goto $bb79;

  $bb79:
    assume {:verifier.code 0} true;
    goto $bb80;

  $bb80:
    assume {:verifier.code 0} true;
    goto $bb81;

  $bb81:
    assume {:verifier.code 0} true;
    goto $bb82;

  $bb82:
    assume {:verifier.code 0} true;
    goto $bb83;

  $bb83:
    assume {:verifier.code 0} true;
    goto $bb84;

  $bb84:
    assume {:verifier.code 0} true;
    goto $bb85;

  $bb85:
    assume {:verifier.code 0} true;
    goto $bb86;

  $bb86:
    assume {:verifier.code 0} true;
    goto $bb87;

  $bb87:
    assume {:verifier.code 0} true;
    goto $bb88;

  $bb88:
    assume {:verifier.code 0} true;
    goto $bb89;

  $bb89:
    assume {:verifier.code 0} true;
    goto $bb90;

  $bb90:
    assume {:verifier.code 0} true;
    goto $bb91;

  $bb91:
    assume {:verifier.code 0} true;
    goto $bb92;

  $bb92:
    assume {:verifier.code 0} true;
    goto $bb93;

  $bb93:
    assume {:verifier.code 0} true;
    goto $bb94;

  $bb94:
    assume {:verifier.code 0} true;
    out_$i2 := out_$i27;
    goto $bb94_dummy;

  $bb94_dummy:
    call {:si_unique_call 10640} {:si_old_unique_call 1} out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i27 := main_loop_$bb5(out_$i2, out_$i3, out_$i4, out_$i5, out_$i6, out_$i7, out_$i8, out_$i9, out_$i10, out_$i11, out_$i12, out_$i13, out_$i14, out_$i15, out_$i16, out_$i17, out_$i18, out_$i19, out_$i20, out_$i21, out_$i22, out_$i23, out_$i24, out_$i25, out_$i26, out_$i28, out_$i29, out_$i30, out_$i31, out_$i32, out_$i33, out_$i34, out_$i35, out_$i36, out_$i37, out_$i38, out_$i39, out_$i40, out_$i41, out_$i42, out_$i43, out_$i44, out_$i45, out_$i46, out_$i47, out_$i27);
    return;

  $bb62:
    assume out_$i25 == 1;
    goto corral_source_split_10162;

  corral_source_split_10162:
    assume {:verifier.code 0} true;
    goto $bb64;

  $bb64:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10639} {:cexpr "LDV_IN_INTERRUPT"} {:si_old_unique_call 5027} boogie_si_record_i32(2);
    goto corral_source_split_10166;

  corral_source_split_10166:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10638} {:si_old_unique_call 5028} out_$i47 := aty_irq($u0, $u10);
    goto corral_source_split_10167;

  corral_source_split_10167:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10637} {:cexpr "LDV_IN_INTERRUPT"} {:si_old_unique_call 5029} boogie_si_record_i32(1);
    goto corral_source_split_10168;

  corral_source_split_10168:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb59:
    assume out_$i24 == 1;
    goto corral_source_split_10155;

  corral_source_split_10155:
    assume {:verifier.code 0} true;
    goto $bb61;

  $bb61:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10636} {:si_old_unique_call 5026} out_$i46 := atyfb_reboot_notify($u9, $u1, $u10);
    goto corral_source_split_10160;

  corral_source_split_10160:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb56:
    assume out_$i23 == 1;
    goto corral_source_split_10148;

  corral_source_split_10148:
    assume {:verifier.code 0} true;
    goto $bb58;

  $bb58:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10635} {:si_old_unique_call 5025} out_$i45 := atyfb_pci_resume($u7);
    goto corral_source_split_10153;

  corral_source_split_10153:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb53:
    assume out_$i22 == 1;
    goto corral_source_split_10141;

  corral_source_split_10141:
    assume {:verifier.code 0} true;
    goto $bb55;

  $bb55:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10634} {:si_old_unique_call 5024} out_$i44 := atyfb_pci_suspend($u7, $u0);
    goto corral_source_split_10146;

  corral_source_split_10146:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb50:
    assume out_$i21 == 1;
    goto corral_source_split_10134;

  corral_source_split_10134:
    assume {:verifier.code 0} true;
    goto $bb52;

  $bb52:
    assume {:verifier.code 0} true;
    out_$i38 := $eq.i32(out_$i2, 0);
    goto corral_source_split_10139;

  corral_source_split_10139:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb70, $bb71;

  $bb71:
    assume !(out_$i38 == 1);
    assume {:verifier.code 0} true;
    out_$i43 := out_$i2;
    goto $bb76;

  $bb76:
    assume {:verifier.code 0} true;
    goto corral_source_split_10182;

  corral_source_split_10182:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i43;
    goto $bb69;

  $bb70:
    assume out_$i38 == 1;
    goto corral_source_split_10170;

  corral_source_split_10170:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10633} {:si_old_unique_call 5030} out_$i39 := atyfb_pci_probe($u7, $u8);
    goto corral_source_split_10171;

  corral_source_split_10171:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10632} {:cexpr "res_atyfb_pci_probe_44"} {:si_old_unique_call 5031} boogie_si_record_i32(out_$i39);
    goto corral_source_split_10172;

  corral_source_split_10172:
    assume {:verifier.code 0} true;
    havoc out_$i40;
    goto corral_source_split_10173;

  corral_source_split_10173:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10631} {:si_old_unique_call 5032} ldv_check_return_value(out_$i40);
    goto corral_source_split_10174;

  corral_source_split_10174:
    assume {:verifier.code 0} true;
    havoc out_$i41;
    goto corral_source_split_10175;

  corral_source_split_10175:
    assume {:verifier.code 0} true;
    out_$i42 := $ne.i32(out_$i41, 0);
    goto corral_source_split_10176;

  corral_source_split_10176:
    assume {:verifier.code 0} true;
    assume true;
    goto $bb73;

  $bb73:
    assume !(out_$i42 == 1);
    assume {:verifier.code 0} true;
    goto $bb75;

  $bb75:
    assume {:verifier.code 0} true;
    out_$i43 := 0;
    goto $bb76;

  $bb47:
    assume out_$i20 == 1;
    goto corral_source_split_10127;

  corral_source_split_10127:
    assume {:verifier.code 0} true;
    goto $bb49;

  $bb49:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10630} {:si_old_unique_call 5023} out_$i37 := aty_bl_update_status($u6);
    goto corral_source_split_10132;

  corral_source_split_10132:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb44:
    assume out_$i19 == 1;
    goto corral_source_split_10120;

  corral_source_split_10120:
    assume {:verifier.code 0} true;
    goto $bb46;

  $bb46:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10629} {:si_old_unique_call 5022} out_$i36 := aty_bl_get_brightness($u6);
    goto corral_source_split_10125;

  corral_source_split_10125:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb41:
    assume out_$i18 == 1;
    goto corral_source_split_10113;

  corral_source_split_10113:
    assume {:verifier.code 0} true;
    goto $bb43;

  $bb43:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10628} {:si_old_unique_call 5021} out_$i35 := atyfb_sync($u4);
    goto corral_source_split_10118;

  corral_source_split_10118:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb38:
    assume out_$i17 == 1;
    goto corral_source_split_10108;

  corral_source_split_10108:
    assume {:verifier.code 0} true;
    goto $bb40;

  $bb40:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb35:
    assume out_$i16 == 1;
    goto corral_source_split_10101;

  corral_source_split_10101:
    assume {:verifier.code 0} true;
    goto $bb37;

  $bb37:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10627} {:si_old_unique_call 5020} out_$i34 := atyfb_ioctl($u4, $u0, $u1);
    goto corral_source_split_10106;

  corral_source_split_10106:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb32:
    assume out_$i15 == 1;
    goto corral_source_split_10094;

  corral_source_split_10094:
    assume {:verifier.code 0} true;
    goto $bb34;

  $bb34:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10626} {:si_old_unique_call 5019} out_$i33 := atyfb_blank($u0, $u4);
    goto corral_source_split_10099;

  corral_source_split_10099:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb29:
    assume out_$i14 == 1;
    goto corral_source_split_10087;

  corral_source_split_10087:
    assume {:verifier.code 0} true;
    goto $bb31;

  $bb31:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10625} {:si_old_unique_call 5018} out_$i32 := atyfb_pan_display($u5, $u4);
    goto corral_source_split_10092;

  corral_source_split_10092:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb26:
    assume out_$i13 == 1;
    goto corral_source_split_10080;

  corral_source_split_10080:
    assume {:verifier.code 0} true;
    goto $bb28;

  $bb28:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10624} {:si_old_unique_call 5017} out_$i31 := atyfb_setcolreg($u0, $u0, $u0, $u0, $u0, $u4);
    goto corral_source_split_10085;

  corral_source_split_10085:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb23:
    assume out_$i12 == 1;
    goto corral_source_split_10073;

  corral_source_split_10073:
    assume {:verifier.code 0} true;
    goto $bb25;

  $bb25:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10623} {:si_old_unique_call 5016} out_$i30 := atyfb_set_par($u4);
    goto corral_source_split_10078;

  corral_source_split_10078:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb20:
    assume out_$i11 == 1;
    goto corral_source_split_10066;

  corral_source_split_10066:
    assume {:verifier.code 0} true;
    goto $bb22;

  $bb22:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10622} {:si_old_unique_call 5015} out_$i29 := atyfb_check_var($u5, $u4);
    goto corral_source_split_10071;

  corral_source_split_10071:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb17:
    assume out_$i10 == 1;
    goto corral_source_split_10059;

  corral_source_split_10059:
    assume {:verifier.code 0} true;
    goto $bb19;

  $bb19:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10621} {:si_old_unique_call 5014} out_$i28 := atyfb_release($u4, $u0);
    goto corral_source_split_10064;

  corral_source_split_10064:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb14:
    assume out_$i9 == 1;
    goto corral_source_split_10052;

  corral_source_split_10052:
    assume {:verifier.code 0} true;
    goto $bb16;

  $bb16:
    assume {:verifier.code 0} true;
    call {:si_unique_call 10613} {:si_old_unique_call 5013} out_$i26 := atyfb_open($u4, $u0);
    goto corral_source_split_10057;

  corral_source_split_10057:
    assume {:verifier.code 0} true;
    out_$i27 := out_$i2;
    goto $bb69;

  $bb7:
    assume out_$i4 == 1;
    goto corral_source_split_10038;

  corral_source_split_10038:
    assume {:verifier.code 0} true;
    goto $bb9;
}


